soot.Main.main([Ljava/lang/String;)V#Invoke(STATIC,Lsoot/Main;,v,()Lsoot/Main;)#0
soot.Main.v()Lsoot/Main;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.G.<clinit>()V#New(Lsoot/G;,0)#0
soot.G.<clinit>()V#Dup(1,0)#1
soot.G.<clinit>()V#Invoke(SPECIAL,Lsoot/G;,<init>,()V)#2
soot.G.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.G.<init>()V#Invoke(SPECIAL,Lsoot/Singletons;,<init>,()V)#1
soot.Singletons.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.Singletons.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
soot.Singletons.<init>()V#New(Lsoot/Singletons$Global;,0)#3
soot.Singletons.<init>()V#Dup(1,0)#4
soot.Singletons.<init>()V#LocalLoad(Ljava/lang/Object;,0)#5
soot.Singletons.<init>()V#Constant(L;,null)#6
soot.Singletons.<init>()V#Invoke(SPECIAL,Lsoot/Singletons$Global;,<init>,(Lsoot/Singletons;Lsoot/Singletons$Global;)V)#7
soot.Singletons$Global.<init>(Lsoot/Singletons;Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons$Global.<init>(Lsoot/Singletons;Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.Singletons$Global.<init>(Lsoot/Singletons;Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Singletons$Global;,<init>,(Lsoot/Singletons;)V)#2
soot.Singletons$Global.<init>(Lsoot/Singletons;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons$Global.<init>(Lsoot/Singletons;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.Singletons$Global.<init>(Lsoot/Singletons;)V#Put(Lsoot/Singletons;,NONSTATIC,Lsoot/Singletons$Global;,this$0)#2
soot.Singletons$Global.<init>(Lsoot/Singletons;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.Singletons$Global.<init>(Lsoot/Singletons;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#4
soot.Singletons$Global.<init>(Lsoot/Singletons;)V#Return(V)#5
soot.Singletons$Global.<init>(Lsoot/Singletons;Lsoot/Singletons$Global;)V#Return(V)#3
soot.Singletons.<init>()V#Put(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.<init>()V#Return(V)#9
soot.G.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
soot.G.<init>()V#Get(Ljava/io/PrintStream;,STATIC,Ljava/lang/System;,out)#3
soot.G.<init>()V#Put(Ljava/io/PrintStream;,NONSTATIC,Lsoot/G;,out)#4
soot.G.<init>()V#LocalLoad(Ljava/lang/Object;,0)#5
soot.G.<init>()V#Constant(J,0)#6
soot.G.<init>()V#Put(J,NONSTATIC,Lsoot/G;,coffi_BasicBlock_ids)#7
soot.G.<init>()V#LocalLoad(Ljava/lang/Object;,0)#8
soot.G.<init>()V#New(Lsoot/coffi/Utf8_Enumeration;,0)#9
soot.G.<init>()V#Dup(1,0)#10
soot.G.<init>()V#Invoke(SPECIAL,Lsoot/coffi/Utf8_Enumeration;,<init>,()V)#11
soot.coffi.Utf8_Enumeration.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Utf8_Enumeration.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.coffi.Utf8_Enumeration.<init>()V#Return(V)#2
soot.G.<init>()V#Put(Lsoot/coffi/Utf8_Enumeration;,NONSTATIC,Lsoot/G;,coffi_CONSTANT_Utf8_info_e1)#12
soot.G.<init>()V#LocalLoad(Ljava/lang/Object;,0)#13
soot.G.<init>()V#New(Lsoot/coffi/Utf8_Enumeration;,0)#14
soot.G.<init>()V#Dup(1,0)#15
soot.G.<init>()V#Invoke(SPECIAL,Lsoot/coffi/Utf8_Enumeration;,<init>,()V)#16
soot.G.<init>()V#Put(Lsoot/coffi/Utf8_Enumeration;,NONSTATIC,Lsoot/G;,coffi_CONSTANT_Utf8_info_e2)#17
soot.G.<init>()V#LocalLoad(Ljava/lang/Object;,0)#18
soot.G.<init>()V#Constant(I,0)#19
soot.G.<init>()V#Put(I,NONSTATIC,Lsoot/G;,SETNodeLabel_uniqueId)#20
soot.G.<init>()V#LocalLoad(Ljava/lang/Object;,0)#21
soot.G.<init>()V#New(Ljava/util/HashMap;,0)#22
soot.G.<init>()V#Dup(1,0)#23
soot.G.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#24
soot.G.<init>()V#Put(Ljava/util/HashMap;,NONSTATIC,Lsoot/G;,SETBasicBlock_binding)#25
soot.G.<init>()V#LocalLoad(Ljava/lang/Object;,0)#26
soot.G.<init>()V#Constant(L;,null)#27
soot.G.<init>()V#Put(Lsoot/jimple/toolkits/pointer/util/NativeHelper;,NONSTATIC,Lsoot/G;,NativeHelper_helper)#28
soot.G.<init>()V#LocalLoad(Ljava/lang/Object;,0)#29
soot.G.<init>()V#New(Ljava/util/HashMap;,0)#30
soot.G.<init>()V#Dup(1,0)#31
soot.G.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#32
soot.G.<init>()V#Put(Ljava/util/HashMap;,NONSTATIC,Lsoot/G;,Parm_pairToElement)#33
soot.G.<init>()V#LocalLoad(Ljava/lang/Object;,0)#34
soot.G.<init>()V#Constant(I,0)#35
soot.G.<init>()V#Put(I,NONSTATIC,Lsoot/G;,SparkNativeHelper_tempVar)#36
soot.G.<init>()V#LocalLoad(Ljava/lang/Object;,0)#37
soot.G.<init>()V#Constant(I,0)#38
soot.G.<init>()V#Put(I,NONSTATIC,Lsoot/G;,PaddleNativeHelper_tempVar)#39
soot.G.<init>()V#LocalLoad(Ljava/lang/Object;,0)#40
soot.G.<init>()V#Constant(I,0)#41
soot.G.<init>()V#Put(Z,NONSTATIC,Lsoot/G;,PointsToSetInternal_warnedAlready)#42
soot.G.<init>()V#LocalLoad(Ljava/lang/Object;,0)#43
soot.G.<init>()V#New(Ljava/util/HashMap;,0)#44
soot.G.<init>()V#Dup(1,0)#45
soot.G.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#46
soot.G.<init>()V#Put(Ljava/util/HashMap;,NONSTATIC,Lsoot/G;,MethodPAG_methodToPag)#47
soot.G.<init>()V#LocalLoad(Ljava/lang/Object;,0)#48
soot.G.<init>()V#New(Ljava/util/HashSet;,0)#49
soot.G.<init>()V#Dup(1,0)#50
soot.G.<init>()V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#51
soot.G.<init>()V#Put(Ljava/util/Set;,NONSTATIC,Lsoot/G;,MethodRWSet_allGlobals)#52
soot.G.<init>()V#LocalLoad(Ljava/lang/Object;,0)#53
soot.G.<init>()V#New(Ljava/util/HashSet;,0)#54
soot.G.<init>()V#Dup(1,0)#55
soot.G.<init>()V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#56
soot.G.<init>()V#Put(Ljava/util/Set;,NONSTATIC,Lsoot/G;,MethodRWSet_allFields)#57
soot.G.<init>()V#LocalLoad(Ljava/lang/Object;,0)#58
soot.G.<init>()V#Constant(I,0)#59
soot.G.<init>()V#Put(I,NONSTATIC,Lsoot/G;,GeneralConstObject_counter)#60
soot.G.<init>()V#LocalLoad(Ljava/lang/Object;,0)#61
soot.G.<init>()V#Constant(L;,null)#62
soot.G.<init>()V#Put(Lsoot/jimple/toolkits/pointer/UnionFactory;,NONSTATIC,Lsoot/G;,Union_factory)#63
soot.G.<init>()V#LocalLoad(Ljava/lang/Object;,0)#64
soot.G.<init>()V#New(Ljava/util/HashMap;,0)#65
soot.G.<init>()V#Dup(1,0)#66
soot.G.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#67
soot.G.<init>()V#Put(Ljava/util/HashMap;,NONSTATIC,Lsoot/G;,Array2ndDimensionSymbol_pool)#68
soot.G.<init>()V#LocalLoad(Ljava/lang/Object;,0)#69
soot.G.<init>()V#New(Lsoot/AbstractUnitAllMapTo;,0)#70
soot.G.<init>()V#Dup(1,0)#71
soot.G.<init>()V#Constant(Ljava/lang/String;,"<unnamed>")#72
soot.G.<init>()V#Invoke(SPECIAL,Lsoot/AbstractUnitAllMapTo;,<init>,(Ljava/lang/Object;)V)#73
soot.AbstractUnitAllMapTo.<init>(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.AbstractUnitAllMapTo.<init>(Ljava/lang/Object;)V#Invoke(SPECIAL,Ljava/util/AbstractMap;,<init>,()V)#1
soot.AbstractUnitAllMapTo.<init>(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.AbstractUnitAllMapTo.<init>(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.AbstractUnitAllMapTo.<init>(Ljava/lang/Object;)V#Put(Ljava/lang/Object;,NONSTATIC,Lsoot/AbstractUnitAllMapTo;,dest)#4
soot.AbstractUnitAllMapTo.<init>(Ljava/lang/Object;)V#Return(V)#5
soot.G.<init>()V#Invoke(STATIC,Ljava/util/Collections;,unmodifiableMap,(Ljava/util/Map;)Ljava/util/Map;)#74
soot.G.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/G;,AbstractUnit_allMapToUnnamed)#75
soot.G.<init>()V#LocalLoad(Ljava/lang/Object;,0)#76
soot.G.<init>()V#New(Ljava/util/ArrayList;,0)#77
soot.G.<init>()V#Dup(1,0)#78
soot.G.<init>()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#79
soot.G.<init>()V#Put(Ljava/util/List;,NONSTATIC,Lsoot/G;,Timer_outstandingTimers)#80
soot.G.<init>()V#LocalLoad(Ljava/lang/Object;,0)#81
soot.G.<init>()V#New(Lsoot/Timer;,0)#82
soot.G.<init>()V#Dup(1,0)#83
soot.G.<init>()V#Constant(Ljava/lang/String;,"gc")#84
soot.G.<init>()V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#85
soot.Timer.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Timer.<init>(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.Timer.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.Timer.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.Timer.<init>(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/Timer;,name)#4
soot.Timer.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.Timer.<init>(Ljava/lang/String;)V#Constant(J,0)#6
soot.Timer.<init>(Ljava/lang/String;)V#Put(J,NONSTATIC,Lsoot/Timer;,duration)#7
soot.Timer.<init>(Ljava/lang/String;)V#Return(V)#8
soot.G.<init>()V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/G;,Timer_forcedGarbageCollectionTimer)#86
soot.G.<init>()V#LocalLoad(Ljava/lang/Object;,0)#87
soot.G.<init>()V#New(Ljava/util/HashMap;,0)#88
soot.G.<init>()V#Dup(1,0)#89
soot.G.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#90
soot.G.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/G;,ClassHierarchy_classHierarchyMap)#91
soot.G.<init>()V#LocalLoad(Ljava/lang/Object;,0)#92
soot.G.<init>()V#New(Ljava/util/HashMap;,0)#93
soot.G.<init>()V#Dup(1,0)#94
soot.G.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#95
soot.G.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/G;,MethodContext_map)#96
soot.G.<init>()V#LocalLoad(Ljava/lang/Object;,0)#97
soot.G.<init>()V#New(Lsoot/shimple/DefaultShimpleFactory;,0)#98
soot.G.<init>()V#Dup(1,0)#99
soot.G.<init>()V#Invoke(SPECIAL,Lsoot/shimple/DefaultShimpleFactory;,<init>,()V)#100
soot.shimple.DefaultShimpleFactory.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.shimple.DefaultShimpleFactory.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.shimple.DefaultShimpleFactory.<init>()V#Return(V)#2
soot.G.<init>()V#Put(Lsoot/shimple/ShimpleFactory;,NONSTATIC,Lsoot/G;,shimpleFactory)#101
soot.G.<init>()V#LocalLoad(Ljava/lang/Object;,0)#102
soot.G.<init>()V#New(Ljava/util/ArrayList;,0)#103
soot.G.<init>()V#Dup(1,0)#104
soot.G.<init>()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#105
soot.G.<init>()V#Put(Ljava/util/ArrayList;,NONSTATIC,Lsoot/G;,SootClassNeedsDavaSuperHandlerClass)#106
soot.G.<init>()V#LocalLoad(Ljava/lang/Object;,0)#107
soot.G.<init>()V#New(Ljava/util/ArrayList;,0)#108
soot.G.<init>()V#Dup(1,0)#109
soot.G.<init>()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#110
soot.G.<init>()V#Put(Ljava/util/ArrayList;,NONSTATIC,Lsoot/G;,SootMethodsAdded)#111
soot.G.<init>()V#LocalLoad(Ljava/lang/Object;,0)#112
soot.G.<init>()V#New(Ljava/util/ArrayList;,0)#113
soot.G.<init>()V#Dup(1,0)#114
soot.G.<init>()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#115
soot.G.<init>()V#Put(Ljava/util/ArrayList;,NONSTATIC,Lsoot/G;,ASTMetricsData)#116
soot.G.<init>()V#Return(V)#117
soot.G.<clinit>()V#Put(Lsoot/G;,STATIC,Lsoot/G;,instance)#3
soot.G.<clinit>()V#Return(V)#4
soot.G.v()Lsoot/G;#Get(Lsoot/G;,STATIC,Lsoot/G;,instance)#0
soot.G.v()Lsoot/G;#Return(Ljava/lang/Object;)#1
soot.Main.v()Lsoot/Main;#Invoke(VIRTUAL,Lsoot/G;,soot_Main,()Lsoot/Main;)#1
soot.Singletons.soot_Main()Lsoot/Main;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_Main()Lsoot/Main;#Get(Lsoot/Main;,NONSTATIC,Lsoot/Singletons;,instance_soot_Main)#1
soot.Singletons.soot_Main()Lsoot/Main;#Constant(L;,null)#2
soot.Singletons.soot_Main()Lsoot/Main;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_Main()Lsoot/Main;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_Main()Lsoot/Main;#New(Lsoot/Main;,0)#5
soot.Singletons.soot_Main()Lsoot/Main;#Dup(1,0)#6
soot.Singletons.soot_Main()Lsoot/Main;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_Main()Lsoot/Main;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_Main()Lsoot/Main;#Invoke(SPECIAL,Lsoot/Main;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.Main.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Main.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.Main.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.Main.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@9222d89f)#3
soot.Main.<init>(Lsoot/Singletons$Global;)V#Invoke(VIRTUAL,Ljava/lang/Class;,getPackage,()Ljava/lang/Package;)#4
soot.Main.<init>(Lsoot/Singletons$Global;)V#Invoke(VIRTUAL,Ljava/lang/Package;,getImplementationVersion,()Ljava/lang/String;)#5
soot.Main.<init>(Lsoot/Singletons$Global;)V#Constant(L;,null)#6
soot.Main.<init>(Lsoot/Singletons$Global;)V#ConditionalBranch(Ljava/lang/Object;,ne,10)#7
soot.Main.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"trunk")#8
soot.Main.<init>(Lsoot/Singletons$Global;)V#Goto(13)#9
soot.Main.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/Main;,versionString)#13
soot.Main.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#14
soot.Main.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#15
soot.Main.<init>(Lsoot/Singletons$Global;)V#New([Ljava/lang/String;,1)#16
soot.Main.<init>(Lsoot/Singletons$Global;)V#Put([Ljava/lang/String;,NONSTATIC,Lsoot/Main;,cmdLineArgs)#17
soot.Main.<init>(Lsoot/Singletons$Global;)V#Return(V)#18
soot.Singletons.soot_Main()Lsoot/Main;#Put(Lsoot/Main;,NONSTATIC,Lsoot/Singletons;,instance_soot_Main)#10
soot.Singletons.soot_Main()Lsoot/Main;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_Main()Lsoot/Main;#Get(Lsoot/Main;,NONSTATIC,Lsoot/Singletons;,instance_soot_Main)#12
soot.Singletons.soot_Main()Lsoot/Main;#Return(Ljava/lang/Object;)#13
soot.Main.v()Lsoot/Main;#Return(Ljava/lang/Object;)#2
soot.Main.main([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#1
soot.Main.main([Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/Main;,run,([Ljava/lang/String;)V)#2
soot.Main.run([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Main.run([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.Main.run([Ljava/lang/String;)V#Put([Ljava/lang/String;,NONSTATIC,Lsoot/Main;,cmdLineArgs)#2
soot.Main.run([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.Main.run([Ljava/lang/String;)V#New(Ljava/util/Date;,0)#4
soot.Main.run([Ljava/lang/String;)V#Dup(1,0)#5
soot.Main.run([Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/util/Date;,<init>,()V)#6
soot.Main.run([Ljava/lang/String;)V#Put(Ljava/util/Date;,NONSTATIC,Lsoot/Main;,start)#7
soot.Main.run([Ljava/lang/String;)V#Invoke(STATIC,Lsoot/Timers;,v,()Lsoot/Timers;)#8
soot.Timers.v()Lsoot/Timers;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.Timers.v()Lsoot/Timers;#Invoke(VIRTUAL,Lsoot/G;,soot_Timers,()Lsoot/Timers;)#1
soot.Singletons.soot_Timers()Lsoot/Timers;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_Timers()Lsoot/Timers;#Get(Lsoot/Timers;,NONSTATIC,Lsoot/Singletons;,instance_soot_Timers)#1
soot.Singletons.soot_Timers()Lsoot/Timers;#Constant(L;,null)#2
soot.Singletons.soot_Timers()Lsoot/Timers;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_Timers()Lsoot/Timers;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_Timers()Lsoot/Timers;#New(Lsoot/Timers;,0)#5
soot.Singletons.soot_Timers()Lsoot/Timers;#Dup(1,0)#6
soot.Singletons.soot_Timers()Lsoot/Timers;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_Timers()Lsoot/Timers;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_Timers()Lsoot/Timers;#Invoke(SPECIAL,Lsoot/Timers;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#3
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#4
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"copies")#5
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#6
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,copiesTimer)#7
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#9
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#10
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"defs")#11
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#12
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,defsTimer)#13
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#14
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#15
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#16
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"uses")#17
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#18
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,usesTimer)#19
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#20
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#21
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#22
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"live")#23
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#24
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,liveTimer)#25
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#26
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#27
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#28
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"split")#29
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#30
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,splitTimer)#31
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#32
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#33
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#34
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"pack")#35
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#36
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,packTimer)#37
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#38
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#39
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#40
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"cleanup1")#41
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#42
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,cleanup1Timer)#43
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#44
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#45
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#46
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"cleanup2")#47
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#48
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,cleanup2Timer)#49
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#50
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#51
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#52
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"conversion")#53
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#54
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,conversionTimer)#55
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#56
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#57
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#58
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"cleanupAlgorithm")#59
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#60
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,cleanupAlgorithmTimer)#61
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#62
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#63
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#64
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"graphTimer")#65
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#66
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,graphTimer)#67
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#68
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#69
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#70
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"assignTimer")#71
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#72
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,assignTimer)#73
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#74
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#75
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#76
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"resolveTimer")#77
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#78
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,resolveTimer)#79
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#80
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#81
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#82
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"totalTimer")#83
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#84
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,totalTimer)#85
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#86
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#87
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#88
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"splitPhase1")#89
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#90
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,splitPhase1Timer)#91
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#92
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#93
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#94
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"splitPhase2")#95
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#96
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,splitPhase2Timer)#97
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#98
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#99
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#100
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"usePhase1")#101
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#102
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,usePhase1Timer)#103
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#104
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#105
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#106
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"usePhase2")#107
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#108
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,usePhase2Timer)#109
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#110
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#111
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#112
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"usePhase3")#113
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#114
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,usePhase3Timer)#115
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#116
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#117
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#118
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"defsSetup")#119
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#120
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,defsSetupTimer)#121
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#122
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#123
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#124
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"defsAnalysis")#125
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#126
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,defsAnalysisTimer)#127
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#128
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#129
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#130
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"defsPost")#131
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#132
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,defsPostTimer)#133
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#134
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#135
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#136
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"liveSetup")#137
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#138
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,liveSetupTimer)#139
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#140
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#141
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#142
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"liveAnalysis")#143
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#144
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,liveAnalysisTimer)#145
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#146
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#147
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#148
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"livePost")#149
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#150
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,livePostTimer)#151
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#152
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#153
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#154
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"aggregation")#155
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#156
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,aggregationTimer)#157
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#158
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#159
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#160
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"grimpAggregation")#161
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#162
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,grimpAggregationTimer)#163
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#164
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#165
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#166
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"deadCode")#167
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#168
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,deadCodeTimer)#169
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#170
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#171
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#172
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"propagator")#173
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#174
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,propagatorTimer)#175
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#176
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#177
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#178
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"buildjasmin")#179
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#180
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,buildJasminTimer)#181
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#182
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#183
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#184
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"assembling jasmin")#185
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#186
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,assembleJasminTimer)#187
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#188
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#189
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#190
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"resolver")#191
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#192
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,resolverTimer)#193
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#194
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#195
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#196
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,()V)#197
soot.Timer.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Timer.<init>()V#Constant(Ljava/lang/String;,"unnamed")#1
soot.Timer.<init>()V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#2
soot.Timer.<init>()V#Return(V)#3
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,fieldTimer)#198
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#199
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#200
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#201
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,()V)#202
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,methodTimer)#203
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#204
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#205
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#206
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,()V)#207
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,attributeTimer)#208
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#209
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#210
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#211
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,()V)#212
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,locatorTimer)#213
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#214
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#215
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#216
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,()V)#217
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,readTimer)#218
soot.Timers.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#219
soot.Timers.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/Timer;,0)#220
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#221
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"orderComputation")#222
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Timer;,<init>,(Ljava/lang/String;)V)#223
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,orderComputation)#224
soot.Timers.<init>(Lsoot/Singletons$Global;)V#Return(V)#225
soot.Singletons.soot_Timers()Lsoot/Timers;#Put(Lsoot/Timers;,NONSTATIC,Lsoot/Singletons;,instance_soot_Timers)#10
soot.Singletons.soot_Timers()Lsoot/Timers;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_Timers()Lsoot/Timers;#Get(Lsoot/Timers;,NONSTATIC,Lsoot/Singletons;,instance_soot_Timers)#12
soot.Singletons.soot_Timers()Lsoot/Timers;#Return(Ljava/lang/Object;)#13
soot.Timers.v()Lsoot/Timers;#Return(Ljava/lang/Object;)#2
soot.Main.run([Ljava/lang/String;)V#Get(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,totalTimer)#9
soot.Main.run([Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/Timer;,start,()V)#10
soot.Timer.start()V#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.Timer.start()V#Get(Z,NONSTATIC,Lsoot/G;,Timer_isGarbageCollecting)#1
soot.Timer.start()V#Constant(I,0)#2
soot.Timer.start()V#ConditionalBranch(I,ne,65)#3
soot.Timer.start()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#4
soot.options.Options.v()Lsoot/options/Options;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.options.Options.v()Lsoot/options/Options;#Invoke(VIRTUAL,Lsoot/G;,soot_options_Options,()Lsoot/options/Options;)#1
soot.Singletons.soot_options_Options()Lsoot/options/Options;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_options_Options()Lsoot/options/Options;#Get(Lsoot/options/Options;,NONSTATIC,Lsoot/Singletons;,instance_soot_options_Options)#1
soot.Singletons.soot_options_Options()Lsoot/options/Options;#Constant(L;,null)#2
soot.Singletons.soot_options_Options()Lsoot/options/Options;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_options_Options()Lsoot/options/Options;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_options_Options()Lsoot/options/Options;#New(Lsoot/options/Options;,0)#5
soot.Singletons.soot_options_Options()Lsoot/options/Options;#Dup(1,0)#6
soot.Singletons.soot_options_Options()Lsoot/options/Options;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_options_Options()Lsoot/options/Options;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_options_Options()Lsoot/options/Options;#Invoke(SPECIAL,Lsoot/options/Options;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/options/OptionsBase;,<init>,()V)#1
soot.options.OptionsBase.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.OptionsBase.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.options.OptionsBase.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
soot.options.OptionsBase.<init>()V#New(Ljava/util/LinkedList;,0)#3
soot.options.OptionsBase.<init>()V#Dup(1,0)#4
soot.options.OptionsBase.<init>()V#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#5
soot.options.OptionsBase.<init>()V#Put(Ljava/util/LinkedList;,NONSTATIC,Lsoot/options/OptionsBase;,options)#6
soot.options.OptionsBase.<init>()V#LocalLoad(Ljava/lang/Object;,0)#7
soot.options.OptionsBase.<init>()V#New(Ljava/util/LinkedList;,0)#8
soot.options.OptionsBase.<init>()V#Dup(1,0)#9
soot.options.OptionsBase.<init>()V#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#10
soot.options.OptionsBase.<init>()V#Put(Ljava/util/LinkedList;,NONSTATIC,Lsoot/options/OptionsBase;,classes)#11
soot.options.OptionsBase.<init>()V#Return(V)#12
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#3
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,help)#4
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#6
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,phase_list)#7
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(L;,null)#9
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/options/Options;,phase_help)#10
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#12
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,version)#13
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#14
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#15
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,verbose)#16
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#17
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#18
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,interactive_mode)#19
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#20
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#21
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,unfriendly_mode)#22
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#23
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#24
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,app)#25
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#26
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#27
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,whole_program)#28
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#29
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#30
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,whole_shimple)#31
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#32
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#33
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,validate)#34
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#35
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#36
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,debug)#37
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#38
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#39
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,debug_resolver)#40
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#41
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"")#42
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/options/Options;,soot_classpath)#43
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#44
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#45
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,prepend_classpath)#46
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#47
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(L;,null)#48
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/options/Options;,process_dir)#49
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#50
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#51
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,ast_metrics)#52
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#53
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#54
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(I,NONSTATIC,Lsoot/options/Options;,src_prec)#55
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#56
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#57
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,full_resolver)#58
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#59
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#60
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,allow_phantom_refs)#61
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#62
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#63
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,no_bodies_for_excluded)#64
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#65
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#66
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,j2me)#67
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#68
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"")#69
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/options/Options;,main_class)#70
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#71
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#72
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,polyglot)#73
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#74
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"")#75
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/options/Options;,output_dir)#76
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#77
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#78
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(I,NONSTATIC,Lsoot/options/Options;,output_format)#79
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#80
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#81
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,output_jar)#82
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#83
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#84
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,xml_attributes)#85
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#86
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#87
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,print_tags_in_output)#88
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#89
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#90
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,no_output_source_file_attribute)#91
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#92
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#93
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,no_output_inner_classes_attribute)#94
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#95
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(L;,null)#96
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/options/Options;,dump_body)#97
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#98
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(L;,null)#99
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/options/Options;,dump_cfg)#100
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#101
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#102
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,show_exception_dests)#103
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#104
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#105
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,gzip)#106
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#107
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#108
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,via_grimp)#109
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#110
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#111
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,via_shimple)#112
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#113
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#114
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(I,NONSTATIC,Lsoot/options/Options;,throw_analysis)#115
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#116
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#117
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,omit_excepting_unit_edges)#118
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#119
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(L;,null)#120
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/options/Options;,include)#121
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#122
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(L;,null)#123
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/options/Options;,exclude)#124
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#125
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#126
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,include_all)#127
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#128
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(L;,null)#129
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/options/Options;,dynamic_class)#130
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#131
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(L;,null)#132
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/options/Options;,dynamic_dir)#133
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#134
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(L;,null)#135
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/options/Options;,dynamic_package)#136
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#137
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#138
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,keep_line_number)#139
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#140
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#141
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,keep_offset)#142
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#143
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#144
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,time)#145
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#146
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#147
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/options/Options;,subtract_gc)#148
soot.options.Options.<init>(Lsoot/Singletons$Global;)V#Return(V)#149
soot.Singletons.soot_options_Options()Lsoot/options/Options;#Put(Lsoot/options/Options;,NONSTATIC,Lsoot/Singletons;,instance_soot_options_Options)#10
soot.Singletons.soot_options_Options()Lsoot/options/Options;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_options_Options()Lsoot/options/Options;#Get(Lsoot/options/Options;,NONSTATIC,Lsoot/Singletons;,instance_soot_options_Options)#12
soot.Singletons.soot_options_Options()Lsoot/options/Options;#Return(Ljava/lang/Object;)#13
soot.options.Options.v()Lsoot/options/Options;#Return(Ljava/lang/Object;)#2
soot.Timer.start()V#Constant(L;,null)#5
soot.Timer.start()V#ConditionalBranch(Ljava/lang/Object;,eq,65)#6
soot.Timer.start()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#7
soot.Timer.start()V#Invoke(VIRTUAL,Lsoot/options/Options;,subtract_gc,()Z)#8
soot.options.Options.subtract_gc()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.subtract_gc()Z#Get(Z,NONSTATIC,Lsoot/options/Options;,subtract_gc)#1
soot.options.Options.subtract_gc()Z#Return(I)#2
soot.Timer.start()V#Constant(I,0)#9
soot.Timer.start()V#ConditionalBranch(I,eq,65)#10
soot.Timer.start()V#LocalLoad(Ljava/lang/Object;,0)#65
soot.Timer.start()V#Invoke(STATIC,Ljava/lang/System;,currentTimeMillis,()J)#66
soot.Timer.start()V#Put(J,NONSTATIC,Lsoot/Timer;,startTime)#67
soot.Timer.start()V#LocalLoad(Ljava/lang/Object;,0)#68
soot.Timer.start()V#Get(Z,NONSTATIC,Lsoot/Timer;,hasStarted)#69
soot.Timer.start()V#Constant(I,0)#70
soot.Timer.start()V#ConditionalBranch(I,eq,86)#71
soot.Timer.start()V#LocalLoad(Ljava/lang/Object;,0)#86
soot.Timer.start()V#Constant(I,1)#87
soot.Timer.start()V#Put(Z,NONSTATIC,Lsoot/Timer;,hasStarted)#88
soot.Timer.start()V#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#89
soot.Timer.start()V#Get(Z,NONSTATIC,Lsoot/G;,Timer_isGarbageCollecting)#90
soot.Timer.start()V#Constant(I,0)#91
soot.Timer.start()V#ConditionalBranch(I,ne,98)#92
soot.Timer.start()V#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#93
soot.Timer.start()V#Get(Ljava/util/List;,NONSTATIC,Lsoot/G;,Timer_outstandingTimers)#94
soot.Timer.start()V#LocalLoad(Ljava/lang/Object;,0)#95
soot.Timer.start()V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#96
soot.Timer.start()V#Pop(1)#97
soot.Timer.start()V#Return(V)#98
soot.Main.run([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.Main.run([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#12
soot.Main.run([Ljava/lang/String;)V#Get([Ljava/lang/String;,NONSTATIC,Lsoot/Main;,cmdLineArgs)#13
soot.Main.run([Ljava/lang/String;)V#Invoke(SPECIAL,Lsoot/Main;,processCmdLine,([Ljava/lang/String;)V)#14
soot.Main.processCmdLine([Ljava/lang/String;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#0
soot.Main.processCmdLine([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.Main.processCmdLine([Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/options/Options;,parse,([Ljava/lang/String;)Z)#2
soot.options.Options.parse([Ljava/lang/String;)Z#New(Ljava/util/LinkedList;,0)#0
soot.options.Options.parse([Ljava/lang/String;)Z#Dup(1,0)#1
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#2
soot.options.Options.parse([Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,2)#3
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#4
soot.options.Options.parse([Ljava/lang/String;)Z#ArrayLength()#5
soot.options.Options.parse([Ljava/lang/String;)Z#LocalStore(I,3)#6
soot.options.Options.parse([Ljava/lang/String;)Z#Goto(19)#7
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(I,3)#19
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#20
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,gt,8)#21
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#8
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#9
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(I,3)#10
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,1)#11
soot.options.Options.parse([Ljava/lang/String;)Z#BinaryOp(I,sub)#12
soot.options.Options.parse([Ljava/lang/String;)Z#ArrayLoad(Ljava/lang/Object;)#13
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Lsoot/options/Options;,pushOptions,(Ljava/lang/String;)V)#14
soot.options.OptionsBase.pushOptions(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.OptionsBase.pushOptions(Ljava/lang/String;)V#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/options/OptionsBase;,options)#1
soot.options.OptionsBase.pushOptions(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.options.OptionsBase.pushOptions(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,addFirst,(Ljava/lang/Object;)V)#3
soot.options.OptionsBase.pushOptions(Ljava/lang/String;)V#Return(V)#4
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(I,3)#15
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,-1)#16
soot.options.Options.parse([Ljava/lang/String;)Z#BinaryOp(I,add)#17
soot.options.Options.parse([Ljava/lang/String;)Z#LocalStore(I,3)#18
soot.options.Options.parse([Ljava/lang/String;)Z#Goto(2055)#22
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#2055
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Lsoot/options/Options;,hasMoreOptions,()Z)#2056
soot.options.OptionsBase.hasMoreOptions()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.OptionsBase.hasMoreOptions()Z#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/options/OptionsBase;,options)#1
soot.options.OptionsBase.hasMoreOptions()Z#Invoke(VIRTUAL,Ljava/util/LinkedList;,isEmpty,()Z)#2
soot.options.OptionsBase.hasMoreOptions()Z#Constant(I,0)#3
soot.options.OptionsBase.hasMoreOptions()Z#ConditionalBranch(I,eq,7)#4
soot.options.OptionsBase.hasMoreOptions()Z#Constant(I,1)#7
soot.options.OptionsBase.hasMoreOptions()Z#Return(I)#8
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#2057
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,ne,23)#2058
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#23
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Lsoot/options/Options;,nextOption,()Ljava/lang/String;)#24
soot.options.OptionsBase.nextOption()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.OptionsBase.nextOption()Ljava/lang/String;#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/options/OptionsBase;,options)#1
soot.options.OptionsBase.nextOption()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/util/LinkedList;,removeFirst,()Ljava/lang/Object;)#2
soot.options.OptionsBase.nextOption()Ljava/lang/String;#CheckCast(Ljava/lang/String;)#3
soot.options.OptionsBase.nextOption()Ljava/lang/String;#Return(Ljava/lang/Object;)#4
soot.options.Options.parse([Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,3)#25
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#26
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#27
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#28
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,45)#29
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,41)#30
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#41
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#42
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#43
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,45)#44
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,37)#45
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#37
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,1)#38
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,substring,(I)Ljava/lang/String;)#39
soot.options.Options.parse([Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,3)#40
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#46
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"h")#47
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#48
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#49
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,ne,56)#50
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#51
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"help")#52
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#53
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#54
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,60)#55
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#60
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"pl")#61
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#62
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#63
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,ne,70)#64
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#65
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"phase-list")#66
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#67
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#68
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,74)#69
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#74
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"ph")#75
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#76
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#77
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,ne,84)#78
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#79
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"phase-help")#80
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#81
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#82
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,118)#83
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#118
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"version")#119
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#120
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#121
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,127)#122
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#127
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"v")#128
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#129
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#130
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,ne,137)#131
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#132
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"verbose")#133
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#134
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#135
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,141)#136
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#141
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"interactive-mode")#142
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#143
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#144
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,150)#145
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#150
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"unfriendly-mode")#151
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#152
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#153
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,159)#154
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#159
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"app")#160
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#161
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#162
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,168)#163
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#164
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,1)#165
soot.options.Options.parse([Ljava/lang/String;)Z#Put(Z,NONSTATIC,Lsoot/options/Options;,app)#166
soot.options.Options.parse([Ljava/lang/String;)Z#Goto(2055)#167
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#168
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"w")#169
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#170
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#171
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,ne,178)#172
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#173
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"whole-program")#174
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#175
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#176
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,182)#177
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#182
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"ws")#183
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#184
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#185
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,ne,192)#186
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#187
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"whole-shimple")#188
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#189
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#190
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,196)#191
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#196
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"validate")#197
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#198
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#199
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,205)#200
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#205
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"debug")#206
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#207
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#208
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,214)#209
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#214
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"debug-resolver")#215
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#216
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#217
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,223)#218
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#223
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"cp")#224
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#225
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#226
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,ne,238)#227
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#228
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"soot-class-path")#229
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#230
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#231
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,ne,238)#232
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#233
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"soot-classpath")#234
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#235
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#236
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,287)#237
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#287
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"pp")#288
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#289
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#290
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,ne,297)#291
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#292
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"prepend-classpath")#293
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#294
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#295
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,301)#296
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#301
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"process-path")#302
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#303
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#304
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,ne,311)#305
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#306
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"process-dir")#307
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#308
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#309
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,345)#310
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#345
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"ast-metrics")#346
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#347
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#348
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,354)#349
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#354
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"src-prec")#355
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#356
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#357
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,520)#358
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#520
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"full-resolver")#521
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#522
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#523
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,529)#524
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#529
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"allow-phantom-refs")#530
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#531
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#532
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,538)#533
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#538
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"no-bodies-for-excluded")#539
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#540
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#541
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,547)#542
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#547
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"j2me")#548
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#549
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#550
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,556)#551
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#556
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"main-class")#557
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#558
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#559
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,610)#560
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#610
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"polyglot")#611
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#612
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#613
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,619)#614
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#619
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"d")#620
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#621
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#622
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,ne,629)#623
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#624
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"output-dir")#625
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#626
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#627
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,678)#628
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#678
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"f")#679
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#680
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#681
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,ne,688)#682
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#683
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"output-format")#684
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#685
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#686
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,1189)#687
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#1189
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"outjar")#1190
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#1191
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#1192
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,ne,1199)#1193
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#1194
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"output-jar")#1195
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#1196
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#1197
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,1203)#1198
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#1203
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"xml-attributes")#1204
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#1205
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#1206
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,1212)#1207
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#1212
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"print-tags")#1213
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#1214
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#1215
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,ne,1222)#1216
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#1217
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"print-tags-in-output")#1218
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#1219
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#1220
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,1226)#1221
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#1226
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"no-output-source-file-attribute")#1227
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#1228
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#1229
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,1235)#1230
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#1235
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"no-output-inner-classes-attribute")#1236
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#1237
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#1238
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,1244)#1239
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#1244
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"dump-body")#1245
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#1246
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#1247
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,1283)#1248
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#1283
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"dump-cfg")#1284
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#1285
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#1286
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,1322)#1287
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#1322
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"show-exception-dests")#1323
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#1324
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#1325
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,1331)#1326
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#1331
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"gzip")#1332
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#1333
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#1334
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,1340)#1335
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#1340
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"p")#1341
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#1342
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#1343
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,ne,1350)#1344
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#1345
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"phase-option")#1346
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#1347
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#1348
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,1401)#1349
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#1401
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"O")#1402
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#1403
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#1404
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,ne,1411)#1405
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#1406
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"optimize")#1407
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#1408
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#1409
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,1466)#1410
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#1466
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"W")#1467
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#1468
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#1469
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,ne,1476)#1470
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#1471
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"whole-optimize")#1472
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#1473
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#1474
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,1501)#1475
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#1501
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"via-grimp")#1502
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#1503
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#1504
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,1510)#1505
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#1510
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"via-shimple")#1511
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#1512
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#1513
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,1519)#1514
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#1519
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"throw-analysis")#1520
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#1521
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#1522
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,1617)#1523
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#1617
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"omit-excepting-unit-edges")#1618
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#1619
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#1620
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,1626)#1621
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#1626
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"trim-cfgs")#1627
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#1628
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#1629
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,1650)#1630
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#1650
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"i")#1651
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#1652
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#1653
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,ne,1660)#1654
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#1655
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"include")#1656
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#1657
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#1658
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,1694)#1659
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#1694
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"x")#1695
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#1696
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#1697
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,ne,1704)#1698
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#1699
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"exclude")#1700
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#1701
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#1702
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,1738)#1703
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#1738
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"include-all")#1739
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#1740
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#1741
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,1747)#1742
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#1747
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"dynamic-class")#1748
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#1749
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#1750
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,1786)#1751
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#1786
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"dynamic-dir")#1787
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#1788
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#1789
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,1825)#1790
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#1825
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"dynamic-package")#1826
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#1827
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#1828
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,1864)#1829
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#1864
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"keep-line-number")#1865
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#1866
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#1867
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,eq,1873)#1868
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#1869
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,1)#1870
soot.options.Options.parse([Ljava/lang/String;)Z#Put(Z,NONSTATIC,Lsoot/options/Options;,keep_line_number)#1871
soot.options.Options.parse([Ljava/lang/String;)Z#Goto(2055)#1872
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#31
soot.options.Options.parse([Ljava/lang/String;)Z#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/options/Options;,classes)#32
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#33
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/util/LinkedList;,add,(Ljava/lang/Object;)Z)#34
soot.options.Options.parse([Ljava/lang/String;)Z#Pop(1)#35
soot.options.Options.parse([Ljava/lang/String;)Z#Goto(2055)#36
soot.options.OptionsBase.hasMoreOptions()Z#Constant(I,0)#5
soot.options.OptionsBase.hasMoreOptions()Z#Goto(8)#6
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,2)#2059
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/util/LinkedList;,iterator,()Ljava/util/Iterator;)#2060
soot.options.Options.parse([Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,3)#2061
soot.options.Options.parse([Ljava/lang/String;)Z#Goto(2079)#2062
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#2079
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#2080
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#2081
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,ne,2063)#2082
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,2)#2083
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/util/LinkedList;,iterator,()Ljava/util/Iterator;)#2084
soot.options.Options.parse([Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,3)#2085
soot.options.Options.parse([Ljava/lang/String;)Z#Goto(2103)#2086
soot.options.Options.parse([Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#2103
soot.options.Options.parse([Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#2104
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,0)#2105
soot.options.Options.parse([Ljava/lang/String;)Z#ConditionalBranch(I,ne,2087)#2106
soot.options.Options.parse([Ljava/lang/String;)Z#Constant(I,1)#2107
soot.options.Options.parse([Ljava/lang/String;)Z#Return(I)#2108
soot.Main.processCmdLine([Ljava/lang/String;)V#Constant(I,0)#3
soot.Main.processCmdLine([Ljava/lang/String;)V#ConditionalBranch(I,ne,11)#4
soot.Main.processCmdLine([Ljava/lang/String;)V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#11
soot.PackManager.<clinit>()V#Constant(I,0)#0
soot.PackManager.<clinit>()V#Put(Z,STATIC,Lsoot/PackManager;,DEBUG)#1
soot.PackManager.<clinit>()V#Return(V)#2
soot.PackManager.v()Lsoot/PackManager;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.PackManager.v()Lsoot/PackManager;#Invoke(VIRTUAL,Lsoot/G;,soot_PackManager,()Lsoot/PackManager;)#1
soot.Singletons.soot_PackManager()Lsoot/PackManager;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_PackManager()Lsoot/PackManager;#Get(Lsoot/PackManager;,NONSTATIC,Lsoot/Singletons;,instance_soot_PackManager)#1
soot.Singletons.soot_PackManager()Lsoot/PackManager;#Constant(L;,null)#2
soot.Singletons.soot_PackManager()Lsoot/PackManager;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_PackManager()Lsoot/PackManager;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_PackManager()Lsoot/PackManager;#New(Lsoot/PackManager;,0)#5
soot.Singletons.soot_PackManager()Lsoot/PackManager;#Dup(1,0)#6
soot.Singletons.soot_PackManager()Lsoot/PackManager;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_PackManager()Lsoot/PackManager;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_PackManager()Lsoot/PackManager;#Invoke(SPECIAL,Lsoot/PackManager;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.PackManager.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.PackManager.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.PackManager.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.PackManager.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#3
soot.PackManager.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/PackManager;,onlyStandardPacks)#4
soot.PackManager.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.PackManager.<init>(Lsoot/Singletons$Global;)V#New(Ljava/util/HashMap;,0)#6
soot.PackManager.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#7
soot.PackManager.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#8
soot.PackManager.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/PackManager;,packNameToPack)#9
soot.PackManager.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#10
soot.PackManager.<init>(Lsoot/Singletons$Global;)V#New(Ljava/util/LinkedList;,0)#11
soot.PackManager.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#12
soot.PackManager.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#13
soot.PackManager.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/PackManager;,packList)#14
soot.PackManager.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#15
soot.PackManager.<init>(Lsoot/Singletons$Global;)V#Constant(L;,null)#16
soot.PackManager.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/util/zip/ZipOutputStream;,NONSTATIC,Lsoot/PackManager;,jarFile)#17
soot.PackManager.<init>(Lsoot/Singletons$Global;)V#Invoke(STATIC,Lsoot/PhaseOptions;,v,()Lsoot/PhaseOptions;)#18
soot.PhaseOptions.v()Lsoot/PhaseOptions;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.PhaseOptions.v()Lsoot/PhaseOptions;#Invoke(VIRTUAL,Lsoot/G;,soot_PhaseOptions,()Lsoot/PhaseOptions;)#1
soot.Singletons.soot_PhaseOptions()Lsoot/PhaseOptions;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_PhaseOptions()Lsoot/PhaseOptions;#Get(Lsoot/PhaseOptions;,NONSTATIC,Lsoot/Singletons;,instance_soot_PhaseOptions)#1
soot.Singletons.soot_PhaseOptions()Lsoot/PhaseOptions;#Constant(L;,null)#2
soot.Singletons.soot_PhaseOptions()Lsoot/PhaseOptions;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_PhaseOptions()Lsoot/PhaseOptions;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_PhaseOptions()Lsoot/PhaseOptions;#New(Lsoot/PhaseOptions;,0)#5
soot.Singletons.soot_PhaseOptions()Lsoot/PhaseOptions;#Dup(1,0)#6
soot.Singletons.soot_PhaseOptions()Lsoot/PhaseOptions;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_PhaseOptions()Lsoot/PhaseOptions;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_PhaseOptions()Lsoot/PhaseOptions;#Invoke(SPECIAL,Lsoot/PhaseOptions;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.PhaseOptions.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.PhaseOptions.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.PhaseOptions.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.PhaseOptions.<init>(Lsoot/Singletons$Global;)V#New(Ljava/util/HashMap;,0)#3
soot.PhaseOptions.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#4
soot.PhaseOptions.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#5
soot.PhaseOptions.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/PhaseOptions;,phaseToOptionMap)#6
soot.PhaseOptions.<init>(Lsoot/Singletons$Global;)V#Return(V)#7
soot.Singletons.soot_PhaseOptions()Lsoot/PhaseOptions;#Put(Lsoot/PhaseOptions;,NONSTATIC,Lsoot/Singletons;,instance_soot_PhaseOptions)#10
soot.Singletons.soot_PhaseOptions()Lsoot/PhaseOptions;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_PhaseOptions()Lsoot/PhaseOptions;#Get(Lsoot/PhaseOptions;,NONSTATIC,Lsoot/Singletons;,instance_soot_PhaseOptions)#12
soot.Singletons.soot_PhaseOptions()Lsoot/PhaseOptions;#Return(Ljava/lang/Object;)#13
soot.PhaseOptions.v()Lsoot/PhaseOptions;#Return(Ljava/lang/Object;)#2
soot.PackManager.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#19
soot.PackManager.<init>(Lsoot/Singletons$Global;)V#Invoke(VIRTUAL,Lsoot/PhaseOptions;,setPackManager,(Lsoot/PackManager;)V)#20
soot.PhaseOptions.setPackManager(Lsoot/PackManager;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.PhaseOptions.setPackManager(Lsoot/PackManager;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.PhaseOptions.setPackManager(Lsoot/PackManager;)V#Put(Lsoot/PackManager;,NONSTATIC,Lsoot/PhaseOptions;,pm)#2
soot.PhaseOptions.setPackManager(Lsoot/PackManager;)V#Return(V)#3
soot.PackManager.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#21
soot.PackManager.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/PackManager;,init,()V)#22
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.PackManager.init()V#New(Lsoot/JimpleBodyPack;,0)#1
soot.PackManager.init()V#Dup(1,0)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/JimpleBodyPack;,<init>,()V)#3
soot.JimpleBodyPack.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.JimpleBodyPack.<init>()V#Constant(Ljava/lang/String;,"jb")#1
soot.JimpleBodyPack.<init>()V#Invoke(SPECIAL,Lsoot/BodyPack;,<init>,(Ljava/lang/String;)V)#2
soot.BodyPack.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.BodyPack.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.BodyPack.<init>(Ljava/lang/String;)V#Invoke(SPECIAL,Lsoot/Pack;,<init>,(Ljava/lang/String;)V)#2
soot.Pack.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Pack.<init>(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.Pack.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.Pack.<init>(Ljava/lang/String;)V#Constant(I,1)#3
soot.Pack.<init>(Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsoot/Pack;,DEBUG)#4
soot.Pack.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.Pack.<init>(Ljava/lang/String;)V#New(Lsoot/util/HashChain;,0)#6
soot.Pack.<init>(Ljava/lang/String;)V#Dup(1,0)#7
soot.Pack.<init>(Ljava/lang/String;)V#Invoke(SPECIAL,Lsoot/util/HashChain;,<init>,()V)#8
soot.util.HashChain.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.HashChain.<init>()V#Invoke(SPECIAL,Ljava/util/AbstractCollection;,<init>,()V)#1
soot.util.HashChain.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
soot.util.HashChain.<init>()V#New(Ljava/util/HashMap;,0)#3
soot.util.HashChain.<init>()V#Dup(1,0)#4
soot.util.HashChain.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#5
soot.util.HashChain.<init>()V#Put(Ljava/util/HashMap;,NONSTATIC,Lsoot/util/HashChain;,map)#6
soot.util.HashChain.<init>()V#LocalLoad(Ljava/lang/Object;,0)#7
soot.util.HashChain.<init>()V#Constant(J,0)#8
soot.util.HashChain.<init>()V#Put(J,NONSTATIC,Lsoot/util/HashChain;,stateCount)#9
soot.util.HashChain.<init>()V#LocalLoad(Ljava/lang/Object;,0)#10
soot.util.HashChain.<init>()V#LocalLoad(Ljava/lang/Object;,0)#11
soot.util.HashChain.<init>()V#Constant(L;,null)#12
soot.util.HashChain.<init>()V#Dup(1,1)#13
soot.util.HashChain.<init>()V#Put(Ljava/lang/Object;,NONSTATIC,Lsoot/util/HashChain;,lastItem)#14
soot.util.HashChain.<init>()V#Put(Ljava/lang/Object;,NONSTATIC,Lsoot/util/HashChain;,firstItem)#15
soot.util.HashChain.<init>()V#Return(V)#16
soot.Pack.<init>(Ljava/lang/String;)V#Put(Lsoot/util/Chain;,NONSTATIC,Lsoot/Pack;,opts)#9
soot.Pack.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#10
soot.Pack.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#11
soot.Pack.<init>(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/Pack;,name)#12
soot.Pack.<init>(Ljava/lang/String;)V#Return(V)#13
soot.BodyPack.<init>(Ljava/lang/String;)V#Return(V)#3
soot.JimpleBodyPack.<init>()V#Return(V)#3
soot.PackManager.init()V#Dup(1,0)#4
soot.PackManager.init()V#LocalStore(Ljava/lang/Object;,1)#5
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/PackManager;,addPack,(Lsoot/Pack;)V)#6
soot.PackManager.addPack(Lsoot/Pack;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.PackManager.addPack(Lsoot/Pack;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/PackManager;,packNameToPack)#1
soot.PackManager.addPack(Lsoot/Pack;)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.PackManager.addPack(Lsoot/Pack;)V#Invoke(VIRTUAL,Lsoot/Pack;,getPhaseName,()Ljava/lang/String;)#3
soot.Pack.getPhaseName()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Pack.getPhaseName()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsoot/Pack;,name)#1
soot.Pack.getPhaseName()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
soot.PackManager.addPack(Lsoot/Pack;)V#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#4
soot.PackManager.addPack(Lsoot/Pack;)V#Constant(I,0)#5
soot.PackManager.addPack(Lsoot/Pack;)V#ConditionalBranch(I,eq,19)#6
soot.PackManager.addPack(Lsoot/Pack;)V#LocalLoad(Ljava/lang/Object;,0)#19
soot.PackManager.addPack(Lsoot/Pack;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/PackManager;,packNameToPack)#20
soot.PackManager.addPack(Lsoot/Pack;)V#LocalLoad(Ljava/lang/Object;,1)#21
soot.PackManager.addPack(Lsoot/Pack;)V#Invoke(VIRTUAL,Lsoot/Pack;,getPhaseName,()Ljava/lang/String;)#22
soot.PackManager.addPack(Lsoot/Pack;)V#LocalLoad(Ljava/lang/Object;,1)#23
soot.PackManager.addPack(Lsoot/Pack;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#24
soot.PackManager.addPack(Lsoot/Pack;)V#Pop(1)#25
soot.PackManager.addPack(Lsoot/Pack;)V#LocalLoad(Ljava/lang/Object;,0)#26
soot.PackManager.addPack(Lsoot/Pack;)V#Get(Ljava/util/List;,NONSTATIC,Lsoot/PackManager;,packList)#27
soot.PackManager.addPack(Lsoot/Pack;)V#LocalLoad(Ljava/lang/Object;,1)#28
soot.PackManager.addPack(Lsoot/Pack;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#29
soot.PackManager.addPack(Lsoot/Pack;)V#Pop(1)#30
soot.PackManager.addPack(Lsoot/Pack;)V#Return(V)#31
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#7
soot.PackManager.init()V#New(Lsoot/Transform;,0)#8
soot.PackManager.init()V#Dup(1,0)#9
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jb.tt")#10
soot.PackManager.init()V#Invoke(STATIC,Lsoot/toolkits/exceptions/TrapTightener;,v,()Lsoot/toolkits/exceptions/TrapTightener;)#11
soot.toolkits.exceptions.TrapTightener.v()Lsoot/toolkits/exceptions/TrapTightener;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.toolkits.exceptions.TrapTightener.v()Lsoot/toolkits/exceptions/TrapTightener;#Invoke(VIRTUAL,Lsoot/G;,soot_toolkits_exceptions_TrapTightener,()Lsoot/toolkits/exceptions/TrapTightener;)#1
soot.Singletons.soot_toolkits_exceptions_TrapTightener()Lsoot/toolkits/exceptions/TrapTightener;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_toolkits_exceptions_TrapTightener()Lsoot/toolkits/exceptions/TrapTightener;#Get(Lsoot/toolkits/exceptions/TrapTightener;,NONSTATIC,Lsoot/Singletons;,instance_soot_toolkits_exceptions_TrapTightener)#1
soot.Singletons.soot_toolkits_exceptions_TrapTightener()Lsoot/toolkits/exceptions/TrapTightener;#Constant(L;,null)#2
soot.Singletons.soot_toolkits_exceptions_TrapTightener()Lsoot/toolkits/exceptions/TrapTightener;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_toolkits_exceptions_TrapTightener()Lsoot/toolkits/exceptions/TrapTightener;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_toolkits_exceptions_TrapTightener()Lsoot/toolkits/exceptions/TrapTightener;#New(Lsoot/toolkits/exceptions/TrapTightener;,0)#5
soot.Singletons.soot_toolkits_exceptions_TrapTightener()Lsoot/toolkits/exceptions/TrapTightener;#Dup(1,0)#6
soot.Singletons.soot_toolkits_exceptions_TrapTightener()Lsoot/toolkits/exceptions/TrapTightener;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_toolkits_exceptions_TrapTightener()Lsoot/toolkits/exceptions/TrapTightener;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_toolkits_exceptions_TrapTightener()Lsoot/toolkits/exceptions/TrapTightener;#Invoke(SPECIAL,Lsoot/toolkits/exceptions/TrapTightener;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.toolkits.exceptions.TrapTightener.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.exceptions.TrapTightener.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.BodyTransformer.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.BodyTransformer.<init>()V#Invoke(SPECIAL,Lsoot/Transformer;,<init>,()V)#1
soot.Transformer.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Transformer.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.Transformer.<init>()V#Return(V)#2
soot.BodyTransformer.<init>()V#Return(V)#2
soot.toolkits.exceptions.TrapTightener.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_toolkits_exceptions_TrapTightener()Lsoot/toolkits/exceptions/TrapTightener;#Put(Lsoot/toolkits/exceptions/TrapTightener;,NONSTATIC,Lsoot/Singletons;,instance_soot_toolkits_exceptions_TrapTightener)#10
soot.Singletons.soot_toolkits_exceptions_TrapTightener()Lsoot/toolkits/exceptions/TrapTightener;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_toolkits_exceptions_TrapTightener()Lsoot/toolkits/exceptions/TrapTightener;#Get(Lsoot/toolkits/exceptions/TrapTightener;,NONSTATIC,Lsoot/Singletons;,instance_soot_toolkits_exceptions_TrapTightener)#12
soot.Singletons.soot_toolkits_exceptions_TrapTightener()Lsoot/toolkits/exceptions/TrapTightener;#Return(Ljava/lang/Object;)#13
soot.toolkits.exceptions.TrapTightener.v()Lsoot/toolkits/exceptions/TrapTightener;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#12
soot.Transform.<init>(Ljava/lang/String;Lsoot/Transformer;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Transform.<init>(Ljava/lang/String;Lsoot/Transformer;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.Transform.<init>(Ljava/lang/String;Lsoot/Transformer;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.Transform.<init>(Ljava/lang/String;Lsoot/Transformer;)V#Constant(I,1)#3
soot.Transform.<init>(Ljava/lang/String;Lsoot/Transformer;)V#Put(Z,NONSTATIC,Lsoot/Transform;,DEBUG)#4
soot.Transform.<init>(Ljava/lang/String;Lsoot/Transformer;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.Transform.<init>(Ljava/lang/String;Lsoot/Transformer;)V#LocalLoad(Ljava/lang/Object;,1)#6
soot.Transform.<init>(Ljava/lang/String;Lsoot/Transformer;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/Transform;,phaseName)#7
soot.Transform.<init>(Ljava/lang/String;Lsoot/Transformer;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.Transform.<init>(Ljava/lang/String;Lsoot/Transformer;)V#LocalLoad(Ljava/lang/Object;,2)#9
soot.Transform.<init>(Ljava/lang/String;Lsoot/Transformer;)V#Put(Lsoot/Transformer;,NONSTATIC,Lsoot/Transform;,t)#10
soot.Transform.<init>(Ljava/lang/String;Lsoot/Transformer;)V#Return(V)#11
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#13
soot.Pack.add(Lsoot/Transform;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.Pack.add(Lsoot/Transform;)V#Invoke(VIRTUAL,Lsoot/Transform;,getPhaseName,()Ljava/lang/String;)#1
soot.Transform.getPhaseName()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Transform.getPhaseName()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsoot/Transform;,phaseName)#1
soot.Transform.getPhaseName()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
soot.Pack.add(Lsoot/Transform;)V#New(Ljava/lang/StringBuilder;,0)#2
soot.Pack.add(Lsoot/Transform;)V#Dup(1,0)#3
soot.Pack.add(Lsoot/Transform;)V#LocalLoad(Ljava/lang/Object;,0)#4
soot.Pack.add(Lsoot/Transform;)V#Invoke(VIRTUAL,Lsoot/Pack;,getPhaseName,()Ljava/lang/String;)#5
soot.Pack.add(Lsoot/Transform;)V#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#6
soot.Pack.add(Lsoot/Transform;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#7
soot.Pack.add(Lsoot/Transform;)V#Constant(Ljava/lang/String;,".")#8
soot.Pack.add(Lsoot/Transform;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#9
soot.Pack.add(Lsoot/Transform;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#10
soot.Pack.add(Lsoot/Transform;)V#Invoke(VIRTUAL,Ljava/lang/String;,startsWith,(Ljava/lang/String;)Z)#11
soot.Pack.add(Lsoot/Transform;)V#Constant(I,0)#12
soot.Pack.add(Lsoot/Transform;)V#ConditionalBranch(I,ne,35)#13
soot.Pack.add(Lsoot/Transform;)V#Invoke(STATIC,Lsoot/PhaseOptions;,v,()Lsoot/PhaseOptions;)#35
soot.Pack.add(Lsoot/Transform;)V#Invoke(VIRTUAL,Lsoot/PhaseOptions;,getPM,()Lsoot/PackManager;)#36
soot.PhaseOptions.getPM()Lsoot/PackManager;#LocalLoad(Ljava/lang/Object;,0)#0
soot.PhaseOptions.getPM()Lsoot/PackManager;#Get(Lsoot/PackManager;,NONSTATIC,Lsoot/PhaseOptions;,pm)#1
soot.PhaseOptions.getPM()Lsoot/PackManager;#Constant(L;,null)#2
soot.PhaseOptions.getPM()Lsoot/PackManager;#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
soot.PhaseOptions.getPM()Lsoot/PackManager;#LocalLoad(Ljava/lang/Object;,0)#6
soot.PhaseOptions.getPM()Lsoot/PackManager;#Get(Lsoot/PackManager;,NONSTATIC,Lsoot/PhaseOptions;,pm)#7
soot.PhaseOptions.getPM()Lsoot/PackManager;#Return(Ljava/lang/Object;)#8
soot.Pack.add(Lsoot/Transform;)V#Invoke(VIRTUAL,Lsoot/PackManager;,notifyAddPack,()V)#37
soot.PackManager.notifyAddPack()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.PackManager.notifyAddPack()V#Constant(I,0)#1
soot.PackManager.notifyAddPack()V#Put(Z,NONSTATIC,Lsoot/PackManager;,onlyStandardPacks)#2
soot.PackManager.notifyAddPack()V#Return(V)#3
soot.Pack.add(Lsoot/Transform;)V#LocalLoad(Ljava/lang/Object;,0)#38
soot.Pack.add(Lsoot/Transform;)V#LocalLoad(Ljava/lang/Object;,1)#39
soot.Pack.add(Lsoot/Transform;)V#Invoke(VIRTUAL,Lsoot/Transform;,getPhaseName,()Ljava/lang/String;)#40
soot.Pack.add(Lsoot/Transform;)V#Invoke(VIRTUAL,Lsoot/Pack;,get,(Ljava/lang/String;)Lsoot/Transform;)#41
soot.Pack.get(Ljava/lang/String;)Lsoot/Transform;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Pack.get(Ljava/lang/String;)Lsoot/Transform;#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/Pack;,opts)#1
soot.Pack.get(Ljava/lang/String;)Lsoot/Transform;#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#2
soot.util.HashChain.iterator()Ljava/util/Iterator;#New(Lsoot/util/HashChain$LinkIterator;,0)#0
soot.util.HashChain.iterator()Ljava/util/Iterator;#Dup(1,0)#1
soot.util.HashChain.iterator()Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#2
soot.util.HashChain.iterator()Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#3
soot.util.HashChain.iterator()Ljava/util/Iterator;#Get(Ljava/lang/Object;,NONSTATIC,Lsoot/util/HashChain;,firstItem)#4
soot.util.HashChain.iterator()Ljava/util/Iterator;#Invoke(SPECIAL,Lsoot/util/HashChain$LinkIterator;,<init>,(Lsoot/util/HashChain;Ljava/lang/Object;)V)#5
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#Put(Lsoot/util/HashChain;,NONSTATIC,Lsoot/util/HashChain$LinkIterator;,this$0)#2
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#4
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#5
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#Invoke(STATIC,Lsoot/util/HashChain;,access$2,(Lsoot/util/HashChain;)Ljava/util/HashMap;)#6
soot.util.HashChain.access$2(Lsoot/util/HashChain;)Ljava/util/HashMap;#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.HashChain.access$2(Lsoot/util/HashChain;)Ljava/util/HashMap;#Get(Ljava/util/HashMap;,NONSTATIC,Lsoot/util/HashChain;,map)#1
soot.util.HashChain.access$2(Lsoot/util/HashChain;)Ljava/util/HashMap;#Return(Ljava/lang/Object;)#2
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,2)#7
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#Invoke(VIRTUAL,Ljava/util/HashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#8
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#CheckCast(Lsoot/util/HashChain$Link;)#9
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,3)#10
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,3)#11
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#Constant(L;,null)#12
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#ConditionalBranch(Ljava/lang/Object;,ne,29)#13
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,2)#14
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#Constant(L;,null)#15
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#ConditionalBranch(Ljava/lang/Object;,eq,29)#16
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#29
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#New(Lsoot/util/HashChain$Link;,0)#30
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#Dup(1,0)#31
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#32
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#Constant(L;,null)#33
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#Invoke(SPECIAL,Lsoot/util/HashChain$Link;,<init>,(Lsoot/util/HashChain;Ljava/lang/Object;)V)#34
soot.util.HashChain$Link.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.HashChain$Link.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.util.HashChain$Link.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#Put(Lsoot/util/HashChain;,NONSTATIC,Lsoot/util/HashChain$Link;,this$0)#2
soot.util.HashChain$Link.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.util.HashChain$Link.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#4
soot.util.HashChain$Link.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.util.HashChain$Link.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,2)#6
soot.util.HashChain$Link.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#Put(Ljava/lang/Object;,NONSTATIC,Lsoot/util/HashChain$Link;,item)#7
soot.util.HashChain$Link.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.util.HashChain$Link.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#9
soot.util.HashChain$Link.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#Constant(L;,null)#10
soot.util.HashChain$Link.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#Dup(1,1)#11
soot.util.HashChain$Link.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#Put(Lsoot/util/HashChain$Link;,NONSTATIC,Lsoot/util/HashChain$Link;,previousLink)#12
soot.util.HashChain$Link.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#Put(Lsoot/util/HashChain$Link;,NONSTATIC,Lsoot/util/HashChain$Link;,nextLink)#13
soot.util.HashChain$Link.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#Return(V)#14
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#Put(Lsoot/util/HashChain$Link;,NONSTATIC,Lsoot/util/HashChain$LinkIterator;,currentLink)#35
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#36
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#Get(Lsoot/util/HashChain$Link;,NONSTATIC,Lsoot/util/HashChain$LinkIterator;,currentLink)#37
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,3)#38
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#Invoke(VIRTUAL,Lsoot/util/HashChain$Link;,setNext,(Lsoot/util/HashChain$Link;)V)#39
soot.util.HashChain$Link.setNext(Lsoot/util/HashChain$Link;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.HashChain$Link.setNext(Lsoot/util/HashChain$Link;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.util.HashChain$Link.setNext(Lsoot/util/HashChain$Link;)V#Put(Lsoot/util/HashChain$Link;,NONSTATIC,Lsoot/util/HashChain$Link;,nextLink)#2
soot.util.HashChain$Link.setNext(Lsoot/util/HashChain$Link;)V#Return(V)#3
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#40
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#Constant(I,0)#41
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#Put(Z,NONSTATIC,Lsoot/util/HashChain$LinkIterator;,state)#42
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#43
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#Constant(L;,null)#44
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#Put(Ljava/lang/Object;,NONSTATIC,Lsoot/util/HashChain$LinkIterator;,destination)#45
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#46
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#47
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#Invoke(STATIC,Lsoot/util/HashChain;,access$3,(Lsoot/util/HashChain;)J)#48
soot.util.HashChain.access$3(Lsoot/util/HashChain;)J#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.HashChain.access$3(Lsoot/util/HashChain;)J#Get(J,NONSTATIC,Lsoot/util/HashChain;,stateCount)#1
soot.util.HashChain.access$3(Lsoot/util/HashChain;)J#Return(J)#2
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#Put(J,NONSTATIC,Lsoot/util/HashChain$LinkIterator;,iteratorStateCount)#49
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;)V#Return(V)#50
soot.util.HashChain.iterator()Ljava/util/Iterator;#Return(Ljava/lang/Object;)#6
soot.Pack.get(Ljava/lang/String;)Lsoot/Transform;#LocalStore(Ljava/lang/Object;,2)#3
soot.Pack.get(Ljava/lang/String;)Lsoot/Transform;#Goto(17)#4
soot.Pack.get(Ljava/lang/String;)Lsoot/Transform;#LocalLoad(Ljava/lang/Object;,2)#17
soot.Pack.get(Ljava/lang/String;)Lsoot/Transform;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#18
soot.util.HashChain$LinkIterator.hasNext()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.HashChain$LinkIterator.hasNext()Z#Get(Lsoot/util/HashChain;,NONSTATIC,Lsoot/util/HashChain$LinkIterator;,this$0)#1
soot.util.HashChain$LinkIterator.hasNext()Z#Invoke(STATIC,Lsoot/util/HashChain;,access$3,(Lsoot/util/HashChain;)J)#2
soot.util.HashChain$LinkIterator.hasNext()Z#LocalLoad(Ljava/lang/Object;,0)#3
soot.util.HashChain$LinkIterator.hasNext()Z#Get(J,NONSTATIC,Lsoot/util/HashChain$LinkIterator;,iteratorStateCount)#4
soot.util.HashChain$LinkIterator.hasNext()Z#Comparison(J,cmp)#5
soot.util.HashChain$LinkIterator.hasNext()Z#Constant(I,0)#6
soot.util.HashChain$LinkIterator.hasNext()Z#ConditionalBranch(I,eq,12)#7
soot.util.HashChain$LinkIterator.hasNext()Z#LocalLoad(Ljava/lang/Object;,0)#12
soot.util.HashChain$LinkIterator.hasNext()Z#Get(Ljava/lang/Object;,NONSTATIC,Lsoot/util/HashChain$LinkIterator;,destination)#13
soot.util.HashChain$LinkIterator.hasNext()Z#Constant(L;,null)#14
soot.util.HashChain$LinkIterator.hasNext()Z#ConditionalBranch(Ljava/lang/Object;,ne,25)#15
soot.util.HashChain$LinkIterator.hasNext()Z#LocalLoad(Ljava/lang/Object;,0)#16
soot.util.HashChain$LinkIterator.hasNext()Z#Get(Lsoot/util/HashChain$Link;,NONSTATIC,Lsoot/util/HashChain$LinkIterator;,currentLink)#17
soot.util.HashChain$LinkIterator.hasNext()Z#Invoke(VIRTUAL,Lsoot/util/HashChain$Link;,getNext,()Lsoot/util/HashChain$Link;)#18
soot.util.HashChain$Link.getNext()Lsoot/util/HashChain$Link;#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.HashChain$Link.getNext()Lsoot/util/HashChain$Link;#Get(Lsoot/util/HashChain$Link;,NONSTATIC,Lsoot/util/HashChain$Link;,nextLink)#1
soot.util.HashChain$Link.getNext()Lsoot/util/HashChain$Link;#Return(Ljava/lang/Object;)#2
soot.util.HashChain$LinkIterator.hasNext()Z#Constant(L;,null)#19
soot.util.HashChain$LinkIterator.hasNext()Z#ConditionalBranch(Ljava/lang/Object;,eq,23)#20
soot.util.HashChain$LinkIterator.hasNext()Z#Constant(I,0)#23
soot.util.HashChain$LinkIterator.hasNext()Z#Return(I)#24
soot.Pack.get(Ljava/lang/String;)Lsoot/Transform;#Constant(I,0)#19
soot.Pack.get(Ljava/lang/String;)Lsoot/Transform;#ConditionalBranch(I,ne,5)#20
soot.Pack.get(Ljava/lang/String;)Lsoot/Transform;#Constant(L;,null)#21
soot.Pack.get(Ljava/lang/String;)Lsoot/Transform;#Return(Ljava/lang/Object;)#22
soot.Pack.add(Lsoot/Transform;)V#Constant(L;,null)#42
soot.Pack.add(Lsoot/Transform;)V#ConditionalBranch(Ljava/lang/Object;,eq,60)#43
soot.Pack.add(Lsoot/Transform;)V#LocalLoad(Ljava/lang/Object;,0)#60
soot.Pack.add(Lsoot/Transform;)V#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/Pack;,opts)#61
soot.Pack.add(Lsoot/Transform;)V#LocalLoad(Ljava/lang/Object;,1)#62
soot.Pack.add(Lsoot/Transform;)V#Invoke(INTERFACE,Lsoot/util/Chain;,add,(Ljava/lang/Object;)Z)#63
soot.util.HashChain.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.HashChain.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#1
soot.util.HashChain.add(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Lsoot/util/HashChain;,addLast,(Ljava/lang/Object;)V)#2
soot.util.HashChain.addLast(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.util.HashChain.addLast(Ljava/lang/Object;)V#Constant(L;,null)#1
soot.util.HashChain.addLast(Ljava/lang/Object;)V#ConditionalBranch(Ljava/lang/Object;,ne,8)#2
soot.util.HashChain.addLast(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.util.HashChain.addLast(Ljava/lang/Object;)V#Dup(1,0)#9
soot.util.HashChain.addLast(Ljava/lang/Object;)V#Get(J,NONSTATIC,Lsoot/util/HashChain;,stateCount)#10
soot.util.HashChain.addLast(Ljava/lang/Object;)V#Constant(J,1)#11
soot.util.HashChain.addLast(Ljava/lang/Object;)V#BinaryOp(J,add)#12
soot.util.HashChain.addLast(Ljava/lang/Object;)V#Put(J,NONSTATIC,Lsoot/util/HashChain;,stateCount)#13
soot.util.HashChain.addLast(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#14
soot.util.HashChain.addLast(Ljava/lang/Object;)V#Get(Ljava/util/HashMap;,NONSTATIC,Lsoot/util/HashChain;,map)#15
soot.util.HashChain.addLast(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#16
soot.util.HashChain.addLast(Ljava/lang/Object;)V#Invoke(VIRTUAL,Ljava/util/HashMap;,containsKey,(Ljava/lang/Object;)Z)#17
soot.util.HashChain.addLast(Ljava/lang/Object;)V#Constant(I,0)#18
soot.util.HashChain.addLast(Ljava/lang/Object;)V#ConditionalBranch(I,eq,31)#19
soot.util.HashChain.addLast(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#31
soot.util.HashChain.addLast(Ljava/lang/Object;)V#Get(Ljava/lang/Object;,NONSTATIC,Lsoot/util/HashChain;,lastItem)#32
soot.util.HashChain.addLast(Ljava/lang/Object;)V#Constant(L;,null)#33
soot.util.HashChain.addLast(Ljava/lang/Object;)V#ConditionalBranch(Ljava/lang/Object;,eq,47)#34
soot.util.HashChain.addLast(Ljava/lang/Object;)V#New(Lsoot/util/HashChain$Link;,0)#47
soot.util.HashChain.addLast(Ljava/lang/Object;)V#Dup(1,0)#48
soot.util.HashChain.addLast(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#49
soot.util.HashChain.addLast(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#50
soot.util.HashChain.addLast(Ljava/lang/Object;)V#Invoke(SPECIAL,Lsoot/util/HashChain$Link;,<init>,(Lsoot/util/HashChain;Ljava/lang/Object;)V)#51
soot.util.HashChain.addLast(Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,2)#52
soot.util.HashChain.addLast(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#53
soot.util.HashChain.addLast(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#54
soot.util.HashChain.addLast(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#55
soot.util.HashChain.addLast(Ljava/lang/Object;)V#Dup(1,1)#56
soot.util.HashChain.addLast(Ljava/lang/Object;)V#Put(Ljava/lang/Object;,NONSTATIC,Lsoot/util/HashChain;,lastItem)#57
soot.util.HashChain.addLast(Ljava/lang/Object;)V#Put(Ljava/lang/Object;,NONSTATIC,Lsoot/util/HashChain;,firstItem)#58
soot.util.HashChain.addLast(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#59
soot.util.HashChain.addLast(Ljava/lang/Object;)V#Get(Ljava/util/HashMap;,NONSTATIC,Lsoot/util/HashChain;,map)#60
soot.util.HashChain.addLast(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#61
soot.util.HashChain.addLast(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,2)#62
soot.util.HashChain.addLast(Ljava/lang/Object;)V#Invoke(VIRTUAL,Ljava/util/HashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#63
soot.util.HashChain.addLast(Ljava/lang/Object;)V#Pop(1)#64
soot.util.HashChain.addLast(Ljava/lang/Object;)V#Return(V)#65
soot.util.HashChain.add(Ljava/lang/Object;)Z#Constant(I,1)#3
soot.util.HashChain.add(Ljava/lang/Object;)Z#Return(I)#4
soot.Pack.add(Lsoot/Transform;)V#Pop(1)#64
soot.Pack.add(Lsoot/Transform;)V#Return(V)#65
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#14
soot.PackManager.init()V#New(Lsoot/Transform;,0)#15
soot.PackManager.init()V#Dup(1,0)#16
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jb.ls")#17
soot.PackManager.init()V#Invoke(STATIC,Lsoot/toolkits/scalar/LocalSplitter;,v,()Lsoot/toolkits/scalar/LocalSplitter;)#18
soot.toolkits.scalar.LocalSplitter.v()Lsoot/toolkits/scalar/LocalSplitter;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.toolkits.scalar.LocalSplitter.v()Lsoot/toolkits/scalar/LocalSplitter;#Invoke(VIRTUAL,Lsoot/G;,soot_toolkits_scalar_LocalSplitter,()Lsoot/toolkits/scalar/LocalSplitter;)#1
soot.Singletons.soot_toolkits_scalar_LocalSplitter()Lsoot/toolkits/scalar/LocalSplitter;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_toolkits_scalar_LocalSplitter()Lsoot/toolkits/scalar/LocalSplitter;#Get(Lsoot/toolkits/scalar/LocalSplitter;,NONSTATIC,Lsoot/Singletons;,instance_soot_toolkits_scalar_LocalSplitter)#1
soot.Singletons.soot_toolkits_scalar_LocalSplitter()Lsoot/toolkits/scalar/LocalSplitter;#Constant(L;,null)#2
soot.Singletons.soot_toolkits_scalar_LocalSplitter()Lsoot/toolkits/scalar/LocalSplitter;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_toolkits_scalar_LocalSplitter()Lsoot/toolkits/scalar/LocalSplitter;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_toolkits_scalar_LocalSplitter()Lsoot/toolkits/scalar/LocalSplitter;#New(Lsoot/toolkits/scalar/LocalSplitter;,0)#5
soot.Singletons.soot_toolkits_scalar_LocalSplitter()Lsoot/toolkits/scalar/LocalSplitter;#Dup(1,0)#6
soot.Singletons.soot_toolkits_scalar_LocalSplitter()Lsoot/toolkits/scalar/LocalSplitter;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_toolkits_scalar_LocalSplitter()Lsoot/toolkits/scalar/LocalSplitter;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_toolkits_scalar_LocalSplitter()Lsoot/toolkits/scalar/LocalSplitter;#Invoke(SPECIAL,Lsoot/toolkits/scalar/LocalSplitter;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.toolkits.scalar.LocalSplitter.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.LocalSplitter.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.toolkits.scalar.LocalSplitter.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_toolkits_scalar_LocalSplitter()Lsoot/toolkits/scalar/LocalSplitter;#Put(Lsoot/toolkits/scalar/LocalSplitter;,NONSTATIC,Lsoot/Singletons;,instance_soot_toolkits_scalar_LocalSplitter)#10
soot.Singletons.soot_toolkits_scalar_LocalSplitter()Lsoot/toolkits/scalar/LocalSplitter;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_toolkits_scalar_LocalSplitter()Lsoot/toolkits/scalar/LocalSplitter;#Get(Lsoot/toolkits/scalar/LocalSplitter;,NONSTATIC,Lsoot/Singletons;,instance_soot_toolkits_scalar_LocalSplitter)#12
soot.Singletons.soot_toolkits_scalar_LocalSplitter()Lsoot/toolkits/scalar/LocalSplitter;#Return(Ljava/lang/Object;)#13
soot.toolkits.scalar.LocalSplitter.v()Lsoot/toolkits/scalar/LocalSplitter;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#19
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#20
soot.util.HashChain$LinkIterator.hasNext()Z#Constant(I,1)#21
soot.util.HashChain$LinkIterator.hasNext()Z#Return(I)#22
soot.Pack.get(Ljava/lang/String;)Lsoot/Transform;#LocalLoad(Ljava/lang/Object;,2)#5
soot.Pack.get(Ljava/lang/String;)Lsoot/Transform;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#6
soot.util.HashChain$LinkIterator.next()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.HashChain$LinkIterator.next()Ljava/lang/Object;#Get(Lsoot/util/HashChain;,NONSTATIC,Lsoot/util/HashChain$LinkIterator;,this$0)#1
soot.util.HashChain$LinkIterator.next()Ljava/lang/Object;#Invoke(STATIC,Lsoot/util/HashChain;,access$3,(Lsoot/util/HashChain;)J)#2
soot.util.HashChain$LinkIterator.next()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#3
soot.util.HashChain$LinkIterator.next()Ljava/lang/Object;#Get(J,NONSTATIC,Lsoot/util/HashChain$LinkIterator;,iteratorStateCount)#4
soot.util.HashChain$LinkIterator.next()Ljava/lang/Object;#Comparison(J,cmp)#5
soot.util.HashChain$LinkIterator.next()Ljava/lang/Object;#Constant(I,0)#6
soot.util.HashChain$LinkIterator.next()Ljava/lang/Object;#ConditionalBranch(I,eq,12)#7
soot.util.HashChain$LinkIterator.next()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#12
soot.util.HashChain$LinkIterator.next()Ljava/lang/Object;#Get(Lsoot/util/HashChain$Link;,NONSTATIC,Lsoot/util/HashChain$LinkIterator;,currentLink)#13
soot.util.HashChain$LinkIterator.next()Ljava/lang/Object;#Invoke(VIRTUAL,Lsoot/util/HashChain$Link;,getNext,()Lsoot/util/HashChain$Link;)#14
soot.util.HashChain$LinkIterator.next()Ljava/lang/Object;#LocalStore(Ljava/lang/Object;,1)#15
soot.util.HashChain$LinkIterator.next()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,1)#16
soot.util.HashChain$LinkIterator.next()Ljava/lang/Object;#Constant(L;,null)#17
soot.util.HashChain$LinkIterator.next()Ljava/lang/Object;#ConditionalBranch(Ljava/lang/Object;,ne,39)#18
soot.util.HashChain$LinkIterator.next()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#39
soot.util.HashChain$LinkIterator.next()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,1)#40
soot.util.HashChain$LinkIterator.next()Ljava/lang/Object;#Put(Lsoot/util/HashChain$Link;,NONSTATIC,Lsoot/util/HashChain$LinkIterator;,currentLink)#41
soot.util.HashChain$LinkIterator.next()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#42
soot.util.HashChain$LinkIterator.next()Ljava/lang/Object;#Constant(I,1)#43
soot.util.HashChain$LinkIterator.next()Ljava/lang/Object;#Put(Z,NONSTATIC,Lsoot/util/HashChain$LinkIterator;,state)#44
soot.util.HashChain$LinkIterator.next()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#45
soot.util.HashChain$LinkIterator.next()Ljava/lang/Object;#Get(Lsoot/util/HashChain$Link;,NONSTATIC,Lsoot/util/HashChain$LinkIterator;,currentLink)#46
soot.util.HashChain$LinkIterator.next()Ljava/lang/Object;#Invoke(VIRTUAL,Lsoot/util/HashChain$Link;,getItem,()Ljava/lang/Object;)#47
soot.util.HashChain$Link.getItem()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.HashChain$Link.getItem()Ljava/lang/Object;#Get(Ljava/lang/Object;,NONSTATIC,Lsoot/util/HashChain$Link;,item)#1
soot.util.HashChain$Link.getItem()Ljava/lang/Object;#Return(Ljava/lang/Object;)#2
soot.util.HashChain$LinkIterator.next()Ljava/lang/Object;#Return(Ljava/lang/Object;)#48
soot.Pack.get(Ljava/lang/String;)Lsoot/Transform;#CheckCast(Lsoot/Transform;)#7
soot.Pack.get(Ljava/lang/String;)Lsoot/Transform;#LocalStore(Ljava/lang/Object;,3)#8
soot.Pack.get(Ljava/lang/String;)Lsoot/Transform;#LocalLoad(Ljava/lang/Object;,3)#9
soot.Pack.get(Ljava/lang/String;)Lsoot/Transform;#Invoke(VIRTUAL,Lsoot/Transform;,getPhaseName,()Ljava/lang/String;)#10
soot.Pack.get(Ljava/lang/String;)Lsoot/Transform;#LocalLoad(Ljava/lang/Object;,1)#11
soot.Pack.get(Ljava/lang/String;)Lsoot/Transform;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#12
soot.Pack.get(Ljava/lang/String;)Lsoot/Transform;#Constant(I,0)#13
soot.Pack.get(Ljava/lang/String;)Lsoot/Transform;#ConditionalBranch(I,eq,17)#14
soot.util.HashChain.addLast(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#35
soot.util.HashChain.addLast(Ljava/lang/Object;)V#Get(Ljava/util/HashMap;,NONSTATIC,Lsoot/util/HashChain;,map)#36
soot.util.HashChain.addLast(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#37
soot.util.HashChain.addLast(Ljava/lang/Object;)V#Get(Ljava/lang/Object;,NONSTATIC,Lsoot/util/HashChain;,lastItem)#38
soot.util.HashChain.addLast(Ljava/lang/Object;)V#Invoke(VIRTUAL,Ljava/util/HashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#39
soot.util.HashChain.addLast(Ljava/lang/Object;)V#CheckCast(Lsoot/util/HashChain$Link;)#40
soot.util.HashChain.addLast(Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,3)#41
soot.util.HashChain.addLast(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,3)#42
soot.util.HashChain.addLast(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#43
soot.util.HashChain.addLast(Ljava/lang/Object;)V#Invoke(VIRTUAL,Lsoot/util/HashChain$Link;,insertAfter,(Ljava/lang/Object;)Lsoot/util/HashChain$Link;)#44
soot.util.HashChain$Link.insertAfter(Ljava/lang/Object;)Lsoot/util/HashChain$Link;#New(Lsoot/util/HashChain$Link;,0)#0
soot.util.HashChain$Link.insertAfter(Ljava/lang/Object;)Lsoot/util/HashChain$Link;#Dup(1,0)#1
soot.util.HashChain$Link.insertAfter(Ljava/lang/Object;)Lsoot/util/HashChain$Link;#LocalLoad(Ljava/lang/Object;,0)#2
soot.util.HashChain$Link.insertAfter(Ljava/lang/Object;)Lsoot/util/HashChain$Link;#Get(Lsoot/util/HashChain;,NONSTATIC,Lsoot/util/HashChain$Link;,this$0)#3
soot.util.HashChain$Link.insertAfter(Ljava/lang/Object;)Lsoot/util/HashChain$Link;#LocalLoad(Ljava/lang/Object;,1)#4
soot.util.HashChain$Link.insertAfter(Ljava/lang/Object;)Lsoot/util/HashChain$Link;#Invoke(SPECIAL,Lsoot/util/HashChain$Link;,<init>,(Lsoot/util/HashChain;Ljava/lang/Object;)V)#5
soot.util.HashChain$Link.insertAfter(Ljava/lang/Object;)Lsoot/util/HashChain$Link;#LocalStore(Ljava/lang/Object;,2)#6
soot.util.HashChain$Link.insertAfter(Ljava/lang/Object;)Lsoot/util/HashChain$Link;#LocalLoad(Ljava/lang/Object;,0)#7
soot.util.HashChain$Link.insertAfter(Ljava/lang/Object;)Lsoot/util/HashChain$Link;#LocalLoad(Ljava/lang/Object;,2)#8
soot.util.HashChain$Link.insertAfter(Ljava/lang/Object;)Lsoot/util/HashChain$Link;#LocalLoad(Ljava/lang/Object;,0)#9
soot.util.HashChain$Link.insertAfter(Ljava/lang/Object;)Lsoot/util/HashChain$Link;#Get(Lsoot/util/HashChain$Link;,NONSTATIC,Lsoot/util/HashChain$Link;,nextLink)#10
soot.util.HashChain$Link.insertAfter(Ljava/lang/Object;)Lsoot/util/HashChain$Link;#Invoke(SPECIAL,Lsoot/util/HashChain$Link;,bind,(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V)#11
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#Constant(L;,null)#1
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#ConditionalBranch(Ljava/lang/Object;,ne,17)#2
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#LocalLoad(Ljava/lang/Object;,1)#17
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#LocalLoad(Ljava/lang/Object;,2)#18
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#Invoke(VIRTUAL,Lsoot/util/HashChain$Link;,setNext,(Lsoot/util/HashChain$Link;)V)#19
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#LocalLoad(Ljava/lang/Object;,2)#20
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#Constant(L;,null)#21
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#ConditionalBranch(Ljava/lang/Object;,ne,37)#22
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#LocalLoad(Ljava/lang/Object;,1)#23
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#Constant(L;,null)#24
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#ConditionalBranch(Ljava/lang/Object;,eq,32)#25
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#LocalLoad(Ljava/lang/Object;,0)#26
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#Get(Lsoot/util/HashChain;,NONSTATIC,Lsoot/util/HashChain$Link;,this$0)#27
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#LocalLoad(Ljava/lang/Object;,1)#28
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#Invoke(VIRTUAL,Lsoot/util/HashChain$Link;,getItem,()Ljava/lang/Object;)#29
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#Invoke(STATIC,Lsoot/util/HashChain;,access$1,(Lsoot/util/HashChain;Ljava/lang/Object;)V)#30
soot.util.HashChain.access$1(Lsoot/util/HashChain;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.HashChain.access$1(Lsoot/util/HashChain;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.util.HashChain.access$1(Lsoot/util/HashChain;Ljava/lang/Object;)V#Put(Ljava/lang/Object;,NONSTATIC,Lsoot/util/HashChain;,lastItem)#2
soot.util.HashChain.access$1(Lsoot/util/HashChain;Ljava/lang/Object;)V#Return(V)#3
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#Goto(40)#31
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#Return(V)#40
soot.util.HashChain$Link.insertAfter(Ljava/lang/Object;)Lsoot/util/HashChain$Link;#LocalLoad(Ljava/lang/Object;,0)#12
soot.util.HashChain$Link.insertAfter(Ljava/lang/Object;)Lsoot/util/HashChain$Link;#LocalLoad(Ljava/lang/Object;,0)#13
soot.util.HashChain$Link.insertAfter(Ljava/lang/Object;)Lsoot/util/HashChain$Link;#LocalLoad(Ljava/lang/Object;,2)#14
soot.util.HashChain$Link.insertAfter(Ljava/lang/Object;)Lsoot/util/HashChain$Link;#Invoke(SPECIAL,Lsoot/util/HashChain$Link;,bind,(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V)#15
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#LocalLoad(Ljava/lang/Object;,2)#37
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#LocalLoad(Ljava/lang/Object;,1)#38
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#Invoke(VIRTUAL,Lsoot/util/HashChain$Link;,setPrevious,(Lsoot/util/HashChain$Link;)V)#39
soot.util.HashChain$Link.setPrevious(Lsoot/util/HashChain$Link;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.HashChain$Link.setPrevious(Lsoot/util/HashChain$Link;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.util.HashChain$Link.setPrevious(Lsoot/util/HashChain$Link;)V#Put(Lsoot/util/HashChain$Link;,NONSTATIC,Lsoot/util/HashChain$Link;,previousLink)#2
soot.util.HashChain$Link.setPrevious(Lsoot/util/HashChain$Link;)V#Return(V)#3
soot.util.HashChain$Link.insertAfter(Ljava/lang/Object;)Lsoot/util/HashChain$Link;#LocalLoad(Ljava/lang/Object;,2)#16
soot.util.HashChain$Link.insertAfter(Ljava/lang/Object;)Lsoot/util/HashChain$Link;#Return(Ljava/lang/Object;)#17
soot.util.HashChain.addLast(Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,2)#45
soot.util.HashChain.addLast(Ljava/lang/Object;)V#Goto(59)#46
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#21
soot.PackManager.init()V#New(Lsoot/Transform;,0)#22
soot.PackManager.init()V#Dup(1,0)#23
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jb.a")#24
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/base/Aggregator;,v,()Lsoot/jimple/toolkits/base/Aggregator;)#25
soot.jimple.toolkits.base.Aggregator.v()Lsoot/jimple/toolkits/base/Aggregator;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.base.Aggregator.v()Lsoot/jimple/toolkits/base/Aggregator;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_base_Aggregator,()Lsoot/jimple/toolkits/base/Aggregator;)#1
soot.Singletons.soot_jimple_toolkits_base_Aggregator()Lsoot/jimple/toolkits/base/Aggregator;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_base_Aggregator()Lsoot/jimple/toolkits/base/Aggregator;#Get(Lsoot/jimple/toolkits/base/Aggregator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_base_Aggregator)#1
soot.Singletons.soot_jimple_toolkits_base_Aggregator()Lsoot/jimple/toolkits/base/Aggregator;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_base_Aggregator()Lsoot/jimple/toolkits/base/Aggregator;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_base_Aggregator()Lsoot/jimple/toolkits/base/Aggregator;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_base_Aggregator()Lsoot/jimple/toolkits/base/Aggregator;#New(Lsoot/jimple/toolkits/base/Aggregator;,0)#5
soot.Singletons.soot_jimple_toolkits_base_Aggregator()Lsoot/jimple/toolkits/base/Aggregator;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_base_Aggregator()Lsoot/jimple/toolkits/base/Aggregator;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_base_Aggregator()Lsoot/jimple/toolkits/base/Aggregator;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_base_Aggregator()Lsoot/jimple/toolkits/base/Aggregator;#Invoke(SPECIAL,Lsoot/jimple/toolkits/base/Aggregator;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.base.Aggregator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.base.Aggregator.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.jimple.toolkits.base.Aggregator.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_toolkits_base_Aggregator()Lsoot/jimple/toolkits/base/Aggregator;#Put(Lsoot/jimple/toolkits/base/Aggregator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_base_Aggregator)#10
soot.Singletons.soot_jimple_toolkits_base_Aggregator()Lsoot/jimple/toolkits/base/Aggregator;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_base_Aggregator()Lsoot/jimple/toolkits/base/Aggregator;#Get(Lsoot/jimple/toolkits/base/Aggregator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_base_Aggregator)#12
soot.Singletons.soot_jimple_toolkits_base_Aggregator()Lsoot/jimple/toolkits/base/Aggregator;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.base.Aggregator.v()Lsoot/jimple/toolkits/base/Aggregator;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#26
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#27
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#28
soot.PackManager.init()V#New(Lsoot/Transform;,0)#29
soot.PackManager.init()V#Dup(1,0)#30
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jb.ule")#31
soot.PackManager.init()V#Invoke(STATIC,Lsoot/toolkits/scalar/UnusedLocalEliminator;,v,()Lsoot/toolkits/scalar/UnusedLocalEliminator;)#32
soot.toolkits.scalar.UnusedLocalEliminator.v()Lsoot/toolkits/scalar/UnusedLocalEliminator;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.toolkits.scalar.UnusedLocalEliminator.v()Lsoot/toolkits/scalar/UnusedLocalEliminator;#Invoke(VIRTUAL,Lsoot/G;,soot_toolkits_scalar_UnusedLocalEliminator,()Lsoot/toolkits/scalar/UnusedLocalEliminator;)#1
soot.Singletons.soot_toolkits_scalar_UnusedLocalEliminator()Lsoot/toolkits/scalar/UnusedLocalEliminator;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_toolkits_scalar_UnusedLocalEliminator()Lsoot/toolkits/scalar/UnusedLocalEliminator;#Get(Lsoot/toolkits/scalar/UnusedLocalEliminator;,NONSTATIC,Lsoot/Singletons;,instance_soot_toolkits_scalar_UnusedLocalEliminator)#1
soot.Singletons.soot_toolkits_scalar_UnusedLocalEliminator()Lsoot/toolkits/scalar/UnusedLocalEliminator;#Constant(L;,null)#2
soot.Singletons.soot_toolkits_scalar_UnusedLocalEliminator()Lsoot/toolkits/scalar/UnusedLocalEliminator;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_toolkits_scalar_UnusedLocalEliminator()Lsoot/toolkits/scalar/UnusedLocalEliminator;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_toolkits_scalar_UnusedLocalEliminator()Lsoot/toolkits/scalar/UnusedLocalEliminator;#New(Lsoot/toolkits/scalar/UnusedLocalEliminator;,0)#5
soot.Singletons.soot_toolkits_scalar_UnusedLocalEliminator()Lsoot/toolkits/scalar/UnusedLocalEliminator;#Dup(1,0)#6
soot.Singletons.soot_toolkits_scalar_UnusedLocalEliminator()Lsoot/toolkits/scalar/UnusedLocalEliminator;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_toolkits_scalar_UnusedLocalEliminator()Lsoot/toolkits/scalar/UnusedLocalEliminator;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_toolkits_scalar_UnusedLocalEliminator()Lsoot/toolkits/scalar/UnusedLocalEliminator;#Invoke(SPECIAL,Lsoot/toolkits/scalar/UnusedLocalEliminator;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.toolkits.scalar.UnusedLocalEliminator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.UnusedLocalEliminator.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.toolkits.scalar.UnusedLocalEliminator.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_toolkits_scalar_UnusedLocalEliminator()Lsoot/toolkits/scalar/UnusedLocalEliminator;#Put(Lsoot/toolkits/scalar/UnusedLocalEliminator;,NONSTATIC,Lsoot/Singletons;,instance_soot_toolkits_scalar_UnusedLocalEliminator)#10
soot.Singletons.soot_toolkits_scalar_UnusedLocalEliminator()Lsoot/toolkits/scalar/UnusedLocalEliminator;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_toolkits_scalar_UnusedLocalEliminator()Lsoot/toolkits/scalar/UnusedLocalEliminator;#Get(Lsoot/toolkits/scalar/UnusedLocalEliminator;,NONSTATIC,Lsoot/Singletons;,instance_soot_toolkits_scalar_UnusedLocalEliminator)#12
soot.Singletons.soot_toolkits_scalar_UnusedLocalEliminator()Lsoot/toolkits/scalar/UnusedLocalEliminator;#Return(Ljava/lang/Object;)#13
soot.toolkits.scalar.UnusedLocalEliminator.v()Lsoot/toolkits/scalar/UnusedLocalEliminator;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#33
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#34
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#35
soot.PackManager.init()V#New(Lsoot/Transform;,0)#36
soot.PackManager.init()V#Dup(1,0)#37
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jb.tr")#38
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/typing/TypeAssigner;,v,()Lsoot/jimple/toolkits/typing/TypeAssigner;)#39
soot.jimple.toolkits.typing.TypeAssigner.v()Lsoot/jimple/toolkits/typing/TypeAssigner;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.typing.TypeAssigner.v()Lsoot/jimple/toolkits/typing/TypeAssigner;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_typing_TypeAssigner,()Lsoot/jimple/toolkits/typing/TypeAssigner;)#1
soot.Singletons.soot_jimple_toolkits_typing_TypeAssigner()Lsoot/jimple/toolkits/typing/TypeAssigner;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_typing_TypeAssigner()Lsoot/jimple/toolkits/typing/TypeAssigner;#Get(Lsoot/jimple/toolkits/typing/TypeAssigner;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_typing_TypeAssigner)#1
soot.Singletons.soot_jimple_toolkits_typing_TypeAssigner()Lsoot/jimple/toolkits/typing/TypeAssigner;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_typing_TypeAssigner()Lsoot/jimple/toolkits/typing/TypeAssigner;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_typing_TypeAssigner()Lsoot/jimple/toolkits/typing/TypeAssigner;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_typing_TypeAssigner()Lsoot/jimple/toolkits/typing/TypeAssigner;#New(Lsoot/jimple/toolkits/typing/TypeAssigner;,0)#5
soot.Singletons.soot_jimple_toolkits_typing_TypeAssigner()Lsoot/jimple/toolkits/typing/TypeAssigner;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_typing_TypeAssigner()Lsoot/jimple/toolkits/typing/TypeAssigner;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_typing_TypeAssigner()Lsoot/jimple/toolkits/typing/TypeAssigner;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_typing_TypeAssigner()Lsoot/jimple/toolkits/typing/TypeAssigner;#Invoke(SPECIAL,Lsoot/jimple/toolkits/typing/TypeAssigner;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.typing.TypeAssigner.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.TypeAssigner.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.jimple.toolkits.typing.TypeAssigner.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_toolkits_typing_TypeAssigner()Lsoot/jimple/toolkits/typing/TypeAssigner;#Put(Lsoot/jimple/toolkits/typing/TypeAssigner;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_typing_TypeAssigner)#10
soot.Singletons.soot_jimple_toolkits_typing_TypeAssigner()Lsoot/jimple/toolkits/typing/TypeAssigner;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_typing_TypeAssigner()Lsoot/jimple/toolkits/typing/TypeAssigner;#Get(Lsoot/jimple/toolkits/typing/TypeAssigner;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_typing_TypeAssigner)#12
soot.Singletons.soot_jimple_toolkits_typing_TypeAssigner()Lsoot/jimple/toolkits/typing/TypeAssigner;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.typing.TypeAssigner.v()Lsoot/jimple/toolkits/typing/TypeAssigner;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#40
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#41
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#42
soot.PackManager.init()V#New(Lsoot/Transform;,0)#43
soot.PackManager.init()V#Dup(1,0)#44
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jb.ulp")#45
soot.PackManager.init()V#Invoke(STATIC,Lsoot/toolkits/scalar/LocalPacker;,v,()Lsoot/toolkits/scalar/LocalPacker;)#46
soot.toolkits.scalar.LocalPacker.v()Lsoot/toolkits/scalar/LocalPacker;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.toolkits.scalar.LocalPacker.v()Lsoot/toolkits/scalar/LocalPacker;#Invoke(VIRTUAL,Lsoot/G;,soot_toolkits_scalar_LocalPacker,()Lsoot/toolkits/scalar/LocalPacker;)#1
soot.Singletons.soot_toolkits_scalar_LocalPacker()Lsoot/toolkits/scalar/LocalPacker;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_toolkits_scalar_LocalPacker()Lsoot/toolkits/scalar/LocalPacker;#Get(Lsoot/toolkits/scalar/LocalPacker;,NONSTATIC,Lsoot/Singletons;,instance_soot_toolkits_scalar_LocalPacker)#1
soot.Singletons.soot_toolkits_scalar_LocalPacker()Lsoot/toolkits/scalar/LocalPacker;#Constant(L;,null)#2
soot.Singletons.soot_toolkits_scalar_LocalPacker()Lsoot/toolkits/scalar/LocalPacker;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_toolkits_scalar_LocalPacker()Lsoot/toolkits/scalar/LocalPacker;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_toolkits_scalar_LocalPacker()Lsoot/toolkits/scalar/LocalPacker;#New(Lsoot/toolkits/scalar/LocalPacker;,0)#5
soot.Singletons.soot_toolkits_scalar_LocalPacker()Lsoot/toolkits/scalar/LocalPacker;#Dup(1,0)#6
soot.Singletons.soot_toolkits_scalar_LocalPacker()Lsoot/toolkits/scalar/LocalPacker;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_toolkits_scalar_LocalPacker()Lsoot/toolkits/scalar/LocalPacker;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_toolkits_scalar_LocalPacker()Lsoot/toolkits/scalar/LocalPacker;#Invoke(SPECIAL,Lsoot/toolkits/scalar/LocalPacker;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.toolkits.scalar.LocalPacker.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.LocalPacker.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.toolkits.scalar.LocalPacker.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_toolkits_scalar_LocalPacker()Lsoot/toolkits/scalar/LocalPacker;#Put(Lsoot/toolkits/scalar/LocalPacker;,NONSTATIC,Lsoot/Singletons;,instance_soot_toolkits_scalar_LocalPacker)#10
soot.Singletons.soot_toolkits_scalar_LocalPacker()Lsoot/toolkits/scalar/LocalPacker;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_toolkits_scalar_LocalPacker()Lsoot/toolkits/scalar/LocalPacker;#Get(Lsoot/toolkits/scalar/LocalPacker;,NONSTATIC,Lsoot/Singletons;,instance_soot_toolkits_scalar_LocalPacker)#12
soot.Singletons.soot_toolkits_scalar_LocalPacker()Lsoot/toolkits/scalar/LocalPacker;#Return(Ljava/lang/Object;)#13
soot.toolkits.scalar.LocalPacker.v()Lsoot/toolkits/scalar/LocalPacker;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#47
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#48
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#49
soot.PackManager.init()V#New(Lsoot/Transform;,0)#50
soot.PackManager.init()V#Dup(1,0)#51
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jb.lns")#52
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/scalar/LocalNameStandardizer;,v,()Lsoot/jimple/toolkits/scalar/LocalNameStandardizer;)#53
soot.jimple.toolkits.scalar.LocalNameStandardizer.v()Lsoot/jimple/toolkits/scalar/LocalNameStandardizer;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.scalar.LocalNameStandardizer.v()Lsoot/jimple/toolkits/scalar/LocalNameStandardizer;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_scalar_LocalNameStandardizer,()Lsoot/jimple/toolkits/scalar/LocalNameStandardizer;)#1
soot.Singletons.soot_jimple_toolkits_scalar_LocalNameStandardizer()Lsoot/jimple/toolkits/scalar/LocalNameStandardizer;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_scalar_LocalNameStandardizer()Lsoot/jimple/toolkits/scalar/LocalNameStandardizer;#Get(Lsoot/jimple/toolkits/scalar/LocalNameStandardizer;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_LocalNameStandardizer)#1
soot.Singletons.soot_jimple_toolkits_scalar_LocalNameStandardizer()Lsoot/jimple/toolkits/scalar/LocalNameStandardizer;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_scalar_LocalNameStandardizer()Lsoot/jimple/toolkits/scalar/LocalNameStandardizer;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_scalar_LocalNameStandardizer()Lsoot/jimple/toolkits/scalar/LocalNameStandardizer;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_scalar_LocalNameStandardizer()Lsoot/jimple/toolkits/scalar/LocalNameStandardizer;#New(Lsoot/jimple/toolkits/scalar/LocalNameStandardizer;,0)#5
soot.Singletons.soot_jimple_toolkits_scalar_LocalNameStandardizer()Lsoot/jimple/toolkits/scalar/LocalNameStandardizer;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_scalar_LocalNameStandardizer()Lsoot/jimple/toolkits/scalar/LocalNameStandardizer;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_scalar_LocalNameStandardizer()Lsoot/jimple/toolkits/scalar/LocalNameStandardizer;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_scalar_LocalNameStandardizer()Lsoot/jimple/toolkits/scalar/LocalNameStandardizer;#Invoke(SPECIAL,Lsoot/jimple/toolkits/scalar/LocalNameStandardizer;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.scalar.LocalNameStandardizer.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.scalar.LocalNameStandardizer.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.jimple.toolkits.scalar.LocalNameStandardizer.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_toolkits_scalar_LocalNameStandardizer()Lsoot/jimple/toolkits/scalar/LocalNameStandardizer;#Put(Lsoot/jimple/toolkits/scalar/LocalNameStandardizer;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_LocalNameStandardizer)#10
soot.Singletons.soot_jimple_toolkits_scalar_LocalNameStandardizer()Lsoot/jimple/toolkits/scalar/LocalNameStandardizer;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_scalar_LocalNameStandardizer()Lsoot/jimple/toolkits/scalar/LocalNameStandardizer;#Get(Lsoot/jimple/toolkits/scalar/LocalNameStandardizer;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_LocalNameStandardizer)#12
soot.Singletons.soot_jimple_toolkits_scalar_LocalNameStandardizer()Lsoot/jimple/toolkits/scalar/LocalNameStandardizer;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.scalar.LocalNameStandardizer.v()Lsoot/jimple/toolkits/scalar/LocalNameStandardizer;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#54
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#55
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#56
soot.PackManager.init()V#New(Lsoot/Transform;,0)#57
soot.PackManager.init()V#Dup(1,0)#58
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jb.cp")#59
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/scalar/CopyPropagator;,v,()Lsoot/jimple/toolkits/scalar/CopyPropagator;)#60
soot.jimple.toolkits.scalar.CopyPropagator.v()Lsoot/jimple/toolkits/scalar/CopyPropagator;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.scalar.CopyPropagator.v()Lsoot/jimple/toolkits/scalar/CopyPropagator;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_scalar_CopyPropagator,()Lsoot/jimple/toolkits/scalar/CopyPropagator;)#1
soot.Singletons.soot_jimple_toolkits_scalar_CopyPropagator()Lsoot/jimple/toolkits/scalar/CopyPropagator;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_scalar_CopyPropagator()Lsoot/jimple/toolkits/scalar/CopyPropagator;#Get(Lsoot/jimple/toolkits/scalar/CopyPropagator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_CopyPropagator)#1
soot.Singletons.soot_jimple_toolkits_scalar_CopyPropagator()Lsoot/jimple/toolkits/scalar/CopyPropagator;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_scalar_CopyPropagator()Lsoot/jimple/toolkits/scalar/CopyPropagator;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_scalar_CopyPropagator()Lsoot/jimple/toolkits/scalar/CopyPropagator;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_scalar_CopyPropagator()Lsoot/jimple/toolkits/scalar/CopyPropagator;#New(Lsoot/jimple/toolkits/scalar/CopyPropagator;,0)#5
soot.Singletons.soot_jimple_toolkits_scalar_CopyPropagator()Lsoot/jimple/toolkits/scalar/CopyPropagator;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_scalar_CopyPropagator()Lsoot/jimple/toolkits/scalar/CopyPropagator;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_scalar_CopyPropagator()Lsoot/jimple/toolkits/scalar/CopyPropagator;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_scalar_CopyPropagator()Lsoot/jimple/toolkits/scalar/CopyPropagator;#Invoke(SPECIAL,Lsoot/jimple/toolkits/scalar/CopyPropagator;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.scalar.CopyPropagator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.scalar.CopyPropagator.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.jimple.toolkits.scalar.CopyPropagator.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_toolkits_scalar_CopyPropagator()Lsoot/jimple/toolkits/scalar/CopyPropagator;#Put(Lsoot/jimple/toolkits/scalar/CopyPropagator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_CopyPropagator)#10
soot.Singletons.soot_jimple_toolkits_scalar_CopyPropagator()Lsoot/jimple/toolkits/scalar/CopyPropagator;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_scalar_CopyPropagator()Lsoot/jimple/toolkits/scalar/CopyPropagator;#Get(Lsoot/jimple/toolkits/scalar/CopyPropagator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_CopyPropagator)#12
soot.Singletons.soot_jimple_toolkits_scalar_CopyPropagator()Lsoot/jimple/toolkits/scalar/CopyPropagator;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.scalar.CopyPropagator.v()Lsoot/jimple/toolkits/scalar/CopyPropagator;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#61
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#62
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#63
soot.PackManager.init()V#New(Lsoot/Transform;,0)#64
soot.PackManager.init()V#Dup(1,0)#65
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jb.dae")#66
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/scalar/DeadAssignmentEliminator;,v,()Lsoot/jimple/toolkits/scalar/DeadAssignmentEliminator;)#67
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.v()Lsoot/jimple/toolkits/scalar/DeadAssignmentEliminator;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.v()Lsoot/jimple/toolkits/scalar/DeadAssignmentEliminator;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_scalar_DeadAssignmentEliminator,()Lsoot/jimple/toolkits/scalar/DeadAssignmentEliminator;)#1
soot.Singletons.soot_jimple_toolkits_scalar_DeadAssignmentEliminator()Lsoot/jimple/toolkits/scalar/DeadAssignmentEliminator;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_scalar_DeadAssignmentEliminator()Lsoot/jimple/toolkits/scalar/DeadAssignmentEliminator;#Get(Lsoot/jimple/toolkits/scalar/DeadAssignmentEliminator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_DeadAssignmentEliminator)#1
soot.Singletons.soot_jimple_toolkits_scalar_DeadAssignmentEliminator()Lsoot/jimple/toolkits/scalar/DeadAssignmentEliminator;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_scalar_DeadAssignmentEliminator()Lsoot/jimple/toolkits/scalar/DeadAssignmentEliminator;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_scalar_DeadAssignmentEliminator()Lsoot/jimple/toolkits/scalar/DeadAssignmentEliminator;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_scalar_DeadAssignmentEliminator()Lsoot/jimple/toolkits/scalar/DeadAssignmentEliminator;#New(Lsoot/jimple/toolkits/scalar/DeadAssignmentEliminator;,0)#5
soot.Singletons.soot_jimple_toolkits_scalar_DeadAssignmentEliminator()Lsoot/jimple/toolkits/scalar/DeadAssignmentEliminator;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_scalar_DeadAssignmentEliminator()Lsoot/jimple/toolkits/scalar/DeadAssignmentEliminator;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_scalar_DeadAssignmentEliminator()Lsoot/jimple/toolkits/scalar/DeadAssignmentEliminator;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_scalar_DeadAssignmentEliminator()Lsoot/jimple/toolkits/scalar/DeadAssignmentEliminator;#Invoke(SPECIAL,Lsoot/jimple/toolkits/scalar/DeadAssignmentEliminator;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_toolkits_scalar_DeadAssignmentEliminator()Lsoot/jimple/toolkits/scalar/DeadAssignmentEliminator;#Put(Lsoot/jimple/toolkits/scalar/DeadAssignmentEliminator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_DeadAssignmentEliminator)#10
soot.Singletons.soot_jimple_toolkits_scalar_DeadAssignmentEliminator()Lsoot/jimple/toolkits/scalar/DeadAssignmentEliminator;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_scalar_DeadAssignmentEliminator()Lsoot/jimple/toolkits/scalar/DeadAssignmentEliminator;#Get(Lsoot/jimple/toolkits/scalar/DeadAssignmentEliminator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_DeadAssignmentEliminator)#12
soot.Singletons.soot_jimple_toolkits_scalar_DeadAssignmentEliminator()Lsoot/jimple/toolkits/scalar/DeadAssignmentEliminator;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.v()Lsoot/jimple/toolkits/scalar/DeadAssignmentEliminator;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#68
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#69
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#70
soot.PackManager.init()V#New(Lsoot/Transform;,0)#71
soot.PackManager.init()V#Dup(1,0)#72
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jb.cp-ule")#73
soot.PackManager.init()V#Invoke(STATIC,Lsoot/toolkits/scalar/UnusedLocalEliminator;,v,()Lsoot/toolkits/scalar/UnusedLocalEliminator;)#74
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#75
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#76
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#77
soot.PackManager.init()V#New(Lsoot/Transform;,0)#78
soot.PackManager.init()V#Dup(1,0)#79
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jb.lp")#80
soot.PackManager.init()V#Invoke(STATIC,Lsoot/toolkits/scalar/LocalPacker;,v,()Lsoot/toolkits/scalar/LocalPacker;)#81
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#82
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#83
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#84
soot.PackManager.init()V#New(Lsoot/Transform;,0)#85
soot.PackManager.init()V#Dup(1,0)#86
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jb.ne")#87
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/scalar/NopEliminator;,v,()Lsoot/jimple/toolkits/scalar/NopEliminator;)#88
soot.jimple.toolkits.scalar.NopEliminator.v()Lsoot/jimple/toolkits/scalar/NopEliminator;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.scalar.NopEliminator.v()Lsoot/jimple/toolkits/scalar/NopEliminator;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_scalar_NopEliminator,()Lsoot/jimple/toolkits/scalar/NopEliminator;)#1
soot.Singletons.soot_jimple_toolkits_scalar_NopEliminator()Lsoot/jimple/toolkits/scalar/NopEliminator;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_scalar_NopEliminator()Lsoot/jimple/toolkits/scalar/NopEliminator;#Get(Lsoot/jimple/toolkits/scalar/NopEliminator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_NopEliminator)#1
soot.Singletons.soot_jimple_toolkits_scalar_NopEliminator()Lsoot/jimple/toolkits/scalar/NopEliminator;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_scalar_NopEliminator()Lsoot/jimple/toolkits/scalar/NopEliminator;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_scalar_NopEliminator()Lsoot/jimple/toolkits/scalar/NopEliminator;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_scalar_NopEliminator()Lsoot/jimple/toolkits/scalar/NopEliminator;#New(Lsoot/jimple/toolkits/scalar/NopEliminator;,0)#5
soot.Singletons.soot_jimple_toolkits_scalar_NopEliminator()Lsoot/jimple/toolkits/scalar/NopEliminator;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_scalar_NopEliminator()Lsoot/jimple/toolkits/scalar/NopEliminator;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_scalar_NopEliminator()Lsoot/jimple/toolkits/scalar/NopEliminator;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_scalar_NopEliminator()Lsoot/jimple/toolkits/scalar/NopEliminator;#Invoke(SPECIAL,Lsoot/jimple/toolkits/scalar/NopEliminator;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.scalar.NopEliminator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.scalar.NopEliminator.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.jimple.toolkits.scalar.NopEliminator.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_toolkits_scalar_NopEliminator()Lsoot/jimple/toolkits/scalar/NopEliminator;#Put(Lsoot/jimple/toolkits/scalar/NopEliminator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_NopEliminator)#10
soot.Singletons.soot_jimple_toolkits_scalar_NopEliminator()Lsoot/jimple/toolkits/scalar/NopEliminator;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_scalar_NopEliminator()Lsoot/jimple/toolkits/scalar/NopEliminator;#Get(Lsoot/jimple/toolkits/scalar/NopEliminator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_NopEliminator)#12
soot.Singletons.soot_jimple_toolkits_scalar_NopEliminator()Lsoot/jimple/toolkits/scalar/NopEliminator;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.scalar.NopEliminator.v()Lsoot/jimple/toolkits/scalar/NopEliminator;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#89
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#90
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#91
soot.PackManager.init()V#New(Lsoot/Transform;,0)#92
soot.PackManager.init()V#Dup(1,0)#93
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jb.uce")#94
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;,v,()Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;)#95
soot.jimple.toolkits.scalar.UnreachableCodeEliminator.v()Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.scalar.UnreachableCodeEliminator.v()Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_scalar_UnreachableCodeEliminator,()Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;)#1
soot.Singletons.soot_jimple_toolkits_scalar_UnreachableCodeEliminator()Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_scalar_UnreachableCodeEliminator()Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;#Get(Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_UnreachableCodeEliminator)#1
soot.Singletons.soot_jimple_toolkits_scalar_UnreachableCodeEliminator()Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_scalar_UnreachableCodeEliminator()Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_scalar_UnreachableCodeEliminator()Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_scalar_UnreachableCodeEliminator()Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;#New(Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;,0)#5
soot.Singletons.soot_jimple_toolkits_scalar_UnreachableCodeEliminator()Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_scalar_UnreachableCodeEliminator()Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_scalar_UnreachableCodeEliminator()Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_scalar_UnreachableCodeEliminator()Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;#Invoke(SPECIAL,Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.scalar.UnreachableCodeEliminator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.scalar.UnreachableCodeEliminator.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.jimple.toolkits.scalar.UnreachableCodeEliminator.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_toolkits_scalar_UnreachableCodeEliminator()Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;#Put(Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_UnreachableCodeEliminator)#10
soot.Singletons.soot_jimple_toolkits_scalar_UnreachableCodeEliminator()Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_scalar_UnreachableCodeEliminator()Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;#Get(Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_UnreachableCodeEliminator)#12
soot.Singletons.soot_jimple_toolkits_scalar_UnreachableCodeEliminator()Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.scalar.UnreachableCodeEliminator.v()Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#96
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#97
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,0)#98
soot.PackManager.init()V#New(Lsoot/JavaToJimpleBodyPack;,0)#99
soot.PackManager.init()V#Dup(1,0)#100
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/JavaToJimpleBodyPack;,<init>,()V)#101
soot.JavaToJimpleBodyPack.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.JavaToJimpleBodyPack.<init>()V#Constant(Ljava/lang/String;,"jj")#1
soot.JavaToJimpleBodyPack.<init>()V#Invoke(SPECIAL,Lsoot/BodyPack;,<init>,(Ljava/lang/String;)V)#2
soot.JavaToJimpleBodyPack.<init>()V#Return(V)#3
soot.PackManager.init()V#Dup(1,0)#102
soot.PackManager.init()V#LocalStore(Ljava/lang/Object;,1)#103
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/PackManager;,addPack,(Lsoot/Pack;)V)#104
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#105
soot.PackManager.init()V#New(Lsoot/Transform;,0)#106
soot.PackManager.init()V#Dup(1,0)#107
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jj.ls")#108
soot.PackManager.init()V#Invoke(STATIC,Lsoot/toolkits/scalar/LocalSplitter;,v,()Lsoot/toolkits/scalar/LocalSplitter;)#109
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#110
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#111
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#112
soot.PackManager.init()V#New(Lsoot/Transform;,0)#113
soot.PackManager.init()V#Dup(1,0)#114
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jj.a")#115
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/base/Aggregator;,v,()Lsoot/jimple/toolkits/base/Aggregator;)#116
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#117
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#118
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#119
soot.PackManager.init()V#New(Lsoot/Transform;,0)#120
soot.PackManager.init()V#Dup(1,0)#121
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jj.ule")#122
soot.PackManager.init()V#Invoke(STATIC,Lsoot/toolkits/scalar/UnusedLocalEliminator;,v,()Lsoot/toolkits/scalar/UnusedLocalEliminator;)#123
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#124
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#125
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#126
soot.PackManager.init()V#New(Lsoot/Transform;,0)#127
soot.PackManager.init()V#Dup(1,0)#128
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jj.ne")#129
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/scalar/NopEliminator;,v,()Lsoot/jimple/toolkits/scalar/NopEliminator;)#130
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#131
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#132
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#133
soot.PackManager.init()V#New(Lsoot/Transform;,0)#134
soot.PackManager.init()V#Dup(1,0)#135
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jj.tr")#136
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/typing/TypeAssigner;,v,()Lsoot/jimple/toolkits/typing/TypeAssigner;)#137
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#138
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#139
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#140
soot.PackManager.init()V#New(Lsoot/Transform;,0)#141
soot.PackManager.init()V#Dup(1,0)#142
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jj.ulp")#143
soot.PackManager.init()V#Invoke(STATIC,Lsoot/toolkits/scalar/LocalPacker;,v,()Lsoot/toolkits/scalar/LocalPacker;)#144
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#145
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#146
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#147
soot.PackManager.init()V#New(Lsoot/Transform;,0)#148
soot.PackManager.init()V#Dup(1,0)#149
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jj.lns")#150
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/scalar/LocalNameStandardizer;,v,()Lsoot/jimple/toolkits/scalar/LocalNameStandardizer;)#151
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#152
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#153
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#154
soot.PackManager.init()V#New(Lsoot/Transform;,0)#155
soot.PackManager.init()V#Dup(1,0)#156
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jj.cp")#157
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/scalar/CopyPropagator;,v,()Lsoot/jimple/toolkits/scalar/CopyPropagator;)#158
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#159
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#160
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#161
soot.PackManager.init()V#New(Lsoot/Transform;,0)#162
soot.PackManager.init()V#Dup(1,0)#163
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jj.dae")#164
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/scalar/DeadAssignmentEliminator;,v,()Lsoot/jimple/toolkits/scalar/DeadAssignmentEliminator;)#165
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#166
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#167
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#168
soot.PackManager.init()V#New(Lsoot/Transform;,0)#169
soot.PackManager.init()V#Dup(1,0)#170
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jj.cp-ule")#171
soot.PackManager.init()V#Invoke(STATIC,Lsoot/toolkits/scalar/UnusedLocalEliminator;,v,()Lsoot/toolkits/scalar/UnusedLocalEliminator;)#172
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#173
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#174
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#175
soot.PackManager.init()V#New(Lsoot/Transform;,0)#176
soot.PackManager.init()V#Dup(1,0)#177
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jj.lp")#178
soot.PackManager.init()V#Invoke(STATIC,Lsoot/toolkits/scalar/LocalPacker;,v,()Lsoot/toolkits/scalar/LocalPacker;)#179
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#180
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#181
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#182
soot.PackManager.init()V#New(Lsoot/Transform;,0)#183
soot.PackManager.init()V#Dup(1,0)#184
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jj.uce")#185
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;,v,()Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;)#186
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#187
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#188
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,0)#189
soot.PackManager.init()V#New(Lsoot/ScenePack;,0)#190
soot.PackManager.init()V#Dup(1,0)#191
soot.PackManager.init()V#Constant(Ljava/lang/String;,"wjpp")#192
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/ScenePack;,<init>,(Ljava/lang/String;)V)#193
soot.ScenePack.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.ScenePack.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.ScenePack.<init>(Ljava/lang/String;)V#Invoke(SPECIAL,Lsoot/Pack;,<init>,(Ljava/lang/String;)V)#2
soot.ScenePack.<init>(Ljava/lang/String;)V#Return(V)#3
soot.PackManager.init()V#Dup(1,0)#194
soot.PackManager.init()V#LocalStore(Ljava/lang/Object;,1)#195
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/PackManager;,addPack,(Lsoot/Pack;)V)#196
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,0)#197
soot.PackManager.init()V#New(Lsoot/ScenePack;,0)#198
soot.PackManager.init()V#Dup(1,0)#199
soot.PackManager.init()V#Constant(Ljava/lang/String;,"wspp")#200
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/ScenePack;,<init>,(Ljava/lang/String;)V)#201
soot.PackManager.init()V#Dup(1,0)#202
soot.PackManager.init()V#LocalStore(Ljava/lang/Object;,1)#203
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/PackManager;,addPack,(Lsoot/Pack;)V)#204
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,0)#205
soot.PackManager.init()V#New(Lsoot/jimple/toolkits/callgraph/CallGraphPack;,0)#206
soot.PackManager.init()V#Dup(1,0)#207
soot.PackManager.init()V#Constant(Ljava/lang/String;,"cg")#208
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/jimple/toolkits/callgraph/CallGraphPack;,<init>,(Ljava/lang/String;)V)#209
soot.jimple.toolkits.callgraph.CallGraphPack.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.callgraph.CallGraphPack.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.jimple.toolkits.callgraph.CallGraphPack.<init>(Ljava/lang/String;)V#Invoke(SPECIAL,Lsoot/RadioScenePack;,<init>,(Ljava/lang/String;)V)#2
soot.RadioScenePack.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.RadioScenePack.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.RadioScenePack.<init>(Ljava/lang/String;)V#Invoke(SPECIAL,Lsoot/ScenePack;,<init>,(Ljava/lang/String;)V)#2
soot.RadioScenePack.<init>(Ljava/lang/String;)V#Return(V)#3
soot.jimple.toolkits.callgraph.CallGraphPack.<init>(Ljava/lang/String;)V#Return(V)#3
soot.PackManager.init()V#Dup(1,0)#210
soot.PackManager.init()V#LocalStore(Ljava/lang/Object;,1)#211
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/PackManager;,addPack,(Lsoot/Pack;)V)#212
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#213
soot.PackManager.init()V#New(Lsoot/Transform;,0)#214
soot.PackManager.init()V#Dup(1,0)#215
soot.PackManager.init()V#Constant(Ljava/lang/String;,"cg.cha")#216
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/callgraph/CHATransformer;,v,()Lsoot/jimple/toolkits/callgraph/CHATransformer;)#217
soot.jimple.toolkits.callgraph.CHATransformer.v()Lsoot/jimple/toolkits/callgraph/CHATransformer;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.callgraph.CHATransformer.v()Lsoot/jimple/toolkits/callgraph/CHATransformer;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_callgraph_CHATransformer,()Lsoot/jimple/toolkits/callgraph/CHATransformer;)#1
soot.Singletons.soot_jimple_toolkits_callgraph_CHATransformer()Lsoot/jimple/toolkits/callgraph/CHATransformer;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_callgraph_CHATransformer()Lsoot/jimple/toolkits/callgraph/CHATransformer;#Get(Lsoot/jimple/toolkits/callgraph/CHATransformer;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_callgraph_CHATransformer)#1
soot.Singletons.soot_jimple_toolkits_callgraph_CHATransformer()Lsoot/jimple/toolkits/callgraph/CHATransformer;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_callgraph_CHATransformer()Lsoot/jimple/toolkits/callgraph/CHATransformer;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_callgraph_CHATransformer()Lsoot/jimple/toolkits/callgraph/CHATransformer;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_callgraph_CHATransformer()Lsoot/jimple/toolkits/callgraph/CHATransformer;#New(Lsoot/jimple/toolkits/callgraph/CHATransformer;,0)#5
soot.Singletons.soot_jimple_toolkits_callgraph_CHATransformer()Lsoot/jimple/toolkits/callgraph/CHATransformer;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_callgraph_CHATransformer()Lsoot/jimple/toolkits/callgraph/CHATransformer;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_callgraph_CHATransformer()Lsoot/jimple/toolkits/callgraph/CHATransformer;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_callgraph_CHATransformer()Lsoot/jimple/toolkits/callgraph/CHATransformer;#Invoke(SPECIAL,Lsoot/jimple/toolkits/callgraph/CHATransformer;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.callgraph.CHATransformer.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.callgraph.CHATransformer.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/SceneTransformer;,<init>,()V)#1
soot.SceneTransformer.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.SceneTransformer.<init>()V#Invoke(SPECIAL,Lsoot/Transformer;,<init>,()V)#1
soot.SceneTransformer.<init>()V#Return(V)#2
soot.jimple.toolkits.callgraph.CHATransformer.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_toolkits_callgraph_CHATransformer()Lsoot/jimple/toolkits/callgraph/CHATransformer;#Put(Lsoot/jimple/toolkits/callgraph/CHATransformer;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_callgraph_CHATransformer)#10
soot.Singletons.soot_jimple_toolkits_callgraph_CHATransformer()Lsoot/jimple/toolkits/callgraph/CHATransformer;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_callgraph_CHATransformer()Lsoot/jimple/toolkits/callgraph/CHATransformer;#Get(Lsoot/jimple/toolkits/callgraph/CHATransformer;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_callgraph_CHATransformer)#12
soot.Singletons.soot_jimple_toolkits_callgraph_CHATransformer()Lsoot/jimple/toolkits/callgraph/CHATransformer;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.callgraph.CHATransformer.v()Lsoot/jimple/toolkits/callgraph/CHATransformer;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#218
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#219
soot.RadioScenePack.add(Lsoot/Transform;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.RadioScenePack.add(Lsoot/Transform;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.RadioScenePack.add(Lsoot/Transform;)V#Invoke(SPECIAL,Lsoot/ScenePack;,add,(Lsoot/Transform;)V)#2
soot.RadioScenePack.add(Lsoot/Transform;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.RadioScenePack.add(Lsoot/Transform;)V#LocalLoad(Ljava/lang/Object;,1)#4
soot.RadioScenePack.add(Lsoot/Transform;)V#Invoke(SPECIAL,Lsoot/RadioScenePack;,checkEnabled,(Lsoot/Transform;)V)#5
soot.RadioScenePack.checkEnabled(Lsoot/Transform;)V#Invoke(STATIC,Lsoot/PhaseOptions;,v,()Lsoot/PhaseOptions;)#0
soot.RadioScenePack.checkEnabled(Lsoot/Transform;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.RadioScenePack.checkEnabled(Lsoot/Transform;)V#Invoke(VIRTUAL,Lsoot/PhaseOptions;,getPhaseOptions,(Lsoot/HasPhaseOptions;)Ljava/util/Map;)#2
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#0
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#Get(Ljava/util/Map;,NONSTATIC,Lsoot/PhaseOptions;,phaseToOptionMap)#1
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,1)#2
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#CheckCast(Ljava/util/Map;)#4
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,2)#5
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,2)#6
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#Constant(L;,null)#7
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#ConditionalBranch(Ljava/lang/Object;,ne,14)#8
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#New(Ljava/util/HashMap;,0)#9
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#Dup(1,0)#10
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#11
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,2)#12
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#Goto(19)#13
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#New(Ljava/util/StringTokenizer;,0)#19
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#Dup(1,0)#20
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,1)#21
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#Invoke(INTERFACE,Lsoot/HasPhaseOptions;,getDefaultOptions,()Ljava/lang/String;)#22
soot.Transform.getDefaultOptions()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Transform.getDefaultOptions()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsoot/Transform;,defaultOpts)#1
soot.Transform.getDefaultOptions()Ljava/lang/String;#Constant(L;,null)#2
soot.Transform.getDefaultOptions()Ljava/lang/String;#ConditionalBranch(Ljava/lang/Object;,eq,7)#3
soot.Transform.getDefaultOptions()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Transform.getDefaultOptions()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsoot/Transform;,phaseName)#8
soot.Transform.getDefaultOptions()Ljava/lang/String;#Invoke(STATIC,Lsoot/options/Options;,getDefaultOptionsForPhase,(Ljava/lang/String;)Ljava/lang/String;)#9
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jb")#1
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#2
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#3
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,7)#4
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#7
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jb.ls")#8
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#9
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#10
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,14)#11
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#14
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jb.a")#15
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#16
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#17
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,21)#18
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#21
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jb.ule")#22
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#23
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#24
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,28)#25
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#28
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jb.tr")#29
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#30
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#31
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,35)#32
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#35
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jb.ulp")#36
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#37
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#38
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,42)#39
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#42
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jb.lns")#43
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#44
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#45
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,49)#46
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#49
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jb.cp")#50
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#51
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#52
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,56)#53
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#56
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jb.dae")#57
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#58
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#59
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,63)#60
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#63
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jb.cp-ule")#64
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#65
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#66
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,70)#67
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#70
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jb.lp")#71
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#72
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#73
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,77)#74
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#77
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jb.ne")#78
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#79
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#80
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,84)#81
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#84
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jb.uce")#85
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#86
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#87
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,91)#88
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#91
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jb.tt")#92
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#93
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#94
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,98)#95
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#98
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jj")#99
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#100
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#101
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,105)#102
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#105
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jj.ls")#106
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#107
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#108
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,112)#109
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#112
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jj.a")#113
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#114
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#115
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,119)#116
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#119
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jj.ule")#120
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#121
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#122
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,126)#123
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#126
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jj.tr")#127
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#128
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#129
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,133)#130
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#133
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jj.ulp")#134
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#135
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#136
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,140)#137
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#140
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jj.lns")#141
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#142
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#143
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,147)#144
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#147
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jj.cp")#148
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#149
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#150
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,154)#151
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#154
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jj.dae")#155
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#156
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#157
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,161)#158
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#161
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jj.cp-ule")#162
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#163
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#164
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,168)#165
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#168
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jj.lp")#169
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#170
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#171
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,175)#172
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#175
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jj.ne")#176
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#177
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#178
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,182)#179
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#182
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jj.uce")#183
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#184
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#185
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,189)#186
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#189
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"wjpp")#190
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#191
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#192
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,196)#193
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#196
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"wspp")#197
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#198
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#199
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,203)#200
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#203
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"cg")#204
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#205
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#206
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,210)#207
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#210
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"cg.cha")#211
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#212
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#213
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,217)#214
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:true verbose:false ")#215
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#216
soot.Transform.getDefaultOptions()Ljava/lang/String;#Return(Ljava/lang/Object;)#10
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#Invoke(SPECIAL,Ljava/util/StringTokenizer;,<init>,(Ljava/lang/String;)V)#23
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,3)#24
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#Goto(47)#25
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,3)#47
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#Invoke(VIRTUAL,Ljava/util/StringTokenizer;,hasMoreTokens,()Z)#48
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#Constant(I,0)#49
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#ConditionalBranch(I,ne,26)#50
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,3)#26
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#Invoke(VIRTUAL,Ljava/util/StringTokenizer;,nextToken,()Ljava/lang/String;)#27
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,4)#28
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#29
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,4)#30
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#Invoke(SPECIAL,Lsoot/PhaseOptions;,getKey,(Ljava/lang/String;)Ljava/lang/String;)#31
soot.PhaseOptions.getKey(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#0
soot.PhaseOptions.getKey(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,":")#1
soot.PhaseOptions.getKey(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,indexOf,(Ljava/lang/String;)I)#2
soot.PhaseOptions.getKey(Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,2)#3
soot.PhaseOptions.getKey(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,2)#4
soot.PhaseOptions.getKey(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#5
soot.PhaseOptions.getKey(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ge,21)#6
soot.PhaseOptions.getKey(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#21
soot.PhaseOptions.getKey(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#22
soot.PhaseOptions.getKey(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,2)#23
soot.PhaseOptions.getKey(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,substring,(II)Ljava/lang/String;)#24
soot.PhaseOptions.getKey(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#25
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,5)#32
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#33
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,4)#34
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#Invoke(SPECIAL,Lsoot/PhaseOptions;,getValue,(Ljava/lang/String;)Ljava/lang/String;)#35
soot.PhaseOptions.getValue(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#0
soot.PhaseOptions.getValue(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,":")#1
soot.PhaseOptions.getValue(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,indexOf,(Ljava/lang/String;)I)#2
soot.PhaseOptions.getValue(Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,2)#3
soot.PhaseOptions.getValue(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,2)#4
soot.PhaseOptions.getValue(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#5
soot.PhaseOptions.getValue(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ge,16)#6
soot.PhaseOptions.getValue(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#16
soot.PhaseOptions.getValue(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,2)#17
soot.PhaseOptions.getValue(Ljava/lang/String;)Ljava/lang/String;#Constant(I,1)#18
soot.PhaseOptions.getValue(Ljava/lang/String;)Ljava/lang/String;#BinaryOp(I,add)#19
soot.PhaseOptions.getValue(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,substring,(I)Ljava/lang/String;)#20
soot.PhaseOptions.getValue(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#21
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,6)#36
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,2)#37
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,5)#38
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#39
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#Constant(I,0)#40
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#ConditionalBranch(I,ne,47)#41
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,2)#42
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,5)#43
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,6)#44
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#45
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#Pop(1)#46
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,2)#51
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#Invoke(STATIC,Ljava/util/Collections;,unmodifiableMap,(Ljava/util/Map;)Ljava/util/Map;)#52
soot.PhaseOptions.getPhaseOptions(Lsoot/HasPhaseOptions;)Ljava/util/Map;#Return(Ljava/lang/Object;)#53
soot.RadioScenePack.checkEnabled(Lsoot/Transform;)V#LocalStore(Ljava/lang/Object;,2)#3
soot.RadioScenePack.checkEnabled(Lsoot/Transform;)V#LocalLoad(Ljava/lang/Object;,2)#4
soot.RadioScenePack.checkEnabled(Lsoot/Transform;)V#Constant(Ljava/lang/String;,"enabled")#5
soot.RadioScenePack.checkEnabled(Lsoot/Transform;)V#Invoke(STATIC,Lsoot/PhaseOptions;,getBoolean,(Ljava/util/Map;Ljava/lang/String;)Z)#6
soot.PhaseOptions.getBoolean(Ljava/util/Map;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.PhaseOptions.getBoolean(Ljava/util/Map;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#1
soot.PhaseOptions.getBoolean(Ljava/util/Map;Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#2
soot.PhaseOptions.getBoolean(Ljava/util/Map;Ljava/lang/String;)Z#Constant(I,0)#3
soot.PhaseOptions.getBoolean(Ljava/util/Map;Ljava/lang/String;)Z#ConditionalBranch(I,eq,14)#4
soot.PhaseOptions.getBoolean(Ljava/util/Map;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#5
soot.PhaseOptions.getBoolean(Ljava/util/Map;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#6
soot.PhaseOptions.getBoolean(Ljava/util/Map;Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#7
soot.PhaseOptions.getBoolean(Ljava/util/Map;Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"true")#8
soot.PhaseOptions.getBoolean(Ljava/util/Map;Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#9
soot.PhaseOptions.getBoolean(Ljava/util/Map;Ljava/lang/String;)Z#Constant(I,0)#10
soot.PhaseOptions.getBoolean(Ljava/util/Map;Ljava/lang/String;)Z#ConditionalBranch(I,eq,14)#11
soot.PhaseOptions.getBoolean(Ljava/util/Map;Ljava/lang/String;)Z#Constant(I,1)#12
soot.PhaseOptions.getBoolean(Ljava/util/Map;Ljava/lang/String;)Z#Return(I)#13
soot.RadioScenePack.checkEnabled(Lsoot/Transform;)V#Constant(I,0)#7
soot.RadioScenePack.checkEnabled(Lsoot/Transform;)V#ConditionalBranch(I,eq,14)#8
soot.RadioScenePack.checkEnabled(Lsoot/Transform;)V#Invoke(STATIC,Lsoot/PhaseOptions;,v,()Lsoot/PhaseOptions;)#9
soot.RadioScenePack.checkEnabled(Lsoot/Transform;)V#LocalLoad(Ljava/lang/Object;,1)#10
soot.RadioScenePack.checkEnabled(Lsoot/Transform;)V#Constant(Ljava/lang/String;,"enabled:true")#11
soot.RadioScenePack.checkEnabled(Lsoot/Transform;)V#Invoke(VIRTUAL,Lsoot/PhaseOptions;,setPhaseOption,(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z)#12
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#1
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Invoke(SPECIAL,Lsoot/PhaseOptions;,mapForPhase,(Lsoot/HasPhaseOptions;)Ljava/util/Map;)#2
soot.PhaseOptions.mapForPhase(Lsoot/HasPhaseOptions;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#0
soot.PhaseOptions.mapForPhase(Lsoot/HasPhaseOptions;)Ljava/util/Map;#Get(Ljava/util/Map;,NONSTATIC,Lsoot/PhaseOptions;,phaseToOptionMap)#1
soot.PhaseOptions.mapForPhase(Lsoot/HasPhaseOptions;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,1)#2
soot.PhaseOptions.mapForPhase(Lsoot/HasPhaseOptions;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
soot.PhaseOptions.mapForPhase(Lsoot/HasPhaseOptions;)Ljava/util/Map;#CheckCast(Ljava/util/Map;)#4
soot.PhaseOptions.mapForPhase(Lsoot/HasPhaseOptions;)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,2)#5
soot.PhaseOptions.mapForPhase(Lsoot/HasPhaseOptions;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,2)#6
soot.PhaseOptions.mapForPhase(Lsoot/HasPhaseOptions;)Ljava/util/Map;#Constant(L;,null)#7
soot.PhaseOptions.mapForPhase(Lsoot/HasPhaseOptions;)Ljava/util/Map;#ConditionalBranch(Ljava/lang/Object;,ne,19)#8
soot.PhaseOptions.mapForPhase(Lsoot/HasPhaseOptions;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#9
soot.PhaseOptions.mapForPhase(Lsoot/HasPhaseOptions;)Ljava/util/Map;#Get(Ljava/util/Map;,NONSTATIC,Lsoot/PhaseOptions;,phaseToOptionMap)#10
soot.PhaseOptions.mapForPhase(Lsoot/HasPhaseOptions;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,1)#11
soot.PhaseOptions.mapForPhase(Lsoot/HasPhaseOptions;)Ljava/util/Map;#New(Ljava/util/HashMap;,0)#12
soot.PhaseOptions.mapForPhase(Lsoot/HasPhaseOptions;)Ljava/util/Map;#Dup(1,0)#13
soot.PhaseOptions.mapForPhase(Lsoot/HasPhaseOptions;)Ljava/util/Map;#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#14
soot.PhaseOptions.mapForPhase(Lsoot/HasPhaseOptions;)Ljava/util/Map;#Dup(1,0)#15
soot.PhaseOptions.mapForPhase(Lsoot/HasPhaseOptions;)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,2)#16
soot.PhaseOptions.mapForPhase(Lsoot/HasPhaseOptions;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#17
soot.PhaseOptions.mapForPhase(Lsoot/HasPhaseOptions;)Ljava/util/Map;#Pop(1)#18
soot.PhaseOptions.mapForPhase(Lsoot/HasPhaseOptions;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,2)#19
soot.PhaseOptions.mapForPhase(Lsoot/HasPhaseOptions;)Ljava/util/Map;#Return(Ljava/lang/Object;)#20
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,3)#3
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#4
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#5
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Invoke(INTERFACE,Lsoot/HasPhaseOptions;,getPhaseName,()Ljava/lang/String;)#6
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Invoke(SPECIAL,Lsoot/PhaseOptions;,checkParentEnabled,(Ljava/lang/String;)Z)#7
soot.PhaseOptions.checkParentEnabled(Ljava/lang/String;)Z#Constant(I,1)#0
soot.PhaseOptions.checkParentEnabled(Ljava/lang/String;)Z#Return(I)#1
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Constant(I,0)#8
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#ConditionalBranch(I,ne,12)#9
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#12
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Constant(L;,null)#13
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#ConditionalBranch(Ljava/lang/Object;,ne,34)#14
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#34
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,2)#35
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Invoke(SPECIAL,Lsoot/PhaseOptions;,getKey,(Ljava/lang/String;)Ljava/lang/String;)#36
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,4)#37
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,4)#38
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"enabled")#39
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#40
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Constant(I,0)#41
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#ConditionalBranch(I,eq,54)#42
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#43
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,2)#44
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Invoke(SPECIAL,Lsoot/PhaseOptions;,getValue,(Ljava/lang/String;)Ljava/lang/String;)#45
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"true")#46
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#47
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Constant(I,0)#48
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#ConditionalBranch(I,eq,54)#49
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#50
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#51
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Invoke(INTERFACE,Lsoot/HasPhaseOptions;,getPhaseName,()Ljava/lang/String;)#52
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Invoke(SPECIAL,Lsoot/PhaseOptions;,resetRadioPack,(Ljava/lang/String;)V)#53
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/PhaseOptions;,getPM,()Lsoot/PackManager;)#1
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/PackManager;,allPacks,()Ljava/util/Collection;)#2
soot.PackManager.allPacks()Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,0)#0
soot.PackManager.allPacks()Ljava/util/Collection;#Get(Ljava/util/List;,NONSTATIC,Lsoot/PackManager;,packList)#1
soot.PackManager.allPacks()Ljava/util/Collection;#Invoke(STATIC,Ljava/util/Collections;,unmodifiableList,(Ljava/util/List;)Ljava/util/List;)#2
soot.PackManager.allPacks()Ljava/util/Collection;#Return(Ljava/lang/Object;)#3
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Collection;,iterator,()Ljava/util/Iterator;)#3
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,3)#4
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#Goto(39)#5
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#39
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#40
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#Constant(I,0)#41
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#ConditionalBranch(I,ne,6)#42
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#6
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#7
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#CheckCast(Lsoot/Pack;)#8
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,2)#9
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#10
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#Instanceof(Lsoot/RadioScenePack;)#11
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#Constant(I,0)#12
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#ConditionalBranch(I,ne,15)#13
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#Goto(39)#14
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#15
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#16
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/Pack;,get,(Ljava/lang/String;)Lsoot/Transform;)#17
soot.Pack.get(Ljava/lang/String;)Lsoot/Transform;#LocalLoad(Ljava/lang/Object;,3)#15
soot.Pack.get(Ljava/lang/String;)Lsoot/Transform;#Return(Ljava/lang/Object;)#16
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#Constant(L;,null)#18
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,ne,21)#19
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#21
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/Pack;,iterator,()Ljava/util/Iterator;)#22
soot.Pack.iterator()Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Pack.iterator()Ljava/util/Iterator;#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/Pack;,opts)#1
soot.Pack.iterator()Ljava/util/Iterator;#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#2
soot.Pack.iterator()Ljava/util/Iterator;#Return(Ljava/lang/Object;)#3
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,4)#23
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#Goto(35)#24
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,4)#35
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#36
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#Constant(I,0)#37
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#ConditionalBranch(I,ne,25)#38
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,4)#25
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#26
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#CheckCast(Lsoot/Transform;)#27
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,5)#28
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#29
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,5)#30
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/Transform;,getPhaseName,()Ljava/lang/String;)#31
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"enabled:false")#32
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/PhaseOptions;,setPhaseOption,(Ljava/lang/String;Ljava/lang/String;)Z)#33
soot.PhaseOptions.setPhaseOption(Ljava/lang/String;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.PhaseOptions.setPhaseOption(Ljava/lang/String;Ljava/lang/String;)Z#Invoke(VIRTUAL,Lsoot/PhaseOptions;,getPM,()Lsoot/PackManager;)#1
soot.PhaseOptions.setPhaseOption(Ljava/lang/String;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#2
soot.PhaseOptions.setPhaseOption(Ljava/lang/String;Ljava/lang/String;)Z#Invoke(VIRTUAL,Lsoot/PackManager;,getPhase,(Ljava/lang/String;)Lsoot/HasPhaseOptions;)#3
soot.PackManager.getPhase(Ljava/lang/String;)Lsoot/HasPhaseOptions;#LocalLoad(Ljava/lang/Object;,1)#0
soot.PackManager.getPhase(Ljava/lang/String;)Lsoot/HasPhaseOptions;#Constant(Ljava/lang/String;,".")#1
soot.PackManager.getPhase(Ljava/lang/String;)Lsoot/HasPhaseOptions;#Invoke(VIRTUAL,Ljava/lang/String;,indexOf,(Ljava/lang/String;)I)#2
soot.PackManager.getPhase(Ljava/lang/String;)Lsoot/HasPhaseOptions;#LocalStore(I,2)#3
soot.PackManager.getPhase(Ljava/lang/String;)Lsoot/HasPhaseOptions;#LocalLoad(I,2)#4
soot.PackManager.getPhase(Ljava/lang/String;)Lsoot/HasPhaseOptions;#Constant(I,0)#5
soot.PackManager.getPhase(Ljava/lang/String;)Lsoot/HasPhaseOptions;#ConditionalBranch(I,ge,11)#6
soot.PackManager.getPhase(Ljava/lang/String;)Lsoot/HasPhaseOptions;#LocalLoad(Ljava/lang/Object;,1)#11
soot.PackManager.getPhase(Ljava/lang/String;)Lsoot/HasPhaseOptions;#Constant(I,0)#12
soot.PackManager.getPhase(Ljava/lang/String;)Lsoot/HasPhaseOptions;#LocalLoad(I,2)#13
soot.PackManager.getPhase(Ljava/lang/String;)Lsoot/HasPhaseOptions;#Invoke(VIRTUAL,Ljava/lang/String;,substring,(II)Ljava/lang/String;)#14
soot.PackManager.getPhase(Ljava/lang/String;)Lsoot/HasPhaseOptions;#LocalStore(Ljava/lang/Object;,3)#15
soot.PackManager.getPhase(Ljava/lang/String;)Lsoot/HasPhaseOptions;#LocalLoad(Ljava/lang/Object;,0)#16
soot.PackManager.getPhase(Ljava/lang/String;)Lsoot/HasPhaseOptions;#LocalLoad(Ljava/lang/Object;,3)#17
soot.PackManager.getPhase(Ljava/lang/String;)Lsoot/HasPhaseOptions;#Invoke(VIRTUAL,Lsoot/PackManager;,hasPack,(Ljava/lang/String;)Z)#18
soot.PackManager.hasPack(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.PackManager.hasPack(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#1
soot.PackManager.hasPack(Ljava/lang/String;)Z#Invoke(VIRTUAL,Lsoot/PackManager;,getPhase,(Ljava/lang/String;)Lsoot/HasPhaseOptions;)#2
soot.PackManager.getPhase(Ljava/lang/String;)Lsoot/HasPhaseOptions;#LocalLoad(Ljava/lang/Object;,0)#7
soot.PackManager.getPhase(Ljava/lang/String;)Lsoot/HasPhaseOptions;#LocalLoad(Ljava/lang/Object;,1)#8
soot.PackManager.getPhase(Ljava/lang/String;)Lsoot/HasPhaseOptions;#Invoke(VIRTUAL,Lsoot/PackManager;,getPack,(Ljava/lang/String;)Lsoot/Pack;)#9
soot.PackManager.getPack(Ljava/lang/String;)Lsoot/Pack;#LocalLoad(Ljava/lang/Object;,0)#0
soot.PackManager.getPack(Ljava/lang/String;)Lsoot/Pack;#Get(Ljava/util/Map;,NONSTATIC,Lsoot/PackManager;,packNameToPack)#1
soot.PackManager.getPack(Ljava/lang/String;)Lsoot/Pack;#LocalLoad(Ljava/lang/Object;,1)#2
soot.PackManager.getPack(Ljava/lang/String;)Lsoot/Pack;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
soot.PackManager.getPack(Ljava/lang/String;)Lsoot/Pack;#CheckCast(Lsoot/Pack;)#4
soot.PackManager.getPack(Ljava/lang/String;)Lsoot/Pack;#LocalStore(Ljava/lang/Object;,2)#5
soot.PackManager.getPack(Ljava/lang/String;)Lsoot/Pack;#LocalLoad(Ljava/lang/Object;,2)#6
soot.PackManager.getPack(Ljava/lang/String;)Lsoot/Pack;#Return(Ljava/lang/Object;)#7
soot.PackManager.getPhase(Ljava/lang/String;)Lsoot/HasPhaseOptions;#Return(Ljava/lang/Object;)#10
soot.PackManager.hasPack(Ljava/lang/String;)Z#Constant(L;,null)#3
soot.PackManager.hasPack(Ljava/lang/String;)Z#ConditionalBranch(Ljava/lang/Object;,eq,7)#4
soot.PackManager.hasPack(Ljava/lang/String;)Z#Constant(I,1)#5
soot.PackManager.hasPack(Ljava/lang/String;)Z#Return(I)#6
soot.PackManager.getPhase(Ljava/lang/String;)Lsoot/HasPhaseOptions;#Constant(I,0)#19
soot.PackManager.getPhase(Ljava/lang/String;)Lsoot/HasPhaseOptions;#ConditionalBranch(I,ne,23)#20
soot.PackManager.getPhase(Ljava/lang/String;)Lsoot/HasPhaseOptions;#LocalLoad(Ljava/lang/Object;,0)#23
soot.PackManager.getPhase(Ljava/lang/String;)Lsoot/HasPhaseOptions;#LocalLoad(Ljava/lang/Object;,3)#24
soot.PackManager.getPhase(Ljava/lang/String;)Lsoot/HasPhaseOptions;#Invoke(VIRTUAL,Lsoot/PackManager;,getPack,(Ljava/lang/String;)Lsoot/Pack;)#25
soot.PackManager.getPhase(Ljava/lang/String;)Lsoot/HasPhaseOptions;#LocalLoad(Ljava/lang/Object;,1)#26
soot.PackManager.getPhase(Ljava/lang/String;)Lsoot/HasPhaseOptions;#Invoke(VIRTUAL,Lsoot/Pack;,get,(Ljava/lang/String;)Lsoot/Transform;)#27
soot.PackManager.getPhase(Ljava/lang/String;)Lsoot/HasPhaseOptions;#Return(Ljava/lang/Object;)#28
soot.PhaseOptions.setPhaseOption(Ljava/lang/String;Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,3)#4
soot.PhaseOptions.setPhaseOption(Ljava/lang/String;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#5
soot.PhaseOptions.setPhaseOption(Ljava/lang/String;Ljava/lang/String;)Z#Constant(L;,null)#6
soot.PhaseOptions.setPhaseOption(Ljava/lang/String;Ljava/lang/String;)Z#ConditionalBranch(Ljava/lang/Object;,ne,26)#7
soot.PhaseOptions.setPhaseOption(Ljava/lang/String;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#26
soot.PhaseOptions.setPhaseOption(Ljava/lang/String;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#27
soot.PhaseOptions.setPhaseOption(Ljava/lang/String;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,2)#28
soot.PhaseOptions.setPhaseOption(Ljava/lang/String;Ljava/lang/String;)Z#Invoke(VIRTUAL,Lsoot/PhaseOptions;,setPhaseOption,(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z)#29
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#54
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#55
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,4)#56
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Invoke(SPECIAL,Lsoot/PhaseOptions;,declaresOption,(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z)#57
soot.PhaseOptions.declaresOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#0
soot.PhaseOptions.declaresOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Invoke(INTERFACE,Lsoot/HasPhaseOptions;,getDeclaredOptions,()Ljava/lang/String;)#1
soot.Transform.getDeclaredOptions()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Transform.getDeclaredOptions()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsoot/Transform;,declaredOpts)#1
soot.Transform.getDeclaredOptions()Ljava/lang/String;#Constant(L;,null)#2
soot.Transform.getDeclaredOptions()Ljava/lang/String;#ConditionalBranch(Ljava/lang/Object;,eq,7)#3
soot.Transform.getDeclaredOptions()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Transform.getDeclaredOptions()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsoot/Transform;,phaseName)#8
soot.Transform.getDeclaredOptions()Ljava/lang/String;#Invoke(STATIC,Lsoot/options/Options;,getDeclaredOptionsForPhase,(Ljava/lang/String;)Ljava/lang/String;)#9
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jb")#1
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#2
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#3
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,7)#4
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#7
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jb.ls")#8
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#9
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#10
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,14)#11
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#14
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jb.a")#15
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#16
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#17
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,21)#18
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#21
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jb.ule")#22
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#23
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#24
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,28)#25
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#28
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jb.tr")#29
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#30
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#31
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,35)#32
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#35
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jb.ulp")#36
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#37
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#38
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,42)#39
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#42
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jb.lns")#43
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#44
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#45
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,49)#46
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#49
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jb.cp")#50
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#51
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#52
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,56)#53
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#56
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jb.dae")#57
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#58
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#59
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,63)#60
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#63
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jb.cp-ule")#64
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#65
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#66
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,70)#67
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#70
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jb.lp")#71
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#72
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#73
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,77)#74
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#77
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jb.ne")#78
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#79
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#80
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,84)#81
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#84
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jb.uce")#85
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#86
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#87
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,91)#88
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#91
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jb.tt")#92
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#93
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#94
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,98)#95
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#98
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jj")#99
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#100
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#101
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,105)#102
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#105
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jj.ls")#106
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#107
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#108
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,112)#109
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#112
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jj.a")#113
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#114
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#115
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,119)#116
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#119
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jj.ule")#120
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#121
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#122
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,126)#123
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#126
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jj.tr")#127
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#128
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#129
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,133)#130
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#133
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jj.ulp")#134
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#135
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#136
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,140)#137
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#140
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jj.lns")#141
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#142
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#143
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,147)#144
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#147
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jj.cp")#148
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#149
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#150
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,154)#151
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#154
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jj.dae")#155
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#156
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#157
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,161)#158
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#161
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jj.cp-ule")#162
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#163
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#164
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,168)#165
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#168
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jj.lp")#169
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#170
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#171
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,175)#172
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#175
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jj.ne")#176
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#177
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#178
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,182)#179
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#182
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jj.uce")#183
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#184
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#185
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,189)#186
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#189
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"wjpp")#190
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#191
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#192
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,196)#193
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#196
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"wspp")#197
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#198
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#199
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,203)#200
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#203
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"cg")#204
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#205
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#206
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,210)#207
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#210
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"cg.cha")#211
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#212
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#213
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,217)#214
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled verbose ")#215
soot.options.Options.getDeclaredOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#216
soot.Transform.getDeclaredOptions()Ljava/lang/String;#Return(Ljava/lang/Object;)#10
soot.PhaseOptions.declaresOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,3)#2
soot.PhaseOptions.declaresOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#New(Ljava/util/StringTokenizer;,0)#3
soot.PhaseOptions.declaresOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Dup(1,0)#4
soot.PhaseOptions.declaresOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#5
soot.PhaseOptions.declaresOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Invoke(SPECIAL,Ljava/util/StringTokenizer;,<init>,(Ljava/lang/String;)V)#6
soot.PhaseOptions.declaresOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,4)#7
soot.PhaseOptions.declaresOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Goto(17)#8
soot.PhaseOptions.declaresOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,4)#17
soot.PhaseOptions.declaresOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/util/StringTokenizer;,hasMoreTokens,()Z)#18
soot.PhaseOptions.declaresOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Constant(I,0)#19
soot.PhaseOptions.declaresOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#ConditionalBranch(I,ne,9)#20
soot.PhaseOptions.declaresOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,4)#9
soot.PhaseOptions.declaresOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/util/StringTokenizer;,nextToken,()Ljava/lang/String;)#10
soot.PhaseOptions.declaresOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,2)#11
soot.PhaseOptions.declaresOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#12
soot.PhaseOptions.declaresOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Constant(I,0)#13
soot.PhaseOptions.declaresOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#ConditionalBranch(I,eq,17)#14
soot.PhaseOptions.declaresOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Constant(I,1)#15
soot.PhaseOptions.declaresOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Return(I)#16
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Constant(I,0)#58
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#ConditionalBranch(I,eq,69)#59
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#60
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,4)#61
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#62
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,2)#63
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Invoke(SPECIAL,Lsoot/PhaseOptions;,getValue,(Ljava/lang/String;)Ljava/lang/String;)#64
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#65
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Pop(1)#66
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Constant(I,1)#67
soot.PhaseOptions.setPhaseOption(Lsoot/HasPhaseOptions;Ljava/lang/String;)Z#Return(I)#68
soot.PhaseOptions.setPhaseOption(Ljava/lang/String;Ljava/lang/String;)Z#Return(I)#30
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#Pop(1)#34
soot.PhaseOptions.resetRadioPack(Ljava/lang/String;)V#Return(V)#43
soot.RadioScenePack.checkEnabled(Lsoot/Transform;)V#Pop(1)#13
soot.RadioScenePack.checkEnabled(Lsoot/Transform;)V#Return(V)#14
soot.RadioScenePack.add(Lsoot/Transform;)V#Return(V)#6
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#220
soot.PackManager.init()V#New(Lsoot/Transform;,0)#221
soot.PackManager.init()V#Dup(1,0)#222
soot.PackManager.init()V#Constant(Ljava/lang/String;,"cg.spark")#223
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/spark/SparkTransformer;,v,()Lsoot/jimple/spark/SparkTransformer;)#224
soot.jimple.spark.SparkTransformer.v()Lsoot/jimple/spark/SparkTransformer;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.spark.SparkTransformer.v()Lsoot/jimple/spark/SparkTransformer;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_spark_SparkTransformer,()Lsoot/jimple/spark/SparkTransformer;)#1
soot.Singletons.soot_jimple_spark_SparkTransformer()Lsoot/jimple/spark/SparkTransformer;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_spark_SparkTransformer()Lsoot/jimple/spark/SparkTransformer;#Get(Lsoot/jimple/spark/SparkTransformer;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_spark_SparkTransformer)#1
soot.Singletons.soot_jimple_spark_SparkTransformer()Lsoot/jimple/spark/SparkTransformer;#Constant(L;,null)#2
soot.Singletons.soot_jimple_spark_SparkTransformer()Lsoot/jimple/spark/SparkTransformer;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_spark_SparkTransformer()Lsoot/jimple/spark/SparkTransformer;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_spark_SparkTransformer()Lsoot/jimple/spark/SparkTransformer;#New(Lsoot/jimple/spark/SparkTransformer;,0)#5
soot.Singletons.soot_jimple_spark_SparkTransformer()Lsoot/jimple/spark/SparkTransformer;#Dup(1,0)#6
soot.Singletons.soot_jimple_spark_SparkTransformer()Lsoot/jimple/spark/SparkTransformer;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_spark_SparkTransformer()Lsoot/jimple/spark/SparkTransformer;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_spark_SparkTransformer()Lsoot/jimple/spark/SparkTransformer;#Invoke(SPECIAL,Lsoot/jimple/spark/SparkTransformer;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.spark.SparkTransformer.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.spark.SparkTransformer.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/SceneTransformer;,<init>,()V)#1
soot.jimple.spark.SparkTransformer.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_spark_SparkTransformer()Lsoot/jimple/spark/SparkTransformer;#Put(Lsoot/jimple/spark/SparkTransformer;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_spark_SparkTransformer)#10
soot.Singletons.soot_jimple_spark_SparkTransformer()Lsoot/jimple/spark/SparkTransformer;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_spark_SparkTransformer()Lsoot/jimple/spark/SparkTransformer;#Get(Lsoot/jimple/spark/SparkTransformer;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_spark_SparkTransformer)#12
soot.Singletons.soot_jimple_spark_SparkTransformer()Lsoot/jimple/spark/SparkTransformer;#Return(Ljava/lang/Object;)#13
soot.jimple.spark.SparkTransformer.v()Lsoot/jimple/spark/SparkTransformer;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#225
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#226
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#217
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"cg.spark")#218
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#219
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#220
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,224)#221
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:false verbose:false ignore-types:false force-gc:false pre-jimplify:false vta:false rta:false field-based:false types-for-sites:false merge-stringbuffer:true string-constants:false simulate-natives:true empties-as-allocs:false simple-edges-bidirectional:false on-fly-cg:true simplify-offline:false simplify-sccs:false ignore-types-for-sccs:false propagator:worklist set-impl:double double-set-old:hybrid double-set-new:hybrid dump-html:false dump-pag:false dump-solution:false topo-sort:false dump-types:true class-method-var:true dump-answer:false add-tags:false set-mass:false cs-demand:false lazy-pts:true traversal:75000 passes:10 geom-pta:false geom-encoding:Geom geom-encoding:Geom geom-worklist:PQ geom-worklist:PQ geom-dump-verbose: geom-verify-name: geom-eval:0 geom-trans:false geom-frac-base:40 geom-blocking:true geom-runs:1 ")#222
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#223
soot.PhaseOptions.getBoolean(Ljava/util/Map;Ljava/lang/String;)Z#Constant(I,0)#14
soot.PhaseOptions.getBoolean(Ljava/util/Map;Ljava/lang/String;)Z#Return(I)#15
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#227
soot.PackManager.init()V#New(Lsoot/Transform;,0)#228
soot.PackManager.init()V#Dup(1,0)#229
soot.PackManager.init()V#Constant(Ljava/lang/String;,"cg.paddle")#230
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/paddle/PaddleHook;,v,()Lsoot/jimple/paddle/PaddleHook;)#231
soot.jimple.paddle.PaddleHook.v()Lsoot/jimple/paddle/PaddleHook;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.paddle.PaddleHook.v()Lsoot/jimple/paddle/PaddleHook;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_paddle_PaddleHook,()Lsoot/jimple/paddle/PaddleHook;)#1
soot.Singletons.soot_jimple_paddle_PaddleHook()Lsoot/jimple/paddle/PaddleHook;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_paddle_PaddleHook()Lsoot/jimple/paddle/PaddleHook;#Get(Lsoot/jimple/paddle/PaddleHook;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_paddle_PaddleHook)#1
soot.Singletons.soot_jimple_paddle_PaddleHook()Lsoot/jimple/paddle/PaddleHook;#Constant(L;,null)#2
soot.Singletons.soot_jimple_paddle_PaddleHook()Lsoot/jimple/paddle/PaddleHook;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_paddle_PaddleHook()Lsoot/jimple/paddle/PaddleHook;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_paddle_PaddleHook()Lsoot/jimple/paddle/PaddleHook;#New(Lsoot/jimple/paddle/PaddleHook;,0)#5
soot.Singletons.soot_jimple_paddle_PaddleHook()Lsoot/jimple/paddle/PaddleHook;#Dup(1,0)#6
soot.Singletons.soot_jimple_paddle_PaddleHook()Lsoot/jimple/paddle/PaddleHook;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_paddle_PaddleHook()Lsoot/jimple/paddle/PaddleHook;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_paddle_PaddleHook()Lsoot/jimple/paddle/PaddleHook;#Invoke(SPECIAL,Lsoot/jimple/paddle/PaddleHook;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.paddle.PaddleHook.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.paddle.PaddleHook.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/SceneTransformer;,<init>,()V)#1
soot.jimple.paddle.PaddleHook.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_paddle_PaddleHook()Lsoot/jimple/paddle/PaddleHook;#Put(Lsoot/jimple/paddle/PaddleHook;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_paddle_PaddleHook)#10
soot.Singletons.soot_jimple_paddle_PaddleHook()Lsoot/jimple/paddle/PaddleHook;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_paddle_PaddleHook()Lsoot/jimple/paddle/PaddleHook;#Get(Lsoot/jimple/paddle/PaddleHook;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_paddle_PaddleHook)#12
soot.Singletons.soot_jimple_paddle_PaddleHook()Lsoot/jimple/paddle/PaddleHook;#Return(Ljava/lang/Object;)#13
soot.jimple.paddle.PaddleHook.v()Lsoot/jimple/paddle/PaddleHook;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#232
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#233
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#224
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"cg.paddle")#225
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#226
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#227
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,231)#228
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:false verbose:false conf:ofcg bdd:false order:32 profile:false verbosegc:false q:auto backend:auto bdd-nodes:0 ignore-types:false pre-jimplify:false context:insens k:2 context-heap:false rta:false field-based:false types-for-sites:false merge-stringbuffer:true string-constants:false simulate-natives:true global-nodes-in-natives:false simple-edges-bidirectional:false this-edges:false precise-newinstance:true propagator:auto set-impl:double double-set-old:hybrid double-set-new:hybrid context-counts:false total-context-counts:false method-context-counts:false set-mass:false number-nodes:true ")#229
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#230
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,0)#234
soot.PackManager.init()V#New(Lsoot/ScenePack;,0)#235
soot.PackManager.init()V#Dup(1,0)#236
soot.PackManager.init()V#Constant(Ljava/lang/String;,"wstp")#237
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/ScenePack;,<init>,(Ljava/lang/String;)V)#238
soot.PackManager.init()V#Dup(1,0)#239
soot.PackManager.init()V#LocalStore(Ljava/lang/Object;,1)#240
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/PackManager;,addPack,(Lsoot/Pack;)V)#241
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,0)#242
soot.PackManager.init()V#New(Lsoot/ScenePack;,0)#243
soot.PackManager.init()V#Dup(1,0)#244
soot.PackManager.init()V#Constant(Ljava/lang/String;,"wsop")#245
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/ScenePack;,<init>,(Ljava/lang/String;)V)#246
soot.PackManager.init()V#Dup(1,0)#247
soot.PackManager.init()V#LocalStore(Ljava/lang/Object;,1)#248
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/PackManager;,addPack,(Lsoot/Pack;)V)#249
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,0)#250
soot.PackManager.init()V#New(Lsoot/ScenePack;,0)#251
soot.PackManager.init()V#Dup(1,0)#252
soot.PackManager.init()V#Constant(Ljava/lang/String;,"wjtp")#253
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/ScenePack;,<init>,(Ljava/lang/String;)V)#254
soot.PackManager.init()V#Dup(1,0)#255
soot.PackManager.init()V#LocalStore(Ljava/lang/Object;,1)#256
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/PackManager;,addPack,(Lsoot/Pack;)V)#257
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#258
soot.PackManager.init()V#New(Lsoot/Transform;,0)#259
soot.PackManager.init()V#Dup(1,0)#260
soot.PackManager.init()V#Constant(Ljava/lang/String;,"wjtp.mhp")#261
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/thread/mhp/MhpTransformer;,v,()Lsoot/jimple/toolkits/thread/mhp/MhpTransformer;)#262
soot.jimple.toolkits.thread.mhp.MhpTransformer.v()Lsoot/jimple/toolkits/thread/mhp/MhpTransformer;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.thread.mhp.MhpTransformer.v()Lsoot/jimple/toolkits/thread/mhp/MhpTransformer;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_thread_mhp_MhpTransformer,()Lsoot/jimple/toolkits/thread/mhp/MhpTransformer;)#1
soot.Singletons.soot_jimple_toolkits_thread_mhp_MhpTransformer()Lsoot/jimple/toolkits/thread/mhp/MhpTransformer;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_thread_mhp_MhpTransformer()Lsoot/jimple/toolkits/thread/mhp/MhpTransformer;#Get(Lsoot/jimple/toolkits/thread/mhp/MhpTransformer;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_thread_mhp_MhpTransformer)#1
soot.Singletons.soot_jimple_toolkits_thread_mhp_MhpTransformer()Lsoot/jimple/toolkits/thread/mhp/MhpTransformer;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_thread_mhp_MhpTransformer()Lsoot/jimple/toolkits/thread/mhp/MhpTransformer;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_thread_mhp_MhpTransformer()Lsoot/jimple/toolkits/thread/mhp/MhpTransformer;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_thread_mhp_MhpTransformer()Lsoot/jimple/toolkits/thread/mhp/MhpTransformer;#New(Lsoot/jimple/toolkits/thread/mhp/MhpTransformer;,0)#5
soot.Singletons.soot_jimple_toolkits_thread_mhp_MhpTransformer()Lsoot/jimple/toolkits/thread/mhp/MhpTransformer;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_thread_mhp_MhpTransformer()Lsoot/jimple/toolkits/thread/mhp/MhpTransformer;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_thread_mhp_MhpTransformer()Lsoot/jimple/toolkits/thread/mhp/MhpTransformer;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_thread_mhp_MhpTransformer()Lsoot/jimple/toolkits/thread/mhp/MhpTransformer;#Invoke(SPECIAL,Lsoot/jimple/toolkits/thread/mhp/MhpTransformer;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.thread.mhp.MhpTransformer.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.thread.mhp.MhpTransformer.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/SceneTransformer;,<init>,()V)#1
soot.jimple.toolkits.thread.mhp.MhpTransformer.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_toolkits_thread_mhp_MhpTransformer()Lsoot/jimple/toolkits/thread/mhp/MhpTransformer;#Put(Lsoot/jimple/toolkits/thread/mhp/MhpTransformer;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_thread_mhp_MhpTransformer)#10
soot.Singletons.soot_jimple_toolkits_thread_mhp_MhpTransformer()Lsoot/jimple/toolkits/thread/mhp/MhpTransformer;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_thread_mhp_MhpTransformer()Lsoot/jimple/toolkits/thread/mhp/MhpTransformer;#Get(Lsoot/jimple/toolkits/thread/mhp/MhpTransformer;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_thread_mhp_MhpTransformer)#12
soot.Singletons.soot_jimple_toolkits_thread_mhp_MhpTransformer()Lsoot/jimple/toolkits/thread/mhp/MhpTransformer;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.thread.mhp.MhpTransformer.v()Lsoot/jimple/toolkits/thread/mhp/MhpTransformer;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#263
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#264
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#265
soot.PackManager.init()V#New(Lsoot/Transform;,0)#266
soot.PackManager.init()V#Dup(1,0)#267
soot.PackManager.init()V#Constant(Ljava/lang/String;,"wjtp.tn")#268
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;,v,()Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;)#269
soot.jimple.toolkits.thread.synchronization.LockAllocator.v()Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.thread.synchronization.LockAllocator.v()Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_thread_synchronization_LockAllocator,()Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;)#1
soot.Singletons.soot_jimple_toolkits_thread_synchronization_LockAllocator()Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_thread_synchronization_LockAllocator()Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;#Get(Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_thread_synchronization_LockAllocator)#1
soot.Singletons.soot_jimple_toolkits_thread_synchronization_LockAllocator()Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_thread_synchronization_LockAllocator()Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_thread_synchronization_LockAllocator()Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_thread_synchronization_LockAllocator()Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;#New(Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;,0)#5
soot.Singletons.soot_jimple_toolkits_thread_synchronization_LockAllocator()Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_thread_synchronization_LockAllocator()Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_thread_synchronization_LockAllocator()Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_thread_synchronization_LockAllocator()Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;#Invoke(SPECIAL,Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/SceneTransformer;,<init>,()V)#1
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Constant(L;,null)#3
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;,criticalSections)#4
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Constant(L;,null)#6
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/jimple/toolkits/thread/synchronization/CriticalSectionInterferenceGraph;,NONSTATIC,Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;,interferenceGraph)#7
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Constant(L;,null)#9
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/toolkits/graph/DirectedGraph;,NONSTATIC,Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;,deadlockGraph)#10
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#12
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;,optionOneGlobalLock)#13
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#14
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#15
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;,optionStaticLocks)#16
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#17
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#18
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;,optionUseLocksets)#19
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#20
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#21
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;,optionLeaveOriginalLocks)#22
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#23
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#24
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;,optionIncludeEmptyPossibleEdges)#25
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#26
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Constant(I,1)#27
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;,optionAvoidDeadlock)#28
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#29
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Constant(I,1)#30
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;,optionOpenNesting)#31
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#32
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#33
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;,optionDoMHP)#34
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#35
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#36
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;,optionDoTLO)#37
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#38
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#39
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;,optionOnFlyTLO)#40
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#41
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Constant(I,1)#42
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;,optionPrintMhpSummary)#43
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#44
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#45
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;,optionPrintGraph)#46
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#47
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#48
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;,optionPrintTable)#49
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#50
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#51
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;,optionPrintDebug)#52
soot.jimple.toolkits.thread.synchronization.LockAllocator.<init>(Lsoot/Singletons$Global;)V#Return(V)#53
soot.Singletons.soot_jimple_toolkits_thread_synchronization_LockAllocator()Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;#Put(Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_thread_synchronization_LockAllocator)#10
soot.Singletons.soot_jimple_toolkits_thread_synchronization_LockAllocator()Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_thread_synchronization_LockAllocator()Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;#Get(Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_thread_synchronization_LockAllocator)#12
soot.Singletons.soot_jimple_toolkits_thread_synchronization_LockAllocator()Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.thread.synchronization.LockAllocator.v()Lsoot/jimple/toolkits/thread/synchronization/LockAllocator;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#270
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#271
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,0)#272
soot.PackManager.init()V#New(Lsoot/ScenePack;,0)#273
soot.PackManager.init()V#Dup(1,0)#274
soot.PackManager.init()V#Constant(Ljava/lang/String;,"wjop")#275
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/ScenePack;,<init>,(Ljava/lang/String;)V)#276
soot.PackManager.init()V#Dup(1,0)#277
soot.PackManager.init()V#LocalStore(Ljava/lang/Object;,1)#278
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/PackManager;,addPack,(Lsoot/Pack;)V)#279
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#280
soot.PackManager.init()V#New(Lsoot/Transform;,0)#281
soot.PackManager.init()V#Dup(1,0)#282
soot.PackManager.init()V#Constant(Ljava/lang/String;,"wjop.smb")#283
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/invoke/StaticMethodBinder;,v,()Lsoot/jimple/toolkits/invoke/StaticMethodBinder;)#284
soot.jimple.toolkits.invoke.StaticMethodBinder.v()Lsoot/jimple/toolkits/invoke/StaticMethodBinder;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.invoke.StaticMethodBinder.v()Lsoot/jimple/toolkits/invoke/StaticMethodBinder;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_invoke_StaticMethodBinder,()Lsoot/jimple/toolkits/invoke/StaticMethodBinder;)#1
soot.Singletons.soot_jimple_toolkits_invoke_StaticMethodBinder()Lsoot/jimple/toolkits/invoke/StaticMethodBinder;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_invoke_StaticMethodBinder()Lsoot/jimple/toolkits/invoke/StaticMethodBinder;#Get(Lsoot/jimple/toolkits/invoke/StaticMethodBinder;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_invoke_StaticMethodBinder)#1
soot.Singletons.soot_jimple_toolkits_invoke_StaticMethodBinder()Lsoot/jimple/toolkits/invoke/StaticMethodBinder;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_invoke_StaticMethodBinder()Lsoot/jimple/toolkits/invoke/StaticMethodBinder;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_invoke_StaticMethodBinder()Lsoot/jimple/toolkits/invoke/StaticMethodBinder;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_invoke_StaticMethodBinder()Lsoot/jimple/toolkits/invoke/StaticMethodBinder;#New(Lsoot/jimple/toolkits/invoke/StaticMethodBinder;,0)#5
soot.Singletons.soot_jimple_toolkits_invoke_StaticMethodBinder()Lsoot/jimple/toolkits/invoke/StaticMethodBinder;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_invoke_StaticMethodBinder()Lsoot/jimple/toolkits/invoke/StaticMethodBinder;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_invoke_StaticMethodBinder()Lsoot/jimple/toolkits/invoke/StaticMethodBinder;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_invoke_StaticMethodBinder()Lsoot/jimple/toolkits/invoke/StaticMethodBinder;#Invoke(SPECIAL,Lsoot/jimple/toolkits/invoke/StaticMethodBinder;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.invoke.StaticMethodBinder.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.invoke.StaticMethodBinder.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/SceneTransformer;,<init>,()V)#1
soot.jimple.toolkits.invoke.StaticMethodBinder.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_toolkits_invoke_StaticMethodBinder()Lsoot/jimple/toolkits/invoke/StaticMethodBinder;#Put(Lsoot/jimple/toolkits/invoke/StaticMethodBinder;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_invoke_StaticMethodBinder)#10
soot.Singletons.soot_jimple_toolkits_invoke_StaticMethodBinder()Lsoot/jimple/toolkits/invoke/StaticMethodBinder;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_invoke_StaticMethodBinder()Lsoot/jimple/toolkits/invoke/StaticMethodBinder;#Get(Lsoot/jimple/toolkits/invoke/StaticMethodBinder;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_invoke_StaticMethodBinder)#12
soot.Singletons.soot_jimple_toolkits_invoke_StaticMethodBinder()Lsoot/jimple/toolkits/invoke/StaticMethodBinder;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.invoke.StaticMethodBinder.v()Lsoot/jimple/toolkits/invoke/StaticMethodBinder;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#285
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#286
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#287
soot.PackManager.init()V#New(Lsoot/Transform;,0)#288
soot.PackManager.init()V#Dup(1,0)#289
soot.PackManager.init()V#Constant(Ljava/lang/String;,"wjop.si")#290
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/invoke/StaticInliner;,v,()Lsoot/jimple/toolkits/invoke/StaticInliner;)#291
soot.jimple.toolkits.invoke.StaticInliner.v()Lsoot/jimple/toolkits/invoke/StaticInliner;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.invoke.StaticInliner.v()Lsoot/jimple/toolkits/invoke/StaticInliner;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_invoke_StaticInliner,()Lsoot/jimple/toolkits/invoke/StaticInliner;)#1
soot.Singletons.soot_jimple_toolkits_invoke_StaticInliner()Lsoot/jimple/toolkits/invoke/StaticInliner;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_invoke_StaticInliner()Lsoot/jimple/toolkits/invoke/StaticInliner;#Get(Lsoot/jimple/toolkits/invoke/StaticInliner;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_invoke_StaticInliner)#1
soot.Singletons.soot_jimple_toolkits_invoke_StaticInliner()Lsoot/jimple/toolkits/invoke/StaticInliner;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_invoke_StaticInliner()Lsoot/jimple/toolkits/invoke/StaticInliner;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_invoke_StaticInliner()Lsoot/jimple/toolkits/invoke/StaticInliner;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_invoke_StaticInliner()Lsoot/jimple/toolkits/invoke/StaticInliner;#New(Lsoot/jimple/toolkits/invoke/StaticInliner;,0)#5
soot.Singletons.soot_jimple_toolkits_invoke_StaticInliner()Lsoot/jimple/toolkits/invoke/StaticInliner;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_invoke_StaticInliner()Lsoot/jimple/toolkits/invoke/StaticInliner;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_invoke_StaticInliner()Lsoot/jimple/toolkits/invoke/StaticInliner;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_invoke_StaticInliner()Lsoot/jimple/toolkits/invoke/StaticInliner;#Invoke(SPECIAL,Lsoot/jimple/toolkits/invoke/StaticInliner;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.invoke.StaticInliner.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.invoke.StaticInliner.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/SceneTransformer;,<init>,()V)#1
soot.jimple.toolkits.invoke.StaticInliner.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.toolkits.invoke.StaticInliner.<init>(Lsoot/Singletons$Global;)V#New(Ljava/util/HashMap;,0)#3
soot.jimple.toolkits.invoke.StaticInliner.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#4
soot.jimple.toolkits.invoke.StaticInliner.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#5
soot.jimple.toolkits.invoke.StaticInliner.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/util/HashMap;,NONSTATIC,Lsoot/jimple/toolkits/invoke/StaticInliner;,methodToOriginalSize)#6
soot.jimple.toolkits.invoke.StaticInliner.<init>(Lsoot/Singletons$Global;)V#Return(V)#7
soot.Singletons.soot_jimple_toolkits_invoke_StaticInliner()Lsoot/jimple/toolkits/invoke/StaticInliner;#Put(Lsoot/jimple/toolkits/invoke/StaticInliner;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_invoke_StaticInliner)#10
soot.Singletons.soot_jimple_toolkits_invoke_StaticInliner()Lsoot/jimple/toolkits/invoke/StaticInliner;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_invoke_StaticInliner()Lsoot/jimple/toolkits/invoke/StaticInliner;#Get(Lsoot/jimple/toolkits/invoke/StaticInliner;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_invoke_StaticInliner)#12
soot.Singletons.soot_jimple_toolkits_invoke_StaticInliner()Lsoot/jimple/toolkits/invoke/StaticInliner;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.invoke.StaticInliner.v()Lsoot/jimple/toolkits/invoke/StaticInliner;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#292
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#293
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,0)#294
soot.PackManager.init()V#New(Lsoot/ScenePack;,0)#295
soot.PackManager.init()V#Dup(1,0)#296
soot.PackManager.init()V#Constant(Ljava/lang/String;,"wjap")#297
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/ScenePack;,<init>,(Ljava/lang/String;)V)#298
soot.PackManager.init()V#Dup(1,0)#299
soot.PackManager.init()V#LocalStore(Ljava/lang/Object;,1)#300
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/PackManager;,addPack,(Lsoot/Pack;)V)#301
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#302
soot.PackManager.init()V#New(Lsoot/Transform;,0)#303
soot.PackManager.init()V#Dup(1,0)#304
soot.PackManager.init()V#Constant(Ljava/lang/String;,"wjap.ra")#305
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/annotation/arraycheck/RectangularArrayFinder;,v,()Lsoot/jimple/toolkits/annotation/arraycheck/RectangularArrayFinder;)#306
soot.jimple.toolkits.annotation.arraycheck.RectangularArrayFinder.v()Lsoot/jimple/toolkits/annotation/arraycheck/RectangularArrayFinder;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.annotation.arraycheck.RectangularArrayFinder.v()Lsoot/jimple/toolkits/annotation/arraycheck/RectangularArrayFinder;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_annotation_arraycheck_RectangularArrayFinder,()Lsoot/jimple/toolkits/annotation/arraycheck/RectangularArrayFinder;)#1
soot.Singletons.soot_jimple_toolkits_annotation_arraycheck_RectangularArrayFinder()Lsoot/jimple/toolkits/annotation/arraycheck/RectangularArrayFinder;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_annotation_arraycheck_RectangularArrayFinder()Lsoot/jimple/toolkits/annotation/arraycheck/RectangularArrayFinder;#Get(Lsoot/jimple/toolkits/annotation/arraycheck/RectangularArrayFinder;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_arraycheck_RectangularArrayFinder)#1
soot.Singletons.soot_jimple_toolkits_annotation_arraycheck_RectangularArrayFinder()Lsoot/jimple/toolkits/annotation/arraycheck/RectangularArrayFinder;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_annotation_arraycheck_RectangularArrayFinder()Lsoot/jimple/toolkits/annotation/arraycheck/RectangularArrayFinder;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_annotation_arraycheck_RectangularArrayFinder()Lsoot/jimple/toolkits/annotation/arraycheck/RectangularArrayFinder;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_annotation_arraycheck_RectangularArrayFinder()Lsoot/jimple/toolkits/annotation/arraycheck/RectangularArrayFinder;#New(Lsoot/jimple/toolkits/annotation/arraycheck/RectangularArrayFinder;,0)#5
soot.Singletons.soot_jimple_toolkits_annotation_arraycheck_RectangularArrayFinder()Lsoot/jimple/toolkits/annotation/arraycheck/RectangularArrayFinder;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_annotation_arraycheck_RectangularArrayFinder()Lsoot/jimple/toolkits/annotation/arraycheck/RectangularArrayFinder;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_annotation_arraycheck_RectangularArrayFinder()Lsoot/jimple/toolkits/annotation/arraycheck/RectangularArrayFinder;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_annotation_arraycheck_RectangularArrayFinder()Lsoot/jimple/toolkits/annotation/arraycheck/RectangularArrayFinder;#Invoke(SPECIAL,Lsoot/jimple/toolkits/annotation/arraycheck/RectangularArrayFinder;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.annotation.arraycheck.RectangularArrayFinder.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.annotation.arraycheck.RectangularArrayFinder.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/SceneTransformer;,<init>,()V)#1
soot.jimple.toolkits.annotation.arraycheck.RectangularArrayFinder.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.toolkits.annotation.arraycheck.RectangularArrayFinder.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/jimple/toolkits/annotation/arraycheck/ExtendedHashMutableDirectedGraph;,0)#3
soot.jimple.toolkits.annotation.arraycheck.RectangularArrayFinder.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#4
soot.jimple.toolkits.annotation.arraycheck.RectangularArrayFinder.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/jimple/toolkits/annotation/arraycheck/ExtendedHashMutableDirectedGraph;,<init>,()V)#5
soot.jimple.toolkits.annotation.arraycheck.ExtendedHashMutableDirectedGraph.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.annotation.arraycheck.ExtendedHashMutableDirectedGraph.<init>()V#Invoke(SPECIAL,Lsoot/toolkits/graph/HashMutableDirectedGraph;,<init>,()V)#1
soot.toolkits.graph.HashMutableDirectedGraph.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.HashMutableDirectedGraph.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.toolkits.graph.HashMutableDirectedGraph.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
soot.toolkits.graph.HashMutableDirectedGraph.<init>()V#New(Ljava/util/HashMap;,0)#3
soot.toolkits.graph.HashMutableDirectedGraph.<init>()V#Dup(1,0)#4
soot.toolkits.graph.HashMutableDirectedGraph.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#5
soot.toolkits.graph.HashMutableDirectedGraph.<init>()V#Put(Ljava/util/HashMap;,NONSTATIC,Lsoot/toolkits/graph/HashMutableDirectedGraph;,nodeToPreds)#6
soot.toolkits.graph.HashMutableDirectedGraph.<init>()V#LocalLoad(Ljava/lang/Object;,0)#7
soot.toolkits.graph.HashMutableDirectedGraph.<init>()V#New(Ljava/util/HashMap;,0)#8
soot.toolkits.graph.HashMutableDirectedGraph.<init>()V#Dup(1,0)#9
soot.toolkits.graph.HashMutableDirectedGraph.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#10
soot.toolkits.graph.HashMutableDirectedGraph.<init>()V#Put(Ljava/util/HashMap;,NONSTATIC,Lsoot/toolkits/graph/HashMutableDirectedGraph;,nodeToSuccs)#11
soot.toolkits.graph.HashMutableDirectedGraph.<init>()V#LocalLoad(Ljava/lang/Object;,0)#12
soot.toolkits.graph.HashMutableDirectedGraph.<init>()V#New(Lsoot/util/HashChain;,0)#13
soot.toolkits.graph.HashMutableDirectedGraph.<init>()V#Dup(1,0)#14
soot.toolkits.graph.HashMutableDirectedGraph.<init>()V#Invoke(SPECIAL,Lsoot/util/HashChain;,<init>,()V)#15
soot.toolkits.graph.HashMutableDirectedGraph.<init>()V#Put(Lsoot/util/Chain;,NONSTATIC,Lsoot/toolkits/graph/HashMutableDirectedGraph;,heads)#16
soot.toolkits.graph.HashMutableDirectedGraph.<init>()V#LocalLoad(Ljava/lang/Object;,0)#17
soot.toolkits.graph.HashMutableDirectedGraph.<init>()V#New(Lsoot/util/HashChain;,0)#18
soot.toolkits.graph.HashMutableDirectedGraph.<init>()V#Dup(1,0)#19
soot.toolkits.graph.HashMutableDirectedGraph.<init>()V#Invoke(SPECIAL,Lsoot/util/HashChain;,<init>,()V)#20
soot.toolkits.graph.HashMutableDirectedGraph.<init>()V#Put(Lsoot/util/Chain;,NONSTATIC,Lsoot/toolkits/graph/HashMutableDirectedGraph;,tails)#21
soot.toolkits.graph.HashMutableDirectedGraph.<init>()V#Return(V)#22
soot.jimple.toolkits.annotation.arraycheck.ExtendedHashMutableDirectedGraph.<init>()V#Return(V)#2
soot.jimple.toolkits.annotation.arraycheck.RectangularArrayFinder.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/jimple/toolkits/annotation/arraycheck/ExtendedHashMutableDirectedGraph;,NONSTATIC,Lsoot/jimple/toolkits/annotation/arraycheck/RectangularArrayFinder;,agraph)#6
soot.jimple.toolkits.annotation.arraycheck.RectangularArrayFinder.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#7
soot.jimple.toolkits.annotation.arraycheck.RectangularArrayFinder.<init>(Lsoot/Singletons$Global;)V#New(Ljava/util/HashSet;,0)#8
soot.jimple.toolkits.annotation.arraycheck.RectangularArrayFinder.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#9
soot.jimple.toolkits.annotation.arraycheck.RectangularArrayFinder.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#10
soot.jimple.toolkits.annotation.arraycheck.RectangularArrayFinder.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/util/Set;,NONSTATIC,Lsoot/jimple/toolkits/annotation/arraycheck/RectangularArrayFinder;,falseSet)#11
soot.jimple.toolkits.annotation.arraycheck.RectangularArrayFinder.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#12
soot.jimple.toolkits.annotation.arraycheck.RectangularArrayFinder.<init>(Lsoot/Singletons$Global;)V#New(Ljava/util/HashSet;,0)#13
soot.jimple.toolkits.annotation.arraycheck.RectangularArrayFinder.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#14
soot.jimple.toolkits.annotation.arraycheck.RectangularArrayFinder.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#15
soot.jimple.toolkits.annotation.arraycheck.RectangularArrayFinder.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/util/Set;,NONSTATIC,Lsoot/jimple/toolkits/annotation/arraycheck/RectangularArrayFinder;,trueSet)#16
soot.jimple.toolkits.annotation.arraycheck.RectangularArrayFinder.<init>(Lsoot/Singletons$Global;)V#Return(V)#17
soot.Singletons.soot_jimple_toolkits_annotation_arraycheck_RectangularArrayFinder()Lsoot/jimple/toolkits/annotation/arraycheck/RectangularArrayFinder;#Put(Lsoot/jimple/toolkits/annotation/arraycheck/RectangularArrayFinder;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_arraycheck_RectangularArrayFinder)#10
soot.Singletons.soot_jimple_toolkits_annotation_arraycheck_RectangularArrayFinder()Lsoot/jimple/toolkits/annotation/arraycheck/RectangularArrayFinder;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_annotation_arraycheck_RectangularArrayFinder()Lsoot/jimple/toolkits/annotation/arraycheck/RectangularArrayFinder;#Get(Lsoot/jimple/toolkits/annotation/arraycheck/RectangularArrayFinder;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_arraycheck_RectangularArrayFinder)#12
soot.Singletons.soot_jimple_toolkits_annotation_arraycheck_RectangularArrayFinder()Lsoot/jimple/toolkits/annotation/arraycheck/RectangularArrayFinder;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.annotation.arraycheck.RectangularArrayFinder.v()Lsoot/jimple/toolkits/annotation/arraycheck/RectangularArrayFinder;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#307
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#308
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#309
soot.PackManager.init()V#New(Lsoot/Transform;,0)#310
soot.PackManager.init()V#Dup(1,0)#311
soot.PackManager.init()V#Constant(Ljava/lang/String;,"wjap.umt")#312
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/annotation/methods/UnreachableMethodsTagger;,v,()Lsoot/jimple/toolkits/annotation/methods/UnreachableMethodsTagger;)#313
soot.jimple.toolkits.annotation.methods.UnreachableMethodsTagger.v()Lsoot/jimple/toolkits/annotation/methods/UnreachableMethodsTagger;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.annotation.methods.UnreachableMethodsTagger.v()Lsoot/jimple/toolkits/annotation/methods/UnreachableMethodsTagger;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_annotation_methods_UnreachableMethodsTagger,()Lsoot/jimple/toolkits/annotation/methods/UnreachableMethodsTagger;)#1
soot.Singletons.soot_jimple_toolkits_annotation_methods_UnreachableMethodsTagger()Lsoot/jimple/toolkits/annotation/methods/UnreachableMethodsTagger;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_annotation_methods_UnreachableMethodsTagger()Lsoot/jimple/toolkits/annotation/methods/UnreachableMethodsTagger;#Get(Lsoot/jimple/toolkits/annotation/methods/UnreachableMethodsTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_methods_UnreachableMethodsTagger)#1
soot.Singletons.soot_jimple_toolkits_annotation_methods_UnreachableMethodsTagger()Lsoot/jimple/toolkits/annotation/methods/UnreachableMethodsTagger;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_annotation_methods_UnreachableMethodsTagger()Lsoot/jimple/toolkits/annotation/methods/UnreachableMethodsTagger;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_annotation_methods_UnreachableMethodsTagger()Lsoot/jimple/toolkits/annotation/methods/UnreachableMethodsTagger;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_annotation_methods_UnreachableMethodsTagger()Lsoot/jimple/toolkits/annotation/methods/UnreachableMethodsTagger;#New(Lsoot/jimple/toolkits/annotation/methods/UnreachableMethodsTagger;,0)#5
soot.Singletons.soot_jimple_toolkits_annotation_methods_UnreachableMethodsTagger()Lsoot/jimple/toolkits/annotation/methods/UnreachableMethodsTagger;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_annotation_methods_UnreachableMethodsTagger()Lsoot/jimple/toolkits/annotation/methods/UnreachableMethodsTagger;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_annotation_methods_UnreachableMethodsTagger()Lsoot/jimple/toolkits/annotation/methods/UnreachableMethodsTagger;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_annotation_methods_UnreachableMethodsTagger()Lsoot/jimple/toolkits/annotation/methods/UnreachableMethodsTagger;#Invoke(SPECIAL,Lsoot/jimple/toolkits/annotation/methods/UnreachableMethodsTagger;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.annotation.methods.UnreachableMethodsTagger.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.annotation.methods.UnreachableMethodsTagger.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/SceneTransformer;,<init>,()V)#1
soot.jimple.toolkits.annotation.methods.UnreachableMethodsTagger.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_toolkits_annotation_methods_UnreachableMethodsTagger()Lsoot/jimple/toolkits/annotation/methods/UnreachableMethodsTagger;#Put(Lsoot/jimple/toolkits/annotation/methods/UnreachableMethodsTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_methods_UnreachableMethodsTagger)#10
soot.Singletons.soot_jimple_toolkits_annotation_methods_UnreachableMethodsTagger()Lsoot/jimple/toolkits/annotation/methods/UnreachableMethodsTagger;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_annotation_methods_UnreachableMethodsTagger()Lsoot/jimple/toolkits/annotation/methods/UnreachableMethodsTagger;#Get(Lsoot/jimple/toolkits/annotation/methods/UnreachableMethodsTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_methods_UnreachableMethodsTagger)#12
soot.Singletons.soot_jimple_toolkits_annotation_methods_UnreachableMethodsTagger()Lsoot/jimple/toolkits/annotation/methods/UnreachableMethodsTagger;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.annotation.methods.UnreachableMethodsTagger.v()Lsoot/jimple/toolkits/annotation/methods/UnreachableMethodsTagger;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#314
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#315
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#316
soot.PackManager.init()V#New(Lsoot/Transform;,0)#317
soot.PackManager.init()V#Dup(1,0)#318
soot.PackManager.init()V#Constant(Ljava/lang/String;,"wjap.uft")#319
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/annotation/fields/UnreachableFieldsTagger;,v,()Lsoot/jimple/toolkits/annotation/fields/UnreachableFieldsTagger;)#320
soot.jimple.toolkits.annotation.fields.UnreachableFieldsTagger.v()Lsoot/jimple/toolkits/annotation/fields/UnreachableFieldsTagger;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.annotation.fields.UnreachableFieldsTagger.v()Lsoot/jimple/toolkits/annotation/fields/UnreachableFieldsTagger;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_annotation_fields_UnreachableFieldsTagger,()Lsoot/jimple/toolkits/annotation/fields/UnreachableFieldsTagger;)#1
soot.Singletons.soot_jimple_toolkits_annotation_fields_UnreachableFieldsTagger()Lsoot/jimple/toolkits/annotation/fields/UnreachableFieldsTagger;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_annotation_fields_UnreachableFieldsTagger()Lsoot/jimple/toolkits/annotation/fields/UnreachableFieldsTagger;#Get(Lsoot/jimple/toolkits/annotation/fields/UnreachableFieldsTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_fields_UnreachableFieldsTagger)#1
soot.Singletons.soot_jimple_toolkits_annotation_fields_UnreachableFieldsTagger()Lsoot/jimple/toolkits/annotation/fields/UnreachableFieldsTagger;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_annotation_fields_UnreachableFieldsTagger()Lsoot/jimple/toolkits/annotation/fields/UnreachableFieldsTagger;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_annotation_fields_UnreachableFieldsTagger()Lsoot/jimple/toolkits/annotation/fields/UnreachableFieldsTagger;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_annotation_fields_UnreachableFieldsTagger()Lsoot/jimple/toolkits/annotation/fields/UnreachableFieldsTagger;#New(Lsoot/jimple/toolkits/annotation/fields/UnreachableFieldsTagger;,0)#5
soot.Singletons.soot_jimple_toolkits_annotation_fields_UnreachableFieldsTagger()Lsoot/jimple/toolkits/annotation/fields/UnreachableFieldsTagger;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_annotation_fields_UnreachableFieldsTagger()Lsoot/jimple/toolkits/annotation/fields/UnreachableFieldsTagger;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_annotation_fields_UnreachableFieldsTagger()Lsoot/jimple/toolkits/annotation/fields/UnreachableFieldsTagger;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_annotation_fields_UnreachableFieldsTagger()Lsoot/jimple/toolkits/annotation/fields/UnreachableFieldsTagger;#Invoke(SPECIAL,Lsoot/jimple/toolkits/annotation/fields/UnreachableFieldsTagger;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.annotation.fields.UnreachableFieldsTagger.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.annotation.fields.UnreachableFieldsTagger.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/SceneTransformer;,<init>,()V)#1
soot.jimple.toolkits.annotation.fields.UnreachableFieldsTagger.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_toolkits_annotation_fields_UnreachableFieldsTagger()Lsoot/jimple/toolkits/annotation/fields/UnreachableFieldsTagger;#Put(Lsoot/jimple/toolkits/annotation/fields/UnreachableFieldsTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_fields_UnreachableFieldsTagger)#10
soot.Singletons.soot_jimple_toolkits_annotation_fields_UnreachableFieldsTagger()Lsoot/jimple/toolkits/annotation/fields/UnreachableFieldsTagger;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_annotation_fields_UnreachableFieldsTagger()Lsoot/jimple/toolkits/annotation/fields/UnreachableFieldsTagger;#Get(Lsoot/jimple/toolkits/annotation/fields/UnreachableFieldsTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_fields_UnreachableFieldsTagger)#12
soot.Singletons.soot_jimple_toolkits_annotation_fields_UnreachableFieldsTagger()Lsoot/jimple/toolkits/annotation/fields/UnreachableFieldsTagger;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.annotation.fields.UnreachableFieldsTagger.v()Lsoot/jimple/toolkits/annotation/fields/UnreachableFieldsTagger;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#321
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#322
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#323
soot.PackManager.init()V#New(Lsoot/Transform;,0)#324
soot.PackManager.init()V#Dup(1,0)#325
soot.PackManager.init()V#Constant(Ljava/lang/String;,"wjap.tqt")#326
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/annotation/qualifiers/TightestQualifiersTagger;,v,()Lsoot/jimple/toolkits/annotation/qualifiers/TightestQualifiersTagger;)#327
soot.jimple.toolkits.annotation.qualifiers.TightestQualifiersTagger.v()Lsoot/jimple/toolkits/annotation/qualifiers/TightestQualifiersTagger;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.annotation.qualifiers.TightestQualifiersTagger.v()Lsoot/jimple/toolkits/annotation/qualifiers/TightestQualifiersTagger;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_annotation_qualifiers_TightestQualifiersTagger,()Lsoot/jimple/toolkits/annotation/qualifiers/TightestQualifiersTagger;)#1
soot.Singletons.soot_jimple_toolkits_annotation_qualifiers_TightestQualifiersTagger()Lsoot/jimple/toolkits/annotation/qualifiers/TightestQualifiersTagger;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_annotation_qualifiers_TightestQualifiersTagger()Lsoot/jimple/toolkits/annotation/qualifiers/TightestQualifiersTagger;#Get(Lsoot/jimple/toolkits/annotation/qualifiers/TightestQualifiersTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_qualifiers_TightestQualifiersTagger)#1
soot.Singletons.soot_jimple_toolkits_annotation_qualifiers_TightestQualifiersTagger()Lsoot/jimple/toolkits/annotation/qualifiers/TightestQualifiersTagger;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_annotation_qualifiers_TightestQualifiersTagger()Lsoot/jimple/toolkits/annotation/qualifiers/TightestQualifiersTagger;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_annotation_qualifiers_TightestQualifiersTagger()Lsoot/jimple/toolkits/annotation/qualifiers/TightestQualifiersTagger;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_annotation_qualifiers_TightestQualifiersTagger()Lsoot/jimple/toolkits/annotation/qualifiers/TightestQualifiersTagger;#New(Lsoot/jimple/toolkits/annotation/qualifiers/TightestQualifiersTagger;,0)#5
soot.Singletons.soot_jimple_toolkits_annotation_qualifiers_TightestQualifiersTagger()Lsoot/jimple/toolkits/annotation/qualifiers/TightestQualifiersTagger;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_annotation_qualifiers_TightestQualifiersTagger()Lsoot/jimple/toolkits/annotation/qualifiers/TightestQualifiersTagger;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_annotation_qualifiers_TightestQualifiersTagger()Lsoot/jimple/toolkits/annotation/qualifiers/TightestQualifiersTagger;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_annotation_qualifiers_TightestQualifiersTagger()Lsoot/jimple/toolkits/annotation/qualifiers/TightestQualifiersTagger;#Invoke(SPECIAL,Lsoot/jimple/toolkits/annotation/qualifiers/TightestQualifiersTagger;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.annotation.qualifiers.TightestQualifiersTagger.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.annotation.qualifiers.TightestQualifiersTagger.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/SceneTransformer;,<init>,()V)#1
soot.jimple.toolkits.annotation.qualifiers.TightestQualifiersTagger.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.toolkits.annotation.qualifiers.TightestQualifiersTagger.<init>(Lsoot/Singletons$Global;)V#New(Ljava/util/HashMap;,0)#3
soot.jimple.toolkits.annotation.qualifiers.TightestQualifiersTagger.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#4
soot.jimple.toolkits.annotation.qualifiers.TightestQualifiersTagger.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#5
soot.jimple.toolkits.annotation.qualifiers.TightestQualifiersTagger.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/util/HashMap;,NONSTATIC,Lsoot/jimple/toolkits/annotation/qualifiers/TightestQualifiersTagger;,methodResultsMap)#6
soot.jimple.toolkits.annotation.qualifiers.TightestQualifiersTagger.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#7
soot.jimple.toolkits.annotation.qualifiers.TightestQualifiersTagger.<init>(Lsoot/Singletons$Global;)V#New(Ljava/util/HashMap;,0)#8
soot.jimple.toolkits.annotation.qualifiers.TightestQualifiersTagger.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#9
soot.jimple.toolkits.annotation.qualifiers.TightestQualifiersTagger.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#10
soot.jimple.toolkits.annotation.qualifiers.TightestQualifiersTagger.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/util/HashMap;,NONSTATIC,Lsoot/jimple/toolkits/annotation/qualifiers/TightestQualifiersTagger;,fieldResultsMap)#11
soot.jimple.toolkits.annotation.qualifiers.TightestQualifiersTagger.<init>(Lsoot/Singletons$Global;)V#Return(V)#12
soot.Singletons.soot_jimple_toolkits_annotation_qualifiers_TightestQualifiersTagger()Lsoot/jimple/toolkits/annotation/qualifiers/TightestQualifiersTagger;#Put(Lsoot/jimple/toolkits/annotation/qualifiers/TightestQualifiersTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_qualifiers_TightestQualifiersTagger)#10
soot.Singletons.soot_jimple_toolkits_annotation_qualifiers_TightestQualifiersTagger()Lsoot/jimple/toolkits/annotation/qualifiers/TightestQualifiersTagger;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_annotation_qualifiers_TightestQualifiersTagger()Lsoot/jimple/toolkits/annotation/qualifiers/TightestQualifiersTagger;#Get(Lsoot/jimple/toolkits/annotation/qualifiers/TightestQualifiersTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_qualifiers_TightestQualifiersTagger)#12
soot.Singletons.soot_jimple_toolkits_annotation_qualifiers_TightestQualifiersTagger()Lsoot/jimple/toolkits/annotation/qualifiers/TightestQualifiersTagger;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.annotation.qualifiers.TightestQualifiersTagger.v()Lsoot/jimple/toolkits/annotation/qualifiers/TightestQualifiersTagger;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#328
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#329
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#330
soot.PackManager.init()V#New(Lsoot/Transform;,0)#331
soot.PackManager.init()V#Dup(1,0)#332
soot.PackManager.init()V#Constant(Ljava/lang/String;,"wjap.cgg")#333
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/annotation/callgraph/CallGraphGrapher;,v,()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphGrapher;)#334
soot.jimple.toolkits.annotation.callgraph.CallGraphGrapher.v()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphGrapher;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.annotation.callgraph.CallGraphGrapher.v()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphGrapher;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_annotation_callgraph_CallGraphGrapher,()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphGrapher;)#1
soot.Singletons.soot_jimple_toolkits_annotation_callgraph_CallGraphGrapher()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphGrapher;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_annotation_callgraph_CallGraphGrapher()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphGrapher;#Get(Lsoot/jimple/toolkits/annotation/callgraph/CallGraphGrapher;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_callgraph_CallGraphGrapher)#1
soot.Singletons.soot_jimple_toolkits_annotation_callgraph_CallGraphGrapher()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphGrapher;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_annotation_callgraph_CallGraphGrapher()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphGrapher;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_annotation_callgraph_CallGraphGrapher()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphGrapher;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_annotation_callgraph_CallGraphGrapher()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphGrapher;#New(Lsoot/jimple/toolkits/annotation/callgraph/CallGraphGrapher;,0)#5
soot.Singletons.soot_jimple_toolkits_annotation_callgraph_CallGraphGrapher()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphGrapher;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_annotation_callgraph_CallGraphGrapher()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphGrapher;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_annotation_callgraph_CallGraphGrapher()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphGrapher;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_annotation_callgraph_CallGraphGrapher()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphGrapher;#Invoke(SPECIAL,Lsoot/jimple/toolkits/annotation/callgraph/CallGraphGrapher;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.annotation.callgraph.CallGraphGrapher.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.annotation.callgraph.CallGraphGrapher.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/SceneTransformer;,<init>,()V)#1
soot.jimple.toolkits.annotation.callgraph.CallGraphGrapher.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_toolkits_annotation_callgraph_CallGraphGrapher()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphGrapher;#Put(Lsoot/jimple/toolkits/annotation/callgraph/CallGraphGrapher;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_callgraph_CallGraphGrapher)#10
soot.Singletons.soot_jimple_toolkits_annotation_callgraph_CallGraphGrapher()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphGrapher;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_annotation_callgraph_CallGraphGrapher()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphGrapher;#Get(Lsoot/jimple/toolkits/annotation/callgraph/CallGraphGrapher;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_callgraph_CallGraphGrapher)#12
soot.Singletons.soot_jimple_toolkits_annotation_callgraph_CallGraphGrapher()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphGrapher;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.annotation.callgraph.CallGraphGrapher.v()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphGrapher;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#335
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#336
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#337
soot.PackManager.init()V#New(Lsoot/Transform;,0)#338
soot.PackManager.init()V#Dup(1,0)#339
soot.PackManager.init()V#Constant(Ljava/lang/String;,"wjap.purity")#340
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/annotation/purity/PurityAnalysis;,v,()Lsoot/jimple/toolkits/annotation/purity/PurityAnalysis;)#341
soot.jimple.toolkits.annotation.purity.PurityAnalysis.v()Lsoot/jimple/toolkits/annotation/purity/PurityAnalysis;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.annotation.purity.PurityAnalysis.v()Lsoot/jimple/toolkits/annotation/purity/PurityAnalysis;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_annotation_purity_PurityAnalysis,()Lsoot/jimple/toolkits/annotation/purity/PurityAnalysis;)#1
soot.Singletons.soot_jimple_toolkits_annotation_purity_PurityAnalysis()Lsoot/jimple/toolkits/annotation/purity/PurityAnalysis;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_annotation_purity_PurityAnalysis()Lsoot/jimple/toolkits/annotation/purity/PurityAnalysis;#Get(Lsoot/jimple/toolkits/annotation/purity/PurityAnalysis;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_purity_PurityAnalysis)#1
soot.Singletons.soot_jimple_toolkits_annotation_purity_PurityAnalysis()Lsoot/jimple/toolkits/annotation/purity/PurityAnalysis;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_annotation_purity_PurityAnalysis()Lsoot/jimple/toolkits/annotation/purity/PurityAnalysis;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_annotation_purity_PurityAnalysis()Lsoot/jimple/toolkits/annotation/purity/PurityAnalysis;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_annotation_purity_PurityAnalysis()Lsoot/jimple/toolkits/annotation/purity/PurityAnalysis;#New(Lsoot/jimple/toolkits/annotation/purity/PurityAnalysis;,0)#5
soot.Singletons.soot_jimple_toolkits_annotation_purity_PurityAnalysis()Lsoot/jimple/toolkits/annotation/purity/PurityAnalysis;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_annotation_purity_PurityAnalysis()Lsoot/jimple/toolkits/annotation/purity/PurityAnalysis;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_annotation_purity_PurityAnalysis()Lsoot/jimple/toolkits/annotation/purity/PurityAnalysis;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_annotation_purity_PurityAnalysis()Lsoot/jimple/toolkits/annotation/purity/PurityAnalysis;#Invoke(SPECIAL,Lsoot/jimple/toolkits/annotation/purity/PurityAnalysis;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.annotation.purity.PurityAnalysis.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.annotation.purity.PurityAnalysis.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/SceneTransformer;,<init>,()V)#1
soot.jimple.toolkits.annotation.purity.PurityAnalysis.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.toolkits.annotation.purity.PurityAnalysis.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.jimple.toolkits.annotation.purity.PurityAnalysis.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/jimple/toolkits/annotation/purity/PurityAnalysis;,g)#4
soot.jimple.toolkits.annotation.purity.PurityAnalysis.<init>(Lsoot/Singletons$Global;)V#Return(V)#5
soot.Singletons.soot_jimple_toolkits_annotation_purity_PurityAnalysis()Lsoot/jimple/toolkits/annotation/purity/PurityAnalysis;#Put(Lsoot/jimple/toolkits/annotation/purity/PurityAnalysis;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_purity_PurityAnalysis)#10
soot.Singletons.soot_jimple_toolkits_annotation_purity_PurityAnalysis()Lsoot/jimple/toolkits/annotation/purity/PurityAnalysis;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_annotation_purity_PurityAnalysis()Lsoot/jimple/toolkits/annotation/purity/PurityAnalysis;#Get(Lsoot/jimple/toolkits/annotation/purity/PurityAnalysis;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_purity_PurityAnalysis)#12
soot.Singletons.soot_jimple_toolkits_annotation_purity_PurityAnalysis()Lsoot/jimple/toolkits/annotation/purity/PurityAnalysis;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.annotation.purity.PurityAnalysis.v()Lsoot/jimple/toolkits/annotation/purity/PurityAnalysis;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#342
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#343
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,0)#344
soot.PackManager.init()V#New(Lsoot/BodyPack;,0)#345
soot.PackManager.init()V#Dup(1,0)#346
soot.PackManager.init()V#Constant(Ljava/lang/String;,"shimple")#347
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/BodyPack;,<init>,(Ljava/lang/String;)V)#348
soot.PackManager.init()V#Dup(1,0)#349
soot.PackManager.init()V#LocalStore(Ljava/lang/Object;,1)#350
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/PackManager;,addPack,(Lsoot/Pack;)V)#351
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,0)#352
soot.PackManager.init()V#New(Lsoot/BodyPack;,0)#353
soot.PackManager.init()V#Dup(1,0)#354
soot.PackManager.init()V#Constant(Ljava/lang/String;,"stp")#355
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/BodyPack;,<init>,(Ljava/lang/String;)V)#356
soot.PackManager.init()V#Dup(1,0)#357
soot.PackManager.init()V#LocalStore(Ljava/lang/Object;,1)#358
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/PackManager;,addPack,(Lsoot/Pack;)V)#359
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,0)#360
soot.PackManager.init()V#New(Lsoot/BodyPack;,0)#361
soot.PackManager.init()V#Dup(1,0)#362
soot.PackManager.init()V#Constant(Ljava/lang/String;,"sop")#363
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/BodyPack;,<init>,(Ljava/lang/String;)V)#364
soot.PackManager.init()V#Dup(1,0)#365
soot.PackManager.init()V#LocalStore(Ljava/lang/Object;,1)#366
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/PackManager;,addPack,(Lsoot/Pack;)V)#367
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#368
soot.PackManager.init()V#New(Lsoot/Transform;,0)#369
soot.PackManager.init()V#Dup(1,0)#370
soot.PackManager.init()V#Constant(Ljava/lang/String;,"sop.cpf")#371
soot.PackManager.init()V#Invoke(STATIC,Lsoot/shimple/toolkits/scalar/SConstantPropagatorAndFolder;,v,()Lsoot/shimple/toolkits/scalar/SConstantPropagatorAndFolder;)#372
soot.shimple.toolkits.scalar.SConstantPropagatorAndFolder.v()Lsoot/shimple/toolkits/scalar/SConstantPropagatorAndFolder;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.shimple.toolkits.scalar.SConstantPropagatorAndFolder.v()Lsoot/shimple/toolkits/scalar/SConstantPropagatorAndFolder;#Invoke(VIRTUAL,Lsoot/G;,soot_shimple_toolkits_scalar_SConstantPropagatorAndFolder,()Lsoot/shimple/toolkits/scalar/SConstantPropagatorAndFolder;)#1
soot.Singletons.soot_shimple_toolkits_scalar_SConstantPropagatorAndFolder()Lsoot/shimple/toolkits/scalar/SConstantPropagatorAndFolder;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_shimple_toolkits_scalar_SConstantPropagatorAndFolder()Lsoot/shimple/toolkits/scalar/SConstantPropagatorAndFolder;#Get(Lsoot/shimple/toolkits/scalar/SConstantPropagatorAndFolder;,NONSTATIC,Lsoot/Singletons;,instance_soot_shimple_toolkits_scalar_SConstantPropagatorAndFolder)#1
soot.Singletons.soot_shimple_toolkits_scalar_SConstantPropagatorAndFolder()Lsoot/shimple/toolkits/scalar/SConstantPropagatorAndFolder;#Constant(L;,null)#2
soot.Singletons.soot_shimple_toolkits_scalar_SConstantPropagatorAndFolder()Lsoot/shimple/toolkits/scalar/SConstantPropagatorAndFolder;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_shimple_toolkits_scalar_SConstantPropagatorAndFolder()Lsoot/shimple/toolkits/scalar/SConstantPropagatorAndFolder;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_shimple_toolkits_scalar_SConstantPropagatorAndFolder()Lsoot/shimple/toolkits/scalar/SConstantPropagatorAndFolder;#New(Lsoot/shimple/toolkits/scalar/SConstantPropagatorAndFolder;,0)#5
soot.Singletons.soot_shimple_toolkits_scalar_SConstantPropagatorAndFolder()Lsoot/shimple/toolkits/scalar/SConstantPropagatorAndFolder;#Dup(1,0)#6
soot.Singletons.soot_shimple_toolkits_scalar_SConstantPropagatorAndFolder()Lsoot/shimple/toolkits/scalar/SConstantPropagatorAndFolder;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_shimple_toolkits_scalar_SConstantPropagatorAndFolder()Lsoot/shimple/toolkits/scalar/SConstantPropagatorAndFolder;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_shimple_toolkits_scalar_SConstantPropagatorAndFolder()Lsoot/shimple/toolkits/scalar/SConstantPropagatorAndFolder;#Invoke(SPECIAL,Lsoot/shimple/toolkits/scalar/SConstantPropagatorAndFolder;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.shimple.toolkits.scalar.SConstantPropagatorAndFolder.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.shimple.toolkits.scalar.SConstantPropagatorAndFolder.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.shimple.toolkits.scalar.SConstantPropagatorAndFolder.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_shimple_toolkits_scalar_SConstantPropagatorAndFolder()Lsoot/shimple/toolkits/scalar/SConstantPropagatorAndFolder;#Put(Lsoot/shimple/toolkits/scalar/SConstantPropagatorAndFolder;,NONSTATIC,Lsoot/Singletons;,instance_soot_shimple_toolkits_scalar_SConstantPropagatorAndFolder)#10
soot.Singletons.soot_shimple_toolkits_scalar_SConstantPropagatorAndFolder()Lsoot/shimple/toolkits/scalar/SConstantPropagatorAndFolder;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_shimple_toolkits_scalar_SConstantPropagatorAndFolder()Lsoot/shimple/toolkits/scalar/SConstantPropagatorAndFolder;#Get(Lsoot/shimple/toolkits/scalar/SConstantPropagatorAndFolder;,NONSTATIC,Lsoot/Singletons;,instance_soot_shimple_toolkits_scalar_SConstantPropagatorAndFolder)#12
soot.Singletons.soot_shimple_toolkits_scalar_SConstantPropagatorAndFolder()Lsoot/shimple/toolkits/scalar/SConstantPropagatorAndFolder;#Return(Ljava/lang/Object;)#13
soot.shimple.toolkits.scalar.SConstantPropagatorAndFolder.v()Lsoot/shimple/toolkits/scalar/SConstantPropagatorAndFolder;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#373
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#374
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,0)#375
soot.PackManager.init()V#New(Lsoot/BodyPack;,0)#376
soot.PackManager.init()V#Dup(1,0)#377
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jtp")#378
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/BodyPack;,<init>,(Ljava/lang/String;)V)#379
soot.PackManager.init()V#Dup(1,0)#380
soot.PackManager.init()V#LocalStore(Ljava/lang/Object;,1)#381
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/PackManager;,addPack,(Lsoot/Pack;)V)#382
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,0)#383
soot.PackManager.init()V#New(Lsoot/BodyPack;,0)#384
soot.PackManager.init()V#Dup(1,0)#385
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jop")#386
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/BodyPack;,<init>,(Ljava/lang/String;)V)#387
soot.PackManager.init()V#Dup(1,0)#388
soot.PackManager.init()V#LocalStore(Ljava/lang/Object;,1)#389
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/PackManager;,addPack,(Lsoot/Pack;)V)#390
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#391
soot.PackManager.init()V#New(Lsoot/Transform;,0)#392
soot.PackManager.init()V#Dup(1,0)#393
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jop.cse")#394
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/scalar/CommonSubexpressionEliminator;,v,()Lsoot/jimple/toolkits/scalar/CommonSubexpressionEliminator;)#395
soot.jimple.toolkits.scalar.CommonSubexpressionEliminator.v()Lsoot/jimple/toolkits/scalar/CommonSubexpressionEliminator;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.scalar.CommonSubexpressionEliminator.v()Lsoot/jimple/toolkits/scalar/CommonSubexpressionEliminator;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_scalar_CommonSubexpressionEliminator,()Lsoot/jimple/toolkits/scalar/CommonSubexpressionEliminator;)#1
soot.Singletons.soot_jimple_toolkits_scalar_CommonSubexpressionEliminator()Lsoot/jimple/toolkits/scalar/CommonSubexpressionEliminator;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_scalar_CommonSubexpressionEliminator()Lsoot/jimple/toolkits/scalar/CommonSubexpressionEliminator;#Get(Lsoot/jimple/toolkits/scalar/CommonSubexpressionEliminator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_CommonSubexpressionEliminator)#1
soot.Singletons.soot_jimple_toolkits_scalar_CommonSubexpressionEliminator()Lsoot/jimple/toolkits/scalar/CommonSubexpressionEliminator;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_scalar_CommonSubexpressionEliminator()Lsoot/jimple/toolkits/scalar/CommonSubexpressionEliminator;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_scalar_CommonSubexpressionEliminator()Lsoot/jimple/toolkits/scalar/CommonSubexpressionEliminator;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_scalar_CommonSubexpressionEliminator()Lsoot/jimple/toolkits/scalar/CommonSubexpressionEliminator;#New(Lsoot/jimple/toolkits/scalar/CommonSubexpressionEliminator;,0)#5
soot.Singletons.soot_jimple_toolkits_scalar_CommonSubexpressionEliminator()Lsoot/jimple/toolkits/scalar/CommonSubexpressionEliminator;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_scalar_CommonSubexpressionEliminator()Lsoot/jimple/toolkits/scalar/CommonSubexpressionEliminator;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_scalar_CommonSubexpressionEliminator()Lsoot/jimple/toolkits/scalar/CommonSubexpressionEliminator;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_scalar_CommonSubexpressionEliminator()Lsoot/jimple/toolkits/scalar/CommonSubexpressionEliminator;#Invoke(SPECIAL,Lsoot/jimple/toolkits/scalar/CommonSubexpressionEliminator;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.scalar.CommonSubexpressionEliminator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.scalar.CommonSubexpressionEliminator.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.jimple.toolkits.scalar.CommonSubexpressionEliminator.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_toolkits_scalar_CommonSubexpressionEliminator()Lsoot/jimple/toolkits/scalar/CommonSubexpressionEliminator;#Put(Lsoot/jimple/toolkits/scalar/CommonSubexpressionEliminator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_CommonSubexpressionEliminator)#10
soot.Singletons.soot_jimple_toolkits_scalar_CommonSubexpressionEliminator()Lsoot/jimple/toolkits/scalar/CommonSubexpressionEliminator;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_scalar_CommonSubexpressionEliminator()Lsoot/jimple/toolkits/scalar/CommonSubexpressionEliminator;#Get(Lsoot/jimple/toolkits/scalar/CommonSubexpressionEliminator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_CommonSubexpressionEliminator)#12
soot.Singletons.soot_jimple_toolkits_scalar_CommonSubexpressionEliminator()Lsoot/jimple/toolkits/scalar/CommonSubexpressionEliminator;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.scalar.CommonSubexpressionEliminator.v()Lsoot/jimple/toolkits/scalar/CommonSubexpressionEliminator;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#396
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#397
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#398
soot.PackManager.init()V#New(Lsoot/Transform;,0)#399
soot.PackManager.init()V#Dup(1,0)#400
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jop.bcm")#401
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/scalar/pre/BusyCodeMotion;,v,()Lsoot/jimple/toolkits/scalar/pre/BusyCodeMotion;)#402
soot.jimple.toolkits.scalar.pre.BusyCodeMotion.v()Lsoot/jimple/toolkits/scalar/pre/BusyCodeMotion;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.scalar.pre.BusyCodeMotion.v()Lsoot/jimple/toolkits/scalar/pre/BusyCodeMotion;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_scalar_pre_BusyCodeMotion,()Lsoot/jimple/toolkits/scalar/pre/BusyCodeMotion;)#1
soot.Singletons.soot_jimple_toolkits_scalar_pre_BusyCodeMotion()Lsoot/jimple/toolkits/scalar/pre/BusyCodeMotion;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_scalar_pre_BusyCodeMotion()Lsoot/jimple/toolkits/scalar/pre/BusyCodeMotion;#Get(Lsoot/jimple/toolkits/scalar/pre/BusyCodeMotion;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_pre_BusyCodeMotion)#1
soot.Singletons.soot_jimple_toolkits_scalar_pre_BusyCodeMotion()Lsoot/jimple/toolkits/scalar/pre/BusyCodeMotion;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_scalar_pre_BusyCodeMotion()Lsoot/jimple/toolkits/scalar/pre/BusyCodeMotion;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_scalar_pre_BusyCodeMotion()Lsoot/jimple/toolkits/scalar/pre/BusyCodeMotion;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_scalar_pre_BusyCodeMotion()Lsoot/jimple/toolkits/scalar/pre/BusyCodeMotion;#New(Lsoot/jimple/toolkits/scalar/pre/BusyCodeMotion;,0)#5
soot.Singletons.soot_jimple_toolkits_scalar_pre_BusyCodeMotion()Lsoot/jimple/toolkits/scalar/pre/BusyCodeMotion;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_scalar_pre_BusyCodeMotion()Lsoot/jimple/toolkits/scalar/pre/BusyCodeMotion;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_scalar_pre_BusyCodeMotion()Lsoot/jimple/toolkits/scalar/pre/BusyCodeMotion;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_scalar_pre_BusyCodeMotion()Lsoot/jimple/toolkits/scalar/pre/BusyCodeMotion;#Invoke(SPECIAL,Lsoot/jimple/toolkits/scalar/pre/BusyCodeMotion;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.scalar.pre.BusyCodeMotion.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.scalar.pre.BusyCodeMotion.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.jimple.toolkits.scalar.pre.BusyCodeMotion.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_toolkits_scalar_pre_BusyCodeMotion()Lsoot/jimple/toolkits/scalar/pre/BusyCodeMotion;#Put(Lsoot/jimple/toolkits/scalar/pre/BusyCodeMotion;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_pre_BusyCodeMotion)#10
soot.Singletons.soot_jimple_toolkits_scalar_pre_BusyCodeMotion()Lsoot/jimple/toolkits/scalar/pre/BusyCodeMotion;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_scalar_pre_BusyCodeMotion()Lsoot/jimple/toolkits/scalar/pre/BusyCodeMotion;#Get(Lsoot/jimple/toolkits/scalar/pre/BusyCodeMotion;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_pre_BusyCodeMotion)#12
soot.Singletons.soot_jimple_toolkits_scalar_pre_BusyCodeMotion()Lsoot/jimple/toolkits/scalar/pre/BusyCodeMotion;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.scalar.pre.BusyCodeMotion.v()Lsoot/jimple/toolkits/scalar/pre/BusyCodeMotion;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#403
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#404
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#405
soot.PackManager.init()V#New(Lsoot/Transform;,0)#406
soot.PackManager.init()V#Dup(1,0)#407
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jop.lcm")#408
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/scalar/pre/LazyCodeMotion;,v,()Lsoot/jimple/toolkits/scalar/pre/LazyCodeMotion;)#409
soot.jimple.toolkits.scalar.pre.LazyCodeMotion.v()Lsoot/jimple/toolkits/scalar/pre/LazyCodeMotion;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.scalar.pre.LazyCodeMotion.v()Lsoot/jimple/toolkits/scalar/pre/LazyCodeMotion;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_scalar_pre_LazyCodeMotion,()Lsoot/jimple/toolkits/scalar/pre/LazyCodeMotion;)#1
soot.Singletons.soot_jimple_toolkits_scalar_pre_LazyCodeMotion()Lsoot/jimple/toolkits/scalar/pre/LazyCodeMotion;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_scalar_pre_LazyCodeMotion()Lsoot/jimple/toolkits/scalar/pre/LazyCodeMotion;#Get(Lsoot/jimple/toolkits/scalar/pre/LazyCodeMotion;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_pre_LazyCodeMotion)#1
soot.Singletons.soot_jimple_toolkits_scalar_pre_LazyCodeMotion()Lsoot/jimple/toolkits/scalar/pre/LazyCodeMotion;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_scalar_pre_LazyCodeMotion()Lsoot/jimple/toolkits/scalar/pre/LazyCodeMotion;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_scalar_pre_LazyCodeMotion()Lsoot/jimple/toolkits/scalar/pre/LazyCodeMotion;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_scalar_pre_LazyCodeMotion()Lsoot/jimple/toolkits/scalar/pre/LazyCodeMotion;#New(Lsoot/jimple/toolkits/scalar/pre/LazyCodeMotion;,0)#5
soot.Singletons.soot_jimple_toolkits_scalar_pre_LazyCodeMotion()Lsoot/jimple/toolkits/scalar/pre/LazyCodeMotion;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_scalar_pre_LazyCodeMotion()Lsoot/jimple/toolkits/scalar/pre/LazyCodeMotion;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_scalar_pre_LazyCodeMotion()Lsoot/jimple/toolkits/scalar/pre/LazyCodeMotion;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_scalar_pre_LazyCodeMotion()Lsoot/jimple/toolkits/scalar/pre/LazyCodeMotion;#Invoke(SPECIAL,Lsoot/jimple/toolkits/scalar/pre/LazyCodeMotion;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.scalar.pre.LazyCodeMotion.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.scalar.pre.LazyCodeMotion.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.jimple.toolkits.scalar.pre.LazyCodeMotion.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_toolkits_scalar_pre_LazyCodeMotion()Lsoot/jimple/toolkits/scalar/pre/LazyCodeMotion;#Put(Lsoot/jimple/toolkits/scalar/pre/LazyCodeMotion;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_pre_LazyCodeMotion)#10
soot.Singletons.soot_jimple_toolkits_scalar_pre_LazyCodeMotion()Lsoot/jimple/toolkits/scalar/pre/LazyCodeMotion;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_scalar_pre_LazyCodeMotion()Lsoot/jimple/toolkits/scalar/pre/LazyCodeMotion;#Get(Lsoot/jimple/toolkits/scalar/pre/LazyCodeMotion;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_pre_LazyCodeMotion)#12
soot.Singletons.soot_jimple_toolkits_scalar_pre_LazyCodeMotion()Lsoot/jimple/toolkits/scalar/pre/LazyCodeMotion;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.scalar.pre.LazyCodeMotion.v()Lsoot/jimple/toolkits/scalar/pre/LazyCodeMotion;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#410
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#411
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#412
soot.PackManager.init()V#New(Lsoot/Transform;,0)#413
soot.PackManager.init()V#Dup(1,0)#414
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jop.cp")#415
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/scalar/CopyPropagator;,v,()Lsoot/jimple/toolkits/scalar/CopyPropagator;)#416
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#417
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#418
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#419
soot.PackManager.init()V#New(Lsoot/Transform;,0)#420
soot.PackManager.init()V#Dup(1,0)#421
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jop.cpf")#422
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/scalar/ConstantPropagatorAndFolder;,v,()Lsoot/jimple/toolkits/scalar/ConstantPropagatorAndFolder;)#423
soot.jimple.toolkits.scalar.ConstantPropagatorAndFolder.v()Lsoot/jimple/toolkits/scalar/ConstantPropagatorAndFolder;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.scalar.ConstantPropagatorAndFolder.v()Lsoot/jimple/toolkits/scalar/ConstantPropagatorAndFolder;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_scalar_ConstantPropagatorAndFolder,()Lsoot/jimple/toolkits/scalar/ConstantPropagatorAndFolder;)#1
soot.Singletons.soot_jimple_toolkits_scalar_ConstantPropagatorAndFolder()Lsoot/jimple/toolkits/scalar/ConstantPropagatorAndFolder;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_scalar_ConstantPropagatorAndFolder()Lsoot/jimple/toolkits/scalar/ConstantPropagatorAndFolder;#Get(Lsoot/jimple/toolkits/scalar/ConstantPropagatorAndFolder;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_ConstantPropagatorAndFolder)#1
soot.Singletons.soot_jimple_toolkits_scalar_ConstantPropagatorAndFolder()Lsoot/jimple/toolkits/scalar/ConstantPropagatorAndFolder;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_scalar_ConstantPropagatorAndFolder()Lsoot/jimple/toolkits/scalar/ConstantPropagatorAndFolder;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_scalar_ConstantPropagatorAndFolder()Lsoot/jimple/toolkits/scalar/ConstantPropagatorAndFolder;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_scalar_ConstantPropagatorAndFolder()Lsoot/jimple/toolkits/scalar/ConstantPropagatorAndFolder;#New(Lsoot/jimple/toolkits/scalar/ConstantPropagatorAndFolder;,0)#5
soot.Singletons.soot_jimple_toolkits_scalar_ConstantPropagatorAndFolder()Lsoot/jimple/toolkits/scalar/ConstantPropagatorAndFolder;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_scalar_ConstantPropagatorAndFolder()Lsoot/jimple/toolkits/scalar/ConstantPropagatorAndFolder;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_scalar_ConstantPropagatorAndFolder()Lsoot/jimple/toolkits/scalar/ConstantPropagatorAndFolder;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_scalar_ConstantPropagatorAndFolder()Lsoot/jimple/toolkits/scalar/ConstantPropagatorAndFolder;#Invoke(SPECIAL,Lsoot/jimple/toolkits/scalar/ConstantPropagatorAndFolder;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.scalar.ConstantPropagatorAndFolder.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.scalar.ConstantPropagatorAndFolder.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.jimple.toolkits.scalar.ConstantPropagatorAndFolder.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_toolkits_scalar_ConstantPropagatorAndFolder()Lsoot/jimple/toolkits/scalar/ConstantPropagatorAndFolder;#Put(Lsoot/jimple/toolkits/scalar/ConstantPropagatorAndFolder;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_ConstantPropagatorAndFolder)#10
soot.Singletons.soot_jimple_toolkits_scalar_ConstantPropagatorAndFolder()Lsoot/jimple/toolkits/scalar/ConstantPropagatorAndFolder;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_scalar_ConstantPropagatorAndFolder()Lsoot/jimple/toolkits/scalar/ConstantPropagatorAndFolder;#Get(Lsoot/jimple/toolkits/scalar/ConstantPropagatorAndFolder;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_ConstantPropagatorAndFolder)#12
soot.Singletons.soot_jimple_toolkits_scalar_ConstantPropagatorAndFolder()Lsoot/jimple/toolkits/scalar/ConstantPropagatorAndFolder;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.scalar.ConstantPropagatorAndFolder.v()Lsoot/jimple/toolkits/scalar/ConstantPropagatorAndFolder;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#424
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#425
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#426
soot.PackManager.init()V#New(Lsoot/Transform;,0)#427
soot.PackManager.init()V#Dup(1,0)#428
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jop.cbf")#429
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/scalar/ConditionalBranchFolder;,v,()Lsoot/jimple/toolkits/scalar/ConditionalBranchFolder;)#430
soot.jimple.toolkits.scalar.ConditionalBranchFolder.v()Lsoot/jimple/toolkits/scalar/ConditionalBranchFolder;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.scalar.ConditionalBranchFolder.v()Lsoot/jimple/toolkits/scalar/ConditionalBranchFolder;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_scalar_ConditionalBranchFolder,()Lsoot/jimple/toolkits/scalar/ConditionalBranchFolder;)#1
soot.Singletons.soot_jimple_toolkits_scalar_ConditionalBranchFolder()Lsoot/jimple/toolkits/scalar/ConditionalBranchFolder;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_scalar_ConditionalBranchFolder()Lsoot/jimple/toolkits/scalar/ConditionalBranchFolder;#Get(Lsoot/jimple/toolkits/scalar/ConditionalBranchFolder;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_ConditionalBranchFolder)#1
soot.Singletons.soot_jimple_toolkits_scalar_ConditionalBranchFolder()Lsoot/jimple/toolkits/scalar/ConditionalBranchFolder;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_scalar_ConditionalBranchFolder()Lsoot/jimple/toolkits/scalar/ConditionalBranchFolder;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_scalar_ConditionalBranchFolder()Lsoot/jimple/toolkits/scalar/ConditionalBranchFolder;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_scalar_ConditionalBranchFolder()Lsoot/jimple/toolkits/scalar/ConditionalBranchFolder;#New(Lsoot/jimple/toolkits/scalar/ConditionalBranchFolder;,0)#5
soot.Singletons.soot_jimple_toolkits_scalar_ConditionalBranchFolder()Lsoot/jimple/toolkits/scalar/ConditionalBranchFolder;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_scalar_ConditionalBranchFolder()Lsoot/jimple/toolkits/scalar/ConditionalBranchFolder;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_scalar_ConditionalBranchFolder()Lsoot/jimple/toolkits/scalar/ConditionalBranchFolder;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_scalar_ConditionalBranchFolder()Lsoot/jimple/toolkits/scalar/ConditionalBranchFolder;#Invoke(SPECIAL,Lsoot/jimple/toolkits/scalar/ConditionalBranchFolder;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.scalar.ConditionalBranchFolder.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.scalar.ConditionalBranchFolder.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.jimple.toolkits.scalar.ConditionalBranchFolder.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_toolkits_scalar_ConditionalBranchFolder()Lsoot/jimple/toolkits/scalar/ConditionalBranchFolder;#Put(Lsoot/jimple/toolkits/scalar/ConditionalBranchFolder;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_ConditionalBranchFolder)#10
soot.Singletons.soot_jimple_toolkits_scalar_ConditionalBranchFolder()Lsoot/jimple/toolkits/scalar/ConditionalBranchFolder;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_scalar_ConditionalBranchFolder()Lsoot/jimple/toolkits/scalar/ConditionalBranchFolder;#Get(Lsoot/jimple/toolkits/scalar/ConditionalBranchFolder;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_ConditionalBranchFolder)#12
soot.Singletons.soot_jimple_toolkits_scalar_ConditionalBranchFolder()Lsoot/jimple/toolkits/scalar/ConditionalBranchFolder;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.scalar.ConditionalBranchFolder.v()Lsoot/jimple/toolkits/scalar/ConditionalBranchFolder;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#431
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#432
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#433
soot.PackManager.init()V#New(Lsoot/Transform;,0)#434
soot.PackManager.init()V#Dup(1,0)#435
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jop.dae")#436
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/scalar/DeadAssignmentEliminator;,v,()Lsoot/jimple/toolkits/scalar/DeadAssignmentEliminator;)#437
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#438
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#439
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#440
soot.PackManager.init()V#New(Lsoot/Transform;,0)#441
soot.PackManager.init()V#Dup(1,0)#442
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jop.nce")#443
soot.PackManager.init()V#New(Lsoot/jimple/toolkits/annotation/nullcheck/NullCheckEliminator;,0)#444
soot.PackManager.init()V#Dup(1,0)#445
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/jimple/toolkits/annotation/nullcheck/NullCheckEliminator;,<init>,()V)#446
soot.jimple.toolkits.annotation.nullcheck.NullCheckEliminator.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.annotation.nullcheck.NullCheckEliminator.<init>()V#New(Lsoot/jimple/toolkits/annotation/nullcheck/NullCheckEliminator$AnalysisFactory;,0)#1
soot.jimple.toolkits.annotation.nullcheck.NullCheckEliminator.<init>()V#Dup(1,0)#2
soot.jimple.toolkits.annotation.nullcheck.NullCheckEliminator.<init>()V#Invoke(SPECIAL,Lsoot/jimple/toolkits/annotation/nullcheck/NullCheckEliminator$AnalysisFactory;,<init>,()V)#3
soot.jimple.toolkits.annotation.nullcheck.NullCheckEliminator$AnalysisFactory.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.annotation.nullcheck.NullCheckEliminator$AnalysisFactory.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.jimple.toolkits.annotation.nullcheck.NullCheckEliminator$AnalysisFactory.<init>()V#Return(V)#2
soot.jimple.toolkits.annotation.nullcheck.NullCheckEliminator.<init>()V#Invoke(SPECIAL,Lsoot/jimple/toolkits/annotation/nullcheck/NullCheckEliminator;,<init>,(Lsoot/jimple/toolkits/annotation/nullcheck/NullCheckEliminator$AnalysisFactory;)V)#4
soot.jimple.toolkits.annotation.nullcheck.NullCheckEliminator.<init>(Lsoot/jimple/toolkits/annotation/nullcheck/NullCheckEliminator$AnalysisFactory;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.annotation.nullcheck.NullCheckEliminator.<init>(Lsoot/jimple/toolkits/annotation/nullcheck/NullCheckEliminator$AnalysisFactory;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.jimple.toolkits.annotation.nullcheck.NullCheckEliminator.<init>(Lsoot/jimple/toolkits/annotation/nullcheck/NullCheckEliminator$AnalysisFactory;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.toolkits.annotation.nullcheck.NullCheckEliminator.<init>(Lsoot/jimple/toolkits/annotation/nullcheck/NullCheckEliminator$AnalysisFactory;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.jimple.toolkits.annotation.nullcheck.NullCheckEliminator.<init>(Lsoot/jimple/toolkits/annotation/nullcheck/NullCheckEliminator$AnalysisFactory;)V#Put(Lsoot/jimple/toolkits/annotation/nullcheck/NullCheckEliminator$AnalysisFactory;,NONSTATIC,Lsoot/jimple/toolkits/annotation/nullcheck/NullCheckEliminator;,analysisFactory)#4
soot.jimple.toolkits.annotation.nullcheck.NullCheckEliminator.<init>(Lsoot/jimple/toolkits/annotation/nullcheck/NullCheckEliminator$AnalysisFactory;)V#Return(V)#5
soot.jimple.toolkits.annotation.nullcheck.NullCheckEliminator.<init>()V#Return(V)#5
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#447
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#448
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#449
soot.PackManager.init()V#New(Lsoot/Transform;,0)#450
soot.PackManager.init()V#Dup(1,0)#451
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jop.uce1")#452
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;,v,()Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;)#453
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#454
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#455
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#456
soot.PackManager.init()V#New(Lsoot/Transform;,0)#457
soot.PackManager.init()V#Dup(1,0)#458
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jop.ubf1")#459
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/scalar/UnconditionalBranchFolder;,v,()Lsoot/jimple/toolkits/scalar/UnconditionalBranchFolder;)#460
soot.jimple.toolkits.scalar.UnconditionalBranchFolder.v()Lsoot/jimple/toolkits/scalar/UnconditionalBranchFolder;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.scalar.UnconditionalBranchFolder.v()Lsoot/jimple/toolkits/scalar/UnconditionalBranchFolder;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_scalar_UnconditionalBranchFolder,()Lsoot/jimple/toolkits/scalar/UnconditionalBranchFolder;)#1
soot.Singletons.soot_jimple_toolkits_scalar_UnconditionalBranchFolder()Lsoot/jimple/toolkits/scalar/UnconditionalBranchFolder;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_scalar_UnconditionalBranchFolder()Lsoot/jimple/toolkits/scalar/UnconditionalBranchFolder;#Get(Lsoot/jimple/toolkits/scalar/UnconditionalBranchFolder;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_UnconditionalBranchFolder)#1
soot.Singletons.soot_jimple_toolkits_scalar_UnconditionalBranchFolder()Lsoot/jimple/toolkits/scalar/UnconditionalBranchFolder;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_scalar_UnconditionalBranchFolder()Lsoot/jimple/toolkits/scalar/UnconditionalBranchFolder;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_scalar_UnconditionalBranchFolder()Lsoot/jimple/toolkits/scalar/UnconditionalBranchFolder;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_scalar_UnconditionalBranchFolder()Lsoot/jimple/toolkits/scalar/UnconditionalBranchFolder;#New(Lsoot/jimple/toolkits/scalar/UnconditionalBranchFolder;,0)#5
soot.Singletons.soot_jimple_toolkits_scalar_UnconditionalBranchFolder()Lsoot/jimple/toolkits/scalar/UnconditionalBranchFolder;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_scalar_UnconditionalBranchFolder()Lsoot/jimple/toolkits/scalar/UnconditionalBranchFolder;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_scalar_UnconditionalBranchFolder()Lsoot/jimple/toolkits/scalar/UnconditionalBranchFolder;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_scalar_UnconditionalBranchFolder()Lsoot/jimple/toolkits/scalar/UnconditionalBranchFolder;#Invoke(SPECIAL,Lsoot/jimple/toolkits/scalar/UnconditionalBranchFolder;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.scalar.UnconditionalBranchFolder.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.scalar.UnconditionalBranchFolder.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.jimple.toolkits.scalar.UnconditionalBranchFolder.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_toolkits_scalar_UnconditionalBranchFolder()Lsoot/jimple/toolkits/scalar/UnconditionalBranchFolder;#Put(Lsoot/jimple/toolkits/scalar/UnconditionalBranchFolder;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_UnconditionalBranchFolder)#10
soot.Singletons.soot_jimple_toolkits_scalar_UnconditionalBranchFolder()Lsoot/jimple/toolkits/scalar/UnconditionalBranchFolder;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_scalar_UnconditionalBranchFolder()Lsoot/jimple/toolkits/scalar/UnconditionalBranchFolder;#Get(Lsoot/jimple/toolkits/scalar/UnconditionalBranchFolder;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_scalar_UnconditionalBranchFolder)#12
soot.Singletons.soot_jimple_toolkits_scalar_UnconditionalBranchFolder()Lsoot/jimple/toolkits/scalar/UnconditionalBranchFolder;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.scalar.UnconditionalBranchFolder.v()Lsoot/jimple/toolkits/scalar/UnconditionalBranchFolder;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#461
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#462
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#463
soot.PackManager.init()V#New(Lsoot/Transform;,0)#464
soot.PackManager.init()V#Dup(1,0)#465
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jop.uce2")#466
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;,v,()Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;)#467
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#468
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#469
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#470
soot.PackManager.init()V#New(Lsoot/Transform;,0)#471
soot.PackManager.init()V#Dup(1,0)#472
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jop.ubf2")#473
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/scalar/UnconditionalBranchFolder;,v,()Lsoot/jimple/toolkits/scalar/UnconditionalBranchFolder;)#474
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#475
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#476
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#477
soot.PackManager.init()V#New(Lsoot/Transform;,0)#478
soot.PackManager.init()V#Dup(1,0)#479
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jop.ule")#480
soot.PackManager.init()V#Invoke(STATIC,Lsoot/toolkits/scalar/UnusedLocalEliminator;,v,()Lsoot/toolkits/scalar/UnusedLocalEliminator;)#481
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#482
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#483
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,0)#484
soot.PackManager.init()V#New(Lsoot/BodyPack;,0)#485
soot.PackManager.init()V#Dup(1,0)#486
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jap")#487
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/BodyPack;,<init>,(Ljava/lang/String;)V)#488
soot.PackManager.init()V#Dup(1,0)#489
soot.PackManager.init()V#LocalStore(Ljava/lang/Object;,1)#490
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/PackManager;,addPack,(Lsoot/Pack;)V)#491
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#492
soot.PackManager.init()V#New(Lsoot/Transform;,0)#493
soot.PackManager.init()V#Dup(1,0)#494
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jap.npc")#495
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerChecker;,v,()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerChecker;)#496
soot.jimple.toolkits.annotation.nullcheck.NullPointerChecker.v()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerChecker;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.annotation.nullcheck.NullPointerChecker.v()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerChecker;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_annotation_nullcheck_NullPointerChecker,()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerChecker;)#1
soot.Singletons.soot_jimple_toolkits_annotation_nullcheck_NullPointerChecker()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerChecker;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_annotation_nullcheck_NullPointerChecker()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerChecker;#Get(Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerChecker;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_nullcheck_NullPointerChecker)#1
soot.Singletons.soot_jimple_toolkits_annotation_nullcheck_NullPointerChecker()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerChecker;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_annotation_nullcheck_NullPointerChecker()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerChecker;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_annotation_nullcheck_NullPointerChecker()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerChecker;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_annotation_nullcheck_NullPointerChecker()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerChecker;#New(Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerChecker;,0)#5
soot.Singletons.soot_jimple_toolkits_annotation_nullcheck_NullPointerChecker()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerChecker;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_annotation_nullcheck_NullPointerChecker()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerChecker;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_annotation_nullcheck_NullPointerChecker()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerChecker;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_annotation_nullcheck_NullPointerChecker()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerChecker;#Invoke(SPECIAL,Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerChecker;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.annotation.nullcheck.NullPointerChecker.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.annotation.nullcheck.NullPointerChecker.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.jimple.toolkits.annotation.nullcheck.NullPointerChecker.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.toolkits.annotation.nullcheck.NullPointerChecker.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#3
soot.jimple.toolkits.annotation.nullcheck.NullPointerChecker.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerChecker;,isProfiling)#4
soot.jimple.toolkits.annotation.nullcheck.NullPointerChecker.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.jimple.toolkits.annotation.nullcheck.NullPointerChecker.<init>(Lsoot/Singletons$Global;)V#Constant(I,1)#6
soot.jimple.toolkits.annotation.nullcheck.NullPointerChecker.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerChecker;,enableOther)#7
soot.jimple.toolkits.annotation.nullcheck.NullPointerChecker.<init>(Lsoot/Singletons$Global;)V#Return(V)#8
soot.Singletons.soot_jimple_toolkits_annotation_nullcheck_NullPointerChecker()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerChecker;#Put(Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerChecker;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_nullcheck_NullPointerChecker)#10
soot.Singletons.soot_jimple_toolkits_annotation_nullcheck_NullPointerChecker()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerChecker;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_annotation_nullcheck_NullPointerChecker()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerChecker;#Get(Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerChecker;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_nullcheck_NullPointerChecker)#12
soot.Singletons.soot_jimple_toolkits_annotation_nullcheck_NullPointerChecker()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerChecker;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.annotation.nullcheck.NullPointerChecker.v()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerChecker;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#497
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#498
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#499
soot.PackManager.init()V#New(Lsoot/Transform;,0)#500
soot.PackManager.init()V#Dup(1,0)#501
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jap.npcolorer")#502
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerColorer;,v,()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerColorer;)#503
soot.jimple.toolkits.annotation.nullcheck.NullPointerColorer.v()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerColorer;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.annotation.nullcheck.NullPointerColorer.v()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerColorer;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_annotation_nullcheck_NullPointerColorer,()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerColorer;)#1
soot.Singletons.soot_jimple_toolkits_annotation_nullcheck_NullPointerColorer()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerColorer;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_annotation_nullcheck_NullPointerColorer()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerColorer;#Get(Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerColorer;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_nullcheck_NullPointerColorer)#1
soot.Singletons.soot_jimple_toolkits_annotation_nullcheck_NullPointerColorer()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerColorer;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_annotation_nullcheck_NullPointerColorer()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerColorer;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_annotation_nullcheck_NullPointerColorer()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerColorer;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_annotation_nullcheck_NullPointerColorer()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerColorer;#New(Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerColorer;,0)#5
soot.Singletons.soot_jimple_toolkits_annotation_nullcheck_NullPointerColorer()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerColorer;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_annotation_nullcheck_NullPointerColorer()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerColorer;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_annotation_nullcheck_NullPointerColorer()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerColorer;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_annotation_nullcheck_NullPointerColorer()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerColorer;#Invoke(SPECIAL,Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerColorer;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.annotation.nullcheck.NullPointerColorer.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.annotation.nullcheck.NullPointerColorer.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.jimple.toolkits.annotation.nullcheck.NullPointerColorer.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_toolkits_annotation_nullcheck_NullPointerColorer()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerColorer;#Put(Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerColorer;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_nullcheck_NullPointerColorer)#10
soot.Singletons.soot_jimple_toolkits_annotation_nullcheck_NullPointerColorer()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerColorer;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_annotation_nullcheck_NullPointerColorer()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerColorer;#Get(Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerColorer;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_nullcheck_NullPointerColorer)#12
soot.Singletons.soot_jimple_toolkits_annotation_nullcheck_NullPointerColorer()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerColorer;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.annotation.nullcheck.NullPointerColorer.v()Lsoot/jimple/toolkits/annotation/nullcheck/NullPointerColorer;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#504
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#505
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#506
soot.PackManager.init()V#New(Lsoot/Transform;,0)#507
soot.PackManager.init()V#Dup(1,0)#508
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jap.abc")#509
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/annotation/arraycheck/ArrayBoundsChecker;,v,()Lsoot/jimple/toolkits/annotation/arraycheck/ArrayBoundsChecker;)#510
soot.jimple.toolkits.annotation.arraycheck.ArrayBoundsChecker.v()Lsoot/jimple/toolkits/annotation/arraycheck/ArrayBoundsChecker;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.annotation.arraycheck.ArrayBoundsChecker.v()Lsoot/jimple/toolkits/annotation/arraycheck/ArrayBoundsChecker;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_annotation_arraycheck_ArrayBoundsChecker,()Lsoot/jimple/toolkits/annotation/arraycheck/ArrayBoundsChecker;)#1
soot.Singletons.soot_jimple_toolkits_annotation_arraycheck_ArrayBoundsChecker()Lsoot/jimple/toolkits/annotation/arraycheck/ArrayBoundsChecker;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_annotation_arraycheck_ArrayBoundsChecker()Lsoot/jimple/toolkits/annotation/arraycheck/ArrayBoundsChecker;#Get(Lsoot/jimple/toolkits/annotation/arraycheck/ArrayBoundsChecker;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_arraycheck_ArrayBoundsChecker)#1
soot.Singletons.soot_jimple_toolkits_annotation_arraycheck_ArrayBoundsChecker()Lsoot/jimple/toolkits/annotation/arraycheck/ArrayBoundsChecker;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_annotation_arraycheck_ArrayBoundsChecker()Lsoot/jimple/toolkits/annotation/arraycheck/ArrayBoundsChecker;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_annotation_arraycheck_ArrayBoundsChecker()Lsoot/jimple/toolkits/annotation/arraycheck/ArrayBoundsChecker;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_annotation_arraycheck_ArrayBoundsChecker()Lsoot/jimple/toolkits/annotation/arraycheck/ArrayBoundsChecker;#New(Lsoot/jimple/toolkits/annotation/arraycheck/ArrayBoundsChecker;,0)#5
soot.Singletons.soot_jimple_toolkits_annotation_arraycheck_ArrayBoundsChecker()Lsoot/jimple/toolkits/annotation/arraycheck/ArrayBoundsChecker;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_annotation_arraycheck_ArrayBoundsChecker()Lsoot/jimple/toolkits/annotation/arraycheck/ArrayBoundsChecker;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_annotation_arraycheck_ArrayBoundsChecker()Lsoot/jimple/toolkits/annotation/arraycheck/ArrayBoundsChecker;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_annotation_arraycheck_ArrayBoundsChecker()Lsoot/jimple/toolkits/annotation/arraycheck/ArrayBoundsChecker;#Invoke(SPECIAL,Lsoot/jimple/toolkits/annotation/arraycheck/ArrayBoundsChecker;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.annotation.arraycheck.ArrayBoundsChecker.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.annotation.arraycheck.ArrayBoundsChecker.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.jimple.toolkits.annotation.arraycheck.ArrayBoundsChecker.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.toolkits.annotation.arraycheck.ArrayBoundsChecker.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#3
soot.jimple.toolkits.annotation.arraycheck.ArrayBoundsChecker.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/jimple/toolkits/annotation/arraycheck/ArrayBoundsChecker;,takeClassField)#4
soot.jimple.toolkits.annotation.arraycheck.ArrayBoundsChecker.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.jimple.toolkits.annotation.arraycheck.ArrayBoundsChecker.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#6
soot.jimple.toolkits.annotation.arraycheck.ArrayBoundsChecker.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/jimple/toolkits/annotation/arraycheck/ArrayBoundsChecker;,takeFieldRef)#7
soot.jimple.toolkits.annotation.arraycheck.ArrayBoundsChecker.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.jimple.toolkits.annotation.arraycheck.ArrayBoundsChecker.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#9
soot.jimple.toolkits.annotation.arraycheck.ArrayBoundsChecker.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/jimple/toolkits/annotation/arraycheck/ArrayBoundsChecker;,takeArrayRef)#10
soot.jimple.toolkits.annotation.arraycheck.ArrayBoundsChecker.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.jimple.toolkits.annotation.arraycheck.ArrayBoundsChecker.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#12
soot.jimple.toolkits.annotation.arraycheck.ArrayBoundsChecker.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/jimple/toolkits/annotation/arraycheck/ArrayBoundsChecker;,takeCSE)#13
soot.jimple.toolkits.annotation.arraycheck.ArrayBoundsChecker.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#14
soot.jimple.toolkits.annotation.arraycheck.ArrayBoundsChecker.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#15
soot.jimple.toolkits.annotation.arraycheck.ArrayBoundsChecker.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/jimple/toolkits/annotation/arraycheck/ArrayBoundsChecker;,takeRectArray)#16
soot.jimple.toolkits.annotation.arraycheck.ArrayBoundsChecker.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#17
soot.jimple.toolkits.annotation.arraycheck.ArrayBoundsChecker.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#18
soot.jimple.toolkits.annotation.arraycheck.ArrayBoundsChecker.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/jimple/toolkits/annotation/arraycheck/ArrayBoundsChecker;,addColorTags)#19
soot.jimple.toolkits.annotation.arraycheck.ArrayBoundsChecker.<init>(Lsoot/Singletons$Global;)V#Return(V)#20
soot.Singletons.soot_jimple_toolkits_annotation_arraycheck_ArrayBoundsChecker()Lsoot/jimple/toolkits/annotation/arraycheck/ArrayBoundsChecker;#Put(Lsoot/jimple/toolkits/annotation/arraycheck/ArrayBoundsChecker;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_arraycheck_ArrayBoundsChecker)#10
soot.Singletons.soot_jimple_toolkits_annotation_arraycheck_ArrayBoundsChecker()Lsoot/jimple/toolkits/annotation/arraycheck/ArrayBoundsChecker;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_annotation_arraycheck_ArrayBoundsChecker()Lsoot/jimple/toolkits/annotation/arraycheck/ArrayBoundsChecker;#Get(Lsoot/jimple/toolkits/annotation/arraycheck/ArrayBoundsChecker;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_arraycheck_ArrayBoundsChecker)#12
soot.Singletons.soot_jimple_toolkits_annotation_arraycheck_ArrayBoundsChecker()Lsoot/jimple/toolkits/annotation/arraycheck/ArrayBoundsChecker;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.annotation.arraycheck.ArrayBoundsChecker.v()Lsoot/jimple/toolkits/annotation/arraycheck/ArrayBoundsChecker;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#511
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#512
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#513
soot.PackManager.init()V#New(Lsoot/Transform;,0)#514
soot.PackManager.init()V#Dup(1,0)#515
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jap.profiling")#516
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/annotation/profiling/ProfilingGenerator;,v,()Lsoot/jimple/toolkits/annotation/profiling/ProfilingGenerator;)#517
soot.jimple.toolkits.annotation.profiling.ProfilingGenerator.v()Lsoot/jimple/toolkits/annotation/profiling/ProfilingGenerator;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.annotation.profiling.ProfilingGenerator.v()Lsoot/jimple/toolkits/annotation/profiling/ProfilingGenerator;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_annotation_profiling_ProfilingGenerator,()Lsoot/jimple/toolkits/annotation/profiling/ProfilingGenerator;)#1
soot.Singletons.soot_jimple_toolkits_annotation_profiling_ProfilingGenerator()Lsoot/jimple/toolkits/annotation/profiling/ProfilingGenerator;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_annotation_profiling_ProfilingGenerator()Lsoot/jimple/toolkits/annotation/profiling/ProfilingGenerator;#Get(Lsoot/jimple/toolkits/annotation/profiling/ProfilingGenerator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_profiling_ProfilingGenerator)#1
soot.Singletons.soot_jimple_toolkits_annotation_profiling_ProfilingGenerator()Lsoot/jimple/toolkits/annotation/profiling/ProfilingGenerator;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_annotation_profiling_ProfilingGenerator()Lsoot/jimple/toolkits/annotation/profiling/ProfilingGenerator;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_annotation_profiling_ProfilingGenerator()Lsoot/jimple/toolkits/annotation/profiling/ProfilingGenerator;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_annotation_profiling_ProfilingGenerator()Lsoot/jimple/toolkits/annotation/profiling/ProfilingGenerator;#New(Lsoot/jimple/toolkits/annotation/profiling/ProfilingGenerator;,0)#5
soot.Singletons.soot_jimple_toolkits_annotation_profiling_ProfilingGenerator()Lsoot/jimple/toolkits/annotation/profiling/ProfilingGenerator;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_annotation_profiling_ProfilingGenerator()Lsoot/jimple/toolkits/annotation/profiling/ProfilingGenerator;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_annotation_profiling_ProfilingGenerator()Lsoot/jimple/toolkits/annotation/profiling/ProfilingGenerator;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_annotation_profiling_ProfilingGenerator()Lsoot/jimple/toolkits/annotation/profiling/ProfilingGenerator;#Invoke(SPECIAL,Lsoot/jimple/toolkits/annotation/profiling/ProfilingGenerator;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.annotation.profiling.ProfilingGenerator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.annotation.profiling.ProfilingGenerator.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.jimple.toolkits.annotation.profiling.ProfilingGenerator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.toolkits.annotation.profiling.ProfilingGenerator.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"void main(java.lang.String[])")#3
soot.jimple.toolkits.annotation.profiling.ProfilingGenerator.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/jimple/toolkits/annotation/profiling/ProfilingGenerator;,mainSignature)#4
soot.jimple.toolkits.annotation.profiling.ProfilingGenerator.<init>(Lsoot/Singletons$Global;)V#Return(V)#5
soot.Singletons.soot_jimple_toolkits_annotation_profiling_ProfilingGenerator()Lsoot/jimple/toolkits/annotation/profiling/ProfilingGenerator;#Put(Lsoot/jimple/toolkits/annotation/profiling/ProfilingGenerator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_profiling_ProfilingGenerator)#10
soot.Singletons.soot_jimple_toolkits_annotation_profiling_ProfilingGenerator()Lsoot/jimple/toolkits/annotation/profiling/ProfilingGenerator;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_annotation_profiling_ProfilingGenerator()Lsoot/jimple/toolkits/annotation/profiling/ProfilingGenerator;#Get(Lsoot/jimple/toolkits/annotation/profiling/ProfilingGenerator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_profiling_ProfilingGenerator)#12
soot.Singletons.soot_jimple_toolkits_annotation_profiling_ProfilingGenerator()Lsoot/jimple/toolkits/annotation/profiling/ProfilingGenerator;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.annotation.profiling.ProfilingGenerator.v()Lsoot/jimple/toolkits/annotation/profiling/ProfilingGenerator;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#518
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#519
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#520
soot.PackManager.init()V#New(Lsoot/Transform;,0)#521
soot.PackManager.init()V#Dup(1,0)#522
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jap.sea")#523
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/pointer/SideEffectTagger;,v,()Lsoot/jimple/toolkits/pointer/SideEffectTagger;)#524
soot.jimple.toolkits.pointer.SideEffectTagger.v()Lsoot/jimple/toolkits/pointer/SideEffectTagger;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.pointer.SideEffectTagger.v()Lsoot/jimple/toolkits/pointer/SideEffectTagger;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_pointer_SideEffectTagger,()Lsoot/jimple/toolkits/pointer/SideEffectTagger;)#1
soot.Singletons.soot_jimple_toolkits_pointer_SideEffectTagger()Lsoot/jimple/toolkits/pointer/SideEffectTagger;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_pointer_SideEffectTagger()Lsoot/jimple/toolkits/pointer/SideEffectTagger;#Get(Lsoot/jimple/toolkits/pointer/SideEffectTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_pointer_SideEffectTagger)#1
soot.Singletons.soot_jimple_toolkits_pointer_SideEffectTagger()Lsoot/jimple/toolkits/pointer/SideEffectTagger;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_pointer_SideEffectTagger()Lsoot/jimple/toolkits/pointer/SideEffectTagger;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_pointer_SideEffectTagger()Lsoot/jimple/toolkits/pointer/SideEffectTagger;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_pointer_SideEffectTagger()Lsoot/jimple/toolkits/pointer/SideEffectTagger;#New(Lsoot/jimple/toolkits/pointer/SideEffectTagger;,0)#5
soot.Singletons.soot_jimple_toolkits_pointer_SideEffectTagger()Lsoot/jimple/toolkits/pointer/SideEffectTagger;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_pointer_SideEffectTagger()Lsoot/jimple/toolkits/pointer/SideEffectTagger;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_pointer_SideEffectTagger()Lsoot/jimple/toolkits/pointer/SideEffectTagger;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_pointer_SideEffectTagger()Lsoot/jimple/toolkits/pointer/SideEffectTagger;#Invoke(SPECIAL,Lsoot/jimple/toolkits/pointer/SideEffectTagger;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.pointer.SideEffectTagger.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.pointer.SideEffectTagger.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.jimple.toolkits.pointer.SideEffectTagger.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.toolkits.pointer.SideEffectTagger.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#3
soot.jimple.toolkits.pointer.SideEffectTagger.<init>(Lsoot/Singletons$Global;)V#Put(I,NONSTATIC,Lsoot/jimple/toolkits/pointer/SideEffectTagger;,numRWs)#4
soot.jimple.toolkits.pointer.SideEffectTagger.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.jimple.toolkits.pointer.SideEffectTagger.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#6
soot.jimple.toolkits.pointer.SideEffectTagger.<init>(Lsoot/Singletons$Global;)V#Put(I,NONSTATIC,Lsoot/jimple/toolkits/pointer/SideEffectTagger;,numWRs)#7
soot.jimple.toolkits.pointer.SideEffectTagger.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.jimple.toolkits.pointer.SideEffectTagger.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#9
soot.jimple.toolkits.pointer.SideEffectTagger.<init>(Lsoot/Singletons$Global;)V#Put(I,NONSTATIC,Lsoot/jimple/toolkits/pointer/SideEffectTagger;,numRRs)#10
soot.jimple.toolkits.pointer.SideEffectTagger.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.jimple.toolkits.pointer.SideEffectTagger.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#12
soot.jimple.toolkits.pointer.SideEffectTagger.<init>(Lsoot/Singletons$Global;)V#Put(I,NONSTATIC,Lsoot/jimple/toolkits/pointer/SideEffectTagger;,numWWs)#13
soot.jimple.toolkits.pointer.SideEffectTagger.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#14
soot.jimple.toolkits.pointer.SideEffectTagger.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#15
soot.jimple.toolkits.pointer.SideEffectTagger.<init>(Lsoot/Singletons$Global;)V#Put(I,NONSTATIC,Lsoot/jimple/toolkits/pointer/SideEffectTagger;,numNatives)#16
soot.jimple.toolkits.pointer.SideEffectTagger.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#17
soot.jimple.toolkits.pointer.SideEffectTagger.<init>(Lsoot/Singletons$Global;)V#Constant(L;,null)#18
soot.jimple.toolkits.pointer.SideEffectTagger.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/util/Date;,NONSTATIC,Lsoot/jimple/toolkits/pointer/SideEffectTagger;,startTime)#19
soot.jimple.toolkits.pointer.SideEffectTagger.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#20
soot.jimple.toolkits.pointer.SideEffectTagger.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#21
soot.jimple.toolkits.pointer.SideEffectTagger.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/jimple/toolkits/pointer/SideEffectTagger;,optionNaive)#22
soot.jimple.toolkits.pointer.SideEffectTagger.<init>(Lsoot/Singletons$Global;)V#Return(V)#23
soot.Singletons.soot_jimple_toolkits_pointer_SideEffectTagger()Lsoot/jimple/toolkits/pointer/SideEffectTagger;#Put(Lsoot/jimple/toolkits/pointer/SideEffectTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_pointer_SideEffectTagger)#10
soot.Singletons.soot_jimple_toolkits_pointer_SideEffectTagger()Lsoot/jimple/toolkits/pointer/SideEffectTagger;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_pointer_SideEffectTagger()Lsoot/jimple/toolkits/pointer/SideEffectTagger;#Get(Lsoot/jimple/toolkits/pointer/SideEffectTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_pointer_SideEffectTagger)#12
soot.Singletons.soot_jimple_toolkits_pointer_SideEffectTagger()Lsoot/jimple/toolkits/pointer/SideEffectTagger;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.pointer.SideEffectTagger.v()Lsoot/jimple/toolkits/pointer/SideEffectTagger;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#525
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#526
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#527
soot.PackManager.init()V#New(Lsoot/Transform;,0)#528
soot.PackManager.init()V#Dup(1,0)#529
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jap.fieldrw")#530
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/spark/fieldrw/FieldTagger;,v,()Lsoot/jimple/spark/fieldrw/FieldTagger;)#531
soot.jimple.spark.fieldrw.FieldTagger.v()Lsoot/jimple/spark/fieldrw/FieldTagger;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.spark.fieldrw.FieldTagger.v()Lsoot/jimple/spark/fieldrw/FieldTagger;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_spark_fieldrw_FieldTagger,()Lsoot/jimple/spark/fieldrw/FieldTagger;)#1
soot.Singletons.soot_jimple_spark_fieldrw_FieldTagger()Lsoot/jimple/spark/fieldrw/FieldTagger;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_spark_fieldrw_FieldTagger()Lsoot/jimple/spark/fieldrw/FieldTagger;#Get(Lsoot/jimple/spark/fieldrw/FieldTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_spark_fieldrw_FieldTagger)#1
soot.Singletons.soot_jimple_spark_fieldrw_FieldTagger()Lsoot/jimple/spark/fieldrw/FieldTagger;#Constant(L;,null)#2
soot.Singletons.soot_jimple_spark_fieldrw_FieldTagger()Lsoot/jimple/spark/fieldrw/FieldTagger;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_spark_fieldrw_FieldTagger()Lsoot/jimple/spark/fieldrw/FieldTagger;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_spark_fieldrw_FieldTagger()Lsoot/jimple/spark/fieldrw/FieldTagger;#New(Lsoot/jimple/spark/fieldrw/FieldTagger;,0)#5
soot.Singletons.soot_jimple_spark_fieldrw_FieldTagger()Lsoot/jimple/spark/fieldrw/FieldTagger;#Dup(1,0)#6
soot.Singletons.soot_jimple_spark_fieldrw_FieldTagger()Lsoot/jimple/spark/fieldrw/FieldTagger;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_spark_fieldrw_FieldTagger()Lsoot/jimple/spark/fieldrw/FieldTagger;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_spark_fieldrw_FieldTagger()Lsoot/jimple/spark/fieldrw/FieldTagger;#Invoke(SPECIAL,Lsoot/jimple/spark/fieldrw/FieldTagger;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.spark.fieldrw.FieldTagger.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.spark.fieldrw.FieldTagger.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.jimple.spark.fieldrw.FieldTagger.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.spark.fieldrw.FieldTagger.<init>(Lsoot/Singletons$Global;)V#New(Ljava/util/HashSet;,0)#3
soot.jimple.spark.fieldrw.FieldTagger.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#4
soot.jimple.spark.fieldrw.FieldTagger.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#5
soot.jimple.spark.fieldrw.FieldTagger.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/util/HashSet;,NONSTATIC,Lsoot/jimple/spark/fieldrw/FieldTagger;,processedMethods)#6
soot.jimple.spark.fieldrw.FieldTagger.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#7
soot.jimple.spark.fieldrw.FieldTagger.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/util/HashMultiMap;,0)#8
soot.jimple.spark.fieldrw.FieldTagger.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#9
soot.jimple.spark.fieldrw.FieldTagger.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/util/HashMultiMap;,<init>,()V)#10
soot.util.HashMultiMap.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.HashMultiMap.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.util.HashMultiMap.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
soot.util.HashMultiMap.<init>()V#New(Ljava/util/HashMap;,0)#3
soot.util.HashMultiMap.<init>()V#Dup(1,0)#4
soot.util.HashMultiMap.<init>()V#Constant(I,0)#5
soot.util.HashMultiMap.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(I)V)#6
soot.util.HashMultiMap.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/util/HashMultiMap;,m)#7
soot.util.HashMultiMap.<init>()V#Return(V)#8
soot.jimple.spark.fieldrw.FieldTagger.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/util/HashMultiMap;,NONSTATIC,Lsoot/jimple/spark/fieldrw/FieldTagger;,methodToWrite)#11
soot.jimple.spark.fieldrw.FieldTagger.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#12
soot.jimple.spark.fieldrw.FieldTagger.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/util/HashMultiMap;,0)#13
soot.jimple.spark.fieldrw.FieldTagger.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#14
soot.jimple.spark.fieldrw.FieldTagger.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/util/HashMultiMap;,<init>,()V)#15
soot.jimple.spark.fieldrw.FieldTagger.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/util/HashMultiMap;,NONSTATIC,Lsoot/jimple/spark/fieldrw/FieldTagger;,methodToRead)#16
soot.jimple.spark.fieldrw.FieldTagger.<init>(Lsoot/Singletons$Global;)V#Return(V)#17
soot.Singletons.soot_jimple_spark_fieldrw_FieldTagger()Lsoot/jimple/spark/fieldrw/FieldTagger;#Put(Lsoot/jimple/spark/fieldrw/FieldTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_spark_fieldrw_FieldTagger)#10
soot.Singletons.soot_jimple_spark_fieldrw_FieldTagger()Lsoot/jimple/spark/fieldrw/FieldTagger;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_spark_fieldrw_FieldTagger()Lsoot/jimple/spark/fieldrw/FieldTagger;#Get(Lsoot/jimple/spark/fieldrw/FieldTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_spark_fieldrw_FieldTagger)#12
soot.Singletons.soot_jimple_spark_fieldrw_FieldTagger()Lsoot/jimple/spark/fieldrw/FieldTagger;#Return(Ljava/lang/Object;)#13
soot.jimple.spark.fieldrw.FieldTagger.v()Lsoot/jimple/spark/fieldrw/FieldTagger;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#532
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#533
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#534
soot.PackManager.init()V#New(Lsoot/Transform;,0)#535
soot.PackManager.init()V#Dup(1,0)#536
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jap.cgtagger")#537
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/annotation/callgraph/CallGraphTagger;,v,()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphTagger;)#538
soot.jimple.toolkits.annotation.callgraph.CallGraphTagger.v()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphTagger;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.annotation.callgraph.CallGraphTagger.v()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphTagger;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_annotation_callgraph_CallGraphTagger,()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphTagger;)#1
soot.Singletons.soot_jimple_toolkits_annotation_callgraph_CallGraphTagger()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphTagger;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_annotation_callgraph_CallGraphTagger()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphTagger;#Get(Lsoot/jimple/toolkits/annotation/callgraph/CallGraphTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_callgraph_CallGraphTagger)#1
soot.Singletons.soot_jimple_toolkits_annotation_callgraph_CallGraphTagger()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphTagger;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_annotation_callgraph_CallGraphTagger()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphTagger;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_annotation_callgraph_CallGraphTagger()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphTagger;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_annotation_callgraph_CallGraphTagger()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphTagger;#New(Lsoot/jimple/toolkits/annotation/callgraph/CallGraphTagger;,0)#5
soot.Singletons.soot_jimple_toolkits_annotation_callgraph_CallGraphTagger()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphTagger;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_annotation_callgraph_CallGraphTagger()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphTagger;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_annotation_callgraph_CallGraphTagger()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphTagger;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_annotation_callgraph_CallGraphTagger()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphTagger;#Invoke(SPECIAL,Lsoot/jimple/toolkits/annotation/callgraph/CallGraphTagger;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.annotation.callgraph.CallGraphTagger.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.annotation.callgraph.CallGraphTagger.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.jimple.toolkits.annotation.callgraph.CallGraphTagger.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_toolkits_annotation_callgraph_CallGraphTagger()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphTagger;#Put(Lsoot/jimple/toolkits/annotation/callgraph/CallGraphTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_callgraph_CallGraphTagger)#10
soot.Singletons.soot_jimple_toolkits_annotation_callgraph_CallGraphTagger()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphTagger;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_annotation_callgraph_CallGraphTagger()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphTagger;#Get(Lsoot/jimple/toolkits/annotation/callgraph/CallGraphTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_callgraph_CallGraphTagger)#12
soot.Singletons.soot_jimple_toolkits_annotation_callgraph_CallGraphTagger()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphTagger;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.annotation.callgraph.CallGraphTagger.v()Lsoot/jimple/toolkits/annotation/callgraph/CallGraphTagger;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#539
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#540
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#541
soot.PackManager.init()V#New(Lsoot/Transform;,0)#542
soot.PackManager.init()V#Dup(1,0)#543
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jap.parity")#544
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/annotation/parity/ParityTagger;,v,()Lsoot/jimple/toolkits/annotation/parity/ParityTagger;)#545
soot.jimple.toolkits.annotation.parity.ParityTagger.v()Lsoot/jimple/toolkits/annotation/parity/ParityTagger;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.annotation.parity.ParityTagger.v()Lsoot/jimple/toolkits/annotation/parity/ParityTagger;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_annotation_parity_ParityTagger,()Lsoot/jimple/toolkits/annotation/parity/ParityTagger;)#1
soot.Singletons.soot_jimple_toolkits_annotation_parity_ParityTagger()Lsoot/jimple/toolkits/annotation/parity/ParityTagger;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_annotation_parity_ParityTagger()Lsoot/jimple/toolkits/annotation/parity/ParityTagger;#Get(Lsoot/jimple/toolkits/annotation/parity/ParityTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_parity_ParityTagger)#1
soot.Singletons.soot_jimple_toolkits_annotation_parity_ParityTagger()Lsoot/jimple/toolkits/annotation/parity/ParityTagger;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_annotation_parity_ParityTagger()Lsoot/jimple/toolkits/annotation/parity/ParityTagger;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_annotation_parity_ParityTagger()Lsoot/jimple/toolkits/annotation/parity/ParityTagger;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_annotation_parity_ParityTagger()Lsoot/jimple/toolkits/annotation/parity/ParityTagger;#New(Lsoot/jimple/toolkits/annotation/parity/ParityTagger;,0)#5
soot.Singletons.soot_jimple_toolkits_annotation_parity_ParityTagger()Lsoot/jimple/toolkits/annotation/parity/ParityTagger;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_annotation_parity_ParityTagger()Lsoot/jimple/toolkits/annotation/parity/ParityTagger;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_annotation_parity_ParityTagger()Lsoot/jimple/toolkits/annotation/parity/ParityTagger;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_annotation_parity_ParityTagger()Lsoot/jimple/toolkits/annotation/parity/ParityTagger;#Invoke(SPECIAL,Lsoot/jimple/toolkits/annotation/parity/ParityTagger;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.annotation.parity.ParityTagger.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.annotation.parity.ParityTagger.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.jimple.toolkits.annotation.parity.ParityTagger.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_toolkits_annotation_parity_ParityTagger()Lsoot/jimple/toolkits/annotation/parity/ParityTagger;#Put(Lsoot/jimple/toolkits/annotation/parity/ParityTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_parity_ParityTagger)#10
soot.Singletons.soot_jimple_toolkits_annotation_parity_ParityTagger()Lsoot/jimple/toolkits/annotation/parity/ParityTagger;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_annotation_parity_ParityTagger()Lsoot/jimple/toolkits/annotation/parity/ParityTagger;#Get(Lsoot/jimple/toolkits/annotation/parity/ParityTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_parity_ParityTagger)#12
soot.Singletons.soot_jimple_toolkits_annotation_parity_ParityTagger()Lsoot/jimple/toolkits/annotation/parity/ParityTagger;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.annotation.parity.ParityTagger.v()Lsoot/jimple/toolkits/annotation/parity/ParityTagger;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#546
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#547
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#548
soot.PackManager.init()V#New(Lsoot/Transform;,0)#549
soot.PackManager.init()V#Dup(1,0)#550
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jap.pat")#551
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/pointer/ParameterAliasTagger;,v,()Lsoot/jimple/toolkits/pointer/ParameterAliasTagger;)#552
soot.jimple.toolkits.pointer.ParameterAliasTagger.v()Lsoot/jimple/toolkits/pointer/ParameterAliasTagger;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.pointer.ParameterAliasTagger.v()Lsoot/jimple/toolkits/pointer/ParameterAliasTagger;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_pointer_ParameterAliasTagger,()Lsoot/jimple/toolkits/pointer/ParameterAliasTagger;)#1
soot.Singletons.soot_jimple_toolkits_pointer_ParameterAliasTagger()Lsoot/jimple/toolkits/pointer/ParameterAliasTagger;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_pointer_ParameterAliasTagger()Lsoot/jimple/toolkits/pointer/ParameterAliasTagger;#Get(Lsoot/jimple/toolkits/pointer/ParameterAliasTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_pointer_ParameterAliasTagger)#1
soot.Singletons.soot_jimple_toolkits_pointer_ParameterAliasTagger()Lsoot/jimple/toolkits/pointer/ParameterAliasTagger;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_pointer_ParameterAliasTagger()Lsoot/jimple/toolkits/pointer/ParameterAliasTagger;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_pointer_ParameterAliasTagger()Lsoot/jimple/toolkits/pointer/ParameterAliasTagger;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_pointer_ParameterAliasTagger()Lsoot/jimple/toolkits/pointer/ParameterAliasTagger;#New(Lsoot/jimple/toolkits/pointer/ParameterAliasTagger;,0)#5
soot.Singletons.soot_jimple_toolkits_pointer_ParameterAliasTagger()Lsoot/jimple/toolkits/pointer/ParameterAliasTagger;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_pointer_ParameterAliasTagger()Lsoot/jimple/toolkits/pointer/ParameterAliasTagger;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_pointer_ParameterAliasTagger()Lsoot/jimple/toolkits/pointer/ParameterAliasTagger;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_pointer_ParameterAliasTagger()Lsoot/jimple/toolkits/pointer/ParameterAliasTagger;#Invoke(SPECIAL,Lsoot/jimple/toolkits/pointer/ParameterAliasTagger;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.pointer.ParameterAliasTagger.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.pointer.ParameterAliasTagger.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.jimple.toolkits.pointer.ParameterAliasTagger.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_toolkits_pointer_ParameterAliasTagger()Lsoot/jimple/toolkits/pointer/ParameterAliasTagger;#Put(Lsoot/jimple/toolkits/pointer/ParameterAliasTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_pointer_ParameterAliasTagger)#10
soot.Singletons.soot_jimple_toolkits_pointer_ParameterAliasTagger()Lsoot/jimple/toolkits/pointer/ParameterAliasTagger;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_pointer_ParameterAliasTagger()Lsoot/jimple/toolkits/pointer/ParameterAliasTagger;#Get(Lsoot/jimple/toolkits/pointer/ParameterAliasTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_pointer_ParameterAliasTagger)#12
soot.Singletons.soot_jimple_toolkits_pointer_ParameterAliasTagger()Lsoot/jimple/toolkits/pointer/ParameterAliasTagger;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.pointer.ParameterAliasTagger.v()Lsoot/jimple/toolkits/pointer/ParameterAliasTagger;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#553
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#554
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#555
soot.PackManager.init()V#New(Lsoot/Transform;,0)#556
soot.PackManager.init()V#Dup(1,0)#557
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jap.rdtagger")#558
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/annotation/defs/ReachingDefsTagger;,v,()Lsoot/jimple/toolkits/annotation/defs/ReachingDefsTagger;)#559
soot.jimple.toolkits.annotation.defs.ReachingDefsTagger.v()Lsoot/jimple/toolkits/annotation/defs/ReachingDefsTagger;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.annotation.defs.ReachingDefsTagger.v()Lsoot/jimple/toolkits/annotation/defs/ReachingDefsTagger;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_annotation_defs_ReachingDefsTagger,()Lsoot/jimple/toolkits/annotation/defs/ReachingDefsTagger;)#1
soot.Singletons.soot_jimple_toolkits_annotation_defs_ReachingDefsTagger()Lsoot/jimple/toolkits/annotation/defs/ReachingDefsTagger;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_annotation_defs_ReachingDefsTagger()Lsoot/jimple/toolkits/annotation/defs/ReachingDefsTagger;#Get(Lsoot/jimple/toolkits/annotation/defs/ReachingDefsTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_defs_ReachingDefsTagger)#1
soot.Singletons.soot_jimple_toolkits_annotation_defs_ReachingDefsTagger()Lsoot/jimple/toolkits/annotation/defs/ReachingDefsTagger;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_annotation_defs_ReachingDefsTagger()Lsoot/jimple/toolkits/annotation/defs/ReachingDefsTagger;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_annotation_defs_ReachingDefsTagger()Lsoot/jimple/toolkits/annotation/defs/ReachingDefsTagger;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_annotation_defs_ReachingDefsTagger()Lsoot/jimple/toolkits/annotation/defs/ReachingDefsTagger;#New(Lsoot/jimple/toolkits/annotation/defs/ReachingDefsTagger;,0)#5
soot.Singletons.soot_jimple_toolkits_annotation_defs_ReachingDefsTagger()Lsoot/jimple/toolkits/annotation/defs/ReachingDefsTagger;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_annotation_defs_ReachingDefsTagger()Lsoot/jimple/toolkits/annotation/defs/ReachingDefsTagger;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_annotation_defs_ReachingDefsTagger()Lsoot/jimple/toolkits/annotation/defs/ReachingDefsTagger;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_annotation_defs_ReachingDefsTagger()Lsoot/jimple/toolkits/annotation/defs/ReachingDefsTagger;#Invoke(SPECIAL,Lsoot/jimple/toolkits/annotation/defs/ReachingDefsTagger;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.annotation.defs.ReachingDefsTagger.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.annotation.defs.ReachingDefsTagger.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.jimple.toolkits.annotation.defs.ReachingDefsTagger.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_toolkits_annotation_defs_ReachingDefsTagger()Lsoot/jimple/toolkits/annotation/defs/ReachingDefsTagger;#Put(Lsoot/jimple/toolkits/annotation/defs/ReachingDefsTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_defs_ReachingDefsTagger)#10
soot.Singletons.soot_jimple_toolkits_annotation_defs_ReachingDefsTagger()Lsoot/jimple/toolkits/annotation/defs/ReachingDefsTagger;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_annotation_defs_ReachingDefsTagger()Lsoot/jimple/toolkits/annotation/defs/ReachingDefsTagger;#Get(Lsoot/jimple/toolkits/annotation/defs/ReachingDefsTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_defs_ReachingDefsTagger)#12
soot.Singletons.soot_jimple_toolkits_annotation_defs_ReachingDefsTagger()Lsoot/jimple/toolkits/annotation/defs/ReachingDefsTagger;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.annotation.defs.ReachingDefsTagger.v()Lsoot/jimple/toolkits/annotation/defs/ReachingDefsTagger;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#560
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#561
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#562
soot.PackManager.init()V#New(Lsoot/Transform;,0)#563
soot.PackManager.init()V#Dup(1,0)#564
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jap.lvtagger")#565
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/annotation/liveness/LiveVarsTagger;,v,()Lsoot/jimple/toolkits/annotation/liveness/LiveVarsTagger;)#566
soot.jimple.toolkits.annotation.liveness.LiveVarsTagger.v()Lsoot/jimple/toolkits/annotation/liveness/LiveVarsTagger;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.annotation.liveness.LiveVarsTagger.v()Lsoot/jimple/toolkits/annotation/liveness/LiveVarsTagger;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_annotation_liveness_LiveVarsTagger,()Lsoot/jimple/toolkits/annotation/liveness/LiveVarsTagger;)#1
soot.Singletons.soot_jimple_toolkits_annotation_liveness_LiveVarsTagger()Lsoot/jimple/toolkits/annotation/liveness/LiveVarsTagger;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_annotation_liveness_LiveVarsTagger()Lsoot/jimple/toolkits/annotation/liveness/LiveVarsTagger;#Get(Lsoot/jimple/toolkits/annotation/liveness/LiveVarsTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_liveness_LiveVarsTagger)#1
soot.Singletons.soot_jimple_toolkits_annotation_liveness_LiveVarsTagger()Lsoot/jimple/toolkits/annotation/liveness/LiveVarsTagger;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_annotation_liveness_LiveVarsTagger()Lsoot/jimple/toolkits/annotation/liveness/LiveVarsTagger;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_annotation_liveness_LiveVarsTagger()Lsoot/jimple/toolkits/annotation/liveness/LiveVarsTagger;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_annotation_liveness_LiveVarsTagger()Lsoot/jimple/toolkits/annotation/liveness/LiveVarsTagger;#New(Lsoot/jimple/toolkits/annotation/liveness/LiveVarsTagger;,0)#5
soot.Singletons.soot_jimple_toolkits_annotation_liveness_LiveVarsTagger()Lsoot/jimple/toolkits/annotation/liveness/LiveVarsTagger;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_annotation_liveness_LiveVarsTagger()Lsoot/jimple/toolkits/annotation/liveness/LiveVarsTagger;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_annotation_liveness_LiveVarsTagger()Lsoot/jimple/toolkits/annotation/liveness/LiveVarsTagger;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_annotation_liveness_LiveVarsTagger()Lsoot/jimple/toolkits/annotation/liveness/LiveVarsTagger;#Invoke(SPECIAL,Lsoot/jimple/toolkits/annotation/liveness/LiveVarsTagger;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.annotation.liveness.LiveVarsTagger.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.annotation.liveness.LiveVarsTagger.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.jimple.toolkits.annotation.liveness.LiveVarsTagger.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_toolkits_annotation_liveness_LiveVarsTagger()Lsoot/jimple/toolkits/annotation/liveness/LiveVarsTagger;#Put(Lsoot/jimple/toolkits/annotation/liveness/LiveVarsTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_liveness_LiveVarsTagger)#10
soot.Singletons.soot_jimple_toolkits_annotation_liveness_LiveVarsTagger()Lsoot/jimple/toolkits/annotation/liveness/LiveVarsTagger;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_annotation_liveness_LiveVarsTagger()Lsoot/jimple/toolkits/annotation/liveness/LiveVarsTagger;#Get(Lsoot/jimple/toolkits/annotation/liveness/LiveVarsTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_liveness_LiveVarsTagger)#12
soot.Singletons.soot_jimple_toolkits_annotation_liveness_LiveVarsTagger()Lsoot/jimple/toolkits/annotation/liveness/LiveVarsTagger;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.annotation.liveness.LiveVarsTagger.v()Lsoot/jimple/toolkits/annotation/liveness/LiveVarsTagger;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#567
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#568
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#569
soot.PackManager.init()V#New(Lsoot/Transform;,0)#570
soot.PackManager.init()V#Dup(1,0)#571
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jap.che")#572
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/pointer/CastCheckEliminatorDumper;,v,()Lsoot/jimple/toolkits/pointer/CastCheckEliminatorDumper;)#573
soot.jimple.toolkits.pointer.CastCheckEliminatorDumper.v()Lsoot/jimple/toolkits/pointer/CastCheckEliminatorDumper;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.pointer.CastCheckEliminatorDumper.v()Lsoot/jimple/toolkits/pointer/CastCheckEliminatorDumper;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_pointer_CastCheckEliminatorDumper,()Lsoot/jimple/toolkits/pointer/CastCheckEliminatorDumper;)#1
soot.Singletons.soot_jimple_toolkits_pointer_CastCheckEliminatorDumper()Lsoot/jimple/toolkits/pointer/CastCheckEliminatorDumper;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_pointer_CastCheckEliminatorDumper()Lsoot/jimple/toolkits/pointer/CastCheckEliminatorDumper;#Get(Lsoot/jimple/toolkits/pointer/CastCheckEliminatorDumper;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_pointer_CastCheckEliminatorDumper)#1
soot.Singletons.soot_jimple_toolkits_pointer_CastCheckEliminatorDumper()Lsoot/jimple/toolkits/pointer/CastCheckEliminatorDumper;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_pointer_CastCheckEliminatorDumper()Lsoot/jimple/toolkits/pointer/CastCheckEliminatorDumper;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_pointer_CastCheckEliminatorDumper()Lsoot/jimple/toolkits/pointer/CastCheckEliminatorDumper;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_pointer_CastCheckEliminatorDumper()Lsoot/jimple/toolkits/pointer/CastCheckEliminatorDumper;#New(Lsoot/jimple/toolkits/pointer/CastCheckEliminatorDumper;,0)#5
soot.Singletons.soot_jimple_toolkits_pointer_CastCheckEliminatorDumper()Lsoot/jimple/toolkits/pointer/CastCheckEliminatorDumper;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_pointer_CastCheckEliminatorDumper()Lsoot/jimple/toolkits/pointer/CastCheckEliminatorDumper;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_pointer_CastCheckEliminatorDumper()Lsoot/jimple/toolkits/pointer/CastCheckEliminatorDumper;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_pointer_CastCheckEliminatorDumper()Lsoot/jimple/toolkits/pointer/CastCheckEliminatorDumper;#Invoke(SPECIAL,Lsoot/jimple/toolkits/pointer/CastCheckEliminatorDumper;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.pointer.CastCheckEliminatorDumper.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.pointer.CastCheckEliminatorDumper.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.jimple.toolkits.pointer.CastCheckEliminatorDumper.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_toolkits_pointer_CastCheckEliminatorDumper()Lsoot/jimple/toolkits/pointer/CastCheckEliminatorDumper;#Put(Lsoot/jimple/toolkits/pointer/CastCheckEliminatorDumper;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_pointer_CastCheckEliminatorDumper)#10
soot.Singletons.soot_jimple_toolkits_pointer_CastCheckEliminatorDumper()Lsoot/jimple/toolkits/pointer/CastCheckEliminatorDumper;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_pointer_CastCheckEliminatorDumper()Lsoot/jimple/toolkits/pointer/CastCheckEliminatorDumper;#Get(Lsoot/jimple/toolkits/pointer/CastCheckEliminatorDumper;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_pointer_CastCheckEliminatorDumper)#12
soot.Singletons.soot_jimple_toolkits_pointer_CastCheckEliminatorDumper()Lsoot/jimple/toolkits/pointer/CastCheckEliminatorDumper;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.pointer.CastCheckEliminatorDumper.v()Lsoot/jimple/toolkits/pointer/CastCheckEliminatorDumper;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#574
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#575
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#576
soot.PackManager.init()V#New(Lsoot/Transform;,0)#577
soot.PackManager.init()V#Dup(1,0)#578
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jap.umt")#579
soot.PackManager.init()V#New(Lsoot/jimple/toolkits/callgraph/UnreachableMethodTransformer;,0)#580
soot.PackManager.init()V#Dup(1,0)#581
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/jimple/toolkits/callgraph/UnreachableMethodTransformer;,<init>,()V)#582
soot.jimple.toolkits.callgraph.UnreachableMethodTransformer.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.callgraph.UnreachableMethodTransformer.<init>()V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.jimple.toolkits.callgraph.UnreachableMethodTransformer.<init>()V#Return(V)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#583
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#584
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#585
soot.PackManager.init()V#New(Lsoot/Transform;,0)#586
soot.PackManager.init()V#Dup(1,0)#587
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jap.lit")#588
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/annotation/logic/LoopInvariantFinder;,v,()Lsoot/jimple/toolkits/annotation/logic/LoopInvariantFinder;)#589
soot.jimple.toolkits.annotation.logic.LoopInvariantFinder.v()Lsoot/jimple/toolkits/annotation/logic/LoopInvariantFinder;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.annotation.logic.LoopInvariantFinder.v()Lsoot/jimple/toolkits/annotation/logic/LoopInvariantFinder;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_annotation_logic_LoopInvariantFinder,()Lsoot/jimple/toolkits/annotation/logic/LoopInvariantFinder;)#1
soot.Singletons.soot_jimple_toolkits_annotation_logic_LoopInvariantFinder()Lsoot/jimple/toolkits/annotation/logic/LoopInvariantFinder;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_annotation_logic_LoopInvariantFinder()Lsoot/jimple/toolkits/annotation/logic/LoopInvariantFinder;#Get(Lsoot/jimple/toolkits/annotation/logic/LoopInvariantFinder;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_logic_LoopInvariantFinder)#1
soot.Singletons.soot_jimple_toolkits_annotation_logic_LoopInvariantFinder()Lsoot/jimple/toolkits/annotation/logic/LoopInvariantFinder;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_annotation_logic_LoopInvariantFinder()Lsoot/jimple/toolkits/annotation/logic/LoopInvariantFinder;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_annotation_logic_LoopInvariantFinder()Lsoot/jimple/toolkits/annotation/logic/LoopInvariantFinder;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_annotation_logic_LoopInvariantFinder()Lsoot/jimple/toolkits/annotation/logic/LoopInvariantFinder;#New(Lsoot/jimple/toolkits/annotation/logic/LoopInvariantFinder;,0)#5
soot.Singletons.soot_jimple_toolkits_annotation_logic_LoopInvariantFinder()Lsoot/jimple/toolkits/annotation/logic/LoopInvariantFinder;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_annotation_logic_LoopInvariantFinder()Lsoot/jimple/toolkits/annotation/logic/LoopInvariantFinder;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_annotation_logic_LoopInvariantFinder()Lsoot/jimple/toolkits/annotation/logic/LoopInvariantFinder;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_annotation_logic_LoopInvariantFinder()Lsoot/jimple/toolkits/annotation/logic/LoopInvariantFinder;#Invoke(SPECIAL,Lsoot/jimple/toolkits/annotation/logic/LoopInvariantFinder;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.annotation.logic.LoopInvariantFinder.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.annotation.logic.LoopInvariantFinder.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.jimple.toolkits.annotation.logic.LoopInvariantFinder.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_toolkits_annotation_logic_LoopInvariantFinder()Lsoot/jimple/toolkits/annotation/logic/LoopInvariantFinder;#Put(Lsoot/jimple/toolkits/annotation/logic/LoopInvariantFinder;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_logic_LoopInvariantFinder)#10
soot.Singletons.soot_jimple_toolkits_annotation_logic_LoopInvariantFinder()Lsoot/jimple/toolkits/annotation/logic/LoopInvariantFinder;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_annotation_logic_LoopInvariantFinder()Lsoot/jimple/toolkits/annotation/logic/LoopInvariantFinder;#Get(Lsoot/jimple/toolkits/annotation/logic/LoopInvariantFinder;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_logic_LoopInvariantFinder)#12
soot.Singletons.soot_jimple_toolkits_annotation_logic_LoopInvariantFinder()Lsoot/jimple/toolkits/annotation/logic/LoopInvariantFinder;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.annotation.logic.LoopInvariantFinder.v()Lsoot/jimple/toolkits/annotation/logic/LoopInvariantFinder;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#590
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#591
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#592
soot.PackManager.init()V#New(Lsoot/Transform;,0)#593
soot.PackManager.init()V#Dup(1,0)#594
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jap.aet")#595
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/annotation/AvailExprTagger;,v,()Lsoot/jimple/toolkits/annotation/AvailExprTagger;)#596
soot.jimple.toolkits.annotation.AvailExprTagger.v()Lsoot/jimple/toolkits/annotation/AvailExprTagger;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.annotation.AvailExprTagger.v()Lsoot/jimple/toolkits/annotation/AvailExprTagger;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_annotation_AvailExprTagger,()Lsoot/jimple/toolkits/annotation/AvailExprTagger;)#1
soot.Singletons.soot_jimple_toolkits_annotation_AvailExprTagger()Lsoot/jimple/toolkits/annotation/AvailExprTagger;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_annotation_AvailExprTagger()Lsoot/jimple/toolkits/annotation/AvailExprTagger;#Get(Lsoot/jimple/toolkits/annotation/AvailExprTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_AvailExprTagger)#1
soot.Singletons.soot_jimple_toolkits_annotation_AvailExprTagger()Lsoot/jimple/toolkits/annotation/AvailExprTagger;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_annotation_AvailExprTagger()Lsoot/jimple/toolkits/annotation/AvailExprTagger;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_annotation_AvailExprTagger()Lsoot/jimple/toolkits/annotation/AvailExprTagger;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_annotation_AvailExprTagger()Lsoot/jimple/toolkits/annotation/AvailExprTagger;#New(Lsoot/jimple/toolkits/annotation/AvailExprTagger;,0)#5
soot.Singletons.soot_jimple_toolkits_annotation_AvailExprTagger()Lsoot/jimple/toolkits/annotation/AvailExprTagger;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_annotation_AvailExprTagger()Lsoot/jimple/toolkits/annotation/AvailExprTagger;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_annotation_AvailExprTagger()Lsoot/jimple/toolkits/annotation/AvailExprTagger;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_annotation_AvailExprTagger()Lsoot/jimple/toolkits/annotation/AvailExprTagger;#Invoke(SPECIAL,Lsoot/jimple/toolkits/annotation/AvailExprTagger;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.annotation.AvailExprTagger.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.annotation.AvailExprTagger.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.jimple.toolkits.annotation.AvailExprTagger.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_toolkits_annotation_AvailExprTagger()Lsoot/jimple/toolkits/annotation/AvailExprTagger;#Put(Lsoot/jimple/toolkits/annotation/AvailExprTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_AvailExprTagger)#10
soot.Singletons.soot_jimple_toolkits_annotation_AvailExprTagger()Lsoot/jimple/toolkits/annotation/AvailExprTagger;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_annotation_AvailExprTagger()Lsoot/jimple/toolkits/annotation/AvailExprTagger;#Get(Lsoot/jimple/toolkits/annotation/AvailExprTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_AvailExprTagger)#12
soot.Singletons.soot_jimple_toolkits_annotation_AvailExprTagger()Lsoot/jimple/toolkits/annotation/AvailExprTagger;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.annotation.AvailExprTagger.v()Lsoot/jimple/toolkits/annotation/AvailExprTagger;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#597
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#598
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#599
soot.PackManager.init()V#New(Lsoot/Transform;,0)#600
soot.PackManager.init()V#Dup(1,0)#601
soot.PackManager.init()V#Constant(Ljava/lang/String;,"jap.dmt")#602
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/annotation/DominatorsTagger;,v,()Lsoot/jimple/toolkits/annotation/DominatorsTagger;)#603
soot.jimple.toolkits.annotation.DominatorsTagger.v()Lsoot/jimple/toolkits/annotation/DominatorsTagger;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.annotation.DominatorsTagger.v()Lsoot/jimple/toolkits/annotation/DominatorsTagger;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_annotation_DominatorsTagger,()Lsoot/jimple/toolkits/annotation/DominatorsTagger;)#1
soot.Singletons.soot_jimple_toolkits_annotation_DominatorsTagger()Lsoot/jimple/toolkits/annotation/DominatorsTagger;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_annotation_DominatorsTagger()Lsoot/jimple/toolkits/annotation/DominatorsTagger;#Get(Lsoot/jimple/toolkits/annotation/DominatorsTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_DominatorsTagger)#1
soot.Singletons.soot_jimple_toolkits_annotation_DominatorsTagger()Lsoot/jimple/toolkits/annotation/DominatorsTagger;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_annotation_DominatorsTagger()Lsoot/jimple/toolkits/annotation/DominatorsTagger;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_annotation_DominatorsTagger()Lsoot/jimple/toolkits/annotation/DominatorsTagger;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_annotation_DominatorsTagger()Lsoot/jimple/toolkits/annotation/DominatorsTagger;#New(Lsoot/jimple/toolkits/annotation/DominatorsTagger;,0)#5
soot.Singletons.soot_jimple_toolkits_annotation_DominatorsTagger()Lsoot/jimple/toolkits/annotation/DominatorsTagger;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_annotation_DominatorsTagger()Lsoot/jimple/toolkits/annotation/DominatorsTagger;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_annotation_DominatorsTagger()Lsoot/jimple/toolkits/annotation/DominatorsTagger;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_annotation_DominatorsTagger()Lsoot/jimple/toolkits/annotation/DominatorsTagger;#Invoke(SPECIAL,Lsoot/jimple/toolkits/annotation/DominatorsTagger;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.annotation.DominatorsTagger.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.annotation.DominatorsTagger.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.jimple.toolkits.annotation.DominatorsTagger.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_toolkits_annotation_DominatorsTagger()Lsoot/jimple/toolkits/annotation/DominatorsTagger;#Put(Lsoot/jimple/toolkits/annotation/DominatorsTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_DominatorsTagger)#10
soot.Singletons.soot_jimple_toolkits_annotation_DominatorsTagger()Lsoot/jimple/toolkits/annotation/DominatorsTagger;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_annotation_DominatorsTagger()Lsoot/jimple/toolkits/annotation/DominatorsTagger;#Get(Lsoot/jimple/toolkits/annotation/DominatorsTagger;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_DominatorsTagger)#12
soot.Singletons.soot_jimple_toolkits_annotation_DominatorsTagger()Lsoot/jimple/toolkits/annotation/DominatorsTagger;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.annotation.DominatorsTagger.v()Lsoot/jimple/toolkits/annotation/DominatorsTagger;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#604
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#605
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,0)#606
soot.PackManager.init()V#New(Lsoot/BodyPack;,0)#607
soot.PackManager.init()V#Dup(1,0)#608
soot.PackManager.init()V#Constant(Ljava/lang/String;,"gb")#609
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/BodyPack;,<init>,(Ljava/lang/String;)V)#610
soot.PackManager.init()V#Dup(1,0)#611
soot.PackManager.init()V#LocalStore(Ljava/lang/Object;,1)#612
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/PackManager;,addPack,(Lsoot/Pack;)V)#613
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#614
soot.PackManager.init()V#New(Lsoot/Transform;,0)#615
soot.PackManager.init()V#Dup(1,0)#616
soot.PackManager.init()V#Constant(Ljava/lang/String;,"gb.a1")#617
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/base/Aggregator;,v,()Lsoot/jimple/toolkits/base/Aggregator;)#618
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#619
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#620
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#621
soot.PackManager.init()V#New(Lsoot/Transform;,0)#622
soot.PackManager.init()V#Dup(1,0)#623
soot.PackManager.init()V#Constant(Ljava/lang/String;,"gb.cf")#624
soot.PackManager.init()V#Invoke(STATIC,Lsoot/grimp/toolkits/base/ConstructorFolder;,v,()Lsoot/grimp/toolkits/base/ConstructorFolder;)#625
soot.grimp.toolkits.base.ConstructorFolder.v()Lsoot/grimp/toolkits/base/ConstructorFolder;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.grimp.toolkits.base.ConstructorFolder.v()Lsoot/grimp/toolkits/base/ConstructorFolder;#Invoke(VIRTUAL,Lsoot/G;,soot_grimp_toolkits_base_ConstructorFolder,()Lsoot/grimp/toolkits/base/ConstructorFolder;)#1
soot.Singletons.soot_grimp_toolkits_base_ConstructorFolder()Lsoot/grimp/toolkits/base/ConstructorFolder;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_grimp_toolkits_base_ConstructorFolder()Lsoot/grimp/toolkits/base/ConstructorFolder;#Get(Lsoot/grimp/toolkits/base/ConstructorFolder;,NONSTATIC,Lsoot/Singletons;,instance_soot_grimp_toolkits_base_ConstructorFolder)#1
soot.Singletons.soot_grimp_toolkits_base_ConstructorFolder()Lsoot/grimp/toolkits/base/ConstructorFolder;#Constant(L;,null)#2
soot.Singletons.soot_grimp_toolkits_base_ConstructorFolder()Lsoot/grimp/toolkits/base/ConstructorFolder;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_grimp_toolkits_base_ConstructorFolder()Lsoot/grimp/toolkits/base/ConstructorFolder;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_grimp_toolkits_base_ConstructorFolder()Lsoot/grimp/toolkits/base/ConstructorFolder;#New(Lsoot/grimp/toolkits/base/ConstructorFolder;,0)#5
soot.Singletons.soot_grimp_toolkits_base_ConstructorFolder()Lsoot/grimp/toolkits/base/ConstructorFolder;#Dup(1,0)#6
soot.Singletons.soot_grimp_toolkits_base_ConstructorFolder()Lsoot/grimp/toolkits/base/ConstructorFolder;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_grimp_toolkits_base_ConstructorFolder()Lsoot/grimp/toolkits/base/ConstructorFolder;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_grimp_toolkits_base_ConstructorFolder()Lsoot/grimp/toolkits/base/ConstructorFolder;#Invoke(SPECIAL,Lsoot/grimp/toolkits/base/ConstructorFolder;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.grimp.toolkits.base.ConstructorFolder.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.grimp.toolkits.base.ConstructorFolder.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.grimp.toolkits.base.ConstructorFolder.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_grimp_toolkits_base_ConstructorFolder()Lsoot/grimp/toolkits/base/ConstructorFolder;#Put(Lsoot/grimp/toolkits/base/ConstructorFolder;,NONSTATIC,Lsoot/Singletons;,instance_soot_grimp_toolkits_base_ConstructorFolder)#10
soot.Singletons.soot_grimp_toolkits_base_ConstructorFolder()Lsoot/grimp/toolkits/base/ConstructorFolder;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_grimp_toolkits_base_ConstructorFolder()Lsoot/grimp/toolkits/base/ConstructorFolder;#Get(Lsoot/grimp/toolkits/base/ConstructorFolder;,NONSTATIC,Lsoot/Singletons;,instance_soot_grimp_toolkits_base_ConstructorFolder)#12
soot.Singletons.soot_grimp_toolkits_base_ConstructorFolder()Lsoot/grimp/toolkits/base/ConstructorFolder;#Return(Ljava/lang/Object;)#13
soot.grimp.toolkits.base.ConstructorFolder.v()Lsoot/grimp/toolkits/base/ConstructorFolder;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#626
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#627
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#628
soot.PackManager.init()V#New(Lsoot/Transform;,0)#629
soot.PackManager.init()V#Dup(1,0)#630
soot.PackManager.init()V#Constant(Ljava/lang/String;,"gb.a2")#631
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/base/Aggregator;,v,()Lsoot/jimple/toolkits/base/Aggregator;)#632
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#633
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#634
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#635
soot.PackManager.init()V#New(Lsoot/Transform;,0)#636
soot.PackManager.init()V#Dup(1,0)#637
soot.PackManager.init()V#Constant(Ljava/lang/String;,"gb.ule")#638
soot.PackManager.init()V#Invoke(STATIC,Lsoot/toolkits/scalar/UnusedLocalEliminator;,v,()Lsoot/toolkits/scalar/UnusedLocalEliminator;)#639
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#640
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#641
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,0)#642
soot.PackManager.init()V#New(Lsoot/BodyPack;,0)#643
soot.PackManager.init()V#Dup(1,0)#644
soot.PackManager.init()V#Constant(Ljava/lang/String;,"gop")#645
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/BodyPack;,<init>,(Ljava/lang/String;)V)#646
soot.PackManager.init()V#Dup(1,0)#647
soot.PackManager.init()V#LocalStore(Ljava/lang/Object;,1)#648
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/PackManager;,addPack,(Lsoot/Pack;)V)#649
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,0)#650
soot.PackManager.init()V#New(Lsoot/BodyPack;,0)#651
soot.PackManager.init()V#Dup(1,0)#652
soot.PackManager.init()V#Constant(Ljava/lang/String;,"bb")#653
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/BodyPack;,<init>,(Ljava/lang/String;)V)#654
soot.PackManager.init()V#Dup(1,0)#655
soot.PackManager.init()V#LocalStore(Ljava/lang/Object;,1)#656
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/PackManager;,addPack,(Lsoot/Pack;)V)#657
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#658
soot.PackManager.init()V#New(Lsoot/Transform;,0)#659
soot.PackManager.init()V#Dup(1,0)#660
soot.PackManager.init()V#Constant(Ljava/lang/String;,"bb.lso")#661
soot.PackManager.init()V#Invoke(STATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer;,v,()Lsoot/baf/toolkits/base/LoadStoreOptimizer;)#662
soot.baf.toolkits.base.LoadStoreOptimizer.v()Lsoot/baf/toolkits/base/LoadStoreOptimizer;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.baf.toolkits.base.LoadStoreOptimizer.v()Lsoot/baf/toolkits/base/LoadStoreOptimizer;#Invoke(VIRTUAL,Lsoot/G;,soot_baf_toolkits_base_LoadStoreOptimizer,()Lsoot/baf/toolkits/base/LoadStoreOptimizer;)#1
soot.Singletons.soot_baf_toolkits_base_LoadStoreOptimizer()Lsoot/baf/toolkits/base/LoadStoreOptimizer;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_baf_toolkits_base_LoadStoreOptimizer()Lsoot/baf/toolkits/base/LoadStoreOptimizer;#Get(Lsoot/baf/toolkits/base/LoadStoreOptimizer;,NONSTATIC,Lsoot/Singletons;,instance_soot_baf_toolkits_base_LoadStoreOptimizer)#1
soot.Singletons.soot_baf_toolkits_base_LoadStoreOptimizer()Lsoot/baf/toolkits/base/LoadStoreOptimizer;#Constant(L;,null)#2
soot.Singletons.soot_baf_toolkits_base_LoadStoreOptimizer()Lsoot/baf/toolkits/base/LoadStoreOptimizer;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_baf_toolkits_base_LoadStoreOptimizer()Lsoot/baf/toolkits/base/LoadStoreOptimizer;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_baf_toolkits_base_LoadStoreOptimizer()Lsoot/baf/toolkits/base/LoadStoreOptimizer;#New(Lsoot/baf/toolkits/base/LoadStoreOptimizer;,0)#5
soot.Singletons.soot_baf_toolkits_base_LoadStoreOptimizer()Lsoot/baf/toolkits/base/LoadStoreOptimizer;#Dup(1,0)#6
soot.Singletons.soot_baf_toolkits_base_LoadStoreOptimizer()Lsoot/baf/toolkits/base/LoadStoreOptimizer;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_baf_toolkits_base_LoadStoreOptimizer()Lsoot/baf/toolkits/base/LoadStoreOptimizer;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_baf_toolkits_base_LoadStoreOptimizer()Lsoot/baf/toolkits/base/LoadStoreOptimizer;#Invoke(SPECIAL,Lsoot/baf/toolkits/base/LoadStoreOptimizer;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.baf.toolkits.base.LoadStoreOptimizer.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.toolkits.base.LoadStoreOptimizer.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.baf.toolkits.base.LoadStoreOptimizer.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.baf.toolkits.base.LoadStoreOptimizer.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#3
soot.baf.toolkits.base.LoadStoreOptimizer.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer;,debug)#4
soot.baf.toolkits.base.LoadStoreOptimizer.<init>(Lsoot/Singletons$Global;)V#Return(V)#5
soot.Singletons.soot_baf_toolkits_base_LoadStoreOptimizer()Lsoot/baf/toolkits/base/LoadStoreOptimizer;#Put(Lsoot/baf/toolkits/base/LoadStoreOptimizer;,NONSTATIC,Lsoot/Singletons;,instance_soot_baf_toolkits_base_LoadStoreOptimizer)#10
soot.Singletons.soot_baf_toolkits_base_LoadStoreOptimizer()Lsoot/baf/toolkits/base/LoadStoreOptimizer;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_baf_toolkits_base_LoadStoreOptimizer()Lsoot/baf/toolkits/base/LoadStoreOptimizer;#Get(Lsoot/baf/toolkits/base/LoadStoreOptimizer;,NONSTATIC,Lsoot/Singletons;,instance_soot_baf_toolkits_base_LoadStoreOptimizer)#12
soot.Singletons.soot_baf_toolkits_base_LoadStoreOptimizer()Lsoot/baf/toolkits/base/LoadStoreOptimizer;#Return(Ljava/lang/Object;)#13
soot.baf.toolkits.base.LoadStoreOptimizer.v()Lsoot/baf/toolkits/base/LoadStoreOptimizer;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#663
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#664
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#665
soot.PackManager.init()V#New(Lsoot/Transform;,0)#666
soot.PackManager.init()V#Dup(1,0)#667
soot.PackManager.init()V#Constant(Ljava/lang/String;,"bb.pho")#668
soot.PackManager.init()V#Invoke(STATIC,Lsoot/baf/toolkits/base/PeepholeOptimizer;,v,()Lsoot/baf/toolkits/base/PeepholeOptimizer;)#669
soot.baf.toolkits.base.PeepholeOptimizer.v()Lsoot/baf/toolkits/base/PeepholeOptimizer;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.baf.toolkits.base.PeepholeOptimizer.v()Lsoot/baf/toolkits/base/PeepholeOptimizer;#Invoke(VIRTUAL,Lsoot/G;,soot_baf_toolkits_base_PeepholeOptimizer,()Lsoot/baf/toolkits/base/PeepholeOptimizer;)#1
soot.Singletons.soot_baf_toolkits_base_PeepholeOptimizer()Lsoot/baf/toolkits/base/PeepholeOptimizer;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_baf_toolkits_base_PeepholeOptimizer()Lsoot/baf/toolkits/base/PeepholeOptimizer;#Get(Lsoot/baf/toolkits/base/PeepholeOptimizer;,NONSTATIC,Lsoot/Singletons;,instance_soot_baf_toolkits_base_PeepholeOptimizer)#1
soot.Singletons.soot_baf_toolkits_base_PeepholeOptimizer()Lsoot/baf/toolkits/base/PeepholeOptimizer;#Constant(L;,null)#2
soot.Singletons.soot_baf_toolkits_base_PeepholeOptimizer()Lsoot/baf/toolkits/base/PeepholeOptimizer;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_baf_toolkits_base_PeepholeOptimizer()Lsoot/baf/toolkits/base/PeepholeOptimizer;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_baf_toolkits_base_PeepholeOptimizer()Lsoot/baf/toolkits/base/PeepholeOptimizer;#New(Lsoot/baf/toolkits/base/PeepholeOptimizer;,0)#5
soot.Singletons.soot_baf_toolkits_base_PeepholeOptimizer()Lsoot/baf/toolkits/base/PeepholeOptimizer;#Dup(1,0)#6
soot.Singletons.soot_baf_toolkits_base_PeepholeOptimizer()Lsoot/baf/toolkits/base/PeepholeOptimizer;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_baf_toolkits_base_PeepholeOptimizer()Lsoot/baf/toolkits/base/PeepholeOptimizer;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_baf_toolkits_base_PeepholeOptimizer()Lsoot/baf/toolkits/base/PeepholeOptimizer;#Invoke(SPECIAL,Lsoot/baf/toolkits/base/PeepholeOptimizer;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.baf.toolkits.base.PeepholeOptimizer.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.toolkits.base.PeepholeOptimizer.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.baf.toolkits.base.PeepholeOptimizer.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.baf.toolkits.base.PeepholeOptimizer.<init>(Lsoot/Singletons$Global;)V#Constant(L;,null)#3
soot.baf.toolkits.base.PeepholeOptimizer.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/io/InputStream;,NONSTATIC,Lsoot/baf/toolkits/base/PeepholeOptimizer;,peepholeListingStream)#4
soot.baf.toolkits.base.PeepholeOptimizer.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.baf.toolkits.base.PeepholeOptimizer.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"soot.baf.toolkits.base")#6
soot.baf.toolkits.base.PeepholeOptimizer.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/baf/toolkits/base/PeepholeOptimizer;,packageName)#7
soot.baf.toolkits.base.PeepholeOptimizer.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.baf.toolkits.base.PeepholeOptimizer.<init>(Lsoot/Singletons$Global;)V#New(Ljava/util/HashMap;,0)#9
soot.baf.toolkits.base.PeepholeOptimizer.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#10
soot.baf.toolkits.base.PeepholeOptimizer.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#11
soot.baf.toolkits.base.PeepholeOptimizer.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/baf/toolkits/base/PeepholeOptimizer;,peepholeMap)#12
soot.baf.toolkits.base.PeepholeOptimizer.<init>(Lsoot/Singletons$Global;)V#Return(V)#13
soot.Singletons.soot_baf_toolkits_base_PeepholeOptimizer()Lsoot/baf/toolkits/base/PeepholeOptimizer;#Put(Lsoot/baf/toolkits/base/PeepholeOptimizer;,NONSTATIC,Lsoot/Singletons;,instance_soot_baf_toolkits_base_PeepholeOptimizer)#10
soot.Singletons.soot_baf_toolkits_base_PeepholeOptimizer()Lsoot/baf/toolkits/base/PeepholeOptimizer;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_baf_toolkits_base_PeepholeOptimizer()Lsoot/baf/toolkits/base/PeepholeOptimizer;#Get(Lsoot/baf/toolkits/base/PeepholeOptimizer;,NONSTATIC,Lsoot/Singletons;,instance_soot_baf_toolkits_base_PeepholeOptimizer)#12
soot.Singletons.soot_baf_toolkits_base_PeepholeOptimizer()Lsoot/baf/toolkits/base/PeepholeOptimizer;#Return(Ljava/lang/Object;)#13
soot.baf.toolkits.base.PeepholeOptimizer.v()Lsoot/baf/toolkits/base/PeepholeOptimizer;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#670
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#671
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#672
soot.PackManager.init()V#New(Lsoot/Transform;,0)#673
soot.PackManager.init()V#Dup(1,0)#674
soot.PackManager.init()V#Constant(Ljava/lang/String;,"bb.ule")#675
soot.PackManager.init()V#Invoke(STATIC,Lsoot/toolkits/scalar/UnusedLocalEliminator;,v,()Lsoot/toolkits/scalar/UnusedLocalEliminator;)#676
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#677
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#678
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#679
soot.PackManager.init()V#New(Lsoot/Transform;,0)#680
soot.PackManager.init()V#Dup(1,0)#681
soot.PackManager.init()V#Constant(Ljava/lang/String;,"bb.lp")#682
soot.PackManager.init()V#Invoke(STATIC,Lsoot/toolkits/scalar/LocalPacker;,v,()Lsoot/toolkits/scalar/LocalPacker;)#683
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#684
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#685
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,0)#686
soot.PackManager.init()V#New(Lsoot/BodyPack;,0)#687
soot.PackManager.init()V#Dup(1,0)#688
soot.PackManager.init()V#Constant(Ljava/lang/String;,"bop")#689
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/BodyPack;,<init>,(Ljava/lang/String;)V)#690
soot.PackManager.init()V#Dup(1,0)#691
soot.PackManager.init()V#LocalStore(Ljava/lang/Object;,1)#692
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/PackManager;,addPack,(Lsoot/Pack;)V)#693
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,0)#694
soot.PackManager.init()V#New(Lsoot/BodyPack;,0)#695
soot.PackManager.init()V#Dup(1,0)#696
soot.PackManager.init()V#Constant(Ljava/lang/String;,"tag")#697
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/BodyPack;,<init>,(Ljava/lang/String;)V)#698
soot.PackManager.init()V#Dup(1,0)#699
soot.PackManager.init()V#LocalStore(Ljava/lang/Object;,1)#700
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/PackManager;,addPack,(Lsoot/Pack;)V)#701
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#702
soot.PackManager.init()V#New(Lsoot/Transform;,0)#703
soot.PackManager.init()V#Dup(1,0)#704
soot.PackManager.init()V#Constant(Ljava/lang/String;,"tag.ln")#705
soot.PackManager.init()V#Invoke(STATIC,Lsoot/tagkit/LineNumberTagAggregator;,v,()Lsoot/tagkit/LineNumberTagAggregator;)#706
soot.tagkit.LineNumberTagAggregator.v()Lsoot/tagkit/LineNumberTagAggregator;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.tagkit.LineNumberTagAggregator.v()Lsoot/tagkit/LineNumberTagAggregator;#Invoke(VIRTUAL,Lsoot/G;,soot_tagkit_LineNumberTagAggregator,()Lsoot/tagkit/LineNumberTagAggregator;)#1
soot.Singletons.soot_tagkit_LineNumberTagAggregator()Lsoot/tagkit/LineNumberTagAggregator;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_tagkit_LineNumberTagAggregator()Lsoot/tagkit/LineNumberTagAggregator;#Get(Lsoot/tagkit/LineNumberTagAggregator;,NONSTATIC,Lsoot/Singletons;,instance_soot_tagkit_LineNumberTagAggregator)#1
soot.Singletons.soot_tagkit_LineNumberTagAggregator()Lsoot/tagkit/LineNumberTagAggregator;#Constant(L;,null)#2
soot.Singletons.soot_tagkit_LineNumberTagAggregator()Lsoot/tagkit/LineNumberTagAggregator;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_tagkit_LineNumberTagAggregator()Lsoot/tagkit/LineNumberTagAggregator;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_tagkit_LineNumberTagAggregator()Lsoot/tagkit/LineNumberTagAggregator;#New(Lsoot/tagkit/LineNumberTagAggregator;,0)#5
soot.Singletons.soot_tagkit_LineNumberTagAggregator()Lsoot/tagkit/LineNumberTagAggregator;#Dup(1,0)#6
soot.Singletons.soot_tagkit_LineNumberTagAggregator()Lsoot/tagkit/LineNumberTagAggregator;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_tagkit_LineNumberTagAggregator()Lsoot/tagkit/LineNumberTagAggregator;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_tagkit_LineNumberTagAggregator()Lsoot/tagkit/LineNumberTagAggregator;#Invoke(SPECIAL,Lsoot/tagkit/LineNumberTagAggregator;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.tagkit.LineNumberTagAggregator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.tagkit.LineNumberTagAggregator.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/tagkit/FirstTagAggregator;,<init>,()V)#1
soot.tagkit.FirstTagAggregator.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.tagkit.FirstTagAggregator.<init>()V#Invoke(SPECIAL,Lsoot/tagkit/TagAggregator;,<init>,()V)#1
soot.tagkit.TagAggregator.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.tagkit.TagAggregator.<init>()V#Invoke(SPECIAL,Lsoot/BodyTransformer;,<init>,()V)#1
soot.tagkit.TagAggregator.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
soot.tagkit.TagAggregator.<init>()V#New(Ljava/util/LinkedList;,0)#3
soot.tagkit.TagAggregator.<init>()V#Dup(1,0)#4
soot.tagkit.TagAggregator.<init>()V#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#5
soot.tagkit.TagAggregator.<init>()V#Put(Ljava/util/LinkedList;,NONSTATIC,Lsoot/tagkit/TagAggregator;,tags)#6
soot.tagkit.TagAggregator.<init>()V#LocalLoad(Ljava/lang/Object;,0)#7
soot.tagkit.TagAggregator.<init>()V#New(Ljava/util/LinkedList;,0)#8
soot.tagkit.TagAggregator.<init>()V#Dup(1,0)#9
soot.tagkit.TagAggregator.<init>()V#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#10
soot.tagkit.TagAggregator.<init>()V#Put(Ljava/util/LinkedList;,NONSTATIC,Lsoot/tagkit/TagAggregator;,units)#11
soot.tagkit.TagAggregator.<init>()V#Return(V)#12
soot.tagkit.FirstTagAggregator.<init>()V#Return(V)#2
soot.tagkit.LineNumberTagAggregator.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_tagkit_LineNumberTagAggregator()Lsoot/tagkit/LineNumberTagAggregator;#Put(Lsoot/tagkit/LineNumberTagAggregator;,NONSTATIC,Lsoot/Singletons;,instance_soot_tagkit_LineNumberTagAggregator)#10
soot.Singletons.soot_tagkit_LineNumberTagAggregator()Lsoot/tagkit/LineNumberTagAggregator;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_tagkit_LineNumberTagAggregator()Lsoot/tagkit/LineNumberTagAggregator;#Get(Lsoot/tagkit/LineNumberTagAggregator;,NONSTATIC,Lsoot/Singletons;,instance_soot_tagkit_LineNumberTagAggregator)#12
soot.Singletons.soot_tagkit_LineNumberTagAggregator()Lsoot/tagkit/LineNumberTagAggregator;#Return(Ljava/lang/Object;)#13
soot.tagkit.LineNumberTagAggregator.v()Lsoot/tagkit/LineNumberTagAggregator;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#707
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#708
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#709
soot.PackManager.init()V#New(Lsoot/Transform;,0)#710
soot.PackManager.init()V#Dup(1,0)#711
soot.PackManager.init()V#Constant(Ljava/lang/String;,"tag.an")#712
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/annotation/tags/ArrayNullTagAggregator;,v,()Lsoot/jimple/toolkits/annotation/tags/ArrayNullTagAggregator;)#713
soot.jimple.toolkits.annotation.tags.ArrayNullTagAggregator.v()Lsoot/jimple/toolkits/annotation/tags/ArrayNullTagAggregator;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.annotation.tags.ArrayNullTagAggregator.v()Lsoot/jimple/toolkits/annotation/tags/ArrayNullTagAggregator;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_annotation_tags_ArrayNullTagAggregator,()Lsoot/jimple/toolkits/annotation/tags/ArrayNullTagAggregator;)#1
soot.Singletons.soot_jimple_toolkits_annotation_tags_ArrayNullTagAggregator()Lsoot/jimple/toolkits/annotation/tags/ArrayNullTagAggregator;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_annotation_tags_ArrayNullTagAggregator()Lsoot/jimple/toolkits/annotation/tags/ArrayNullTagAggregator;#Get(Lsoot/jimple/toolkits/annotation/tags/ArrayNullTagAggregator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_tags_ArrayNullTagAggregator)#1
soot.Singletons.soot_jimple_toolkits_annotation_tags_ArrayNullTagAggregator()Lsoot/jimple/toolkits/annotation/tags/ArrayNullTagAggregator;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_annotation_tags_ArrayNullTagAggregator()Lsoot/jimple/toolkits/annotation/tags/ArrayNullTagAggregator;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_annotation_tags_ArrayNullTagAggregator()Lsoot/jimple/toolkits/annotation/tags/ArrayNullTagAggregator;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_annotation_tags_ArrayNullTagAggregator()Lsoot/jimple/toolkits/annotation/tags/ArrayNullTagAggregator;#New(Lsoot/jimple/toolkits/annotation/tags/ArrayNullTagAggregator;,0)#5
soot.Singletons.soot_jimple_toolkits_annotation_tags_ArrayNullTagAggregator()Lsoot/jimple/toolkits/annotation/tags/ArrayNullTagAggregator;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_annotation_tags_ArrayNullTagAggregator()Lsoot/jimple/toolkits/annotation/tags/ArrayNullTagAggregator;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_annotation_tags_ArrayNullTagAggregator()Lsoot/jimple/toolkits/annotation/tags/ArrayNullTagAggregator;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_annotation_tags_ArrayNullTagAggregator()Lsoot/jimple/toolkits/annotation/tags/ArrayNullTagAggregator;#Invoke(SPECIAL,Lsoot/jimple/toolkits/annotation/tags/ArrayNullTagAggregator;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.annotation.tags.ArrayNullTagAggregator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.annotation.tags.ArrayNullTagAggregator.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/tagkit/TagAggregator;,<init>,()V)#1
soot.jimple.toolkits.annotation.tags.ArrayNullTagAggregator.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_toolkits_annotation_tags_ArrayNullTagAggregator()Lsoot/jimple/toolkits/annotation/tags/ArrayNullTagAggregator;#Put(Lsoot/jimple/toolkits/annotation/tags/ArrayNullTagAggregator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_tags_ArrayNullTagAggregator)#10
soot.Singletons.soot_jimple_toolkits_annotation_tags_ArrayNullTagAggregator()Lsoot/jimple/toolkits/annotation/tags/ArrayNullTagAggregator;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_annotation_tags_ArrayNullTagAggregator()Lsoot/jimple/toolkits/annotation/tags/ArrayNullTagAggregator;#Get(Lsoot/jimple/toolkits/annotation/tags/ArrayNullTagAggregator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_tags_ArrayNullTagAggregator)#12
soot.Singletons.soot_jimple_toolkits_annotation_tags_ArrayNullTagAggregator()Lsoot/jimple/toolkits/annotation/tags/ArrayNullTagAggregator;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.annotation.tags.ArrayNullTagAggregator.v()Lsoot/jimple/toolkits/annotation/tags/ArrayNullTagAggregator;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#714
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#715
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#716
soot.PackManager.init()V#New(Lsoot/Transform;,0)#717
soot.PackManager.init()V#Dup(1,0)#718
soot.PackManager.init()V#Constant(Ljava/lang/String;,"tag.dep")#719
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/toolkits/pointer/DependenceTagAggregator;,v,()Lsoot/jimple/toolkits/pointer/DependenceTagAggregator;)#720
soot.jimple.toolkits.pointer.DependenceTagAggregator.v()Lsoot/jimple/toolkits/pointer/DependenceTagAggregator;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.pointer.DependenceTagAggregator.v()Lsoot/jimple/toolkits/pointer/DependenceTagAggregator;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_pointer_DependenceTagAggregator,()Lsoot/jimple/toolkits/pointer/DependenceTagAggregator;)#1
soot.Singletons.soot_jimple_toolkits_pointer_DependenceTagAggregator()Lsoot/jimple/toolkits/pointer/DependenceTagAggregator;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_pointer_DependenceTagAggregator()Lsoot/jimple/toolkits/pointer/DependenceTagAggregator;#Get(Lsoot/jimple/toolkits/pointer/DependenceTagAggregator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_pointer_DependenceTagAggregator)#1
soot.Singletons.soot_jimple_toolkits_pointer_DependenceTagAggregator()Lsoot/jimple/toolkits/pointer/DependenceTagAggregator;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_pointer_DependenceTagAggregator()Lsoot/jimple/toolkits/pointer/DependenceTagAggregator;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_pointer_DependenceTagAggregator()Lsoot/jimple/toolkits/pointer/DependenceTagAggregator;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_pointer_DependenceTagAggregator()Lsoot/jimple/toolkits/pointer/DependenceTagAggregator;#New(Lsoot/jimple/toolkits/pointer/DependenceTagAggregator;,0)#5
soot.Singletons.soot_jimple_toolkits_pointer_DependenceTagAggregator()Lsoot/jimple/toolkits/pointer/DependenceTagAggregator;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_pointer_DependenceTagAggregator()Lsoot/jimple/toolkits/pointer/DependenceTagAggregator;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_pointer_DependenceTagAggregator()Lsoot/jimple/toolkits/pointer/DependenceTagAggregator;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_pointer_DependenceTagAggregator()Lsoot/jimple/toolkits/pointer/DependenceTagAggregator;#Invoke(SPECIAL,Lsoot/jimple/toolkits/pointer/DependenceTagAggregator;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.pointer.DependenceTagAggregator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.pointer.DependenceTagAggregator.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/tagkit/ImportantTagAggregator;,<init>,()V)#1
soot.tagkit.ImportantTagAggregator.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.tagkit.ImportantTagAggregator.<init>()V#Invoke(SPECIAL,Lsoot/tagkit/TagAggregator;,<init>,()V)#1
soot.tagkit.ImportantTagAggregator.<init>()V#Return(V)#2
soot.jimple.toolkits.pointer.DependenceTagAggregator.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_toolkits_pointer_DependenceTagAggregator()Lsoot/jimple/toolkits/pointer/DependenceTagAggregator;#Put(Lsoot/jimple/toolkits/pointer/DependenceTagAggregator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_pointer_DependenceTagAggregator)#10
soot.Singletons.soot_jimple_toolkits_pointer_DependenceTagAggregator()Lsoot/jimple/toolkits/pointer/DependenceTagAggregator;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_pointer_DependenceTagAggregator()Lsoot/jimple/toolkits/pointer/DependenceTagAggregator;#Get(Lsoot/jimple/toolkits/pointer/DependenceTagAggregator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_pointer_DependenceTagAggregator)#12
soot.Singletons.soot_jimple_toolkits_pointer_DependenceTagAggregator()Lsoot/jimple/toolkits/pointer/DependenceTagAggregator;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.pointer.DependenceTagAggregator.v()Lsoot/jimple/toolkits/pointer/DependenceTagAggregator;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#721
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#722
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#723
soot.PackManager.init()V#New(Lsoot/Transform;,0)#724
soot.PackManager.init()V#Dup(1,0)#725
soot.PackManager.init()V#Constant(Ljava/lang/String;,"tag.fieldrw")#726
soot.PackManager.init()V#Invoke(STATIC,Lsoot/jimple/spark/fieldrw/FieldTagAggregator;,v,()Lsoot/jimple/spark/fieldrw/FieldTagAggregator;)#727
soot.jimple.spark.fieldrw.FieldTagAggregator.v()Lsoot/jimple/spark/fieldrw/FieldTagAggregator;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.spark.fieldrw.FieldTagAggregator.v()Lsoot/jimple/spark/fieldrw/FieldTagAggregator;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_spark_fieldrw_FieldTagAggregator,()Lsoot/jimple/spark/fieldrw/FieldTagAggregator;)#1
soot.Singletons.soot_jimple_spark_fieldrw_FieldTagAggregator()Lsoot/jimple/spark/fieldrw/FieldTagAggregator;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_spark_fieldrw_FieldTagAggregator()Lsoot/jimple/spark/fieldrw/FieldTagAggregator;#Get(Lsoot/jimple/spark/fieldrw/FieldTagAggregator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_spark_fieldrw_FieldTagAggregator)#1
soot.Singletons.soot_jimple_spark_fieldrw_FieldTagAggregator()Lsoot/jimple/spark/fieldrw/FieldTagAggregator;#Constant(L;,null)#2
soot.Singletons.soot_jimple_spark_fieldrw_FieldTagAggregator()Lsoot/jimple/spark/fieldrw/FieldTagAggregator;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_spark_fieldrw_FieldTagAggregator()Lsoot/jimple/spark/fieldrw/FieldTagAggregator;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_spark_fieldrw_FieldTagAggregator()Lsoot/jimple/spark/fieldrw/FieldTagAggregator;#New(Lsoot/jimple/spark/fieldrw/FieldTagAggregator;,0)#5
soot.Singletons.soot_jimple_spark_fieldrw_FieldTagAggregator()Lsoot/jimple/spark/fieldrw/FieldTagAggregator;#Dup(1,0)#6
soot.Singletons.soot_jimple_spark_fieldrw_FieldTagAggregator()Lsoot/jimple/spark/fieldrw/FieldTagAggregator;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_spark_fieldrw_FieldTagAggregator()Lsoot/jimple/spark/fieldrw/FieldTagAggregator;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_spark_fieldrw_FieldTagAggregator()Lsoot/jimple/spark/fieldrw/FieldTagAggregator;#Invoke(SPECIAL,Lsoot/jimple/spark/fieldrw/FieldTagAggregator;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.spark.fieldrw.FieldTagAggregator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.spark.fieldrw.FieldTagAggregator.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/tagkit/TagAggregator;,<init>,()V)#1
soot.jimple.spark.fieldrw.FieldTagAggregator.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_spark_fieldrw_FieldTagAggregator()Lsoot/jimple/spark/fieldrw/FieldTagAggregator;#Put(Lsoot/jimple/spark/fieldrw/FieldTagAggregator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_spark_fieldrw_FieldTagAggregator)#10
soot.Singletons.soot_jimple_spark_fieldrw_FieldTagAggregator()Lsoot/jimple/spark/fieldrw/FieldTagAggregator;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_spark_fieldrw_FieldTagAggregator()Lsoot/jimple/spark/fieldrw/FieldTagAggregator;#Get(Lsoot/jimple/spark/fieldrw/FieldTagAggregator;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_spark_fieldrw_FieldTagAggregator)#12
soot.Singletons.soot_jimple_spark_fieldrw_FieldTagAggregator()Lsoot/jimple/spark/fieldrw/FieldTagAggregator;#Return(Ljava/lang/Object;)#13
soot.jimple.spark.fieldrw.FieldTagAggregator.v()Lsoot/jimple/spark/fieldrw/FieldTagAggregator;#Return(Ljava/lang/Object;)#2
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#728
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#729
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,0)#730
soot.PackManager.init()V#New(Lsoot/BodyPack;,0)#731
soot.PackManager.init()V#Dup(1,0)#732
soot.PackManager.init()V#Constant(Ljava/lang/String;,"db")#733
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/BodyPack;,<init>,(Ljava/lang/String;)V)#734
soot.PackManager.init()V#Dup(1,0)#735
soot.PackManager.init()V#LocalStore(Ljava/lang/Object;,1)#736
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/PackManager;,addPack,(Lsoot/Pack;)V)#737
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#738
soot.PackManager.init()V#New(Lsoot/Transform;,0)#739
soot.PackManager.init()V#Dup(1,0)#740
soot.PackManager.init()V#Constant(Ljava/lang/String;,"db.transformations")#741
soot.PackManager.init()V#Constant(L;,null)#742
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#743
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#744
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#745
soot.PackManager.init()V#New(Lsoot/Transform;,0)#746
soot.PackManager.init()V#Dup(1,0)#747
soot.PackManager.init()V#Constant(Ljava/lang/String;,"db.renamer")#748
soot.PackManager.init()V#Constant(L;,null)#749
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#750
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#751
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#752
soot.PackManager.init()V#New(Lsoot/Transform;,0)#753
soot.PackManager.init()V#Dup(1,0)#754
soot.PackManager.init()V#Constant(Ljava/lang/String;,"db.deobfuscate")#755
soot.PackManager.init()V#Constant(L;,null)#756
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#757
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#758
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,1)#759
soot.PackManager.init()V#New(Lsoot/Transform;,0)#760
soot.PackManager.init()V#Dup(1,0)#761
soot.PackManager.init()V#Constant(Ljava/lang/String;,"db.force-recompile")#762
soot.PackManager.init()V#Constant(L;,null)#763
soot.PackManager.init()V#Invoke(SPECIAL,Lsoot/Transform;,<init>,(Ljava/lang/String;Lsoot/Transformer;)V)#764
soot.PackManager.init()V#Invoke(VIRTUAL,Lsoot/Pack;,add,(Lsoot/Transform;)V)#765
soot.PackManager.init()V#LocalLoad(Ljava/lang/Object;,0)#766
soot.PackManager.init()V#Constant(I,1)#767
soot.PackManager.init()V#Put(Z,NONSTATIC,Lsoot/PackManager;,onlyStandardPacks)#768
soot.PackManager.init()V#Return(V)#769
soot.PackManager.<init>(Lsoot/Singletons$Global;)V#Return(V)#23
soot.Singletons.soot_PackManager()Lsoot/PackManager;#Put(Lsoot/PackManager;,NONSTATIC,Lsoot/Singletons;,instance_soot_PackManager)#10
soot.Singletons.soot_PackManager()Lsoot/PackManager;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_PackManager()Lsoot/PackManager;#Get(Lsoot/PackManager;,NONSTATIC,Lsoot/Singletons;,instance_soot_PackManager)#12
soot.Singletons.soot_PackManager()Lsoot/PackManager;#Return(Ljava/lang/Object;)#13
soot.PackManager.v()Lsoot/PackManager;#Return(Ljava/lang/Object;)#2
soot.Main.processCmdLine([Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/PackManager;,onlyStandardPacks,()Z)#12
soot.PackManager.onlyStandardPacks()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.PackManager.onlyStandardPacks()Z#Get(Z,NONSTATIC,Lsoot/PackManager;,onlyStandardPacks)#1
soot.PackManager.onlyStandardPacks()Z#Return(I)#2
soot.Main.processCmdLine([Ljava/lang/String;)V#Constant(I,0)#13
soot.Main.processCmdLine([Ljava/lang/String;)V#ConditionalBranch(I,eq,48)#14
soot.Main.processCmdLine([Ljava/lang/String;)V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#15
soot.Main.processCmdLine([Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/PackManager;,allPacks,()Ljava/util/Collection;)#16
soot.Main.processCmdLine([Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Collection;,iterator,()Ljava/util/Iterator;)#17
soot.Main.processCmdLine([Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,3)#18
soot.Main.processCmdLine([Ljava/lang/String;)V#Goto(44)#19
soot.Main.processCmdLine([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#44
soot.Main.processCmdLine([Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#45
soot.Main.processCmdLine([Ljava/lang/String;)V#Constant(I,0)#46
soot.Main.processCmdLine([Ljava/lang/String;)V#ConditionalBranch(I,ne,20)#47
soot.Main.processCmdLine([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#20
soot.Main.processCmdLine([Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#21
soot.Main.processCmdLine([Ljava/lang/String;)V#CheckCast(Lsoot/Pack;)#22
soot.Main.processCmdLine([Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,2)#23
soot.Main.processCmdLine([Ljava/lang/String;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#24
soot.Main.processCmdLine([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#25
soot.Main.processCmdLine([Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/Pack;,getPhaseName,()Ljava/lang/String;)#26
soot.Main.processCmdLine([Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/options/Options;,warnForeignPhase,(Ljava/lang/String;)V)#27
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jb")#1
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#2
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#3
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,6)#4
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#5
soot.Main.processCmdLine([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#28
soot.Main.processCmdLine([Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/Pack;,iterator,()Ljava/util/Iterator;)#29
soot.Main.processCmdLine([Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,4)#30
soot.Main.processCmdLine([Ljava/lang/String;)V#Goto(40)#31
soot.Main.processCmdLine([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,4)#40
soot.Main.processCmdLine([Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#41
soot.Main.processCmdLine([Ljava/lang/String;)V#Constant(I,0)#42
soot.Main.processCmdLine([Ljava/lang/String;)V#ConditionalBranch(I,ne,32)#43
soot.Main.processCmdLine([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,4)#32
soot.Main.processCmdLine([Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#33
soot.Main.processCmdLine([Ljava/lang/String;)V#CheckCast(Lsoot/Transform;)#34
soot.Main.processCmdLine([Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,5)#35
soot.Main.processCmdLine([Ljava/lang/String;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#36
soot.Main.processCmdLine([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,5)#37
soot.Main.processCmdLine([Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/Transform;,getPhaseName,()Ljava/lang/String;)#38
soot.Main.processCmdLine([Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/options/Options;,warnForeignPhase,(Ljava/lang/String;)V)#39
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#6
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jb.ls")#7
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#8
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#9
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,12)#10
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#12
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jb.a")#13
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#14
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#15
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,18)#16
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#18
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jb.ule")#19
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#20
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#21
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,24)#22
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#24
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jb.tr")#25
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#26
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#27
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,30)#28
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#30
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jb.ulp")#31
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#32
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#33
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,36)#34
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#36
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jb.lns")#37
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#38
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#39
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,42)#40
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#42
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jb.cp")#43
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#44
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#45
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,48)#46
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#48
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jb.dae")#49
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#50
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#51
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,54)#52
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#54
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jb.cp-ule")#55
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#56
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#57
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,60)#58
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#60
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jb.lp")#61
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#62
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#63
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,66)#64
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#66
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jb.ne")#67
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#68
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#69
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,72)#70
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#72
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jb.uce")#73
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#74
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#75
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,78)#76
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#78
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jb.tt")#79
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#80
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#81
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,84)#82
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#83
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#11
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#17
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#23
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#29
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#35
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#41
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#47
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#53
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#59
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#65
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#71
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#77
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#84
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jj")#85
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#86
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#87
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,90)#88
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#89
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#90
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jj.ls")#91
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#92
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#93
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,96)#94
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#95
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#96
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jj.a")#97
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#98
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#99
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,102)#100
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#101
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#102
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jj.ule")#103
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#104
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#105
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,108)#106
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#107
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#108
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jj.tr")#109
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#110
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#111
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,114)#112
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#114
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jj.ulp")#115
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#116
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#117
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,120)#118
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#120
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jj.lns")#121
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#122
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#123
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,126)#124
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#126
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jj.cp")#127
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#128
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#129
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,132)#130
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#132
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jj.dae")#133
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#134
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#135
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,138)#136
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#138
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jj.cp-ule")#139
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#140
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#141
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,144)#142
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#144
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jj.lp")#145
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#146
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#147
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,150)#148
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#150
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jj.ne")#151
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#152
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#153
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,156)#154
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#155
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#113
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#119
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#125
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#131
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#137
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#143
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#149
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#156
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jj.uce")#157
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#158
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#159
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,162)#160
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#161
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#162
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"wjpp")#163
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#164
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#165
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,168)#166
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#167
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#168
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"wspp")#169
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#170
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#171
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,174)#172
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#173
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#174
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"cg")#175
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#176
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#177
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,180)#178
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#179
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#180
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"cg.cha")#181
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#182
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#183
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,186)#184
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#185
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#186
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"cg.spark")#187
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#188
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#189
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,192)#190
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#191
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#192
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"cg.paddle")#193
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#194
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#195
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,198)#196
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#197
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#198
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"wstp")#199
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#200
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#201
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,204)#202
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#203
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#204
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"wsop")#205
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#206
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#207
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,210)#208
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#209
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#210
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"wjtp")#211
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#212
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#213
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,216)#214
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#215
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#216
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"wjtp.mhp")#217
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#218
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#219
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,222)#220
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#221
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#222
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"wjtp.tn")#223
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#224
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#225
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,228)#226
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#227
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#228
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"wjop")#229
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#230
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#231
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,234)#232
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#233
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#234
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"wjop.smb")#235
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#236
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#237
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,240)#238
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#239
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#240
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"wjop.si")#241
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#242
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#243
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,246)#244
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#245
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#246
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"wjap")#247
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#248
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#249
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,252)#250
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#251
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#252
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"wjap.ra")#253
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#254
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#255
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,258)#256
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#257
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#258
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"wjap.umt")#259
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#260
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#261
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,264)#262
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#263
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#264
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"wjap.uft")#265
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#266
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#267
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,270)#268
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#269
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#270
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"wjap.tqt")#271
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#272
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#273
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,276)#274
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#275
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#276
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"wjap.cgg")#277
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#278
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#279
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,282)#280
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#281
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#282
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"wjap.purity")#283
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#284
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#285
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,288)#286
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#287
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#288
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"shimple")#289
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#290
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#291
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,294)#292
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#293
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#294
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"stp")#295
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#296
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#297
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,300)#298
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#299
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#300
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"sop")#301
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#302
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#303
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,306)#304
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#305
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#306
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"sop.cpf")#307
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#308
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#309
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,312)#310
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#311
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#312
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jtp")#313
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#314
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#315
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,318)#316
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#317
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#318
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jop")#319
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#320
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#321
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,324)#322
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#323
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#324
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jop.cse")#325
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#326
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#327
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,330)#328
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#329
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#330
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jop.bcm")#331
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#332
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#333
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,336)#334
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#335
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#336
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jop.lcm")#337
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#338
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#339
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,342)#340
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#341
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#342
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jop.cp")#343
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#344
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#345
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,348)#346
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#347
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#348
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jop.cpf")#349
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#350
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#351
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,354)#352
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#353
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#354
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jop.cbf")#355
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#356
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#357
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,360)#358
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#359
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#360
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jop.dae")#361
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#362
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#363
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,366)#364
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#365
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#366
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jop.nce")#367
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#368
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#369
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,372)#370
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#371
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#372
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jop.uce1")#373
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#374
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#375
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,378)#376
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#377
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#378
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jop.ubf1")#379
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#380
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#381
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,384)#382
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#383
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#384
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jop.uce2")#385
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#386
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#387
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,390)#388
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#389
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#390
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jop.ubf2")#391
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#392
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#393
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,396)#394
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#395
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#396
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jop.ule")#397
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#398
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#399
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,402)#400
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#401
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#402
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jap")#403
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#404
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#405
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,408)#406
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#407
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#408
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jap.npc")#409
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#410
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#411
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,414)#412
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#413
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#414
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jap.npcolorer")#415
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#416
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#417
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,420)#418
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#419
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#420
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jap.abc")#421
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#422
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#423
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,426)#424
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#425
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#426
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jap.profiling")#427
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#428
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#429
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,432)#430
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#431
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#432
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jap.sea")#433
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#434
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#435
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,438)#436
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#437
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#438
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jap.fieldrw")#439
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#440
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#441
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,444)#442
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#443
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#444
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jap.cgtagger")#445
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#446
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#447
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,450)#448
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#449
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#450
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jap.parity")#451
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#452
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#453
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,456)#454
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#455
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#456
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jap.pat")#457
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#458
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#459
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,462)#460
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#461
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#462
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jap.lvtagger")#463
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#464
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#465
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,468)#466
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#468
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jap.rdtagger")#469
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#470
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#471
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,474)#472
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#473
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#467
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#474
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jap.che")#475
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#476
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#477
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,480)#478
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#479
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#480
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jap.umt")#481
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#482
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#483
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,486)#484
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#485
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#486
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jap.lit")#487
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#488
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#489
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,492)#490
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#491
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#492
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jap.aet")#493
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#494
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#495
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,498)#496
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#497
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#498
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"jap.dmt")#499
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#500
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#501
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,504)#502
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#503
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#504
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"gb")#505
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#506
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#507
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,510)#508
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#509
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#510
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"gb.a1")#511
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#512
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#513
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,516)#514
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#515
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#516
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"gb.cf")#517
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#518
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#519
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,522)#520
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#521
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#522
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"gb.a2")#523
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#524
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#525
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,528)#526
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#527
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#528
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"gb.ule")#529
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#530
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#531
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,534)#532
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#533
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#534
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"gop")#535
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#536
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#537
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,540)#538
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#539
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#540
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"bb")#541
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#542
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#543
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,546)#544
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#545
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#546
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"bb.lso")#547
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#548
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#549
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,552)#550
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#551
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#552
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"bb.pho")#553
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#554
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#555
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,558)#556
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#557
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#558
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"bb.ule")#559
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#560
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#561
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,564)#562
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#563
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#564
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"bb.lp")#565
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#566
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#567
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,570)#568
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#569
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#570
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"bop")#571
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#572
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#573
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,576)#574
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#575
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#576
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"tag")#577
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#578
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#579
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,582)#580
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#581
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#582
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"tag.ln")#583
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#584
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#585
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,588)#586
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#587
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#588
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"tag.an")#589
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#590
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#591
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,594)#592
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#593
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#594
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"tag.dep")#595
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#596
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#597
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,600)#598
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#599
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#600
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"tag.fieldrw")#601
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#602
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#603
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,606)#604
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#605
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#606
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"db")#607
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#608
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#609
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,612)#610
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#611
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#612
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"db.transformations")#613
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#614
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#615
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,618)#616
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#617
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#618
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"db.renamer")#619
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#620
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#621
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,624)#622
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#623
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#624
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"db.deobfuscate")#625
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#626
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#627
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,630)#628
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#629
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#630
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"db.force-recompile")#631
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#632
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Constant(I,0)#633
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#ConditionalBranch(I,eq,636)#634
soot.options.Options.warnForeignPhase(Ljava/lang/String;)V#Return(V)#635
soot.Main.processCmdLine([Ljava/lang/String;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#48
soot.Main.processCmdLine([Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/options/Options;,warnNonexistentPhase,()V)#49
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#0
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jb")#1
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#2
soot.PackManager.hasPhase(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.PackManager.hasPhase(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#1
soot.PackManager.hasPhase(Ljava/lang/String;)Z#Invoke(VIRTUAL,Lsoot/PackManager;,getPhase,(Ljava/lang/String;)Lsoot/HasPhaseOptions;)#2
soot.PackManager.hasPhase(Ljava/lang/String;)Z#Constant(L;,null)#3
soot.PackManager.hasPhase(Ljava/lang/String;)Z#ConditionalBranch(Ljava/lang/Object;,eq,7)#4
soot.PackManager.hasPhase(Ljava/lang/String;)Z#Constant(I,1)#5
soot.PackManager.hasPhase(Ljava/lang/String;)Z#Return(I)#6
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#3
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,9)#4
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#9
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jb.ls")#10
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#11
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#12
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,18)#13
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#18
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jb.a")#19
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#20
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#21
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,27)#22
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#27
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jb.ule")#28
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#29
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#30
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,36)#31
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#36
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jb.tr")#37
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#38
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#39
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,45)#40
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#45
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jb.ulp")#46
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#47
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#48
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,54)#49
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#54
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jb.lns")#55
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#56
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#57
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,63)#58
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#63
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jb.cp")#64
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#65
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#66
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,72)#67
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#72
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jb.dae")#73
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#74
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#75
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,81)#76
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#81
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jb.cp-ule")#82
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#83
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#84
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,90)#85
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#90
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jb.lp")#91
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#92
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#93
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,99)#94
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#99
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jb.ne")#100
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#101
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#102
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,108)#103
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#108
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jb.uce")#109
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#110
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#111
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,117)#112
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#117
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jb.tt")#118
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#119
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#120
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,126)#121
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#126
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jj")#127
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#128
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#129
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,135)#130
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#135
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jj.ls")#136
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#137
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#138
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,144)#139
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#144
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jj.a")#145
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#146
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#147
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,153)#148
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#153
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jj.ule")#154
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#155
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#156
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,162)#157
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#162
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jj.tr")#163
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#164
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#165
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,171)#166
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#171
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jj.ulp")#172
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#173
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#174
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,180)#175
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#180
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jj.lns")#181
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#182
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#183
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,189)#184
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#189
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jj.cp")#190
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#191
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#192
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,198)#193
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#198
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jj.dae")#199
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#200
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#201
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,207)#202
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#207
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jj.cp-ule")#208
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#209
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#210
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,216)#211
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#216
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jj.lp")#217
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#218
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#219
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,225)#220
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#225
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jj.ne")#226
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#227
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#228
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,234)#229
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#234
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jj.uce")#235
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#236
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#237
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,243)#238
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#243
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"wjpp")#244
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#245
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#246
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,252)#247
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#252
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"wspp")#253
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#254
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#255
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,261)#256
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#261
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"cg")#262
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#263
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#264
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,270)#265
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#270
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"cg.cha")#271
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#272
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#273
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,279)#274
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#279
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"cg.spark")#280
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#281
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#282
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,288)#283
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#288
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"cg.paddle")#289
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#290
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#291
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,297)#292
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#297
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"wstp")#298
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#299
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#300
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,306)#301
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#306
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"wsop")#307
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#308
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#309
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,315)#310
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#315
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"wjtp")#316
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#317
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#318
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,324)#319
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#324
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"wjtp.mhp")#325
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#326
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#327
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,333)#328
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#333
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"wjtp.tn")#334
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#335
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#336
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,342)#337
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#342
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"wjop")#343
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#344
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#345
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,351)#346
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#351
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"wjop.smb")#352
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#353
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#354
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,360)#355
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#360
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"wjop.si")#361
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#362
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#363
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,369)#364
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#369
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"wjap")#370
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#371
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#372
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,378)#373
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#378
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"wjap.ra")#379
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#380
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#381
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,387)#382
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#387
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"wjap.umt")#388
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#389
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#390
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,396)#391
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#396
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"wjap.uft")#397
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#398
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#399
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,405)#400
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#405
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"wjap.tqt")#406
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#407
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#408
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,414)#409
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#414
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"wjap.cgg")#415
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#416
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#417
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,423)#418
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#423
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"wjap.purity")#424
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#425
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#426
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,432)#427
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#432
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"shimple")#433
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#434
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#435
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,441)#436
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#441
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"stp")#442
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#443
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#444
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,450)#445
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#450
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"sop")#451
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#452
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#453
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,459)#454
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#459
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"sop.cpf")#460
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#461
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#462
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,468)#463
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#468
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jtp")#469
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#470
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#471
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,477)#472
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#477
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jop")#478
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#479
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#480
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,486)#481
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#486
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jop.cse")#487
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#488
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#489
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,495)#490
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#495
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jop.bcm")#496
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#497
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#498
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,504)#499
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#504
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jop.lcm")#505
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#506
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#507
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,513)#508
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#513
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jop.cp")#514
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#515
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#516
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,522)#517
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#522
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jop.cpf")#523
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#524
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#525
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,531)#526
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#531
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jop.cbf")#532
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#533
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#534
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,540)#535
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#540
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jop.dae")#541
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#542
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#543
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,549)#544
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#549
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jop.nce")#550
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#551
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#552
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,558)#553
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#558
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jop.uce1")#559
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#560
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#561
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,567)#562
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#567
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jop.ubf1")#568
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#569
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#570
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,576)#571
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#576
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jop.uce2")#577
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#578
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#579
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,585)#580
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#585
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jop.ubf2")#586
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#587
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#588
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,594)#589
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#594
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jop.ule")#595
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#596
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#597
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,603)#598
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#603
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jap")#604
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#605
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#606
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,612)#607
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#612
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jap.npc")#613
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#614
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#615
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,621)#616
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#621
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jap.npcolorer")#622
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#623
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#624
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,630)#625
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#630
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jap.abc")#631
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#632
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#633
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,639)#634
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#639
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jap.profiling")#640
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#641
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#642
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,648)#643
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#648
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jap.sea")#649
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#650
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#651
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,657)#652
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#657
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jap.fieldrw")#658
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#659
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#660
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,666)#661
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#666
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jap.cgtagger")#667
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#668
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#669
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,675)#670
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#675
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jap.parity")#676
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#677
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#678
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,684)#679
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#684
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jap.pat")#685
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#686
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#687
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,693)#688
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#693
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jap.lvtagger")#694
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#695
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#696
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,702)#697
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#702
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jap.rdtagger")#703
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#704
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#705
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,711)#706
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#711
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jap.che")#712
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#713
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#714
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,720)#715
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#720
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jap.umt")#721
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#722
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#723
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,729)#724
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#729
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jap.lit")#730
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#731
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#732
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,738)#733
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#738
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jap.aet")#739
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#740
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#741
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,747)#742
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#747
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"jap.dmt")#748
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#749
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#750
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,756)#751
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#756
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"gb")#757
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#758
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#759
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,765)#760
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#765
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"gb.a1")#766
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#767
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#768
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,774)#769
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#774
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"gb.cf")#775
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#776
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#777
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,783)#778
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#783
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"gb.a2")#784
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#785
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#786
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,792)#787
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#792
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"gb.ule")#793
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#794
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#795
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,801)#796
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#801
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"gop")#802
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#803
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#804
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,810)#805
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#810
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"bb")#811
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#812
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#813
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,819)#814
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#819
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"bb.lso")#820
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#821
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#822
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,828)#823
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#828
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"bb.pho")#829
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#830
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#831
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,837)#832
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#837
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"bb.ule")#838
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#839
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#840
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,846)#841
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#846
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"bb.lp")#847
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#848
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#849
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,855)#850
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#855
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"bop")#856
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#857
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#858
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,864)#859
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#864
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"tag")#865
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#866
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#867
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,873)#868
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#873
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"tag.ln")#874
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#875
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#876
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,882)#877
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#882
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"tag.an")#883
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#884
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#885
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,891)#886
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#891
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"tag.dep")#892
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#893
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#894
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,900)#895
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#900
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"tag.fieldrw")#901
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#902
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#903
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,909)#904
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#909
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"db")#910
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#911
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#912
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,918)#913
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#918
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"db.transformations")#919
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#920
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#921
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,927)#922
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#927
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"db.renamer")#928
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#929
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#930
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,936)#931
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#936
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"db.deobfuscate")#937
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#938
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#939
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,945)#940
soot.options.Options.warnNonexistentPhase()V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#945
soot.options.Options.warnNonexistentPhase()V#Constant(Ljava/lang/String;,"db.force-recompile")#946
soot.options.Options.warnNonexistentPhase()V#Invoke(VIRTUAL,Lsoot/PackManager;,hasPhase,(Ljava/lang/String;)Z)#947
soot.options.Options.warnNonexistentPhase()V#Constant(I,0)#948
soot.options.Options.warnNonexistentPhase()V#ConditionalBranch(I,ne,954)#949
soot.options.Options.warnNonexistentPhase()V#Return(V)#954
soot.Main.processCmdLine([Ljava/lang/String;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#50
soot.Main.processCmdLine([Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/options/Options;,help,()Z)#51
soot.options.Options.help()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.help()Z#Get(Z,NONSTATIC,Lsoot/options/Options;,help)#1
soot.options.Options.help()Z#Return(I)#2
soot.Main.processCmdLine([Ljava/lang/String;)V#Constant(I,0)#52
soot.Main.processCmdLine([Ljava/lang/String;)V#ConditionalBranch(I,eq,64)#53
soot.Main.processCmdLine([Ljava/lang/String;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#64
soot.Main.processCmdLine([Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/options/Options;,phase_list,()Z)#65
soot.options.Options.phase_list()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.phase_list()Z#Get(Z,NONSTATIC,Lsoot/options/Options;,phase_list)#1
soot.options.Options.phase_list()Z#Return(I)#2
soot.Main.processCmdLine([Ljava/lang/String;)V#Constant(I,0)#66
soot.Main.processCmdLine([Ljava/lang/String;)V#ConditionalBranch(I,eq,78)#67
soot.Main.processCmdLine([Ljava/lang/String;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#78
soot.Main.processCmdLine([Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/options/Options;,phase_help,()Ljava/util/List;)#79
soot.options.Options.phase_help()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.phase_help()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lsoot/options/Options;,phase_help)#1
soot.options.Options.phase_help()Ljava/util/List;#Constant(L;,null)#2
soot.options.Options.phase_help()Ljava/util/List;#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
soot.options.Options.phase_help()Ljava/util/List;#Get(Ljava/util/List;,STATIC,Ljava/util/Collections;,EMPTY_LIST)#4
soot.options.Options.phase_help()Ljava/util/List;#Return(Ljava/lang/Object;)#5
soot.Main.processCmdLine([Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,isEmpty,()Z)#80
soot.Main.processCmdLine([Ljava/lang/String;)V#Constant(I,0)#81
soot.Main.processCmdLine([Ljava/lang/String;)V#ConditionalBranch(I,ne,107)#82
soot.Main.processCmdLine([Ljava/lang/String;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#107
soot.Main.processCmdLine([Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/options/Options;,unfriendly_mode,()Z)#108
soot.options.Options.unfriendly_mode()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.unfriendly_mode()Z#Get(Z,NONSTATIC,Lsoot/options/Options;,unfriendly_mode)#1
soot.options.Options.unfriendly_mode()Z#Return(I)#2
soot.Main.processCmdLine([Ljava/lang/String;)V#Constant(I,0)#109
soot.Main.processCmdLine([Ljava/lang/String;)V#ConditionalBranch(I,ne,115)#110
soot.Main.processCmdLine([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#111
soot.Main.processCmdLine([Ljava/lang/String;)V#ArrayLength()#112
soot.Main.processCmdLine([Ljava/lang/String;)V#Constant(I,0)#113
soot.Main.processCmdLine([Ljava/lang/String;)V#ConditionalBranch(I,eq,119)#114
soot.Main.processCmdLine([Ljava/lang/String;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#115
soot.Main.processCmdLine([Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/options/Options;,version,()Z)#116
soot.options.Options.version()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.version()Z#Get(Z,NONSTATIC,Lsoot/options/Options;,version)#1
soot.options.Options.version()Z#Return(I)#2
soot.Main.processCmdLine([Ljava/lang/String;)V#Constant(I,0)#117
soot.Main.processCmdLine([Ljava/lang/String;)V#ConditionalBranch(I,eq,126)#118
soot.Main.processCmdLine([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#126
soot.Main.processCmdLine([Ljava/lang/String;)V#Invoke(SPECIAL,Lsoot/Main;,postCmdLineCheck,()V)#127
soot.Main.postCmdLineCheck()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#0
soot.Main.postCmdLineCheck()V#Invoke(VIRTUAL,Lsoot/options/Options;,classes,()Ljava/util/LinkedList;)#1
soot.options.Options.classes()Ljava/util/LinkedList;#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.classes()Ljava/util/LinkedList;#Invoke(SPECIAL,Lsoot/options/OptionsBase;,classes,()Ljava/util/LinkedList;)#1
soot.options.OptionsBase.classes()Ljava/util/LinkedList;#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.OptionsBase.classes()Ljava/util/LinkedList;#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/options/OptionsBase;,classes)#1
soot.options.OptionsBase.classes()Ljava/util/LinkedList;#Return(Ljava/lang/Object;)#2
soot.options.Options.classes()Ljava/util/LinkedList;#Return(Ljava/lang/Object;)#2
soot.Main.postCmdLineCheck()V#Invoke(VIRTUAL,Ljava/util/LinkedList;,isEmpty,()Z)#2
soot.Main.postCmdLineCheck()V#Constant(I,0)#3
soot.Main.postCmdLineCheck()V#ConditionalBranch(I,eq,16)#4
soot.Main.postCmdLineCheck()V#Return(V)#16
soot.Main.processCmdLine([Ljava/lang/String;)V#Return(V)#128
soot.Main.run([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#15
soot.Main.run([Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/Main;,autoSetOptions,()V)#16
soot.Main.autoSetOptions()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#0
soot.Main.autoSetOptions()V#Invoke(VIRTUAL,Lsoot/options/Options;,no_bodies_for_excluded,()Z)#1
soot.options.Options.no_bodies_for_excluded()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.no_bodies_for_excluded()Z#Get(Z,NONSTATIC,Lsoot/options/Options;,no_bodies_for_excluded)#1
soot.options.Options.no_bodies_for_excluded()Z#Return(I)#2
soot.Main.autoSetOptions()V#Constant(I,0)#2
soot.Main.autoSetOptions()V#ConditionalBranch(I,eq,7)#3
soot.Main.autoSetOptions()V#New(Lsoot/options/CGOptions;,0)#7
soot.Main.autoSetOptions()V#Dup(1,0)#8
soot.Main.autoSetOptions()V#Invoke(STATIC,Lsoot/PhaseOptions;,v,()Lsoot/PhaseOptions;)#9
soot.Main.autoSetOptions()V#Constant(Ljava/lang/String;,"cg")#10
soot.Main.autoSetOptions()V#Invoke(VIRTUAL,Lsoot/PhaseOptions;,getPhaseOptions,(Ljava/lang/String;)Ljava/util/Map;)#11
soot.PhaseOptions.getPhaseOptions(Ljava/lang/String;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#0
soot.PhaseOptions.getPhaseOptions(Ljava/lang/String;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#1
soot.PhaseOptions.getPhaseOptions(Ljava/lang/String;)Ljava/util/Map;#Invoke(VIRTUAL,Lsoot/PhaseOptions;,getPM,()Lsoot/PackManager;)#2
soot.PhaseOptions.getPhaseOptions(Ljava/lang/String;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,1)#3
soot.PhaseOptions.getPhaseOptions(Ljava/lang/String;)Ljava/util/Map;#Invoke(VIRTUAL,Lsoot/PackManager;,getPhase,(Ljava/lang/String;)Lsoot/HasPhaseOptions;)#4
soot.PhaseOptions.getPhaseOptions(Ljava/lang/String;)Ljava/util/Map;#Invoke(VIRTUAL,Lsoot/PhaseOptions;,getPhaseOptions,(Lsoot/HasPhaseOptions;)Ljava/util/Map;)#5
soot.Pack.getDefaultOptions()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Pack.getDefaultOptions()Ljava/lang/String;#Invoke(VIRTUAL,Lsoot/Pack;,getPhaseName,()Ljava/lang/String;)#1
soot.Pack.getDefaultOptions()Ljava/lang/String;#Invoke(STATIC,Lsoot/options/Options;,getDefaultOptionsForPhase,(Ljava/lang/String;)Ljava/lang/String;)#2
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:true safe-forname:false safe-newinstance:false verbose:false jdkver:3 all-reachable:false implicit-entry:true trim-clinit:true guards:ignore ")#208
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#209
soot.Pack.getDefaultOptions()Ljava/lang/String;#Return(Ljava/lang/Object;)#3
soot.PhaseOptions.getPhaseOptions(Ljava/lang/String;)Ljava/util/Map;#Return(Ljava/lang/Object;)#6
soot.Main.autoSetOptions()V#Invoke(SPECIAL,Lsoot/options/CGOptions;,<init>,(Ljava/util/Map;)V)#12
soot.options.CGOptions.<init>(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.CGOptions.<init>(Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.options.CGOptions.<init>(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.options.CGOptions.<init>(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.options.CGOptions.<init>(Ljava/util/Map;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/options/CGOptions;,options)#4
soot.options.CGOptions.<init>(Ljava/util/Map;)V#Return(V)#5
soot.Main.autoSetOptions()V#LocalStore(Ljava/lang/Object;,1)#13
soot.Main.autoSetOptions()V#LocalLoad(Ljava/lang/Object;,1)#14
soot.Main.autoSetOptions()V#Invoke(VIRTUAL,Lsoot/options/CGOptions;,reflection_log,()Ljava/lang/String;)#15
soot.options.CGOptions.reflection_log()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.CGOptions.reflection_log()Ljava/lang/String;#Get(Ljava/util/Map;,NONSTATIC,Lsoot/options/CGOptions;,options)#1
soot.options.CGOptions.reflection_log()Ljava/lang/String;#Constant(Ljava/lang/String;,"reflection-log")#2
soot.options.CGOptions.reflection_log()Ljava/lang/String;#Invoke(STATIC,Lsoot/PhaseOptions;,getString,(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;)#3
soot.PhaseOptions.getString(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.PhaseOptions.getString(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#1
soot.PhaseOptions.getString(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#2
soot.PhaseOptions.getString(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#3
soot.PhaseOptions.getString(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,10)#4
soot.PhaseOptions.getString(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"")#10
soot.PhaseOptions.getString(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#11
soot.options.CGOptions.reflection_log()Ljava/lang/String;#Return(Ljava/lang/Object;)#4
soot.Main.autoSetOptions()V#LocalStore(Ljava/lang/Object;,2)#16
soot.Main.autoSetOptions()V#LocalLoad(Ljava/lang/Object;,2)#17
soot.Main.autoSetOptions()V#Constant(L;,null)#18
soot.Main.autoSetOptions()V#ConditionalBranch(Ljava/lang/Object;,eq,27)#19
soot.Main.autoSetOptions()V#LocalLoad(Ljava/lang/Object;,2)#20
soot.Main.autoSetOptions()V#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#21
soot.Main.autoSetOptions()V#Constant(I,0)#22
soot.Main.autoSetOptions()V#ConditionalBranch(I,le,27)#23
soot.Main.autoSetOptions()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#27
soot.Main.autoSetOptions()V#Invoke(VIRTUAL,Lsoot/options/Options;,allow_phantom_refs,()Z)#28
soot.options.Options.allow_phantom_refs()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.allow_phantom_refs()Z#Get(Z,NONSTATIC,Lsoot/options/Options;,allow_phantom_refs)#1
soot.options.Options.allow_phantom_refs()Z#Return(I)#2
soot.Main.autoSetOptions()V#Constant(I,0)#29
soot.Main.autoSetOptions()V#ConditionalBranch(I,eq,36)#30
soot.Main.autoSetOptions()V#Return(V)#36
soot.Main.run([Ljava/lang/String;)V#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#17
soot.Main.run([Ljava/lang/String;)V#Get(Ljava/io/PrintStream;,NONSTATIC,Lsoot/G;,out)#18
soot.Main.run([Ljava/lang/String;)V#New(Ljava/lang/StringBuilder;,0)#19
soot.Main.run([Ljava/lang/String;)V#Dup(1,0)#20
soot.Main.run([Ljava/lang/String;)V#Constant(Ljava/lang/String;,"Soot started on ")#21
soot.Main.run([Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#22
soot.Main.run([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#23
soot.Main.run([Ljava/lang/String;)V#Get(Ljava/util/Date;,NONSTATIC,Lsoot/Main;,start)#24
soot.Main.run([Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#25
soot.Main.run([Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#26
soot.Main.run([Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/io/PrintStream;,println,(Ljava/lang/String;)V)#27
soot.Main.run([Ljava/lang/String;)V#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#28
soot.Scene.v()Lsoot/Scene;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.Scene.v()Lsoot/Scene;#Invoke(VIRTUAL,Lsoot/G;,soot_Scene,()Lsoot/Scene;)#1
soot.Singletons.soot_Scene()Lsoot/Scene;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_Scene()Lsoot/Scene;#Get(Lsoot/Scene;,NONSTATIC,Lsoot/Singletons;,instance_soot_Scene)#1
soot.Singletons.soot_Scene()Lsoot/Scene;#Constant(L;,null)#2
soot.Singletons.soot_Scene()Lsoot/Scene;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_Scene()Lsoot/Scene;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_Scene()Lsoot/Scene;#New(Lsoot/Scene;,0)#5
soot.Singletons.soot_Scene()Lsoot/Scene;#Dup(1,0)#6
soot.Singletons.soot_Scene()Lsoot/Scene;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_Scene()Lsoot/Scene;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_Scene()Lsoot/Scene;#Invoke(SPECIAL,Lsoot/Scene;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.Scene.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/util/HashChain;,0)#3
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#4
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/util/HashChain;,<init>,()V)#5
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/util/Chain;,NONSTATIC,Lsoot/Scene;,classes)#6
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#7
soot.Scene.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/util/HashChain;,0)#8
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#9
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/util/HashChain;,<init>,()V)#10
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/util/Chain;,NONSTATIC,Lsoot/Scene;,applicationClasses)#11
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#12
soot.Scene.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/util/HashChain;,0)#13
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#14
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/util/HashChain;,<init>,()V)#15
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/util/Chain;,NONSTATIC,Lsoot/Scene;,libraryClasses)#16
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#17
soot.Scene.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/util/HashChain;,0)#18
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#19
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/util/HashChain;,<init>,()V)#20
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/util/Chain;,NONSTATIC,Lsoot/Scene;,phantomClasses)#21
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#22
soot.Scene.<init>(Lsoot/Singletons$Global;)V#New(Ljava/util/HashMap;,0)#23
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#24
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#25
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/Scene;,nameToClass)#26
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#27
soot.Scene.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/util/ArrayNumberer;,0)#28
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#29
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/util/ArrayNumberer;,<init>,()V)#30
soot.util.ArrayNumberer.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.ArrayNumberer.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.util.ArrayNumberer.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
soot.util.ArrayNumberer.<init>()V#Constant(I,1024)#3
soot.util.ArrayNumberer.<init>()V#New([Lsoot/util/Numberable;,1)#4
soot.util.ArrayNumberer.<init>()V#Put([Lsoot/util/Numberable;,NONSTATIC,Lsoot/util/ArrayNumberer;,numberToObj)#5
soot.util.ArrayNumberer.<init>()V#LocalLoad(Ljava/lang/Object;,0)#6
soot.util.ArrayNumberer.<init>()V#Constant(I,0)#7
soot.util.ArrayNumberer.<init>()V#Put(I,NONSTATIC,Lsoot/util/ArrayNumberer;,lastNumber)#8
soot.util.ArrayNumberer.<init>()V#Return(V)#9
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/util/ArrayNumberer;,NONSTATIC,Lsoot/Scene;,kindNumberer)#31
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#32
soot.Scene.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/util/ArrayNumberer;,0)#33
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#34
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/util/ArrayNumberer;,<init>,()V)#35
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/util/ArrayNumberer;,NONSTATIC,Lsoot/Scene;,typeNumberer)#36
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#37
soot.Scene.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/util/ArrayNumberer;,0)#38
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#39
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/util/ArrayNumberer;,<init>,()V)#40
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/util/ArrayNumberer;,NONSTATIC,Lsoot/Scene;,methodNumberer)#41
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#42
soot.Scene.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/util/MapNumberer;,0)#43
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#44
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/util/MapNumberer;,<init>,()V)#45
soot.util.MapNumberer.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.MapNumberer.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.util.MapNumberer.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
soot.util.MapNumberer.<init>()V#New(Ljava/util/HashMap;,0)#3
soot.util.MapNumberer.<init>()V#Dup(1,0)#4
soot.util.MapNumberer.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#5
soot.util.MapNumberer.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/util/MapNumberer;,map)#6
soot.util.MapNumberer.<init>()V#LocalLoad(Ljava/lang/Object;,0)#7
soot.util.MapNumberer.<init>()V#New(Ljava/util/ArrayList;,0)#8
soot.util.MapNumberer.<init>()V#Dup(1,0)#9
soot.util.MapNumberer.<init>()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#10
soot.util.MapNumberer.<init>()V#Put(Ljava/util/ArrayList;,NONSTATIC,Lsoot/util/MapNumberer;,al)#11
soot.util.MapNumberer.<init>()V#LocalLoad(Ljava/lang/Object;,0)#12
soot.util.MapNumberer.<init>()V#Constant(I,1)#13
soot.util.MapNumberer.<init>()V#Put(I,NONSTATIC,Lsoot/util/MapNumberer;,nextIndex)#14
soot.util.MapNumberer.<init>()V#LocalLoad(Ljava/lang/Object;,0)#15
soot.util.MapNumberer.<init>()V#Get(Ljava/util/ArrayList;,NONSTATIC,Lsoot/util/MapNumberer;,al)#16
soot.util.MapNumberer.<init>()V#Constant(L;,null)#17
soot.util.MapNumberer.<init>()V#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#18
soot.util.MapNumberer.<init>()V#Pop(1)#19
soot.util.MapNumberer.<init>()V#Return(V)#20
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/util/Numberer;,NONSTATIC,Lsoot/Scene;,unitNumberer)#46
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#47
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Constant(L;,null)#48
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/util/Numberer;,NONSTATIC,Lsoot/Scene;,contextNumberer)#49
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#50
soot.Scene.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/util/ArrayNumberer;,0)#51
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#52
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/util/ArrayNumberer;,<init>,()V)#53
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/util/ArrayNumberer;,NONSTATIC,Lsoot/Scene;,fieldNumberer)#54
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#55
soot.Scene.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/util/ArrayNumberer;,0)#56
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#57
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/util/ArrayNumberer;,<init>,()V)#58
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/util/ArrayNumberer;,NONSTATIC,Lsoot/Scene;,classNumberer)#59
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#60
soot.Scene.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/util/StringNumberer;,0)#61
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#62
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/util/StringNumberer;,<init>,()V)#63
soot.util.StringNumberer.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.StringNumberer.<init>()V#Invoke(SPECIAL,Lsoot/util/ArrayNumberer;,<init>,()V)#1
soot.util.StringNumberer.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
soot.util.StringNumberer.<init>()V#New(Ljava/util/HashMap;,0)#3
soot.util.StringNumberer.<init>()V#Dup(1,0)#4
soot.util.StringNumberer.<init>()V#Constant(I,1024)#5
soot.util.StringNumberer.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(I)V)#6
soot.util.StringNumberer.<init>()V#Put(Ljava/util/HashMap;,NONSTATIC,Lsoot/util/StringNumberer;,stringToNumbered)#7
soot.util.StringNumberer.<init>()V#Return(V)#8
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/util/StringNumberer;,NONSTATIC,Lsoot/Scene;,subSigNumberer)#64
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#65
soot.Scene.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/util/ArrayNumberer;,0)#66
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#67
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/util/ArrayNumberer;,<init>,()V)#68
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/util/ArrayNumberer;,NONSTATIC,Lsoot/Scene;,localNumberer)#69
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#70
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#71
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/Scene;,allowsPhantomRefs)#72
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#73
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Constant(L;,null)#74
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/Scene;,sootClassPath)#75
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#76
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Constant(L;,null)#77
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/toolkits/exceptions/ThrowAnalysis;,NONSTATIC,Lsoot/Scene;,defaultThrowAnalysis)#78
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#79
soot.Scene.<init>(Lsoot/Singletons$Global;)V#New(Ljava/util/HashSet;,0)#80
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#81
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#82
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/util/Set;,NONSTATIC,Lsoot/Scene;,reservedNames)#83
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#84
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Constant(I,4)#85
soot.Scene.<init>(Lsoot/Singletons$Global;)V#New([Ljava/util/Set;,1)#86
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Put([Ljava/util/Set;,NONSTATIC,Lsoot/Scene;,basicclasses)#87
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#88
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#89
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/Scene;,doneResolving)#90
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#91
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Scene;,setReservedNames,()V)#92
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.setReservedNames()V#Invoke(VIRTUAL,Lsoot/Scene;,getReservedNames,()Ljava/util/Set;)#1
soot.Scene.getReservedNames()Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.getReservedNames()Ljava/util/Set;#Get(Ljava/util/Set;,NONSTATIC,Lsoot/Scene;,reservedNames)#1
soot.Scene.getReservedNames()Ljava/util/Set;#Return(Ljava/lang/Object;)#2
soot.Scene.setReservedNames()V#LocalStore(Ljava/lang/Object;,1)#2
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#3
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"newarray")#4
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#5
soot.Scene.setReservedNames()V#Pop(1)#6
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#7
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"newmultiarray")#8
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#9
soot.Scene.setReservedNames()V#Pop(1)#10
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#11
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"nop")#12
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#13
soot.Scene.setReservedNames()V#Pop(1)#14
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#15
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"ret")#16
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#17
soot.Scene.setReservedNames()V#Pop(1)#18
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#19
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"specialinvoke")#20
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#21
soot.Scene.setReservedNames()V#Pop(1)#22
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#23
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"staticinvoke")#24
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#25
soot.Scene.setReservedNames()V#Pop(1)#26
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#27
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"tableswitch")#28
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#29
soot.Scene.setReservedNames()V#Pop(1)#30
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#31
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"virtualinvoke")#32
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#33
soot.Scene.setReservedNames()V#Pop(1)#34
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#35
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"null_type")#36
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#37
soot.Scene.setReservedNames()V#Pop(1)#38
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#39
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"unknown")#40
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#41
soot.Scene.setReservedNames()V#Pop(1)#42
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#43
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"cmp")#44
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#45
soot.Scene.setReservedNames()V#Pop(1)#46
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#47
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"cmpg")#48
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#49
soot.Scene.setReservedNames()V#Pop(1)#50
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#51
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"cmpl")#52
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#53
soot.Scene.setReservedNames()V#Pop(1)#54
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#55
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"entermonitor")#56
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#57
soot.Scene.setReservedNames()V#Pop(1)#58
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#59
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"exitmonitor")#60
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#61
soot.Scene.setReservedNames()V#Pop(1)#62
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#63
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"interfaceinvoke")#64
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#65
soot.Scene.setReservedNames()V#Pop(1)#66
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#67
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"lengthof")#68
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#69
soot.Scene.setReservedNames()V#Pop(1)#70
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#71
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"lookupswitch")#72
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#73
soot.Scene.setReservedNames()V#Pop(1)#74
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#75
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"neg")#76
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#77
soot.Scene.setReservedNames()V#Pop(1)#78
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#79
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"if")#80
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#81
soot.Scene.setReservedNames()V#Pop(1)#82
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#83
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"abstract")#84
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#85
soot.Scene.setReservedNames()V#Pop(1)#86
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#87
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"annotation")#88
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#89
soot.Scene.setReservedNames()V#Pop(1)#90
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#91
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"boolean")#92
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#93
soot.Scene.setReservedNames()V#Pop(1)#94
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#95
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"break")#96
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#97
soot.Scene.setReservedNames()V#Pop(1)#98
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#99
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"byte")#100
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#101
soot.Scene.setReservedNames()V#Pop(1)#102
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#103
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"case")#104
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#105
soot.Scene.setReservedNames()V#Pop(1)#106
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#107
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"catch")#108
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#109
soot.Scene.setReservedNames()V#Pop(1)#110
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#111
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"char")#112
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#113
soot.Scene.setReservedNames()V#Pop(1)#114
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#115
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"class")#116
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#117
soot.Scene.setReservedNames()V#Pop(1)#118
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#119
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"final")#120
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#121
soot.Scene.setReservedNames()V#Pop(1)#122
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#123
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"native")#124
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#125
soot.Scene.setReservedNames()V#Pop(1)#126
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#127
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"public")#128
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#129
soot.Scene.setReservedNames()V#Pop(1)#130
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#131
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"protected")#132
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#133
soot.Scene.setReservedNames()V#Pop(1)#134
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#135
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"private")#136
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#137
soot.Scene.setReservedNames()V#Pop(1)#138
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#139
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"static")#140
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#141
soot.Scene.setReservedNames()V#Pop(1)#142
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#143
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"synchronized")#144
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#145
soot.Scene.setReservedNames()V#Pop(1)#146
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#147
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"transient")#148
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#149
soot.Scene.setReservedNames()V#Pop(1)#150
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#151
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"volatile")#152
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#153
soot.Scene.setReservedNames()V#Pop(1)#154
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#155
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"interface")#156
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#157
soot.Scene.setReservedNames()V#Pop(1)#158
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#159
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"void")#160
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#161
soot.Scene.setReservedNames()V#Pop(1)#162
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#163
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"short")#164
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#165
soot.Scene.setReservedNames()V#Pop(1)#166
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#167
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"int")#168
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#169
soot.Scene.setReservedNames()V#Pop(1)#170
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#171
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"long")#172
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#173
soot.Scene.setReservedNames()V#Pop(1)#174
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#175
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"float")#176
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#177
soot.Scene.setReservedNames()V#Pop(1)#178
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#179
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"double")#180
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#181
soot.Scene.setReservedNames()V#Pop(1)#182
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#183
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"extends")#184
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#185
soot.Scene.setReservedNames()V#Pop(1)#186
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#187
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"implements")#188
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#189
soot.Scene.setReservedNames()V#Pop(1)#190
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#191
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"breakpoint")#192
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#193
soot.Scene.setReservedNames()V#Pop(1)#194
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#195
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"default")#196
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#197
soot.Scene.setReservedNames()V#Pop(1)#198
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#199
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"goto")#200
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#201
soot.Scene.setReservedNames()V#Pop(1)#202
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#203
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"instanceof")#204
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#205
soot.Scene.setReservedNames()V#Pop(1)#206
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#207
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"new")#208
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#209
soot.Scene.setReservedNames()V#Pop(1)#210
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#211
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"return")#212
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#213
soot.Scene.setReservedNames()V#Pop(1)#214
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#215
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"throw")#216
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#217
soot.Scene.setReservedNames()V#Pop(1)#218
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#219
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"throws")#220
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#221
soot.Scene.setReservedNames()V#Pop(1)#222
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#223
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"null")#224
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#225
soot.Scene.setReservedNames()V#Pop(1)#226
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#227
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"from")#228
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#229
soot.Scene.setReservedNames()V#Pop(1)#230
soot.Scene.setReservedNames()V#LocalLoad(Ljava/lang/Object;,1)#231
soot.Scene.setReservedNames()V#Constant(Ljava/lang/String;,"to")#232
soot.Scene.setReservedNames()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#233
soot.Scene.setReservedNames()V#Pop(1)#234
soot.Scene.setReservedNames()V#Return(V)#235
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"soot.class.path")#93
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#94
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalStore(Ljava/lang/Object;,2)#95
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,2)#96
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Constant(L;,null)#97
soot.Scene.<init>(Lsoot/Singletons$Global;)V#ConditionalBranch(Ljava/lang/Object;,eq,102)#98
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#102
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Get(Lsoot/util/ArrayNumberer;,NONSTATIC,Lsoot/Scene;,kindNumberer)#103
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Get(Lsoot/Kind;,STATIC,Lsoot/Kind;,INVALID)#104
soot.Kind.<clinit>()V#New(Lsoot/Kind;,0)#0
soot.Kind.<clinit>()V#Dup(1,0)#1
soot.Kind.<clinit>()V#Constant(Ljava/lang/String;,"INVALID")#2
soot.Kind.<clinit>()V#Invoke(SPECIAL,Lsoot/Kind;,<init>,(Ljava/lang/String;)V)#3
soot.Kind.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Kind.<init>(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.Kind.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.Kind.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.Kind.<init>(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/Kind;,name)#4
soot.Kind.<init>(Ljava/lang/String;)V#Return(V)#5
soot.Kind.<clinit>()V#Put(Lsoot/Kind;,STATIC,Lsoot/Kind;,INVALID)#4
soot.Kind.<clinit>()V#New(Lsoot/Kind;,0)#5
soot.Kind.<clinit>()V#Dup(1,0)#6
soot.Kind.<clinit>()V#Constant(Ljava/lang/String;,"STATIC")#7
soot.Kind.<clinit>()V#Invoke(SPECIAL,Lsoot/Kind;,<init>,(Ljava/lang/String;)V)#8
soot.Kind.<clinit>()V#Put(Lsoot/Kind;,STATIC,Lsoot/Kind;,STATIC)#9
soot.Kind.<clinit>()V#New(Lsoot/Kind;,0)#10
soot.Kind.<clinit>()V#Dup(1,0)#11
soot.Kind.<clinit>()V#Constant(Ljava/lang/String;,"VIRTUAL")#12
soot.Kind.<clinit>()V#Invoke(SPECIAL,Lsoot/Kind;,<init>,(Ljava/lang/String;)V)#13
soot.Kind.<clinit>()V#Put(Lsoot/Kind;,STATIC,Lsoot/Kind;,VIRTUAL)#14
soot.Kind.<clinit>()V#New(Lsoot/Kind;,0)#15
soot.Kind.<clinit>()V#Dup(1,0)#16
soot.Kind.<clinit>()V#Constant(Ljava/lang/String;,"INTERFACE")#17
soot.Kind.<clinit>()V#Invoke(SPECIAL,Lsoot/Kind;,<init>,(Ljava/lang/String;)V)#18
soot.Kind.<clinit>()V#Put(Lsoot/Kind;,STATIC,Lsoot/Kind;,INTERFACE)#19
soot.Kind.<clinit>()V#New(Lsoot/Kind;,0)#20
soot.Kind.<clinit>()V#Dup(1,0)#21
soot.Kind.<clinit>()V#Constant(Ljava/lang/String;,"SPECIAL")#22
soot.Kind.<clinit>()V#Invoke(SPECIAL,Lsoot/Kind;,<init>,(Ljava/lang/String;)V)#23
soot.Kind.<clinit>()V#Put(Lsoot/Kind;,STATIC,Lsoot/Kind;,SPECIAL)#24
soot.Kind.<clinit>()V#New(Lsoot/Kind;,0)#25
soot.Kind.<clinit>()V#Dup(1,0)#26
soot.Kind.<clinit>()V#Constant(Ljava/lang/String;,"CLINIT")#27
soot.Kind.<clinit>()V#Invoke(SPECIAL,Lsoot/Kind;,<init>,(Ljava/lang/String;)V)#28
soot.Kind.<clinit>()V#Put(Lsoot/Kind;,STATIC,Lsoot/Kind;,CLINIT)#29
soot.Kind.<clinit>()V#New(Lsoot/Kind;,0)#30
soot.Kind.<clinit>()V#Dup(1,0)#31
soot.Kind.<clinit>()V#Constant(Ljava/lang/String;,"THREAD")#32
soot.Kind.<clinit>()V#Invoke(SPECIAL,Lsoot/Kind;,<init>,(Ljava/lang/String;)V)#33
soot.Kind.<clinit>()V#Put(Lsoot/Kind;,STATIC,Lsoot/Kind;,THREAD)#34
soot.Kind.<clinit>()V#New(Lsoot/Kind;,0)#35
soot.Kind.<clinit>()V#Dup(1,0)#36
soot.Kind.<clinit>()V#Constant(Ljava/lang/String;,"FINALIZE")#37
soot.Kind.<clinit>()V#Invoke(SPECIAL,Lsoot/Kind;,<init>,(Ljava/lang/String;)V)#38
soot.Kind.<clinit>()V#Put(Lsoot/Kind;,STATIC,Lsoot/Kind;,FINALIZE)#39
soot.Kind.<clinit>()V#New(Lsoot/Kind;,0)#40
soot.Kind.<clinit>()V#Dup(1,0)#41
soot.Kind.<clinit>()V#Constant(Ljava/lang/String;,"INVOKE_FINALIZE")#42
soot.Kind.<clinit>()V#Invoke(SPECIAL,Lsoot/Kind;,<init>,(Ljava/lang/String;)V)#43
soot.Kind.<clinit>()V#Put(Lsoot/Kind;,STATIC,Lsoot/Kind;,INVOKE_FINALIZE)#44
soot.Kind.<clinit>()V#New(Lsoot/Kind;,0)#45
soot.Kind.<clinit>()V#Dup(1,0)#46
soot.Kind.<clinit>()V#Constant(Ljava/lang/String;,"PRIVILEGED")#47
soot.Kind.<clinit>()V#Invoke(SPECIAL,Lsoot/Kind;,<init>,(Ljava/lang/String;)V)#48
soot.Kind.<clinit>()V#Put(Lsoot/Kind;,STATIC,Lsoot/Kind;,PRIVILEGED)#49
soot.Kind.<clinit>()V#New(Lsoot/Kind;,0)#50
soot.Kind.<clinit>()V#Dup(1,0)#51
soot.Kind.<clinit>()V#Constant(Ljava/lang/String;,"NEWINSTANCE")#52
soot.Kind.<clinit>()V#Invoke(SPECIAL,Lsoot/Kind;,<init>,(Ljava/lang/String;)V)#53
soot.Kind.<clinit>()V#Put(Lsoot/Kind;,STATIC,Lsoot/Kind;,NEWINSTANCE)#54
soot.Kind.<clinit>()V#New(Lsoot/Kind;,0)#55
soot.Kind.<clinit>()V#Dup(1,0)#56
soot.Kind.<clinit>()V#Constant(Ljava/lang/String;,"REFL_METHOD_INVOKE")#57
soot.Kind.<clinit>()V#Invoke(SPECIAL,Lsoot/Kind;,<init>,(Ljava/lang/String;)V)#58
soot.Kind.<clinit>()V#Put(Lsoot/Kind;,STATIC,Lsoot/Kind;,REFL_INVOKE)#59
soot.Kind.<clinit>()V#New(Lsoot/Kind;,0)#60
soot.Kind.<clinit>()V#Dup(1,0)#61
soot.Kind.<clinit>()V#Constant(Ljava/lang/String;,"REFL_CONSTRUCTOR_NEWINSTANCE")#62
soot.Kind.<clinit>()V#Invoke(SPECIAL,Lsoot/Kind;,<init>,(Ljava/lang/String;)V)#63
soot.Kind.<clinit>()V#Put(Lsoot/Kind;,STATIC,Lsoot/Kind;,REFL_CONSTR_NEWINSTANCE)#64
soot.Kind.<clinit>()V#New(Lsoot/Kind;,0)#65
soot.Kind.<clinit>()V#Dup(1,0)#66
soot.Kind.<clinit>()V#Constant(Ljava/lang/String;,"REFL_CLASS_NEWINSTANCE")#67
soot.Kind.<clinit>()V#Invoke(SPECIAL,Lsoot/Kind;,<init>,(Ljava/lang/String;)V)#68
soot.Kind.<clinit>()V#Put(Lsoot/Kind;,STATIC,Lsoot/Kind;,REFL_CLASS_NEWINSTANCE)#69
soot.Kind.<clinit>()V#Return(V)#70
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Invoke(VIRTUAL,Lsoot/util/ArrayNumberer;,add,(Ljava/lang/Object;)V)#105
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#CheckCast(Lsoot/util/Numberable;)#1
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,2)#2
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,2)#3
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#Invoke(INTERFACE,Lsoot/util/Numberable;,getNumber,()I)#4
soot.Kind.getNumber()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.Kind.getNumber()I#Get(I,NONSTATIC,Lsoot/Kind;,num)#1
soot.Kind.getNumber()I#Return(I)#2
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#Constant(I,0)#5
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#ConditionalBranch(I,eq,8)#6
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#Dup(1,0)#9
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#Get(I,NONSTATIC,Lsoot/util/ArrayNumberer;,lastNumber)#10
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#Constant(I,1)#11
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#BinaryOp(I,add)#12
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#Put(I,NONSTATIC,Lsoot/util/ArrayNumberer;,lastNumber)#13
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#14
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#Get(I,NONSTATIC,Lsoot/util/ArrayNumberer;,lastNumber)#15
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#16
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#Get([Lsoot/util/Numberable;,NONSTATIC,Lsoot/util/ArrayNumberer;,numberToObj)#17
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#ArrayLength()#18
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#ConditionalBranch(I,lt,39)#19
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#39
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#Get([Lsoot/util/Numberable;,NONSTATIC,Lsoot/util/ArrayNumberer;,numberToObj)#40
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#41
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#Get(I,NONSTATIC,Lsoot/util/ArrayNumberer;,lastNumber)#42
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,2)#43
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#ArrayStore(Ljava/lang/Object;)#44
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,2)#45
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#46
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#Get(I,NONSTATIC,Lsoot/util/ArrayNumberer;,lastNumber)#47
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#Invoke(INTERFACE,Lsoot/util/Numberable;,setNumber,(I)V)#48
soot.Kind.setNumber(I)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Kind.setNumber(I)V#LocalLoad(I,1)#1
soot.Kind.setNumber(I)V#Put(I,NONSTATIC,Lsoot/Kind;,num)#2
soot.Kind.setNumber(I)V#Return(V)#3
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#Return(V)#49
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#106
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Get(Lsoot/util/ArrayNumberer;,NONSTATIC,Lsoot/Scene;,kindNumberer)#107
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Get(Lsoot/Kind;,STATIC,Lsoot/Kind;,STATIC)#108
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Invoke(VIRTUAL,Lsoot/util/ArrayNumberer;,add,(Ljava/lang/Object;)V)#109
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#110
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Get(Lsoot/util/ArrayNumberer;,NONSTATIC,Lsoot/Scene;,kindNumberer)#111
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Get(Lsoot/Kind;,STATIC,Lsoot/Kind;,VIRTUAL)#112
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Invoke(VIRTUAL,Lsoot/util/ArrayNumberer;,add,(Ljava/lang/Object;)V)#113
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#114
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Get(Lsoot/util/ArrayNumberer;,NONSTATIC,Lsoot/Scene;,kindNumberer)#115
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Get(Lsoot/Kind;,STATIC,Lsoot/Kind;,INTERFACE)#116
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Invoke(VIRTUAL,Lsoot/util/ArrayNumberer;,add,(Ljava/lang/Object;)V)#117
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#118
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Get(Lsoot/util/ArrayNumberer;,NONSTATIC,Lsoot/Scene;,kindNumberer)#119
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Get(Lsoot/Kind;,STATIC,Lsoot/Kind;,SPECIAL)#120
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Invoke(VIRTUAL,Lsoot/util/ArrayNumberer;,add,(Ljava/lang/Object;)V)#121
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#122
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Get(Lsoot/util/ArrayNumberer;,NONSTATIC,Lsoot/Scene;,kindNumberer)#123
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Get(Lsoot/Kind;,STATIC,Lsoot/Kind;,CLINIT)#124
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Invoke(VIRTUAL,Lsoot/util/ArrayNumberer;,add,(Ljava/lang/Object;)V)#125
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#126
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Get(Lsoot/util/ArrayNumberer;,NONSTATIC,Lsoot/Scene;,kindNumberer)#127
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Get(Lsoot/Kind;,STATIC,Lsoot/Kind;,THREAD)#128
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Invoke(VIRTUAL,Lsoot/util/ArrayNumberer;,add,(Ljava/lang/Object;)V)#129
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#130
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Get(Lsoot/util/ArrayNumberer;,NONSTATIC,Lsoot/Scene;,kindNumberer)#131
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Get(Lsoot/Kind;,STATIC,Lsoot/Kind;,FINALIZE)#132
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Invoke(VIRTUAL,Lsoot/util/ArrayNumberer;,add,(Ljava/lang/Object;)V)#133
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#134
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Get(Lsoot/util/ArrayNumberer;,NONSTATIC,Lsoot/Scene;,kindNumberer)#135
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Get(Lsoot/Kind;,STATIC,Lsoot/Kind;,INVOKE_FINALIZE)#136
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Invoke(VIRTUAL,Lsoot/util/ArrayNumberer;,add,(Ljava/lang/Object;)V)#137
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#138
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Get(Lsoot/util/ArrayNumberer;,NONSTATIC,Lsoot/Scene;,kindNumberer)#139
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Get(Lsoot/Kind;,STATIC,Lsoot/Kind;,PRIVILEGED)#140
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Invoke(VIRTUAL,Lsoot/util/ArrayNumberer;,add,(Ljava/lang/Object;)V)#141
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#142
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Get(Lsoot/util/ArrayNumberer;,NONSTATIC,Lsoot/Scene;,kindNumberer)#143
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Get(Lsoot/Kind;,STATIC,Lsoot/Kind;,NEWINSTANCE)#144
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Invoke(VIRTUAL,Lsoot/util/ArrayNumberer;,add,(Ljava/lang/Object;)V)#145
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#146
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Scene;,addSootBasicClasses,()V)#147
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.addSootBasicClasses()V#Get([Ljava/util/Set;,NONSTATIC,Lsoot/Scene;,basicclasses)#1
soot.Scene.addSootBasicClasses()V#Constant(I,1)#2
soot.Scene.addSootBasicClasses()V#New(Ljava/util/HashSet;,0)#3
soot.Scene.addSootBasicClasses()V#Dup(1,0)#4
soot.Scene.addSootBasicClasses()V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#5
soot.Scene.addSootBasicClasses()V#ArrayStore(Ljava/lang/Object;)#6
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#7
soot.Scene.addSootBasicClasses()V#Get([Ljava/util/Set;,NONSTATIC,Lsoot/Scene;,basicclasses)#8
soot.Scene.addSootBasicClasses()V#Constant(I,2)#9
soot.Scene.addSootBasicClasses()V#New(Ljava/util/HashSet;,0)#10
soot.Scene.addSootBasicClasses()V#Dup(1,0)#11
soot.Scene.addSootBasicClasses()V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#12
soot.Scene.addSootBasicClasses()V#ArrayStore(Ljava/lang/Object;)#13
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#14
soot.Scene.addSootBasicClasses()V#Get([Ljava/util/Set;,NONSTATIC,Lsoot/Scene;,basicclasses)#15
soot.Scene.addSootBasicClasses()V#Constant(I,3)#16
soot.Scene.addSootBasicClasses()V#New(Ljava/util/HashSet;,0)#17
soot.Scene.addSootBasicClasses()V#Dup(1,0)#18
soot.Scene.addSootBasicClasses()V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#19
soot.Scene.addSootBasicClasses()V#ArrayStore(Ljava/lang/Object;)#20
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#21
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.Object")#22
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#23
soot.Scene.addBasicClass(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.addBasicClass(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.Scene.addBasicClass(Ljava/lang/String;)V#Constant(I,1)#2
soot.Scene.addBasicClass(Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;I)V)#3
soot.Scene.addBasicClass(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.addBasicClass(Ljava/lang/String;I)V#Get([Ljava/util/Set;,NONSTATIC,Lsoot/Scene;,basicclasses)#1
soot.Scene.addBasicClass(Ljava/lang/String;I)V#LocalLoad(I,2)#2
soot.Scene.addBasicClass(Ljava/lang/String;I)V#ArrayLoad(Ljava/lang/Object;)#3
soot.Scene.addBasicClass(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,1)#4
soot.Scene.addBasicClass(Ljava/lang/String;I)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#5
soot.Scene.addBasicClass(Ljava/lang/String;I)V#Pop(1)#6
soot.Scene.addBasicClass(Ljava/lang/String;I)V#Return(V)#7
soot.Scene.addBasicClass(Ljava/lang/String;)V#Return(V)#4
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#24
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.Class")#25
soot.Scene.addSootBasicClasses()V#Constant(I,2)#26
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;I)V)#27
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#28
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.Void")#29
soot.Scene.addSootBasicClasses()V#Constant(I,2)#30
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;I)V)#31
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#32
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.Boolean")#33
soot.Scene.addSootBasicClasses()V#Constant(I,2)#34
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;I)V)#35
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#36
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.Byte")#37
soot.Scene.addSootBasicClasses()V#Constant(I,2)#38
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;I)V)#39
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#40
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.Character")#41
soot.Scene.addSootBasicClasses()V#Constant(I,2)#42
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;I)V)#43
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#44
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.Short")#45
soot.Scene.addSootBasicClasses()V#Constant(I,2)#46
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;I)V)#47
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#48
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.Integer")#49
soot.Scene.addSootBasicClasses()V#Constant(I,2)#50
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;I)V)#51
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#52
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.Long")#53
soot.Scene.addSootBasicClasses()V#Constant(I,2)#54
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;I)V)#55
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#56
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.Float")#57
soot.Scene.addSootBasicClasses()V#Constant(I,2)#58
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;I)V)#59
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#60
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.Double")#61
soot.Scene.addSootBasicClasses()V#Constant(I,2)#62
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;I)V)#63
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#64
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.String")#65
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#66
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#67
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.StringBuffer")#68
soot.Scene.addSootBasicClasses()V#Constant(I,2)#69
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;I)V)#70
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#71
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.Error")#72
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#73
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#74
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.AssertionError")#75
soot.Scene.addSootBasicClasses()V#Constant(I,2)#76
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;I)V)#77
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#78
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.Throwable")#79
soot.Scene.addSootBasicClasses()V#Constant(I,2)#80
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;I)V)#81
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#82
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.NoClassDefFoundError")#83
soot.Scene.addSootBasicClasses()V#Constant(I,2)#84
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;I)V)#85
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#86
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.ExceptionInInitializerError")#87
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#88
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#89
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.RuntimeException")#90
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#91
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#92
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.ClassNotFoundException")#93
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#94
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#95
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.ArithmeticException")#96
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#97
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#98
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.ArrayStoreException")#99
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#100
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#101
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.ClassCastException")#102
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#103
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#104
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.IllegalMonitorStateException")#105
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#106
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#107
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.IndexOutOfBoundsException")#108
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#109
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#110
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.ArrayIndexOutOfBoundsException")#111
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#112
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#113
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.NegativeArraySizeException")#114
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#115
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#116
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.NullPointerException")#117
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#118
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#119
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.InstantiationError")#120
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#121
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#122
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.InternalError")#123
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#124
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#125
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.OutOfMemoryError")#126
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#127
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#128
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.StackOverflowError")#129
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#130
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#131
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.UnknownError")#132
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#133
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#134
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.ThreadDeath")#135
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#136
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#137
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.ClassCircularityError")#138
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#139
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#140
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.ClassFormatError")#141
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#142
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#143
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.IllegalAccessError")#144
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#145
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#146
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.IncompatibleClassChangeError")#147
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#148
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#149
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.LinkageError")#150
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#151
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#152
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.VerifyError")#153
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#154
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#155
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.NoSuchFieldError")#156
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#157
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#158
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.AbstractMethodError")#159
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#160
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#161
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.NoSuchMethodError")#162
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#163
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#164
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.UnsatisfiedLinkError")#165
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#166
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#167
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.Thread")#168
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#169
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#170
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.Runnable")#171
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#172
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#173
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.Cloneable")#174
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#175
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#176
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.io.Serializable")#177
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#178
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#179
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.lang.ref.Finalizer")#180
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#181
soot.Scene.addSootBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#182
soot.Scene.addSootBasicClasses()V#Constant(Ljava/lang/String;,"java.dyn.InvokeDynamic")#183
soot.Scene.addSootBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,addBasicClass,(Ljava/lang/String;)V)#184
soot.Scene.addSootBasicClasses()V#Return(V)#185
soot.Scene.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#148
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Scene;,determineExcludedPackages,()V)#149
soot.Scene.determineExcludedPackages()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.determineExcludedPackages()V#New(Ljava/util/LinkedList;,0)#1
soot.Scene.determineExcludedPackages()V#Dup(1,0)#2
soot.Scene.determineExcludedPackages()V#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#3
soot.Scene.determineExcludedPackages()V#Put(Ljava/util/LinkedList;,NONSTATIC,Lsoot/Scene;,excludedPackages)#4
soot.Scene.determineExcludedPackages()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#5
soot.Scene.determineExcludedPackages()V#Invoke(VIRTUAL,Lsoot/options/Options;,exclude,()Ljava/util/List;)#6
soot.options.Options.exclude()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.exclude()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lsoot/options/Options;,exclude)#1
soot.options.Options.exclude()Ljava/util/List;#Constant(L;,null)#2
soot.options.Options.exclude()Ljava/util/List;#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
soot.options.Options.exclude()Ljava/util/List;#Get(Ljava/util/List;,STATIC,Ljava/util/Collections;,EMPTY_LIST)#4
soot.options.Options.exclude()Ljava/util/List;#Return(Ljava/lang/Object;)#5
soot.Scene.determineExcludedPackages()V#Constant(L;,null)#7
soot.Scene.determineExcludedPackages()V#ConditionalBranch(Ljava/lang/Object;,eq,15)#8
soot.Scene.determineExcludedPackages()V#LocalLoad(Ljava/lang/Object;,0)#9
soot.Scene.determineExcludedPackages()V#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/Scene;,excludedPackages)#10
soot.Scene.determineExcludedPackages()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#11
soot.Scene.determineExcludedPackages()V#Invoke(VIRTUAL,Lsoot/options/Options;,exclude,()Ljava/util/List;)#12
soot.Scene.determineExcludedPackages()V#Invoke(VIRTUAL,Ljava/util/LinkedList;,addAll,(Ljava/util/Collection;)Z)#13
soot.Scene.determineExcludedPackages()V#Pop(1)#14
soot.Scene.determineExcludedPackages()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#15
soot.Scene.determineExcludedPackages()V#Invoke(VIRTUAL,Lsoot/options/Options;,include_all,()Z)#16
soot.options.Options.include_all()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.include_all()Z#Get(Z,NONSTATIC,Lsoot/options/Options;,include_all)#1
soot.options.Options.include_all()Z#Return(I)#2
soot.Scene.determineExcludedPackages()V#Constant(I,0)#17
soot.Scene.determineExcludedPackages()V#ConditionalBranch(I,ne,64)#18
soot.Scene.determineExcludedPackages()V#LocalLoad(Ljava/lang/Object;,0)#19
soot.Scene.determineExcludedPackages()V#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/Scene;,excludedPackages)#20
soot.Scene.determineExcludedPackages()V#Constant(Ljava/lang/String;,"java.")#21
soot.Scene.determineExcludedPackages()V#Invoke(VIRTUAL,Ljava/util/LinkedList;,add,(Ljava/lang/Object;)Z)#22
soot.Scene.determineExcludedPackages()V#Pop(1)#23
soot.Scene.determineExcludedPackages()V#LocalLoad(Ljava/lang/Object;,0)#24
soot.Scene.determineExcludedPackages()V#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/Scene;,excludedPackages)#25
soot.Scene.determineExcludedPackages()V#Constant(Ljava/lang/String;,"sun.")#26
soot.Scene.determineExcludedPackages()V#Invoke(VIRTUAL,Ljava/util/LinkedList;,add,(Ljava/lang/Object;)Z)#27
soot.Scene.determineExcludedPackages()V#Pop(1)#28
soot.Scene.determineExcludedPackages()V#LocalLoad(Ljava/lang/Object;,0)#29
soot.Scene.determineExcludedPackages()V#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/Scene;,excludedPackages)#30
soot.Scene.determineExcludedPackages()V#Constant(Ljava/lang/String;,"javax.")#31
soot.Scene.determineExcludedPackages()V#Invoke(VIRTUAL,Ljava/util/LinkedList;,add,(Ljava/lang/Object;)Z)#32
soot.Scene.determineExcludedPackages()V#Pop(1)#33
soot.Scene.determineExcludedPackages()V#LocalLoad(Ljava/lang/Object;,0)#34
soot.Scene.determineExcludedPackages()V#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/Scene;,excludedPackages)#35
soot.Scene.determineExcludedPackages()V#Constant(Ljava/lang/String;,"com.sun.")#36
soot.Scene.determineExcludedPackages()V#Invoke(VIRTUAL,Ljava/util/LinkedList;,add,(Ljava/lang/Object;)Z)#37
soot.Scene.determineExcludedPackages()V#Pop(1)#38
soot.Scene.determineExcludedPackages()V#LocalLoad(Ljava/lang/Object;,0)#39
soot.Scene.determineExcludedPackages()V#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/Scene;,excludedPackages)#40
soot.Scene.determineExcludedPackages()V#Constant(Ljava/lang/String;,"com.ibm.")#41
soot.Scene.determineExcludedPackages()V#Invoke(VIRTUAL,Ljava/util/LinkedList;,add,(Ljava/lang/Object;)Z)#42
soot.Scene.determineExcludedPackages()V#Pop(1)#43
soot.Scene.determineExcludedPackages()V#LocalLoad(Ljava/lang/Object;,0)#44
soot.Scene.determineExcludedPackages()V#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/Scene;,excludedPackages)#45
soot.Scene.determineExcludedPackages()V#Constant(Ljava/lang/String;,"org.xml.")#46
soot.Scene.determineExcludedPackages()V#Invoke(VIRTUAL,Ljava/util/LinkedList;,add,(Ljava/lang/Object;)Z)#47
soot.Scene.determineExcludedPackages()V#Pop(1)#48
soot.Scene.determineExcludedPackages()V#LocalLoad(Ljava/lang/Object;,0)#49
soot.Scene.determineExcludedPackages()V#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/Scene;,excludedPackages)#50
soot.Scene.determineExcludedPackages()V#Constant(Ljava/lang/String;,"org.w3c.")#51
soot.Scene.determineExcludedPackages()V#Invoke(VIRTUAL,Ljava/util/LinkedList;,add,(Ljava/lang/Object;)Z)#52
soot.Scene.determineExcludedPackages()V#Pop(1)#53
soot.Scene.determineExcludedPackages()V#LocalLoad(Ljava/lang/Object;,0)#54
soot.Scene.determineExcludedPackages()V#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/Scene;,excludedPackages)#55
soot.Scene.determineExcludedPackages()V#Constant(Ljava/lang/String;,"apple.awt.")#56
soot.Scene.determineExcludedPackages()V#Invoke(VIRTUAL,Ljava/util/LinkedList;,add,(Ljava/lang/Object;)Z)#57
soot.Scene.determineExcludedPackages()V#Pop(1)#58
soot.Scene.determineExcludedPackages()V#LocalLoad(Ljava/lang/Object;,0)#59
soot.Scene.determineExcludedPackages()V#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/Scene;,excludedPackages)#60
soot.Scene.determineExcludedPackages()V#Constant(Ljava/lang/String;,"com.apple.")#61
soot.Scene.determineExcludedPackages()V#Invoke(VIRTUAL,Ljava/util/LinkedList;,add,(Ljava/lang/Object;)Z)#62
soot.Scene.determineExcludedPackages()V#Pop(1)#63
soot.Scene.determineExcludedPackages()V#Return(V)#64
soot.Scene.<init>(Lsoot/Singletons$Global;)V#Return(V)#150
soot.Singletons.soot_Scene()Lsoot/Scene;#Put(Lsoot/Scene;,NONSTATIC,Lsoot/Singletons;,instance_soot_Scene)#10
soot.Singletons.soot_Scene()Lsoot/Scene;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_Scene()Lsoot/Scene;#Get(Lsoot/Scene;,NONSTATIC,Lsoot/Singletons;,instance_soot_Scene)#12
soot.Singletons.soot_Scene()Lsoot/Scene;#Return(Ljava/lang/Object;)#13
soot.Scene.v()Lsoot/Scene;#Return(Ljava/lang/Object;)#2
soot.Main.run([Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/Scene;,loadNecessaryClasses,()V)#29
soot.Scene.loadNecessaryClasses()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.loadNecessaryClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,loadBasicClasses,()V)#1
soot.Scene.loadBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.loadBasicClasses()V#Invoke(SPECIAL,Lsoot/Scene;,addReflectionTraceClasses,()V)#1
soot.Scene.addReflectionTraceClasses()V#New(Lsoot/options/CGOptions;,0)#0
soot.Scene.addReflectionTraceClasses()V#Dup(1,0)#1
soot.Scene.addReflectionTraceClasses()V#Invoke(STATIC,Lsoot/PhaseOptions;,v,()Lsoot/PhaseOptions;)#2
soot.Scene.addReflectionTraceClasses()V#Constant(Ljava/lang/String;,"cg")#3
soot.Scene.addReflectionTraceClasses()V#Invoke(VIRTUAL,Lsoot/PhaseOptions;,getPhaseOptions,(Ljava/lang/String;)Ljava/util/Map;)#4
soot.Scene.addReflectionTraceClasses()V#Invoke(SPECIAL,Lsoot/options/CGOptions;,<init>,(Ljava/util/Map;)V)#5
soot.Scene.addReflectionTraceClasses()V#LocalStore(Ljava/lang/Object;,1)#6
soot.Scene.addReflectionTraceClasses()V#LocalLoad(Ljava/lang/Object;,1)#7
soot.Scene.addReflectionTraceClasses()V#Invoke(VIRTUAL,Lsoot/options/CGOptions;,reflection_log,()Ljava/lang/String;)#8
soot.Scene.addReflectionTraceClasses()V#LocalStore(Ljava/lang/Object;,2)#9
soot.Scene.addReflectionTraceClasses()V#New(Ljava/util/HashSet;,0)#10
soot.Scene.addReflectionTraceClasses()V#Dup(1,0)#11
soot.Scene.addReflectionTraceClasses()V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#12
soot.Scene.addReflectionTraceClasses()V#LocalStore(Ljava/lang/Object;,3)#13
soot.Scene.addReflectionTraceClasses()V#LocalLoad(Ljava/lang/Object;,2)#14
soot.Scene.addReflectionTraceClasses()V#Constant(L;,null)#15
soot.Scene.addReflectionTraceClasses()V#ConditionalBranch(Ljava/lang/Object;,eq,155)#16
soot.Scene.addReflectionTraceClasses()V#LocalLoad(Ljava/lang/Object;,2)#17
soot.Scene.addReflectionTraceClasses()V#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#18
soot.Scene.addReflectionTraceClasses()V#Constant(I,0)#19
soot.Scene.addReflectionTraceClasses()V#ConditionalBranch(I,le,155)#20
soot.Scene.addReflectionTraceClasses()V#LocalLoad(Ljava/lang/Object;,3)#155
soot.Scene.addReflectionTraceClasses()V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#156
soot.Scene.addReflectionTraceClasses()V#LocalStore(Ljava/lang/Object;,5)#157
soot.Scene.addReflectionTraceClasses()V#Goto(167)#158
soot.Scene.addReflectionTraceClasses()V#LocalLoad(Ljava/lang/Object;,5)#167
soot.Scene.addReflectionTraceClasses()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#168
soot.Scene.addReflectionTraceClasses()V#Constant(I,0)#169
soot.Scene.addReflectionTraceClasses()V#ConditionalBranch(I,ne,159)#170
soot.Scene.addReflectionTraceClasses()V#Return(V)#171
soot.Scene.loadBasicClasses()V#Constant(I,3)#2
soot.Scene.loadBasicClasses()V#LocalStore(I,1)#3
soot.Scene.loadBasicClasses()V#Goto(29)#4
soot.Scene.loadBasicClasses()V#LocalLoad(I,1)#29
soot.Scene.loadBasicClasses()V#Constant(I,1)#30
soot.Scene.loadBasicClasses()V#ConditionalBranch(I,ge,5)#31
soot.Scene.loadBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#5
soot.Scene.loadBasicClasses()V#Get([Ljava/util/Set;,NONSTATIC,Lsoot/Scene;,basicclasses)#6
soot.Scene.loadBasicClasses()V#LocalLoad(I,1)#7
soot.Scene.loadBasicClasses()V#ArrayLoad(Ljava/lang/Object;)#8
soot.Scene.loadBasicClasses()V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#9
soot.Scene.loadBasicClasses()V#LocalStore(Ljava/lang/Object;,3)#10
soot.Scene.loadBasicClasses()V#Goto(21)#11
soot.Scene.loadBasicClasses()V#LocalLoad(Ljava/lang/Object;,3)#21
soot.Scene.loadBasicClasses()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#22
soot.Scene.loadBasicClasses()V#Constant(I,0)#23
soot.Scene.loadBasicClasses()V#ConditionalBranch(I,ne,12)#24
soot.Scene.loadBasicClasses()V#LocalLoad(I,1)#25
soot.Scene.loadBasicClasses()V#Constant(I,-1)#26
soot.Scene.loadBasicClasses()V#BinaryOp(I,add)#27
soot.Scene.loadBasicClasses()V#LocalStore(I,1)#28
soot.Scene.loadBasicClasses()V#LocalLoad(Ljava/lang/Object;,3)#12
soot.Scene.loadBasicClasses()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#13
soot.Scene.loadBasicClasses()V#CheckCast(Ljava/lang/String;)#14
soot.Scene.loadBasicClasses()V#LocalStore(Ljava/lang/Object;,2)#15
soot.Scene.loadBasicClasses()V#LocalLoad(Ljava/lang/Object;,0)#16
soot.Scene.loadBasicClasses()V#LocalLoad(Ljava/lang/Object;,2)#17
soot.Scene.loadBasicClasses()V#LocalLoad(I,1)#18
soot.Scene.loadBasicClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,tryLoadClass,(Ljava/lang/String;I)Lsoot/SootClass;)#19
soot.Scene.tryLoadClass(Ljava/lang/String;I)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.tryLoadClass(Ljava/lang/String;I)Lsoot/SootClass;#Constant(I,1)#1
soot.Scene.tryLoadClass(Ljava/lang/String;I)Lsoot/SootClass;#Invoke(VIRTUAL,Lsoot/Scene;,setPhantomRefs,(Z)V)#2
soot.Scene.setPhantomRefs(Z)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.setPhantomRefs(Z)V#LocalLoad(I,1)#1
soot.Scene.setPhantomRefs(Z)V#Put(Z,NONSTATIC,Lsoot/Scene;,allowsPhantomRefs)#2
soot.Scene.setPhantomRefs(Z)V#Return(V)#3
soot.Scene.tryLoadClass(Ljava/lang/String;I)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,0)#3
soot.Scene.tryLoadClass(Ljava/lang/String;I)Lsoot/SootClass;#Invoke(VIRTUAL,Lsoot/Scene;,getPhantomRefs,()Z)#4
soot.Scene.getPhantomRefs()Z#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#0
soot.Scene.getPhantomRefs()Z#Invoke(VIRTUAL,Lsoot/options/Options;,allow_phantom_refs,()Z)#1
soot.Scene.getPhantomRefs()Z#Return(I)#2
soot.Scene.tryLoadClass(Ljava/lang/String;I)Lsoot/SootClass;#Constant(I,0)#5
soot.Scene.tryLoadClass(Ljava/lang/String;I)Lsoot/SootClass;#ConditionalBranch(I,ne,17)#6
soot.Scene.tryLoadClass(Ljava/lang/String;I)Lsoot/SootClass;#Invoke(STATIC,Lsoot/SourceLocator;,v,()Lsoot/SourceLocator;)#7
soot.SourceLocator.v()Lsoot/SourceLocator;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.SourceLocator.v()Lsoot/SourceLocator;#Invoke(VIRTUAL,Lsoot/G;,soot_SourceLocator,()Lsoot/SourceLocator;)#1
soot.Singletons.soot_SourceLocator()Lsoot/SourceLocator;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_SourceLocator()Lsoot/SourceLocator;#Get(Lsoot/SourceLocator;,NONSTATIC,Lsoot/Singletons;,instance_soot_SourceLocator)#1
soot.Singletons.soot_SourceLocator()Lsoot/SourceLocator;#Constant(L;,null)#2
soot.Singletons.soot_SourceLocator()Lsoot/SourceLocator;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_SourceLocator()Lsoot/SourceLocator;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_SourceLocator()Lsoot/SourceLocator;#New(Lsoot/SourceLocator;,0)#5
soot.Singletons.soot_SourceLocator()Lsoot/SourceLocator;#Dup(1,0)#6
soot.Singletons.soot_SourceLocator()Lsoot/SourceLocator;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_SourceLocator()Lsoot/SourceLocator;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_SourceLocator()Lsoot/SourceLocator;#Invoke(SPECIAL,Lsoot/SourceLocator;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.SourceLocator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.SourceLocator.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.SourceLocator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.SourceLocator.<init>(Lsoot/Singletons$Global;)V#New(Ljava/util/HashSet;,0)#3
soot.SourceLocator.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#4
soot.SourceLocator.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#5
soot.SourceLocator.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/util/Set;,NONSTATIC,Lsoot/SourceLocator;,additionalClassLoaders)#6
soot.SourceLocator.<init>(Lsoot/Singletons$Global;)V#Return(V)#7
soot.Singletons.soot_SourceLocator()Lsoot/SourceLocator;#Put(Lsoot/SourceLocator;,NONSTATIC,Lsoot/Singletons;,instance_soot_SourceLocator)#10
soot.Singletons.soot_SourceLocator()Lsoot/SourceLocator;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_SourceLocator()Lsoot/SourceLocator;#Get(Lsoot/SourceLocator;,NONSTATIC,Lsoot/Singletons;,instance_soot_SourceLocator)#12
soot.Singletons.soot_SourceLocator()Lsoot/SourceLocator;#Return(Ljava/lang/Object;)#13
soot.SourceLocator.v()Lsoot/SourceLocator;#Return(Ljava/lang/Object;)#2
soot.Scene.tryLoadClass(Ljava/lang/String;I)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,1)#8
soot.Scene.tryLoadClass(Ljava/lang/String;I)Lsoot/SootClass;#Invoke(VIRTUAL,Lsoot/SourceLocator;,getClassSource,(Ljava/lang/String;)Lsoot/ClassSource;)#9
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,0)#0
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Get(Ljava/util/Set;,NONSTATIC,Lsoot/SourceLocator;,classesToLoad)#1
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Constant(L;,null)#2
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#ConditionalBranch(Ljava/lang/Object;,ne,34)#3
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,0)#4
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#New(Ljava/util/HashSet;,0)#5
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Dup(1,0)#6
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#7
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Put(Ljava/util/Set;,NONSTATIC,Lsoot/SourceLocator;,classesToLoad)#8
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,0)#9
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Get(Ljava/util/Set;,NONSTATIC,Lsoot/SourceLocator;,classesToLoad)#10
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#11
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(VIRTUAL,Lsoot/Scene;,getBasicClasses,()Ljava/util/Set;)#12
soot.Scene.getBasicClasses()Ljava/util/Set;#New(Ljava/util/HashSet;,0)#0
soot.Scene.getBasicClasses()Ljava/util/Set;#Dup(1,0)#1
soot.Scene.getBasicClasses()Ljava/util/Set;#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#2
soot.Scene.getBasicClasses()Ljava/util/Set;#LocalStore(Ljava/lang/Object;,1)#3
soot.Scene.getBasicClasses()Ljava/util/Set;#Constant(I,0)#4
soot.Scene.getBasicClasses()Ljava/util/Set;#LocalStore(I,2)#5
soot.Scene.getBasicClasses()Ljava/util/Set;#Goto(23)#6
soot.Scene.getBasicClasses()Ljava/util/Set;#LocalLoad(I,2)#23
soot.Scene.getBasicClasses()Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#24
soot.Scene.getBasicClasses()Ljava/util/Set;#Get([Ljava/util/Set;,NONSTATIC,Lsoot/Scene;,basicclasses)#25
soot.Scene.getBasicClasses()Ljava/util/Set;#ArrayLength()#26
soot.Scene.getBasicClasses()Ljava/util/Set;#ConditionalBranch(I,lt,7)#27
soot.Scene.getBasicClasses()Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Scene.getBasicClasses()Ljava/util/Set;#Get([Ljava/util/Set;,NONSTATIC,Lsoot/Scene;,basicclasses)#8
soot.Scene.getBasicClasses()Ljava/util/Set;#LocalLoad(I,2)#9
soot.Scene.getBasicClasses()Ljava/util/Set;#ArrayLoad(Ljava/lang/Object;)#10
soot.Scene.getBasicClasses()Ljava/util/Set;#LocalStore(Ljava/lang/Object;,3)#11
soot.Scene.getBasicClasses()Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,3)#12
soot.Scene.getBasicClasses()Ljava/util/Set;#Constant(L;,null)#13
soot.Scene.getBasicClasses()Ljava/util/Set;#ConditionalBranch(Ljava/lang/Object;,eq,19)#14
soot.Scene.getBasicClasses()Ljava/util/Set;#LocalLoad(I,2)#19
soot.Scene.getBasicClasses()Ljava/util/Set;#Constant(I,1)#20
soot.Scene.getBasicClasses()Ljava/util/Set;#BinaryOp(I,add)#21
soot.Scene.getBasicClasses()Ljava/util/Set;#LocalStore(I,2)#22
soot.Scene.getBasicClasses()Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#15
soot.Scene.getBasicClasses()Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,3)#16
soot.Scene.getBasicClasses()Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Set;,addAll,(Ljava/util/Collection;)Z)#17
soot.Scene.getBasicClasses()Ljava/util/Set;#Pop(1)#18
soot.Scene.getBasicClasses()Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#28
soot.Scene.getBasicClasses()Ljava/util/Set;#Return(Ljava/lang/Object;)#29
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(INTERFACE,Ljava/util/Set;,addAll,(Ljava/util/Collection;)Z)#13
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Pop(1)#14
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#15
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(VIRTUAL,Lsoot/Scene;,getApplicationClasses,()Lsoot/util/Chain;)#16
soot.Scene.getApplicationClasses()Lsoot/util/Chain;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.getApplicationClasses()Lsoot/util/Chain;#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/Scene;,applicationClasses)#1
soot.Scene.getApplicationClasses()Lsoot/util/Chain;#Return(Ljava/lang/Object;)#2
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#17
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#LocalStore(Ljava/lang/Object;,3)#18
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Goto(30)#19
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,3)#30
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#31
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Constant(I,0)#32
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#ConditionalBranch(I,ne,20)#33
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,0)#34
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Get(Ljava/util/List;,NONSTATIC,Lsoot/SourceLocator;,classPath)#35
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Constant(L;,null)#36
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#ConditionalBranch(Ljava/lang/Object;,ne,44)#37
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,0)#38
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,0)#39
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#40
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(VIRTUAL,Lsoot/Scene;,getSootClassPath,()Ljava/lang/String;)#41
soot.Scene.getSootClassPath()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.getSootClassPath()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsoot/Scene;,sootClassPath)#1
soot.Scene.getSootClassPath()Ljava/lang/String;#Constant(L;,null)#2
soot.Scene.getSootClassPath()Ljava/lang/String;#ConditionalBranch(Ljava/lang/Object;,ne,43)#3
soot.Scene.getSootClassPath()Ljava/lang/String;#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#4
soot.Scene.getSootClassPath()Ljava/lang/String;#Invoke(VIRTUAL,Lsoot/options/Options;,soot_classpath,()Ljava/lang/String;)#5
soot.options.Options.soot_classpath()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.soot_classpath()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsoot/options/Options;,soot_classpath)#1
soot.options.Options.soot_classpath()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
soot.Scene.getSootClassPath()Ljava/lang/String;#LocalStore(Ljava/lang/Object;,1)#6
soot.Scene.getSootClassPath()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#7
soot.Scene.getSootClassPath()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#8
soot.Scene.getSootClassPath()Ljava/lang/String;#Constant(I,0)#9
soot.Scene.getSootClassPath()Ljava/lang/String;#ConditionalBranch(I,le,14)#10
soot.Scene.getSootClassPath()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#14
soot.Scene.getSootClassPath()Ljava/lang/String;#Invoke(VIRTUAL,Lsoot/Scene;,defaultClassPath,()Ljava/lang/String;)#15
soot.Scene.defaultClassPath()Ljava/lang/String;#New(Ljava/lang/StringBuffer;,0)#0
soot.Scene.defaultClassPath()Ljava/lang/String;#Dup(1,0)#1
soot.Scene.defaultClassPath()Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuffer;,<init>,()V)#2
soot.Scene.defaultClassPath()Ljava/lang/String;#LocalStore(Ljava/lang/Object;,1)#3
soot.Scene.defaultClassPath()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#4
soot.Scene.defaultClassPath()Ljava/lang/String;#New(Ljava/lang/StringBuilder;,0)#5
soot.Scene.defaultClassPath()Ljava/lang/String;#Dup(1,0)#6
soot.Scene.defaultClassPath()Ljava/lang/String;#Constant(Ljava/lang/String;,"java.class.path")#7
soot.Scene.defaultClassPath()Ljava/lang/String;#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#8
soot.Scene.defaultClassPath()Ljava/lang/String;#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#9
soot.Scene.defaultClassPath()Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#10
soot.Scene.defaultClassPath()Ljava/lang/String;#Get(Ljava/lang/String;,STATIC,Ljava/io/File;,pathSeparator)#11
soot.Scene.defaultClassPath()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#12
soot.Scene.defaultClassPath()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#13
soot.Scene.defaultClassPath()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(Ljava/lang/String;)Ljava/lang/StringBuffer;)#14
soot.Scene.defaultClassPath()Ljava/lang/String;#Pop(1)#15
soot.Scene.defaultClassPath()Ljava/lang/String;#Constant(Ljava/lang/String;,"os.name")#16
soot.Scene.defaultClassPath()Ljava/lang/String;#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#17
soot.Scene.defaultClassPath()Ljava/lang/String;#Constant(Ljava/lang/String;,"Mac OS X")#18
soot.Scene.defaultClassPath()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#19
soot.Scene.defaultClassPath()Ljava/lang/String;#Constant(I,0)#20
soot.Scene.defaultClassPath()Ljava/lang/String;#ConditionalBranch(I,eq,89)#21
soot.Scene.defaultClassPath()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#89
soot.Scene.defaultClassPath()Ljava/lang/String;#Get(Ljava/lang/String;,STATIC,Ljava/io/File;,pathSeparator)#90
soot.Scene.defaultClassPath()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(Ljava/lang/String;)Ljava/lang/StringBuffer;)#91
soot.Scene.defaultClassPath()Ljava/lang/String;#Pop(1)#92
soot.Scene.defaultClassPath()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#93
soot.Scene.defaultClassPath()Ljava/lang/String;#Constant(Ljava/lang/String;,"java.home")#94
soot.Scene.defaultClassPath()Ljava/lang/String;#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#95
soot.Scene.defaultClassPath()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(Ljava/lang/String;)Ljava/lang/StringBuffer;)#96
soot.Scene.defaultClassPath()Ljava/lang/String;#Pop(1)#97
soot.Scene.defaultClassPath()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#98
soot.Scene.defaultClassPath()Ljava/lang/String;#Get(Ljava/lang/String;,STATIC,Ljava/io/File;,separator)#99
soot.Scene.defaultClassPath()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(Ljava/lang/String;)Ljava/lang/StringBuffer;)#100
soot.Scene.defaultClassPath()Ljava/lang/String;#Pop(1)#101
soot.Scene.defaultClassPath()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#102
soot.Scene.defaultClassPath()Ljava/lang/String;#Constant(Ljava/lang/String;,"lib")#103
soot.Scene.defaultClassPath()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(Ljava/lang/String;)Ljava/lang/StringBuffer;)#104
soot.Scene.defaultClassPath()Ljava/lang/String;#Pop(1)#105
soot.Scene.defaultClassPath()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#106
soot.Scene.defaultClassPath()Ljava/lang/String;#Get(Ljava/lang/String;,STATIC,Ljava/io/File;,separator)#107
soot.Scene.defaultClassPath()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(Ljava/lang/String;)Ljava/lang/StringBuffer;)#108
soot.Scene.defaultClassPath()Ljava/lang/String;#Pop(1)#109
soot.Scene.defaultClassPath()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#110
soot.Scene.defaultClassPath()Ljava/lang/String;#Constant(Ljava/lang/String;,"rt.jar")#111
soot.Scene.defaultClassPath()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(Ljava/lang/String;)Ljava/lang/StringBuffer;)#112
soot.Scene.defaultClassPath()Ljava/lang/String;#Pop(1)#113
soot.Scene.defaultClassPath()Ljava/lang/String;#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#114
soot.Scene.defaultClassPath()Ljava/lang/String;#Invoke(VIRTUAL,Lsoot/options/Options;,whole_program,()Z)#115
soot.options.Options.whole_program()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.whole_program()Z#Get(Z,NONSTATIC,Lsoot/options/Options;,whole_program)#1
soot.options.Options.whole_program()Z#Return(I)#2
soot.Scene.defaultClassPath()Ljava/lang/String;#Constant(I,0)#116
soot.Scene.defaultClassPath()Ljava/lang/String;#ConditionalBranch(I,ne,122)#117
soot.Scene.defaultClassPath()Ljava/lang/String;#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#118
soot.Scene.defaultClassPath()Ljava/lang/String;#Invoke(VIRTUAL,Lsoot/options/Options;,output_format,()I)#119
soot.options.Options.output_format()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.output_format()I#Get(I,NONSTATIC,Lsoot/options/Options;,output_format)#1
soot.options.Options.output_format()I#Constant(I,0)#2
soot.options.Options.output_format()I#ConditionalBranch(I,ne,6)#3
soot.options.Options.output_format()I#Constant(I,12)#4
soot.options.Options.output_format()I#Return(I)#5
soot.Scene.defaultClassPath()Ljava/lang/String;#Constant(I,13)#120
soot.Scene.defaultClassPath()Ljava/lang/String;#ConditionalBranch(I,ne,142)#121
soot.Scene.defaultClassPath()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#142
soot.Scene.defaultClassPath()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,toString,()Ljava/lang/String;)#143
soot.Scene.defaultClassPath()Ljava/lang/String;#Return(Ljava/lang/Object;)#144
soot.Scene.getSootClassPath()Ljava/lang/String;#LocalStore(Ljava/lang/Object;,2)#16
soot.Scene.getSootClassPath()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#17
soot.Scene.getSootClassPath()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsoot/Scene;,sootClassPath)#18
soot.Scene.getSootClassPath()Ljava/lang/String;#Constant(L;,null)#19
soot.Scene.getSootClassPath()Ljava/lang/String;#ConditionalBranch(Ljava/lang/Object;,ne,25)#20
soot.Scene.getSootClassPath()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#21
soot.Scene.getSootClassPath()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#22
soot.Scene.getSootClassPath()Ljava/lang/String;#Put(Ljava/lang/String;,NONSTATIC,Lsoot/Scene;,sootClassPath)#23
soot.Scene.getSootClassPath()Ljava/lang/String;#Goto(43)#24
soot.Scene.getSootClassPath()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#43
soot.Scene.getSootClassPath()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsoot/Scene;,sootClassPath)#44
soot.Scene.getSootClassPath()Ljava/lang/String;#Return(Ljava/lang/Object;)#45
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(VIRTUAL,Lsoot/SourceLocator;,explodeClassPath,(Ljava/lang/String;)Ljava/util/List;)#42
soot.SourceLocator.explodeClassPath(Ljava/lang/String;)Ljava/util/List;#New(Ljava/util/ArrayList;,0)#0
soot.SourceLocator.explodeClassPath(Ljava/lang/String;)Ljava/util/List;#Dup(1,0)#1
soot.SourceLocator.explodeClassPath(Ljava/lang/String;)Ljava/util/List;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#2
soot.SourceLocator.explodeClassPath(Ljava/lang/String;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,2)#3
soot.SourceLocator.explodeClassPath(Ljava/lang/String;)Ljava/util/List;#New(Ljava/util/StringTokenizer;,0)#4
soot.SourceLocator.explodeClassPath(Ljava/lang/String;)Ljava/util/List;#Dup(1,0)#5
soot.SourceLocator.explodeClassPath(Ljava/lang/String;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#6
soot.SourceLocator.explodeClassPath(Ljava/lang/String;)Ljava/util/List;#Get(Ljava/lang/String;,STATIC,Ljava/io/File;,pathSeparator)#7
soot.SourceLocator.explodeClassPath(Ljava/lang/String;)Ljava/util/List;#Invoke(SPECIAL,Ljava/util/StringTokenizer;,<init>,(Ljava/lang/String;Ljava/lang/String;)V)#8
soot.SourceLocator.explodeClassPath(Ljava/lang/String;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,3)#9
soot.SourceLocator.explodeClassPath(Ljava/lang/String;)Ljava/util/List;#Goto(41)#10
soot.SourceLocator.explodeClassPath(Ljava/lang/String;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#41
soot.SourceLocator.explodeClassPath(Ljava/lang/String;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/util/StringTokenizer;,hasMoreTokens,()Z)#42
soot.SourceLocator.explodeClassPath(Ljava/lang/String;)Ljava/util/List;#Constant(I,0)#43
soot.SourceLocator.explodeClassPath(Ljava/lang/String;)Ljava/util/List;#ConditionalBranch(I,ne,11)#44
soot.SourceLocator.explodeClassPath(Ljava/lang/String;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#11
soot.SourceLocator.explodeClassPath(Ljava/lang/String;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/util/StringTokenizer;,nextToken,()Ljava/lang/String;)#12
soot.SourceLocator.explodeClassPath(Ljava/lang/String;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,4)#13
soot.SourceLocator.explodeClassPath(Ljava/lang/String;)Ljava/util/List;#New(Ljava/io/File;,0)#14
soot.SourceLocator.explodeClassPath(Ljava/lang/String;)Ljava/util/List;#Dup(1,0)#15
soot.SourceLocator.explodeClassPath(Ljava/lang/String;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,4)#16
soot.SourceLocator.explodeClassPath(Ljava/lang/String;)Ljava/util/List;#Invoke(SPECIAL,Ljava/io/File;,<init>,(Ljava/lang/String;)V)#17
soot.SourceLocator.explodeClassPath(Ljava/lang/String;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/io/File;,getCanonicalPath,()Ljava/lang/String;)#18
soot.SourceLocator.explodeClassPath(Ljava/lang/String;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,5)#19
soot.SourceLocator.explodeClassPath(Ljava/lang/String;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#20
soot.SourceLocator.explodeClassPath(Ljava/lang/String;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,5)#21
soot.SourceLocator.explodeClassPath(Ljava/lang/String;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#22
soot.SourceLocator.explodeClassPath(Ljava/lang/String;)Ljava/util/List;#Pop(1)#23
soot.SourceLocator.explodeClassPath(Ljava/lang/String;)Ljava/util/List;#Goto(41)#24
soot.SourceLocator.explodeClassPath(Ljava/lang/String;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#45
soot.SourceLocator.explodeClassPath(Ljava/lang/String;)Ljava/util/List;#Return(Ljava/lang/Object;)#46
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Put(Ljava/util/List;,NONSTATIC,Lsoot/SourceLocator;,classPath)#43
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,0)#44
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Get(Ljava/util/List;,NONSTATIC,Lsoot/SourceLocator;,classProviders)#45
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Constant(L;,null)#46
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#ConditionalBranch(Ljava/lang/Object;,ne,50)#47
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,0)#48
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(SPECIAL,Lsoot/SourceLocator;,setupClassProviders,()V)#49
soot.SourceLocator.setupClassProviders()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.SourceLocator.setupClassProviders()V#New(Ljava/util/LinkedList;,0)#1
soot.SourceLocator.setupClassProviders()V#Dup(1,0)#2
soot.SourceLocator.setupClassProviders()V#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#3
soot.SourceLocator.setupClassProviders()V#Put(Ljava/util/List;,NONSTATIC,Lsoot/SourceLocator;,classProviders)#4
soot.SourceLocator.setupClassProviders()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#5
soot.SourceLocator.setupClassProviders()V#Invoke(VIRTUAL,Lsoot/options/Options;,src_prec,()I)#6
soot.options.Options.src_prec()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.src_prec()I#Get(I,NONSTATIC,Lsoot/options/Options;,src_prec)#1
soot.options.Options.src_prec()I#Constant(I,0)#2
soot.options.Options.src_prec()I#ConditionalBranch(I,ne,6)#3
soot.options.Options.src_prec()I#Constant(I,1)#4
soot.options.Options.src_prec()I#Return(I)#5
soot.SourceLocator.setupClassProviders()V#Switch(82,1,8,2,30,3,60,4,38)#7
soot.SourceLocator.setupClassProviders()V#LocalLoad(Ljava/lang/Object;,0)#8
soot.SourceLocator.setupClassProviders()V#Get(Ljava/util/List;,NONSTATIC,Lsoot/SourceLocator;,classProviders)#9
soot.SourceLocator.setupClassProviders()V#New(Lsoot/CoffiClassProvider;,0)#10
soot.SourceLocator.setupClassProviders()V#Dup(1,0)#11
soot.SourceLocator.setupClassProviders()V#Invoke(SPECIAL,Lsoot/CoffiClassProvider;,<init>,()V)#12
soot.CoffiClassProvider.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.CoffiClassProvider.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.CoffiClassProvider.<init>()V#Return(V)#2
soot.SourceLocator.setupClassProviders()V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#13
soot.SourceLocator.setupClassProviders()V#Pop(1)#14
soot.SourceLocator.setupClassProviders()V#LocalLoad(Ljava/lang/Object;,0)#15
soot.SourceLocator.setupClassProviders()V#Get(Ljava/util/List;,NONSTATIC,Lsoot/SourceLocator;,classProviders)#16
soot.SourceLocator.setupClassProviders()V#New(Lsoot/JimpleClassProvider;,0)#17
soot.SourceLocator.setupClassProviders()V#Dup(1,0)#18
soot.SourceLocator.setupClassProviders()V#Invoke(SPECIAL,Lsoot/JimpleClassProvider;,<init>,()V)#19
soot.JimpleClassProvider.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.JimpleClassProvider.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.JimpleClassProvider.<init>()V#Return(V)#2
soot.SourceLocator.setupClassProviders()V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#20
soot.SourceLocator.setupClassProviders()V#Pop(1)#21
soot.SourceLocator.setupClassProviders()V#LocalLoad(Ljava/lang/Object;,0)#22
soot.SourceLocator.setupClassProviders()V#Get(Ljava/util/List;,NONSTATIC,Lsoot/SourceLocator;,classProviders)#23
soot.SourceLocator.setupClassProviders()V#New(Lsoot/JavaClassProvider;,0)#24
soot.SourceLocator.setupClassProviders()V#Dup(1,0)#25
soot.SourceLocator.setupClassProviders()V#Invoke(SPECIAL,Lsoot/JavaClassProvider;,<init>,()V)#26
soot.JavaClassProvider.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.JavaClassProvider.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.JavaClassProvider.<init>()V#Return(V)#2
soot.SourceLocator.setupClassProviders()V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#27
soot.SourceLocator.setupClassProviders()V#Pop(1)#28
soot.SourceLocator.setupClassProviders()V#Goto(87)#29
soot.SourceLocator.setupClassProviders()V#Return(V)#87
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Constant(L;,null)#50
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#LocalStore(Ljava/lang/Object;,2)#51
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,0)#52
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Get(Ljava/util/List;,NONSTATIC,Lsoot/SourceLocator;,classProviders)#53
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#54
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#LocalStore(Ljava/lang/Object;,4)#55
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Goto(73)#56
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,4)#73
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#74
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Constant(I,0)#75
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#ConditionalBranch(I,ne,57)#76
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,4)#57
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#58
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#CheckCast(Lsoot/ClassProvider;)#59
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#LocalStore(Ljava/lang/Object;,3)#60
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,3)#61
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,1)#62
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(INTERFACE,Lsoot/ClassProvider;,find,(Ljava/lang/String;)Lsoot/ClassSource;)#63
soot.CoffiClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#New(Ljava/lang/StringBuilder;,0)#0
soot.CoffiClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Dup(1,0)#1
soot.CoffiClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,1)#2
soot.CoffiClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Constant(I,46)#3
soot.CoffiClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Constant(I,47)#4
soot.CoffiClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(VIRTUAL,Ljava/lang/String;,replace,(CC)Ljava/lang/String;)#5
soot.CoffiClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#6
soot.CoffiClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#7
soot.CoffiClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Constant(Ljava/lang/String;,".class")#8
soot.CoffiClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#9
soot.CoffiClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#10
soot.CoffiClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#LocalStore(Ljava/lang/Object;,2)#11
soot.CoffiClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(STATIC,Lsoot/SourceLocator;,v,()Lsoot/SourceLocator;)#12
soot.CoffiClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,2)#13
soot.CoffiClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(VIRTUAL,Lsoot/SourceLocator;,lookupInClassPath,(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;)#14
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#LocalLoad(Ljava/lang/Object;,0)#0
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Get(Ljava/util/List;,NONSTATIC,Lsoot/SourceLocator;,classPath)#1
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#2
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#LocalStore(Ljava/lang/Object;,3)#3
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Goto(30)#4
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#LocalLoad(Ljava/lang/Object;,3)#30
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#31
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Constant(I,0)#32
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#ConditionalBranch(I,ne,5)#33
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#LocalLoad(Ljava/lang/Object;,3)#5
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#6
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#CheckCast(Ljava/lang/String;)#7
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#LocalStore(Ljava/lang/Object;,2)#8
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#LocalLoad(Ljava/lang/Object;,0)#9
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#LocalLoad(Ljava/lang/Object;,2)#10
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Invoke(SPECIAL,Lsoot/SourceLocator;,isJar,(Ljava/lang/String;)Z)#11
soot.SourceLocator.isJar(Ljava/lang/String;)Z#New(Ljava/io/File;,0)#0
soot.SourceLocator.isJar(Ljava/lang/String;)Z#Dup(1,0)#1
soot.SourceLocator.isJar(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#2
soot.SourceLocator.isJar(Ljava/lang/String;)Z#Invoke(SPECIAL,Ljava/io/File;,<init>,(Ljava/lang/String;)V)#3
soot.SourceLocator.isJar(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,2)#4
soot.SourceLocator.isJar(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,2)#5
soot.SourceLocator.isJar(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/io/File;,isFile,()Z)#6
soot.SourceLocator.isJar(Ljava/lang/String;)Z#Constant(I,0)#7
soot.SourceLocator.isJar(Ljava/lang/String;)Z#ConditionalBranch(I,eq,35)#8
soot.SourceLocator.isJar(Ljava/lang/String;)Z#Constant(I,0)#35
soot.SourceLocator.isJar(Ljava/lang/String;)Z#Return(I)#36
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Constant(I,0)#12
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#ConditionalBranch(I,eq,20)#13
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#LocalLoad(Ljava/lang/Object;,0)#20
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#LocalLoad(Ljava/lang/Object;,2)#21
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#LocalLoad(Ljava/lang/Object;,1)#22
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Invoke(SPECIAL,Lsoot/SourceLocator;,lookupInDir,(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;)#23
soot.SourceLocator.lookupInDir(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#New(Ljava/io/File;,0)#0
soot.SourceLocator.lookupInDir(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Dup(1,0)#1
soot.SourceLocator.lookupInDir(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#New(Ljava/lang/StringBuilder;,0)#2
soot.SourceLocator.lookupInDir(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Dup(1,0)#3
soot.SourceLocator.lookupInDir(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#LocalLoad(Ljava/lang/Object;,1)#4
soot.SourceLocator.lookupInDir(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#5
soot.SourceLocator.lookupInDir(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#6
soot.SourceLocator.lookupInDir(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Get(C,STATIC,Ljava/io/File;,separatorChar)#7
soot.SourceLocator.lookupInDir(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(C)Ljava/lang/StringBuilder;)#8
soot.SourceLocator.lookupInDir(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#LocalLoad(Ljava/lang/Object;,2)#9
soot.SourceLocator.lookupInDir(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#10
soot.SourceLocator.lookupInDir(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#11
soot.SourceLocator.lookupInDir(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Invoke(SPECIAL,Ljava/io/File;,<init>,(Ljava/lang/String;)V)#12
soot.SourceLocator.lookupInDir(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#LocalStore(Ljava/lang/Object;,3)#13
soot.SourceLocator.lookupInDir(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#LocalLoad(Ljava/lang/Object;,3)#14
soot.SourceLocator.lookupInDir(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Invoke(VIRTUAL,Ljava/io/File;,canRead,()Z)#15
soot.SourceLocator.lookupInDir(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Constant(I,0)#16
soot.SourceLocator.lookupInDir(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#ConditionalBranch(I,eq,23)#17
soot.SourceLocator.lookupInDir(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Constant(L;,null)#23
soot.SourceLocator.lookupInDir(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Return(Ljava/lang/Object;)#24
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#LocalStore(Ljava/lang/Object;,4)#24
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#LocalLoad(Ljava/lang/Object;,4)#25
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Constant(L;,null)#26
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#ConditionalBranch(Ljava/lang/Object;,eq,30)#27
soot.SourceLocator.isJar(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,2)#9
soot.SourceLocator.isJar(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/io/File;,canRead,()Z)#10
soot.SourceLocator.isJar(Ljava/lang/String;)Z#Constant(I,0)#11
soot.SourceLocator.isJar(Ljava/lang/String;)Z#ConditionalBranch(I,eq,35)#12
soot.SourceLocator.isJar(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#13
soot.SourceLocator.isJar(Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"zip")#14
soot.SourceLocator.isJar(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,endsWith,(Ljava/lang/String;)Z)#15
soot.SourceLocator.isJar(Ljava/lang/String;)Z#Constant(I,0)#16
soot.SourceLocator.isJar(Ljava/lang/String;)Z#ConditionalBranch(I,ne,23)#17
soot.SourceLocator.isJar(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#18
soot.SourceLocator.isJar(Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"jar")#19
soot.SourceLocator.isJar(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,endsWith,(Ljava/lang/String;)Z)#20
soot.SourceLocator.isJar(Ljava/lang/String;)Z#Constant(I,0)#21
soot.SourceLocator.isJar(Ljava/lang/String;)Z#ConditionalBranch(I,eq,25)#22
soot.SourceLocator.isJar(Ljava/lang/String;)Z#Constant(I,1)#23
soot.SourceLocator.isJar(Ljava/lang/String;)Z#Return(I)#24
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#LocalLoad(Ljava/lang/Object;,0)#14
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#LocalLoad(Ljava/lang/Object;,2)#15
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#LocalLoad(Ljava/lang/Object;,1)#16
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Invoke(SPECIAL,Lsoot/SourceLocator;,lookupInJar,(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;)#17
soot.SourceLocator.lookupInJar(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#New(Ljava/util/zip/ZipFile;,0)#0
soot.SourceLocator.lookupInJar(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Dup(1,0)#1
soot.SourceLocator.lookupInJar(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#LocalLoad(Ljava/lang/Object;,1)#2
soot.SourceLocator.lookupInJar(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Invoke(SPECIAL,Ljava/util/zip/ZipFile;,<init>,(Ljava/lang/String;)V)#3
soot.SourceLocator.lookupInJar(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#LocalStore(Ljava/lang/Object;,3)#4
soot.SourceLocator.lookupInJar(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#LocalLoad(Ljava/lang/Object;,3)#5
soot.SourceLocator.lookupInJar(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#LocalLoad(Ljava/lang/Object;,2)#6
soot.SourceLocator.lookupInJar(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Invoke(VIRTUAL,Ljava/util/zip/ZipFile;,getEntry,(Ljava/lang/String;)Ljava/util/zip/ZipEntry;)#7
soot.SourceLocator.lookupInJar(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#LocalStore(Ljava/lang/Object;,4)#8
soot.SourceLocator.lookupInJar(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#LocalLoad(Ljava/lang/Object;,4)#9
soot.SourceLocator.lookupInJar(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Constant(L;,null)#10
soot.SourceLocator.lookupInJar(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#ConditionalBranch(Ljava/lang/Object;,ne,14)#11
soot.SourceLocator.lookupInJar(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Constant(L;,null)#12
soot.SourceLocator.lookupInJar(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Return(Ljava/lang/Object;)#13
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#LocalStore(Ljava/lang/Object;,4)#18
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Goto(25)#19
soot.SourceLocator.lookupInJar(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#New(Lsoot/SourceLocator$FoundFile;,0)#14
soot.SourceLocator.lookupInJar(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Dup(1,0)#15
soot.SourceLocator.lookupInJar(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#LocalLoad(Ljava/lang/Object;,3)#16
soot.SourceLocator.lookupInJar(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#LocalLoad(Ljava/lang/Object;,4)#17
soot.SourceLocator.lookupInJar(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Invoke(SPECIAL,Lsoot/SourceLocator$FoundFile;,<init>,(Ljava/util/zip/ZipFile;Ljava/util/zip/ZipEntry;)V)#18
soot.SourceLocator$FoundFile.<init>(Ljava/util/zip/ZipFile;Ljava/util/zip/ZipEntry;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.SourceLocator$FoundFile.<init>(Ljava/util/zip/ZipFile;Ljava/util/zip/ZipEntry;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.SourceLocator$FoundFile.<init>(Ljava/util/zip/ZipFile;Ljava/util/zip/ZipEntry;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.SourceLocator$FoundFile.<init>(Ljava/util/zip/ZipFile;Ljava/util/zip/ZipEntry;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.SourceLocator$FoundFile.<init>(Ljava/util/zip/ZipFile;Ljava/util/zip/ZipEntry;)V#Put(Ljava/util/zip/ZipFile;,NONSTATIC,Lsoot/SourceLocator$FoundFile;,zipFile)#4
soot.SourceLocator$FoundFile.<init>(Ljava/util/zip/ZipFile;Ljava/util/zip/ZipEntry;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.SourceLocator$FoundFile.<init>(Ljava/util/zip/ZipFile;Ljava/util/zip/ZipEntry;)V#LocalLoad(Ljava/lang/Object;,2)#6
soot.SourceLocator$FoundFile.<init>(Ljava/util/zip/ZipFile;Ljava/util/zip/ZipEntry;)V#Put(Ljava/util/zip/ZipEntry;,NONSTATIC,Lsoot/SourceLocator$FoundFile;,entry)#7
soot.SourceLocator$FoundFile.<init>(Ljava/util/zip/ZipFile;Ljava/util/zip/ZipEntry;)V#Return(V)#8
soot.SourceLocator.lookupInJar(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Return(Ljava/lang/Object;)#19
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#LocalLoad(Ljava/lang/Object;,4)#28
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Return(Ljava/lang/Object;)#29
soot.CoffiClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#LocalStore(Ljava/lang/Object;,3)#15
soot.CoffiClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,3)#16
soot.CoffiClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Constant(L;,null)#17
soot.CoffiClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#ConditionalBranch(Ljava/lang/Object;,ne,21)#18
soot.CoffiClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#New(Lsoot/CoffiClassSource;,0)#21
soot.CoffiClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Dup(1,0)#22
soot.CoffiClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,1)#23
soot.CoffiClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,3)#24
soot.CoffiClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(VIRTUAL,Lsoot/SourceLocator$FoundFile;,inputStream,()Ljava/io/InputStream;)#25
soot.SourceLocator$FoundFile.inputStream()Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,0)#0
soot.SourceLocator$FoundFile.inputStream()Ljava/io/InputStream;#Get(Ljava/io/File;,NONSTATIC,Lsoot/SourceLocator$FoundFile;,file)#1
soot.SourceLocator$FoundFile.inputStream()Ljava/io/InputStream;#Constant(L;,null)#2
soot.SourceLocator$FoundFile.inputStream()Ljava/io/InputStream;#ConditionalBranch(Ljava/lang/Object;,eq,10)#3
soot.SourceLocator$FoundFile.inputStream()Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,0)#10
soot.SourceLocator$FoundFile.inputStream()Ljava/io/InputStream;#Get(Ljava/util/zip/ZipFile;,NONSTATIC,Lsoot/SourceLocator$FoundFile;,zipFile)#11
soot.SourceLocator$FoundFile.inputStream()Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,0)#12
soot.SourceLocator$FoundFile.inputStream()Ljava/io/InputStream;#Get(Ljava/util/zip/ZipEntry;,NONSTATIC,Lsoot/SourceLocator$FoundFile;,entry)#13
soot.SourceLocator$FoundFile.inputStream()Ljava/io/InputStream;#Invoke(VIRTUAL,Ljava/util/zip/ZipFile;,getInputStream,(Ljava/util/zip/ZipEntry;)Ljava/io/InputStream;)#14
soot.SourceLocator$FoundFile.inputStream()Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,0)#15
soot.SourceLocator$FoundFile.inputStream()Ljava/io/InputStream;#Get(Ljava/util/zip/ZipEntry;,NONSTATIC,Lsoot/SourceLocator$FoundFile;,entry)#16
soot.SourceLocator$FoundFile.inputStream()Ljava/io/InputStream;#Invoke(VIRTUAL,Ljava/util/zip/ZipEntry;,getSize,()J)#17
soot.SourceLocator$FoundFile.inputStream()Ljava/io/InputStream;#Invoke(STATIC,Lsoot/SourceLocator;,access$0,(Ljava/io/InputStream;J)Ljava/io/InputStream;)#18
soot.SourceLocator.access$0(Ljava/io/InputStream;J)Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,0)#0
soot.SourceLocator.access$0(Ljava/io/InputStream;J)Ljava/io/InputStream;#LocalLoad(J,1)#1
soot.SourceLocator.access$0(Ljava/io/InputStream;J)Ljava/io/InputStream;#Invoke(STATIC,Lsoot/SourceLocator;,doJDKBugWorkaround,(Ljava/io/InputStream;J)Ljava/io/InputStream;)#2
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#LocalLoad(J,1)#0
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#Conversion(J,I)#1
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#LocalStore(I,3)#2
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#LocalLoad(I,3)#3
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#New([B,1)#4
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#LocalStore(Ljava/lang/Object;,4)#5
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#Constant(I,1024)#6
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#LocalStore(I,5)#7
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#Constant(I,0)#8
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#LocalStore(I,6)#9
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#Constant(I,0)#10
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#LocalStore(I,7)#11
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#Goto(21)#12
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#LocalLoad(I,3)#21
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#Constant(I,0)#22
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#ConditionalBranch(I,le,35)#23
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,0)#24
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,4)#25
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#LocalLoad(I,7)#26
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#Constant(I,1024)#27
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#LocalLoad(I,3)#28
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#Invoke(STATIC,Ljava/lang/Math;,min,(II)I)#29
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#Invoke(VIRTUAL,Ljava/io/InputStream;,read,([BII)I)#30
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#Dup(1,0)#31
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#LocalStore(I,6)#32
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#Constant(I,-1)#33
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#ConditionalBranch(I,ne,13)#34
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#LocalLoad(I,7)#13
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#LocalLoad(I,6)#14
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#BinaryOp(I,add)#15
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#LocalStore(I,7)#16
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#LocalLoad(I,3)#17
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#LocalLoad(I,6)#18
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#BinaryOp(I,sub)#19
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#LocalStore(I,3)#20
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#New(Ljava/io/ByteArrayInputStream;,0)#35
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#Dup(1,0)#36
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,4)#37
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#Invoke(SPECIAL,Ljava/io/ByteArrayInputStream;,<init>,([B)V)#38
soot.SourceLocator.doJDKBugWorkaround(Ljava/io/InputStream;J)Ljava/io/InputStream;#Return(Ljava/lang/Object;)#39
soot.SourceLocator.access$0(Ljava/io/InputStream;J)Ljava/io/InputStream;#Return(Ljava/lang/Object;)#3
soot.SourceLocator$FoundFile.inputStream()Ljava/io/InputStream;#Return(Ljava/lang/Object;)#19
soot.CoffiClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(SPECIAL,Lsoot/CoffiClassSource;,<init>,(Ljava/lang/String;Ljava/io/InputStream;)V)#26
soot.CoffiClassSource.<init>(Ljava/lang/String;Ljava/io/InputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.CoffiClassSource.<init>(Ljava/lang/String;Ljava/io/InputStream;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.CoffiClassSource.<init>(Ljava/lang/String;Ljava/io/InputStream;)V#Invoke(SPECIAL,Lsoot/ClassSource;,<init>,(Ljava/lang/String;)V)#2
soot.ClassSource.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.ClassSource.<init>(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.ClassSource.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.ClassSource.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.ClassSource.<init>(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/ClassSource;,className)#4
soot.ClassSource.<init>(Ljava/lang/String;)V#Return(V)#5
soot.CoffiClassSource.<init>(Ljava/lang/String;Ljava/io/InputStream;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.CoffiClassSource.<init>(Ljava/lang/String;Ljava/io/InputStream;)V#LocalLoad(Ljava/lang/Object;,2)#4
soot.CoffiClassSource.<init>(Ljava/lang/String;Ljava/io/InputStream;)V#Put(Ljava/io/InputStream;,NONSTATIC,Lsoot/CoffiClassSource;,classFile)#5
soot.CoffiClassSource.<init>(Ljava/lang/String;Ljava/io/InputStream;)V#Return(V)#6
soot.CoffiClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Return(Ljava/lang/Object;)#27
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#LocalStore(Ljava/lang/Object;,5)#64
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,5)#65
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Constant(L;,null)#66
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#ConditionalBranch(Ljava/lang/Object;,eq,73)#67
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,5)#68
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Return(Ljava/lang/Object;)#69
soot.Scene.tryLoadClass(Ljava/lang/String;I)Lsoot/SootClass;#Constant(L;,null)#10
soot.Scene.tryLoadClass(Ljava/lang/String;I)Lsoot/SootClass;#ConditionalBranch(Ljava/lang/Object;,ne,17)#11
soot.Scene.tryLoadClass(Ljava/lang/String;I)Lsoot/SootClass;#Invoke(STATIC,Lsoot/SootResolver;,v,()Lsoot/SootResolver;)#17
soot.SootResolver.v()Lsoot/SootResolver;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.SootResolver.v()Lsoot/SootResolver;#Invoke(VIRTUAL,Lsoot/G;,soot_SootResolver,()Lsoot/SootResolver;)#1
soot.Singletons.soot_SootResolver()Lsoot/SootResolver;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_SootResolver()Lsoot/SootResolver;#Get(Lsoot/SootResolver;,NONSTATIC,Lsoot/Singletons;,instance_soot_SootResolver)#1
soot.Singletons.soot_SootResolver()Lsoot/SootResolver;#Constant(L;,null)#2
soot.Singletons.soot_SootResolver()Lsoot/SootResolver;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_SootResolver()Lsoot/SootResolver;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_SootResolver()Lsoot/SootResolver;#New(Lsoot/SootResolver;,0)#5
soot.Singletons.soot_SootResolver()Lsoot/SootResolver;#Dup(1,0)#6
soot.Singletons.soot_SootResolver()Lsoot/SootResolver;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_SootResolver()Lsoot/SootResolver;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_SootResolver()Lsoot/SootResolver;#Invoke(SPECIAL,Lsoot/SootResolver;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#New(Ljava/util/HashMap;,0)#3
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#4
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#5
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/SootResolver;,classToTypesSignature)#6
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#7
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#New(Ljava/util/HashMap;,0)#8
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#9
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#10
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/SootResolver;,classToTypesHierarchy)#11
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#12
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Constant(I,4)#13
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#New([Ljava/util/LinkedList;,1)#14
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Put([Ljava/util/LinkedList;,NONSTATIC,Lsoot/SootResolver;,worklist)#15
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#16
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Get([Ljava/util/LinkedList;,NONSTATIC,Lsoot/SootResolver;,worklist)#17
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Constant(I,1)#18
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#New(Ljava/util/LinkedList;,0)#19
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#20
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#21
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#ArrayStore(Ljava/lang/Object;)#22
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#23
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Get([Ljava/util/LinkedList;,NONSTATIC,Lsoot/SootResolver;,worklist)#24
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Constant(I,2)#25
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#New(Ljava/util/LinkedList;,0)#26
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#27
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#28
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#ArrayStore(Ljava/lang/Object;)#29
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#30
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Get([Ljava/util/LinkedList;,NONSTATIC,Lsoot/SootResolver;,worklist)#31
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Constant(I,3)#32
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#New(Ljava/util/LinkedList;,0)#33
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#34
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#35
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#ArrayStore(Ljava/lang/Object;)#36
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#37
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/JastAddJ/Program;,0)#38
soot.JastAddJ.ASTNode.<clinit>()V#New(Lsoot/JastAddJ/ASTNode$State;,0)#0
soot.JastAddJ.ASTNode.<clinit>()V#Dup(1,0)#1
soot.JastAddJ.ASTNode.<clinit>()V#Invoke(SPECIAL,Lsoot/JastAddJ/ASTNode$State;,<init>,()V)#2
soot.JastAddJ.ASTNode$State.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.JastAddJ.ASTNode$State.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.JastAddJ.ASTNode$State.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
soot.JastAddJ.ASTNode$State.<init>()V#Constant(I,0)#3
soot.JastAddJ.ASTNode$State.<init>()V#Put(Z,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,IN_CIRCLE)#4
soot.JastAddJ.ASTNode$State.<init>()V#LocalLoad(Ljava/lang/Object;,0)#5
soot.JastAddJ.ASTNode$State.<init>()V#Constant(I,1)#6
soot.JastAddJ.ASTNode$State.<init>()V#Put(I,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,CIRCLE_INDEX)#7
soot.JastAddJ.ASTNode$State.<init>()V#LocalLoad(Ljava/lang/Object;,0)#8
soot.JastAddJ.ASTNode$State.<init>()V#Constant(I,0)#9
soot.JastAddJ.ASTNode$State.<init>()V#Put(Z,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,CHANGE)#10
soot.JastAddJ.ASTNode$State.<init>()V#LocalLoad(Ljava/lang/Object;,0)#11
soot.JastAddJ.ASTNode$State.<init>()V#Constant(I,0)#12
soot.JastAddJ.ASTNode$State.<init>()V#Put(Z,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,RESET_CYCLE)#13
soot.JastAddJ.ASTNode$State.<init>()V#LocalLoad(Ljava/lang/Object;,0)#14
soot.JastAddJ.ASTNode$State.<init>()V#Constant(I,0)#15
soot.JastAddJ.ASTNode$State.<init>()V#Put(I,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,boundariesCrossed)#16
soot.JastAddJ.ASTNode$State.<init>()V#LocalLoad(Ljava/lang/Object;,0)#17
soot.JastAddJ.ASTNode$State.<init>()V#New(Lsoot/JastAddJ/Options;,0)#18
soot.JastAddJ.ASTNode$State.<init>()V#Dup(1,0)#19
soot.JastAddJ.ASTNode$State.<init>()V#Invoke(SPECIAL,Lsoot/JastAddJ/Options;,<init>,()V)#20
soot.JastAddJ.Options.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.JastAddJ.Options.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.JastAddJ.Options.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
soot.JastAddJ.Options.<init>()V#New(Ljava/util/HashMap;,0)#3
soot.JastAddJ.Options.<init>()V#Dup(1,0)#4
soot.JastAddJ.Options.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#5
soot.JastAddJ.Options.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/JastAddJ/Options;,options)#6
soot.JastAddJ.Options.<init>()V#LocalLoad(Ljava/lang/Object;,0)#7
soot.JastAddJ.Options.<init>()V#New(Ljava/util/HashMap;,0)#8
soot.JastAddJ.Options.<init>()V#Dup(1,0)#9
soot.JastAddJ.Options.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#10
soot.JastAddJ.Options.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/JastAddJ/Options;,optionDescriptions)#11
soot.JastAddJ.Options.<init>()V#LocalLoad(Ljava/lang/Object;,0)#12
soot.JastAddJ.Options.<init>()V#New(Ljava/util/HashSet;,0)#13
soot.JastAddJ.Options.<init>()V#Dup(1,0)#14
soot.JastAddJ.Options.<init>()V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#15
soot.JastAddJ.Options.<init>()V#Put(Ljava/util/HashSet;,NONSTATIC,Lsoot/JastAddJ/Options;,files)#16
soot.JastAddJ.Options.<init>()V#Return(V)#17
soot.JastAddJ.ASTNode$State.<init>()V#Put(Lsoot/JastAddJ/Options;,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,options)#21
soot.JastAddJ.ASTNode$State.<init>()V#LocalLoad(Ljava/lang/Object;,0)#22
soot.JastAddJ.ASTNode$State.<init>()V#Constant(I,0)#23
soot.JastAddJ.ASTNode$State.<init>()V#Put(I,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,replacePos)#24
soot.JastAddJ.ASTNode$State.<init>()V#LocalLoad(Ljava/lang/Object;,0)#25
soot.JastAddJ.ASTNode$State.<init>()V#Constant(I,0)#26
soot.JastAddJ.ASTNode$State.<init>()V#Put(I,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,duringLookupConstructor)#27
soot.JastAddJ.ASTNode$State.<init>()V#LocalLoad(Ljava/lang/Object;,0)#28
soot.JastAddJ.ASTNode$State.<init>()V#Constant(I,0)#29
soot.JastAddJ.ASTNode$State.<init>()V#Put(I,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,duringBoundNames)#30
soot.JastAddJ.ASTNode$State.<init>()V#LocalLoad(Ljava/lang/Object;,0)#31
soot.JastAddJ.ASTNode$State.<init>()V#Constant(I,0)#32
soot.JastAddJ.ASTNode$State.<init>()V#Put(I,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,duringResolveAmbiguousNames)#33
soot.JastAddJ.ASTNode$State.<init>()V#LocalLoad(Ljava/lang/Object;,0)#34
soot.JastAddJ.ASTNode$State.<init>()V#Constant(I,0)#35
soot.JastAddJ.ASTNode$State.<init>()V#Put(I,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,duringSyntacticClassification)#36
soot.JastAddJ.ASTNode$State.<init>()V#LocalLoad(Ljava/lang/Object;,0)#37
soot.JastAddJ.ASTNode$State.<init>()V#Constant(I,0)#38
soot.JastAddJ.ASTNode$State.<init>()V#Put(I,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,duringAnonymousClasses)#39
soot.JastAddJ.ASTNode$State.<init>()V#LocalLoad(Ljava/lang/Object;,0)#40
soot.JastAddJ.ASTNode$State.<init>()V#Constant(I,0)#41
soot.JastAddJ.ASTNode$State.<init>()V#Put(I,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,duringVariableDeclaration)#42
soot.JastAddJ.ASTNode$State.<init>()V#LocalLoad(Ljava/lang/Object;,0)#43
soot.JastAddJ.ASTNode$State.<init>()V#Constant(I,0)#44
soot.JastAddJ.ASTNode$State.<init>()V#Put(I,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,duringConstantExpression)#45
soot.JastAddJ.ASTNode$State.<init>()V#LocalLoad(Ljava/lang/Object;,0)#46
soot.JastAddJ.ASTNode$State.<init>()V#Constant(I,0)#47
soot.JastAddJ.ASTNode$State.<init>()V#Put(I,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,duringDefiniteAssignment)#48
soot.JastAddJ.ASTNode$State.<init>()V#LocalLoad(Ljava/lang/Object;,0)#49
soot.JastAddJ.ASTNode$State.<init>()V#Constant(I,0)#50
soot.JastAddJ.ASTNode$State.<init>()V#Put(I,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,duringAnnotations)#51
soot.JastAddJ.ASTNode$State.<init>()V#LocalLoad(Ljava/lang/Object;,0)#52
soot.JastAddJ.ASTNode$State.<init>()V#Constant(I,0)#53
soot.JastAddJ.ASTNode$State.<init>()V#Put(I,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,duringEnums)#54
soot.JastAddJ.ASTNode$State.<init>()V#LocalLoad(Ljava/lang/Object;,0)#55
soot.JastAddJ.ASTNode$State.<init>()V#Constant(I,0)#56
soot.JastAddJ.ASTNode$State.<init>()V#Put(I,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,duringGenericTypeVariables)#57
soot.JastAddJ.ASTNode$State.<init>()V#LocalLoad(Ljava/lang/Object;,0)#58
soot.JastAddJ.ASTNode$State.<init>()V#Constant(I,64)#59
soot.JastAddJ.ASTNode$State.<init>()V#New([I,1)#60
soot.JastAddJ.ASTNode$State.<init>()V#Put([I,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,stack)#61
soot.JastAddJ.ASTNode$State.<init>()V#LocalLoad(Ljava/lang/Object;,0)#62
soot.JastAddJ.ASTNode$State.<init>()V#Constant(I,0)#63
soot.JastAddJ.ASTNode$State.<init>()V#Put(I,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,pos)#64
soot.JastAddJ.ASTNode$State.<init>()V#Return(V)#65
soot.JastAddJ.ASTNode.<clinit>()V#Put(Lsoot/JastAddJ/ASTNode$State;,STATIC,Lsoot/JastAddJ/ASTNode;,state)#3
soot.JastAddJ.ASTNode.<clinit>()V#Return(V)#4
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#39
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/JastAddJ/Program;,<init>,()V)#40
soot.JastAddJ.Program.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.JastAddJ.Program.<init>()V#Invoke(SPECIAL,Lsoot/JastAddJ/ASTNode;,<init>,()V)#1
soot.JastAddJ.ASTNode.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.JastAddJ.ASTNode.<init>()V#Invoke(SPECIAL,Lbeaver/Symbol;,<init>,()V)#1
beaver.Symbol.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
beaver.Symbol.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
beaver.Symbol.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
beaver.Symbol.<init>()V#LocalLoad(Ljava/lang/Object;,0)#3
beaver.Symbol.<init>()V#Put(Ljava/lang/Object;,NONSTATIC,Lbeaver/Symbol;,value)#4
beaver.Symbol.<init>()V#Return(V)#5
soot.JastAddJ.ASTNode.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
soot.JastAddJ.ASTNode.<init>()V#Constant(I,0)#3
soot.JastAddJ.ASTNode.<init>()V#Put(Z,NONSTATIC,Lsoot/JastAddJ/ASTNode;,in$Circle)#4
soot.JastAddJ.ASTNode.<init>()V#LocalLoad(Ljava/lang/Object;,0)#5
soot.JastAddJ.ASTNode.<init>()V#Constant(I,0)#6
soot.JastAddJ.ASTNode.<init>()V#Put(Z,NONSTATIC,Lsoot/JastAddJ/ASTNode;,is$Final)#7
soot.JastAddJ.ASTNode.<init>()V#Return(V)#8
soot.JastAddJ.Program.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
soot.JastAddJ.Program.<init>()V#Constant(I,0)#3
soot.JastAddJ.Program.<init>()V#Put(Z,NONSTATIC,Lsoot/JastAddJ/Program;,pathsInitialized)#4
soot.JastAddJ.Program.<init>()V#LocalLoad(Ljava/lang/Object;,0)#5
soot.JastAddJ.Program.<init>()V#New(Lsoot/JastAddJ/FileNamesPart;,0)#6
soot.JastAddJ.Program.<init>()V#Dup(1,0)#7
soot.JastAddJ.Program.<init>()V#LocalLoad(Ljava/lang/Object;,0)#8
soot.JastAddJ.Program.<init>()V#Invoke(SPECIAL,Lsoot/JastAddJ/FileNamesPart;,<init>,(Lsoot/JastAddJ/Program;)V)#9
soot.JastAddJ.FileNamesPart.<init>(Lsoot/JastAddJ/Program;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.JastAddJ.FileNamesPart.<init>(Lsoot/JastAddJ/Program;)V#Invoke(SPECIAL,Lsoot/JastAddJ/PathPart;,<init>,()V)#1
soot.JastAddJ.PathPart.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.JastAddJ.PathPart.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.JastAddJ.PathPart.<init>()V#Return(V)#2
soot.JastAddJ.FileNamesPart.<init>(Lsoot/JastAddJ/Program;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.JastAddJ.FileNamesPart.<init>(Lsoot/JastAddJ/Program;)V#New(Ljava/util/HashMap;,0)#3
soot.JastAddJ.FileNamesPart.<init>(Lsoot/JastAddJ/Program;)V#Dup(1,0)#4
soot.JastAddJ.FileNamesPart.<init>(Lsoot/JastAddJ/Program;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#5
soot.JastAddJ.FileNamesPart.<init>(Lsoot/JastAddJ/Program;)V#Put(Ljava/util/HashMap;,NONSTATIC,Lsoot/JastAddJ/FileNamesPart;,sourceFiles)#6
soot.JastAddJ.FileNamesPart.<init>(Lsoot/JastAddJ/Program;)V#LocalLoad(Ljava/lang/Object;,0)#7
soot.JastAddJ.FileNamesPart.<init>(Lsoot/JastAddJ/Program;)V#New(Ljava/util/HashSet;,0)#8
soot.JastAddJ.FileNamesPart.<init>(Lsoot/JastAddJ/Program;)V#Dup(1,0)#9
soot.JastAddJ.FileNamesPart.<init>(Lsoot/JastAddJ/Program;)V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#10
soot.JastAddJ.FileNamesPart.<init>(Lsoot/JastAddJ/Program;)V#Put(Ljava/util/HashSet;,NONSTATIC,Lsoot/JastAddJ/FileNamesPart;,packages)#11
soot.JastAddJ.FileNamesPart.<init>(Lsoot/JastAddJ/Program;)V#LocalLoad(Ljava/lang/Object;,0)#12
soot.JastAddJ.FileNamesPart.<init>(Lsoot/JastAddJ/Program;)V#Constant(I,1)#13
soot.JastAddJ.FileNamesPart.<init>(Lsoot/JastAddJ/Program;)V#Put(Z,NONSTATIC,Lsoot/JastAddJ/FileNamesPart;,isSource)#14
soot.JastAddJ.FileNamesPart.<init>(Lsoot/JastAddJ/Program;)V#LocalLoad(Ljava/lang/Object;,0)#15
soot.JastAddJ.FileNamesPart.<init>(Lsoot/JastAddJ/Program;)V#LocalLoad(Ljava/lang/Object;,1)#16
soot.JastAddJ.FileNamesPart.<init>(Lsoot/JastAddJ/Program;)V#Put(Lsoot/JastAddJ/Program;,NONSTATIC,Lsoot/JastAddJ/FileNamesPart;,program)#17
soot.JastAddJ.FileNamesPart.<init>(Lsoot/JastAddJ/Program;)V#Return(V)#18
soot.JastAddJ.Program.<init>()V#Put(Lsoot/JastAddJ/FileNamesPart;,NONSTATIC,Lsoot/JastAddJ/Program;,sourceFiles)#10
soot.JastAddJ.Program.<init>()V#LocalLoad(Ljava/lang/Object;,0)#11
soot.JastAddJ.Program.<init>()V#Constant(I,0)#12
soot.JastAddJ.Program.<init>()V#Put(Z,NONSTATIC,Lsoot/JastAddJ/Program;,initPrimTypes)#13
soot.JastAddJ.Program.<init>()V#LocalLoad(Ljava/lang/Object;,0)#14
soot.JastAddJ.Program.<init>()V#Constant(I,0)#15
soot.JastAddJ.Program.<init>()V#Put(I,NONSTATIC,Lsoot/JastAddJ/Program;,srcPrec)#16
soot.JastAddJ.Program.<init>()V#LocalLoad(Ljava/lang/Object;,0)#17
soot.JastAddJ.Program.<init>()V#New(Ljava/util/HashMap;,0)#18
soot.JastAddJ.Program.<init>()V#Dup(1,0)#19
soot.JastAddJ.Program.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#20
soot.JastAddJ.Program.<init>()V#Put(Ljava/util/HashMap;,NONSTATIC,Lsoot/JastAddJ/Program;,loadedCompilationUnit)#21
soot.JastAddJ.Program.<init>()V#LocalLoad(Ljava/lang/Object;,0)#22
soot.JastAddJ.Program.<init>()V#Constant(I,0)#23
soot.JastAddJ.Program.<init>()V#Put(Z,NONSTATIC,Lsoot/JastAddJ/Program;,typeObject_computed)#24
soot.JastAddJ.Program.<init>()V#LocalLoad(Ljava/lang/Object;,0)#25
soot.JastAddJ.Program.<init>()V#Constant(I,0)#26
soot.JastAddJ.Program.<init>()V#Put(Z,NONSTATIC,Lsoot/JastAddJ/Program;,typeCloneable_computed)#27
soot.JastAddJ.Program.<init>()V#LocalLoad(Ljava/lang/Object;,0)#28
soot.JastAddJ.Program.<init>()V#Constant(I,0)#29
soot.JastAddJ.Program.<init>()V#Put(Z,NONSTATIC,Lsoot/JastAddJ/Program;,typeSerializable_computed)#30
soot.JastAddJ.Program.<init>()V#LocalLoad(Ljava/lang/Object;,0)#31
soot.JastAddJ.Program.<init>()V#Constant(I,0)#32
soot.JastAddJ.Program.<init>()V#Put(Z,NONSTATIC,Lsoot/JastAddJ/Program;,typeBoolean_computed)#33
soot.JastAddJ.Program.<init>()V#LocalLoad(Ljava/lang/Object;,0)#34
soot.JastAddJ.Program.<init>()V#Constant(I,0)#35
soot.JastAddJ.Program.<init>()V#Put(Z,NONSTATIC,Lsoot/JastAddJ/Program;,typeByte_computed)#36
soot.JastAddJ.Program.<init>()V#LocalLoad(Ljava/lang/Object;,0)#37
soot.JastAddJ.Program.<init>()V#Constant(I,0)#38
soot.JastAddJ.Program.<init>()V#Put(Z,NONSTATIC,Lsoot/JastAddJ/Program;,typeShort_computed)#39
soot.JastAddJ.Program.<init>()V#LocalLoad(Ljava/lang/Object;,0)#40
soot.JastAddJ.Program.<init>()V#Constant(I,0)#41
soot.JastAddJ.Program.<init>()V#Put(Z,NONSTATIC,Lsoot/JastAddJ/Program;,typeChar_computed)#42
soot.JastAddJ.Program.<init>()V#LocalLoad(Ljava/lang/Object;,0)#43
soot.JastAddJ.Program.<init>()V#Constant(I,0)#44
soot.JastAddJ.Program.<init>()V#Put(Z,NONSTATIC,Lsoot/JastAddJ/Program;,typeInt_computed)#45
soot.JastAddJ.Program.<init>()V#LocalLoad(Ljava/lang/Object;,0)#46
soot.JastAddJ.Program.<init>()V#Constant(I,0)#47
soot.JastAddJ.Program.<init>()V#Put(Z,NONSTATIC,Lsoot/JastAddJ/Program;,typeLong_computed)#48
soot.JastAddJ.Program.<init>()V#LocalLoad(Ljava/lang/Object;,0)#49
soot.JastAddJ.Program.<init>()V#Constant(I,0)#50
soot.JastAddJ.Program.<init>()V#Put(Z,NONSTATIC,Lsoot/JastAddJ/Program;,typeFloat_computed)#51
soot.JastAddJ.Program.<init>()V#LocalLoad(Ljava/lang/Object;,0)#52
soot.JastAddJ.Program.<init>()V#Constant(I,0)#53
soot.JastAddJ.Program.<init>()V#Put(Z,NONSTATIC,Lsoot/JastAddJ/Program;,typeDouble_computed)#54
soot.JastAddJ.Program.<init>()V#LocalLoad(Ljava/lang/Object;,0)#55
soot.JastAddJ.Program.<init>()V#Constant(I,0)#56
soot.JastAddJ.Program.<init>()V#Put(Z,NONSTATIC,Lsoot/JastAddJ/Program;,typeString_computed)#57
soot.JastAddJ.Program.<init>()V#LocalLoad(Ljava/lang/Object;,0)#58
soot.JastAddJ.Program.<init>()V#Constant(I,0)#59
soot.JastAddJ.Program.<init>()V#Put(Z,NONSTATIC,Lsoot/JastAddJ/Program;,typeVoid_computed)#60
soot.JastAddJ.Program.<init>()V#LocalLoad(Ljava/lang/Object;,0)#61
soot.JastAddJ.Program.<init>()V#Constant(I,0)#62
soot.JastAddJ.Program.<init>()V#Put(Z,NONSTATIC,Lsoot/JastAddJ/Program;,typeNull_computed)#63
soot.JastAddJ.Program.<init>()V#LocalLoad(Ljava/lang/Object;,0)#64
soot.JastAddJ.Program.<init>()V#Constant(I,0)#65
soot.JastAddJ.Program.<init>()V#Put(Z,NONSTATIC,Lsoot/JastAddJ/Program;,unknownType_computed)#66
soot.JastAddJ.Program.<init>()V#LocalLoad(Ljava/lang/Object;,0)#67
soot.JastAddJ.Program.<init>()V#Constant(I,0)#68
soot.JastAddJ.Program.<init>()V#Put(Z,NONSTATIC,Lsoot/JastAddJ/Program;,unknownConstructor_computed)#69
soot.JastAddJ.Program.<init>()V#LocalLoad(Ljava/lang/Object;,0)#70
soot.JastAddJ.Program.<init>()V#Constant(I,0)#71
soot.JastAddJ.Program.<init>()V#Put(Z,NONSTATIC,Lsoot/JastAddJ/Program;,wildcards_computed)#72
soot.JastAddJ.Program.<init>()V#LocalLoad(Ljava/lang/Object;,0)#73
soot.JastAddJ.Program.<init>()V#New(Lsoot/JastAddJ/List;,0)#74
soot.JastAddJ.Program.<init>()V#Dup(1,0)#75
soot.JastAddJ.Program.<init>()V#Invoke(SPECIAL,Lsoot/JastAddJ/List;,<init>,()V)#76
soot.JastAddJ.List.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.JastAddJ.List.<init>()V#Invoke(SPECIAL,Lsoot/JastAddJ/ASTNode;,<init>,()V)#1
soot.JastAddJ.List.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
soot.JastAddJ.List.<init>()V#Constant(I,1)#3
soot.JastAddJ.List.<init>()V#Put(Z,NONSTATIC,Lsoot/JastAddJ/List;,list$touched)#4
soot.JastAddJ.List.<init>()V#Return(V)#5
soot.JastAddJ.Program.<init>()V#Constant(I,0)#77
soot.JastAddJ.Program.<init>()V#Invoke(VIRTUAL,Lsoot/JastAddJ/Program;,setChild,(Lsoot/JastAddJ/ASTNode;I)V)#78
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#Get([Lsoot/JastAddJ/ASTNode;,NONSTATIC,Lsoot/JastAddJ/ASTNode;,children)#1
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#Constant(L;,null)#2
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#LocalLoad(Ljava/lang/Object;,0)#4
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#LocalLoad(I,2)#5
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#Constant(I,1)#6
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#BinaryOp(I,add)#7
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#New([Lsoot/JastAddJ/ASTNode;,1)#8
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#Put([Lsoot/JastAddJ/ASTNode;,NONSTATIC,Lsoot/JastAddJ/ASTNode;,children)#9
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#Goto(33)#10
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#LocalLoad(Ljava/lang/Object;,0)#33
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#Get([Lsoot/JastAddJ/ASTNode;,NONSTATIC,Lsoot/JastAddJ/ASTNode;,children)#34
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#LocalLoad(I,2)#35
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#LocalLoad(Ljava/lang/Object;,1)#36
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#ArrayStore(Ljava/lang/Object;)#37
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#LocalLoad(I,2)#38
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#LocalLoad(Ljava/lang/Object;,0)#39
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#Get(I,NONSTATIC,Lsoot/JastAddJ/ASTNode;,numChildren)#40
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#ConditionalBranch(I,lt,47)#41
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#LocalLoad(Ljava/lang/Object;,0)#42
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#LocalLoad(I,2)#43
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#Constant(I,1)#44
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#BinaryOp(I,add)#45
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#Put(I,NONSTATIC,Lsoot/JastAddJ/ASTNode;,numChildren)#46
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#LocalLoad(Ljava/lang/Object;,1)#47
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#Constant(L;,null)#48
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#ConditionalBranch(Ljava/lang/Object;,eq,56)#49
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#LocalLoad(Ljava/lang/Object;,1)#50
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#LocalLoad(Ljava/lang/Object;,0)#51
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#Invoke(VIRTUAL,Lsoot/JastAddJ/ASTNode;,setParent,(Lsoot/JastAddJ/ASTNode;)V)#52
soot.JastAddJ.ASTNode.setParent(Lsoot/JastAddJ/ASTNode;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.JastAddJ.ASTNode.setParent(Lsoot/JastAddJ/ASTNode;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.JastAddJ.ASTNode.setParent(Lsoot/JastAddJ/ASTNode;)V#Put(Lsoot/JastAddJ/ASTNode;,NONSTATIC,Lsoot/JastAddJ/ASTNode;,parent)#2
soot.JastAddJ.ASTNode.setParent(Lsoot/JastAddJ/ASTNode;)V#Return(V)#3
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#LocalLoad(Ljava/lang/Object;,1)#53
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#LocalLoad(I,2)#54
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#Put(I,NONSTATIC,Lsoot/JastAddJ/ASTNode;,childIndex)#55
soot.JastAddJ.ASTNode.setChild(Lsoot/JastAddJ/ASTNode;I)V#Return(V)#56
soot.JastAddJ.Program.<init>()V#LocalLoad(Ljava/lang/Object;,0)#79
soot.JastAddJ.Program.<init>()V#Constant(I,1)#80
soot.JastAddJ.Program.<init>()V#Invoke(VIRTUAL,Lsoot/JastAddJ/Program;,is$Final,(Z)V)#81
soot.JastAddJ.ASTNode.is$Final(Z)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.JastAddJ.ASTNode.is$Final(Z)V#LocalLoad(I,1)#1
soot.JastAddJ.ASTNode.is$Final(Z)V#Put(Z,NONSTATIC,Lsoot/JastAddJ/ASTNode;,is$Final)#2
soot.JastAddJ.ASTNode.is$Final(Z)V#Return(V)#3
soot.JastAddJ.Program.<init>()V#Return(V)#82
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/JastAddJ/Program;,NONSTATIC,Lsoot/SootResolver;,program)#41
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#42
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Get(Lsoot/JastAddJ/Program;,NONSTATIC,Lsoot/SootResolver;,program)#43
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Invoke(VIRTUAL,Lsoot/JastAddJ/Program;,state,()Lsoot/JastAddJ/ASTNode$State;)#44
soot.JastAddJ.ASTNode.state()Lsoot/JastAddJ/ASTNode$State;#Get(Lsoot/JastAddJ/ASTNode$State;,STATIC,Lsoot/JastAddJ/ASTNode;,state)#0
soot.JastAddJ.ASTNode.state()Lsoot/JastAddJ/ASTNode$State;#Return(Ljava/lang/Object;)#1
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Invoke(VIRTUAL,Lsoot/JastAddJ/ASTNode$State;,reset,()V)#45
soot.JastAddJ.ASTNode$State.reset()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.JastAddJ.ASTNode$State.reset()V#Constant(I,0)#1
soot.JastAddJ.ASTNode$State.reset()V#Put(Z,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,IN_CIRCLE)#2
soot.JastAddJ.ASTNode$State.reset()V#LocalLoad(Ljava/lang/Object;,0)#3
soot.JastAddJ.ASTNode$State.reset()V#Constant(I,1)#4
soot.JastAddJ.ASTNode$State.reset()V#Put(I,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,CIRCLE_INDEX)#5
soot.JastAddJ.ASTNode$State.reset()V#LocalLoad(Ljava/lang/Object;,0)#6
soot.JastAddJ.ASTNode$State.reset()V#Constant(I,0)#7
soot.JastAddJ.ASTNode$State.reset()V#Put(Z,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,CHANGE)#8
soot.JastAddJ.ASTNode$State.reset()V#LocalLoad(Ljava/lang/Object;,0)#9
soot.JastAddJ.ASTNode$State.reset()V#Constant(I,0)#10
soot.JastAddJ.ASTNode$State.reset()V#Put(I,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,boundariesCrossed)#11
soot.JastAddJ.ASTNode$State.reset()V#LocalLoad(Ljava/lang/Object;,0)#12
soot.JastAddJ.ASTNode$State.reset()V#Get(I,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,duringLookupConstructor)#13
soot.JastAddJ.ASTNode$State.reset()V#Constant(I,0)#14
soot.JastAddJ.ASTNode$State.reset()V#ConditionalBranch(I,eq,22)#15
soot.JastAddJ.ASTNode$State.reset()V#LocalLoad(Ljava/lang/Object;,0)#22
soot.JastAddJ.ASTNode$State.reset()V#Get(I,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,duringBoundNames)#23
soot.JastAddJ.ASTNode$State.reset()V#Constant(I,0)#24
soot.JastAddJ.ASTNode$State.reset()V#ConditionalBranch(I,eq,32)#25
soot.JastAddJ.ASTNode$State.reset()V#LocalLoad(Ljava/lang/Object;,0)#32
soot.JastAddJ.ASTNode$State.reset()V#Get(I,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,duringResolveAmbiguousNames)#33
soot.JastAddJ.ASTNode$State.reset()V#Constant(I,0)#34
soot.JastAddJ.ASTNode$State.reset()V#ConditionalBranch(I,eq,42)#35
soot.JastAddJ.ASTNode$State.reset()V#LocalLoad(Ljava/lang/Object;,0)#42
soot.JastAddJ.ASTNode$State.reset()V#Get(I,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,duringSyntacticClassification)#43
soot.JastAddJ.ASTNode$State.reset()V#Constant(I,0)#44
soot.JastAddJ.ASTNode$State.reset()V#ConditionalBranch(I,eq,52)#45
soot.JastAddJ.ASTNode$State.reset()V#LocalLoad(Ljava/lang/Object;,0)#52
soot.JastAddJ.ASTNode$State.reset()V#Get(I,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,duringAnonymousClasses)#53
soot.JastAddJ.ASTNode$State.reset()V#Constant(I,0)#54
soot.JastAddJ.ASTNode$State.reset()V#ConditionalBranch(I,eq,62)#55
soot.JastAddJ.ASTNode$State.reset()V#LocalLoad(Ljava/lang/Object;,0)#62
soot.JastAddJ.ASTNode$State.reset()V#Get(I,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,duringVariableDeclaration)#63
soot.JastAddJ.ASTNode$State.reset()V#Constant(I,0)#64
soot.JastAddJ.ASTNode$State.reset()V#ConditionalBranch(I,eq,72)#65
soot.JastAddJ.ASTNode$State.reset()V#LocalLoad(Ljava/lang/Object;,0)#72
soot.JastAddJ.ASTNode$State.reset()V#Get(I,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,duringConstantExpression)#73
soot.JastAddJ.ASTNode$State.reset()V#Constant(I,0)#74
soot.JastAddJ.ASTNode$State.reset()V#ConditionalBranch(I,eq,82)#75
soot.JastAddJ.ASTNode$State.reset()V#LocalLoad(Ljava/lang/Object;,0)#82
soot.JastAddJ.ASTNode$State.reset()V#Get(I,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,duringDefiniteAssignment)#83
soot.JastAddJ.ASTNode$State.reset()V#Constant(I,0)#84
soot.JastAddJ.ASTNode$State.reset()V#ConditionalBranch(I,eq,92)#85
soot.JastAddJ.ASTNode$State.reset()V#LocalLoad(Ljava/lang/Object;,0)#92
soot.JastAddJ.ASTNode$State.reset()V#Get(I,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,duringAnnotations)#93
soot.JastAddJ.ASTNode$State.reset()V#Constant(I,0)#94
soot.JastAddJ.ASTNode$State.reset()V#ConditionalBranch(I,eq,102)#95
soot.JastAddJ.ASTNode$State.reset()V#LocalLoad(Ljava/lang/Object;,0)#102
soot.JastAddJ.ASTNode$State.reset()V#Get(I,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,duringEnums)#103
soot.JastAddJ.ASTNode$State.reset()V#Constant(I,0)#104
soot.JastAddJ.ASTNode$State.reset()V#ConditionalBranch(I,eq,112)#105
soot.JastAddJ.ASTNode$State.reset()V#LocalLoad(Ljava/lang/Object;,0)#112
soot.JastAddJ.ASTNode$State.reset()V#Get(I,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,duringGenericTypeVariables)#113
soot.JastAddJ.ASTNode$State.reset()V#Constant(I,0)#114
soot.JastAddJ.ASTNode$State.reset()V#ConditionalBranch(I,eq,122)#115
soot.JastAddJ.ASTNode$State.reset()V#Return(V)#122
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#46
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Get(Lsoot/JastAddJ/Program;,NONSTATIC,Lsoot/SootResolver;,program)#47
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/JastAddJ/BytecodeParser;,0)#48
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#49
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/JastAddJ/BytecodeParser;,<init>,()V)#50
soot.JastAddJ.BytecodeParser.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.JastAddJ.BytecodeParser.<init>()V#Constant(Ljava/lang/String;,"")#1
soot.JastAddJ.BytecodeParser.<init>()V#Invoke(SPECIAL,Lsoot/JastAddJ/BytecodeParser;,<init>,(Ljava/lang/String;)V)#2
soot.JastAddJ.BytecodeParser.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.JastAddJ.BytecodeParser.<init>(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.JastAddJ.BytecodeParser.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.JastAddJ.BytecodeParser.<init>(Ljava/lang/String;)V#Constant(I,0)#3
soot.JastAddJ.BytecodeParser.<init>(Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsoot/JastAddJ/BytecodeParser;,isInnerClass)#4
soot.JastAddJ.BytecodeParser.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.JastAddJ.BytecodeParser.<init>(Ljava/lang/String;)V#Constant(L;,null)#6
soot.JastAddJ.BytecodeParser.<init>(Ljava/lang/String;)V#Put([Lsoot/JastAddJ/CONSTANT_Info;,NONSTATIC,Lsoot/JastAddJ/BytecodeParser;,constantPool)#7
soot.JastAddJ.BytecodeParser.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#8
soot.JastAddJ.BytecodeParser.<init>(Ljava/lang/String;)V#Constant(Ljava/lang/String;,".class")#9
soot.JastAddJ.BytecodeParser.<init>(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,endsWith,(Ljava/lang/String;)Z)#10
soot.JastAddJ.BytecodeParser.<init>(Ljava/lang/String;)V#Constant(I,0)#11
soot.JastAddJ.BytecodeParser.<init>(Ljava/lang/String;)V#ConditionalBranch(I,ne,25)#12
soot.JastAddJ.BytecodeParser.<init>(Ljava/lang/String;)V#New(Ljava/lang/StringBuilder;,0)#13
soot.JastAddJ.BytecodeParser.<init>(Ljava/lang/String;)V#Dup(1,0)#14
soot.JastAddJ.BytecodeParser.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#15
soot.JastAddJ.BytecodeParser.<init>(Ljava/lang/String;)V#Constant(I,46)#16
soot.JastAddJ.BytecodeParser.<init>(Ljava/lang/String;)V#Constant(I,47)#17
soot.JastAddJ.BytecodeParser.<init>(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,replace,(CC)Ljava/lang/String;)#18
soot.JastAddJ.BytecodeParser.<init>(Ljava/lang/String;)V#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#19
soot.JastAddJ.BytecodeParser.<init>(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#20
soot.JastAddJ.BytecodeParser.<init>(Ljava/lang/String;)V#Constant(Ljava/lang/String;,".class")#21
soot.JastAddJ.BytecodeParser.<init>(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#22
soot.JastAddJ.BytecodeParser.<init>(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#23
soot.JastAddJ.BytecodeParser.<init>(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,1)#24
soot.JastAddJ.BytecodeParser.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#25
soot.JastAddJ.BytecodeParser.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#26
soot.JastAddJ.BytecodeParser.<init>(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/JastAddJ/BytecodeParser;,name)#27
soot.JastAddJ.BytecodeParser.<init>(Ljava/lang/String;)V#Return(V)#28
soot.JastAddJ.BytecodeParser.<init>()V#Return(V)#3
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Invoke(VIRTUAL,Lsoot/JastAddJ/Program;,initBytecodeReader,(Lsoot/JastAddJ/BytecodeReader;)V)#51
soot.JastAddJ.Program.initBytecodeReader(Lsoot/JastAddJ/BytecodeReader;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.JastAddJ.Program.initBytecodeReader(Lsoot/JastAddJ/BytecodeReader;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.JastAddJ.Program.initBytecodeReader(Lsoot/JastAddJ/BytecodeReader;)V#Put(Lsoot/JastAddJ/BytecodeReader;,NONSTATIC,Lsoot/JastAddJ/Program;,bytecodeReader)#2
soot.JastAddJ.Program.initBytecodeReader(Lsoot/JastAddJ/BytecodeReader;)V#Return(V)#3
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#52
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Get(Lsoot/JastAddJ/Program;,NONSTATIC,Lsoot/SootResolver;,program)#53
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/SootResolver$1;,0)#54
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#55
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#56
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/SootResolver$1;,<init>,(Lsoot/SootResolver;)V)#57
soot.SootResolver$1.<init>(Lsoot/SootResolver;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootResolver$1.<init>(Lsoot/SootResolver;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.SootResolver$1.<init>(Lsoot/SootResolver;)V#Put(Lsoot/SootResolver;,NONSTATIC,Lsoot/SootResolver$1;,this$0)#2
soot.SootResolver$1.<init>(Lsoot/SootResolver;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.SootResolver$1.<init>(Lsoot/SootResolver;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#4
soot.SootResolver$1.<init>(Lsoot/SootResolver;)V#Return(V)#5
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Invoke(VIRTUAL,Lsoot/JastAddJ/Program;,initJavaParser,(Lsoot/JastAddJ/JavaParser;)V)#58
soot.JastAddJ.Program.initJavaParser(Lsoot/JastAddJ/JavaParser;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.JastAddJ.Program.initJavaParser(Lsoot/JastAddJ/JavaParser;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.JastAddJ.Program.initJavaParser(Lsoot/JastAddJ/JavaParser;)V#Put(Lsoot/JastAddJ/JavaParser;,NONSTATIC,Lsoot/JastAddJ/Program;,javaParser)#2
soot.JastAddJ.Program.initJavaParser(Lsoot/JastAddJ/JavaParser;)V#Return(V)#3
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#59
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Get(Lsoot/JastAddJ/Program;,NONSTATIC,Lsoot/SootResolver;,program)#60
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Invoke(VIRTUAL,Lsoot/JastAddJ/Program;,options,()Lsoot/JastAddJ/Options;)#61
soot.JastAddJ.ASTNode.options()Lsoot/JastAddJ/Options;#LocalLoad(Ljava/lang/Object;,0)#0
soot.JastAddJ.ASTNode.options()Lsoot/JastAddJ/Options;#Invoke(VIRTUAL,Lsoot/JastAddJ/ASTNode;,state,()Lsoot/JastAddJ/ASTNode$State;)#1
soot.JastAddJ.ASTNode.options()Lsoot/JastAddJ/Options;#Get(Lsoot/JastAddJ/Options;,NONSTATIC,Lsoot/JastAddJ/ASTNode$State;,options)#2
soot.JastAddJ.ASTNode.options()Lsoot/JastAddJ/Options;#Return(Ljava/lang/Object;)#3
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Invoke(VIRTUAL,Lsoot/JastAddJ/Options;,initOptions,()V)#62
soot.JastAddJ.Options.initOptions()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.JastAddJ.Options.initOptions()V#New(Ljava/util/HashMap;,0)#1
soot.JastAddJ.Options.initOptions()V#Dup(1,0)#2
soot.JastAddJ.Options.initOptions()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#3
soot.JastAddJ.Options.initOptions()V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/JastAddJ/Options;,options)#4
soot.JastAddJ.Options.initOptions()V#LocalLoad(Ljava/lang/Object;,0)#5
soot.JastAddJ.Options.initOptions()V#New(Ljava/util/HashMap;,0)#6
soot.JastAddJ.Options.initOptions()V#Dup(1,0)#7
soot.JastAddJ.Options.initOptions()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#8
soot.JastAddJ.Options.initOptions()V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/JastAddJ/Options;,optionDescriptions)#9
soot.JastAddJ.Options.initOptions()V#LocalLoad(Ljava/lang/Object;,0)#10
soot.JastAddJ.Options.initOptions()V#New(Ljava/util/HashSet;,0)#11
soot.JastAddJ.Options.initOptions()V#Dup(1,0)#12
soot.JastAddJ.Options.initOptions()V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#13
soot.JastAddJ.Options.initOptions()V#Put(Ljava/util/HashSet;,NONSTATIC,Lsoot/JastAddJ/Options;,files)#14
soot.JastAddJ.Options.initOptions()V#Return(V)#15
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#63
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Get(Lsoot/JastAddJ/Program;,NONSTATIC,Lsoot/SootResolver;,program)#64
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Invoke(VIRTUAL,Lsoot/JastAddJ/Program;,options,()Lsoot/JastAddJ/Options;)#65
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"-classpath")#66
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Invoke(VIRTUAL,Lsoot/JastAddJ/Options;,addKeyValueOption,(Ljava/lang/String;)V)#67
soot.JastAddJ.Options.addKeyValueOption(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.JastAddJ.Options.addKeyValueOption(Ljava/lang/String;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/JastAddJ/Options;,optionDescriptions)#1
soot.JastAddJ.Options.addKeyValueOption(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.JastAddJ.Options.addKeyValueOption(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#3
soot.JastAddJ.Options.addKeyValueOption(Ljava/lang/String;)V#Constant(I,0)#4
soot.JastAddJ.Options.addKeyValueOption(Ljava/lang/String;)V#ConditionalBranch(I,eq,19)#5
soot.JastAddJ.Options.addKeyValueOption(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#19
soot.JastAddJ.Options.addKeyValueOption(Ljava/lang/String;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/JastAddJ/Options;,optionDescriptions)#20
soot.JastAddJ.Options.addKeyValueOption(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#21
soot.JastAddJ.Options.addKeyValueOption(Ljava/lang/String;)V#New(Lsoot/JastAddJ/Options$Option;,0)#22
soot.JastAddJ.Options.addKeyValueOption(Ljava/lang/String;)V#Dup(1,0)#23
soot.JastAddJ.Options.addKeyValueOption(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#24
soot.JastAddJ.Options.addKeyValueOption(Ljava/lang/String;)V#Constant(I,1)#25
soot.JastAddJ.Options.addKeyValueOption(Ljava/lang/String;)V#Constant(I,0)#26
soot.JastAddJ.Options.addKeyValueOption(Ljava/lang/String;)V#Invoke(SPECIAL,Lsoot/JastAddJ/Options$Option;,<init>,(Ljava/lang/String;ZZ)V)#27
soot.JastAddJ.Options$Option.<init>(Ljava/lang/String;ZZ)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.JastAddJ.Options$Option.<init>(Ljava/lang/String;ZZ)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.JastAddJ.Options$Option.<init>(Ljava/lang/String;ZZ)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.JastAddJ.Options$Option.<init>(Ljava/lang/String;ZZ)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.JastAddJ.Options$Option.<init>(Ljava/lang/String;ZZ)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/JastAddJ/Options$Option;,name)#4
soot.JastAddJ.Options$Option.<init>(Ljava/lang/String;ZZ)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.JastAddJ.Options$Option.<init>(Ljava/lang/String;ZZ)V#LocalLoad(I,2)#6
soot.JastAddJ.Options$Option.<init>(Ljava/lang/String;ZZ)V#Put(Z,NONSTATIC,Lsoot/JastAddJ/Options$Option;,hasValue)#7
soot.JastAddJ.Options$Option.<init>(Ljava/lang/String;ZZ)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.JastAddJ.Options$Option.<init>(Ljava/lang/String;ZZ)V#LocalLoad(I,3)#9
soot.JastAddJ.Options$Option.<init>(Ljava/lang/String;ZZ)V#Put(Z,NONSTATIC,Lsoot/JastAddJ/Options$Option;,isCollection)#10
soot.JastAddJ.Options$Option.<init>(Ljava/lang/String;ZZ)V#Return(V)#11
soot.JastAddJ.Options.addKeyValueOption(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#28
soot.JastAddJ.Options.addKeyValueOption(Ljava/lang/String;)V#Pop(1)#29
soot.JastAddJ.Options.addKeyValueOption(Ljava/lang/String;)V#Return(V)#30
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#68
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Get(Lsoot/JastAddJ/Program;,NONSTATIC,Lsoot/SootResolver;,program)#69
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Invoke(VIRTUAL,Lsoot/JastAddJ/Program;,options,()Lsoot/JastAddJ/Options;)#70
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#71
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Invoke(VIRTUAL,Lsoot/Scene;,getSootClassPath,()Ljava/lang/String;)#72
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"-classpath")#73
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Invoke(VIRTUAL,Lsoot/JastAddJ/Options;,setValueForOption,(Ljava/lang/String;Ljava/lang/String;)V)#74
soot.JastAddJ.Options.setValueForOption(Ljava/lang/String;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.JastAddJ.Options.setValueForOption(Ljava/lang/String;Ljava/lang/String;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/JastAddJ/Options;,options)#1
soot.JastAddJ.Options.setValueForOption(Ljava/lang/String;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#2
soot.JastAddJ.Options.setValueForOption(Ljava/lang/String;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.JastAddJ.Options.setValueForOption(Ljava/lang/String;Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#4
soot.JastAddJ.Options.setValueForOption(Ljava/lang/String;Ljava/lang/String;)V#Pop(1)#5
soot.JastAddJ.Options.setValueForOption(Ljava/lang/String;Ljava/lang/String;)V#Return(V)#6
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#75
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Invoke(VIRTUAL,Lsoot/options/Options;,src_prec,()I)#76
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Constant(I,4)#77
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#ConditionalBranch(I,ne,84)#78
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#84
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Invoke(VIRTUAL,Lsoot/options/Options;,src_prec,()I)#85
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Constant(I,1)#86
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#ConditionalBranch(I,ne,93)#87
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#88
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Get(Lsoot/JastAddJ/Program;,NONSTATIC,Lsoot/SootResolver;,program)#89
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Constant(I,2)#90
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Invoke(VIRTUAL,Lsoot/JastAddJ/Program;,setSrcPrec,(I)V)#91
soot.JastAddJ.Program.setSrcPrec(I)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.JastAddJ.Program.setSrcPrec(I)V#LocalLoad(I,1)#1
soot.JastAddJ.Program.setSrcPrec(I)V#Put(I,NONSTATIC,Lsoot/JastAddJ/Program;,srcPrec)#2
soot.JastAddJ.Program.setSrcPrec(I)V#Return(V)#3
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Goto(101)#92
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#101
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Get(Lsoot/JastAddJ/Program;,NONSTATIC,Lsoot/SootResolver;,program)#102
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Invoke(VIRTUAL,Lsoot/JastAddJ/Program;,initPaths,()V)#103
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.JastAddJ.Program.initPaths()V#Get(Z,NONSTATIC,Lsoot/JastAddJ/Program;,pathsInitialized)#1
soot.JastAddJ.Program.initPaths()V#Constant(I,0)#2
soot.JastAddJ.Program.initPaths()V#ConditionalBranch(I,ne,311)#3
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,0)#4
soot.JastAddJ.Program.initPaths()V#Constant(I,1)#5
soot.JastAddJ.Program.initPaths()V#Put(Z,NONSTATIC,Lsoot/JastAddJ/Program;,pathsInitialized)#6
soot.JastAddJ.Program.initPaths()V#New(Ljava/util/ArrayList;,0)#7
soot.JastAddJ.Program.initPaths()V#Dup(1,0)#8
soot.JastAddJ.Program.initPaths()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#9
soot.JastAddJ.Program.initPaths()V#LocalStore(Ljava/lang/Object;,1)#10
soot.JastAddJ.Program.initPaths()V#New(Ljava/util/ArrayList;,0)#11
soot.JastAddJ.Program.initPaths()V#Dup(1,0)#12
soot.JastAddJ.Program.initPaths()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#13
soot.JastAddJ.Program.initPaths()V#LocalStore(Ljava/lang/Object;,2)#14
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,0)#15
soot.JastAddJ.Program.initPaths()V#Invoke(VIRTUAL,Lsoot/JastAddJ/Program;,options,()Lsoot/JastAddJ/Options;)#16
soot.JastAddJ.Program.initPaths()V#Constant(Ljava/lang/String;,"-bootclasspath")#17
soot.JastAddJ.Program.initPaths()V#Invoke(VIRTUAL,Lsoot/JastAddJ/Options;,hasValueForOption,(Ljava/lang/String;)Z)#18
soot.JastAddJ.Options.hasValueForOption(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.JastAddJ.Options.hasValueForOption(Ljava/lang/String;)Z#Get(Ljava/util/Map;,NONSTATIC,Lsoot/JastAddJ/Options;,options)#1
soot.JastAddJ.Options.hasValueForOption(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#2
soot.JastAddJ.Options.hasValueForOption(Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#3
soot.JastAddJ.Options.hasValueForOption(Ljava/lang/String;)Z#Constant(I,0)#4
soot.JastAddJ.Options.hasValueForOption(Ljava/lang/String;)Z#ConditionalBranch(I,eq,14)#5
soot.JastAddJ.Options.hasValueForOption(Ljava/lang/String;)Z#Constant(I,0)#14
soot.JastAddJ.Options.hasValueForOption(Ljava/lang/String;)Z#Return(I)#15
soot.JastAddJ.Program.initPaths()V#Constant(I,0)#19
soot.JastAddJ.Program.initPaths()V#ConditionalBranch(I,eq,29)#20
soot.JastAddJ.Program.initPaths()V#Constant(Ljava/lang/String;,"sun.boot.class.path")#29
soot.JastAddJ.Program.initPaths()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#30
soot.JastAddJ.Program.initPaths()V#Get(Ljava/lang/String;,STATIC,Ljava/io/File;,pathSeparator)#31
soot.JastAddJ.Program.initPaths()V#Invoke(VIRTUAL,Ljava/lang/String;,split,(Ljava/lang/String;)[Ljava/lang/String;)#32
soot.JastAddJ.Program.initPaths()V#LocalStore(Ljava/lang/Object;,3)#33
soot.JastAddJ.Program.initPaths()V#Constant(I,0)#34
soot.JastAddJ.Program.initPaths()V#LocalStore(I,4)#35
soot.JastAddJ.Program.initPaths()V#Goto(47)#36
soot.JastAddJ.Program.initPaths()V#LocalLoad(I,4)#47
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,3)#48
soot.JastAddJ.Program.initPaths()V#ArrayLength()#49
soot.JastAddJ.Program.initPaths()V#ConditionalBranch(I,lt,37)#50
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,1)#37
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,3)#38
soot.JastAddJ.Program.initPaths()V#LocalLoad(I,4)#39
soot.JastAddJ.Program.initPaths()V#ArrayLoad(Ljava/lang/Object;)#40
soot.JastAddJ.Program.initPaths()V#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#41
soot.JastAddJ.Program.initPaths()V#Pop(1)#42
soot.JastAddJ.Program.initPaths()V#LocalLoad(I,4)#43
soot.JastAddJ.Program.initPaths()V#Constant(I,1)#44
soot.JastAddJ.Program.initPaths()V#BinaryOp(I,add)#45
soot.JastAddJ.Program.initPaths()V#LocalStore(I,4)#46
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,0)#51
soot.JastAddJ.Program.initPaths()V#Invoke(VIRTUAL,Lsoot/JastAddJ/Program;,options,()Lsoot/JastAddJ/Options;)#52
soot.JastAddJ.Program.initPaths()V#Constant(Ljava/lang/String;,"-extdirs")#53
soot.JastAddJ.Program.initPaths()V#Invoke(VIRTUAL,Lsoot/JastAddJ/Options;,hasValueForOption,(Ljava/lang/String;)Z)#54
soot.JastAddJ.Program.initPaths()V#Constant(I,0)#55
soot.JastAddJ.Program.initPaths()V#ConditionalBranch(I,eq,65)#56
soot.JastAddJ.Program.initPaths()V#Constant(Ljava/lang/String;,"java.ext.dirs")#65
soot.JastAddJ.Program.initPaths()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#66
soot.JastAddJ.Program.initPaths()V#Get(Ljava/lang/String;,STATIC,Ljava/io/File;,pathSeparator)#67
soot.JastAddJ.Program.initPaths()V#Invoke(VIRTUAL,Ljava/lang/String;,split,(Ljava/lang/String;)[Ljava/lang/String;)#68
soot.JastAddJ.Program.initPaths()V#LocalStore(Ljava/lang/Object;,4)#69
soot.JastAddJ.Program.initPaths()V#Constant(I,0)#70
soot.JastAddJ.Program.initPaths()V#LocalStore(I,5)#71
soot.JastAddJ.Program.initPaths()V#Goto(83)#72
soot.JastAddJ.Program.initPaths()V#LocalLoad(I,5)#83
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,4)#84
soot.JastAddJ.Program.initPaths()V#ArrayLength()#85
soot.JastAddJ.Program.initPaths()V#ConditionalBranch(I,lt,73)#86
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,1)#73
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,4)#74
soot.JastAddJ.Program.initPaths()V#LocalLoad(I,5)#75
soot.JastAddJ.Program.initPaths()V#ArrayLoad(Ljava/lang/Object;)#76
soot.JastAddJ.Program.initPaths()V#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#77
soot.JastAddJ.Program.initPaths()V#Pop(1)#78
soot.JastAddJ.Program.initPaths()V#LocalLoad(I,5)#79
soot.JastAddJ.Program.initPaths()V#Constant(I,1)#80
soot.JastAddJ.Program.initPaths()V#BinaryOp(I,add)#81
soot.JastAddJ.Program.initPaths()V#LocalStore(I,5)#82
soot.JastAddJ.Program.initPaths()V#Constant(L;,null)#87
soot.JastAddJ.Program.initPaths()V#CheckCast([Ljava/lang/String;)#88
soot.JastAddJ.Program.initPaths()V#LocalStore(Ljava/lang/Object;,5)#89
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,0)#90
soot.JastAddJ.Program.initPaths()V#Invoke(VIRTUAL,Lsoot/JastAddJ/Program;,options,()Lsoot/JastAddJ/Options;)#91
soot.JastAddJ.Program.initPaths()V#Constant(Ljava/lang/String;,"-classpath")#92
soot.JastAddJ.Program.initPaths()V#Invoke(VIRTUAL,Lsoot/JastAddJ/Options;,hasValueForOption,(Ljava/lang/String;)Z)#93
soot.JastAddJ.Options.hasValueForOption(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#6
soot.JastAddJ.Options.hasValueForOption(Ljava/lang/String;)Z#Get(Ljava/util/Map;,NONSTATIC,Lsoot/JastAddJ/Options;,options)#7
soot.JastAddJ.Options.hasValueForOption(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#8
soot.JastAddJ.Options.hasValueForOption(Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#9
soot.JastAddJ.Options.hasValueForOption(Ljava/lang/String;)Z#Constant(L;,null)#10
soot.JastAddJ.Options.hasValueForOption(Ljava/lang/String;)Z#ConditionalBranch(Ljava/lang/Object;,eq,14)#11
soot.JastAddJ.Options.hasValueForOption(Ljava/lang/String;)Z#Constant(I,1)#12
soot.JastAddJ.Options.hasValueForOption(Ljava/lang/String;)Z#Return(I)#13
soot.JastAddJ.Program.initPaths()V#Constant(I,0)#94
soot.JastAddJ.Program.initPaths()V#ConditionalBranch(I,eq,104)#95
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,0)#96
soot.JastAddJ.Program.initPaths()V#Invoke(VIRTUAL,Lsoot/JastAddJ/Program;,options,()Lsoot/JastAddJ/Options;)#97
soot.JastAddJ.Program.initPaths()V#Constant(Ljava/lang/String;,"-classpath")#98
soot.JastAddJ.Program.initPaths()V#Invoke(VIRTUAL,Lsoot/JastAddJ/Options;,getValueForOption,(Ljava/lang/String;)Ljava/lang/String;)#99
soot.JastAddJ.Options.getValueForOption(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.JastAddJ.Options.getValueForOption(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#1
soot.JastAddJ.Options.getValueForOption(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Lsoot/JastAddJ/Options;,hasValueForOption,(Ljava/lang/String;)Z)#2
soot.JastAddJ.Options.getValueForOption(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#3
soot.JastAddJ.Options.getValueForOption(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ne,18)#4
soot.JastAddJ.Options.getValueForOption(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#18
soot.JastAddJ.Options.getValueForOption(Ljava/lang/String;)Ljava/lang/String;#Get(Ljava/util/Map;,NONSTATIC,Lsoot/JastAddJ/Options;,options)#19
soot.JastAddJ.Options.getValueForOption(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#20
soot.JastAddJ.Options.getValueForOption(Ljava/lang/String;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#21
soot.JastAddJ.Options.getValueForOption(Ljava/lang/String;)Ljava/lang/String;#CheckCast(Ljava/lang/String;)#22
soot.JastAddJ.Options.getValueForOption(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#23
soot.JastAddJ.Program.initPaths()V#Get(Ljava/lang/String;,STATIC,Ljava/io/File;,pathSeparator)#100
soot.JastAddJ.Program.initPaths()V#Invoke(VIRTUAL,Ljava/lang/String;,split,(Ljava/lang/String;)[Ljava/lang/String;)#101
soot.JastAddJ.Program.initPaths()V#LocalStore(Ljava/lang/Object;,5)#102
soot.JastAddJ.Program.initPaths()V#Goto(148)#103
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,0)#148
soot.JastAddJ.Program.initPaths()V#Invoke(VIRTUAL,Lsoot/JastAddJ/Program;,options,()Lsoot/JastAddJ/Options;)#149
soot.JastAddJ.Program.initPaths()V#Constant(Ljava/lang/String;,"-sourcepath")#150
soot.JastAddJ.Program.initPaths()V#Invoke(VIRTUAL,Lsoot/JastAddJ/Options;,hasValueForOption,(Ljava/lang/String;)Z)#151
soot.JastAddJ.Program.initPaths()V#Constant(I,0)#152
soot.JastAddJ.Program.initPaths()V#ConditionalBranch(I,ne,178)#153
soot.JastAddJ.Program.initPaths()V#Constant(I,0)#154
soot.JastAddJ.Program.initPaths()V#LocalStore(I,6)#155
soot.JastAddJ.Program.initPaths()V#Goto(173)#156
soot.JastAddJ.Program.initPaths()V#LocalLoad(I,6)#173
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,5)#174
soot.JastAddJ.Program.initPaths()V#ArrayLength()#175
soot.JastAddJ.Program.initPaths()V#ConditionalBranch(I,lt,157)#176
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,1)#157
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,5)#158
soot.JastAddJ.Program.initPaths()V#LocalLoad(I,6)#159
soot.JastAddJ.Program.initPaths()V#ArrayLoad(Ljava/lang/Object;)#160
soot.JastAddJ.Program.initPaths()V#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#161
soot.JastAddJ.Program.initPaths()V#Pop(1)#162
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,2)#163
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,5)#164
soot.JastAddJ.Program.initPaths()V#LocalLoad(I,6)#165
soot.JastAddJ.Program.initPaths()V#ArrayLoad(Ljava/lang/Object;)#166
soot.JastAddJ.Program.initPaths()V#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#167
soot.JastAddJ.Program.initPaths()V#Pop(1)#168
soot.JastAddJ.Program.initPaths()V#LocalLoad(I,6)#169
soot.JastAddJ.Program.initPaths()V#Constant(I,1)#170
soot.JastAddJ.Program.initPaths()V#BinaryOp(I,add)#171
soot.JastAddJ.Program.initPaths()V#LocalStore(I,6)#172
soot.JastAddJ.Program.initPaths()V#Goto(219)#177
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,0)#219
soot.JastAddJ.Program.initPaths()V#New(Ljava/util/ArrayList;,0)#220
soot.JastAddJ.Program.initPaths()V#Dup(1,0)#221
soot.JastAddJ.Program.initPaths()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#222
soot.JastAddJ.Program.initPaths()V#Put(Ljava/util/ArrayList;,NONSTATIC,Lsoot/JastAddJ/Program;,classPath)#223
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,0)#224
soot.JastAddJ.Program.initPaths()V#New(Ljava/util/ArrayList;,0)#225
soot.JastAddJ.Program.initPaths()V#Dup(1,0)#226
soot.JastAddJ.Program.initPaths()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#227
soot.JastAddJ.Program.initPaths()V#Put(Ljava/util/ArrayList;,NONSTATIC,Lsoot/JastAddJ/Program;,sourcePath)#228
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,1)#229
soot.JastAddJ.Program.initPaths()V#Invoke(VIRTUAL,Ljava/util/ArrayList;,iterator,()Ljava/util/Iterator;)#230
soot.JastAddJ.Program.initPaths()V#LocalStore(Ljava/lang/Object;,6)#231
soot.JastAddJ.Program.initPaths()V#Goto(266)#232
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,6)#266
soot.JastAddJ.Program.initPaths()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#267
soot.JastAddJ.Program.initPaths()V#Constant(I,0)#268
soot.JastAddJ.Program.initPaths()V#ConditionalBranch(I,ne,233)#269
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,6)#233
soot.JastAddJ.Program.initPaths()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#234
soot.JastAddJ.Program.initPaths()V#CheckCast(Ljava/lang/String;)#235
soot.JastAddJ.Program.initPaths()V#LocalStore(Ljava/lang/Object;,7)#236
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,7)#237
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,0)#238
soot.JastAddJ.Program.initPaths()V#Invoke(STATIC,Lsoot/JastAddJ/PathPart;,createClassPath,(Ljava/lang/String;Lsoot/JastAddJ/Program;)Lsoot/JastAddJ/PathPart;)#239
soot.JastAddJ.PathPart.createClassPath(Ljava/lang/String;Lsoot/JastAddJ/Program;)Lsoot/JastAddJ/PathPart;#LocalLoad(Ljava/lang/Object;,0)#0
soot.JastAddJ.PathPart.createClassPath(Ljava/lang/String;Lsoot/JastAddJ/Program;)Lsoot/JastAddJ/PathPart;#Invoke(STATIC,Lsoot/JastAddJ/PathPart;,createPathPart,(Ljava/lang/String;)Lsoot/JastAddJ/PathPart;)#1
soot.JastAddJ.PathPart.createPathPart(Ljava/lang/String;)Lsoot/JastAddJ/PathPart;#New(Ljava/io/File;,0)#0
soot.JastAddJ.PathPart.createPathPart(Ljava/lang/String;)Lsoot/JastAddJ/PathPart;#Dup(1,0)#1
soot.JastAddJ.PathPart.createPathPart(Ljava/lang/String;)Lsoot/JastAddJ/PathPart;#LocalLoad(Ljava/lang/Object;,0)#2
soot.JastAddJ.PathPart.createPathPart(Ljava/lang/String;)Lsoot/JastAddJ/PathPart;#Invoke(SPECIAL,Ljava/io/File;,<init>,(Ljava/lang/String;)V)#3
soot.JastAddJ.PathPart.createPathPart(Ljava/lang/String;)Lsoot/JastAddJ/PathPart;#LocalStore(Ljava/lang/Object;,1)#4
soot.JastAddJ.PathPart.createPathPart(Ljava/lang/String;)Lsoot/JastAddJ/PathPart;#LocalLoad(Ljava/lang/Object;,1)#5
soot.JastAddJ.PathPart.createPathPart(Ljava/lang/String;)Lsoot/JastAddJ/PathPart;#Invoke(VIRTUAL,Ljava/io/File;,isDirectory,()Z)#6
soot.JastAddJ.PathPart.createPathPart(Ljava/lang/String;)Lsoot/JastAddJ/PathPart;#Constant(I,0)#7
soot.JastAddJ.PathPart.createPathPart(Ljava/lang/String;)Lsoot/JastAddJ/PathPart;#ConditionalBranch(I,eq,14)#8
soot.JastAddJ.PathPart.createPathPart(Ljava/lang/String;)Lsoot/JastAddJ/PathPart;#LocalLoad(Ljava/lang/Object;,1)#14
soot.JastAddJ.PathPart.createPathPart(Ljava/lang/String;)Lsoot/JastAddJ/PathPart;#Invoke(VIRTUAL,Ljava/io/File;,isFile,()Z)#15
soot.JastAddJ.PathPart.createPathPart(Ljava/lang/String;)Lsoot/JastAddJ/PathPart;#Constant(I,0)#16
soot.JastAddJ.PathPart.createPathPart(Ljava/lang/String;)Lsoot/JastAddJ/PathPart;#ConditionalBranch(I,eq,27)#17
soot.JastAddJ.PathPart.createPathPart(Ljava/lang/String;)Lsoot/JastAddJ/PathPart;#New(Lsoot/JastAddJ/ZipFilePart;,0)#18
soot.JastAddJ.PathPart.createPathPart(Ljava/lang/String;)Lsoot/JastAddJ/PathPart;#Dup(1,0)#19
soot.JastAddJ.PathPart.createPathPart(Ljava/lang/String;)Lsoot/JastAddJ/PathPart;#New(Ljava/util/zip/ZipFile;,0)#20
soot.JastAddJ.PathPart.createPathPart(Ljava/lang/String;)Lsoot/JastAddJ/PathPart;#Dup(1,0)#21
soot.JastAddJ.PathPart.createPathPart(Ljava/lang/String;)Lsoot/JastAddJ/PathPart;#LocalLoad(Ljava/lang/Object;,1)#22
soot.JastAddJ.PathPart.createPathPart(Ljava/lang/String;)Lsoot/JastAddJ/PathPart;#Invoke(SPECIAL,Ljava/util/zip/ZipFile;,<init>,(Ljava/io/File;)V)#23
soot.JastAddJ.PathPart.createPathPart(Ljava/lang/String;)Lsoot/JastAddJ/PathPart;#Invoke(SPECIAL,Lsoot/JastAddJ/ZipFilePart;,<init>,(Ljava/util/zip/ZipFile;)V)#24
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Invoke(SPECIAL,Lsoot/JastAddJ/PathPart;,<init>,()V)#1
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#New(Ljava/util/HashSet;,0)#3
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Dup(1,0)#4
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#5
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Put(Ljava/util/HashSet;,NONSTATIC,Lsoot/JastAddJ/ZipFilePart;,set)#6
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#LocalLoad(Ljava/lang/Object;,0)#7
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#LocalLoad(Ljava/lang/Object;,1)#8
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Put(Ljava/util/zip/ZipFile;,NONSTATIC,Lsoot/JastAddJ/ZipFilePart;,file)#9
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#LocalLoad(Ljava/lang/Object;,1)#10
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Invoke(VIRTUAL,Ljava/util/zip/ZipFile;,entries,()Ljava/util/Enumeration;)#11
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#LocalStore(Ljava/lang/Object;,2)#12
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Goto(82)#13
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#LocalLoad(Ljava/lang/Object;,2)#82
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Invoke(INTERFACE,Ljava/util/Enumeration;,hasMoreElements,()Z)#83
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Constant(I,0)#84
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#ConditionalBranch(I,ne,14)#85
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#LocalLoad(Ljava/lang/Object;,2)#14
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Invoke(INTERFACE,Ljava/util/Enumeration;,nextElement,()Ljava/lang/Object;)#15
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#CheckCast(Ljava/util/zip/ZipEntry;)#16
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#LocalStore(Ljava/lang/Object;,3)#17
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#New(Ljava/io/File;,0)#18
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Dup(1,0)#19
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#LocalLoad(Ljava/lang/Object;,3)#20
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Invoke(VIRTUAL,Ljava/util/zip/ZipEntry;,getName,()Ljava/lang/String;)#21
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Invoke(SPECIAL,Ljava/io/File;,<init>,(Ljava/lang/String;)V)#22
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Invoke(VIRTUAL,Ljava/io/File;,getParent,()Ljava/lang/String;)#23
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#LocalStore(Ljava/lang/Object;,4)#24
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#LocalLoad(Ljava/lang/Object;,4)#25
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Constant(L;,null)#26
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#ConditionalBranch(Ljava/lang/Object;,eq,33)#27
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#LocalLoad(Ljava/lang/Object;,0)#33
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Get(Ljava/util/HashSet;,NONSTATIC,Lsoot/JastAddJ/ZipFilePart;,set)#34
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#LocalLoad(Ljava/lang/Object;,4)#35
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Invoke(VIRTUAL,Ljava/util/HashSet;,contains,(Ljava/lang/Object;)Z)#36
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Constant(I,0)#37
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#ConditionalBranch(I,ne,76)#38
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Constant(I,0)#39
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#LocalStore(I,5)#40
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Goto(58)#41
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#LocalLoad(Ljava/lang/Object;,4)#58
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Constant(L;,null)#59
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#ConditionalBranch(Ljava/lang/Object;,eq,71)#60
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#LocalLoad(Ljava/lang/Object;,0)#71
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Get(Ljava/util/HashSet;,NONSTATIC,Lsoot/JastAddJ/ZipFilePart;,set)#72
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#LocalLoad(Ljava/lang/Object;,4)#73
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Invoke(VIRTUAL,Ljava/util/HashSet;,add,(Ljava/lang/Object;)Z)#74
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Pop(1)#75
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#LocalLoad(Ljava/lang/Object;,0)#76
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Get(Ljava/util/HashSet;,NONSTATIC,Lsoot/JastAddJ/ZipFilePart;,set)#77
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#LocalLoad(Ljava/lang/Object;,3)#78
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Invoke(VIRTUAL,Ljava/util/zip/ZipEntry;,getName,()Ljava/lang/String;)#79
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Invoke(VIRTUAL,Ljava/util/HashSet;,add,(Ljava/lang/Object;)Z)#80
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Pop(1)#81
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#LocalLoad(Ljava/lang/Object;,4)#28
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Get(C,STATIC,Ljava/io/File;,separatorChar)#29
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Constant(I,46)#30
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Invoke(VIRTUAL,Ljava/lang/String;,replace,(CC)Ljava/lang/String;)#31
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#LocalStore(Ljava/lang/Object;,4)#32
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Constant(I,-1)#61
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#LocalLoad(Ljava/lang/Object;,4)#62
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Constant(I,46)#63
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#LocalLoad(I,5)#64
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Constant(I,1)#65
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#BinaryOp(I,add)#66
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Invoke(VIRTUAL,Ljava/lang/String;,indexOf,(II)I)#67
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Dup(1,0)#68
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#LocalStore(I,5)#69
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#ConditionalBranch(I,ne,42)#70
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#LocalLoad(Ljava/lang/Object;,4)#42
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Constant(I,0)#43
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#LocalLoad(I,5)#44
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Invoke(VIRTUAL,Ljava/lang/String;,substring,(II)Ljava/lang/String;)#45
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#LocalStore(Ljava/lang/Object;,6)#46
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#LocalLoad(Ljava/lang/Object;,0)#47
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Get(Ljava/util/HashSet;,NONSTATIC,Lsoot/JastAddJ/ZipFilePart;,set)#48
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#LocalLoad(Ljava/lang/Object;,6)#49
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Invoke(VIRTUAL,Ljava/util/HashSet;,contains,(Ljava/lang/Object;)Z)#50
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Constant(I,0)#51
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#ConditionalBranch(I,ne,58)#52
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#LocalLoad(Ljava/lang/Object;,0)#53
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Get(Ljava/util/HashSet;,NONSTATIC,Lsoot/JastAddJ/ZipFilePart;,set)#54
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#LocalLoad(Ljava/lang/Object;,6)#55
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Invoke(VIRTUAL,Ljava/util/HashSet;,add,(Ljava/lang/Object;)Z)#56
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Pop(1)#57
soot.JastAddJ.ZipFilePart.<init>(Ljava/util/zip/ZipFile;)V#Return(V)#86
soot.JastAddJ.PathPart.createPathPart(Ljava/lang/String;)Lsoot/JastAddJ/PathPart;#Return(Ljava/lang/Object;)#25
soot.JastAddJ.PathPart.createClassPath(Ljava/lang/String;Lsoot/JastAddJ/Program;)Lsoot/JastAddJ/PathPart;#LocalStore(Ljava/lang/Object;,2)#2
soot.JastAddJ.PathPart.createClassPath(Ljava/lang/String;Lsoot/JastAddJ/Program;)Lsoot/JastAddJ/PathPart;#LocalLoad(Ljava/lang/Object;,2)#3
soot.JastAddJ.PathPart.createClassPath(Ljava/lang/String;Lsoot/JastAddJ/Program;)Lsoot/JastAddJ/PathPart;#Constant(L;,null)#4
soot.JastAddJ.PathPart.createClassPath(Ljava/lang/String;Lsoot/JastAddJ/Program;)Lsoot/JastAddJ/PathPart;#ConditionalBranch(Ljava/lang/Object;,eq,12)#5
soot.JastAddJ.PathPart.createClassPath(Ljava/lang/String;Lsoot/JastAddJ/Program;)Lsoot/JastAddJ/PathPart;#LocalLoad(Ljava/lang/Object;,2)#6
soot.JastAddJ.PathPart.createClassPath(Ljava/lang/String;Lsoot/JastAddJ/Program;)Lsoot/JastAddJ/PathPart;#Constant(I,0)#7
soot.JastAddJ.PathPart.createClassPath(Ljava/lang/String;Lsoot/JastAddJ/Program;)Lsoot/JastAddJ/PathPart;#Put(Z,NONSTATIC,Lsoot/JastAddJ/PathPart;,isSource)#8
soot.JastAddJ.PathPart.createClassPath(Ljava/lang/String;Lsoot/JastAddJ/Program;)Lsoot/JastAddJ/PathPart;#LocalLoad(Ljava/lang/Object;,2)#9
soot.JastAddJ.PathPart.createClassPath(Ljava/lang/String;Lsoot/JastAddJ/Program;)Lsoot/JastAddJ/PathPart;#LocalLoad(Ljava/lang/Object;,1)#10
soot.JastAddJ.PathPart.createClassPath(Ljava/lang/String;Lsoot/JastAddJ/Program;)Lsoot/JastAddJ/PathPart;#Put(Lsoot/JastAddJ/Program;,NONSTATIC,Lsoot/JastAddJ/PathPart;,program)#11
soot.JastAddJ.PathPart.createClassPath(Ljava/lang/String;Lsoot/JastAddJ/Program;)Lsoot/JastAddJ/PathPart;#LocalLoad(Ljava/lang/Object;,2)#12
soot.JastAddJ.PathPart.createClassPath(Ljava/lang/String;Lsoot/JastAddJ/Program;)Lsoot/JastAddJ/PathPart;#Return(Ljava/lang/Object;)#13
soot.JastAddJ.Program.initPaths()V#LocalStore(Ljava/lang/Object;,8)#240
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,8)#241
soot.JastAddJ.Program.initPaths()V#Constant(L;,null)#242
soot.JastAddJ.Program.initPaths()V#ConditionalBranch(Ljava/lang/Object;,eq,250)#243
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,0)#244
soot.JastAddJ.Program.initPaths()V#Get(Ljava/util/ArrayList;,NONSTATIC,Lsoot/JastAddJ/Program;,classPath)#245
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,8)#246
soot.JastAddJ.Program.initPaths()V#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#247
soot.JastAddJ.Program.initPaths()V#Pop(1)#248
soot.JastAddJ.Program.initPaths()V#Goto(266)#249
soot.JastAddJ.PathPart.createPathPart(Ljava/lang/String;)Lsoot/JastAddJ/PathPart;#Constant(L;,null)#27
soot.JastAddJ.PathPart.createPathPart(Ljava/lang/String;)Lsoot/JastAddJ/PathPart;#Return(Ljava/lang/Object;)#28
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,0)#250
soot.JastAddJ.Program.initPaths()V#Invoke(VIRTUAL,Lsoot/JastAddJ/Program;,options,()Lsoot/JastAddJ/Options;)#251
soot.JastAddJ.Program.initPaths()V#Invoke(VIRTUAL,Lsoot/JastAddJ/Options;,verbose,()Z)#252
soot.JastAddJ.Options.verbose()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.JastAddJ.Options.verbose()Z#Constant(Ljava/lang/String;,"-verbose")#1
soot.JastAddJ.Options.verbose()Z#Invoke(VIRTUAL,Lsoot/JastAddJ/Options;,hasOption,(Ljava/lang/String;)Z)#2
soot.JastAddJ.Options.hasOption(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.JastAddJ.Options.hasOption(Ljava/lang/String;)Z#Get(Ljava/util/Map;,NONSTATIC,Lsoot/JastAddJ/Options;,options)#1
soot.JastAddJ.Options.hasOption(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#2
soot.JastAddJ.Options.hasOption(Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#3
soot.JastAddJ.Options.hasOption(Ljava/lang/String;)Z#Return(I)#4
soot.JastAddJ.Options.verbose()Z#Return(I)#3
soot.JastAddJ.Program.initPaths()V#Constant(I,0)#253
soot.JastAddJ.Program.initPaths()V#ConditionalBranch(I,eq,266)#254
soot.JastAddJ.PathPart.createPathPart(Ljava/lang/String;)Lsoot/JastAddJ/PathPart;#New(Lsoot/JastAddJ/FolderPart;,0)#9
soot.JastAddJ.PathPart.createPathPart(Ljava/lang/String;)Lsoot/JastAddJ/PathPart;#Dup(1,0)#10
soot.JastAddJ.PathPart.createPathPart(Ljava/lang/String;)Lsoot/JastAddJ/PathPart;#LocalLoad(Ljava/lang/Object;,1)#11
soot.JastAddJ.PathPart.createPathPart(Ljava/lang/String;)Lsoot/JastAddJ/PathPart;#Invoke(SPECIAL,Lsoot/JastAddJ/FolderPart;,<init>,(Ljava/io/File;)V)#12
soot.JastAddJ.FolderPart.<init>(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.JastAddJ.FolderPart.<init>(Ljava/io/File;)V#Invoke(SPECIAL,Lsoot/JastAddJ/PathPart;,<init>,()V)#1
soot.JastAddJ.FolderPart.<init>(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.JastAddJ.FolderPart.<init>(Ljava/io/File;)V#New(Ljava/util/HashMap;,0)#3
soot.JastAddJ.FolderPart.<init>(Ljava/io/File;)V#Dup(1,0)#4
soot.JastAddJ.FolderPart.<init>(Ljava/io/File;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#5
soot.JastAddJ.FolderPart.<init>(Ljava/io/File;)V#Put(Ljava/util/HashMap;,NONSTATIC,Lsoot/JastAddJ/FolderPart;,map)#6
soot.JastAddJ.FolderPart.<init>(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,0)#7
soot.JastAddJ.FolderPart.<init>(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,1)#8
soot.JastAddJ.FolderPart.<init>(Ljava/io/File;)V#Put(Ljava/io/File;,NONSTATIC,Lsoot/JastAddJ/FolderPart;,folder)#9
soot.JastAddJ.FolderPart.<init>(Ljava/io/File;)V#Return(V)#10
soot.JastAddJ.PathPart.createPathPart(Ljava/lang/String;)Lsoot/JastAddJ/PathPart;#Return(Ljava/lang/Object;)#13
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,2)#270
soot.JastAddJ.Program.initPaths()V#Invoke(VIRTUAL,Ljava/util/ArrayList;,iterator,()Ljava/util/Iterator;)#271
soot.JastAddJ.Program.initPaths()V#LocalStore(Ljava/lang/Object;,6)#272
soot.JastAddJ.Program.initPaths()V#Goto(307)#273
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,6)#307
soot.JastAddJ.Program.initPaths()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#308
soot.JastAddJ.Program.initPaths()V#Constant(I,0)#309
soot.JastAddJ.Program.initPaths()V#ConditionalBranch(I,ne,274)#310
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,6)#274
soot.JastAddJ.Program.initPaths()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#275
soot.JastAddJ.Program.initPaths()V#CheckCast(Ljava/lang/String;)#276
soot.JastAddJ.Program.initPaths()V#LocalStore(Ljava/lang/Object;,7)#277
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,7)#278
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,0)#279
soot.JastAddJ.Program.initPaths()V#Invoke(STATIC,Lsoot/JastAddJ/PathPart;,createSourcePath,(Ljava/lang/String;Lsoot/JastAddJ/Program;)Lsoot/JastAddJ/PathPart;)#280
soot.JastAddJ.PathPart.createSourcePath(Ljava/lang/String;Lsoot/JastAddJ/Program;)Lsoot/JastAddJ/PathPart;#LocalLoad(Ljava/lang/Object;,0)#0
soot.JastAddJ.PathPart.createSourcePath(Ljava/lang/String;Lsoot/JastAddJ/Program;)Lsoot/JastAddJ/PathPart;#Invoke(STATIC,Lsoot/JastAddJ/PathPart;,createPathPart,(Ljava/lang/String;)Lsoot/JastAddJ/PathPart;)#1
soot.JastAddJ.PathPart.createSourcePath(Ljava/lang/String;Lsoot/JastAddJ/Program;)Lsoot/JastAddJ/PathPart;#LocalStore(Ljava/lang/Object;,2)#2
soot.JastAddJ.PathPart.createSourcePath(Ljava/lang/String;Lsoot/JastAddJ/Program;)Lsoot/JastAddJ/PathPart;#LocalLoad(Ljava/lang/Object;,2)#3
soot.JastAddJ.PathPart.createSourcePath(Ljava/lang/String;Lsoot/JastAddJ/Program;)Lsoot/JastAddJ/PathPart;#Constant(L;,null)#4
soot.JastAddJ.PathPart.createSourcePath(Ljava/lang/String;Lsoot/JastAddJ/Program;)Lsoot/JastAddJ/PathPart;#ConditionalBranch(Ljava/lang/Object;,eq,12)#5
soot.JastAddJ.PathPart.createSourcePath(Ljava/lang/String;Lsoot/JastAddJ/Program;)Lsoot/JastAddJ/PathPart;#LocalLoad(Ljava/lang/Object;,2)#6
soot.JastAddJ.PathPart.createSourcePath(Ljava/lang/String;Lsoot/JastAddJ/Program;)Lsoot/JastAddJ/PathPart;#Constant(I,1)#7
soot.JastAddJ.PathPart.createSourcePath(Ljava/lang/String;Lsoot/JastAddJ/Program;)Lsoot/JastAddJ/PathPart;#Put(Z,NONSTATIC,Lsoot/JastAddJ/PathPart;,isSource)#8
soot.JastAddJ.PathPart.createSourcePath(Ljava/lang/String;Lsoot/JastAddJ/Program;)Lsoot/JastAddJ/PathPart;#LocalLoad(Ljava/lang/Object;,2)#9
soot.JastAddJ.PathPart.createSourcePath(Ljava/lang/String;Lsoot/JastAddJ/Program;)Lsoot/JastAddJ/PathPart;#LocalLoad(Ljava/lang/Object;,1)#10
soot.JastAddJ.PathPart.createSourcePath(Ljava/lang/String;Lsoot/JastAddJ/Program;)Lsoot/JastAddJ/PathPart;#Put(Lsoot/JastAddJ/Program;,NONSTATIC,Lsoot/JastAddJ/PathPart;,program)#11
soot.JastAddJ.PathPart.createSourcePath(Ljava/lang/String;Lsoot/JastAddJ/Program;)Lsoot/JastAddJ/PathPart;#LocalLoad(Ljava/lang/Object;,2)#12
soot.JastAddJ.PathPart.createSourcePath(Ljava/lang/String;Lsoot/JastAddJ/Program;)Lsoot/JastAddJ/PathPart;#Return(Ljava/lang/Object;)#13
soot.JastAddJ.Program.initPaths()V#LocalStore(Ljava/lang/Object;,8)#281
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,8)#282
soot.JastAddJ.Program.initPaths()V#Constant(L;,null)#283
soot.JastAddJ.Program.initPaths()V#ConditionalBranch(Ljava/lang/Object;,eq,291)#284
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,0)#285
soot.JastAddJ.Program.initPaths()V#Get(Ljava/util/ArrayList;,NONSTATIC,Lsoot/JastAddJ/Program;,sourcePath)#286
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,8)#287
soot.JastAddJ.Program.initPaths()V#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#288
soot.JastAddJ.Program.initPaths()V#Pop(1)#289
soot.JastAddJ.Program.initPaths()V#Goto(307)#290
soot.JastAddJ.Program.initPaths()V#LocalLoad(Ljava/lang/Object;,0)#291
soot.JastAddJ.Program.initPaths()V#Invoke(VIRTUAL,Lsoot/JastAddJ/Program;,options,()Lsoot/JastAddJ/Options;)#292
soot.JastAddJ.Program.initPaths()V#Invoke(VIRTUAL,Lsoot/JastAddJ/Options;,verbose,()Z)#293
soot.JastAddJ.Program.initPaths()V#Constant(I,0)#294
soot.JastAddJ.Program.initPaths()V#ConditionalBranch(I,eq,307)#295
soot.JastAddJ.Program.initPaths()V#Return(V)#311
soot.SootResolver.<init>(Lsoot/Singletons$Global;)V#Return(V)#104
soot.Singletons.soot_SootResolver()Lsoot/SootResolver;#Put(Lsoot/SootResolver;,NONSTATIC,Lsoot/Singletons;,instance_soot_SootResolver)#10
soot.Singletons.soot_SootResolver()Lsoot/SootResolver;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_SootResolver()Lsoot/SootResolver;#Get(Lsoot/SootResolver;,NONSTATIC,Lsoot/Singletons;,instance_soot_SootResolver)#12
soot.Singletons.soot_SootResolver()Lsoot/SootResolver;#Return(Ljava/lang/Object;)#13
soot.SootResolver.v()Lsoot/SootResolver;#Return(Ljava/lang/Object;)#2
soot.Scene.tryLoadClass(Ljava/lang/String;I)Lsoot/SootClass;#LocalStore(Ljava/lang/Object;,3)#18
soot.Scene.tryLoadClass(Ljava/lang/String;I)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,3)#19
soot.Scene.tryLoadClass(Ljava/lang/String;I)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,1)#20
soot.Scene.tryLoadClass(Ljava/lang/String;I)Lsoot/SootClass;#LocalLoad(I,2)#21
soot.Scene.tryLoadClass(Ljava/lang/String;I)Lsoot/SootClass;#Invoke(VIRTUAL,Lsoot/SootResolver;,resolveClass,(Ljava/lang/String;I)Lsoot/SootClass;)#22
soot.SootResolver.resolveClass(Ljava/lang/String;I)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootResolver.resolveClass(Ljava/lang/String;I)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,1)#1
soot.SootResolver.resolveClass(Ljava/lang/String;I)Lsoot/SootClass;#Invoke(VIRTUAL,Lsoot/SootResolver;,makeClassRef,(Ljava/lang/String;)Lsoot/SootClass;)#2
soot.SootResolver.makeClassRef(Ljava/lang/String;)Lsoot/SootClass;#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#0
soot.SootResolver.makeClassRef(Ljava/lang/String;)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,1)#1
soot.SootResolver.makeClassRef(Ljava/lang/String;)Lsoot/SootClass;#Invoke(VIRTUAL,Lsoot/Scene;,containsClass,(Ljava/lang/String;)Z)#2
soot.Scene.containsClass(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.containsClass(Ljava/lang/String;)Z#Get(Ljava/util/Map;,NONSTATIC,Lsoot/Scene;,nameToClass)#1
soot.Scene.containsClass(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#2
soot.Scene.containsClass(Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
soot.Scene.containsClass(Ljava/lang/String;)Z#CheckCast(Lsoot/RefType;)#4
soot.Scene.containsClass(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,2)#5
soot.Scene.containsClass(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,2)#6
soot.Scene.containsClass(Ljava/lang/String;)Z#Constant(L;,null)#7
soot.Scene.containsClass(Ljava/lang/String;)Z#ConditionalBranch(Ljava/lang/Object;,ne,11)#8
soot.Scene.containsClass(Ljava/lang/String;)Z#Constant(I,0)#9
soot.Scene.containsClass(Ljava/lang/String;)Z#Return(I)#10
soot.SootResolver.makeClassRef(Ljava/lang/String;)Lsoot/SootClass;#Constant(I,0)#3
soot.SootResolver.makeClassRef(Ljava/lang/String;)Lsoot/SootClass;#ConditionalBranch(I,eq,9)#4
soot.SootResolver.makeClassRef(Ljava/lang/String;)Lsoot/SootClass;#New(Lsoot/SootClass;,0)#9
soot.tagkit.AbstractHost.<clinit>()V#Invoke(STATIC,Ljava/util/Collections;,emptyList,()Ljava/util/List;)#0
soot.tagkit.AbstractHost.<clinit>()V#Put(Ljava/util/List;,STATIC,Lsoot/tagkit/AbstractHost;,emptyList)#1
soot.tagkit.AbstractHost.<clinit>()V#Return(V)#2
soot.SootResolver.makeClassRef(Ljava/lang/String;)Lsoot/SootClass;#Dup(1,0)#10
soot.SootResolver.makeClassRef(Ljava/lang/String;)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,1)#11
soot.SootResolver.makeClassRef(Ljava/lang/String;)Lsoot/SootClass;#Invoke(SPECIAL,Lsoot/SootClass;,<init>,(Ljava/lang/String;)V)#12
soot.SootClass.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.SootClass.<init>(Ljava/lang/String;)V#Constant(I,0)#2
soot.SootClass.<init>(Ljava/lang/String;)V#Invoke(SPECIAL,Lsoot/SootClass;,<init>,(Ljava/lang/String;I)V)#3
soot.SootClass.<init>(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.<init>(Ljava/lang/String;I)V#Invoke(SPECIAL,Lsoot/tagkit/AbstractHost;,<init>,()V)#1
soot.tagkit.AbstractHost.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.tagkit.AbstractHost.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.tagkit.AbstractHost.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
soot.tagkit.AbstractHost.<init>()V#Get(Ljava/util/List;,STATIC,Lsoot/tagkit/AbstractHost;,emptyList)#3
soot.tagkit.AbstractHost.<init>()V#Put(Ljava/util/List;,NONSTATIC,Lsoot/tagkit/AbstractHost;,mTagList)#4
soot.tagkit.AbstractHost.<init>()V#Return(V)#5
soot.SootClass.<init>(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.SootClass.<init>(Ljava/lang/String;I)V#New(Lsoot/util/HashChain;,0)#3
soot.SootClass.<init>(Ljava/lang/String;I)V#Dup(1,0)#4
soot.SootClass.<init>(Ljava/lang/String;I)V#Invoke(SPECIAL,Lsoot/util/HashChain;,<init>,()V)#5
soot.SootClass.<init>(Ljava/lang/String;I)V#Put(Lsoot/util/Chain;,NONSTATIC,Lsoot/SootClass;,fields)#6
soot.SootClass.<init>(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#7
soot.SootClass.<init>(Ljava/lang/String;I)V#New(Lsoot/util/SmallNumberedMap;,0)#8
soot.SootClass.<init>(Ljava/lang/String;I)V#Dup(1,0)#9
soot.SootClass.<init>(Ljava/lang/String;I)V#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#10
soot.SootClass.<init>(Ljava/lang/String;I)V#Invoke(VIRTUAL,Lsoot/Scene;,getSubSigNumberer,()Lsoot/util/StringNumberer;)#11
soot.Scene.getSubSigNumberer()Lsoot/util/StringNumberer;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.getSubSigNumberer()Lsoot/util/StringNumberer;#Get(Lsoot/util/StringNumberer;,NONSTATIC,Lsoot/Scene;,subSigNumberer)#1
soot.Scene.getSubSigNumberer()Lsoot/util/StringNumberer;#Return(Ljava/lang/Object;)#2
soot.SootClass.<init>(Ljava/lang/String;I)V#Invoke(SPECIAL,Lsoot/util/SmallNumberedMap;,<init>,(Lsoot/util/ArrayNumberer;)V)#12
soot.util.SmallNumberedMap.<init>(Lsoot/util/ArrayNumberer;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.SmallNumberedMap.<init>(Lsoot/util/ArrayNumberer;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.util.SmallNumberedMap.<init>(Lsoot/util/ArrayNumberer;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.util.SmallNumberedMap.<init>(Lsoot/util/ArrayNumberer;)V#Constant(I,8)#3
soot.util.SmallNumberedMap.<init>(Lsoot/util/ArrayNumberer;)V#New([Lsoot/util/Numberable;,1)#4
soot.util.SmallNumberedMap.<init>(Lsoot/util/ArrayNumberer;)V#Put([Lsoot/util/Numberable;,NONSTATIC,Lsoot/util/SmallNumberedMap;,array)#5
soot.util.SmallNumberedMap.<init>(Lsoot/util/ArrayNumberer;)V#LocalLoad(Ljava/lang/Object;,0)#6
soot.util.SmallNumberedMap.<init>(Lsoot/util/ArrayNumberer;)V#Constant(I,8)#7
soot.util.SmallNumberedMap.<init>(Lsoot/util/ArrayNumberer;)V#New([Ljava/lang/Object;,1)#8
soot.util.SmallNumberedMap.<init>(Lsoot/util/ArrayNumberer;)V#Put([Ljava/lang/Object;,NONSTATIC,Lsoot/util/SmallNumberedMap;,values)#9
soot.util.SmallNumberedMap.<init>(Lsoot/util/ArrayNumberer;)V#LocalLoad(Ljava/lang/Object;,0)#10
soot.util.SmallNumberedMap.<init>(Lsoot/util/ArrayNumberer;)V#Constant(I,0)#11
soot.util.SmallNumberedMap.<init>(Lsoot/util/ArrayNumberer;)V#Put(I,NONSTATIC,Lsoot/util/SmallNumberedMap;,size)#12
soot.util.SmallNumberedMap.<init>(Lsoot/util/ArrayNumberer;)V#LocalLoad(Ljava/lang/Object;,0)#13
soot.util.SmallNumberedMap.<init>(Lsoot/util/ArrayNumberer;)V#LocalLoad(Ljava/lang/Object;,1)#14
soot.util.SmallNumberedMap.<init>(Lsoot/util/ArrayNumberer;)V#Put(Lsoot/util/ArrayNumberer;,NONSTATIC,Lsoot/util/SmallNumberedMap;,universe)#15
soot.util.SmallNumberedMap.<init>(Lsoot/util/ArrayNumberer;)V#Return(V)#16
soot.SootClass.<init>(Ljava/lang/String;I)V#Put(Lsoot/util/SmallNumberedMap;,NONSTATIC,Lsoot/SootClass;,subSigToMethods)#13
soot.SootClass.<init>(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#14
soot.SootClass.<init>(Ljava/lang/String;I)V#New(Ljava/util/ArrayList;,0)#15
soot.SootClass.<init>(Ljava/lang/String;I)V#Dup(1,0)#16
soot.SootClass.<init>(Ljava/lang/String;I)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#17
soot.SootClass.<init>(Ljava/lang/String;I)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/SootClass;,methodList)#18
soot.SootClass.<init>(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#19
soot.SootClass.<init>(Ljava/lang/String;I)V#New(Lsoot/util/HashChain;,0)#20
soot.SootClass.<init>(Ljava/lang/String;I)V#Dup(1,0)#21
soot.SootClass.<init>(Ljava/lang/String;I)V#Invoke(SPECIAL,Lsoot/util/HashChain;,<init>,()V)#22
soot.SootClass.<init>(Ljava/lang/String;I)V#Put(Lsoot/util/Chain;,NONSTATIC,Lsoot/SootClass;,interfaces)#23
soot.SootClass.<init>(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#24
soot.SootClass.<init>(Ljava/lang/String;I)V#Constant(I,0)#25
soot.SootClass.<init>(Ljava/lang/String;I)V#Put(I,NONSTATIC,Lsoot/SootClass;,resolvingLevel)#26
soot.SootClass.<init>(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#27
soot.SootClass.<init>(Ljava/lang/String;I)V#Constant(I,0)#28
soot.SootClass.<init>(Ljava/lang/String;I)V#Put(I,NONSTATIC,Lsoot/SootClass;,number)#29
soot.SootClass.<init>(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,1)#30
soot.SootClass.<init>(Ljava/lang/String;I)V#Constant(I,0)#31
soot.SootClass.<init>(Ljava/lang/String;I)V#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#32
soot.SootClass.<init>(Ljava/lang/String;I)V#Constant(I,91)#33
soot.SootClass.<init>(Ljava/lang/String;I)V#ConditionalBranch(I,ne,40)#34
soot.SootClass.<init>(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#40
soot.SootClass.<init>(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,1)#41
soot.SootClass.<init>(Ljava/lang/String;I)V#Invoke(VIRTUAL,Lsoot/SootClass;,setName,(Ljava/lang/String;)V)#42
soot.SootClass.setName(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.setName(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.SootClass.setName(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/SootClass;,name)#2
soot.SootClass.setName(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.SootClass.setName(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#4
soot.SootClass.setName(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/SootClass;,shortName)#5
soot.SootClass.setName(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#6
soot.SootClass.setName(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"")#7
soot.SootClass.setName(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/SootClass;,packageName)#8
soot.SootClass.setName(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#9
soot.SootClass.setName(Ljava/lang/String;)V#Constant(I,46)#10
soot.SootClass.setName(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,lastIndexOf,(I)I)#11
soot.SootClass.setName(Ljava/lang/String;)V#LocalStore(I,2)#12
soot.SootClass.setName(Ljava/lang/String;)V#LocalLoad(I,2)#13
soot.SootClass.setName(Ljava/lang/String;)V#Constant(I,0)#14
soot.SootClass.setName(Ljava/lang/String;)V#ConditionalBranch(I,le,29)#15
soot.SootClass.setName(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#16
soot.SootClass.setName(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#17
soot.SootClass.setName(Ljava/lang/String;)V#LocalLoad(I,2)#18
soot.SootClass.setName(Ljava/lang/String;)V#Constant(I,1)#19
soot.SootClass.setName(Ljava/lang/String;)V#BinaryOp(I,add)#20
soot.SootClass.setName(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,substring,(I)Ljava/lang/String;)#21
soot.SootClass.setName(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/SootClass;,shortName)#22
soot.SootClass.setName(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#23
soot.SootClass.setName(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#24
soot.SootClass.setName(Ljava/lang/String;)V#Constant(I,0)#25
soot.SootClass.setName(Ljava/lang/String;)V#LocalLoad(I,2)#26
soot.SootClass.setName(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,substring,(II)Ljava/lang/String;)#27
soot.SootClass.setName(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/SootClass;,packageName)#28
soot.SootClass.setName(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#29
soot.SootClass.setName(Ljava/lang/String;)V#Constant(L;,null)#30
soot.SootClass.setName(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/SootClass;,fixedShortName)#31
soot.SootClass.setName(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#32
soot.SootClass.setName(Ljava/lang/String;)V#Constant(L;,null)#33
soot.SootClass.setName(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/SootClass;,fixedPackageName)#34
soot.SootClass.setName(Ljava/lang/String;)V#Return(V)#35
soot.SootClass.<init>(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#43
soot.SootClass.<init>(Ljava/lang/String;I)V#LocalLoad(I,2)#44
soot.SootClass.<init>(Ljava/lang/String;I)V#Put(I,NONSTATIC,Lsoot/SootClass;,modifiers)#45
soot.SootClass.<init>(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#46
soot.SootClass.<init>(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,1)#47
soot.SootClass.<init>(Ljava/lang/String;I)V#Invoke(STATIC,Lsoot/RefType;,v,(Ljava/lang/String;)Lsoot/RefType;)#48
soot.RefType.v(Ljava/lang/String;)Lsoot/RefType;#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#0
soot.RefType.v(Ljava/lang/String;)Lsoot/RefType;#LocalLoad(Ljava/lang/Object;,0)#1
soot.RefType.v(Ljava/lang/String;)Lsoot/RefType;#Invoke(VIRTUAL,Lsoot/Scene;,containsType,(Ljava/lang/String;)Z)#2
soot.Scene.containsType(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.containsType(Ljava/lang/String;)Z#Get(Ljava/util/Map;,NONSTATIC,Lsoot/Scene;,nameToClass)#1
soot.Scene.containsType(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#2
soot.Scene.containsType(Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#3
soot.Scene.containsType(Ljava/lang/String;)Z#Return(I)#4
soot.RefType.v(Ljava/lang/String;)Lsoot/RefType;#Constant(I,0)#3
soot.RefType.v(Ljava/lang/String;)Lsoot/RefType;#ConditionalBranch(I,eq,9)#4
soot.RefType.v(Ljava/lang/String;)Lsoot/RefType;#New(Lsoot/RefType;,0)#9
soot.RefType.v(Ljava/lang/String;)Lsoot/RefType;#Dup(1,0)#10
soot.RefType.v(Ljava/lang/String;)Lsoot/RefType;#LocalLoad(Ljava/lang/Object;,0)#11
soot.RefType.v(Ljava/lang/String;)Lsoot/RefType;#Invoke(SPECIAL,Lsoot/RefType;,<init>,(Ljava/lang/String;)V)#12
soot.RefType.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.RefType.<init>(Ljava/lang/String;)V#Invoke(SPECIAL,Lsoot/RefLikeType;,<init>,()V)#1
soot.RefLikeType.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.RefLikeType.<init>()V#Invoke(SPECIAL,Lsoot/Type;,<init>,()V)#1
soot.Type.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Type.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.Type.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
soot.Type.<init>()V#Constant(I,0)#3
soot.Type.<init>()V#Put(I,NONSTATIC,Lsoot/Type;,number)#4
soot.Type.<init>()V#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#5
soot.Type.<init>()V#Invoke(VIRTUAL,Lsoot/Scene;,getTypeNumberer,()Lsoot/util/ArrayNumberer;)#6
soot.Scene.getTypeNumberer()Lsoot/util/ArrayNumberer;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.getTypeNumberer()Lsoot/util/ArrayNumberer;#Get(Lsoot/util/ArrayNumberer;,NONSTATIC,Lsoot/Scene;,typeNumberer)#1
soot.Scene.getTypeNumberer()Lsoot/util/ArrayNumberer;#Return(Ljava/lang/Object;)#2
soot.Type.<init>()V#LocalLoad(Ljava/lang/Object;,0)#7
soot.Type.<init>()V#Invoke(VIRTUAL,Lsoot/util/ArrayNumberer;,add,(Ljava/lang/Object;)V)#8
soot.Type.getNumber()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.Type.getNumber()I#Get(I,NONSTATIC,Lsoot/Type;,number)#1
soot.Type.getNumber()I#Return(I)#2
soot.Type.setNumber(I)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Type.setNumber(I)V#LocalLoad(I,1)#1
soot.Type.setNumber(I)V#Put(I,NONSTATIC,Lsoot/Type;,number)#2
soot.Type.setNumber(I)V#Return(V)#3
soot.Type.<init>()V#Return(V)#9
soot.RefLikeType.<init>()V#Return(V)#2
soot.RefType.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.RefType.<init>(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"[")#3
soot.RefType.<init>(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,startsWith,(Ljava/lang/String;)Z)#4
soot.RefType.<init>(Ljava/lang/String;)V#Constant(I,0)#5
soot.RefType.<init>(Ljava/lang/String;)V#ConditionalBranch(I,eq,18)#6
soot.RefType.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#18
soot.RefType.<init>(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"/")#19
soot.RefType.<init>(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,indexOf,(Ljava/lang/String;)I)#20
soot.RefType.<init>(Ljava/lang/String;)V#Constant(I,0)#21
soot.RefType.<init>(Ljava/lang/String;)V#ConditionalBranch(I,lt,34)#22
soot.RefType.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#34
soot.RefType.<init>(Ljava/lang/String;)V#Constant(Ljava/lang/String;,";")#35
soot.RefType.<init>(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,indexOf,(Ljava/lang/String;)I)#36
soot.RefType.<init>(Ljava/lang/String;)V#Constant(I,0)#37
soot.RefType.<init>(Ljava/lang/String;)V#ConditionalBranch(I,lt,50)#38
soot.RefType.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#50
soot.RefType.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#51
soot.RefType.<init>(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/RefType;,className)#52
soot.RefType.<init>(Ljava/lang/String;)V#Return(V)#53
soot.RefType.v(Ljava/lang/String;)Lsoot/RefType;#LocalStore(Ljava/lang/Object;,1)#13
soot.RefType.v(Ljava/lang/String;)Lsoot/RefType;#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#14
soot.RefType.v(Ljava/lang/String;)Lsoot/RefType;#LocalLoad(Ljava/lang/Object;,1)#15
soot.RefType.v(Ljava/lang/String;)Lsoot/RefType;#Invoke(VIRTUAL,Lsoot/Scene;,addRefType,(Lsoot/RefType;)V)#16
soot.Scene.addRefType(Lsoot/RefType;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.addRefType(Lsoot/RefType;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/Scene;,nameToClass)#1
soot.Scene.addRefType(Lsoot/RefType;)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.Scene.addRefType(Lsoot/RefType;)V#Invoke(VIRTUAL,Lsoot/RefType;,getClassName,()Ljava/lang/String;)#3
soot.RefType.getClassName()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.RefType.getClassName()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsoot/RefType;,className)#1
soot.RefType.getClassName()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
soot.Scene.addRefType(Lsoot/RefType;)V#LocalLoad(Ljava/lang/Object;,1)#4
soot.Scene.addRefType(Lsoot/RefType;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#5
soot.Scene.addRefType(Lsoot/RefType;)V#Pop(1)#6
soot.Scene.addRefType(Lsoot/RefType;)V#Return(V)#7
soot.RefType.v(Ljava/lang/String;)Lsoot/RefType;#LocalLoad(Ljava/lang/Object;,1)#17
soot.RefType.v(Ljava/lang/String;)Lsoot/RefType;#Return(Ljava/lang/Object;)#18
soot.SootClass.<init>(Ljava/lang/String;I)V#Put(Lsoot/RefType;,NONSTATIC,Lsoot/SootClass;,refType)#49
soot.SootClass.<init>(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#50
soot.SootClass.<init>(Ljava/lang/String;I)V#Get(Lsoot/RefType;,NONSTATIC,Lsoot/SootClass;,refType)#51
soot.SootClass.<init>(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#52
soot.SootClass.<init>(Ljava/lang/String;I)V#Invoke(VIRTUAL,Lsoot/RefType;,setSootClass,(Lsoot/SootClass;)V)#53
soot.RefType.setSootClass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.RefType.setSootClass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.RefType.setSootClass(Lsoot/SootClass;)V#Put(Lsoot/SootClass;,NONSTATIC,Lsoot/RefType;,sootClass)#2
soot.RefType.setSootClass(Lsoot/SootClass;)V#Return(V)#3
soot.SootClass.<init>(Ljava/lang/String;I)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#54
soot.SootClass.<init>(Ljava/lang/String;I)V#Invoke(VIRTUAL,Lsoot/options/Options;,debug_resolver,()Z)#55
soot.options.Options.debug_resolver()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.debug_resolver()Z#Get(Z,NONSTATIC,Lsoot/options/Options;,debug_resolver)#1
soot.options.Options.debug_resolver()Z#Return(I)#2
soot.SootClass.<init>(Ljava/lang/String;I)V#Constant(I,0)#56
soot.SootClass.<init>(Ljava/lang/String;I)V#ConditionalBranch(I,eq,72)#57
soot.SootClass.<init>(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#72
soot.SootClass.<init>(Ljava/lang/String;I)V#Constant(I,3)#73
soot.SootClass.<init>(Ljava/lang/String;I)V#Invoke(VIRTUAL,Lsoot/SootClass;,setResolvingLevel,(I)V)#74
soot.SootClass.setResolvingLevel(I)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.setResolvingLevel(I)V#LocalLoad(I,1)#1
soot.SootClass.setResolvingLevel(I)V#Put(I,NONSTATIC,Lsoot/SootClass;,resolvingLevel)#2
soot.SootClass.setResolvingLevel(I)V#Return(V)#3
soot.SootClass.<init>(Ljava/lang/String;I)V#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#75
soot.SootClass.<init>(Ljava/lang/String;I)V#Invoke(VIRTUAL,Lsoot/Scene;,getClassNumberer,()Lsoot/util/ArrayNumberer;)#76
soot.Scene.getClassNumberer()Lsoot/util/ArrayNumberer;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.getClassNumberer()Lsoot/util/ArrayNumberer;#Get(Lsoot/util/ArrayNumberer;,NONSTATIC,Lsoot/Scene;,classNumberer)#1
soot.Scene.getClassNumberer()Lsoot/util/ArrayNumberer;#Return(Ljava/lang/Object;)#2
soot.SootClass.<init>(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#77
soot.SootClass.<init>(Ljava/lang/String;I)V#Invoke(VIRTUAL,Lsoot/util/ArrayNumberer;,add,(Ljava/lang/Object;)V)#78
soot.SootClass.getNumber()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.getNumber()I#Get(I,NONSTATIC,Lsoot/SootClass;,number)#1
soot.SootClass.getNumber()I#Return(I)#2
soot.SootClass.setNumber(I)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.setNumber(I)V#LocalLoad(I,1)#1
soot.SootClass.setNumber(I)V#Put(I,NONSTATIC,Lsoot/SootClass;,number)#2
soot.SootClass.setNumber(I)V#Return(V)#3
soot.SootClass.<init>(Ljava/lang/String;I)V#Return(V)#79
soot.SootClass.<init>(Ljava/lang/String;)V#Return(V)#4
soot.SootResolver.makeClassRef(Ljava/lang/String;)Lsoot/SootClass;#LocalStore(Ljava/lang/Object;,2)#13
soot.SootResolver.makeClassRef(Ljava/lang/String;)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,2)#14
soot.SootResolver.makeClassRef(Ljava/lang/String;)Lsoot/SootClass;#Constant(I,0)#15
soot.SootResolver.makeClassRef(Ljava/lang/String;)Lsoot/SootClass;#Invoke(VIRTUAL,Lsoot/SootClass;,setResolvingLevel,(I)V)#16
soot.SootResolver.makeClassRef(Ljava/lang/String;)Lsoot/SootClass;#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#17
soot.SootResolver.makeClassRef(Ljava/lang/String;)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,2)#18
soot.SootResolver.makeClassRef(Ljava/lang/String;)Lsoot/SootClass;#Invoke(VIRTUAL,Lsoot/Scene;,addClass,(Lsoot/SootClass;)V)#19
soot.Scene.addClass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.Scene.addClass(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,isInScene,()Z)#1
soot.SootClass.isInScene()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.isInScene()Z#Get(Z,NONSTATIC,Lsoot/SootClass;,isInScene)#1
soot.SootClass.isInScene()Z#Return(I)#2
soot.Scene.addClass(Lsoot/SootClass;)V#Constant(I,0)#2
soot.Scene.addClass(Lsoot/SootClass;)V#ConditionalBranch(I,eq,16)#3
soot.Scene.addClass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#16
soot.Scene.addClass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#17
soot.Scene.addClass(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getName,()Ljava/lang/String;)#18
soot.SootClass.getName()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.getName()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsoot/SootClass;,name)#1
soot.SootClass.getName()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
soot.Scene.addClass(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/Scene;,containsClass,(Ljava/lang/String;)Z)#19
soot.Scene.containsClass(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,2)#11
soot.Scene.containsClass(Ljava/lang/String;)Z#Invoke(VIRTUAL,Lsoot/RefType;,hasSootClass,()Z)#12
soot.RefType.hasSootClass()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.RefType.hasSootClass()Z#Get(Lsoot/SootClass;,NONSTATIC,Lsoot/RefType;,sootClass)#1
soot.RefType.hasSootClass()Z#Constant(L;,null)#2
soot.RefType.hasSootClass()Z#ConditionalBranch(Ljava/lang/Object;,eq,6)#3
soot.RefType.hasSootClass()Z#Constant(I,1)#4
soot.RefType.hasSootClass()Z#Return(I)#5
soot.Scene.containsClass(Ljava/lang/String;)Z#Constant(I,0)#13
soot.Scene.containsClass(Ljava/lang/String;)Z#ConditionalBranch(I,ne,17)#14
soot.Scene.containsClass(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,2)#17
soot.Scene.containsClass(Ljava/lang/String;)Z#Invoke(VIRTUAL,Lsoot/RefType;,getSootClass,()Lsoot/SootClass;)#18
soot.RefType.getSootClass()Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,0)#0
soot.RefType.getSootClass()Lsoot/SootClass;#Get(Lsoot/SootClass;,NONSTATIC,Lsoot/RefType;,sootClass)#1
soot.RefType.getSootClass()Lsoot/SootClass;#Constant(L;,null)#2
soot.RefType.getSootClass()Lsoot/SootClass;#ConditionalBranch(Ljava/lang/Object;,ne,10)#3
soot.RefType.getSootClass()Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,0)#10
soot.RefType.getSootClass()Lsoot/SootClass;#Get(Lsoot/SootClass;,NONSTATIC,Lsoot/RefType;,sootClass)#11
soot.RefType.getSootClass()Lsoot/SootClass;#Return(Ljava/lang/Object;)#12
soot.Scene.containsClass(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,3)#19
soot.Scene.containsClass(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#20
soot.Scene.containsClass(Ljava/lang/String;)Z#Invoke(VIRTUAL,Lsoot/SootClass;,isInScene,()Z)#21
soot.Scene.containsClass(Ljava/lang/String;)Z#Return(I)#22
soot.Scene.addClass(Lsoot/SootClass;)V#Constant(I,0)#20
soot.Scene.addClass(Lsoot/SootClass;)V#ConditionalBranch(I,eq,34)#21
soot.Scene.addClass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#34
soot.Scene.addClass(Lsoot/SootClass;)V#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/Scene;,classes)#35
soot.Scene.addClass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#36
soot.Scene.addClass(Lsoot/SootClass;)V#Invoke(INTERFACE,Lsoot/util/Chain;,add,(Ljava/lang/Object;)Z)#37
soot.Scene.addClass(Lsoot/SootClass;)V#Pop(1)#38
soot.Scene.addClass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#39
soot.Scene.addClass(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,setLibraryClass,()V)#40
soot.SootClass.setLibraryClass()V#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#0
soot.SootClass.setLibraryClass()V#LocalLoad(Ljava/lang/Object;,0)#1
soot.SootClass.setLibraryClass()V#Invoke(VIRTUAL,Lsoot/Scene;,getContainingChain,(Lsoot/SootClass;)Lsoot/util/Chain;)#2
soot.Scene.getContainingChain(Lsoot/SootClass;)Lsoot/util/Chain;#LocalLoad(Ljava/lang/Object;,1)#0
soot.Scene.getContainingChain(Lsoot/SootClass;)Lsoot/util/Chain;#Invoke(VIRTUAL,Lsoot/SootClass;,isApplicationClass,()Z)#1
soot.SootClass.isApplicationClass()Z#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#0
soot.SootClass.isApplicationClass()Z#Invoke(VIRTUAL,Lsoot/Scene;,getApplicationClasses,()Lsoot/util/Chain;)#1
soot.SootClass.isApplicationClass()Z#LocalLoad(Ljava/lang/Object;,0)#2
soot.SootClass.isApplicationClass()Z#Invoke(INTERFACE,Lsoot/util/Chain;,contains,(Ljava/lang/Object;)Z)#3
soot.util.HashChain.contains(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.HashChain.contains(Ljava/lang/Object;)Z#Get(Ljava/util/HashMap;,NONSTATIC,Lsoot/util/HashChain;,map)#1
soot.util.HashChain.contains(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#2
soot.util.HashChain.contains(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/util/HashMap;,containsKey,(Ljava/lang/Object;)Z)#3
soot.util.HashChain.contains(Ljava/lang/Object;)Z#Return(I)#4
soot.SootClass.isApplicationClass()Z#Return(I)#4
soot.Scene.getContainingChain(Lsoot/SootClass;)Lsoot/util/Chain;#Constant(I,0)#2
soot.Scene.getContainingChain(Lsoot/SootClass;)Lsoot/util/Chain;#ConditionalBranch(I,eq,7)#3
soot.Scene.getContainingChain(Lsoot/SootClass;)Lsoot/util/Chain;#LocalLoad(Ljava/lang/Object;,1)#7
soot.Scene.getContainingChain(Lsoot/SootClass;)Lsoot/util/Chain;#Invoke(VIRTUAL,Lsoot/SootClass;,isLibraryClass,()Z)#8
soot.SootClass.isLibraryClass()Z#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#0
soot.SootClass.isLibraryClass()Z#Invoke(VIRTUAL,Lsoot/Scene;,getLibraryClasses,()Lsoot/util/Chain;)#1
soot.Scene.getLibraryClasses()Lsoot/util/Chain;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.getLibraryClasses()Lsoot/util/Chain;#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/Scene;,libraryClasses)#1
soot.Scene.getLibraryClasses()Lsoot/util/Chain;#Return(Ljava/lang/Object;)#2
soot.SootClass.isLibraryClass()Z#LocalLoad(Ljava/lang/Object;,0)#2
soot.SootClass.isLibraryClass()Z#Invoke(INTERFACE,Lsoot/util/Chain;,contains,(Ljava/lang/Object;)Z)#3
soot.SootClass.isLibraryClass()Z#Return(I)#4
soot.Scene.getContainingChain(Lsoot/SootClass;)Lsoot/util/Chain;#Constant(I,0)#9
soot.Scene.getContainingChain(Lsoot/SootClass;)Lsoot/util/Chain;#ConditionalBranch(I,eq,14)#10
soot.Scene.getContainingChain(Lsoot/SootClass;)Lsoot/util/Chain;#LocalLoad(Ljava/lang/Object;,1)#14
soot.Scene.getContainingChain(Lsoot/SootClass;)Lsoot/util/Chain;#Invoke(VIRTUAL,Lsoot/SootClass;,isPhantomClass,()Z)#15
soot.SootClass.isPhantomClass()Z#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#0
soot.SootClass.isPhantomClass()Z#Invoke(VIRTUAL,Lsoot/Scene;,getPhantomClasses,()Lsoot/util/Chain;)#1
soot.Scene.getPhantomClasses()Lsoot/util/Chain;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.getPhantomClasses()Lsoot/util/Chain;#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/Scene;,phantomClasses)#1
soot.Scene.getPhantomClasses()Lsoot/util/Chain;#Return(Ljava/lang/Object;)#2
soot.SootClass.isPhantomClass()Z#LocalLoad(Ljava/lang/Object;,0)#2
soot.SootClass.isPhantomClass()Z#Invoke(INTERFACE,Lsoot/util/Chain;,contains,(Ljava/lang/Object;)Z)#3
soot.SootClass.isPhantomClass()Z#Return(I)#4
soot.Scene.getContainingChain(Lsoot/SootClass;)Lsoot/util/Chain;#Constant(I,0)#16
soot.Scene.getContainingChain(Lsoot/SootClass;)Lsoot/util/Chain;#ConditionalBranch(I,eq,21)#17
soot.Scene.getContainingChain(Lsoot/SootClass;)Lsoot/util/Chain;#Constant(L;,null)#21
soot.Scene.getContainingChain(Lsoot/SootClass;)Lsoot/util/Chain;#Return(Ljava/lang/Object;)#22
soot.SootClass.setLibraryClass()V#LocalStore(Ljava/lang/Object;,1)#3
soot.SootClass.setLibraryClass()V#LocalLoad(Ljava/lang/Object;,1)#4
soot.SootClass.setLibraryClass()V#Constant(L;,null)#5
soot.SootClass.setLibraryClass()V#ConditionalBranch(Ljava/lang/Object;,eq,11)#6
soot.SootClass.setLibraryClass()V#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#11
soot.SootClass.setLibraryClass()V#Invoke(VIRTUAL,Lsoot/Scene;,getLibraryClasses,()Lsoot/util/Chain;)#12
soot.SootClass.setLibraryClass()V#LocalLoad(Ljava/lang/Object;,0)#13
soot.SootClass.setLibraryClass()V#Invoke(INTERFACE,Lsoot/util/Chain;,add,(Ljava/lang/Object;)Z)#14
soot.SootClass.setLibraryClass()V#Pop(1)#15
soot.SootClass.setLibraryClass()V#LocalLoad(Ljava/lang/Object;,0)#16
soot.SootClass.setLibraryClass()V#Constant(I,0)#17
soot.SootClass.setLibraryClass()V#Put(Z,NONSTATIC,Lsoot/SootClass;,isPhantom)#18
soot.SootClass.setLibraryClass()V#Return(V)#19
soot.Scene.addClass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#41
soot.Scene.addClass(Lsoot/SootClass;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/Scene;,nameToClass)#42
soot.Scene.addClass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#43
soot.Scene.addClass(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getName,()Ljava/lang/String;)#44
soot.Scene.addClass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#45
soot.Scene.addClass(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getType,()Lsoot/RefType;)#46
soot.SootClass.getType()Lsoot/RefType;#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.getType()Lsoot/RefType;#Get(Lsoot/RefType;,NONSTATIC,Lsoot/SootClass;,refType)#1
soot.SootClass.getType()Lsoot/RefType;#Return(Ljava/lang/Object;)#2
soot.Scene.addClass(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#47
soot.Scene.addClass(Lsoot/SootClass;)V#Pop(1)#48
soot.Scene.addClass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#49
soot.Scene.addClass(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getType,()Lsoot/RefType;)#50
soot.Scene.addClass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#51
soot.Scene.addClass(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/RefType;,setSootClass,(Lsoot/SootClass;)V)#52
soot.Scene.addClass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#53
soot.Scene.addClass(Lsoot/SootClass;)V#Constant(I,1)#54
soot.Scene.addClass(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,setInScene,(Z)V)#55
soot.SootClass.setInScene(Z)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.setInScene(Z)V#LocalLoad(I,1)#1
soot.SootClass.setInScene(Z)V#Put(Z,NONSTATIC,Lsoot/SootClass;,isInScene)#2
soot.SootClass.setInScene(Z)V#Return(V)#3
soot.Scene.addClass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#56
soot.Scene.addClass(Lsoot/SootClass;)V#Invoke(SPECIAL,Lsoot/Scene;,modifyHierarchy,()V)#57
soot.Scene.modifyHierarchy()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.modifyHierarchy()V#Dup(1,0)#1
soot.Scene.modifyHierarchy()V#Get(I,NONSTATIC,Lsoot/Scene;,stateCount)#2
soot.Scene.modifyHierarchy()V#Constant(I,1)#3
soot.Scene.modifyHierarchy()V#BinaryOp(I,add)#4
soot.Scene.modifyHierarchy()V#Put(I,NONSTATIC,Lsoot/Scene;,stateCount)#5
soot.Scene.modifyHierarchy()V#LocalLoad(Ljava/lang/Object;,0)#6
soot.Scene.modifyHierarchy()V#Constant(L;,null)#7
soot.Scene.modifyHierarchy()V#Put(Lsoot/Hierarchy;,NONSTATIC,Lsoot/Scene;,activeHierarchy)#8
soot.Scene.modifyHierarchy()V#LocalLoad(Ljava/lang/Object;,0)#9
soot.Scene.modifyHierarchy()V#Constant(L;,null)#10
soot.Scene.modifyHierarchy()V#Put(Lsoot/FastHierarchy;,NONSTATIC,Lsoot/Scene;,activeFastHierarchy)#11
soot.Scene.modifyHierarchy()V#LocalLoad(Ljava/lang/Object;,0)#12
soot.Scene.modifyHierarchy()V#Constant(L;,null)#13
soot.Scene.modifyHierarchy()V#Put(Lsoot/jimple/toolkits/pointer/SideEffectAnalysis;,NONSTATIC,Lsoot/Scene;,activeSideEffectAnalysis)#14
soot.Scene.modifyHierarchy()V#LocalLoad(Ljava/lang/Object;,0)#15
soot.Scene.modifyHierarchy()V#Constant(L;,null)#16
soot.Scene.modifyHierarchy()V#Put(Lsoot/PointsToAnalysis;,NONSTATIC,Lsoot/Scene;,activePointsToAnalysis)#17
soot.Scene.modifyHierarchy()V#Return(V)#18
soot.Scene.addClass(Lsoot/SootClass;)V#Return(V)#58
soot.SootResolver.makeClassRef(Ljava/lang/String;)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,2)#20
soot.SootResolver.makeClassRef(Ljava/lang/String;)Lsoot/SootClass;#Return(Ljava/lang/Object;)#21
soot.SootResolver.resolveClass(Ljava/lang/String;I)Lsoot/SootClass;#LocalStore(Ljava/lang/Object;,3)#3
soot.SootResolver.resolveClass(Ljava/lang/String;I)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,0)#4
soot.SootResolver.resolveClass(Ljava/lang/String;I)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,3)#5
soot.SootResolver.resolveClass(Ljava/lang/String;I)Lsoot/SootClass;#LocalLoad(I,2)#6
soot.SootResolver.resolveClass(Ljava/lang/String;I)Lsoot/SootClass;#Invoke(SPECIAL,Lsoot/SootResolver;,addToResolveWorklist,(Lsoot/SootClass;I)V)#7
soot.SootResolver.addToResolveWorklist(Lsoot/SootClass;I)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.SootResolver.addToResolveWorklist(Lsoot/SootClass;I)V#Invoke(VIRTUAL,Lsoot/SootClass;,resolvingLevel,()I)#1
soot.SootClass.resolvingLevel()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.resolvingLevel()I#Get(I,NONSTATIC,Lsoot/SootClass;,resolvingLevel)#1
soot.SootClass.resolvingLevel()I#Return(I)#2
soot.SootResolver.addToResolveWorklist(Lsoot/SootClass;I)V#LocalLoad(I,2)#2
soot.SootResolver.addToResolveWorklist(Lsoot/SootClass;I)V#ConditionalBranch(I,lt,5)#3
soot.SootResolver.addToResolveWorklist(Lsoot/SootClass;I)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.SootResolver.addToResolveWorklist(Lsoot/SootClass;I)V#Get([Ljava/util/LinkedList;,NONSTATIC,Lsoot/SootResolver;,worklist)#6
soot.SootResolver.addToResolveWorklist(Lsoot/SootClass;I)V#LocalLoad(I,2)#7
soot.SootResolver.addToResolveWorklist(Lsoot/SootClass;I)V#ArrayLoad(Ljava/lang/Object;)#8
soot.SootResolver.addToResolveWorklist(Lsoot/SootClass;I)V#LocalLoad(Ljava/lang/Object;,1)#9
soot.SootResolver.addToResolveWorklist(Lsoot/SootClass;I)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,add,(Ljava/lang/Object;)Z)#10
soot.SootResolver.addToResolveWorklist(Lsoot/SootClass;I)V#Pop(1)#11
soot.SootResolver.addToResolveWorklist(Lsoot/SootClass;I)V#Return(V)#12
soot.SootResolver.resolveClass(Ljava/lang/String;I)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,0)#8
soot.SootResolver.resolveClass(Ljava/lang/String;I)Lsoot/SootClass;#Invoke(SPECIAL,Lsoot/SootResolver;,processResolveWorklist,()V)#9
soot.SootResolver.processResolveWorklist()V#Constant(I,3)#0
soot.SootResolver.processResolveWorklist()V#LocalStore(I,1)#1
soot.SootResolver.processResolveWorklist()V#Goto(111)#2
soot.SootResolver.processResolveWorklist()V#LocalLoad(I,1)#111
soot.SootResolver.processResolveWorklist()V#Constant(I,1)#112
soot.SootResolver.processResolveWorklist()V#ConditionalBranch(I,ge,100)#113
soot.SootResolver.processResolveWorklist()V#LocalLoad(Ljava/lang/Object;,0)#100
soot.SootResolver.processResolveWorklist()V#Get([Ljava/util/LinkedList;,NONSTATIC,Lsoot/SootResolver;,worklist)#101
soot.SootResolver.processResolveWorklist()V#LocalLoad(I,1)#102
soot.SootResolver.processResolveWorklist()V#ArrayLoad(Ljava/lang/Object;)#103
soot.SootResolver.processResolveWorklist()V#Invoke(VIRTUAL,Ljava/util/LinkedList;,isEmpty,()Z)#104
soot.SootResolver.processResolveWorklist()V#Constant(I,0)#105
soot.SootResolver.processResolveWorklist()V#ConditionalBranch(I,eq,3)#106
soot.SootResolver.processResolveWorklist()V#LocalLoad(I,1)#107
soot.SootResolver.processResolveWorklist()V#Constant(I,-1)#108
soot.SootResolver.processResolveWorklist()V#BinaryOp(I,add)#109
soot.SootResolver.processResolveWorklist()V#LocalStore(I,1)#110
soot.SootResolver.processResolveWorklist()V#LocalLoad(Ljava/lang/Object;,0)#3
soot.SootResolver.processResolveWorklist()V#Get([Ljava/util/LinkedList;,NONSTATIC,Lsoot/SootResolver;,worklist)#4
soot.SootResolver.processResolveWorklist()V#LocalLoad(I,1)#5
soot.SootResolver.processResolveWorklist()V#ArrayLoad(Ljava/lang/Object;)#6
soot.SootResolver.processResolveWorklist()V#Invoke(VIRTUAL,Ljava/util/LinkedList;,removeFirst,()Ljava/lang/Object;)#7
soot.SootResolver.processResolveWorklist()V#CheckCast(Lsoot/SootClass;)#8
soot.SootResolver.processResolveWorklist()V#LocalStore(Ljava/lang/Object;,2)#9
soot.SootResolver.processResolveWorklist()V#LocalLoad(Ljava/lang/Object;,0)#10
soot.SootResolver.processResolveWorklist()V#Invoke(SPECIAL,Lsoot/SootResolver;,resolveEverything,()Z)#11
soot.SootResolver.resolveEverything()Z#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#0
soot.SootResolver.resolveEverything()Z#Invoke(VIRTUAL,Lsoot/options/Options;,whole_program,()Z)#1
soot.SootResolver.resolveEverything()Z#Constant(I,0)#2
soot.SootResolver.resolveEverything()Z#ConditionalBranch(I,ne,18)#3
soot.SootResolver.resolveEverything()Z#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#4
soot.SootResolver.resolveEverything()Z#Invoke(VIRTUAL,Lsoot/options/Options;,whole_shimple,()Z)#5
soot.options.Options.whole_shimple()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.whole_shimple()Z#Get(Z,NONSTATIC,Lsoot/options/Options;,whole_shimple)#1
soot.options.Options.whole_shimple()Z#Return(I)#2
soot.SootResolver.resolveEverything()Z#Constant(I,0)#6
soot.SootResolver.resolveEverything()Z#ConditionalBranch(I,ne,18)#7
soot.SootResolver.resolveEverything()Z#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#8
soot.SootResolver.resolveEverything()Z#Invoke(VIRTUAL,Lsoot/options/Options;,full_resolver,()Z)#9
soot.options.Options.full_resolver()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.full_resolver()Z#Get(Z,NONSTATIC,Lsoot/options/Options;,full_resolver)#1
soot.options.Options.full_resolver()Z#Return(I)#2
soot.SootResolver.resolveEverything()Z#Constant(I,0)#10
soot.SootResolver.resolveEverything()Z#ConditionalBranch(I,ne,18)#11
soot.SootResolver.resolveEverything()Z#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#12
soot.SootResolver.resolveEverything()Z#Invoke(VIRTUAL,Lsoot/options/Options;,output_format,()I)#13
soot.SootResolver.resolveEverything()Z#Constant(I,13)#14
soot.SootResolver.resolveEverything()Z#ConditionalBranch(I,eq,18)#15
soot.SootResolver.resolveEverything()Z#Constant(I,0)#16
soot.SootResolver.resolveEverything()Z#Return(I)#17
soot.SootResolver.processResolveWorklist()V#Constant(I,0)#12
soot.SootResolver.processResolveWorklist()V#ConditionalBranch(I,eq,87)#13
soot.SootResolver.processResolveWorklist()V#LocalLoad(I,1)#87
soot.SootResolver.processResolveWorklist()V#Switch(100,1,97,2,93,3,89)#88
soot.SootResolver.processResolveWorklist()V#LocalLoad(Ljava/lang/Object;,0)#93
soot.SootResolver.processResolveWorklist()V#LocalLoad(Ljava/lang/Object;,2)#94
soot.SootResolver.processResolveWorklist()V#Invoke(SPECIAL,Lsoot/SootResolver;,bringToSignatures,(Lsoot/SootClass;)V)#95
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,resolvingLevel,()I)#1
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Constant(I,2)#2
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#ConditionalBranch(I,lt,5)#3
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#6
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(SPECIAL,Lsoot/SootResolver;,bringToHierarchy,(Lsoot/SootClass;)V)#7
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,resolvingLevel,()I)#1
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#Constant(I,1)#2
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#ConditionalBranch(I,lt,5)#3
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#5
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/options/Options;,debug_resolver,()Z)#6
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#Constant(I,0)#7
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#ConditionalBranch(I,eq,19)#8
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#19
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#Constant(I,1)#20
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,setResolvingLevel,(I)V)#21
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#22
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getName,()Ljava/lang/String;)#23
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,2)#24
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/SourceLocator;,v,()Lsoot/SourceLocator;)#25
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,2)#26
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SourceLocator;,getClassSource,(Ljava/lang/String;)Lsoot/ClassSource;)#27
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,3)#28
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,3)#29
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#Constant(L;,null)#30
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#ConditionalBranch(Ljava/lang/Object;,ne,34)#31
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#Constant(I,0)#34
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#LocalStore(I,4)#35
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#LocalLoad(I,4)#36
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#Constant(I,0)#37
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#ConditionalBranch(I,eq,106)#38
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,3)#106
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#107
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/ClassSource;,resolve,(Lsoot/SootClass;)Lsoot/javaToJimple/IInitialResolver$Dependencies;)#108
soot.CoffiClassSource.resolve(Lsoot/SootClass;)Lsoot/javaToJimple/IInitialResolver$Dependencies;#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#0
soot.CoffiClassSource.resolve(Lsoot/SootClass;)Lsoot/javaToJimple/IInitialResolver$Dependencies;#Invoke(VIRTUAL,Lsoot/options/Options;,verbose,()Z)#1
soot.options.Options.verbose()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.verbose()Z#Get(Z,NONSTATIC,Lsoot/options/Options;,verbose)#1
soot.options.Options.verbose()Z#Return(I)#2
soot.CoffiClassSource.resolve(Lsoot/SootClass;)Lsoot/javaToJimple/IInitialResolver$Dependencies;#Constant(I,0)#2
soot.CoffiClassSource.resolve(Lsoot/SootClass;)Lsoot/javaToJimple/IInitialResolver$Dependencies;#ConditionalBranch(I,eq,15)#3
soot.CoffiClassSource.resolve(Lsoot/SootClass;)Lsoot/javaToJimple/IInitialResolver$Dependencies;#New(Ljava/util/ArrayList;,0)#15
soot.CoffiClassSource.resolve(Lsoot/SootClass;)Lsoot/javaToJimple/IInitialResolver$Dependencies;#Dup(1,0)#16
soot.CoffiClassSource.resolve(Lsoot/SootClass;)Lsoot/javaToJimple/IInitialResolver$Dependencies;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#17
soot.CoffiClassSource.resolve(Lsoot/SootClass;)Lsoot/javaToJimple/IInitialResolver$Dependencies;#LocalStore(Ljava/lang/Object;,2)#18
soot.CoffiClassSource.resolve(Lsoot/SootClass;)Lsoot/javaToJimple/IInitialResolver$Dependencies;#Invoke(STATIC,Lsoot/coffi/Util;,v,()Lsoot/coffi/Util;)#19
soot.coffi.Util.v()Lsoot/coffi/Util;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.coffi.Util.v()Lsoot/coffi/Util;#Invoke(VIRTUAL,Lsoot/G;,soot_coffi_Util,()Lsoot/coffi/Util;)#1
soot.Singletons.soot_coffi_Util()Lsoot/coffi/Util;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_coffi_Util()Lsoot/coffi/Util;#Get(Lsoot/coffi/Util;,NONSTATIC,Lsoot/Singletons;,instance_soot_coffi_Util)#1
soot.Singletons.soot_coffi_Util()Lsoot/coffi/Util;#Constant(L;,null)#2
soot.Singletons.soot_coffi_Util()Lsoot/coffi/Util;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_coffi_Util()Lsoot/coffi/Util;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_coffi_Util()Lsoot/coffi/Util;#New(Lsoot/coffi/Util;,0)#5
soot.Singletons.soot_coffi_Util()Lsoot/coffi/Util;#Dup(1,0)#6
soot.Singletons.soot_coffi_Util()Lsoot/coffi/Util;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_coffi_Util()Lsoot/coffi/Util;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_coffi_Util()Lsoot/coffi/Util;#Invoke(SPECIAL,Lsoot/coffi/Util;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.coffi.Util.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Util.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.coffi.Util.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.coffi.Util.<init>(Lsoot/Singletons$Global;)V#Constant(I,-1)#3
soot.coffi.Util.<init>(Lsoot/Singletons$Global;)V#Put(I,NONSTATIC,Lsoot/coffi/Util;,activeOriginalIndex)#4
soot.coffi.Util.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.coffi.Util.<init>(Lsoot/Singletons$Global;)V#Constant(L;,null)#6
soot.coffi.Util.<init>(Lsoot/Singletons$Global;)V#Put([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/Util;,activeConstantPool)#7
soot.coffi.Util.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.coffi.Util.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#9
soot.coffi.Util.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/coffi/Util;,useFaithfulNaming)#10
soot.coffi.Util.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.coffi.Util.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#12
soot.coffi.Util.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/coffi/Util;,isLocalStore)#13
soot.coffi.Util.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#14
soot.coffi.Util.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#15
soot.coffi.Util.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/coffi/Util;,isWideLocalStore)#16
soot.coffi.Util.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#17
soot.coffi.Util.<init>(Lsoot/Singletons$Global;)V#New(Ljava/util/ArrayList;,0)#18
soot.coffi.Util.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#19
soot.coffi.Util.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#20
soot.coffi.Util.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/util/ArrayList;,NONSTATIC,Lsoot/coffi/Util;,conversionTypes)#21
soot.coffi.Util.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#22
soot.coffi.Util.<init>(Lsoot/Singletons$Global;)V#New(Ljava/util/HashMap;,0)#23
soot.coffi.Util.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#24
soot.coffi.Util.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#25
soot.coffi.Util.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/coffi/Util;,cache)#26
soot.coffi.Util.<init>(Lsoot/Singletons$Global;)V#Return(V)#27
soot.Singletons.soot_coffi_Util()Lsoot/coffi/Util;#Put(Lsoot/coffi/Util;,NONSTATIC,Lsoot/Singletons;,instance_soot_coffi_Util)#10
soot.Singletons.soot_coffi_Util()Lsoot/coffi/Util;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_coffi_Util()Lsoot/coffi/Util;#Get(Lsoot/coffi/Util;,NONSTATIC,Lsoot/Singletons;,instance_soot_coffi_Util)#12
soot.Singletons.soot_coffi_Util()Lsoot/coffi/Util;#Return(Ljava/lang/Object;)#13
soot.coffi.Util.v()Lsoot/coffi/Util;#Return(Ljava/lang/Object;)#2
soot.CoffiClassSource.resolve(Lsoot/SootClass;)Lsoot/javaToJimple/IInitialResolver$Dependencies;#LocalLoad(Ljava/lang/Object;,1)#20
soot.CoffiClassSource.resolve(Lsoot/SootClass;)Lsoot/javaToJimple/IInitialResolver$Dependencies;#LocalLoad(Ljava/lang/Object;,0)#21
soot.CoffiClassSource.resolve(Lsoot/SootClass;)Lsoot/javaToJimple/IInitialResolver$Dependencies;#Get(Ljava/io/InputStream;,NONSTATIC,Lsoot/CoffiClassSource;,classFile)#22
soot.CoffiClassSource.resolve(Lsoot/SootClass;)Lsoot/javaToJimple/IInitialResolver$Dependencies;#LocalLoad(Ljava/lang/Object;,2)#23
soot.CoffiClassSource.resolve(Lsoot/SootClass;)Lsoot/javaToJimple/IInitialResolver$Dependencies;#Invoke(VIRTUAL,Lsoot/coffi/Util;,resolveFromClassFile,(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V)#24
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,4)#1
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,4)#2
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getName,()Ljava/lang/String;)#3
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,5)#4
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#New(Lsoot/coffi/ClassFile;,0)#5
soot.coffi.ClassFile.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@2fd7d7ba)#0
soot.coffi.ClassFile.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
soot.coffi.ClassFile.<clinit>()V#Constant(I,0)#2
soot.coffi.ClassFile.<clinit>()V#ConditionalBranch(I,ne,6)#3
soot.coffi.ClassFile.<clinit>()V#Constant(I,1)#4
soot.coffi.ClassFile.<clinit>()V#Goto(7)#5
soot.coffi.ClassFile.<clinit>()V#Put(Z,STATIC,Lsoot/coffi/ClassFile;,$assertionsDisabled)#7
soot.coffi.ClassFile.<clinit>()V#Return(V)#8
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Dup(1,0)#6
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,5)#7
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(SPECIAL,Lsoot/coffi/ClassFile;,<init>,(Ljava/lang/String;)V)#8
soot.coffi.ClassFile.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.ClassFile.<init>(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.coffi.ClassFile.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.coffi.ClassFile.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.coffi.ClassFile.<init>(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/coffi/ClassFile;,fn)#4
soot.coffi.ClassFile.<init>(Ljava/lang/String;)V#Return(V)#5
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,6)#9
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#10
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#11
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/coffi/ClassFile;,loadClassFile,(Ljava/io/InputStream;)Z)#12
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#Constant(L;,null)#0
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#LocalStore(Ljava/lang/Object;,2)#1
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#2
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#LocalStore(Ljava/lang/Object;,3)#3
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#Invoke(STATIC,Lsoot/Timers;,v,()Lsoot/Timers;)#4
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#Get(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,readTimer)#5
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#Invoke(VIRTUAL,Lsoot/Timer;,start,()V)#6
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#LocalLoad(Ljava/lang/Object;,3)#7
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#Invoke(VIRTUAL,Ljava/io/InputStream;,available,()I)#8
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#New([B,1)#9
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#LocalStore(Ljava/lang/Object;,6)#10
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#LocalLoad(Ljava/lang/Object;,3)#11
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#LocalLoad(Ljava/lang/Object;,6)#12
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#Invoke(VIRTUAL,Ljava/io/InputStream;,read,([B)I)#13
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#Pop(1)#14
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#New(Ljava/io/ByteArrayInputStream;,0)#15
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#Dup(1,0)#16
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#LocalLoad(Ljava/lang/Object;,6)#17
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#Invoke(SPECIAL,Ljava/io/ByteArrayInputStream;,<init>,([B)V)#18
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#LocalStore(Ljava/lang/Object;,2)#19
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#Goto(22)#20
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#Invoke(STATIC,Lsoot/Timers;,v,()Lsoot/Timers;)#22
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#Get(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,readTimer)#23
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#Invoke(VIRTUAL,Lsoot/Timer;,end,()V)#24
soot.Timer.end()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Timer.end()V#Get(Z,NONSTATIC,Lsoot/Timer;,hasStarted)#1
soot.Timer.end()V#Constant(I,0)#2
soot.Timer.end()V#ConditionalBranch(I,ne,18)#3
soot.Timer.end()V#LocalLoad(Ljava/lang/Object;,0)#18
soot.Timer.end()V#Constant(I,0)#19
soot.Timer.end()V#Put(Z,NONSTATIC,Lsoot/Timer;,hasStarted)#20
soot.Timer.end()V#LocalLoad(Ljava/lang/Object;,0)#21
soot.Timer.end()V#Dup(1,0)#22
soot.Timer.end()V#Get(J,NONSTATIC,Lsoot/Timer;,duration)#23
soot.Timer.end()V#Invoke(STATIC,Ljava/lang/System;,currentTimeMillis,()J)#24
soot.Timer.end()V#LocalLoad(Ljava/lang/Object;,0)#25
soot.Timer.end()V#Get(J,NONSTATIC,Lsoot/Timer;,startTime)#26
soot.Timer.end()V#BinaryOp(J,sub)#27
soot.Timer.end()V#BinaryOp(J,add)#28
soot.Timer.end()V#Put(J,NONSTATIC,Lsoot/Timer;,duration)#29
soot.Timer.end()V#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#30
soot.Timer.end()V#Get(Z,NONSTATIC,Lsoot/G;,Timer_isGarbageCollecting)#31
soot.Timer.end()V#Constant(I,0)#32
soot.Timer.end()V#ConditionalBranch(I,ne,39)#33
soot.Timer.end()V#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#34
soot.Timer.end()V#Get(Ljava/util/List;,NONSTATIC,Lsoot/G;,Timer_outstandingTimers)#35
soot.Timer.end()V#LocalLoad(Ljava/lang/Object;,0)#36
soot.Timer.end()V#Invoke(INTERFACE,Ljava/util/List;,remove,(Ljava/lang/Object;)Z)#37
soot.Timer.end()V#Pop(1)#38
soot.Timer.end()V#Return(V)#39
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#New(Ljava/io/DataInputStream;,0)#25
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#Dup(1,0)#26
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#LocalLoad(Ljava/lang/Object;,2)#27
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#Invoke(SPECIAL,Ljava/io/DataInputStream;,<init>,(Ljava/io/InputStream;)V)#28
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#LocalStore(Ljava/lang/Object;,4)#29
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#30
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#LocalLoad(Ljava/lang/Object;,4)#31
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#Invoke(VIRTUAL,Lsoot/coffi/ClassFile;,readClass,(Ljava/io/DataInputStream;)Z)#32
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#1
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readInt,()I)#2
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Conversion(I,J)#3
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Constant(J,4294967295)#4
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#BinaryOp(J,and)#5
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Put(J,NONSTATIC,Lsoot/coffi/ClassFile;,magic)#6
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#7
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Get(J,NONSTATIC,Lsoot/coffi/ClassFile;,magic)#8
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Constant(J,3405691582)#9
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Comparison(J,cmp)#10
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Constant(I,0)#11
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#ConditionalBranch(I,eq,31)#12
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#31
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#32
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#33
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Put(I,NONSTATIC,Lsoot/coffi/ClassFile;,minor_version)#34
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#35
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#36
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#37
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Put(I,NONSTATIC,Lsoot/coffi/ClassFile;,major_version)#38
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#39
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#40
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#41
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Put(I,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool_count)#42
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#43
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#44
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Lsoot/coffi/ClassFile;,readConstantPool,(Ljava/io/DataInputStream;)Z)#45
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#1
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Get(I,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool_count)#2
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#New([Lsoot/coffi/cp_info;,1)#3
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Put([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#4
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Constant(I,0)#5
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalStore(I,5)#6
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Constant(I,1)#7
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalStore(I,4)#8
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Goto(438)#9
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(I,4)#438
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#439
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Get(I,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool_count)#440
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#ConditionalBranch(I,lt,10)#441
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(I,5)#10
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Constant(I,0)#11
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#ConditionalBranch(I,eq,16)#12
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#16
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedByte,()I)#17
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Conversion(I,B)#18
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalStore(I,2)#19
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(I,2)#20
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Switch(410,1,349,2,410,3,167,4,198,5,229,6,275,7,22,8,141,9,48,10,79,11,110,12,318,13,410,14,410,15,380,16,410,17,410,18,395)#21
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#New(Lsoot/coffi/CONSTANT_Utf8_info;,0)#349
soot.coffi.cp_info.<clinit>()V#Constant(I,10)#0
soot.coffi.cp_info.<clinit>()V#New([B,1)#1
soot.coffi.cp_info.<clinit>()V#Dup(1,0)#2
soot.coffi.cp_info.<clinit>()V#Constant(I,0)#3
soot.coffi.cp_info.<clinit>()V#Constant(I,-1)#4
soot.coffi.cp_info.<clinit>()V#ArrayStore(B)#5
soot.coffi.cp_info.<clinit>()V#Dup(1,0)#6
soot.coffi.cp_info.<clinit>()V#Constant(I,1)#7
soot.coffi.cp_info.<clinit>()V#Constant(I,9)#8
soot.coffi.cp_info.<clinit>()V#ArrayStore(B)#9
soot.coffi.cp_info.<clinit>()V#Dup(1,0)#10
soot.coffi.cp_info.<clinit>()V#Constant(I,2)#11
soot.coffi.cp_info.<clinit>()V#Constant(I,9)#12
soot.coffi.cp_info.<clinit>()V#ArrayStore(B)#13
soot.coffi.cp_info.<clinit>()V#Dup(1,0)#14
soot.coffi.cp_info.<clinit>()V#Constant(I,3)#15
soot.coffi.cp_info.<clinit>()V#Constant(I,9)#16
soot.coffi.cp_info.<clinit>()V#ArrayStore(B)#17
soot.coffi.cp_info.<clinit>()V#Dup(1,0)#18
soot.coffi.cp_info.<clinit>()V#Constant(I,4)#19
soot.coffi.cp_info.<clinit>()V#Constant(I,9)#20
soot.coffi.cp_info.<clinit>()V#ArrayStore(B)#21
soot.coffi.cp_info.<clinit>()V#Dup(1,0)#22
soot.coffi.cp_info.<clinit>()V#Constant(I,5)#23
soot.coffi.cp_info.<clinit>()V#Constant(I,10)#24
soot.coffi.cp_info.<clinit>()V#ArrayStore(B)#25
soot.coffi.cp_info.<clinit>()V#Dup(1,0)#26
soot.coffi.cp_info.<clinit>()V#Constant(I,6)#27
soot.coffi.cp_info.<clinit>()V#Constant(I,10)#28
soot.coffi.cp_info.<clinit>()V#ArrayStore(B)#29
soot.coffi.cp_info.<clinit>()V#Dup(1,0)#30
soot.coffi.cp_info.<clinit>()V#Constant(I,7)#31
soot.coffi.cp_info.<clinit>()V#Constant(I,10)#32
soot.coffi.cp_info.<clinit>()V#ArrayStore(B)#33
soot.coffi.cp_info.<clinit>()V#Dup(1,0)#34
soot.coffi.cp_info.<clinit>()V#Constant(I,8)#35
soot.coffi.cp_info.<clinit>()V#Constant(I,10)#36
soot.coffi.cp_info.<clinit>()V#ArrayStore(B)#37
soot.coffi.cp_info.<clinit>()V#Dup(1,0)#38
soot.coffi.cp_info.<clinit>()V#Constant(I,9)#39
soot.coffi.cp_info.<clinit>()V#Constant(I,11)#40
soot.coffi.cp_info.<clinit>()V#ArrayStore(B)#41
soot.coffi.cp_info.<clinit>()V#Put([B,STATIC,Lsoot/coffi/cp_info;,REF_TO_CONSTANT)#42
soot.coffi.cp_info.<clinit>()V#Return(V)#43
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Dup(1,0)#350
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#351
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Invoke(SPECIAL,Lsoot/coffi/CONSTANT_Utf8_info;,<init>,(Ljava/io/DataInputStream;)V)#352
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Lsoot/coffi/cp_info;,<init>,()V)#1
soot.coffi.cp_info.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.cp_info.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.coffi.cp_info.<init>()V#Return(V)#2
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#3
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#LocalStore(I,2)#4
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#LocalLoad(I,2)#6
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#Constant(I,2)#7
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#BinaryOp(I,add)#8
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#New([B,1)#9
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#Put([B,NONSTATIC,Lsoot/coffi/CONSTANT_Utf8_info;,bytes)#10
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#Get([B,NONSTATIC,Lsoot/coffi/CONSTANT_Utf8_info;,bytes)#12
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#Constant(I,0)#13
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#LocalLoad(I,2)#14
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#Constant(I,8)#15
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#Shift(I,SHR)#16
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#Conversion(I,B)#17
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#ArrayStore(B)#18
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#19
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#Get([B,NONSTATIC,Lsoot/coffi/CONSTANT_Utf8_info;,bytes)#20
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#Constant(I,1)#21
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#LocalLoad(I,2)#22
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#Constant(I,255)#23
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#BinaryOp(I,and)#24
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#Conversion(I,B)#25
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#ArrayStore(B)#26
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#LocalLoad(I,2)#27
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#Constant(I,0)#28
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#ConditionalBranch(I,le,49)#29
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#Constant(I,0)#30
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#LocalStore(I,3)#31
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#Goto(46)#32
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#LocalLoad(I,3)#46
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#LocalLoad(I,2)#47
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#ConditionalBranch(I,lt,33)#48
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#33
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#Get([B,NONSTATIC,Lsoot/coffi/CONSTANT_Utf8_info;,bytes)#34
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#LocalLoad(I,3)#35
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#Constant(I,2)#36
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#BinaryOp(I,add)#37
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#38
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedByte,()I)#39
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#Conversion(I,B)#40
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#ArrayStore(B)#41
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#LocalLoad(I,3)#42
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#Constant(I,1)#43
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#BinaryOp(I,add)#44
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#LocalStore(I,3)#45
soot.coffi.CONSTANT_Utf8_info.<init>(Ljava/io/DataInputStream;)V#Return(V)#49
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalStore(Ljava/lang/Object;,6)#353
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Invoke(STATIC,Lsoot/coffi/CONSTANT_Utf8_collector;,v,()Lsoot/coffi/CONSTANT_Utf8_collector;)#354
soot.coffi.CONSTANT_Utf8_collector.v()Lsoot/coffi/CONSTANT_Utf8_collector;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.coffi.CONSTANT_Utf8_collector.v()Lsoot/coffi/CONSTANT_Utf8_collector;#Invoke(VIRTUAL,Lsoot/G;,soot_coffi_CONSTANT_Utf8_collector,()Lsoot/coffi/CONSTANT_Utf8_collector;)#1
soot.Singletons.soot_coffi_CONSTANT_Utf8_collector()Lsoot/coffi/CONSTANT_Utf8_collector;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_coffi_CONSTANT_Utf8_collector()Lsoot/coffi/CONSTANT_Utf8_collector;#Get(Lsoot/coffi/CONSTANT_Utf8_collector;,NONSTATIC,Lsoot/Singletons;,instance_soot_coffi_CONSTANT_Utf8_collector)#1
soot.Singletons.soot_coffi_CONSTANT_Utf8_collector()Lsoot/coffi/CONSTANT_Utf8_collector;#Constant(L;,null)#2
soot.Singletons.soot_coffi_CONSTANT_Utf8_collector()Lsoot/coffi/CONSTANT_Utf8_collector;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_coffi_CONSTANT_Utf8_collector()Lsoot/coffi/CONSTANT_Utf8_collector;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_coffi_CONSTANT_Utf8_collector()Lsoot/coffi/CONSTANT_Utf8_collector;#New(Lsoot/coffi/CONSTANT_Utf8_collector;,0)#5
soot.Singletons.soot_coffi_CONSTANT_Utf8_collector()Lsoot/coffi/CONSTANT_Utf8_collector;#Dup(1,0)#6
soot.Singletons.soot_coffi_CONSTANT_Utf8_collector()Lsoot/coffi/CONSTANT_Utf8_collector;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_coffi_CONSTANT_Utf8_collector()Lsoot/coffi/CONSTANT_Utf8_collector;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_coffi_CONSTANT_Utf8_collector()Lsoot/coffi/CONSTANT_Utf8_collector;#Invoke(SPECIAL,Lsoot/coffi/CONSTANT_Utf8_collector;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.coffi.CONSTANT_Utf8_collector.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.CONSTANT_Utf8_collector.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.coffi.CONSTANT_Utf8_collector.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.coffi.CONSTANT_Utf8_collector.<init>(Lsoot/Singletons$Global;)V#Constant(L;,null)#3
soot.coffi.CONSTANT_Utf8_collector.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/util/HashMap;,NONSTATIC,Lsoot/coffi/CONSTANT_Utf8_collector;,hash)#4
soot.coffi.CONSTANT_Utf8_collector.<init>(Lsoot/Singletons$Global;)V#Return(V)#5
soot.Singletons.soot_coffi_CONSTANT_Utf8_collector()Lsoot/coffi/CONSTANT_Utf8_collector;#Put(Lsoot/coffi/CONSTANT_Utf8_collector;,NONSTATIC,Lsoot/Singletons;,instance_soot_coffi_CONSTANT_Utf8_collector)#10
soot.Singletons.soot_coffi_CONSTANT_Utf8_collector()Lsoot/coffi/CONSTANT_Utf8_collector;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_coffi_CONSTANT_Utf8_collector()Lsoot/coffi/CONSTANT_Utf8_collector;#Get(Lsoot/coffi/CONSTANT_Utf8_collector;,NONSTATIC,Lsoot/Singletons;,instance_soot_coffi_CONSTANT_Utf8_collector)#12
soot.Singletons.soot_coffi_CONSTANT_Utf8_collector()Lsoot/coffi/CONSTANT_Utf8_collector;#Return(Ljava/lang/Object;)#13
soot.coffi.CONSTANT_Utf8_collector.v()Lsoot/coffi/CONSTANT_Utf8_collector;#Return(Ljava/lang/Object;)#2
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,6)#355
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_collector;,add,(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;)#356
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#Get(Ljava/util/HashMap;,NONSTATIC,Lsoot/coffi/CONSTANT_Utf8_collector;,hash)#1
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#Constant(L;,null)#2
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#ConditionalBranch(Ljava/lang/Object;,ne,9)#3
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#LocalLoad(Ljava/lang/Object;,0)#4
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#New(Ljava/util/HashMap;,0)#5
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#Dup(1,0)#6
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#7
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#Put(Ljava/util/HashMap;,NONSTATIC,Lsoot/coffi/CONSTANT_Utf8_collector;,hash)#8
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#LocalLoad(Ljava/lang/Object;,1)#9
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,convert,()Ljava/lang/String;)#10
soot.coffi.CONSTANT_Utf8_info.convert()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.CONSTANT_Utf8_info.convert()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsoot/coffi/CONSTANT_Utf8_info;,s)#1
soot.coffi.CONSTANT_Utf8_info.convert()Ljava/lang/String;#Constant(L;,null)#2
soot.coffi.CONSTANT_Utf8_info.convert()Ljava/lang/String;#ConditionalBranch(Ljava/lang/Object;,ne,27)#3
soot.coffi.CONSTANT_Utf8_info.convert()Ljava/lang/String;#New(Ljava/io/ByteArrayInputStream;,0)#4
soot.coffi.CONSTANT_Utf8_info.convert()Ljava/lang/String;#Dup(1,0)#5
soot.coffi.CONSTANT_Utf8_info.convert()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#6
soot.coffi.CONSTANT_Utf8_info.convert()Ljava/lang/String;#Get([B,NONSTATIC,Lsoot/coffi/CONSTANT_Utf8_info;,bytes)#7
soot.coffi.CONSTANT_Utf8_info.convert()Ljava/lang/String;#Invoke(SPECIAL,Ljava/io/ByteArrayInputStream;,<init>,([B)V)#8
soot.coffi.CONSTANT_Utf8_info.convert()Ljava/lang/String;#LocalStore(Ljava/lang/Object;,1)#9
soot.coffi.CONSTANT_Utf8_info.convert()Ljava/lang/String;#New(Ljava/io/DataInputStream;,0)#10
soot.coffi.CONSTANT_Utf8_info.convert()Ljava/lang/String;#Dup(1,0)#11
soot.coffi.CONSTANT_Utf8_info.convert()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#12
soot.coffi.CONSTANT_Utf8_info.convert()Ljava/lang/String;#Invoke(SPECIAL,Ljava/io/DataInputStream;,<init>,(Ljava/io/InputStream;)V)#13
soot.coffi.CONSTANT_Utf8_info.convert()Ljava/lang/String;#LocalStore(Ljava/lang/Object;,2)#14
soot.coffi.CONSTANT_Utf8_info.convert()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#15
soot.coffi.CONSTANT_Utf8_info.convert()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUTF,()Ljava/lang/String;)#16
soot.coffi.CONSTANT_Utf8_info.convert()Ljava/lang/String;#LocalStore(Ljava/lang/Object;,3)#17
soot.coffi.CONSTANT_Utf8_info.convert()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#18
soot.coffi.CONSTANT_Utf8_info.convert()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#19
soot.coffi.CONSTANT_Utf8_info.convert()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,hashCode,()I)#20
soot.coffi.CONSTANT_Utf8_info.convert()Ljava/lang/String;#Put(I,NONSTATIC,Lsoot/coffi/CONSTANT_Utf8_info;,sHashCode)#21
soot.coffi.CONSTANT_Utf8_info.convert()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#22
soot.coffi.CONSTANT_Utf8_info.convert()Ljava/lang/String;#Return(Ljava/lang/Object;)#23
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#LocalStore(Ljava/lang/Object;,2)#11
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#LocalLoad(Ljava/lang/Object;,0)#12
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#Get(Ljava/util/HashMap;,NONSTATIC,Lsoot/coffi/CONSTANT_Utf8_collector;,hash)#13
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#LocalLoad(Ljava/lang/Object;,2)#14
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#Invoke(VIRTUAL,Ljava/util/HashMap;,containsKey,(Ljava/lang/Object;)Z)#15
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#Constant(I,0)#16
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#ConditionalBranch(I,eq,24)#17
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#LocalLoad(Ljava/lang/Object;,0)#24
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#Get(Ljava/util/HashMap;,NONSTATIC,Lsoot/coffi/CONSTANT_Utf8_collector;,hash)#25
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#LocalLoad(Ljava/lang/Object;,2)#26
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#LocalLoad(Ljava/lang/Object;,1)#27
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#Invoke(VIRTUAL,Ljava/util/HashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#28
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#Pop(1)#29
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#LocalLoad(Ljava/lang/Object;,1)#30
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#LocalLoad(Ljava/lang/Object;,2)#31
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,fixConversion,(Ljava/lang/String;)V)#32
soot.coffi.CONSTANT_Utf8_info.fixConversion(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.CONSTANT_Utf8_info.fixConversion(Ljava/lang/String;)V#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_Utf8_info;,sHashCode)#1
soot.coffi.CONSTANT_Utf8_info.fixConversion(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.coffi.CONSTANT_Utf8_info.fixConversion(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,hashCode,()I)#3
soot.coffi.CONSTANT_Utf8_info.fixConversion(Ljava/lang/String;)V#ConditionalBranch(I,eq,10)#4
soot.coffi.CONSTANT_Utf8_info.fixConversion(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#10
soot.coffi.CONSTANT_Utf8_info.fixConversion(Ljava/lang/String;)V#Get(Ljava/lang/String;,NONSTATIC,Lsoot/coffi/CONSTANT_Utf8_info;,s)#11
soot.coffi.CONSTANT_Utf8_info.fixConversion(Ljava/lang/String;)V#Constant(L;,null)#12
soot.coffi.CONSTANT_Utf8_info.fixConversion(Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,ne,17)#13
soot.coffi.CONSTANT_Utf8_info.fixConversion(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#14
soot.coffi.CONSTANT_Utf8_info.fixConversion(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#15
soot.coffi.CONSTANT_Utf8_info.fixConversion(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/coffi/CONSTANT_Utf8_info;,s)#16
soot.coffi.CONSTANT_Utf8_info.fixConversion(Ljava/lang/String;)V#Return(V)#17
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#LocalLoad(Ljava/lang/Object;,1)#33
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#Return(Ljava/lang/Object;)#34
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalStore(Ljava/lang/Object;,3)#357
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#358
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Get(Z,NONSTATIC,Lsoot/coffi/ClassFile;,debug)#359
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Constant(I,0)#360
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#ConditionalBranch(I,eq,426)#361
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,3)#426
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(I,2)#427
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Put(B,NONSTATIC,Lsoot/coffi/cp_info;,tag)#428
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#429
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#430
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(I,4)#431
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,3)#432
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#ArrayStore(Ljava/lang/Object;)#433
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(I,4)#434
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Constant(I,1)#435
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#BinaryOp(I,add)#436
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalStore(I,4)#437
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#New(Lsoot/coffi/CONSTANT_Class_info;,0)#22
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Dup(1,0)#23
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Invoke(SPECIAL,Lsoot/coffi/CONSTANT_Class_info;,<init>,()V)#24
soot.coffi.CONSTANT_Class_info.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.CONSTANT_Class_info.<init>()V#Invoke(SPECIAL,Lsoot/coffi/cp_info;,<init>,()V)#1
soot.coffi.CONSTANT_Class_info.<init>()V#Return(V)#2
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalStore(Ljava/lang/Object;,3)#25
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,3)#26
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#CheckCast(Lsoot/coffi/CONSTANT_Class_info;)#27
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#28
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#29
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Put(I,NONSTATIC,Lsoot/coffi/CONSTANT_Class_info;,name_index)#30
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#31
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Get(Z,NONSTATIC,Lsoot/coffi/ClassFile;,debug)#32
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Constant(I,0)#33
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#ConditionalBranch(I,eq,426)#34
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#New(Lsoot/coffi/CONSTANT_NameAndType_info;,0)#318
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Dup(1,0)#319
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Invoke(SPECIAL,Lsoot/coffi/CONSTANT_NameAndType_info;,<init>,()V)#320
soot.coffi.CONSTANT_NameAndType_info.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.CONSTANT_NameAndType_info.<init>()V#Invoke(SPECIAL,Lsoot/coffi/cp_info;,<init>,()V)#1
soot.coffi.CONSTANT_NameAndType_info.<init>()V#Return(V)#2
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalStore(Ljava/lang/Object;,3)#321
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,3)#322
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#CheckCast(Lsoot/coffi/CONSTANT_NameAndType_info;)#323
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#324
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#325
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Put(I,NONSTATIC,Lsoot/coffi/CONSTANT_NameAndType_info;,name_index)#326
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,3)#327
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#CheckCast(Lsoot/coffi/CONSTANT_NameAndType_info;)#328
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#329
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#330
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Put(I,NONSTATIC,Lsoot/coffi/CONSTANT_NameAndType_info;,descriptor_index)#331
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#332
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Get(Z,NONSTATIC,Lsoot/coffi/ClassFile;,debug)#333
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Constant(I,0)#334
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#ConditionalBranch(I,eq,426)#335
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#New(Lsoot/coffi/CONSTANT_Methodref_info;,0)#79
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Dup(1,0)#80
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Invoke(SPECIAL,Lsoot/coffi/CONSTANT_Methodref_info;,<init>,()V)#81
soot.coffi.CONSTANT_Methodref_info.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.CONSTANT_Methodref_info.<init>()V#Invoke(SPECIAL,Lsoot/coffi/cp_info;,<init>,()V)#1
soot.coffi.CONSTANT_Methodref_info.<init>()V#Return(V)#2
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalStore(Ljava/lang/Object;,3)#82
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,3)#83
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#CheckCast(Lsoot/coffi/CONSTANT_Methodref_info;)#84
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#85
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#86
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Put(I,NONSTATIC,Lsoot/coffi/CONSTANT_Methodref_info;,class_index)#87
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,3)#88
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#CheckCast(Lsoot/coffi/CONSTANT_Methodref_info;)#89
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#90
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#91
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Put(I,NONSTATIC,Lsoot/coffi/CONSTANT_Methodref_info;,name_and_type_index)#92
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#93
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Get(Z,NONSTATIC,Lsoot/coffi/ClassFile;,debug)#94
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Constant(I,0)#95
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#ConditionalBranch(I,eq,426)#96
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Constant(I,1)#442
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Return(I)#443
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Constant(I,0)#46
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#ConditionalBranch(I,ne,50)#47
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#50
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#51
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#52
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Put(I,NONSTATIC,Lsoot/coffi/ClassFile;,access_flags)#53
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#54
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#55
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#56
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Put(I,NONSTATIC,Lsoot/coffi/ClassFile;,this_class)#57
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#58
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#59
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#60
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Put(I,NONSTATIC,Lsoot/coffi/ClassFile;,super_class)#61
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#62
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#63
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#64
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Put(I,NONSTATIC,Lsoot/coffi/ClassFile;,interfaces_count)#65
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#66
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Get(I,NONSTATIC,Lsoot/coffi/ClassFile;,interfaces_count)#67
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Constant(I,0)#68
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#ConditionalBranch(I,le,92)#69
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Invoke(STATIC,Lsoot/Timers;,v,()Lsoot/Timers;)#92
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Get(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,fieldTimer)#93
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Lsoot/Timer;,start,()V)#94
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#95
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#96
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#97
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Put(I,NONSTATIC,Lsoot/coffi/ClassFile;,fields_count)#98
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#99
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#100
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Lsoot/coffi/ClassFile;,readFields,(Ljava/io/DataInputStream;)Z)#101
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#1
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#Get(I,NONSTATIC,Lsoot/coffi/ClassFile;,fields_count)#2
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#New([Lsoot/coffi/field_info;,1)#3
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#Put([Lsoot/coffi/field_info;,NONSTATIC,Lsoot/coffi/ClassFile;,fields)#4
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#Constant(I,0)#5
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#LocalStore(I,3)#6
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#Goto(54)#7
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#LocalLoad(I,3)#54
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#55
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#Get(I,NONSTATIC,Lsoot/coffi/ClassFile;,fields_count)#56
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#ConditionalBranch(I,lt,8)#57
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#Constant(I,1)#58
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#Return(I)#59
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Pop(1)#102
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Invoke(STATIC,Lsoot/Timers;,v,()Lsoot/Timers;)#103
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Get(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,fieldTimer)#104
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Lsoot/Timer;,end,()V)#105
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Invoke(STATIC,Lsoot/Timers;,v,()Lsoot/Timers;)#106
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Get(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,methodTimer)#107
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Lsoot/Timer;,start,()V)#108
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#109
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#110
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#111
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Put(I,NONSTATIC,Lsoot/coffi/ClassFile;,methods_count)#112
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#113
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#114
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Lsoot/coffi/ClassFile;,readMethods,(Ljava/io/DataInputStream;)Z)#115
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#1
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Get(I,NONSTATIC,Lsoot/coffi/ClassFile;,methods_count)#2
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#New([Lsoot/coffi/method_info;,1)#3
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Put([Lsoot/coffi/method_info;,NONSTATIC,Lsoot/coffi/ClassFile;,methods)#4
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Constant(I,0)#5
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalStore(I,3)#6
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Goto(87)#7
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(I,3)#87
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#88
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Get(I,NONSTATIC,Lsoot/coffi/ClassFile;,methods_count)#89
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#ConditionalBranch(I,lt,8)#90
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#New(Lsoot/coffi/method_info;,0)#8
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Dup(1,0)#9
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Invoke(SPECIAL,Lsoot/coffi/method_info;,<init>,()V)#10
soot.coffi.method_info.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.method_info.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.coffi.method_info.<init>()V#Return(V)#2
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalStore(Ljava/lang/Object;,2)#11
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,2)#12
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#13
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#14
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Put(I,NONSTATIC,Lsoot/coffi/method_info;,access_flags)#15
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,2)#16
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#17
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#18
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Put(I,NONSTATIC,Lsoot/coffi/method_info;,name_index)#19
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,2)#20
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#21
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#22
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Put(I,NONSTATIC,Lsoot/coffi/method_info;,descriptor_index)#23
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,2)#24
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#25
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#26
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Put(I,NONSTATIC,Lsoot/coffi/method_info;,attributes_count)#27
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#28
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#29
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,2)#30
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Get(I,NONSTATIC,Lsoot/coffi/method_info;,name_index)#31
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#ArrayLoad(Ljava/lang/Object;)#32
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#CheckCast(Lsoot/coffi/CONSTANT_Utf8_info;)#33
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalStore(Ljava/lang/Object;,4)#34
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,2)#35
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Get(I,NONSTATIC,Lsoot/coffi/method_info;,attributes_count)#36
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Constant(I,0)#37
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#ConditionalBranch(I,le,78)#38
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,2)#39
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,2)#40
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Get(I,NONSTATIC,Lsoot/coffi/method_info;,attributes_count)#41
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#New([Lsoot/coffi/attribute_info;,1)#42
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Put([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/method_info;,attributes)#43
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#44
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#45
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,2)#46
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Get(I,NONSTATIC,Lsoot/coffi/method_info;,attributes_count)#47
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,2)#48
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/method_info;,attributes)#49
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Lsoot/coffi/ClassFile;,readAttributes,(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z)#50
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(L;,null)#0
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(Ljava/lang/Object;,4)#1
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(I,0)#2
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(I,5)#3
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Goto(919)#4
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(I,5)#919
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(I,2)#920
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#ConditionalBranch(I,lt,5)#921
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,1)#5
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#6
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(I,6)#7
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,1)#8
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readInt,()I)#9
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Conversion(I,J)#10
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(J,4294967295)#11
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#BinaryOp(J,and)#12
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(J,7)#13
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,0)#14
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#15
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(I,6)#16
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#ArrayLoad(Ljava/lang/Object;)#17
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#CheckCast(Lsoot/coffi/CONSTANT_Utf8_info;)#18
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,convert,()Ljava/lang/String;)#19
soot.coffi.CONSTANT_Utf8_info.convert()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#27
soot.coffi.CONSTANT_Utf8_info.convert()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsoot/coffi/CONSTANT_Utf8_info;,s)#28
soot.coffi.CONSTANT_Utf8_info.convert()Ljava/lang/String;#Return(Ljava/lang/Object;)#29
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(Ljava/lang/Object;,9)#20
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,9)#21
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(Ljava/lang/String;,"SourceFile")#22
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/lang/String;,compareTo,(Ljava/lang/String;)I)#23
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(I,0)#24
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#ConditionalBranch(I,ne,37)#25
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,9)#37
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(Ljava/lang/String;,"ConstantValue")#38
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/lang/String;,compareTo,(Ljava/lang/String;)I)#39
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(I,0)#40
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#ConditionalBranch(I,ne,53)#41
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,9)#53
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(Ljava/lang/String;,"Code")#54
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/lang/String;,compareTo,(Ljava/lang/String;)I)#55
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(I,0)#56
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#ConditionalBranch(I,ne,153)#57
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#New(Lsoot/coffi/Code_attribute;,0)#58
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Dup(1,0)#59
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(SPECIAL,Lsoot/coffi/Code_attribute;,<init>,()V)#60
soot.coffi.Code_attribute.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Code_attribute.<init>()V#Invoke(SPECIAL,Lsoot/coffi/attribute_info;,<init>,()V)#1
soot.coffi.attribute_info.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.attribute_info.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.coffi.attribute_info.<init>()V#Return(V)#2
soot.coffi.Code_attribute.<init>()V#Return(V)#2
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(Ljava/lang/Object;,10)#61
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#62
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,1)#63
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#64
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put(I,NONSTATIC,Lsoot/coffi/Code_attribute;,max_stack)#65
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#66
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,1)#67
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#68
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put(I,NONSTATIC,Lsoot/coffi/Code_attribute;,max_locals)#69
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#70
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,1)#71
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readInt,()I)#72
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Conversion(I,J)#73
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(J,4294967295)#74
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#BinaryOp(J,and)#75
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put(J,NONSTATIC,Lsoot/coffi/Code_attribute;,code_length)#76
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#77
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#78
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Get(J,NONSTATIC,Lsoot/coffi/Code_attribute;,code_length)#79
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Conversion(J,I)#80
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#New([B,1)#81
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put([B,NONSTATIC,Lsoot/coffi/Code_attribute;,code)#82
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,1)#83
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#84
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Get([B,NONSTATIC,Lsoot/coffi/Code_attribute;,code)#85
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,read,([B)I)#86
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Pop(1)#87
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#88
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,1)#89
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#90
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put(I,NONSTATIC,Lsoot/coffi/Code_attribute;,exception_table_length)#91
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#92
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#93
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Get(I,NONSTATIC,Lsoot/coffi/Code_attribute;,exception_table_length)#94
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#New([Lsoot/coffi/exception_table_entry;,1)#95
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put([Lsoot/coffi/exception_table_entry;,NONSTATIC,Lsoot/coffi/Code_attribute;,exception_table)#96
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(I,0)#97
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(I,11)#98
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Goto(129)#99
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(I,11)#129
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#130
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Get(I,NONSTATIC,Lsoot/coffi/Code_attribute;,exception_table_length)#131
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#ConditionalBranch(I,lt,100)#132
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#133
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,1)#134
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#135
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put(I,NONSTATIC,Lsoot/coffi/Code_attribute;,attributes_count)#136
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#137
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#138
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Get(I,NONSTATIC,Lsoot/coffi/Code_attribute;,attributes_count)#139
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#New([Lsoot/coffi/attribute_info;,1)#140
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/Code_attribute;,attributes)#141
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,0)#142
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,1)#143
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#144
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Get(I,NONSTATIC,Lsoot/coffi/Code_attribute;,attributes_count)#145
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#146
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/Code_attribute;,attributes)#147
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Lsoot/coffi/ClassFile;,readAttributes,(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z)#148
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,9)#153
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(Ljava/lang/String;,"Exceptions")#154
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/lang/String;,compareTo,(Ljava/lang/String;)I)#155
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(I,0)#156
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#ConditionalBranch(I,ne,195)#157
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,9)#195
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(Ljava/lang/String;,"LineNumberTable")#196
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/lang/String;,compareTo,(Ljava/lang/String;)I)#197
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(I,0)#198
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#ConditionalBranch(I,ne,244)#199
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#New(Lsoot/coffi/LineNumberTable_attribute;,0)#200
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Dup(1,0)#201
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(SPECIAL,Lsoot/coffi/LineNumberTable_attribute;,<init>,()V)#202
soot.coffi.LineNumberTable_attribute.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.LineNumberTable_attribute.<init>()V#Invoke(SPECIAL,Lsoot/coffi/attribute_info;,<init>,()V)#1
soot.coffi.LineNumberTable_attribute.<init>()V#Return(V)#2
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(Ljava/lang/Object;,10)#203
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#204
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,1)#205
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#206
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put(I,NONSTATIC,Lsoot/coffi/LineNumberTable_attribute;,line_number_table_length)#207
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#208
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#209
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Get(I,NONSTATIC,Lsoot/coffi/LineNumberTable_attribute;,line_number_table_length)#210
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#New([Lsoot/coffi/line_number_table_entry;,1)#211
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put([Lsoot/coffi/line_number_table_entry;,NONSTATIC,Lsoot/coffi/LineNumberTable_attribute;,line_number_table)#212
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(I,0)#213
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(I,11)#214
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Goto(237)#215
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(I,11)#237
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#238
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Get(I,NONSTATIC,Lsoot/coffi/LineNumberTable_attribute;,line_number_table_length)#239
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#ConditionalBranch(I,lt,216)#240
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#New(Lsoot/coffi/line_number_table_entry;,0)#216
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Dup(1,0)#217
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(SPECIAL,Lsoot/coffi/line_number_table_entry;,<init>,()V)#218
soot.coffi.line_number_table_entry.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.line_number_table_entry.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.coffi.line_number_table_entry.<init>()V#Return(V)#2
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(Ljava/lang/Object;,12)#219
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,12)#220
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,1)#221
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#222
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put(I,NONSTATIC,Lsoot/coffi/line_number_table_entry;,start_pc)#223
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,12)#224
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,1)#225
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#226
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put(I,NONSTATIC,Lsoot/coffi/line_number_table_entry;,line_number)#227
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#228
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Get([Lsoot/coffi/line_number_table_entry;,NONSTATIC,Lsoot/coffi/LineNumberTable_attribute;,line_number_table)#229
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(I,11)#230
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,12)#231
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#ArrayStore(Ljava/lang/Object;)#232
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(I,11)#233
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(I,1)#234
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#BinaryOp(I,add)#235
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(I,11)#236
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#241
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(Ljava/lang/Object;,4)#242
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Goto(905)#243
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,4)#905
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(I,6)#906
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put(I,NONSTATIC,Lsoot/coffi/attribute_info;,attribute_name)#907
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,4)#908
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(J,7)#909
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put(J,NONSTATIC,Lsoot/coffi/attribute_info;,attribute_length)#910
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,3)#911
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(I,5)#912
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,4)#913
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#ArrayStore(Ljava/lang/Object;)#914
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(I,5)#915
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(I,1)#916
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#BinaryOp(I,add)#917
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(I,5)#918
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(I,1)#922
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Return(I)#923
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Pop(1)#149
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#150
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(Ljava/lang/Object;,4)#151
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Goto(905)#152
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Pop(1)#51
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Constant(I,0)#52
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalStore(I,5)#53
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Goto(74)#54
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(I,5)#74
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,2)#75
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Get(I,NONSTATIC,Lsoot/coffi/method_info;,attributes_count)#76
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#ConditionalBranch(I,lt,55)#77
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,2)#55
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/method_info;,attributes)#56
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(I,5)#57
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#ArrayLoad(Ljava/lang/Object;)#58
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Instanceof(Lsoot/coffi/Code_attribute;)#59
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Constant(I,0)#60
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#ConditionalBranch(I,eq,70)#61
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,2)#62
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,2)#63
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/method_info;,attributes)#64
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(I,5)#65
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#ArrayLoad(Ljava/lang/Object;)#66
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#CheckCast(Lsoot/coffi/Code_attribute;)#67
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Put(Lsoot/coffi/Code_attribute;,NONSTATIC,Lsoot/coffi/method_info;,code_attr)#68
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Goto(78)#69
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#78
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Get([Lsoot/coffi/method_info;,NONSTATIC,Lsoot/coffi/ClassFile;,methods)#79
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(I,3)#80
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,2)#81
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#ArrayStore(Ljava/lang/Object;)#82
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(I,3)#83
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Constant(I,1)#84
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#BinaryOp(I,add)#85
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalStore(I,3)#86
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Constant(I,1)#91
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Return(I)#92
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Pop(1)#116
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Invoke(STATIC,Lsoot/Timers;,v,()Lsoot/Timers;)#117
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Get(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,methodTimer)#118
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Lsoot/Timer;,end,()V)#119
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Invoke(STATIC,Lsoot/Timers;,v,()Lsoot/Timers;)#120
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Get(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,attributeTimer)#121
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Lsoot/Timer;,start,()V)#122
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#123
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#124
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#125
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Put(I,NONSTATIC,Lsoot/coffi/ClassFile;,attributes_count)#126
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#127
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Get(I,NONSTATIC,Lsoot/coffi/ClassFile;,attributes_count)#128
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Constant(I,0)#129
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#ConditionalBranch(I,le,144)#130
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#131
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#132
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Get(I,NONSTATIC,Lsoot/coffi/ClassFile;,attributes_count)#133
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#New([Lsoot/coffi/attribute_info;,1)#134
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Put([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/ClassFile;,attributes)#135
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#136
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#137
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#138
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Get(I,NONSTATIC,Lsoot/coffi/ClassFile;,attributes_count)#139
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#140
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/ClassFile;,attributes)#141
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Lsoot/coffi/ClassFile;,readAttributes,(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z)#142
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#New(Lsoot/coffi/SourceFile_attribute;,0)#26
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Dup(1,0)#27
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(SPECIAL,Lsoot/coffi/SourceFile_attribute;,<init>,()V)#28
soot.coffi.SourceFile_attribute.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.SourceFile_attribute.<init>()V#Invoke(SPECIAL,Lsoot/coffi/attribute_info;,<init>,()V)#1
soot.coffi.SourceFile_attribute.<init>()V#Return(V)#2
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(Ljava/lang/Object;,10)#29
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#30
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,1)#31
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#32
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put(I,NONSTATIC,Lsoot/coffi/SourceFile_attribute;,sourcefile_index)#33
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#34
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(Ljava/lang/Object;,4)#35
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Goto(905)#36
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Pop(1)#143
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Invoke(STATIC,Lsoot/Timers;,v,()Lsoot/Timers;)#144
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Get(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,attributeTimer)#145
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Lsoot/Timer;,end,()V)#146
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Goto(167)#147
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Constant(I,1)#167
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Return(I)#168
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#LocalStore(I,5)#33
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#LocalLoad(Ljava/lang/Object;,3)#34
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#Invoke(VIRTUAL,Ljava/io/InputStream;,close,()V)#35
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#LocalLoad(Ljava/lang/Object;,4)#36
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,close,()V)#37
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#LocalLoad(Ljava/lang/Object;,2)#38
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#Invoke(VIRTUAL,Ljava/io/InputStream;,close,()V)#39
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#Goto(60)#40
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#LocalLoad(I,5)#60
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#Constant(I,0)#61
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#ConditionalBranch(I,ne,65)#62
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#Constant(I,1)#65
soot.coffi.ClassFile.loadClassFile(Ljava/io/InputStream;)Z#Return(I)#66
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(I,7)#13
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,7)#14
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#15
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,ne,49)#16
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#49
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#50
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#51
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/ClassFile;,this_class)#52
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#53
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/CONSTANT_Class_info;)#54
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,8)#55
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#56
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#57
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#58
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_Class_info;,name_index)#59
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#60
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/CONSTANT_Utf8_info;)#61
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,convert,()Ljava/lang/String;)#62
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,9)#63
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,9)#64
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,47)#65
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,46)#66
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Ljava/lang/String;,replace,(CC)Ljava/lang/String;)#67
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,9)#68
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,9)#69
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,4)#70
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getName,()Ljava/lang/String;)#71
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#72
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#73
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,ne,93)#74
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,4)#93
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#94
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/ClassFile;,access_flags)#95
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,-33)#96
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#BinaryOp(I,and)#97
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/SootClass;,setModifiers,(I)V)#98
soot.SootClass.setModifiers(I)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.setModifiers(I)V#LocalLoad(I,1)#1
soot.SootClass.setModifiers(I)V#Put(I,NONSTATIC,Lsoot/SootClass;,modifiers)#2
soot.SootClass.setModifiers(I)V#Return(V)#3
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#99
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/ClassFile;,super_class)#100
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#101
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,eq,132)#102
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#103
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#104
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#105
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/ClassFile;,super_class)#106
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#107
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/CONSTANT_Class_info;)#108
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,7)#109
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#110
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#111
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,7)#112
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_Class_info;,name_index)#113
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#114
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/CONSTANT_Utf8_info;)#115
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,convert,()Ljava/lang/String;)#116
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,8)#117
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#118
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,47)#119
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,46)#120
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Ljava/lang/String;,replace,(CC)Ljava/lang/String;)#121
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,8)#122
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#123
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#124
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#125
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Pop(1)#126
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,4)#127
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(STATIC,Lsoot/SootResolver;,v,()Lsoot/SootResolver;)#128
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#129
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/SootResolver;,makeClassRef,(Ljava/lang/String;)Lsoot/SootClass;)#130
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/SootClass;,setSuperclass,(Lsoot/SootClass;)V)#131
soot.SootClass.setSuperclass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.setSuperclass(Lsoot/SootClass;)V#Constant(I,1)#1
soot.SootClass.setSuperclass(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,checkLevel,(I)V)#2
soot.SootClass.checkLevel(I)V#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#0
soot.SootClass.checkLevel(I)V#Invoke(VIRTUAL,Lsoot/Scene;,doneResolving,()Z)#1
soot.Scene.doneResolving()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.doneResolving()Z#Get(Z,NONSTATIC,Lsoot/Scene;,doneResolving)#1
soot.Scene.doneResolving()Z#Return(I)#2
soot.SootClass.checkLevel(I)V#Constant(I,0)#2
soot.SootClass.checkLevel(I)V#ConditionalBranch(I,ne,5)#3
soot.SootClass.checkLevel(I)V#Return(V)#4
soot.SootClass.setSuperclass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.SootClass.setSuperclass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#4
soot.SootClass.setSuperclass(Lsoot/SootClass;)V#Put(Lsoot/SootClass;,NONSTATIC,Lsoot/SootClass;,superClass)#5
soot.SootClass.setSuperclass(Lsoot/SootClass;)V#Return(V)#6
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#132
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(I,7)#133
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Goto(172)#134
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,7)#172
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#173
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/ClassFile;,interfaces_count)#174
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,lt,135)#175
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#176
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(I,7)#177
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Goto(437)#178
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,7)#437
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#438
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/ClassFile;,fields_count)#439
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,lt,179)#440
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#441
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(I,7)#442
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Goto(892)#443
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,7)#892
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#893
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/ClassFile;,methods_count)#894
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,lt,444)#895
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#444
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/method_info;,NONSTATIC,Lsoot/coffi/ClassFile;,methods)#445
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,7)#446
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#447
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,8)#448
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#449
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#450
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#451
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/method_info;,name_index)#452
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#453
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(L;,null)#454
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(Ljava/lang/Object;,ne,474)#455
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#474
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#475
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#476
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/method_info;,name_index)#477
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#478
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/CONSTANT_Utf8_info;)#479
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,convert,()Ljava/lang/String;)#480
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,9)#481
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#482
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#483
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#484
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/method_info;,descriptor_index)#485
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#486
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/CONSTANT_Utf8_info;)#487
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,convert,()Ljava/lang/String;)#488
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,10)#489
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#490
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,10)#491
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/coffi/Util;,jimpleTypesOfFieldOrMethodDescriptor,(Ljava/lang/String;)[Lsoot/Type;)#492
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Get(Ljava/util/Map;,NONSTATIC,Lsoot/coffi/Util;,cache)#1
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#2
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#CheckCast([Lsoot/Type;)#4
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(Ljava/lang/Object;,2)#5
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(Ljava/lang/Object;,2)#6
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Constant(L;,null)#7
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#ConditionalBranch(Ljava/lang/Object;,eq,11)#8
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#11
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Invoke(VIRTUAL,Ljava/lang/String;,toCharArray,()[C)#12
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(Ljava/lang/Object;,3)#13
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Constant(I,0)#14
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(I,4)#15
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(Ljava/lang/Object;,0)#16
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Get(Ljava/util/ArrayList;,NONSTATIC,Lsoot/coffi/Util;,conversionTypes)#17
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Invoke(VIRTUAL,Ljava/util/ArrayList;,clear,()V)#18
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Goto(195)#19
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(I,4)#195
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(Ljava/lang/Object;,3)#196
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#ArrayLength()#197
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#ConditionalBranch(I,lt,20)#198
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Constant(I,0)#20
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(I,5)#21
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Constant(I,0)#22
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(I,6)#23
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Constant(L;,null)#24
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(Ljava/lang/Object;,7)#25
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Goto(172)#26
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(I,4)#172
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(Ljava/lang/Object;,3)#173
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#ArrayLength()#174
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#ConditionalBranch(I,lt,27)#175
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(Ljava/lang/Object;,3)#27
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(I,4)#28
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#ArrayLoad(C)#29
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Switch(167,40,31,41,31,66,47,67,54,68,61,70,68,73,75,74,82,76,89,83,146,86,160,90,153,91,36)#30
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(I,4)#31
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Constant(I,1)#32
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#BinaryOp(I,add)#33
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(I,4)#34
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Goto(195)#35
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Invoke(STATIC,Lsoot/VoidType;,v,()Lsoot/VoidType;)#160
soot.VoidType.v()Lsoot/VoidType;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.VoidType.v()Lsoot/VoidType;#Invoke(VIRTUAL,Lsoot/G;,soot_VoidType,()Lsoot/VoidType;)#1
soot.Singletons.soot_VoidType()Lsoot/VoidType;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_VoidType()Lsoot/VoidType;#Get(Lsoot/VoidType;,NONSTATIC,Lsoot/Singletons;,instance_soot_VoidType)#1
soot.Singletons.soot_VoidType()Lsoot/VoidType;#Constant(L;,null)#2
soot.Singletons.soot_VoidType()Lsoot/VoidType;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_VoidType()Lsoot/VoidType;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_VoidType()Lsoot/VoidType;#New(Lsoot/VoidType;,0)#5
soot.Singletons.soot_VoidType()Lsoot/VoidType;#Dup(1,0)#6
soot.Singletons.soot_VoidType()Lsoot/VoidType;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_VoidType()Lsoot/VoidType;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_VoidType()Lsoot/VoidType;#Invoke(SPECIAL,Lsoot/VoidType;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.VoidType.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.VoidType.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Type;,<init>,()V)#1
soot.VoidType.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_VoidType()Lsoot/VoidType;#Put(Lsoot/VoidType;,NONSTATIC,Lsoot/Singletons;,instance_soot_VoidType)#10
soot.Singletons.soot_VoidType()Lsoot/VoidType;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_VoidType()Lsoot/VoidType;#Get(Lsoot/VoidType;,NONSTATIC,Lsoot/Singletons;,instance_soot_VoidType)#12
soot.Singletons.soot_VoidType()Lsoot/VoidType;#Return(Ljava/lang/Object;)#13
soot.VoidType.v()Lsoot/VoidType;#Return(Ljava/lang/Object;)#2
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(Ljava/lang/Object;,7)#161
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(I,4)#162
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Constant(I,1)#163
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#BinaryOp(I,add)#164
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(I,4)#165
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Goto(176)#166
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(Ljava/lang/Object;,7)#176
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Constant(L;,null)#177
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#ConditionalBranch(Ljava/lang/Object;,ne,180)#178
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(I,5)#180
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Constant(I,0)#181
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#ConditionalBranch(I,eq,188)#182
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(Ljava/lang/Object;,7)#188
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(Ljava/lang/Object;,8)#189
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(Ljava/lang/Object;,0)#190
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Get(Ljava/util/ArrayList;,NONSTATIC,Lsoot/coffi/Util;,conversionTypes)#191
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(Ljava/lang/Object;,8)#192
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#193
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Pop(1)#194
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(Ljava/lang/Object;,0)#199
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Get(Ljava/util/ArrayList;,NONSTATIC,Lsoot/coffi/Util;,conversionTypes)#200
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Constant(I,0)#201
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#New([Lsoot/Type;,1)#202
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Invoke(VIRTUAL,Ljava/util/ArrayList;,toArray,([Ljava/lang/Object;)[Ljava/lang/Object;)#203
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#CheckCast([Lsoot/Type;)#204
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(Ljava/lang/Object;,2)#205
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(Ljava/lang/Object;,0)#206
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Get(Ljava/util/Map;,NONSTATIC,Lsoot/coffi/Util;,cache)#207
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#208
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(Ljava/lang/Object;,2)#209
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#210
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Pop(1)#211
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(Ljava/lang/Object;,2)#212
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Return(Ljava/lang/Object;)#213
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,13)#493
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#New(Ljava/util/ArrayList;,0)#494
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Dup(1,0)#495
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#496
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,11)#497
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#498
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(I,14)#499
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Goto(517)#500
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,14)#517
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,13)#518
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLength()#519
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,1)#520
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#BinaryOp(I,sub)#521
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,lt,501)#522
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,13)#523
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,13)#524
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLength()#525
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,1)#526
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#BinaryOp(I,sub)#527
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#528
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,12)#529
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#530
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,12)#531
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#532
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Pop(1)#533
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#534
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/method_info;,access_flags)#535
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(I,13)#536
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#New(Lsoot/SootMethod;,0)#537
soot.SootMethod.<clinit>()V#Constant(I,0)#0
soot.SootMethod.<clinit>()V#Put(Z,STATIC,Lsoot/SootMethod;,DEBUG)#1
soot.SootMethod.<clinit>()V#Return(V)#2
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Dup(1,0)#538
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,9)#539
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,11)#540
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,12)#541
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,13)#542
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(SPECIAL,Lsoot/SootMethod;,<init>,(Ljava/lang/String;Ljava/util/List;Lsoot/Type;I)V)#543
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;I)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;I)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;I)V#LocalLoad(Ljava/lang/Object;,2)#2
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;I)V#LocalLoad(Ljava/lang/Object;,3)#3
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;I)V#LocalLoad(I,4)#4
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;I)V#Invoke(STATIC,Ljava/util/Collections;,emptyList,()Ljava/util/List;)#5
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;I)V#Invoke(SPECIAL,Lsoot/SootMethod;,<init>,(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V)#6
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#Invoke(SPECIAL,Lsoot/tagkit/AbstractHost;,<init>,()V)#1
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#Constant(I,0)#3
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#Put(Z,NONSTATIC,Lsoot/SootMethod;,isPhantom)#4
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#Constant(L;,null)#6
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/SootMethod;,exceptions)#7
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#Constant(I,0)#9
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#Put(I,NONSTATIC,Lsoot/SootMethod;,number)#10
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#12
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/SootMethod;,name)#13
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#14
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#New(Ljava/util/ArrayList;,0)#15
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#Dup(1,0)#16
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#17
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/SootMethod;,parameterTypes)#18
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#19
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#Get(Ljava/util/List;,NONSTATIC,Lsoot/SootMethod;,parameterTypes)#20
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#21
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,addAll,(Ljava/util/Collection;)Z)#22
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#Pop(1)#23
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#24
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#25
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#Get(Ljava/util/List;,NONSTATIC,Lsoot/SootMethod;,parameterTypes)#26
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#Invoke(STATIC,Ljava/util/Collections;,unmodifiableList,(Ljava/util/List;)Ljava/util/List;)#27
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/SootMethod;,parameterTypes)#28
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#29
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#30
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#Put(Lsoot/Type;,NONSTATIC,Lsoot/SootMethod;,returnType)#31
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#32
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#LocalLoad(I,4)#33
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#Put(I,NONSTATIC,Lsoot/SootMethod;,modifiers)#34
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#35
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#Get(Ljava/util/List;,NONSTATIC,Lsoot/SootMethod;,exceptions)#36
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#Constant(L;,null)#37
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#ConditionalBranch(Ljava/lang/Object;,ne,53)#38
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#LocalLoad(Ljava/lang/Object;,5)#39
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,isEmpty,()Z)#40
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#Constant(I,0)#41
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#ConditionalBranch(I,ne,53)#42
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#53
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#Invoke(VIRTUAL,Lsoot/Scene;,getMethodNumberer,()Lsoot/util/ArrayNumberer;)#54
soot.Scene.getMethodNumberer()Lsoot/util/ArrayNumberer;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.getMethodNumberer()Lsoot/util/ArrayNumberer;#Get(Lsoot/util/ArrayNumberer;,NONSTATIC,Lsoot/Scene;,methodNumberer)#1
soot.Scene.getMethodNumberer()Lsoot/util/ArrayNumberer;#Return(Ljava/lang/Object;)#2
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#55
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#Invoke(VIRTUAL,Lsoot/util/ArrayNumberer;,add,(Ljava/lang/Object;)V)#56
soot.SootMethod.getNumber()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethod.getNumber()I#Get(I,NONSTATIC,Lsoot/SootMethod;,number)#1
soot.SootMethod.getNumber()I#Return(I)#2
soot.SootMethod.setNumber(I)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethod.setNumber(I)V#LocalLoad(I,1)#1
soot.SootMethod.setNumber(I)V#Put(I,NONSTATIC,Lsoot/SootMethod;,number)#2
soot.SootMethod.setNumber(I)V#Return(V)#3
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#57
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#58
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#Invoke(VIRTUAL,Lsoot/Scene;,getSubSigNumberer,()Lsoot/util/StringNumberer;)#59
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#60
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,getSubSignature,()Ljava/lang/String;)#61
soot.SootMethod.getSubSignature()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethod.getSubSignature()Ljava/lang/String;#Invoke(VIRTUAL,Lsoot/SootMethod;,getName,()Ljava/lang/String;)#1
soot.SootMethod.getName()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethod.getName()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsoot/SootMethod;,name)#1
soot.SootMethod.getName()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
soot.SootMethod.getSubSignature()Ljava/lang/String;#LocalStore(Ljava/lang/Object;,1)#2
soot.SootMethod.getSubSignature()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#3
soot.SootMethod.getSubSignature()Ljava/lang/String;#Invoke(VIRTUAL,Lsoot/SootMethod;,getParameterTypes,()Ljava/util/List;)#4
soot.SootMethod.getParameterTypes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethod.getParameterTypes()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lsoot/SootMethod;,parameterTypes)#1
soot.SootMethod.getParameterTypes()Ljava/util/List;#Return(Ljava/lang/Object;)#2
soot.SootMethod.getSubSignature()Ljava/lang/String;#LocalStore(Ljava/lang/Object;,2)#5
soot.SootMethod.getSubSignature()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#6
soot.SootMethod.getSubSignature()Ljava/lang/String;#Invoke(VIRTUAL,Lsoot/SootMethod;,getReturnType,()Lsoot/Type;)#7
soot.SootMethod.getReturnType()Lsoot/Type;#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethod.getReturnType()Lsoot/Type;#Get(Lsoot/Type;,NONSTATIC,Lsoot/SootMethod;,returnType)#1
soot.SootMethod.getReturnType()Lsoot/Type;#Return(Ljava/lang/Object;)#2
soot.SootMethod.getSubSignature()Ljava/lang/String;#LocalStore(Ljava/lang/Object;,3)#8
soot.SootMethod.getSubSignature()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#9
soot.SootMethod.getSubSignature()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#10
soot.SootMethod.getSubSignature()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#11
soot.SootMethod.getSubSignature()Ljava/lang/String;#Invoke(STATIC,Lsoot/SootMethod;,getSubSignatureImpl,(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;)#12
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#New(Ljava/lang/StringBuffer;,0)#0
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Dup(1,0)#1
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuffer;,<init>,()V)#2
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,3)#3
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#4
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,4)#5
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#6
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#New(Ljava/lang/StringBuilder;,0)#7
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Dup(1,0)#8
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,4)#9
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Invoke(VIRTUAL,Lsoot/Type;,toString,()Ljava/lang/String;)#10
soot.VoidType.toString()Ljava/lang/String;#Constant(Ljava/lang/String;,"void")#0
soot.VoidType.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#1
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#11
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#12
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Constant(Ljava/lang/String;," ")#13
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#14
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#15
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#16
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Invoke(VIRTUAL,Lsoot/Scene;,quotedNameOf,(Ljava/lang/String;)Ljava/lang/String;)#17
soot.Scene.quotedNameOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.quotedNameOf(Ljava/lang/String;)Ljava/lang/String;#Get(Ljava/util/Set;,NONSTATIC,Lsoot/Scene;,reservedNames)#1
soot.Scene.quotedNameOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#2
soot.Scene.quotedNameOf(Ljava/lang/String;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/Set;,contains,(Ljava/lang/Object;)Z)#3
soot.Scene.quotedNameOf(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#4
soot.Scene.quotedNameOf(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,16)#5
soot.Scene.quotedNameOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#16
soot.Scene.quotedNameOf(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#17
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#18
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Constant(Ljava/lang/String;,"(")#19
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#20
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#21
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(Ljava/lang/String;)Ljava/lang/StringBuffer;)#22
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Pop(1)#23
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#24
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#25
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,5)#26
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,5)#27
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#28
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Constant(I,0)#29
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#ConditionalBranch(I,eq,56)#30
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#56
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Constant(Ljava/lang/String;,")")#57
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(Ljava/lang/String;)Ljava/lang/StringBuffer;)#58
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Pop(1)#59
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#60
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,toString,()Ljava/lang/String;)#61
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,intern,()Ljava/lang/String;)#62
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Return(Ljava/lang/Object;)#63
soot.SootMethod.getSubSignature()Ljava/lang/String;#Return(Ljava/lang/Object;)#13
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#Invoke(VIRTUAL,Lsoot/util/StringNumberer;,findOrAdd,(Ljava/lang/String;)Lsoot/util/NumberedString;)#62
soot.util.StringNumberer.findOrAdd(Ljava/lang/String;)Lsoot/util/NumberedString;#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.StringNumberer.findOrAdd(Ljava/lang/String;)Lsoot/util/NumberedString;#Get(Ljava/util/HashMap;,NONSTATIC,Lsoot/util/StringNumberer;,stringToNumbered)#1
soot.util.StringNumberer.findOrAdd(Ljava/lang/String;)Lsoot/util/NumberedString;#LocalLoad(Ljava/lang/Object;,1)#2
soot.util.StringNumberer.findOrAdd(Ljava/lang/String;)Lsoot/util/NumberedString;#Invoke(VIRTUAL,Ljava/util/HashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
soot.util.StringNumberer.findOrAdd(Ljava/lang/String;)Lsoot/util/NumberedString;#CheckCast(Lsoot/util/NumberedString;)#4
soot.util.StringNumberer.findOrAdd(Ljava/lang/String;)Lsoot/util/NumberedString;#LocalStore(Ljava/lang/Object;,2)#5
soot.util.StringNumberer.findOrAdd(Ljava/lang/String;)Lsoot/util/NumberedString;#LocalLoad(Ljava/lang/Object;,2)#6
soot.util.StringNumberer.findOrAdd(Ljava/lang/String;)Lsoot/util/NumberedString;#Constant(L;,null)#7
soot.util.StringNumberer.findOrAdd(Ljava/lang/String;)Lsoot/util/NumberedString;#ConditionalBranch(Ljava/lang/Object;,ne,23)#8
soot.util.StringNumberer.findOrAdd(Ljava/lang/String;)Lsoot/util/NumberedString;#LocalLoad(Ljava/lang/Object;,0)#9
soot.util.StringNumberer.findOrAdd(Ljava/lang/String;)Lsoot/util/NumberedString;#Get(Ljava/util/HashMap;,NONSTATIC,Lsoot/util/StringNumberer;,stringToNumbered)#10
soot.util.StringNumberer.findOrAdd(Ljava/lang/String;)Lsoot/util/NumberedString;#LocalLoad(Ljava/lang/Object;,1)#11
soot.util.StringNumberer.findOrAdd(Ljava/lang/String;)Lsoot/util/NumberedString;#New(Lsoot/util/NumberedString;,0)#12
soot.util.StringNumberer.findOrAdd(Ljava/lang/String;)Lsoot/util/NumberedString;#Dup(1,0)#13
soot.util.StringNumberer.findOrAdd(Ljava/lang/String;)Lsoot/util/NumberedString;#LocalLoad(Ljava/lang/Object;,1)#14
soot.util.StringNumberer.findOrAdd(Ljava/lang/String;)Lsoot/util/NumberedString;#Invoke(SPECIAL,Lsoot/util/NumberedString;,<init>,(Ljava/lang/String;)V)#15
soot.util.NumberedString.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.NumberedString.<init>(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.util.NumberedString.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.util.NumberedString.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.util.NumberedString.<init>(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/util/NumberedString;,s)#4
soot.util.NumberedString.<init>(Ljava/lang/String;)V#Return(V)#5
soot.util.StringNumberer.findOrAdd(Ljava/lang/String;)Lsoot/util/NumberedString;#Dup(1,0)#16
soot.util.StringNumberer.findOrAdd(Ljava/lang/String;)Lsoot/util/NumberedString;#LocalStore(Ljava/lang/Object;,2)#17
soot.util.StringNumberer.findOrAdd(Ljava/lang/String;)Lsoot/util/NumberedString;#Invoke(VIRTUAL,Ljava/util/HashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#18
soot.util.StringNumberer.findOrAdd(Ljava/lang/String;)Lsoot/util/NumberedString;#Pop(1)#19
soot.util.StringNumberer.findOrAdd(Ljava/lang/String;)Lsoot/util/NumberedString;#LocalLoad(Ljava/lang/Object;,0)#20
soot.util.StringNumberer.findOrAdd(Ljava/lang/String;)Lsoot/util/NumberedString;#LocalLoad(Ljava/lang/Object;,2)#21
soot.util.StringNumberer.findOrAdd(Ljava/lang/String;)Lsoot/util/NumberedString;#Invoke(VIRTUAL,Lsoot/util/StringNumberer;,add,(Ljava/lang/Object;)V)#22
soot.util.NumberedString.getNumber()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.NumberedString.getNumber()I#Get(I,NONSTATIC,Lsoot/util/NumberedString;,number)#1
soot.util.NumberedString.getNumber()I#Return(I)#2
soot.util.NumberedString.setNumber(I)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.NumberedString.setNumber(I)V#LocalLoad(I,1)#1
soot.util.NumberedString.setNumber(I)V#Put(I,NONSTATIC,Lsoot/util/NumberedString;,number)#2
soot.util.NumberedString.setNumber(I)V#Return(V)#3
soot.util.StringNumberer.findOrAdd(Ljava/lang/String;)Lsoot/util/NumberedString;#LocalLoad(Ljava/lang/Object;,2)#23
soot.util.StringNumberer.findOrAdd(Ljava/lang/String;)Lsoot/util/NumberedString;#Return(Ljava/lang/Object;)#24
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#Put(Lsoot/util/NumberedString;,NONSTATIC,Lsoot/SootMethod;,subsignature)#63
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;ILjava/util/List;)V#Return(V)#64
soot.SootMethod.<init>(Ljava/lang/String;Ljava/util/List;Lsoot/Type;I)V#Return(V)#7
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,14)#544
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,4)#545
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,14)#546
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/SootClass;,addMethod,(Lsoot/SootMethod;)V)#547
soot.SootClass.addMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.addMethod(Lsoot/SootMethod;)V#Constant(I,2)#1
soot.SootClass.addMethod(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/SootClass;,checkLevel,(I)V)#2
soot.SootClass.addMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.SootClass.addMethod(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,isDeclared,()Z)#4
soot.SootMethod.isDeclared()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethod.isDeclared()Z#Get(Z,NONSTATIC,Lsoot/SootMethod;,isDeclared)#1
soot.SootMethod.isDeclared()Z#Return(I)#2
soot.SootClass.addMethod(Lsoot/SootMethod;)V#Constant(I,0)#5
soot.SootClass.addMethod(Lsoot/SootMethod;)V#ConditionalBranch(I,eq,19)#6
soot.SootClass.addMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#19
soot.SootClass.addMethod(Lsoot/SootMethod;)V#Get(Lsoot/util/SmallNumberedMap;,NONSTATIC,Lsoot/SootClass;,subSigToMethods)#20
soot.SootClass.addMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#21
soot.SootClass.addMethod(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,getNumberedSubSignature,()Lsoot/util/NumberedString;)#22
soot.SootMethod.getNumberedSubSignature()Lsoot/util/NumberedString;#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethod.getNumberedSubSignature()Lsoot/util/NumberedString;#Get(Lsoot/util/NumberedString;,NONSTATIC,Lsoot/SootMethod;,subsignature)#1
soot.SootMethod.getNumberedSubSignature()Lsoot/util/NumberedString;#Return(Ljava/lang/Object;)#2
soot.SootClass.addMethod(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/util/SmallNumberedMap;,get,(Lsoot/util/Numberable;)Ljava/lang/Object;)#23
soot.util.SmallNumberedMap.get(Lsoot/util/Numberable;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.SmallNumberedMap.get(Lsoot/util/Numberable;)Ljava/lang/Object;#Get([Ljava/lang/Object;,NONSTATIC,Lsoot/util/SmallNumberedMap;,values)#1
soot.util.SmallNumberedMap.get(Lsoot/util/Numberable;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#2
soot.util.SmallNumberedMap.get(Lsoot/util/Numberable;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,1)#3
soot.util.SmallNumberedMap.get(Lsoot/util/Numberable;)Ljava/lang/Object;#Invoke(SPECIAL,Lsoot/util/SmallNumberedMap;,findPosition,(Lsoot/util/Numberable;)I)#4
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#LocalLoad(Ljava/lang/Object;,1)#0
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#Invoke(INTERFACE,Lsoot/util/Numberable;,getNumber,()I)#1
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#LocalStore(I,2)#2
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#LocalLoad(I,2)#3
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#Constant(I,0)#4
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#ConditionalBranch(I,ne,11)#5
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#LocalLoad(I,2)#11
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#LocalLoad(Ljava/lang/Object;,0)#12
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#Get([Lsoot/util/Numberable;,NONSTATIC,Lsoot/util/SmallNumberedMap;,array)#13
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#ArrayLength()#14
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#Constant(I,1)#15
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#BinaryOp(I,sub)#16
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#BinaryOp(I,and)#17
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#LocalStore(I,2)#18
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#LocalLoad(Ljava/lang/Object;,0)#19
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#Get([Lsoot/util/Numberable;,NONSTATIC,Lsoot/util/SmallNumberedMap;,array)#20
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#LocalLoad(I,2)#21
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#ArrayLoad(Ljava/lang/Object;)#22
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#LocalLoad(Ljava/lang/Object;,1)#23
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#ConditionalBranch(Ljava/lang/Object;,ne,27)#24
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#LocalLoad(Ljava/lang/Object;,0)#27
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#Get([Lsoot/util/Numberable;,NONSTATIC,Lsoot/util/SmallNumberedMap;,array)#28
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#LocalLoad(I,2)#29
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#ArrayLoad(Ljava/lang/Object;)#30
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#Constant(L;,null)#31
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#ConditionalBranch(Ljava/lang/Object;,ne,35)#32
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#LocalLoad(I,2)#33
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#Return(I)#34
soot.util.SmallNumberedMap.get(Lsoot/util/Numberable;)Ljava/lang/Object;#ArrayLoad(Ljava/lang/Object;)#5
soot.util.SmallNumberedMap.get(Lsoot/util/Numberable;)Ljava/lang/Object;#Return(Ljava/lang/Object;)#6
soot.SootClass.addMethod(Lsoot/SootMethod;)V#Constant(L;,null)#24
soot.SootClass.addMethod(Lsoot/SootMethod;)V#ConditionalBranch(Ljava/lang/Object;,eq,44)#25
soot.SootClass.addMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#44
soot.SootClass.addMethod(Lsoot/SootMethod;)V#Get(Lsoot/util/SmallNumberedMap;,NONSTATIC,Lsoot/SootClass;,subSigToMethods)#45
soot.SootClass.addMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#46
soot.SootClass.addMethod(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,getNumberedSubSignature,()Lsoot/util/NumberedString;)#47
soot.SootClass.addMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#48
soot.SootClass.addMethod(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/util/SmallNumberedMap;,put,(Lsoot/util/Numberable;Ljava/lang/Object;)Z)#49
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#1
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#Invoke(SPECIAL,Lsoot/util/SmallNumberedMap;,findPosition,(Lsoot/util/Numberable;)I)#2
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#LocalStore(I,3)#3
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#4
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#Get([Lsoot/util/Numberable;,NONSTATIC,Lsoot/util/SmallNumberedMap;,array)#5
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#LocalLoad(I,3)#6
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#ArrayLoad(Ljava/lang/Object;)#7
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#8
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,25)#9
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#25
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#Dup(1,0)#26
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#Get(I,NONSTATIC,Lsoot/util/SmallNumberedMap;,size)#27
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#Constant(I,1)#28
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#BinaryOp(I,add)#29
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#Put(I,NONSTATIC,Lsoot/util/SmallNumberedMap;,size)#30
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#31
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#Get(I,NONSTATIC,Lsoot/util/SmallNumberedMap;,size)#32
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#Constant(I,3)#33
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#BinaryOp(I,mul)#34
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#35
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#Get([Lsoot/util/Numberable;,NONSTATIC,Lsoot/util/SmallNumberedMap;,array)#36
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#ArrayLength()#37
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#Constant(I,2)#38
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#BinaryOp(I,mul)#39
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#ConditionalBranch(I,le,47)#40
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#47
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#Get([Lsoot/util/Numberable;,NONSTATIC,Lsoot/util/SmallNumberedMap;,array)#48
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#LocalLoad(I,3)#49
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#50
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#ArrayStore(Ljava/lang/Object;)#51
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#52
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#Get([Ljava/lang/Object;,NONSTATIC,Lsoot/util/SmallNumberedMap;,values)#53
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#LocalLoad(I,3)#54
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,2)#55
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#ArrayStore(Ljava/lang/Object;)#56
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#Constant(I,1)#57
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#Return(I)#58
soot.SootClass.addMethod(Lsoot/SootMethod;)V#Pop(1)#50
soot.SootClass.addMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#51
soot.SootClass.addMethod(Lsoot/SootMethod;)V#Get(Ljava/util/List;,NONSTATIC,Lsoot/SootClass;,methodList)#52
soot.SootClass.addMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#53
soot.SootClass.addMethod(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#54
soot.SootClass.addMethod(Lsoot/SootMethod;)V#Pop(1)#55
soot.SootClass.addMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#56
soot.SootClass.addMethod(Lsoot/SootMethod;)V#Constant(I,1)#57
soot.SootClass.addMethod(Lsoot/SootMethod;)V#Put(Z,NONSTATIC,Lsoot/SootMethod;,isDeclared)#58
soot.SootClass.addMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#59
soot.SootClass.addMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#60
soot.SootClass.addMethod(Lsoot/SootMethod;)V#Put(Lsoot/SootClass;,NONSTATIC,Lsoot/SootMethod;,declaringClass)#61
soot.SootClass.addMethod(Lsoot/SootMethod;)V#Return(V)#62
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#548
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,14)#549
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Put(Lsoot/SootMethod;,NONSTATIC,Lsoot/coffi/method_info;,jmethod)#550
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#551
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(I,15)#552
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Goto(780)#553
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,15)#780
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#781
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/method_info;,attributes_count)#782
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,lt,554)#783
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#554
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/method_info;,attributes)#555
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,15)#556
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#557
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Instanceof(Lsoot/coffi/Exception_attribute;)#558
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#559
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,eq,610)#560
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#610
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/method_info;,attributes)#611
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,15)#612
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#613
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Instanceof(Lsoot/coffi/Synthetic_attribute;)#614
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#615
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,eq,623)#616
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#623
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/method_info;,attributes)#624
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,15)#625
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#626
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Instanceof(Lsoot/coffi/Deprecated_attribute;)#627
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#628
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,eq,636)#629
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#636
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/method_info;,attributes)#637
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,15)#638
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#639
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Instanceof(Lsoot/coffi/Signature_attribute;)#640
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#641
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,eq,662)#642
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#662
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/method_info;,attributes)#663
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,15)#664
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#665
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Instanceof(Lsoot/coffi/RuntimeVisibleAnnotations_attribute;)#666
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#667
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,ne,676)#668
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#669
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/method_info;,attributes)#670
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,15)#671
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#672
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Instanceof(Lsoot/coffi/RuntimeInvisibleAnnotations_attribute;)#673
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#674
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,eq,686)#675
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#686
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/method_info;,attributes)#687
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,15)#688
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#689
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Instanceof(Lsoot/coffi/RuntimeVisibleParameterAnnotations_attribute;)#690
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#691
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,ne,700)#692
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#693
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/method_info;,attributes)#694
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,15)#695
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#696
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Instanceof(Lsoot/coffi/RuntimeInvisibleParameterAnnotations_attribute;)#697
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#698
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,eq,710)#699
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#710
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/method_info;,attributes)#711
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,15)#712
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#713
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Instanceof(Lsoot/coffi/AnnotationDefault_attribute;)#714
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#715
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,eq,747)#716
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#747
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/method_info;,attributes)#748
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,15)#749
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#750
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Instanceof(Lsoot/coffi/Generic_attribute;)#751
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#752
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,eq,776)#753
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,15)#776
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,1)#777
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#BinaryOp(I,add)#778
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(I,15)#779
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#784
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(I,15)#785
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Goto(884)#786
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,15)#884
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#885
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool_count)#886
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,lt,787)#887
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#787
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#788
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,15)#789
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#790
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Instanceof(Lsoot/coffi/CONSTANT_Class_info;)#791
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#792
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,eq,829)#793
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#829
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#830
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,15)#831
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#832
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Instanceof(Lsoot/coffi/CONSTANT_Fieldref_info;)#833
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#834
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,ne,850)#835
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#836
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#837
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,15)#838
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#839
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Instanceof(Lsoot/coffi/CONSTANT_Methodref_info;)#840
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#841
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,ne,850)#842
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#843
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#844
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,15)#845
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#846
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Instanceof(Lsoot/coffi/CONSTANT_InterfaceMethodref_info;)#847
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#848
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,eq,880)#849
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,15)#880
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,1)#881
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#BinaryOp(I,add)#882
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(I,15)#883
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#794
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#795
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,15)#796
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#797
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/CONSTANT_Class_info;)#798
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,16)#799
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#800
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#801
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,16)#802
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_Class_info;,name_index)#803
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#804
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/CONSTANT_Utf8_info;)#805
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,convert,()Ljava/lang/String;)#806
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,17)#807
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,17)#808
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,47)#809
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,46)#810
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Ljava/lang/String;,replace,(CC)Ljava/lang/String;)#811
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,18)#812
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,18)#813
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(Ljava/lang/String;,"[")#814
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Ljava/lang/String;,startsWith,(Ljava/lang/String;)Z)#815
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#816
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,eq,825)#817
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#825
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,18)#826
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#827
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Pop(1)#828
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#850
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#851
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#852
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,15)#853
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(STATIC,Lsoot/coffi/cp_info;,getTypeDescr,([Lsoot/coffi/cp_info;I)Ljava/lang/String;)#854
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#LocalLoad(I,1)#1
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#ArrayLoad(Ljava/lang/Object;)#2
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,2)#3
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#4
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#Instanceof(Lsoot/coffi/CONSTANT_Utf8_info;)#5
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#Constant(I,0)#6
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#ConditionalBranch(I,eq,12)#7
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#12
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#Instanceof(Lsoot/coffi/CONSTANT_NameAndType_info;)#13
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#Constant(I,0)#14
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#ConditionalBranch(I,eq,22)#15
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#22
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#Instanceof(Lsoot/coffi/CONSTANT_Methodref_info;)#23
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#Constant(I,0)#24
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#ConditionalBranch(I,eq,32)#25
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#26
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#27
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#CheckCast(Lsoot/coffi/CONSTANT_Methodref_info;)#28
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_Methodref_info;,name_and_type_index)#29
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#Invoke(STATIC,Lsoot/coffi/cp_info;,getTypeDescr,([Lsoot/coffi/cp_info;I)Ljava/lang/String;)#30
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#16
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#17
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#CheckCast(Lsoot/coffi/CONSTANT_NameAndType_info;)#18
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_NameAndType_info;,descriptor_index)#19
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#Invoke(STATIC,Lsoot/coffi/cp_info;,getTypeDescr,([Lsoot/coffi/cp_info;I)Ljava/lang/String;)#20
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#8
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#9
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#Invoke(VIRTUAL,Lsoot/coffi/cp_info;,toString,([Lsoot/coffi/cp_info;)Ljava/lang/String;)#10
soot.coffi.CONSTANT_Utf8_info.toString([Lsoot/coffi/cp_info;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.CONSTANT_Utf8_info.toString([Lsoot/coffi/cp_info;)Ljava/lang/String;#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,convert,()Ljava/lang/String;)#1
soot.coffi.CONSTANT_Utf8_info.toString([Lsoot/coffi/cp_info;)Ljava/lang/String;#Return(Ljava/lang/Object;)#2
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#Return(Ljava/lang/Object;)#11
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#Return(Ljava/lang/Object;)#21
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#Return(Ljava/lang/Object;)#31
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/coffi/Util;,jimpleTypesOfFieldOrMethodDescriptor,(Ljava/lang/String;)[Lsoot/Type;)#855
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(Ljava/lang/Object;,2)#9
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Return(Ljava/lang/Object;)#10
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,16)#856
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,16)#857
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Dup(1,0)#858
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,20)#859
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLength()#860
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(I,19)#861
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#862
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(I,18)#863
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Goto(877)#864
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,18)#877
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,19)#878
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,lt,865)#879
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,20)#865
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,18)#866
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#867
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,17)#868
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#869
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,17)#870
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#871
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Pop(1)#872
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,18)#873
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,1)#874
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#BinaryOp(I,add)#875
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(I,18)#876
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(I,4)#89
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Constant(I,1)#90
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#BinaryOp(I,add)#91
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(I,8)#92
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Goto(107)#93
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(I,8)#107
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(Ljava/lang/Object;,3)#108
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#ArrayLength()#109
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#ConditionalBranch(I,ge,116)#110
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(Ljava/lang/Object;,3)#111
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(I,8)#112
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#ArrayLoad(C)#113
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Constant(I,59)#114
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#ConditionalBranch(I,ne,94)#115
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(Ljava/lang/Object;,3)#94
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(I,8)#95
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#ArrayLoad(C)#96
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Constant(I,47)#97
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#ConditionalBranch(I,ne,103)#98
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(I,8)#103
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Constant(I,1)#104
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#BinaryOp(I,add)#105
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(I,8)#106
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(Ljava/lang/Object;,3)#99
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(I,8)#100
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Constant(I,46)#101
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#ArrayStore(C)#102
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(I,8)#116
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(Ljava/lang/Object;,3)#117
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#ArrayLength()#118
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#ConditionalBranch(I,lt,125)#119
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#New(Ljava/lang/String;,0)#125
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Dup(1,0)#126
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(Ljava/lang/Object;,3)#127
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(I,4)#128
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Constant(I,1)#129
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#BinaryOp(I,add)#130
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(I,8)#131
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(I,4)#132
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#BinaryOp(I,sub)#133
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Constant(I,1)#134
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#BinaryOp(I,sub)#135
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Invoke(SPECIAL,Ljava/lang/String;,<init>,([CII)V)#136
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(Ljava/lang/Object;,9)#137
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(Ljava/lang/Object;,9)#138
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Invoke(STATIC,Lsoot/RefType;,v,(Ljava/lang/String;)Lsoot/RefType;)#139
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(Ljava/lang/Object;,7)#140
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(I,8)#141
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Constant(I,1)#142
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#BinaryOp(I,add)#143
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(I,4)#144
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Goto(176)#145
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,7)#888
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,1)#889
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#BinaryOp(I,add)#890
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(I,7)#891
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#501
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,13)#502
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,14)#503
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#504
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#505
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Pop(1)#506
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,11)#507
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,13)#508
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,14)#509
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#510
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#511
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Pop(1)#512
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,14)#513
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,1)#514
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#BinaryOp(I,add)#515
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(I,14)#516
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,5)#31
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#32
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#CheckCast(Lsoot/Type;)#33
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,4)#34
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#35
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,4)#36
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(Ljava/lang/Object;)Ljava/lang/StringBuffer;)#37
soot.RefType.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.RefType.toString()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsoot/RefType;,className)#1
soot.RefType.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Pop(1)#38
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Goto(52)#39
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,5)#52
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#53
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Constant(I,0)#54
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#ConditionalBranch(I,ne,40)#55
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#896
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(I,7)#897
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Goto(916)#898
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,7)#916
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#917
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/ClassFile;,methods_count)#918
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,lt,899)#919
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#899
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/method_info;,NONSTATIC,Lsoot/coffi/ClassFile;,methods)#900
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,7)#901
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#902
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,8)#903
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#904
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(Lsoot/SootMethod;,NONSTATIC,Lsoot/coffi/method_info;,jmethod)#905
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#New(Lsoot/coffi/CoffiMethodSource;,0)#906
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Dup(1,0)#907
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#908
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#909
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(SPECIAL,Lsoot/coffi/CoffiMethodSource;,<init>,(Lsoot/coffi/ClassFile;Lsoot/coffi/method_info;)V)#910
soot.coffi.CoffiMethodSource.<init>(Lsoot/coffi/ClassFile;Lsoot/coffi/method_info;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.CoffiMethodSource.<init>(Lsoot/coffi/ClassFile;Lsoot/coffi/method_info;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.coffi.CoffiMethodSource.<init>(Lsoot/coffi/ClassFile;Lsoot/coffi/method_info;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.coffi.CoffiMethodSource.<init>(Lsoot/coffi/ClassFile;Lsoot/coffi/method_info;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.coffi.CoffiMethodSource.<init>(Lsoot/coffi/ClassFile;Lsoot/coffi/method_info;)V#Put(Lsoot/coffi/ClassFile;,NONSTATIC,Lsoot/coffi/CoffiMethodSource;,coffiClass)#4
soot.coffi.CoffiMethodSource.<init>(Lsoot/coffi/ClassFile;Lsoot/coffi/method_info;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.coffi.CoffiMethodSource.<init>(Lsoot/coffi/ClassFile;Lsoot/coffi/method_info;)V#LocalLoad(Ljava/lang/Object;,2)#6
soot.coffi.CoffiMethodSource.<init>(Lsoot/coffi/ClassFile;Lsoot/coffi/method_info;)V#Put(Lsoot/coffi/method_info;,NONSTATIC,Lsoot/coffi/CoffiMethodSource;,coffiMethod)#7
soot.coffi.CoffiMethodSource.<init>(Lsoot/coffi/ClassFile;Lsoot/coffi/method_info;)V#Return(V)#8
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,setSource,(Lsoot/MethodSource;)V)#911
soot.SootMethod.setSource(Lsoot/MethodSource;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethod.setSource(Lsoot/MethodSource;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.SootMethod.setSource(Lsoot/MethodSource;)V#Put(Lsoot/MethodSource;,NONSTATIC,Lsoot/SootMethod;,ms)#2
soot.SootMethod.setSource(Lsoot/MethodSource;)V#Return(V)#3
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,7)#912
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,1)#913
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#BinaryOp(I,add)#914
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(I,7)#915
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#920
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(I,7)#921
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Goto(1235)#922
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,7)#1235
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#1236
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/ClassFile;,attributes_count)#1237
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,lt,923)#1238
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#923
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/ClassFile;,attributes)#924
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,7)#925
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#926
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Instanceof(Lsoot/coffi/SourceFile_attribute;)#927
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#928
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,eq,969)#929
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#930
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/ClassFile;,attributes)#931
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,7)#932
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#933
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/SourceFile_attribute;)#934
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,8)#935
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#936
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#937
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#938
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/SourceFile_attribute;,sourcefile_index)#939
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#940
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/CONSTANT_Utf8_info;)#941
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,convert,()Ljava/lang/String;)#942
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,9)#943
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,9)#944
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,32)#945
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Ljava/lang/String;,indexOf,(I)I)#946
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#947
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,lt,962)#948
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,4)#962
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#New(Lsoot/tagkit/SourceFileTag;,0)#963
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Dup(1,0)#964
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,9)#965
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(SPECIAL,Lsoot/tagkit/SourceFileTag;,<init>,(Ljava/lang/String;)V)#966
soot.tagkit.SourceFileTag.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.tagkit.SourceFileTag.<init>(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.tagkit.SourceFileTag.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.tagkit.SourceFileTag.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.tagkit.SourceFileTag.<init>(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/tagkit/SourceFileTag;,sourceFile)#4
soot.tagkit.SourceFileTag.<init>(Ljava/lang/String;)V#Return(V)#5
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/SootClass;,addTag,(Lsoot/tagkit/Tag;)V)#967
soot.tagkit.AbstractHost.addTag(Lsoot/tagkit/Tag;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.tagkit.AbstractHost.addTag(Lsoot/tagkit/Tag;)V#Get(Ljava/util/List;,NONSTATIC,Lsoot/tagkit/AbstractHost;,mTagList)#1
soot.tagkit.AbstractHost.addTag(Lsoot/tagkit/Tag;)V#Get(Ljava/util/List;,STATIC,Lsoot/tagkit/AbstractHost;,emptyList)#2
soot.tagkit.AbstractHost.addTag(Lsoot/tagkit/Tag;)V#ConditionalBranch(Ljava/lang/Object;,ne,10)#3
soot.tagkit.AbstractHost.addTag(Lsoot/tagkit/Tag;)V#LocalLoad(Ljava/lang/Object;,0)#4
soot.tagkit.AbstractHost.addTag(Lsoot/tagkit/Tag;)V#New(Ljava/util/ArrayList;,0)#5
soot.tagkit.AbstractHost.addTag(Lsoot/tagkit/Tag;)V#Dup(1,0)#6
soot.tagkit.AbstractHost.addTag(Lsoot/tagkit/Tag;)V#Constant(I,1)#7
soot.tagkit.AbstractHost.addTag(Lsoot/tagkit/Tag;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,(I)V)#8
soot.tagkit.AbstractHost.addTag(Lsoot/tagkit/Tag;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/tagkit/AbstractHost;,mTagList)#9
soot.tagkit.AbstractHost.addTag(Lsoot/tagkit/Tag;)V#LocalLoad(Ljava/lang/Object;,0)#10
soot.tagkit.AbstractHost.addTag(Lsoot/tagkit/Tag;)V#Get(Ljava/util/List;,NONSTATIC,Lsoot/tagkit/AbstractHost;,mTagList)#11
soot.tagkit.AbstractHost.addTag(Lsoot/tagkit/Tag;)V#LocalLoad(Ljava/lang/Object;,1)#12
soot.tagkit.AbstractHost.addTag(Lsoot/tagkit/Tag;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#13
soot.tagkit.AbstractHost.addTag(Lsoot/tagkit/Tag;)V#Pop(1)#14
soot.tagkit.AbstractHost.addTag(Lsoot/tagkit/Tag;)V#Return(V)#15
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Goto(1231)#968
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,7)#1231
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,1)#1232
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#BinaryOp(I,add)#1233
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(I,7)#1234
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Return(V)#1239
soot.CoffiClassSource.resolve(Lsoot/SootClass;)Lsoot/javaToJimple/IInitialResolver$Dependencies;#LocalLoad(Ljava/lang/Object;,0)#25
soot.CoffiClassSource.resolve(Lsoot/SootClass;)Lsoot/javaToJimple/IInitialResolver$Dependencies;#Get(Ljava/io/InputStream;,NONSTATIC,Lsoot/CoffiClassSource;,classFile)#26
soot.CoffiClassSource.resolve(Lsoot/SootClass;)Lsoot/javaToJimple/IInitialResolver$Dependencies;#Invoke(VIRTUAL,Ljava/io/InputStream;,close,()V)#27
soot.CoffiClassSource.resolve(Lsoot/SootClass;)Lsoot/javaToJimple/IInitialResolver$Dependencies;#Goto(35)#28
soot.CoffiClassSource.resolve(Lsoot/SootClass;)Lsoot/javaToJimple/IInitialResolver$Dependencies;#New(Lsoot/javaToJimple/IInitialResolver$Dependencies;,0)#35
soot.CoffiClassSource.resolve(Lsoot/SootClass;)Lsoot/javaToJimple/IInitialResolver$Dependencies;#Dup(1,0)#36
soot.CoffiClassSource.resolve(Lsoot/SootClass;)Lsoot/javaToJimple/IInitialResolver$Dependencies;#Invoke(SPECIAL,Lsoot/javaToJimple/IInitialResolver$Dependencies;,<init>,()V)#37
soot.javaToJimple.IInitialResolver$Dependencies.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.javaToJimple.IInitialResolver$Dependencies.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.javaToJimple.IInitialResolver$Dependencies.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
soot.javaToJimple.IInitialResolver$Dependencies.<init>()V#New(Ljava/util/HashSet;,0)#3
soot.javaToJimple.IInitialResolver$Dependencies.<init>()V#Dup(1,0)#4
soot.javaToJimple.IInitialResolver$Dependencies.<init>()V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#5
soot.javaToJimple.IInitialResolver$Dependencies.<init>()V#Put(Ljava/util/Set;,NONSTATIC,Lsoot/javaToJimple/IInitialResolver$Dependencies;,typesToHierarchy)#6
soot.javaToJimple.IInitialResolver$Dependencies.<init>()V#LocalLoad(Ljava/lang/Object;,0)#7
soot.javaToJimple.IInitialResolver$Dependencies.<init>()V#New(Ljava/util/HashSet;,0)#8
soot.javaToJimple.IInitialResolver$Dependencies.<init>()V#Dup(1,0)#9
soot.javaToJimple.IInitialResolver$Dependencies.<init>()V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#10
soot.javaToJimple.IInitialResolver$Dependencies.<init>()V#Put(Ljava/util/Set;,NONSTATIC,Lsoot/javaToJimple/IInitialResolver$Dependencies;,typesToSignature)#11
soot.javaToJimple.IInitialResolver$Dependencies.<init>()V#Return(V)#12
soot.CoffiClassSource.resolve(Lsoot/SootClass;)Lsoot/javaToJimple/IInitialResolver$Dependencies;#LocalStore(Ljava/lang/Object;,3)#38
soot.CoffiClassSource.resolve(Lsoot/SootClass;)Lsoot/javaToJimple/IInitialResolver$Dependencies;#LocalLoad(Ljava/lang/Object;,3)#39
soot.CoffiClassSource.resolve(Lsoot/SootClass;)Lsoot/javaToJimple/IInitialResolver$Dependencies;#Get(Ljava/util/Set;,NONSTATIC,Lsoot/javaToJimple/IInitialResolver$Dependencies;,typesToSignature)#40
soot.CoffiClassSource.resolve(Lsoot/SootClass;)Lsoot/javaToJimple/IInitialResolver$Dependencies;#LocalLoad(Ljava/lang/Object;,2)#41
soot.CoffiClassSource.resolve(Lsoot/SootClass;)Lsoot/javaToJimple/IInitialResolver$Dependencies;#Invoke(INTERFACE,Ljava/util/Set;,addAll,(Ljava/util/Collection;)Z)#42
soot.VoidType.hashCode()I#Constant(I,982257717)#0
soot.VoidType.hashCode()I#Return(I)#1
soot.RefType.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.RefType.hashCode()I#Get(Ljava/lang/String;,NONSTATIC,Lsoot/RefType;,className)#1
soot.RefType.hashCode()I#Invoke(VIRTUAL,Ljava/lang/String;,hashCode,()I)#2
soot.RefType.hashCode()I#Return(I)#3
soot.CoffiClassSource.resolve(Lsoot/SootClass;)Lsoot/javaToJimple/IInitialResolver$Dependencies;#Pop(1)#43
soot.CoffiClassSource.resolve(Lsoot/SootClass;)Lsoot/javaToJimple/IInitialResolver$Dependencies;#LocalLoad(Ljava/lang/Object;,3)#44
soot.CoffiClassSource.resolve(Lsoot/SootClass;)Lsoot/javaToJimple/IInitialResolver$Dependencies;#Return(Ljava/lang/Object;)#45
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,5)#109
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#110
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/SootResolver;,classToTypesSignature)#111
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#112
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#New(Ljava/util/ArrayList;,0)#113
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#Dup(1,0)#114
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,5)#115
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#Get(Ljava/util/Set;,NONSTATIC,Lsoot/javaToJimple/IInitialResolver$Dependencies;,typesToSignature)#116
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,(Ljava/util/Collection;)V)#117
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#118
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#Pop(1)#119
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#120
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/SootResolver;,classToTypesHierarchy)#121
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#122
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#New(Ljava/util/ArrayList;,0)#123
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#Dup(1,0)#124
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,5)#125
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#Get(Ljava/util/Set;,NONSTATIC,Lsoot/javaToJimple/IInitialResolver$Dependencies;,typesToHierarchy)#126
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,(Ljava/util/Collection;)V)#127
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#128
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#Pop(1)#129
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#130
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#131
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootResolver;,reResolveHierarchy,(Lsoot/SootClass;)V)#132
soot.SootResolver.reResolveHierarchy(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.SootResolver.reResolveHierarchy(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,hasSuperclass,()Z)#1
soot.SootClass.hasSuperclass()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.hasSuperclass()Z#Constant(I,1)#1
soot.SootClass.hasSuperclass()Z#Invoke(VIRTUAL,Lsoot/SootClass;,checkLevel,(I)V)#2
soot.SootClass.hasSuperclass()Z#LocalLoad(Ljava/lang/Object;,0)#3
soot.SootClass.hasSuperclass()Z#Get(Lsoot/SootClass;,NONSTATIC,Lsoot/SootClass;,superClass)#4
soot.SootClass.hasSuperclass()Z#Constant(L;,null)#5
soot.SootClass.hasSuperclass()Z#ConditionalBranch(Ljava/lang/Object;,eq,9)#6
soot.SootClass.hasSuperclass()Z#Constant(I,1)#7
soot.SootClass.hasSuperclass()Z#Return(I)#8
soot.SootResolver.reResolveHierarchy(Lsoot/SootClass;)V#Constant(I,0)#2
soot.SootResolver.reResolveHierarchy(Lsoot/SootClass;)V#ConditionalBranch(I,eq,9)#3
soot.SootResolver.reResolveHierarchy(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#4
soot.SootResolver.reResolveHierarchy(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#5
soot.SootResolver.reResolveHierarchy(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getSuperclass,()Lsoot/SootClass;)#6
soot.SootClass.getSuperclass()Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.getSuperclass()Lsoot/SootClass;#Constant(I,1)#1
soot.SootClass.getSuperclass()Lsoot/SootClass;#Invoke(VIRTUAL,Lsoot/SootClass;,checkLevel,(I)V)#2
soot.SootClass.getSuperclass()Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,0)#3
soot.SootClass.getSuperclass()Lsoot/SootClass;#Get(Lsoot/SootClass;,NONSTATIC,Lsoot/SootClass;,superClass)#4
soot.SootClass.getSuperclass()Lsoot/SootClass;#Constant(L;,null)#5
soot.SootClass.getSuperclass()Lsoot/SootClass;#ConditionalBranch(Ljava/lang/Object;,ne,23)#6
soot.SootClass.getSuperclass()Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,0)#23
soot.SootClass.getSuperclass()Lsoot/SootClass;#Get(Lsoot/SootClass;,NONSTATIC,Lsoot/SootClass;,superClass)#24
soot.SootClass.getSuperclass()Lsoot/SootClass;#Return(Ljava/lang/Object;)#25
soot.SootResolver.reResolveHierarchy(Lsoot/SootClass;)V#Constant(I,1)#7
soot.SootResolver.reResolveHierarchy(Lsoot/SootClass;)V#Invoke(SPECIAL,Lsoot/SootResolver;,addToResolveWorklist,(Lsoot/SootClass;I)V)#8
soot.SootResolver.reResolveHierarchy(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#9
soot.SootResolver.reResolveHierarchy(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,hasOuterClass,()Z)#10
soot.SootClass.hasOuterClass()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.hasOuterClass()Z#Constant(I,1)#1
soot.SootClass.hasOuterClass()Z#Invoke(VIRTUAL,Lsoot/SootClass;,checkLevel,(I)V)#2
soot.SootClass.hasOuterClass()Z#LocalLoad(Ljava/lang/Object;,0)#3
soot.SootClass.hasOuterClass()Z#Get(Lsoot/SootClass;,NONSTATIC,Lsoot/SootClass;,outerClass)#4
soot.SootClass.hasOuterClass()Z#Constant(L;,null)#5
soot.SootClass.hasOuterClass()Z#ConditionalBranch(Ljava/lang/Object;,eq,9)#6
soot.SootClass.hasOuterClass()Z#Constant(I,0)#9
soot.SootClass.hasOuterClass()Z#Return(I)#10
soot.SootResolver.reResolveHierarchy(Lsoot/SootClass;)V#Constant(I,0)#11
soot.SootResolver.reResolveHierarchy(Lsoot/SootClass;)V#ConditionalBranch(I,eq,18)#12
soot.SootResolver.reResolveHierarchy(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#18
soot.SootResolver.reResolveHierarchy(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getInterfaces,()Lsoot/util/Chain;)#19
soot.SootClass.getInterfaces()Lsoot/util/Chain;#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.getInterfaces()Lsoot/util/Chain;#Constant(I,1)#1
soot.SootClass.getInterfaces()Lsoot/util/Chain;#Invoke(VIRTUAL,Lsoot/SootClass;,checkLevel,(I)V)#2
soot.SootClass.getInterfaces()Lsoot/util/Chain;#LocalLoad(Ljava/lang/Object;,0)#3
soot.SootClass.getInterfaces()Lsoot/util/Chain;#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/SootClass;,interfaces)#4
soot.SootClass.getInterfaces()Lsoot/util/Chain;#Return(Ljava/lang/Object;)#5
soot.SootResolver.reResolveHierarchy(Lsoot/SootClass;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#20
soot.SootResolver.reResolveHierarchy(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,2)#21
soot.SootResolver.reResolveHierarchy(Lsoot/SootClass;)V#Goto(31)#22
soot.SootResolver.reResolveHierarchy(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,2)#31
soot.SootResolver.reResolveHierarchy(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#32
soot.SootResolver.reResolveHierarchy(Lsoot/SootClass;)V#Constant(I,0)#33
soot.SootResolver.reResolveHierarchy(Lsoot/SootClass;)V#ConditionalBranch(I,ne,23)#34
soot.SootResolver.reResolveHierarchy(Lsoot/SootClass;)V#Return(V)#35
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#Return(V)#133
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#8
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/options/Options;,debug_resolver,()Z)#9
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Constant(I,0)#10
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#ConditionalBranch(I,eq,22)#11
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#22
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Constant(I,2)#23
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,setResolvingLevel,(I)V)#24
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#25
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getFields,()Lsoot/util/Chain;)#26
soot.SootClass.getFields()Lsoot/util/Chain;#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.getFields()Lsoot/util/Chain;#Constant(I,2)#1
soot.SootClass.getFields()Lsoot/util/Chain;#Invoke(VIRTUAL,Lsoot/SootClass;,checkLevel,(I)V)#2
soot.SootClass.getFields()Lsoot/util/Chain;#LocalLoad(Ljava/lang/Object;,0)#3
soot.SootClass.getFields()Lsoot/util/Chain;#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/SootClass;,fields)#4
soot.SootClass.getFields()Lsoot/util/Chain;#Return(Ljava/lang/Object;)#5
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#27
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,2)#28
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Goto(39)#29
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,2)#39
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#40
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Constant(I,0)#41
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#ConditionalBranch(I,ne,30)#42
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#43
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getMethods,()Ljava/util/List;)#44
soot.SootClass.getMethods()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.getMethods()Ljava/util/List;#Constant(I,2)#1
soot.SootClass.getMethods()Ljava/util/List;#Invoke(VIRTUAL,Lsoot/SootClass;,checkLevel,(I)V)#2
soot.SootClass.getMethods()Ljava/util/List;#New(Ljava/util/ArrayList;,0)#3
soot.SootClass.getMethods()Ljava/util/List;#Dup(1,0)#4
soot.SootClass.getMethods()Ljava/util/List;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#5
soot.SootClass.getMethods()Ljava/util/List;#LocalStore(Ljava/lang/Object;,1)#6
soot.SootClass.getMethods()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#7
soot.SootClass.getMethods()Ljava/util/List;#Invoke(VIRTUAL,Lsoot/SootClass;,methodIterator,()Ljava/util/Iterator;)#8
soot.SootClass.methodIterator()Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.methodIterator()Ljava/util/Iterator;#Constant(I,2)#1
soot.SootClass.methodIterator()Ljava/util/Iterator;#Invoke(VIRTUAL,Lsoot/SootClass;,checkLevel,(I)V)#2
soot.SootClass.methodIterator()Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#3
soot.SootClass.methodIterator()Ljava/util/Iterator;#Get(Ljava/util/List;,NONSTATIC,Lsoot/SootClass;,methodList)#4
soot.SootClass.methodIterator()Ljava/util/Iterator;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#5
soot.SootClass.methodIterator()Ljava/util/Iterator;#Return(Ljava/lang/Object;)#6
soot.SootClass.getMethods()Ljava/util/List;#LocalStore(Ljava/lang/Object;,2)#9
soot.SootClass.getMethods()Ljava/util/List;#Goto(17)#10
soot.SootClass.getMethods()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#17
soot.SootClass.getMethods()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#18
soot.SootClass.getMethods()Ljava/util/List;#Constant(I,0)#19
soot.SootClass.getMethods()Ljava/util/List;#ConditionalBranch(I,ne,11)#20
soot.SootClass.getMethods()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#11
soot.SootClass.getMethods()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#12
soot.SootClass.getMethods()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#13
soot.SootClass.getMethods()Ljava/util/List;#CheckCast(Lsoot/SootMethod;)#14
soot.SootClass.getMethods()Ljava/util/List;#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#15
soot.SootClass.getMethods()Ljava/util/List;#Pop(1)#16
soot.SootClass.getMethods()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#21
soot.SootClass.getMethods()Ljava/util/List;#Return(Ljava/lang/Object;)#22
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#45
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,2)#46
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Goto(91)#47
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,2)#91
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#92
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Constant(I,0)#93
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#ConditionalBranch(I,ne,48)#94
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,2)#48
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#49
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#CheckCast(Lsoot/SootMethod;)#50
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,3)#51
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#52
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,3)#53
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,getReturnType,()Lsoot/Type;)#54
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Constant(I,1)#55
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(SPECIAL,Lsoot/SootResolver;,addToResolveWorklist,(Lsoot/Type;I)V)#56
soot.SootResolver.addToResolveWorklist(Lsoot/Type;I)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.SootResolver.addToResolveWorklist(Lsoot/Type;I)V#Instanceof(Lsoot/RefType;)#1
soot.SootResolver.addToResolveWorklist(Lsoot/Type;I)V#Constant(I,0)#2
soot.SootResolver.addToResolveWorklist(Lsoot/Type;I)V#ConditionalBranch(I,eq,11)#3
soot.SootResolver.addToResolveWorklist(Lsoot/Type;I)V#LocalLoad(Ljava/lang/Object;,1)#11
soot.SootResolver.addToResolveWorklist(Lsoot/Type;I)V#Instanceof(Lsoot/ArrayType;)#12
soot.SootResolver.addToResolveWorklist(Lsoot/Type;I)V#Constant(I,0)#13
soot.SootResolver.addToResolveWorklist(Lsoot/Type;I)V#ConditionalBranch(I,eq,21)#14
soot.SootResolver.addToResolveWorklist(Lsoot/Type;I)V#Return(V)#21
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,3)#57
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,getParameterTypes,()Ljava/util/List;)#58
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#59
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,4)#60
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Goto(70)#61
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,4)#70
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#71
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Constant(I,0)#72
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#ConditionalBranch(I,ne,62)#73
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,3)#74
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,getExceptions,()Ljava/util/List;)#75
soot.SootMethod.getExceptions()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethod.getExceptions()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lsoot/SootMethod;,exceptions)#1
soot.SootMethod.getExceptions()Ljava/util/List;#Constant(L;,null)#2
soot.SootMethod.getExceptions()Ljava/util/List;#ConditionalBranch(Ljava/lang/Object;,ne,9)#3
soot.SootMethod.getExceptions()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#4
soot.SootMethod.getExceptions()Ljava/util/List;#New(Ljava/util/ArrayList;,0)#5
soot.SootMethod.getExceptions()Ljava/util/List;#Dup(1,0)#6
soot.SootMethod.getExceptions()Ljava/util/List;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#7
soot.SootMethod.getExceptions()Ljava/util/List;#Put(Ljava/util/List;,NONSTATIC,Lsoot/SootMethod;,exceptions)#8
soot.SootMethod.getExceptions()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#9
soot.SootMethod.getExceptions()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lsoot/SootMethod;,exceptions)#10
soot.SootMethod.getExceptions()Ljava/util/List;#Return(Ljava/lang/Object;)#11
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#76
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,5)#77
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Goto(87)#78
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,5)#87
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#88
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Constant(I,0)#89
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#ConditionalBranch(I,ne,79)#90
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,4)#62
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#63
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#CheckCast(Lsoot/Type;)#64
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,5)#65
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#66
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,5)#67
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Constant(I,1)#68
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(SPECIAL,Lsoot/SootResolver;,addToResolveWorklist,(Lsoot/Type;I)V)#69
soot.SootResolver.addToResolveWorklist(Lsoot/Type;I)V#LocalLoad(Ljava/lang/Object;,0)#4
soot.SootResolver.addToResolveWorklist(Lsoot/Type;I)V#LocalLoad(Ljava/lang/Object;,1)#5
soot.SootResolver.addToResolveWorklist(Lsoot/Type;I)V#CheckCast(Lsoot/RefType;)#6
soot.SootResolver.addToResolveWorklist(Lsoot/Type;I)V#Invoke(VIRTUAL,Lsoot/RefType;,getClassName,()Ljava/lang/String;)#7
soot.SootResolver.addToResolveWorklist(Lsoot/Type;I)V#LocalLoad(I,2)#8
soot.SootResolver.addToResolveWorklist(Lsoot/Type;I)V#Invoke(SPECIAL,Lsoot/SootResolver;,addToResolveWorklist,(Ljava/lang/String;I)V)#9
soot.SootResolver.addToResolveWorklist(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootResolver.addToResolveWorklist(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#1
soot.SootResolver.addToResolveWorklist(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.SootResolver.addToResolveWorklist(Ljava/lang/String;I)V#Invoke(VIRTUAL,Lsoot/SootResolver;,makeClassRef,(Ljava/lang/String;)Lsoot/SootClass;)#3
soot.RefType.hasSootClass()Z#Constant(I,0)#6
soot.RefType.hasSootClass()Z#Return(I)#7
soot.Scene.containsClass(Ljava/lang/String;)Z#Constant(I,0)#15
soot.Scene.containsClass(Ljava/lang/String;)Z#Return(I)#16
soot.RefType.v(Ljava/lang/String;)Lsoot/RefType;#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#5
soot.RefType.v(Ljava/lang/String;)Lsoot/RefType;#LocalLoad(Ljava/lang/Object;,0)#6
soot.RefType.v(Ljava/lang/String;)Lsoot/RefType;#Invoke(VIRTUAL,Lsoot/Scene;,getRefType,(Ljava/lang/String;)Lsoot/RefType;)#7
soot.Scene.getRefType(Ljava/lang/String;)Lsoot/RefType;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.getRefType(Ljava/lang/String;)Lsoot/RefType;#Get(Ljava/util/Map;,NONSTATIC,Lsoot/Scene;,nameToClass)#1
soot.Scene.getRefType(Ljava/lang/String;)Lsoot/RefType;#LocalLoad(Ljava/lang/Object;,1)#2
soot.Scene.getRefType(Ljava/lang/String;)Lsoot/RefType;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
soot.Scene.getRefType(Ljava/lang/String;)Lsoot/RefType;#CheckCast(Lsoot/RefType;)#4
soot.Scene.getRefType(Ljava/lang/String;)Lsoot/RefType;#LocalStore(Ljava/lang/Object;,2)#5
soot.Scene.getRefType(Ljava/lang/String;)Lsoot/RefType;#LocalLoad(Ljava/lang/Object;,2)#6
soot.Scene.getRefType(Ljava/lang/String;)Lsoot/RefType;#Constant(L;,null)#7
soot.Scene.getRefType(Ljava/lang/String;)Lsoot/RefType;#ConditionalBranch(Ljava/lang/Object;,ne,26)#8
soot.Scene.getRefType(Ljava/lang/String;)Lsoot/RefType;#LocalLoad(Ljava/lang/Object;,2)#26
soot.Scene.getRefType(Ljava/lang/String;)Lsoot/RefType;#Return(Ljava/lang/Object;)#27
soot.RefType.v(Ljava/lang/String;)Lsoot/RefType;#Return(Ljava/lang/Object;)#8
soot.SootResolver.addToResolveWorklist(Ljava/lang/String;I)V#LocalLoad(I,2)#4
soot.SootResolver.addToResolveWorklist(Ljava/lang/String;I)V#Invoke(SPECIAL,Lsoot/SootResolver;,addToResolveWorklist,(Lsoot/SootClass;I)V)#5
soot.SootResolver.addToResolveWorklist(Ljava/lang/String;I)V#Return(V)#6
soot.SootResolver.addToResolveWorklist(Lsoot/Type;I)V#Goto(21)#10
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#95
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,hasSuperclass,()Z)#96
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Constant(I,0)#97
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#ConditionalBranch(I,eq,104)#98
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#99
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#100
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getSuperclass,()Lsoot/SootClass;)#101
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Constant(I,2)#102
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(SPECIAL,Lsoot/SootResolver;,addToResolveWorklist,(Lsoot/SootClass;I)V)#103
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#104
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getInterfaces,()Lsoot/util/Chain;)#105
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#106
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,2)#107
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Goto(117)#108
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,2)#117
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#118
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Constant(I,0)#119
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#ConditionalBranch(I,ne,109)#120
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Return(V)#121
soot.SootResolver.processResolveWorklist()V#Goto(100)#96
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#LocalLoad(Ljava/lang/Object;,0)#18
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#Get(Ljava/util/HashMap;,NONSTATIC,Lsoot/coffi/CONSTANT_Utf8_collector;,hash)#19
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#LocalLoad(Ljava/lang/Object;,2)#20
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#Invoke(VIRTUAL,Ljava/util/HashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#21
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#CheckCast(Lsoot/coffi/CONSTANT_Utf8_info;)#22
soot.coffi.CONSTANT_Utf8_collector.add(Lsoot/coffi/CONSTANT_Utf8_info;)Lsoot/coffi/CONSTANT_Utf8_info;#Return(Ljava/lang/Object;)#23
soot.SootResolver.makeClassRef(Ljava/lang/String;)Lsoot/SootClass;#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#5
soot.SootResolver.makeClassRef(Ljava/lang/String;)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,1)#6
soot.SootResolver.makeClassRef(Ljava/lang/String;)Lsoot/SootClass;#Invoke(VIRTUAL,Lsoot/Scene;,getSootClass,(Ljava/lang/String;)Lsoot/SootClass;)#7
soot.Scene.getSootClass(Ljava/lang/String;)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.getSootClass(Ljava/lang/String;)Lsoot/SootClass;#Get(Ljava/util/Map;,NONSTATIC,Lsoot/Scene;,nameToClass)#1
soot.Scene.getSootClass(Ljava/lang/String;)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,1)#2
soot.Scene.getSootClass(Ljava/lang/String;)Lsoot/SootClass;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
soot.Scene.getSootClass(Ljava/lang/String;)Lsoot/SootClass;#CheckCast(Lsoot/RefType;)#4
soot.Scene.getSootClass(Ljava/lang/String;)Lsoot/SootClass;#LocalStore(Ljava/lang/Object;,2)#5
soot.Scene.getSootClass(Ljava/lang/String;)Lsoot/SootClass;#Constant(L;,null)#6
soot.Scene.getSootClass(Ljava/lang/String;)Lsoot/SootClass;#LocalStore(Ljava/lang/Object;,3)#7
soot.Scene.getSootClass(Ljava/lang/String;)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,2)#8
soot.Scene.getSootClass(Ljava/lang/String;)Lsoot/SootClass;#Constant(L;,null)#9
soot.Scene.getSootClass(Ljava/lang/String;)Lsoot/SootClass;#ConditionalBranch(Ljava/lang/Object;,eq,14)#10
soot.Scene.getSootClass(Ljava/lang/String;)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,2)#11
soot.Scene.getSootClass(Ljava/lang/String;)Lsoot/SootClass;#Invoke(VIRTUAL,Lsoot/RefType;,getSootClass,()Lsoot/SootClass;)#12
soot.Scene.getSootClass(Ljava/lang/String;)Lsoot/SootClass;#LocalStore(Ljava/lang/Object;,3)#13
soot.Scene.getSootClass(Ljava/lang/String;)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,3)#14
soot.Scene.getSootClass(Ljava/lang/String;)Lsoot/SootClass;#Constant(L;,null)#15
soot.Scene.getSootClass(Ljava/lang/String;)Lsoot/SootClass;#ConditionalBranch(Ljava/lang/Object;,eq,19)#16
soot.Scene.getSootClass(Ljava/lang/String;)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,3)#17
soot.Scene.getSootClass(Ljava/lang/String;)Lsoot/SootClass;#Return(Ljava/lang/Object;)#18
soot.SootResolver.makeClassRef(Ljava/lang/String;)Lsoot/SootClass;#Return(Ljava/lang/Object;)#8
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#New(Lsoot/coffi/CONSTANT_Long_info;,0)#229
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Dup(1,0)#230
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Invoke(SPECIAL,Lsoot/coffi/CONSTANT_Long_info;,<init>,()V)#231
soot.coffi.CONSTANT_Long_info.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.CONSTANT_Long_info.<init>()V#Invoke(SPECIAL,Lsoot/coffi/cp_info;,<init>,()V)#1
soot.coffi.CONSTANT_Long_info.<init>()V#Return(V)#2
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalStore(Ljava/lang/Object;,3)#232
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,3)#233
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#CheckCast(Lsoot/coffi/CONSTANT_Long_info;)#234
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#235
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readInt,()I)#236
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Conversion(I,J)#237
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Constant(J,4294967295)#238
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#BinaryOp(J,and)#239
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Put(J,NONSTATIC,Lsoot/coffi/CONSTANT_Long_info;,high)#240
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,3)#241
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#CheckCast(Lsoot/coffi/CONSTANT_Long_info;)#242
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#243
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readInt,()I)#244
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Conversion(I,J)#245
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Constant(J,4294967295)#246
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#BinaryOp(J,and)#247
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Put(J,NONSTATIC,Lsoot/coffi/CONSTANT_Long_info;,low)#248
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#249
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Get(Z,NONSTATIC,Lsoot/coffi/ClassFile;,debug)#250
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Constant(I,0)#251
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#ConditionalBranch(I,eq,272)#252
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Constant(I,1)#272
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalStore(I,5)#273
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Goto(426)#274
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Constant(I,0)#13
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalStore(I,5)#14
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Goto(434)#15
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#New(Lsoot/coffi/field_info;,0)#8
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#Dup(1,0)#9
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#Invoke(SPECIAL,Lsoot/coffi/field_info;,<init>,()V)#10
soot.coffi.field_info.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.field_info.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.coffi.field_info.<init>()V#Return(V)#2
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#LocalStore(Ljava/lang/Object;,2)#11
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,2)#12
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#13
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#14
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#Put(I,NONSTATIC,Lsoot/coffi/field_info;,access_flags)#15
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,2)#16
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#17
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#18
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#Put(I,NONSTATIC,Lsoot/coffi/field_info;,name_index)#19
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,2)#20
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#21
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#22
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#Put(I,NONSTATIC,Lsoot/coffi/field_info;,descriptor_index)#23
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,2)#24
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#25
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#26
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#Put(I,NONSTATIC,Lsoot/coffi/field_info;,attributes_count)#27
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,2)#28
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#Get(I,NONSTATIC,Lsoot/coffi/field_info;,attributes_count)#29
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#Constant(I,0)#30
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#ConditionalBranch(I,le,45)#31
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,2)#32
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,2)#33
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#Get(I,NONSTATIC,Lsoot/coffi/field_info;,attributes_count)#34
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#New([Lsoot/coffi/attribute_info;,1)#35
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#Put([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/field_info;,attributes)#36
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#37
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#38
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,2)#39
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#Get(I,NONSTATIC,Lsoot/coffi/field_info;,attributes_count)#40
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,2)#41
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/field_info;,attributes)#42
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Lsoot/coffi/ClassFile;,readAttributes,(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z)#43
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#New(Lsoot/coffi/ConstantValue_attribute;,0)#42
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Dup(1,0)#43
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(SPECIAL,Lsoot/coffi/ConstantValue_attribute;,<init>,()V)#44
soot.coffi.ConstantValue_attribute.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.ConstantValue_attribute.<init>()V#Invoke(SPECIAL,Lsoot/coffi/attribute_info;,<init>,()V)#1
soot.coffi.ConstantValue_attribute.<init>()V#Return(V)#2
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(Ljava/lang/Object;,10)#45
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#46
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,1)#47
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#48
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put(I,NONSTATIC,Lsoot/coffi/ConstantValue_attribute;,constantvalue_index)#49
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#50
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(Ljava/lang/Object;,4)#51
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Goto(905)#52
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#Pop(1)#44
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#45
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#Get([Lsoot/coffi/field_info;,NONSTATIC,Lsoot/coffi/ClassFile;,fields)#46
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#LocalLoad(I,3)#47
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,2)#48
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#ArrayStore(Ljava/lang/Object;)#49
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#LocalLoad(I,3)#50
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#Constant(I,1)#51
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#BinaryOp(I,add)#52
soot.coffi.ClassFile.readFields(Ljava/io/DataInputStream;)Z#LocalStore(I,3)#53
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#179
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/field_info;,NONSTATIC,Lsoot/coffi/ClassFile;,fields)#180
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,7)#181
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#182
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,8)#183
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#184
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#185
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#186
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/field_info;,name_index)#187
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#188
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/CONSTANT_Utf8_info;)#189
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,convert,()Ljava/lang/String;)#190
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,9)#191
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#192
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#193
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#194
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/field_info;,descriptor_index)#195
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#196
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/CONSTANT_Utf8_info;)#197
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,convert,()Ljava/lang/String;)#198
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,10)#199
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#200
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/field_info;,access_flags)#201
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(I,11)#202
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#203
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,10)#204
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/coffi/Util;,jimpleTypeOfFieldDescriptor,(Ljava/lang/String;)Lsoot/Type;)#205
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(I,0)#0
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalStore(I,2)#1
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(I,0)#2
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalStore(I,3)#3
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Goto(15)#4
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#15
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(Ljava/lang/String;,"[")#16
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Invoke(VIRTUAL,Ljava/lang/String;,startsWith,(Ljava/lang/String;)Z)#17
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(I,0)#18
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#ConditionalBranch(I,ne,5)#19
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#20
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(Ljava/lang/String;,"B")#21
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#22
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(I,0)#23
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#ConditionalBranch(I,eq,28)#24
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#28
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(Ljava/lang/String;,"C")#29
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#30
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(I,0)#31
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#ConditionalBranch(I,eq,36)#32
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#36
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(Ljava/lang/String;,"D")#37
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#38
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(I,0)#39
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#ConditionalBranch(I,eq,44)#40
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#44
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(Ljava/lang/String;,"F")#45
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#46
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(I,0)#47
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#ConditionalBranch(I,eq,52)#48
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#52
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(Ljava/lang/String;,"I")#53
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#54
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(I,0)#55
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#ConditionalBranch(I,eq,60)#56
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#60
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(Ljava/lang/String;,"J")#61
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#62
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(I,0)#63
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#ConditionalBranch(I,eq,68)#64
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Invoke(STATIC,Lsoot/LongType;,v,()Lsoot/LongType;)#65
soot.LongType.v()Lsoot/LongType;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.LongType.v()Lsoot/LongType;#Invoke(VIRTUAL,Lsoot/G;,soot_LongType,()Lsoot/LongType;)#1
soot.Singletons.soot_LongType()Lsoot/LongType;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_LongType()Lsoot/LongType;#Get(Lsoot/LongType;,NONSTATIC,Lsoot/Singletons;,instance_soot_LongType)#1
soot.Singletons.soot_LongType()Lsoot/LongType;#Constant(L;,null)#2
soot.Singletons.soot_LongType()Lsoot/LongType;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_LongType()Lsoot/LongType;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_LongType()Lsoot/LongType;#New(Lsoot/LongType;,0)#5
soot.Singletons.soot_LongType()Lsoot/LongType;#Dup(1,0)#6
soot.Singletons.soot_LongType()Lsoot/LongType;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_LongType()Lsoot/LongType;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_LongType()Lsoot/LongType;#Invoke(SPECIAL,Lsoot/LongType;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.LongType.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.LongType.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/PrimType;,<init>,()V)#1
soot.PrimType.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.PrimType.<init>()V#Invoke(SPECIAL,Lsoot/Type;,<init>,()V)#1
soot.PrimType.<init>()V#Return(V)#2
soot.LongType.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_LongType()Lsoot/LongType;#Put(Lsoot/LongType;,NONSTATIC,Lsoot/Singletons;,instance_soot_LongType)#10
soot.Singletons.soot_LongType()Lsoot/LongType;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_LongType()Lsoot/LongType;#Get(Lsoot/LongType;,NONSTATIC,Lsoot/Singletons;,instance_soot_LongType)#12
soot.Singletons.soot_LongType()Lsoot/LongType;#Return(Ljava/lang/Object;)#13
soot.LongType.v()Lsoot/LongType;#Return(Ljava/lang/Object;)#2
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalStore(Ljava/lang/Object;,4)#66
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Goto(133)#67
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalLoad(I,2)#133
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(I,0)#134
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#ConditionalBranch(I,eq,140)#135
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,4)#140
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Return(Ljava/lang/Object;)#141
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,12)#206
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#New(Lsoot/SootField;,0)#207
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Dup(1,0)#208
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,9)#209
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,12)#210
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,11)#211
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(SPECIAL,Lsoot/SootField;,<init>,(Ljava/lang/String;Lsoot/Type;I)V)#212
soot.SootField.<init>(Ljava/lang/String;Lsoot/Type;I)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootField.<init>(Ljava/lang/String;Lsoot/Type;I)V#Invoke(SPECIAL,Lsoot/tagkit/AbstractHost;,<init>,()V)#1
soot.SootField.<init>(Ljava/lang/String;Lsoot/Type;I)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.SootField.<init>(Ljava/lang/String;Lsoot/Type;I)V#Constant(I,0)#3
soot.SootField.<init>(Ljava/lang/String;Lsoot/Type;I)V#Put(Z,NONSTATIC,Lsoot/SootField;,isDeclared)#4
soot.SootField.<init>(Ljava/lang/String;Lsoot/Type;I)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.SootField.<init>(Ljava/lang/String;Lsoot/Type;I)V#Constant(I,0)#6
soot.SootField.<init>(Ljava/lang/String;Lsoot/Type;I)V#Put(Z,NONSTATIC,Lsoot/SootField;,isPhantom)#7
soot.SootField.<init>(Ljava/lang/String;Lsoot/Type;I)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.SootField.<init>(Ljava/lang/String;Lsoot/Type;I)V#Constant(I,0)#9
soot.SootField.<init>(Ljava/lang/String;Lsoot/Type;I)V#Put(I,NONSTATIC,Lsoot/SootField;,number)#10
soot.SootField.<init>(Ljava/lang/String;Lsoot/Type;I)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.SootField.<init>(Ljava/lang/String;Lsoot/Type;I)V#LocalLoad(Ljava/lang/Object;,1)#12
soot.SootField.<init>(Ljava/lang/String;Lsoot/Type;I)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/SootField;,name)#13
soot.SootField.<init>(Ljava/lang/String;Lsoot/Type;I)V#LocalLoad(Ljava/lang/Object;,0)#14
soot.SootField.<init>(Ljava/lang/String;Lsoot/Type;I)V#LocalLoad(Ljava/lang/Object;,2)#15
soot.SootField.<init>(Ljava/lang/String;Lsoot/Type;I)V#Put(Lsoot/Type;,NONSTATIC,Lsoot/SootField;,type)#16
soot.SootField.<init>(Ljava/lang/String;Lsoot/Type;I)V#LocalLoad(Ljava/lang/Object;,0)#17
soot.SootField.<init>(Ljava/lang/String;Lsoot/Type;I)V#LocalLoad(I,3)#18
soot.SootField.<init>(Ljava/lang/String;Lsoot/Type;I)V#Put(I,NONSTATIC,Lsoot/SootField;,modifiers)#19
soot.SootField.<init>(Ljava/lang/String;Lsoot/Type;I)V#LocalLoad(Ljava/lang/Object;,2)#20
soot.SootField.<init>(Ljava/lang/String;Lsoot/Type;I)V#Instanceof(Lsoot/RefLikeType;)#21
soot.SootField.<init>(Ljava/lang/String;Lsoot/Type;I)V#Constant(I,0)#22
soot.SootField.<init>(Ljava/lang/String;Lsoot/Type;I)V#ConditionalBranch(I,eq,28)#23
soot.SootField.<init>(Ljava/lang/String;Lsoot/Type;I)V#Return(V)#28
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,13)#213
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,4)#214
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,13)#215
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/SootClass;,addField,(Lsoot/SootField;)V)#216
soot.SootClass.addField(Lsoot/SootField;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.addField(Lsoot/SootField;)V#Constant(I,2)#1
soot.SootClass.addField(Lsoot/SootField;)V#Invoke(VIRTUAL,Lsoot/SootClass;,checkLevel,(I)V)#2
soot.SootClass.addField(Lsoot/SootField;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.SootClass.addField(Lsoot/SootField;)V#Invoke(VIRTUAL,Lsoot/SootField;,isDeclared,()Z)#4
soot.SootField.isDeclared()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootField.isDeclared()Z#Get(Z,NONSTATIC,Lsoot/SootField;,isDeclared)#1
soot.SootField.isDeclared()Z#Return(I)#2
soot.SootClass.addField(Lsoot/SootField;)V#Constant(I,0)#5
soot.SootClass.addField(Lsoot/SootField;)V#ConditionalBranch(I,eq,19)#6
soot.SootClass.addField(Lsoot/SootField;)V#LocalLoad(Ljava/lang/Object;,0)#19
soot.SootClass.addField(Lsoot/SootField;)V#LocalLoad(Ljava/lang/Object;,1)#20
soot.SootClass.addField(Lsoot/SootField;)V#Invoke(VIRTUAL,Lsoot/SootField;,getName,()Ljava/lang/String;)#21
soot.SootField.getName()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootField.getName()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsoot/SootField;,name)#1
soot.SootField.getName()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
soot.SootClass.addField(Lsoot/SootField;)V#Invoke(VIRTUAL,Lsoot/SootClass;,declaresField,(Ljava/lang/String;)Z)#22
soot.SootClass.declaresField(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.declaresField(Ljava/lang/String;)Z#Constant(I,2)#1
soot.SootClass.declaresField(Ljava/lang/String;)Z#Invoke(VIRTUAL,Lsoot/SootClass;,checkLevel,(I)V)#2
soot.SootClass.declaresField(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#3
soot.SootClass.declaresField(Ljava/lang/String;)Z#Invoke(VIRTUAL,Lsoot/SootClass;,getFields,()Lsoot/util/Chain;)#4
soot.SootClass.declaresField(Ljava/lang/String;)Z#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#5
soot.SootClass.declaresField(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,2)#6
soot.SootClass.declaresField(Ljava/lang/String;)Z#Goto(20)#7
soot.SootClass.declaresField(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,2)#20
soot.SootClass.declaresField(Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#21
soot.SootClass.declaresField(Ljava/lang/String;)Z#Constant(I,0)#22
soot.SootClass.declaresField(Ljava/lang/String;)Z#ConditionalBranch(I,ne,8)#23
soot.SootClass.declaresField(Ljava/lang/String;)Z#Constant(I,0)#24
soot.SootClass.declaresField(Ljava/lang/String;)Z#Return(I)#25
soot.SootClass.addField(Lsoot/SootField;)V#Constant(I,0)#23
soot.SootClass.addField(Lsoot/SootField;)V#ConditionalBranch(I,eq,37)#24
soot.SootClass.addField(Lsoot/SootField;)V#LocalLoad(Ljava/lang/Object;,0)#37
soot.SootClass.addField(Lsoot/SootField;)V#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/SootClass;,fields)#38
soot.SootClass.addField(Lsoot/SootField;)V#LocalLoad(Ljava/lang/Object;,1)#39
soot.SootClass.addField(Lsoot/SootField;)V#Invoke(INTERFACE,Lsoot/util/Chain;,add,(Ljava/lang/Object;)Z)#40
soot.SootClass.addField(Lsoot/SootField;)V#Pop(1)#41
soot.SootClass.addField(Lsoot/SootField;)V#LocalLoad(Ljava/lang/Object;,1)#42
soot.SootClass.addField(Lsoot/SootField;)V#Constant(I,1)#43
soot.SootClass.addField(Lsoot/SootField;)V#Put(Z,NONSTATIC,Lsoot/SootField;,isDeclared)#44
soot.SootClass.addField(Lsoot/SootField;)V#LocalLoad(Ljava/lang/Object;,1)#45
soot.SootClass.addField(Lsoot/SootField;)V#LocalLoad(Ljava/lang/Object;,0)#46
soot.SootClass.addField(Lsoot/SootField;)V#Put(Lsoot/SootClass;,NONSTATIC,Lsoot/SootField;,declaringClass)#47
soot.SootClass.addField(Lsoot/SootField;)V#Return(V)#48
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#217
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,12)#218
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#219
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Pop(1)#220
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#221
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(I,14)#222
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Goto(429)#223
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,14)#429
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#430
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/field_info;,attributes_count)#431
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,lt,224)#432
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#224
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/field_info;,attributes)#225
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,14)#226
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#227
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Instanceof(Lsoot/coffi/ConstantValue_attribute;)#228
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#229
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,eq,320)#230
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#231
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/field_info;,attributes)#232
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,14)#233
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#234
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/ConstantValue_attribute;)#235
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,15)#236
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#237
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#238
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,15)#239
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/ConstantValue_attribute;,constantvalue_index)#240
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#241
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,16)#242
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,16)#243
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(B,NONSTATIC,Lsoot/coffi/cp_info;,tag)#244
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Switch(305,3,246,4,255,5,263,6,278,7,305,8,288)#245
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,16)#263
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/CONSTANT_Long_info;)#264
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,18)#265
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#New(Lsoot/tagkit/LongConstantValueTag;,0)#266
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Dup(1,0)#267
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,18)#268
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(J,NONSTATIC,Lsoot/coffi/CONSTANT_Long_info;,high)#269
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,32)#270
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Shift(J,SHL)#271
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,18)#272
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(J,NONSTATIC,Lsoot/coffi/CONSTANT_Long_info;,low)#273
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#BinaryOp(J,add)#274
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(SPECIAL,Lsoot/tagkit/LongConstantValueTag;,<init>,(J)V)#275
soot.tagkit.LongConstantValueTag.<init>(J)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.tagkit.LongConstantValueTag.<init>(J)V#Invoke(SPECIAL,Lsoot/tagkit/ConstantValueTag;,<init>,()V)#1
soot.tagkit.ConstantValueTag.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.tagkit.ConstantValueTag.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.tagkit.ConstantValueTag.<init>()V#Return(V)#2
soot.tagkit.LongConstantValueTag.<init>(J)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.tagkit.LongConstantValueTag.<init>(J)V#LocalLoad(J,1)#3
soot.tagkit.LongConstantValueTag.<init>(J)V#Put(J,NONSTATIC,Lsoot/tagkit/LongConstantValueTag;,value)#4
soot.tagkit.LongConstantValueTag.<init>(J)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.tagkit.LongConstantValueTag.<init>(J)V#Constant(I,8)#6
soot.tagkit.LongConstantValueTag.<init>(J)V#New([B,1)#7
soot.tagkit.LongConstantValueTag.<init>(J)V#Dup(1,0)#8
soot.tagkit.LongConstantValueTag.<init>(J)V#Constant(I,0)#9
soot.tagkit.LongConstantValueTag.<init>(J)V#LocalLoad(J,1)#10
soot.tagkit.LongConstantValueTag.<init>(J)V#Constant(I,56)#11
soot.tagkit.LongConstantValueTag.<init>(J)V#Shift(J,SHR)#12
soot.tagkit.LongConstantValueTag.<init>(J)V#Constant(J,255)#13
soot.tagkit.LongConstantValueTag.<init>(J)V#BinaryOp(J,and)#14
soot.tagkit.LongConstantValueTag.<init>(J)V#Conversion(J,I)#15
soot.tagkit.LongConstantValueTag.<init>(J)V#Conversion(I,B)#16
soot.tagkit.LongConstantValueTag.<init>(J)V#ArrayStore(B)#17
soot.tagkit.LongConstantValueTag.<init>(J)V#Dup(1,0)#18
soot.tagkit.LongConstantValueTag.<init>(J)V#Constant(I,1)#19
soot.tagkit.LongConstantValueTag.<init>(J)V#LocalLoad(J,1)#20
soot.tagkit.LongConstantValueTag.<init>(J)V#Constant(I,48)#21
soot.tagkit.LongConstantValueTag.<init>(J)V#Shift(J,SHR)#22
soot.tagkit.LongConstantValueTag.<init>(J)V#Constant(J,255)#23
soot.tagkit.LongConstantValueTag.<init>(J)V#BinaryOp(J,and)#24
soot.tagkit.LongConstantValueTag.<init>(J)V#Conversion(J,I)#25
soot.tagkit.LongConstantValueTag.<init>(J)V#Conversion(I,B)#26
soot.tagkit.LongConstantValueTag.<init>(J)V#ArrayStore(B)#27
soot.tagkit.LongConstantValueTag.<init>(J)V#Dup(1,0)#28
soot.tagkit.LongConstantValueTag.<init>(J)V#Constant(I,2)#29
soot.tagkit.LongConstantValueTag.<init>(J)V#LocalLoad(J,1)#30
soot.tagkit.LongConstantValueTag.<init>(J)V#Constant(I,40)#31
soot.tagkit.LongConstantValueTag.<init>(J)V#Shift(J,SHR)#32
soot.tagkit.LongConstantValueTag.<init>(J)V#Constant(J,255)#33
soot.tagkit.LongConstantValueTag.<init>(J)V#BinaryOp(J,and)#34
soot.tagkit.LongConstantValueTag.<init>(J)V#Conversion(J,I)#35
soot.tagkit.LongConstantValueTag.<init>(J)V#Conversion(I,B)#36
soot.tagkit.LongConstantValueTag.<init>(J)V#ArrayStore(B)#37
soot.tagkit.LongConstantValueTag.<init>(J)V#Dup(1,0)#38
soot.tagkit.LongConstantValueTag.<init>(J)V#Constant(I,3)#39
soot.tagkit.LongConstantValueTag.<init>(J)V#LocalLoad(J,1)#40
soot.tagkit.LongConstantValueTag.<init>(J)V#Constant(I,32)#41
soot.tagkit.LongConstantValueTag.<init>(J)V#Shift(J,SHR)#42
soot.tagkit.LongConstantValueTag.<init>(J)V#Constant(J,255)#43
soot.tagkit.LongConstantValueTag.<init>(J)V#BinaryOp(J,and)#44
soot.tagkit.LongConstantValueTag.<init>(J)V#Conversion(J,I)#45
soot.tagkit.LongConstantValueTag.<init>(J)V#Conversion(I,B)#46
soot.tagkit.LongConstantValueTag.<init>(J)V#ArrayStore(B)#47
soot.tagkit.LongConstantValueTag.<init>(J)V#Dup(1,0)#48
soot.tagkit.LongConstantValueTag.<init>(J)V#Constant(I,4)#49
soot.tagkit.LongConstantValueTag.<init>(J)V#LocalLoad(J,1)#50
soot.tagkit.LongConstantValueTag.<init>(J)V#Constant(I,24)#51
soot.tagkit.LongConstantValueTag.<init>(J)V#Shift(J,SHR)#52
soot.tagkit.LongConstantValueTag.<init>(J)V#Constant(J,255)#53
soot.tagkit.LongConstantValueTag.<init>(J)V#BinaryOp(J,and)#54
soot.tagkit.LongConstantValueTag.<init>(J)V#Conversion(J,I)#55
soot.tagkit.LongConstantValueTag.<init>(J)V#Conversion(I,B)#56
soot.tagkit.LongConstantValueTag.<init>(J)V#ArrayStore(B)#57
soot.tagkit.LongConstantValueTag.<init>(J)V#Dup(1,0)#58
soot.tagkit.LongConstantValueTag.<init>(J)V#Constant(I,5)#59
soot.tagkit.LongConstantValueTag.<init>(J)V#LocalLoad(J,1)#60
soot.tagkit.LongConstantValueTag.<init>(J)V#Constant(I,16)#61
soot.tagkit.LongConstantValueTag.<init>(J)V#Shift(J,SHR)#62
soot.tagkit.LongConstantValueTag.<init>(J)V#Constant(J,255)#63
soot.tagkit.LongConstantValueTag.<init>(J)V#BinaryOp(J,and)#64
soot.tagkit.LongConstantValueTag.<init>(J)V#Conversion(J,I)#65
soot.tagkit.LongConstantValueTag.<init>(J)V#Conversion(I,B)#66
soot.tagkit.LongConstantValueTag.<init>(J)V#ArrayStore(B)#67
soot.tagkit.LongConstantValueTag.<init>(J)V#Dup(1,0)#68
soot.tagkit.LongConstantValueTag.<init>(J)V#Constant(I,6)#69
soot.tagkit.LongConstantValueTag.<init>(J)V#LocalLoad(J,1)#70
soot.tagkit.LongConstantValueTag.<init>(J)V#Constant(I,8)#71
soot.tagkit.LongConstantValueTag.<init>(J)V#Shift(J,SHR)#72
soot.tagkit.LongConstantValueTag.<init>(J)V#Constant(J,255)#73
soot.tagkit.LongConstantValueTag.<init>(J)V#BinaryOp(J,and)#74
soot.tagkit.LongConstantValueTag.<init>(J)V#Conversion(J,I)#75
soot.tagkit.LongConstantValueTag.<init>(J)V#Conversion(I,B)#76
soot.tagkit.LongConstantValueTag.<init>(J)V#ArrayStore(B)#77
soot.tagkit.LongConstantValueTag.<init>(J)V#Dup(1,0)#78
soot.tagkit.LongConstantValueTag.<init>(J)V#Constant(I,7)#79
soot.tagkit.LongConstantValueTag.<init>(J)V#LocalLoad(J,1)#80
soot.tagkit.LongConstantValueTag.<init>(J)V#Constant(J,255)#81
soot.tagkit.LongConstantValueTag.<init>(J)V#BinaryOp(J,and)#82
soot.tagkit.LongConstantValueTag.<init>(J)V#Conversion(J,I)#83
soot.tagkit.LongConstantValueTag.<init>(J)V#Conversion(I,B)#84
soot.tagkit.LongConstantValueTag.<init>(J)V#ArrayStore(B)#85
soot.tagkit.LongConstantValueTag.<init>(J)V#Put([B,NONSTATIC,Lsoot/tagkit/LongConstantValueTag;,bytes)#86
soot.tagkit.LongConstantValueTag.<init>(J)V#Return(V)#87
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,17)#276
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Goto(316)#277
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,13)#316
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,17)#317
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/SootField;,addTag,(Lsoot/tagkit/Tag;)V)#318
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Goto(425)#319
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,14)#425
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,1)#426
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#BinaryOp(I,add)#427
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(I,14)#428
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,7)#433
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,1)#434
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#BinaryOp(I,add)#435
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(I,7)#436
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#40
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Constant(Ljava/lang/String;,",")#41
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(Ljava/lang/String;)Ljava/lang/StringBuffer;)#42
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Pop(1)#43
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,5)#44
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#45
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#CheckCast(Lsoot/Type;)#46
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,4)#47
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#48
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,4)#49
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(Ljava/lang/Object;)Ljava/lang/StringBuffer;)#50
soot.SootMethod.getSubSignatureImpl(Ljava/lang/String;Ljava/util/List;Lsoot/Type;)Ljava/lang/String;#Pop(1)#51
soot.LongType.hashCode()I#Constant(I,37593207)#0
soot.LongType.hashCode()I#Return(I)#1
soot.RefType.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#0
soot.RefType.equals(Ljava/lang/Object;)Z#Instanceof(Lsoot/RefType;)#1
soot.RefType.equals(Ljava/lang/Object;)Z#Constant(I,0)#2
soot.RefType.equals(Ljava/lang/Object;)Z#ConditionalBranch(I,eq,14)#3
soot.RefType.equals(Ljava/lang/Object;)Z#Constant(I,0)#14
soot.RefType.equals(Ljava/lang/Object;)Z#Return(I)#15
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,2)#30
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#31
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#CheckCast(Lsoot/SootField;)#32
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,3)#33
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#34
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,3)#35
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootField;,getType,()Lsoot/Type;)#36
soot.SootField.getType()Lsoot/Type;#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootField.getType()Lsoot/Type;#Get(Lsoot/Type;,NONSTATIC,Lsoot/SootField;,type)#1
soot.SootField.getType()Lsoot/Type;#Return(Ljava/lang/Object;)#2
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Constant(I,1)#37
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(SPECIAL,Lsoot/SootResolver;,addToResolveWorklist,(Lsoot/Type;I)V)#38
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#New(Lsoot/coffi/CONSTANT_Fieldref_info;,0)#48
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Dup(1,0)#49
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Invoke(SPECIAL,Lsoot/coffi/CONSTANT_Fieldref_info;,<init>,()V)#50
soot.coffi.CONSTANT_Fieldref_info.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.CONSTANT_Fieldref_info.<init>()V#Invoke(SPECIAL,Lsoot/coffi/cp_info;,<init>,()V)#1
soot.coffi.CONSTANT_Fieldref_info.<init>()V#Return(V)#2
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalStore(Ljava/lang/Object;,3)#51
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,3)#52
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#CheckCast(Lsoot/coffi/CONSTANT_Fieldref_info;)#53
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#54
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#55
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Put(I,NONSTATIC,Lsoot/coffi/CONSTANT_Fieldref_info;,class_index)#56
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,3)#57
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#CheckCast(Lsoot/coffi/CONSTANT_Fieldref_info;)#58
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#59
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#60
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Put(I,NONSTATIC,Lsoot/coffi/CONSTANT_Fieldref_info;,name_and_type_index)#61
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#62
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Get(Z,NONSTATIC,Lsoot/coffi/ClassFile;,debug)#63
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Constant(I,0)#64
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#ConditionalBranch(I,eq,426)#65
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#New(Lsoot/coffi/CONSTANT_String_info;,0)#141
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Dup(1,0)#142
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Invoke(SPECIAL,Lsoot/coffi/CONSTANT_String_info;,<init>,()V)#143
soot.coffi.CONSTANT_String_info.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.CONSTANT_String_info.<init>()V#Invoke(SPECIAL,Lsoot/coffi/cp_info;,<init>,()V)#1
soot.coffi.CONSTANT_String_info.<init>()V#Return(V)#2
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalStore(Ljava/lang/Object;,3)#144
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,3)#145
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#CheckCast(Lsoot/coffi/CONSTANT_String_info;)#146
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#147
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#148
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Put(I,NONSTATIC,Lsoot/coffi/CONSTANT_String_info;,string_index)#149
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#150
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Get(Z,NONSTATIC,Lsoot/coffi/ClassFile;,debug)#151
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Constant(I,0)#152
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#ConditionalBranch(I,eq,426)#153
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#70
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#71
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Get(I,NONSTATIC,Lsoot/coffi/ClassFile;,interfaces_count)#72
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#New([I,1)#73
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Put([I,NONSTATIC,Lsoot/coffi/ClassFile;,interfaces)#74
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Constant(I,0)#75
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalStore(I,2)#76
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Goto(88)#77
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(I,2)#88
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#89
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Get(I,NONSTATIC,Lsoot/coffi/ClassFile;,interfaces_count)#90
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#ConditionalBranch(I,lt,78)#91
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#78
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Get([I,NONSTATIC,Lsoot/coffi/ClassFile;,interfaces)#79
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(I,2)#80
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#81
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#82
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#ArrayStore(I)#83
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalLoad(I,2)#84
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#Constant(I,1)#85
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#BinaryOp(I,add)#86
soot.coffi.ClassFile.readClass(Ljava/io/DataInputStream;)Z#LocalStore(I,2)#87
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#New(Lsoot/coffi/exception_table_entry;,0)#100
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Dup(1,0)#101
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(SPECIAL,Lsoot/coffi/exception_table_entry;,<init>,()V)#102
soot.coffi.exception_table_entry.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.exception_table_entry.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.coffi.exception_table_entry.<init>()V#Return(V)#2
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(Ljava/lang/Object;,12)#103
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,12)#104
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,1)#105
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#106
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put(I,NONSTATIC,Lsoot/coffi/exception_table_entry;,start_pc)#107
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,12)#108
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,1)#109
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#110
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put(I,NONSTATIC,Lsoot/coffi/exception_table_entry;,end_pc)#111
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,12)#112
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,1)#113
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#114
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put(I,NONSTATIC,Lsoot/coffi/exception_table_entry;,handler_pc)#115
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,12)#116
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,1)#117
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#118
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put(I,NONSTATIC,Lsoot/coffi/exception_table_entry;,catch_type)#119
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#120
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Get([Lsoot/coffi/exception_table_entry;,NONSTATIC,Lsoot/coffi/Code_attribute;,exception_table)#121
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(I,11)#122
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,12)#123
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#ArrayStore(Ljava/lang/Object;)#124
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(I,11)#125
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(I,1)#126
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#BinaryOp(I,add)#127
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(I,11)#128
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#New(Lsoot/coffi/Exception_attribute;,0)#158
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Dup(1,0)#159
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(SPECIAL,Lsoot/coffi/Exception_attribute;,<init>,()V)#160
soot.coffi.Exception_attribute.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Exception_attribute.<init>()V#Invoke(SPECIAL,Lsoot/coffi/attribute_info;,<init>,()V)#1
soot.coffi.Exception_attribute.<init>()V#Return(V)#2
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(Ljava/lang/Object;,10)#161
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#162
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,1)#163
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#164
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put(I,NONSTATIC,Lsoot/coffi/Exception_attribute;,number_of_exceptions)#165
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#166
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Get(I,NONSTATIC,Lsoot/coffi/Exception_attribute;,number_of_exceptions)#167
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(I,0)#168
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#ConditionalBranch(I,le,192)#169
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#170
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#171
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Get(I,NONSTATIC,Lsoot/coffi/Exception_attribute;,number_of_exceptions)#172
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#New([I,1)#173
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put([I,NONSTATIC,Lsoot/coffi/Exception_attribute;,exception_index_table)#174
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(I,0)#175
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(I,11)#176
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Goto(188)#177
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(I,11)#188
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#189
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Get(I,NONSTATIC,Lsoot/coffi/Exception_attribute;,number_of_exceptions)#190
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#ConditionalBranch(I,lt,178)#191
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#178
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Get([I,NONSTATIC,Lsoot/coffi/Exception_attribute;,exception_index_table)#179
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(I,11)#180
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,1)#181
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#182
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#ArrayStore(I)#183
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(I,11)#184
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(I,1)#185
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#BinaryOp(I,add)#186
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(I,11)#187
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#192
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(Ljava/lang/Object;,4)#193
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Goto(905)#194
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#135
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#136
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#137
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([I,NONSTATIC,Lsoot/coffi/ClassFile;,interfaces)#138
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,7)#139
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(I)#140
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#141
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/CONSTANT_Class_info;)#142
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,8)#143
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#144
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#145
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#146
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_Class_info;,name_index)#147
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#148
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/CONSTANT_Utf8_info;)#149
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,convert,()Ljava/lang/String;)#150
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,9)#151
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,9)#152
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,47)#153
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,46)#154
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Ljava/lang/String;,replace,(CC)Ljava/lang/String;)#155
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,9)#156
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#157
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,9)#158
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#159
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Pop(1)#160
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(STATIC,Lsoot/SootResolver;,v,()Lsoot/SootResolver;)#161
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,9)#162
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/SootResolver;,makeClassRef,(Ljava/lang/String;)Lsoot/SootClass;)#163
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,10)#164
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,4)#165
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,10)#166
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/SootClass;,addInterface,(Lsoot/SootClass;)V)#167
soot.SootClass.addInterface(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.addInterface(Lsoot/SootClass;)V#Constant(I,1)#1
soot.SootClass.addInterface(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,checkLevel,(I)V)#2
soot.SootClass.addInterface(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.SootClass.addInterface(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#4
soot.SootClass.addInterface(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getName,()Ljava/lang/String;)#5
soot.SootClass.addInterface(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,implementsInterface,(Ljava/lang/String;)Z)#6
soot.SootClass.implementsInterface(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.implementsInterface(Ljava/lang/String;)Z#Constant(I,1)#1
soot.SootClass.implementsInterface(Ljava/lang/String;)Z#Invoke(VIRTUAL,Lsoot/SootClass;,checkLevel,(I)V)#2
soot.SootClass.implementsInterface(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#3
soot.SootClass.implementsInterface(Ljava/lang/String;)Z#Invoke(VIRTUAL,Lsoot/SootClass;,getInterfaces,()Lsoot/util/Chain;)#4
soot.SootClass.implementsInterface(Ljava/lang/String;)Z#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#5
soot.SootClass.implementsInterface(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,2)#6
soot.SootClass.implementsInterface(Ljava/lang/String;)Z#Goto(20)#7
soot.SootClass.implementsInterface(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,2)#20
soot.SootClass.implementsInterface(Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#21
soot.SootClass.implementsInterface(Ljava/lang/String;)Z#Constant(I,0)#22
soot.SootClass.implementsInterface(Ljava/lang/String;)Z#ConditionalBranch(I,ne,8)#23
soot.SootClass.implementsInterface(Ljava/lang/String;)Z#Constant(I,0)#24
soot.SootClass.implementsInterface(Ljava/lang/String;)Z#Return(I)#25
soot.SootClass.addInterface(Lsoot/SootClass;)V#Constant(I,0)#7
soot.SootClass.addInterface(Lsoot/SootClass;)V#ConditionalBranch(I,eq,21)#8
soot.SootClass.addInterface(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#21
soot.SootClass.addInterface(Lsoot/SootClass;)V#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/SootClass;,interfaces)#22
soot.SootClass.addInterface(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#23
soot.SootClass.addInterface(Lsoot/SootClass;)V#Invoke(INTERFACE,Lsoot/util/Chain;,add,(Ljava/lang/Object;)Z)#24
soot.SootClass.addInterface(Lsoot/SootClass;)V#Pop(1)#25
soot.SootClass.addInterface(Lsoot/SootClass;)V#Return(V)#26
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,7)#168
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,1)#169
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#BinaryOp(I,add)#170
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(I,7)#171
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#68
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(Ljava/lang/String;,"V")#69
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#70
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(I,0)#71
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#ConditionalBranch(I,eq,76)#72
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#76
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(Ljava/lang/String;,"L")#77
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Invoke(VIRTUAL,Ljava/lang/String;,startsWith,(Ljava/lang/String;)Z)#78
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(I,0)#79
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#ConditionalBranch(I,eq,106)#80
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#81
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(Ljava/lang/String;,";")#82
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Invoke(VIRTUAL,Ljava/lang/String;,endsWith,(Ljava/lang/String;)Z)#83
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(I,0)#84
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#ConditionalBranch(I,ne,91)#85
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#91
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(I,1)#92
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#93
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#94
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(I,1)#95
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#BinaryOp(I,sub)#96
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Invoke(VIRTUAL,Ljava/lang/String;,substring,(II)Ljava/lang/String;)#97
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalStore(Ljava/lang/Object;,5)#98
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,5)#99
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(I,47)#100
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(I,46)#101
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Invoke(VIRTUAL,Ljava/lang/String;,replace,(CC)Ljava/lang/String;)#102
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Invoke(STATIC,Lsoot/RefType;,v,(Ljava/lang/String;)Lsoot/RefType;)#103
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalStore(Ljava/lang/Object;,4)#104
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Goto(133)#105
soot.SootField.<init>(Ljava/lang/String;Lsoot/Type;I)V#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#24
soot.SootField.<init>(Ljava/lang/String;Lsoot/Type;I)V#Invoke(VIRTUAL,Lsoot/Scene;,getFieldNumberer,()Lsoot/util/ArrayNumberer;)#25
soot.Scene.getFieldNumberer()Lsoot/util/ArrayNumberer;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.getFieldNumberer()Lsoot/util/ArrayNumberer;#Get(Lsoot/util/ArrayNumberer;,NONSTATIC,Lsoot/Scene;,fieldNumberer)#1
soot.Scene.getFieldNumberer()Lsoot/util/ArrayNumberer;#Return(Ljava/lang/Object;)#2
soot.SootField.<init>(Ljava/lang/String;Lsoot/Type;I)V#LocalLoad(Ljava/lang/Object;,0)#26
soot.SootField.<init>(Ljava/lang/String;Lsoot/Type;I)V#Invoke(VIRTUAL,Lsoot/util/ArrayNumberer;,add,(Ljava/lang/Object;)V)#27
soot.SootField.getNumber()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootField.getNumber()I#Get(I,NONSTATIC,Lsoot/SootField;,number)#1
soot.SootField.getNumber()I#Return(I)#2
soot.SootField.setNumber(I)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootField.setNumber(I)V#LocalLoad(I,1)#1
soot.SootField.setNumber(I)V#Put(I,NONSTATIC,Lsoot/SootField;,number)#2
soot.SootField.setNumber(I)V#Return(V)#3
soot.SootClass.declaresField(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,2)#8
soot.SootClass.declaresField(Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#9
soot.SootClass.declaresField(Ljava/lang/String;)Z#CheckCast(Lsoot/SootField;)#10
soot.SootClass.declaresField(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,3)#11
soot.SootClass.declaresField(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#12
soot.SootClass.declaresField(Ljava/lang/String;)Z#Invoke(VIRTUAL,Lsoot/SootField;,getSubSignature,()Ljava/lang/String;)#13
soot.SootField.getSubSignature()Ljava/lang/String;#New(Ljava/lang/StringBuffer;,0)#0
soot.SootField.getSubSignature()Ljava/lang/String;#Dup(1,0)#1
soot.SootField.getSubSignature()Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuffer;,<init>,()V)#2
soot.SootField.getSubSignature()Ljava/lang/String;#LocalStore(Ljava/lang/Object;,1)#3
soot.SootField.getSubSignature()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#4
soot.SootField.getSubSignature()Ljava/lang/String;#New(Ljava/lang/StringBuilder;,0)#5
soot.SootField.getSubSignature()Ljava/lang/String;#Dup(1,0)#6
soot.SootField.getSubSignature()Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#7
soot.SootField.getSubSignature()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#8
soot.SootField.getSubSignature()Ljava/lang/String;#Invoke(VIRTUAL,Lsoot/SootField;,getType,()Lsoot/Type;)#9
soot.SootField.getSubSignature()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#10
soot.LongType.toString()Ljava/lang/String;#Constant(Ljava/lang/String;,"long")#0
soot.LongType.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#1
soot.SootField.getSubSignature()Ljava/lang/String;#Constant(Ljava/lang/String;," ")#11
soot.SootField.getSubSignature()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#12
soot.SootField.getSubSignature()Ljava/lang/String;#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#13
soot.SootField.getSubSignature()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#14
soot.SootField.getSubSignature()Ljava/lang/String;#Invoke(VIRTUAL,Lsoot/SootField;,getName,()Ljava/lang/String;)#15
soot.SootField.getSubSignature()Ljava/lang/String;#Invoke(VIRTUAL,Lsoot/Scene;,quotedNameOf,(Ljava/lang/String;)Ljava/lang/String;)#16
soot.SootField.getSubSignature()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#17
soot.SootField.getSubSignature()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#18
soot.SootField.getSubSignature()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(Ljava/lang/String;)Ljava/lang/StringBuffer;)#19
soot.SootField.getSubSignature()Ljava/lang/String;#Pop(1)#20
soot.SootField.getSubSignature()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#21
soot.SootField.getSubSignature()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,toString,()Ljava/lang/String;)#22
soot.SootField.getSubSignature()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,intern,()Ljava/lang/String;)#23
soot.SootField.getSubSignature()Ljava/lang/String;#Return(Ljava/lang/Object;)#24
soot.SootClass.declaresField(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#14
soot.SootClass.declaresField(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#15
soot.SootClass.declaresField(Ljava/lang/String;)Z#Constant(I,0)#16
soot.SootClass.declaresField(Ljava/lang/String;)Z#ConditionalBranch(I,eq,20)#17
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(I,1)#5
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalStore(I,2)#6
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalLoad(I,3)#7
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(I,1)#8
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#BinaryOp(I,add)#9
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalStore(I,3)#10
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#11
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(I,1)#12
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Invoke(VIRTUAL,Ljava/lang/String;,substring,(I)Ljava/lang/String;)#13
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalStore(Ljava/lang/Object;,1)#14
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,4)#136
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalLoad(I,3)#137
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Invoke(STATIC,Lsoot/ArrayType;,v,(Lsoot/Type;I)Lsoot/ArrayType;)#138
soot.ArrayType.v(Lsoot/Type;I)Lsoot/ArrayType;#LocalLoad(I,1)#0
soot.ArrayType.v(Lsoot/Type;I)Lsoot/ArrayType;#Constant(I,1)#1
soot.ArrayType.v(Lsoot/Type;I)Lsoot/ArrayType;#ConditionalBranch(I,ge,16)#2
soot.ArrayType.v(Lsoot/Type;I)Lsoot/ArrayType;#LocalLoad(I,1)#16
soot.ArrayType.v(Lsoot/Type;I)Lsoot/ArrayType;#Constant(I,1)#17
soot.ArrayType.v(Lsoot/Type;I)Lsoot/ArrayType;#ConditionalBranch(I,ne,22)#18
soot.ArrayType.v(Lsoot/Type;I)Lsoot/ArrayType;#LocalLoad(Ljava/lang/Object;,0)#19
soot.ArrayType.v(Lsoot/Type;I)Lsoot/ArrayType;#LocalStore(Ljava/lang/Object;,3)#20
soot.ArrayType.v(Lsoot/Type;I)Lsoot/ArrayType;#Goto(28)#21
soot.ArrayType.v(Lsoot/Type;I)Lsoot/ArrayType;#LocalLoad(Ljava/lang/Object;,3)#28
soot.ArrayType.v(Lsoot/Type;I)Lsoot/ArrayType;#Invoke(VIRTUAL,Lsoot/Type;,getArrayType,()Lsoot/ArrayType;)#29
soot.Type.getArrayType()Lsoot/ArrayType;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Type.getArrayType()Lsoot/ArrayType;#Get(Lsoot/ArrayType;,NONSTATIC,Lsoot/Type;,arrayType)#1
soot.Type.getArrayType()Lsoot/ArrayType;#Return(Ljava/lang/Object;)#2
soot.ArrayType.v(Lsoot/Type;I)Lsoot/ArrayType;#LocalStore(Ljava/lang/Object;,2)#30
soot.ArrayType.v(Lsoot/Type;I)Lsoot/ArrayType;#LocalLoad(Ljava/lang/Object;,2)#31
soot.ArrayType.v(Lsoot/Type;I)Lsoot/ArrayType;#Constant(L;,null)#32
soot.ArrayType.v(Lsoot/Type;I)Lsoot/ArrayType;#ConditionalBranch(Ljava/lang/Object;,ne,43)#33
soot.ArrayType.v(Lsoot/Type;I)Lsoot/ArrayType;#New(Lsoot/ArrayType;,0)#34
soot.ArrayType.v(Lsoot/Type;I)Lsoot/ArrayType;#Dup(1,0)#35
soot.ArrayType.v(Lsoot/Type;I)Lsoot/ArrayType;#LocalLoad(Ljava/lang/Object;,0)#36
soot.ArrayType.v(Lsoot/Type;I)Lsoot/ArrayType;#LocalLoad(I,1)#37
soot.ArrayType.v(Lsoot/Type;I)Lsoot/ArrayType;#Invoke(SPECIAL,Lsoot/ArrayType;,<init>,(Lsoot/Type;I)V)#38
soot.ArrayType.<init>(Lsoot/Type;I)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.ArrayType.<init>(Lsoot/Type;I)V#Invoke(SPECIAL,Lsoot/RefLikeType;,<init>,()V)#1
soot.ArrayType.<init>(Lsoot/Type;I)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.ArrayType.<init>(Lsoot/Type;I)V#Instanceof(Lsoot/PrimType;)#3
soot.ArrayType.<init>(Lsoot/Type;I)V#Constant(I,0)#4
soot.ArrayType.<init>(Lsoot/Type;I)V#ConditionalBranch(I,ne,15)#5
soot.ArrayType.<init>(Lsoot/Type;I)V#LocalLoad(Ljava/lang/Object;,1)#6
soot.ArrayType.<init>(Lsoot/Type;I)V#Instanceof(Lsoot/RefType;)#7
soot.ArrayType.<init>(Lsoot/Type;I)V#Constant(I,0)#8
soot.ArrayType.<init>(Lsoot/Type;I)V#ConditionalBranch(I,ne,15)#9
soot.ArrayType.<init>(Lsoot/Type;I)V#LocalLoad(I,2)#15
soot.ArrayType.<init>(Lsoot/Type;I)V#Constant(I,1)#16
soot.ArrayType.<init>(Lsoot/Type;I)V#ConditionalBranch(I,ge,31)#17
soot.ArrayType.<init>(Lsoot/Type;I)V#LocalLoad(Ljava/lang/Object;,0)#31
soot.ArrayType.<init>(Lsoot/Type;I)V#LocalLoad(Ljava/lang/Object;,1)#32
soot.ArrayType.<init>(Lsoot/Type;I)V#Put(Lsoot/Type;,NONSTATIC,Lsoot/ArrayType;,baseType)#33
soot.ArrayType.<init>(Lsoot/Type;I)V#LocalLoad(Ljava/lang/Object;,0)#34
soot.ArrayType.<init>(Lsoot/Type;I)V#LocalLoad(I,2)#35
soot.ArrayType.<init>(Lsoot/Type;I)V#Put(I,NONSTATIC,Lsoot/ArrayType;,numDimensions)#36
soot.ArrayType.<init>(Lsoot/Type;I)V#Return(V)#37
soot.ArrayType.v(Lsoot/Type;I)Lsoot/ArrayType;#LocalStore(Ljava/lang/Object;,2)#39
soot.ArrayType.v(Lsoot/Type;I)Lsoot/ArrayType;#LocalLoad(Ljava/lang/Object;,3)#40
soot.ArrayType.v(Lsoot/Type;I)Lsoot/ArrayType;#LocalLoad(Ljava/lang/Object;,2)#41
soot.ArrayType.v(Lsoot/Type;I)Lsoot/ArrayType;#Invoke(VIRTUAL,Lsoot/Type;,setArrayType,(Lsoot/ArrayType;)V)#42
soot.Type.setArrayType(Lsoot/ArrayType;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Type.setArrayType(Lsoot/ArrayType;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.Type.setArrayType(Lsoot/ArrayType;)V#Put(Lsoot/ArrayType;,NONSTATIC,Lsoot/Type;,arrayType)#2
soot.Type.setArrayType(Lsoot/ArrayType;)V#Return(V)#3
soot.ArrayType.v(Lsoot/Type;I)Lsoot/ArrayType;#LocalLoad(Ljava/lang/Object;,2)#43
soot.ArrayType.v(Lsoot/Type;I)Lsoot/ArrayType;#Return(Ljava/lang/Object;)#44
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Return(Ljava/lang/Object;)#139
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#32
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#Instanceof(Lsoot/coffi/CONSTANT_InterfaceMethodref_info;)#33
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#Constant(I,0)#34
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#ConditionalBranch(I,eq,42)#35
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#42
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#Instanceof(Lsoot/coffi/CONSTANT_Fieldref_info;)#43
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#Constant(I,0)#44
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#ConditionalBranch(I,eq,52)#45
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#46
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#47
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#CheckCast(Lsoot/coffi/CONSTANT_Fieldref_info;)#48
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_Fieldref_info;,name_and_type_index)#49
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#Invoke(STATIC,Lsoot/coffi/cp_info;,getTypeDescr,([Lsoot/coffi/cp_info;I)Ljava/lang/String;)#50
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#Return(Ljava/lang/Object;)#51
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Constant(I,1)#36
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(I,5)#37
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(I,6)#38
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Constant(I,1)#39
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#BinaryOp(I,add)#40
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(I,6)#41
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(I,4)#42
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Constant(I,1)#43
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#BinaryOp(I,add)#44
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(I,4)#45
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Goto(172)#46
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(Ljava/lang/Object;,7)#183
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(I,6)#184
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Invoke(STATIC,Lsoot/ArrayType;,v,(Lsoot/Type;I)Lsoot/ArrayType;)#185
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(Ljava/lang/Object;,8)#186
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Goto(190)#187
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Invoke(STATIC,Lsoot/BooleanType;,v,()Lsoot/BooleanType;)#153
soot.BooleanType.v()Lsoot/BooleanType;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.BooleanType.v()Lsoot/BooleanType;#Invoke(VIRTUAL,Lsoot/G;,soot_BooleanType,()Lsoot/BooleanType;)#1
soot.Singletons.soot_BooleanType()Lsoot/BooleanType;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_BooleanType()Lsoot/BooleanType;#Get(Lsoot/BooleanType;,NONSTATIC,Lsoot/Singletons;,instance_soot_BooleanType)#1
soot.Singletons.soot_BooleanType()Lsoot/BooleanType;#Constant(L;,null)#2
soot.Singletons.soot_BooleanType()Lsoot/BooleanType;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_BooleanType()Lsoot/BooleanType;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_BooleanType()Lsoot/BooleanType;#New(Lsoot/BooleanType;,0)#5
soot.Singletons.soot_BooleanType()Lsoot/BooleanType;#Dup(1,0)#6
soot.Singletons.soot_BooleanType()Lsoot/BooleanType;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_BooleanType()Lsoot/BooleanType;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_BooleanType()Lsoot/BooleanType;#Invoke(SPECIAL,Lsoot/BooleanType;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.BooleanType.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.BooleanType.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/PrimType;,<init>,()V)#1
soot.BooleanType.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_BooleanType()Lsoot/BooleanType;#Put(Lsoot/BooleanType;,NONSTATIC,Lsoot/Singletons;,instance_soot_BooleanType)#10
soot.Singletons.soot_BooleanType()Lsoot/BooleanType;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_BooleanType()Lsoot/BooleanType;#Get(Lsoot/BooleanType;,NONSTATIC,Lsoot/Singletons;,instance_soot_BooleanType)#12
soot.Singletons.soot_BooleanType()Lsoot/BooleanType;#Return(Ljava/lang/Object;)#13
soot.BooleanType.v()Lsoot/BooleanType;#Return(Ljava/lang/Object;)#2
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(Ljava/lang/Object;,7)#154
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(I,4)#155
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Constant(I,1)#156
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#BinaryOp(I,add)#157
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(I,4)#158
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Goto(176)#159
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Invoke(STATIC,Lsoot/IntType;,v,()Lsoot/IntType;)#75
soot.IntType.v()Lsoot/IntType;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.IntType.v()Lsoot/IntType;#Invoke(VIRTUAL,Lsoot/G;,soot_IntType,()Lsoot/IntType;)#1
soot.Singletons.soot_IntType()Lsoot/IntType;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_IntType()Lsoot/IntType;#Get(Lsoot/IntType;,NONSTATIC,Lsoot/Singletons;,instance_soot_IntType)#1
soot.Singletons.soot_IntType()Lsoot/IntType;#Constant(L;,null)#2
soot.Singletons.soot_IntType()Lsoot/IntType;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_IntType()Lsoot/IntType;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_IntType()Lsoot/IntType;#New(Lsoot/IntType;,0)#5
soot.Singletons.soot_IntType()Lsoot/IntType;#Dup(1,0)#6
soot.Singletons.soot_IntType()Lsoot/IntType;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_IntType()Lsoot/IntType;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_IntType()Lsoot/IntType;#Invoke(SPECIAL,Lsoot/IntType;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.IntType.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.IntType.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/PrimType;,<init>,()V)#1
soot.IntType.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_IntType()Lsoot/IntType;#Put(Lsoot/IntType;,NONSTATIC,Lsoot/Singletons;,instance_soot_IntType)#10
soot.Singletons.soot_IntType()Lsoot/IntType;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_IntType()Lsoot/IntType;#Get(Lsoot/IntType;,NONSTATIC,Lsoot/Singletons;,instance_soot_IntType)#12
soot.Singletons.soot_IntType()Lsoot/IntType;#Return(Ljava/lang/Object;)#13
soot.IntType.v()Lsoot/IntType;#Return(Ljava/lang/Object;)#2
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(Ljava/lang/Object;,7)#76
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(I,4)#77
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Constant(I,1)#78
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#BinaryOp(I,add)#79
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(I,4)#80
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Goto(176)#81
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#818
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#819
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,17)#820
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/coffi/Util;,jimpleTypeOfFieldDescriptor,(Ljava/lang/String;)Lsoot/Type;)#821
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#822
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Pop(1)#823
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Goto(829)#824
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#41
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#Invoke(SPECIAL,Lsoot/util/SmallNumberedMap;,doubleSize,()V)#42
soot.util.SmallNumberedMap.doubleSize()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.SmallNumberedMap.doubleSize()V#Get(Lsoot/util/ArrayNumberer;,NONSTATIC,Lsoot/util/SmallNumberedMap;,universe)#1
soot.util.SmallNumberedMap.doubleSize()V#Invoke(VIRTUAL,Lsoot/util/ArrayNumberer;,size,()I)#2
soot.util.ArrayNumberer.size()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.ArrayNumberer.size()I#Get(I,NONSTATIC,Lsoot/util/ArrayNumberer;,lastNumber)#1
soot.util.ArrayNumberer.size()I#Return(I)#2
soot.util.SmallNumberedMap.doubleSize()V#LocalStore(I,1)#3
soot.util.SmallNumberedMap.doubleSize()V#LocalLoad(Ljava/lang/Object;,0)#4
soot.util.SmallNumberedMap.doubleSize()V#Get([Lsoot/util/Numberable;,NONSTATIC,Lsoot/util/SmallNumberedMap;,array)#5
soot.util.SmallNumberedMap.doubleSize()V#ArrayLength()#6
soot.util.SmallNumberedMap.doubleSize()V#Pop(1)#7
soot.util.SmallNumberedMap.doubleSize()V#LocalLoad(Ljava/lang/Object;,0)#8
soot.util.SmallNumberedMap.doubleSize()V#Get([Lsoot/util/Numberable;,NONSTATIC,Lsoot/util/SmallNumberedMap;,array)#9
soot.util.SmallNumberedMap.doubleSize()V#LocalStore(Ljava/lang/Object;,2)#10
soot.util.SmallNumberedMap.doubleSize()V#LocalLoad(Ljava/lang/Object;,0)#11
soot.util.SmallNumberedMap.doubleSize()V#Get([Ljava/lang/Object;,NONSTATIC,Lsoot/util/SmallNumberedMap;,values)#12
soot.util.SmallNumberedMap.doubleSize()V#LocalStore(Ljava/lang/Object;,3)#13
soot.util.SmallNumberedMap.doubleSize()V#LocalLoad(Ljava/lang/Object;,0)#14
soot.util.SmallNumberedMap.doubleSize()V#Get([Lsoot/util/Numberable;,NONSTATIC,Lsoot/util/SmallNumberedMap;,array)#15
soot.util.SmallNumberedMap.doubleSize()V#ArrayLength()#16
soot.util.SmallNumberedMap.doubleSize()V#Constant(I,2)#17
soot.util.SmallNumberedMap.doubleSize()V#BinaryOp(I,mul)#18
soot.util.SmallNumberedMap.doubleSize()V#LocalStore(I,4)#19
soot.util.SmallNumberedMap.doubleSize()V#LocalLoad(Ljava/lang/Object;,0)#20
soot.util.SmallNumberedMap.doubleSize()V#LocalLoad(I,4)#21
soot.util.SmallNumberedMap.doubleSize()V#New([Ljava/lang/Object;,1)#22
soot.util.SmallNumberedMap.doubleSize()V#Put([Ljava/lang/Object;,NONSTATIC,Lsoot/util/SmallNumberedMap;,values)#23
soot.util.SmallNumberedMap.doubleSize()V#LocalLoad(Ljava/lang/Object;,0)#24
soot.util.SmallNumberedMap.doubleSize()V#LocalLoad(I,4)#25
soot.util.SmallNumberedMap.doubleSize()V#New([Lsoot/util/Numberable;,1)#26
soot.util.SmallNumberedMap.doubleSize()V#Put([Lsoot/util/Numberable;,NONSTATIC,Lsoot/util/SmallNumberedMap;,array)#27
soot.util.SmallNumberedMap.doubleSize()V#Constant(I,0)#28
soot.util.SmallNumberedMap.doubleSize()V#LocalStore(I,5)#29
soot.util.SmallNumberedMap.doubleSize()V#Goto(58)#30
soot.util.SmallNumberedMap.doubleSize()V#LocalLoad(I,5)#58
soot.util.SmallNumberedMap.doubleSize()V#LocalLoad(Ljava/lang/Object;,2)#59
soot.util.SmallNumberedMap.doubleSize()V#ArrayLength()#60
soot.util.SmallNumberedMap.doubleSize()V#ConditionalBranch(I,lt,31)#61
soot.util.SmallNumberedMap.doubleSize()V#LocalLoad(Ljava/lang/Object;,2)#31
soot.util.SmallNumberedMap.doubleSize()V#LocalLoad(I,5)#32
soot.util.SmallNumberedMap.doubleSize()V#ArrayLoad(Ljava/lang/Object;)#33
soot.util.SmallNumberedMap.doubleSize()V#LocalStore(Ljava/lang/Object;,6)#34
soot.util.SmallNumberedMap.doubleSize()V#LocalLoad(Ljava/lang/Object;,6)#35
soot.util.SmallNumberedMap.doubleSize()V#Constant(L;,null)#36
soot.util.SmallNumberedMap.doubleSize()V#ConditionalBranch(Ljava/lang/Object;,eq,54)#37
soot.util.SmallNumberedMap.doubleSize()V#LocalLoad(I,5)#54
soot.util.SmallNumberedMap.doubleSize()V#Constant(I,1)#55
soot.util.SmallNumberedMap.doubleSize()V#BinaryOp(I,add)#56
soot.util.SmallNumberedMap.doubleSize()V#LocalStore(I,5)#57
soot.util.SmallNumberedMap.doubleSize()V#LocalLoad(Ljava/lang/Object;,0)#38
soot.util.SmallNumberedMap.doubleSize()V#LocalLoad(Ljava/lang/Object;,6)#39
soot.util.SmallNumberedMap.doubleSize()V#Invoke(SPECIAL,Lsoot/util/SmallNumberedMap;,findPosition,(Lsoot/util/Numberable;)I)#40
soot.util.SmallNumberedMap.doubleSize()V#LocalStore(I,7)#41
soot.util.SmallNumberedMap.doubleSize()V#LocalLoad(Ljava/lang/Object;,0)#42
soot.util.SmallNumberedMap.doubleSize()V#Get([Lsoot/util/Numberable;,NONSTATIC,Lsoot/util/SmallNumberedMap;,array)#43
soot.util.SmallNumberedMap.doubleSize()V#LocalLoad(I,7)#44
soot.util.SmallNumberedMap.doubleSize()V#LocalLoad(Ljava/lang/Object;,6)#45
soot.util.SmallNumberedMap.doubleSize()V#ArrayStore(Ljava/lang/Object;)#46
soot.util.SmallNumberedMap.doubleSize()V#LocalLoad(Ljava/lang/Object;,0)#47
soot.util.SmallNumberedMap.doubleSize()V#Get([Ljava/lang/Object;,NONSTATIC,Lsoot/util/SmallNumberedMap;,values)#48
soot.util.SmallNumberedMap.doubleSize()V#LocalLoad(I,7)#49
soot.util.SmallNumberedMap.doubleSize()V#LocalLoad(Ljava/lang/Object;,3)#50
soot.util.SmallNumberedMap.doubleSize()V#LocalLoad(I,5)#51
soot.util.SmallNumberedMap.doubleSize()V#ArrayLoad(Ljava/lang/Object;)#52
soot.util.SmallNumberedMap.doubleSize()V#ArrayStore(Ljava/lang/Object;)#53
soot.util.SmallNumberedMap.doubleSize()V#Return(V)#62
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#43
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#44
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#Invoke(SPECIAL,Lsoot/util/SmallNumberedMap;,findPosition,(Lsoot/util/Numberable;)I)#45
soot.util.SmallNumberedMap.put(Lsoot/util/Numberable;Ljava/lang/Object;)Z#LocalStore(I,3)#46
soot.ArrayType.toString()Ljava/lang/String;#New(Ljava/lang/StringBuffer;,0)#0
soot.ArrayType.toString()Ljava/lang/String;#Dup(1,0)#1
soot.ArrayType.toString()Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuffer;,<init>,()V)#2
soot.ArrayType.toString()Ljava/lang/String;#LocalStore(Ljava/lang/Object;,1)#3
soot.ArrayType.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#4
soot.ArrayType.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#5
soot.ArrayType.toString()Ljava/lang/String;#Get(Lsoot/Type;,NONSTATIC,Lsoot/ArrayType;,baseType)#6
soot.ArrayType.toString()Ljava/lang/String;#Invoke(VIRTUAL,Lsoot/Type;,toString,()Ljava/lang/String;)#7
soot.ArrayType.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(Ljava/lang/String;)Ljava/lang/StringBuffer;)#8
soot.ArrayType.toString()Ljava/lang/String;#Pop(1)#9
soot.ArrayType.toString()Ljava/lang/String;#Constant(I,0)#10
soot.ArrayType.toString()Ljava/lang/String;#LocalStore(I,2)#11
soot.ArrayType.toString()Ljava/lang/String;#Goto(21)#12
soot.ArrayType.toString()Ljava/lang/String;#LocalLoad(I,2)#21
soot.ArrayType.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#22
soot.ArrayType.toString()Ljava/lang/String;#Get(I,NONSTATIC,Lsoot/ArrayType;,numDimensions)#23
soot.ArrayType.toString()Ljava/lang/String;#ConditionalBranch(I,lt,13)#24
soot.ArrayType.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#13
soot.ArrayType.toString()Ljava/lang/String;#Constant(Ljava/lang/String;,"[]")#14
soot.ArrayType.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(Ljava/lang/String;)Ljava/lang/StringBuffer;)#15
soot.ArrayType.toString()Ljava/lang/String;#Pop(1)#16
soot.ArrayType.toString()Ljava/lang/String;#LocalLoad(I,2)#17
soot.ArrayType.toString()Ljava/lang/String;#Constant(I,1)#18
soot.ArrayType.toString()Ljava/lang/String;#BinaryOp(I,add)#19
soot.ArrayType.toString()Ljava/lang/String;#LocalStore(I,2)#20
soot.ArrayType.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#25
soot.ArrayType.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,toString,()Ljava/lang/String;)#26
soot.ArrayType.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#27
soot.IntType.toString()Ljava/lang/String;#Constant(Ljava/lang/String;,"int")#0
soot.IntType.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#1
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#561
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/method_info;,attributes)#562
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,15)#563
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#564
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/Exception_attribute;)#565
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,16)#566
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#567
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(I,17)#568
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Goto(605)#569
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,17)#605
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,16)#606
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/Exception_attribute;,number_of_exceptions)#607
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,lt,570)#608
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#570
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#571
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,16)#572
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([I,NONSTATIC,Lsoot/coffi/Exception_attribute;,exception_index_table)#573
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,17)#574
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(I)#575
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#576
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/CONSTANT_Class_info;)#577
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,18)#578
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#579
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#580
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,18)#581
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_Class_info;,name_index)#582
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#583
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/CONSTANT_Utf8_info;)#584
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,convert,()Ljava/lang/String;)#585
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,19)#586
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,19)#587
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,47)#588
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,46)#589
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Ljava/lang/String;,replace,(CC)Ljava/lang/String;)#590
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,19)#591
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#592
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,19)#593
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#594
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Pop(1)#595
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,14)#596
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(STATIC,Lsoot/SootResolver;,v,()Lsoot/SootResolver;)#597
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,19)#598
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/SootResolver;,makeClassRef,(Ljava/lang/String;)Lsoot/SootClass;)#599
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,addExceptionIfAbsent,(Lsoot/SootClass;)V)#600
soot.SootMethod.addExceptionIfAbsent(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethod.addExceptionIfAbsent(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.SootMethod.addExceptionIfAbsent(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,throwsException,(Lsoot/SootClass;)Z)#2
soot.SootMethod.throwsException(Lsoot/SootClass;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethod.throwsException(Lsoot/SootClass;)Z#Get(Ljava/util/List;,NONSTATIC,Lsoot/SootMethod;,exceptions)#1
soot.SootMethod.throwsException(Lsoot/SootClass;)Z#Constant(L;,null)#2
soot.SootMethod.throwsException(Lsoot/SootClass;)Z#ConditionalBranch(Ljava/lang/Object;,eq,12)#3
soot.SootMethod.throwsException(Lsoot/SootClass;)Z#Constant(I,0)#12
soot.SootMethod.throwsException(Lsoot/SootClass;)Z#Return(I)#13
soot.SootMethod.addExceptionIfAbsent(Lsoot/SootClass;)V#Constant(I,0)#3
soot.SootMethod.addExceptionIfAbsent(Lsoot/SootClass;)V#ConditionalBranch(I,ne,8)#4
soot.SootMethod.addExceptionIfAbsent(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.SootMethod.addExceptionIfAbsent(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#6
soot.SootMethod.addExceptionIfAbsent(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,addException,(Lsoot/SootClass;)V)#7
soot.SootMethod.addException(Lsoot/SootClass;)V#Get(Z,STATIC,Lsoot/SootMethod;,DEBUG)#0
soot.SootMethod.addException(Lsoot/SootClass;)V#Constant(I,0)#1
soot.SootMethod.addException(Lsoot/SootClass;)V#ConditionalBranch(I,eq,12)#2
soot.SootMethod.addException(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#12
soot.SootMethod.addException(Lsoot/SootClass;)V#Get(Ljava/util/List;,NONSTATIC,Lsoot/SootMethod;,exceptions)#13
soot.SootMethod.addException(Lsoot/SootClass;)V#Constant(L;,null)#14
soot.SootMethod.addException(Lsoot/SootClass;)V#ConditionalBranch(Ljava/lang/Object;,ne,22)#15
soot.SootMethod.addException(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#16
soot.SootMethod.addException(Lsoot/SootClass;)V#New(Ljava/util/ArrayList;,0)#17
soot.SootMethod.addException(Lsoot/SootClass;)V#Dup(1,0)#18
soot.SootMethod.addException(Lsoot/SootClass;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#19
soot.SootMethod.addException(Lsoot/SootClass;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/SootMethod;,exceptions)#20
soot.SootMethod.addException(Lsoot/SootClass;)V#Goto(40)#21
soot.SootMethod.addException(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#40
soot.SootMethod.addException(Lsoot/SootClass;)V#Get(Ljava/util/List;,NONSTATIC,Lsoot/SootMethod;,exceptions)#41
soot.SootMethod.addException(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#42
soot.SootMethod.addException(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#43
soot.SootMethod.addException(Lsoot/SootClass;)V#Pop(1)#44
soot.SootMethod.addException(Lsoot/SootClass;)V#Return(V)#45
soot.SootMethod.addExceptionIfAbsent(Lsoot/SootClass;)V#Return(V)#8
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,17)#601
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,1)#602
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#BinaryOp(I,add)#603
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(I,17)#604
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Goto(776)#609
soot.ArrayType.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.ArrayType.hashCode()I#Get(Lsoot/Type;,NONSTATIC,Lsoot/ArrayType;,baseType)#1
soot.ArrayType.hashCode()I#Invoke(VIRTUAL,Ljava/lang/Object;,hashCode,()I)#2
soot.ArrayType.hashCode()I#Constant(I,1127088961)#3
soot.ArrayType.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#4
soot.ArrayType.hashCode()I#Get(I,NONSTATIC,Lsoot/ArrayType;,numDimensions)#5
soot.ArrayType.hashCode()I#BinaryOp(I,mul)#6
soot.ArrayType.hashCode()I#BinaryOp(I,add)#7
soot.ArrayType.hashCode()I#Return(I)#8
soot.BooleanType.hashCode()I#Constant(I,474318298)#0
soot.BooleanType.hashCode()I#Return(I)#1
soot.IntType.hashCode()I#Constant(I,-1220074593)#0
soot.IntType.hashCode()I#Return(I)#1
soot.SootResolver.reResolveHierarchy(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,2)#23
soot.SootResolver.reResolveHierarchy(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#24
soot.SootResolver.reResolveHierarchy(Lsoot/SootClass;)V#CheckCast(Lsoot/SootClass;)#25
soot.SootResolver.reResolveHierarchy(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,3)#26
soot.SootResolver.reResolveHierarchy(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#27
soot.SootResolver.reResolveHierarchy(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,3)#28
soot.SootResolver.reResolveHierarchy(Lsoot/SootClass;)V#Constant(I,1)#29
soot.SootResolver.reResolveHierarchy(Lsoot/SootClass;)V#Invoke(SPECIAL,Lsoot/SootResolver;,addToResolveWorklist,(Lsoot/SootClass;I)V)#30
soot.SootResolver.addToResolveWorklist(Lsoot/SootClass;I)V#Return(V)#4
soot.SootResolver.addToResolveWorklist(Lsoot/Type;I)V#LocalLoad(Ljava/lang/Object;,0)#15
soot.SootResolver.addToResolveWorklist(Lsoot/Type;I)V#LocalLoad(Ljava/lang/Object;,1)#16
soot.SootResolver.addToResolveWorklist(Lsoot/Type;I)V#CheckCast(Lsoot/ArrayType;)#17
soot.SootResolver.addToResolveWorklist(Lsoot/Type;I)V#Get(Lsoot/Type;,NONSTATIC,Lsoot/ArrayType;,baseType)#18
soot.SootResolver.addToResolveWorklist(Lsoot/Type;I)V#LocalLoad(I,2)#19
soot.SootResolver.addToResolveWorklist(Lsoot/Type;I)V#Invoke(SPECIAL,Lsoot/SootResolver;,addToResolveWorklist,(Lsoot/Type;I)V)#20
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,5)#79
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#80
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#CheckCast(Lsoot/SootClass;)#81
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,4)#82
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#83
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,4)#84
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Constant(I,1)#85
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(SPECIAL,Lsoot/SootResolver;,addToResolveWorklist,(Lsoot/SootClass;I)V)#86
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,2)#109
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#110
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#CheckCast(Lsoot/SootClass;)#111
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,3)#112
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#113
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,3)#114
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Constant(I,2)#115
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Invoke(SPECIAL,Lsoot/SootResolver;,addToResolveWorklist,(Lsoot/SootClass;I)V)#116
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#New(Lsoot/coffi/CONSTANT_Integer_info;,0)#167
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Dup(1,0)#168
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Invoke(SPECIAL,Lsoot/coffi/CONSTANT_Integer_info;,<init>,()V)#169
soot.coffi.CONSTANT_Integer_info.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.CONSTANT_Integer_info.<init>()V#Invoke(SPECIAL,Lsoot/coffi/cp_info;,<init>,()V)#1
soot.coffi.CONSTANT_Integer_info.<init>()V#Return(V)#2
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalStore(Ljava/lang/Object;,3)#170
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,3)#171
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#CheckCast(Lsoot/coffi/CONSTANT_Integer_info;)#172
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#173
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readInt,()I)#174
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Conversion(I,J)#175
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Put(J,NONSTATIC,Lsoot/coffi/CONSTANT_Integer_info;,bytes)#176
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#177
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Get(Z,NONSTATIC,Lsoot/coffi/ClassFile;,debug)#178
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Constant(I,0)#179
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#ConditionalBranch(I,eq,426)#180
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,9)#244
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(Ljava/lang/String;,"LocalVariableTable")#245
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/lang/String;,compareTo,(Ljava/lang/String;)I)#246
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(I,0)#247
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#ConditionalBranch(I,ne,305)#248
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,9)#305
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(Ljava/lang/String;,"LocalVariableTypeTable")#306
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/lang/String;,compareTo,(Ljava/lang/String;)I)#307
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(I,0)#308
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#ConditionalBranch(I,ne,366)#309
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,9)#366
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(Ljava/lang/String;,"Synthetic")#367
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/lang/String;,compareTo,(Ljava/lang/String;)I)#368
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(I,0)#369
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#ConditionalBranch(I,ne,378)#370
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,9)#378
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(Ljava/lang/String;,"Signature")#379
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/lang/String;,compareTo,(Ljava/lang/String;)I)#380
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(I,0)#381
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#ConditionalBranch(I,ne,394)#382
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#New(Lsoot/coffi/Signature_attribute;,0)#383
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Dup(1,0)#384
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(SPECIAL,Lsoot/coffi/Signature_attribute;,<init>,()V)#385
soot.coffi.Signature_attribute.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Signature_attribute.<init>()V#Invoke(SPECIAL,Lsoot/coffi/attribute_info;,<init>,()V)#1
soot.coffi.Signature_attribute.<init>()V#Return(V)#2
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(Ljava/lang/Object;,10)#386
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#387
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,1)#388
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#389
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put(I,NONSTATIC,Lsoot/coffi/Signature_attribute;,signature_index)#390
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#391
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(Ljava/lang/Object;,4)#392
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Goto(905)#393
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalLoad(I,5)#70
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#Constant(I,1)#71
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#BinaryOp(I,add)#72
soot.coffi.ClassFile.readMethods(Ljava/io/DataInputStream;)Z#LocalStore(I,5)#73
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Invoke(STATIC,Lsoot/LongType;,v,()Lsoot/LongType;)#82
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(Ljava/lang/Object;,7)#83
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(I,4)#84
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Constant(I,1)#85
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#BinaryOp(I,add)#86
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(I,4)#87
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Goto(176)#88
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#643
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#644
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#645
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/method_info;,attributes)#646
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,15)#647
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#648
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/Signature_attribute;)#649
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/Signature_attribute;,signature_index)#650
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#651
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/CONSTANT_Utf8_info;)#652
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,convert,()Ljava/lang/String;)#653
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,16)#654
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,14)#655
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#New(Lsoot/tagkit/SignatureTag;,0)#656
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Dup(1,0)#657
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,16)#658
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(SPECIAL,Lsoot/tagkit/SignatureTag;,<init>,(Ljava/lang/String;)V)#659
soot.tagkit.SignatureTag.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.tagkit.SignatureTag.<init>(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.tagkit.SignatureTag.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.tagkit.SignatureTag.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.tagkit.SignatureTag.<init>(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/tagkit/SignatureTag;,signature)#4
soot.tagkit.SignatureTag.<init>(Ljava/lang/String;)V#Return(V)#5
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,addTag,(Lsoot/tagkit/Tag;)V)#660
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Goto(776)#661
soot.BooleanType.toString()Ljava/lang/String;#Constant(Ljava/lang/String;,"boolean")#0
soot.BooleanType.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#1
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#LocalLoad(I,2)#35
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#Constant(I,1)#36
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#BinaryOp(I,add)#37
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#LocalLoad(Ljava/lang/Object;,0)#38
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#Get([Lsoot/util/Numberable;,NONSTATIC,Lsoot/util/SmallNumberedMap;,array)#39
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#ArrayLength()#40
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#Constant(I,1)#41
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#BinaryOp(I,sub)#42
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#BinaryOp(I,and)#43
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#LocalStore(I,2)#44
soot.util.SmallNumberedMap.findPosition(Lsoot/util/Numberable;)I#Goto(19)#45
soot.SootClass.hasSuperclass()Z#Constant(I,0)#9
soot.SootClass.hasSuperclass()Z#Return(I)#10
soot.SootResolver.processResolveWorklist()V#LocalLoad(Ljava/lang/Object;,0)#97
soot.SootResolver.processResolveWorklist()V#LocalLoad(Ljava/lang/Object;,2)#98
soot.SootResolver.processResolveWorklist()V#Invoke(SPECIAL,Lsoot/SootResolver;,bringToHierarchy,(Lsoot/SootClass;)V)#99
soot.SootResolver.bringToHierarchy(Lsoot/SootClass;)V#Return(V)#4
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#New(Lsoot/coffi/CONSTANT_InterfaceMethodref_info;,0)#110
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Dup(1,0)#111
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Invoke(SPECIAL,Lsoot/coffi/CONSTANT_InterfaceMethodref_info;,<init>,()V)#112
soot.coffi.CONSTANT_InterfaceMethodref_info.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.CONSTANT_InterfaceMethodref_info.<init>()V#Invoke(SPECIAL,Lsoot/coffi/cp_info;,<init>,()V)#1
soot.coffi.CONSTANT_InterfaceMethodref_info.<init>()V#Return(V)#2
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalStore(Ljava/lang/Object;,3)#113
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,3)#114
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#CheckCast(Lsoot/coffi/CONSTANT_InterfaceMethodref_info;)#115
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#116
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#117
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Put(I,NONSTATIC,Lsoot/coffi/CONSTANT_InterfaceMethodref_info;,class_index)#118
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,3)#119
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#CheckCast(Lsoot/coffi/CONSTANT_InterfaceMethodref_info;)#120
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#121
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#122
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Put(I,NONSTATIC,Lsoot/coffi/CONSTANT_InterfaceMethodref_info;,name_and_type_index)#123
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#124
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Get(Z,NONSTATIC,Lsoot/coffi/ClassFile;,debug)#125
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Constant(I,0)#126
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#ConditionalBranch(I,eq,426)#127
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,9)#394
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(Ljava/lang/String;,"Deprecated")#395
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/lang/String;,compareTo,(Ljava/lang/String;)I)#396
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(I,0)#397
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#ConditionalBranch(I,ne,406)#398
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#New(Lsoot/coffi/Deprecated_attribute;,0)#399
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Dup(1,0)#400
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(SPECIAL,Lsoot/coffi/Deprecated_attribute;,<init>,()V)#401
soot.coffi.Deprecated_attribute.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Deprecated_attribute.<init>()V#Invoke(SPECIAL,Lsoot/coffi/attribute_info;,<init>,()V)#1
soot.coffi.Deprecated_attribute.<init>()V#Return(V)#2
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(Ljava/lang/Object;,10)#402
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#403
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(Ljava/lang/Object;,4)#404
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Goto(905)#405
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,9)#406
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(Ljava/lang/String;,"EnclosingMethod")#407
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/lang/String;,compareTo,(Ljava/lang/String;)I)#408
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(I,0)#409
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#ConditionalBranch(I,ne,426)#410
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,9)#426
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(Ljava/lang/String;,"InnerClasses")#427
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/lang/String;,compareTo,(Ljava/lang/String;)I)#428
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(I,0)#429
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#ConditionalBranch(I,ne,483)#430
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,9)#483
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(Ljava/lang/String;,"RuntimeVisibleAnnotations")#484
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/lang/String;,compareTo,(Ljava/lang/String;)I)#485
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(I,0)#486
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#ConditionalBranch(I,ne,541)#487
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#New(Lsoot/coffi/RuntimeVisibleAnnotations_attribute;,0)#488
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Dup(1,0)#489
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(SPECIAL,Lsoot/coffi/RuntimeVisibleAnnotations_attribute;,<init>,()V)#490
soot.coffi.RuntimeVisibleAnnotations_attribute.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.RuntimeVisibleAnnotations_attribute.<init>()V#Invoke(SPECIAL,Lsoot/coffi/attribute_info;,<init>,()V)#1
soot.coffi.RuntimeVisibleAnnotations_attribute.<init>()V#Return(V)#2
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(Ljava/lang/Object;,10)#491
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#492
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,1)#493
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#494
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put(I,NONSTATIC,Lsoot/coffi/RuntimeVisibleAnnotations_attribute;,number_of_annotations)#495
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#496
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#497
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Get(I,NONSTATIC,Lsoot/coffi/RuntimeVisibleAnnotations_attribute;,number_of_annotations)#498
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#New([Lsoot/coffi/annotation;,1)#499
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put([Lsoot/coffi/annotation;,NONSTATIC,Lsoot/coffi/RuntimeVisibleAnnotations_attribute;,annotations)#500
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(I,0)#501
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(I,11)#502
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Goto(534)#503
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(I,11)#534
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#535
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Get(I,NONSTATIC,Lsoot/coffi/RuntimeVisibleAnnotations_attribute;,number_of_annotations)#536
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#ConditionalBranch(I,lt,504)#537
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#New(Lsoot/coffi/annotation;,0)#504
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Dup(1,0)#505
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(SPECIAL,Lsoot/coffi/annotation;,<init>,()V)#506
soot.coffi.annotation.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.annotation.<init>()V#Invoke(SPECIAL,Lsoot/coffi/attribute_info;,<init>,()V)#1
soot.coffi.annotation.<init>()V#Return(V)#2
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(Ljava/lang/Object;,12)#507
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,12)#508
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,1)#509
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#510
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put(I,NONSTATIC,Lsoot/coffi/annotation;,type_index)#511
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,12)#512
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,1)#513
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#514
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put(I,NONSTATIC,Lsoot/coffi/annotation;,num_element_value_pairs)#515
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,12)#516
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,0)#517
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,12)#518
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Get(I,NONSTATIC,Lsoot/coffi/annotation;,num_element_value_pairs)#519
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,1)#520
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(I,1)#521
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(I,0)#522
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(SPECIAL,Lsoot/coffi/ClassFile;,readElementValues,(ILjava/io/DataInputStream;ZI)[Lsoot/coffi/element_value;)#523
soot.coffi.ClassFile.readElementValues(ILjava/io/DataInputStream;ZI)[Lsoot/coffi/element_value;#LocalLoad(I,1)#0
soot.coffi.ClassFile.readElementValues(ILjava/io/DataInputStream;ZI)[Lsoot/coffi/element_value;#New([Lsoot/coffi/element_value;,1)#1
soot.coffi.ClassFile.readElementValues(ILjava/io/DataInputStream;ZI)[Lsoot/coffi/element_value;#LocalStore(Ljava/lang/Object;,5)#2
soot.coffi.ClassFile.readElementValues(ILjava/io/DataInputStream;ZI)[Lsoot/coffi/element_value;#Constant(I,0)#3
soot.coffi.ClassFile.readElementValues(ILjava/io/DataInputStream;ZI)[Lsoot/coffi/element_value;#LocalStore(I,6)#4
soot.coffi.ClassFile.readElementValues(ILjava/io/DataInputStream;ZI)[Lsoot/coffi/element_value;#Goto(200)#5
soot.coffi.ClassFile.readElementValues(ILjava/io/DataInputStream;ZI)[Lsoot/coffi/element_value;#LocalLoad(I,6)#200
soot.coffi.ClassFile.readElementValues(ILjava/io/DataInputStream;ZI)[Lsoot/coffi/element_value;#LocalLoad(I,1)#201
soot.coffi.ClassFile.readElementValues(ILjava/io/DataInputStream;ZI)[Lsoot/coffi/element_value;#ConditionalBranch(I,lt,6)#202
soot.coffi.ClassFile.readElementValues(ILjava/io/DataInputStream;ZI)[Lsoot/coffi/element_value;#LocalLoad(Ljava/lang/Object;,5)#203
soot.coffi.ClassFile.readElementValues(ILjava/io/DataInputStream;ZI)[Lsoot/coffi/element_value;#Return(Ljava/lang/Object;)#204
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put([Lsoot/coffi/element_value;,NONSTATIC,Lsoot/coffi/annotation;,element_value_pairs)#524
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#525
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Get([Lsoot/coffi/annotation;,NONSTATIC,Lsoot/coffi/RuntimeVisibleAnnotations_attribute;,annotations)#526
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(I,11)#527
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,12)#528
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#ArrayStore(Ljava/lang/Object;)#529
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(I,11)#530
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(I,1)#531
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#BinaryOp(I,add)#532
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(I,11)#533
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#538
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(Ljava/lang/Object;,4)#539
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Goto(905)#540
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#New(Lsoot/coffi/InnerClasses_attribute;,0)#431
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Dup(1,0)#432
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(SPECIAL,Lsoot/coffi/InnerClasses_attribute;,<init>,()V)#433
soot.coffi.InnerClasses_attribute.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.InnerClasses_attribute.<init>()V#Invoke(SPECIAL,Lsoot/coffi/attribute_info;,<init>,()V)#1
soot.coffi.InnerClasses_attribute.<init>()V#Return(V)#2
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(Ljava/lang/Object;,10)#434
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#435
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,1)#436
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#437
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put(I,NONSTATIC,Lsoot/coffi/InnerClasses_attribute;,inner_classes_length)#438
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#439
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#440
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Get(I,NONSTATIC,Lsoot/coffi/InnerClasses_attribute;,inner_classes_length)#441
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#New([Lsoot/coffi/inner_class_entry;,1)#442
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put([Lsoot/coffi/inner_class_entry;,NONSTATIC,Lsoot/coffi/InnerClasses_attribute;,inner_classes)#443
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(I,0)#444
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(I,11)#445
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Goto(476)#446
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(I,11)#476
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#477
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Get(I,NONSTATIC,Lsoot/coffi/InnerClasses_attribute;,inner_classes_length)#478
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#ConditionalBranch(I,lt,447)#479
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#New(Lsoot/coffi/inner_class_entry;,0)#447
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Dup(1,0)#448
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(SPECIAL,Lsoot/coffi/inner_class_entry;,<init>,()V)#449
soot.coffi.inner_class_entry.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.inner_class_entry.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.coffi.inner_class_entry.<init>()V#Return(V)#2
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(Ljava/lang/Object;,12)#450
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,12)#451
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,1)#452
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#453
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put(I,NONSTATIC,Lsoot/coffi/inner_class_entry;,inner_class_index)#454
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,12)#455
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,1)#456
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#457
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put(I,NONSTATIC,Lsoot/coffi/inner_class_entry;,outer_class_index)#458
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,12)#459
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,1)#460
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#461
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put(I,NONSTATIC,Lsoot/coffi/inner_class_entry;,name_index)#462
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,12)#463
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,1)#464
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#465
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Put(I,NONSTATIC,Lsoot/coffi/inner_class_entry;,access_flags)#466
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#467
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Get([Lsoot/coffi/inner_class_entry;,NONSTATIC,Lsoot/coffi/InnerClasses_attribute;,inner_classes)#468
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(I,11)#469
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,12)#470
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#ArrayStore(Ljava/lang/Object;)#471
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(I,11)#472
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Constant(I,1)#473
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#BinaryOp(I,add)#474
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(I,11)#475
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalLoad(Ljava/lang/Object;,10)#480
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#LocalStore(Ljava/lang/Object;,4)#481
soot.coffi.ClassFile.readAttributes(Ljava/io/DataInputStream;I[Lsoot/coffi/attribute_info;)Z#Goto(905)#482
soot.SootClass.implementsInterface(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,2)#8
soot.SootClass.implementsInterface(Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#9
soot.SootClass.implementsInterface(Ljava/lang/String;)Z#CheckCast(Lsoot/SootClass;)#10
soot.SootClass.implementsInterface(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,3)#11
soot.SootClass.implementsInterface(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#12
soot.SootClass.implementsInterface(Ljava/lang/String;)Z#Invoke(VIRTUAL,Lsoot/SootClass;,getName,()Ljava/lang/String;)#13
soot.SootClass.implementsInterface(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#14
soot.SootClass.implementsInterface(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#15
soot.SootClass.implementsInterface(Ljava/lang/String;)Z#Constant(I,0)#16
soot.SootClass.implementsInterface(Ljava/lang/String;)Z#ConditionalBranch(I,eq,20)#17
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Invoke(STATIC,Lsoot/CharType;,v,()Lsoot/CharType;)#33
soot.CharType.v()Lsoot/CharType;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.CharType.v()Lsoot/CharType;#Invoke(VIRTUAL,Lsoot/G;,soot_CharType,()Lsoot/CharType;)#1
soot.Singletons.soot_CharType()Lsoot/CharType;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_CharType()Lsoot/CharType;#Get(Lsoot/CharType;,NONSTATIC,Lsoot/Singletons;,instance_soot_CharType)#1
soot.Singletons.soot_CharType()Lsoot/CharType;#Constant(L;,null)#2
soot.Singletons.soot_CharType()Lsoot/CharType;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_CharType()Lsoot/CharType;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_CharType()Lsoot/CharType;#New(Lsoot/CharType;,0)#5
soot.Singletons.soot_CharType()Lsoot/CharType;#Dup(1,0)#6
soot.Singletons.soot_CharType()Lsoot/CharType;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_CharType()Lsoot/CharType;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_CharType()Lsoot/CharType;#Invoke(SPECIAL,Lsoot/CharType;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.CharType.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.CharType.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/PrimType;,<init>,()V)#1
soot.CharType.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_CharType()Lsoot/CharType;#Put(Lsoot/CharType;,NONSTATIC,Lsoot/Singletons;,instance_soot_CharType)#10
soot.Singletons.soot_CharType()Lsoot/CharType;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_CharType()Lsoot/CharType;#Get(Lsoot/CharType;,NONSTATIC,Lsoot/Singletons;,instance_soot_CharType)#12
soot.Singletons.soot_CharType()Lsoot/CharType;#Return(Ljava/lang/Object;)#13
soot.CharType.v()Lsoot/CharType;#Return(Ljava/lang/Object;)#2
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalStore(Ljava/lang/Object;,4)#34
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Goto(133)#35
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Invoke(STATIC,Lsoot/IntType;,v,()Lsoot/IntType;)#57
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalStore(Ljava/lang/Object;,4)#58
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Goto(133)#59
soot.CharType.toString()Ljava/lang/String;#Constant(Ljava/lang/String;,"char")#0
soot.CharType.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#1
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#320
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/field_info;,attributes)#321
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,14)#322
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#323
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Instanceof(Lsoot/coffi/Synthetic_attribute;)#324
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#325
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,eq,333)#326
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#333
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/field_info;,attributes)#334
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,14)#335
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#336
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Instanceof(Lsoot/coffi/Deprecated_attribute;)#337
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#338
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,eq,346)#339
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#346
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/field_info;,attributes)#347
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,14)#348
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#349
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Instanceof(Lsoot/coffi/Signature_attribute;)#350
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#351
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,eq,372)#352
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#353
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#354
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#355
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/field_info;,attributes)#356
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,14)#357
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#358
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/Signature_attribute;)#359
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/Signature_attribute;,signature_index)#360
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#361
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/CONSTANT_Utf8_info;)#362
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,convert,()Ljava/lang/String;)#363
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,15)#364
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,13)#365
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#New(Lsoot/tagkit/SignatureTag;,0)#366
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Dup(1,0)#367
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,15)#368
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(SPECIAL,Lsoot/tagkit/SignatureTag;,<init>,(Ljava/lang/String;)V)#369
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/SootField;,addTag,(Lsoot/tagkit/Tag;)V)#370
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Goto(425)#371
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Invoke(STATIC,Lsoot/CharType;,v,()Lsoot/CharType;)#54
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(Ljava/lang/Object;,7)#55
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(I,4)#56
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Constant(I,1)#57
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#BinaryOp(I,add)#58
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(I,4)#59
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Goto(176)#60
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Invoke(STATIC,Lsoot/DoubleType;,v,()Lsoot/DoubleType;)#61
soot.DoubleType.v()Lsoot/DoubleType;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.DoubleType.v()Lsoot/DoubleType;#Invoke(VIRTUAL,Lsoot/G;,soot_DoubleType,()Lsoot/DoubleType;)#1
soot.Singletons.soot_DoubleType()Lsoot/DoubleType;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_DoubleType()Lsoot/DoubleType;#Get(Lsoot/DoubleType;,NONSTATIC,Lsoot/Singletons;,instance_soot_DoubleType)#1
soot.Singletons.soot_DoubleType()Lsoot/DoubleType;#Constant(L;,null)#2
soot.Singletons.soot_DoubleType()Lsoot/DoubleType;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_DoubleType()Lsoot/DoubleType;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_DoubleType()Lsoot/DoubleType;#New(Lsoot/DoubleType;,0)#5
soot.Singletons.soot_DoubleType()Lsoot/DoubleType;#Dup(1,0)#6
soot.Singletons.soot_DoubleType()Lsoot/DoubleType;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_DoubleType()Lsoot/DoubleType;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_DoubleType()Lsoot/DoubleType;#Invoke(SPECIAL,Lsoot/DoubleType;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.DoubleType.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.DoubleType.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/PrimType;,<init>,()V)#1
soot.DoubleType.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_DoubleType()Lsoot/DoubleType;#Put(Lsoot/DoubleType;,NONSTATIC,Lsoot/Singletons;,instance_soot_DoubleType)#10
soot.Singletons.soot_DoubleType()Lsoot/DoubleType;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_DoubleType()Lsoot/DoubleType;#Get(Lsoot/DoubleType;,NONSTATIC,Lsoot/Singletons;,instance_soot_DoubleType)#12
soot.Singletons.soot_DoubleType()Lsoot/DoubleType;#Return(Ljava/lang/Object;)#13
soot.DoubleType.v()Lsoot/DoubleType;#Return(Ljava/lang/Object;)#2
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(Ljava/lang/Object;,7)#62
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(I,4)#63
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Constant(I,1)#64
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#BinaryOp(I,add)#65
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(I,4)#66
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Goto(176)#67
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Invoke(STATIC,Lsoot/FloatType;,v,()Lsoot/FloatType;)#68
soot.FloatType.v()Lsoot/FloatType;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.FloatType.v()Lsoot/FloatType;#Invoke(VIRTUAL,Lsoot/G;,soot_FloatType,()Lsoot/FloatType;)#1
soot.Singletons.soot_FloatType()Lsoot/FloatType;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_FloatType()Lsoot/FloatType;#Get(Lsoot/FloatType;,NONSTATIC,Lsoot/Singletons;,instance_soot_FloatType)#1
soot.Singletons.soot_FloatType()Lsoot/FloatType;#Constant(L;,null)#2
soot.Singletons.soot_FloatType()Lsoot/FloatType;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_FloatType()Lsoot/FloatType;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_FloatType()Lsoot/FloatType;#New(Lsoot/FloatType;,0)#5
soot.Singletons.soot_FloatType()Lsoot/FloatType;#Dup(1,0)#6
soot.Singletons.soot_FloatType()Lsoot/FloatType;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_FloatType()Lsoot/FloatType;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_FloatType()Lsoot/FloatType;#Invoke(SPECIAL,Lsoot/FloatType;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.FloatType.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.FloatType.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/PrimType;,<init>,()V)#1
soot.FloatType.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_FloatType()Lsoot/FloatType;#Put(Lsoot/FloatType;,NONSTATIC,Lsoot/Singletons;,instance_soot_FloatType)#10
soot.Singletons.soot_FloatType()Lsoot/FloatType;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_FloatType()Lsoot/FloatType;#Get(Lsoot/FloatType;,NONSTATIC,Lsoot/Singletons;,instance_soot_FloatType)#12
soot.Singletons.soot_FloatType()Lsoot/FloatType;#Return(Ljava/lang/Object;)#13
soot.FloatType.v()Lsoot/FloatType;#Return(Ljava/lang/Object;)#2
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(Ljava/lang/Object;,7)#69
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(I,4)#70
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Constant(I,1)#71
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#BinaryOp(I,add)#72
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(I,4)#73
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Goto(176)#74
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Invoke(STATIC,Lsoot/ByteType;,v,()Lsoot/ByteType;)#47
soot.ByteType.v()Lsoot/ByteType;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.ByteType.v()Lsoot/ByteType;#Invoke(VIRTUAL,Lsoot/G;,soot_ByteType,()Lsoot/ByteType;)#1
soot.Singletons.soot_ByteType()Lsoot/ByteType;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_ByteType()Lsoot/ByteType;#Get(Lsoot/ByteType;,NONSTATIC,Lsoot/Singletons;,instance_soot_ByteType)#1
soot.Singletons.soot_ByteType()Lsoot/ByteType;#Constant(L;,null)#2
soot.Singletons.soot_ByteType()Lsoot/ByteType;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_ByteType()Lsoot/ByteType;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_ByteType()Lsoot/ByteType;#New(Lsoot/ByteType;,0)#5
soot.Singletons.soot_ByteType()Lsoot/ByteType;#Dup(1,0)#6
soot.Singletons.soot_ByteType()Lsoot/ByteType;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_ByteType()Lsoot/ByteType;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_ByteType()Lsoot/ByteType;#Invoke(SPECIAL,Lsoot/ByteType;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.ByteType.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.ByteType.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/PrimType;,<init>,()V)#1
soot.ByteType.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_ByteType()Lsoot/ByteType;#Put(Lsoot/ByteType;,NONSTATIC,Lsoot/Singletons;,instance_soot_ByteType)#10
soot.Singletons.soot_ByteType()Lsoot/ByteType;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_ByteType()Lsoot/ByteType;#Get(Lsoot/ByteType;,NONSTATIC,Lsoot/Singletons;,instance_soot_ByteType)#12
soot.Singletons.soot_ByteType()Lsoot/ByteType;#Return(Ljava/lang/Object;)#13
soot.ByteType.v()Lsoot/ByteType;#Return(Ljava/lang/Object;)#2
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(Ljava/lang/Object;,7)#48
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(I,4)#49
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Constant(I,1)#50
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#BinaryOp(I,add)#51
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(I,4)#52
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Goto(176)#53
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#36
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#37
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#CheckCast(Lsoot/coffi/CONSTANT_InterfaceMethodref_info;)#38
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_InterfaceMethodref_info;,name_and_type_index)#39
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#Invoke(STATIC,Lsoot/coffi/cp_info;,getTypeDescr,([Lsoot/coffi/cp_info;I)Ljava/lang/String;)#40
soot.coffi.cp_info.getTypeDescr([Lsoot/coffi/cp_info;I)Ljava/lang/String;#Return(Ljava/lang/Object;)#41
soot.ByteType.toString()Ljava/lang/String;#Constant(Ljava/lang/String;,"byte")#0
soot.ByteType.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#1
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,14)#630
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#New(Lsoot/tagkit/DeprecatedTag;,0)#631
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Dup(1,0)#632
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(SPECIAL,Lsoot/tagkit/DeprecatedTag;,<init>,()V)#633
soot.tagkit.DeprecatedTag.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.tagkit.DeprecatedTag.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.tagkit.DeprecatedTag.<init>()V#Return(V)#2
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,addTag,(Lsoot/tagkit/Tag;)V)#634
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Goto(776)#635
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#676
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,14)#677
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#678
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/method_info;,attributes)#679
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,15)#680
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#681
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#682
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#683
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(SPECIAL,Lsoot/coffi/Util;,addAnnotationVisibilityAttribute,(Lsoot/tagkit/Host;Lsoot/coffi/attribute_info;Lsoot/coffi/ClassFile;Ljava/util/List;)V)#684
soot.coffi.Util.addAnnotationVisibilityAttribute(Lsoot/tagkit/Host;Lsoot/coffi/attribute_info;Lsoot/coffi/ClassFile;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#0
soot.coffi.Util.addAnnotationVisibilityAttribute(Lsoot/tagkit/Host;Lsoot/coffi/attribute_info;Lsoot/coffi/ClassFile;Ljava/util/List;)V#Instanceof(Lsoot/coffi/RuntimeVisibleAnnotations_attribute;)#1
soot.coffi.Util.addAnnotationVisibilityAttribute(Lsoot/tagkit/Host;Lsoot/coffi/attribute_info;Lsoot/coffi/ClassFile;Ljava/util/List;)V#Constant(I,0)#2
soot.coffi.Util.addAnnotationVisibilityAttribute(Lsoot/tagkit/Host;Lsoot/coffi/attribute_info;Lsoot/coffi/ClassFile;Ljava/util/List;)V#ConditionalBranch(I,eq,22)#3
soot.coffi.Util.addAnnotationVisibilityAttribute(Lsoot/tagkit/Host;Lsoot/coffi/attribute_info;Lsoot/coffi/ClassFile;Ljava/util/List;)V#New(Lsoot/tagkit/VisibilityAnnotationTag;,0)#4
soot.coffi.Util.addAnnotationVisibilityAttribute(Lsoot/tagkit/Host;Lsoot/coffi/attribute_info;Lsoot/coffi/ClassFile;Ljava/util/List;)V#Dup(1,0)#5
soot.coffi.Util.addAnnotationVisibilityAttribute(Lsoot/tagkit/Host;Lsoot/coffi/attribute_info;Lsoot/coffi/ClassFile;Ljava/util/List;)V#Constant(I,0)#6
soot.coffi.Util.addAnnotationVisibilityAttribute(Lsoot/tagkit/Host;Lsoot/coffi/attribute_info;Lsoot/coffi/ClassFile;Ljava/util/List;)V#Invoke(SPECIAL,Lsoot/tagkit/VisibilityAnnotationTag;,<init>,(I)V)#7
soot.tagkit.VisibilityAnnotationTag.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.tagkit.VisibilityAnnotationTag.<init>(I)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.tagkit.VisibilityAnnotationTag.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.tagkit.VisibilityAnnotationTag.<init>(I)V#LocalLoad(I,1)#3
soot.tagkit.VisibilityAnnotationTag.<init>(I)V#Put(I,NONSTATIC,Lsoot/tagkit/VisibilityAnnotationTag;,visibility)#4
soot.tagkit.VisibilityAnnotationTag.<init>(I)V#Return(V)#5
soot.coffi.Util.addAnnotationVisibilityAttribute(Lsoot/tagkit/Host;Lsoot/coffi/attribute_info;Lsoot/coffi/ClassFile;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,5)#8
soot.coffi.Util.addAnnotationVisibilityAttribute(Lsoot/tagkit/Host;Lsoot/coffi/attribute_info;Lsoot/coffi/ClassFile;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#9
soot.coffi.Util.addAnnotationVisibilityAttribute(Lsoot/tagkit/Host;Lsoot/coffi/attribute_info;Lsoot/coffi/ClassFile;Ljava/util/List;)V#CheckCast(Lsoot/coffi/RuntimeVisibleAnnotations_attribute;)#10
soot.coffi.Util.addAnnotationVisibilityAttribute(Lsoot/tagkit/Host;Lsoot/coffi/attribute_info;Lsoot/coffi/ClassFile;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,6)#11
soot.coffi.Util.addAnnotationVisibilityAttribute(Lsoot/tagkit/Host;Lsoot/coffi/attribute_info;Lsoot/coffi/ClassFile;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#12
soot.coffi.Util.addAnnotationVisibilityAttribute(Lsoot/tagkit/Host;Lsoot/coffi/attribute_info;Lsoot/coffi/ClassFile;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#13
soot.coffi.Util.addAnnotationVisibilityAttribute(Lsoot/tagkit/Host;Lsoot/coffi/attribute_info;Lsoot/coffi/ClassFile;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/RuntimeVisibleAnnotations_attribute;,number_of_annotations)#14
soot.coffi.Util.addAnnotationVisibilityAttribute(Lsoot/tagkit/Host;Lsoot/coffi/attribute_info;Lsoot/coffi/ClassFile;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#15
soot.coffi.Util.addAnnotationVisibilityAttribute(Lsoot/tagkit/Host;Lsoot/coffi/attribute_info;Lsoot/coffi/ClassFile;Ljava/util/List;)V#Get([Lsoot/coffi/annotation;,NONSTATIC,Lsoot/coffi/RuntimeVisibleAnnotations_attribute;,annotations)#16
soot.coffi.Util.addAnnotationVisibilityAttribute(Lsoot/tagkit/Host;Lsoot/coffi/attribute_info;Lsoot/coffi/ClassFile;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#17
soot.coffi.Util.addAnnotationVisibilityAttribute(Lsoot/tagkit/Host;Lsoot/coffi/attribute_info;Lsoot/coffi/ClassFile;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,5)#18
soot.coffi.Util.addAnnotationVisibilityAttribute(Lsoot/tagkit/Host;Lsoot/coffi/attribute_info;Lsoot/coffi/ClassFile;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,4)#19
soot.coffi.Util.addAnnotationVisibilityAttribute(Lsoot/tagkit/Host;Lsoot/coffi/attribute_info;Lsoot/coffi/ClassFile;Ljava/util/List;)V#Invoke(SPECIAL,Lsoot/coffi/Util;,addAnnotations,(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V)#20
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#Constant(I,0)#0
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#LocalStore(I,6)#1
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#Goto(56)#2
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#LocalLoad(I,6)#56
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#LocalLoad(I,1)#57
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#ConditionalBranch(I,lt,3)#58
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#3
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#LocalLoad(I,6)#4
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#5
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,7)#6
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#7
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#8
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,7)#9
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/annotation;,type_index)#10
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#11
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#CheckCast(Lsoot/coffi/CONSTANT_Utf8_info;)#12
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,convert,()Ljava/lang/String;)#13
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,8)#14
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#15
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#Constant(I,1)#16
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#17
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#18
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#Constant(I,1)#19
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#BinaryOp(I,sub)#20
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#Invoke(VIRTUAL,Ljava/lang/String;,substring,(II)Ljava/lang/String;)#21
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,9)#22
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,9)#23
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#Constant(I,47)#24
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#Constant(I,46)#25
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#Invoke(VIRTUAL,Ljava/lang/String;,replace,(CC)Ljava/lang/String;)#26
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,9)#27
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,5)#28
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,9)#29
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#30
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#Pop(1)#31
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,7)#32
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/annotation;,num_element_value_pairs)#33
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#LocalStore(I,10)#34
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#New(Lsoot/tagkit/AnnotationTag;,0)#35
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#Dup(1,0)#36
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#37
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#LocalLoad(I,10)#38
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#Invoke(SPECIAL,Lsoot/tagkit/AnnotationTag;,<init>,(Ljava/lang/String;I)V)#39
soot.tagkit.AnnotationTag.<init>(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.tagkit.AnnotationTag.<init>(Ljava/lang/String;I)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.tagkit.AnnotationTag.<init>(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.tagkit.AnnotationTag.<init>(Ljava/lang/String;I)V#Constant(I,0)#3
soot.tagkit.AnnotationTag.<init>(Ljava/lang/String;I)V#Put(I,NONSTATIC,Lsoot/tagkit/AnnotationTag;,numElems)#4
soot.tagkit.AnnotationTag.<init>(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.tagkit.AnnotationTag.<init>(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,1)#6
soot.tagkit.AnnotationTag.<init>(Ljava/lang/String;I)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/tagkit/AnnotationTag;,type)#7
soot.tagkit.AnnotationTag.<init>(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.tagkit.AnnotationTag.<init>(Ljava/lang/String;I)V#LocalLoad(I,2)#9
soot.tagkit.AnnotationTag.<init>(Ljava/lang/String;I)V#Put(I,NONSTATIC,Lsoot/tagkit/AnnotationTag;,numElems)#10
soot.tagkit.AnnotationTag.<init>(Ljava/lang/String;I)V#Return(V)#11
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,11)#40
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,11)#41
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#42
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#LocalLoad(I,10)#43
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#44
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,7)#45
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#Get([Lsoot/coffi/element_value;,NONSTATIC,Lsoot/coffi/annotation;,element_value_pairs)#46
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#Invoke(SPECIAL,Lsoot/coffi/Util;,createElementTags,(ILsoot/coffi/ClassFile;[Lsoot/coffi/element_value;)Ljava/util/ArrayList;)#47
soot.coffi.Util.createElementTags(ILsoot/coffi/ClassFile;[Lsoot/coffi/element_value;)Ljava/util/ArrayList;#New(Ljava/util/ArrayList;,0)#0
soot.coffi.Util.createElementTags(ILsoot/coffi/ClassFile;[Lsoot/coffi/element_value;)Ljava/util/ArrayList;#Dup(1,0)#1
soot.coffi.Util.createElementTags(ILsoot/coffi/ClassFile;[Lsoot/coffi/element_value;)Ljava/util/ArrayList;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#2
soot.coffi.Util.createElementTags(ILsoot/coffi/ClassFile;[Lsoot/coffi/element_value;)Ljava/util/ArrayList;#LocalStore(Ljava/lang/Object;,4)#3
soot.coffi.Util.createElementTags(ILsoot/coffi/ClassFile;[Lsoot/coffi/element_value;)Ljava/util/ArrayList;#Constant(I,0)#4
soot.coffi.Util.createElementTags(ILsoot/coffi/ClassFile;[Lsoot/coffi/element_value;)Ljava/util/ArrayList;#LocalStore(I,5)#5
soot.coffi.Util.createElementTags(ILsoot/coffi/ClassFile;[Lsoot/coffi/element_value;)Ljava/util/ArrayList;#Goto(349)#6
soot.coffi.Util.createElementTags(ILsoot/coffi/ClassFile;[Lsoot/coffi/element_value;)Ljava/util/ArrayList;#LocalLoad(I,5)#349
soot.coffi.Util.createElementTags(ILsoot/coffi/ClassFile;[Lsoot/coffi/element_value;)Ljava/util/ArrayList;#LocalLoad(I,1)#350
soot.coffi.Util.createElementTags(ILsoot/coffi/ClassFile;[Lsoot/coffi/element_value;)Ljava/util/ArrayList;#ConditionalBranch(I,lt,7)#351
soot.coffi.Util.createElementTags(ILsoot/coffi/ClassFile;[Lsoot/coffi/element_value;)Ljava/util/ArrayList;#LocalLoad(Ljava/lang/Object;,4)#352
soot.coffi.Util.createElementTags(ILsoot/coffi/ClassFile;[Lsoot/coffi/element_value;)Ljava/util/ArrayList;#Return(Ljava/lang/Object;)#353
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/tagkit/AnnotationTag;,setElems,(Ljava/util/ArrayList;)V)#48
soot.tagkit.AnnotationTag.setElems(Ljava/util/ArrayList;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.tagkit.AnnotationTag.setElems(Ljava/util/ArrayList;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.tagkit.AnnotationTag.setElems(Ljava/util/ArrayList;)V#Put(Ljava/util/ArrayList;,NONSTATIC,Lsoot/tagkit/AnnotationTag;,elems)#2
soot.tagkit.AnnotationTag.setElems(Ljava/util/ArrayList;)V#Return(V)#3
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,4)#49
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,11)#50
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/tagkit/VisibilityAnnotationTag;,addAnnotation,(Lsoot/tagkit/AnnotationTag;)V)#51
soot.tagkit.VisibilityAnnotationTag.addAnnotation(Lsoot/tagkit/AnnotationTag;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.tagkit.VisibilityAnnotationTag.addAnnotation(Lsoot/tagkit/AnnotationTag;)V#Get(Ljava/util/ArrayList;,NONSTATIC,Lsoot/tagkit/VisibilityAnnotationTag;,annotations)#1
soot.tagkit.VisibilityAnnotationTag.addAnnotation(Lsoot/tagkit/AnnotationTag;)V#Constant(L;,null)#2
soot.tagkit.VisibilityAnnotationTag.addAnnotation(Lsoot/tagkit/AnnotationTag;)V#ConditionalBranch(Ljava/lang/Object;,ne,9)#3
soot.tagkit.VisibilityAnnotationTag.addAnnotation(Lsoot/tagkit/AnnotationTag;)V#LocalLoad(Ljava/lang/Object;,0)#4
soot.tagkit.VisibilityAnnotationTag.addAnnotation(Lsoot/tagkit/AnnotationTag;)V#New(Ljava/util/ArrayList;,0)#5
soot.tagkit.VisibilityAnnotationTag.addAnnotation(Lsoot/tagkit/AnnotationTag;)V#Dup(1,0)#6
soot.tagkit.VisibilityAnnotationTag.addAnnotation(Lsoot/tagkit/AnnotationTag;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#7
soot.tagkit.VisibilityAnnotationTag.addAnnotation(Lsoot/tagkit/AnnotationTag;)V#Put(Ljava/util/ArrayList;,NONSTATIC,Lsoot/tagkit/VisibilityAnnotationTag;,annotations)#8
soot.tagkit.VisibilityAnnotationTag.addAnnotation(Lsoot/tagkit/AnnotationTag;)V#LocalLoad(Ljava/lang/Object;,0)#9
soot.tagkit.VisibilityAnnotationTag.addAnnotation(Lsoot/tagkit/AnnotationTag;)V#Get(Ljava/util/ArrayList;,NONSTATIC,Lsoot/tagkit/VisibilityAnnotationTag;,annotations)#10
soot.tagkit.VisibilityAnnotationTag.addAnnotation(Lsoot/tagkit/AnnotationTag;)V#LocalLoad(Ljava/lang/Object;,1)#11
soot.tagkit.VisibilityAnnotationTag.addAnnotation(Lsoot/tagkit/AnnotationTag;)V#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#12
soot.tagkit.VisibilityAnnotationTag.addAnnotation(Lsoot/tagkit/AnnotationTag;)V#Pop(1)#13
soot.tagkit.VisibilityAnnotationTag.addAnnotation(Lsoot/tagkit/AnnotationTag;)V#Return(V)#14
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#LocalLoad(I,6)#52
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#Constant(I,1)#53
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#BinaryOp(I,add)#54
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#LocalStore(I,6)#55
soot.coffi.Util.addAnnotations(I[Lsoot/coffi/annotation;Lsoot/coffi/ClassFile;Lsoot/tagkit/VisibilityAnnotationTag;Ljava/util/List;)V#Return(V)#59
soot.coffi.Util.addAnnotationVisibilityAttribute(Lsoot/tagkit/Host;Lsoot/coffi/attribute_info;Lsoot/coffi/ClassFile;Ljava/util/List;)V#Goto(39)#21
soot.coffi.Util.addAnnotationVisibilityAttribute(Lsoot/tagkit/Host;Lsoot/coffi/attribute_info;Lsoot/coffi/ClassFile;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#39
soot.coffi.Util.addAnnotationVisibilityAttribute(Lsoot/tagkit/Host;Lsoot/coffi/attribute_info;Lsoot/coffi/ClassFile;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,5)#40
soot.coffi.Util.addAnnotationVisibilityAttribute(Lsoot/tagkit/Host;Lsoot/coffi/attribute_info;Lsoot/coffi/ClassFile;Ljava/util/List;)V#Invoke(INTERFACE,Lsoot/tagkit/Host;,addTag,(Lsoot/tagkit/Tag;)V)#41
soot.coffi.Util.addAnnotationVisibilityAttribute(Lsoot/tagkit/Host;Lsoot/coffi/attribute_info;Lsoot/coffi/ClassFile;Ljava/util/List;)V#Return(V)#42
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Goto(776)#685
soot.FloatType.toString()Ljava/lang/String;#Constant(Ljava/lang/String;,"float")#0
soot.FloatType.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#1
soot.DoubleType.toString()Ljava/lang/String;#Constant(Ljava/lang/String;,"double")#0
soot.DoubleType.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#1
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#969
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/ClassFile;,attributes)#970
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,7)#971
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#972
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Instanceof(Lsoot/coffi/InnerClasses_attribute;)#973
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#974
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,eq,1061)#975
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#1061
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/ClassFile;,attributes)#1062
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,7)#1063
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#1064
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Instanceof(Lsoot/coffi/Synthetic_attribute;)#1065
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#1066
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,eq,1074)#1067
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#1074
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/ClassFile;,attributes)#1075
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,7)#1076
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#1077
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Instanceof(Lsoot/coffi/Deprecated_attribute;)#1078
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#1079
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,eq,1087)#1080
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#1087
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/ClassFile;,attributes)#1088
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,7)#1089
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#1090
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Instanceof(Lsoot/coffi/Signature_attribute;)#1091
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#1092
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,eq,1113)#1093
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#1094
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#1095
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#1096
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/ClassFile;,attributes)#1097
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,7)#1098
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#1099
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/Signature_attribute;)#1100
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/Signature_attribute;,signature_index)#1101
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#1102
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/CONSTANT_Utf8_info;)#1103
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,convert,()Ljava/lang/String;)#1104
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,8)#1105
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,4)#1106
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#New(Lsoot/tagkit/SignatureTag;,0)#1107
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Dup(1,0)#1108
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#1109
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(SPECIAL,Lsoot/tagkit/SignatureTag;,<init>,(Ljava/lang/String;)V)#1110
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/SootClass;,addTag,(Lsoot/tagkit/Tag;)V)#1111
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Goto(1231)#1112
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#976
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/ClassFile;,attributes)#977
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,7)#978
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#979
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/InnerClasses_attribute;)#980
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,8)#981
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#982
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(I,9)#983
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Goto(1056)#984
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,9)#1056
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#1057
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/InnerClasses_attribute;,inner_classes_length)#1058
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,lt,985)#1059
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#985
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/inner_class_entry;,NONSTATIC,Lsoot/coffi/InnerClasses_attribute;,inner_classes)#986
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,9)#987
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#988
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,10)#989
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(L;,null)#990
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,11)#991
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(L;,null)#992
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,12)#993
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(L;,null)#994
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,13)#995
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,10)#996
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/inner_class_entry;,inner_class_index)#997
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#998
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,eq,1013)#999
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#1000
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#1001
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#1002
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#1003
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,10)#1004
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/inner_class_entry;,inner_class_index)#1005
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#1006
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/CONSTANT_Class_info;)#1007
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_Class_info;,name_index)#1008
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#1009
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/CONSTANT_Utf8_info;)#1010
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,convert,()Ljava/lang/String;)#1011
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,11)#1012
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,10)#1013
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/inner_class_entry;,outer_class_index)#1014
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#1015
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,eq,1030)#1016
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#1017
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#1018
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#1019
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#1020
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,10)#1021
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/inner_class_entry;,outer_class_index)#1022
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#1023
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/CONSTANT_Class_info;)#1024
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_Class_info;,name_index)#1025
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#1026
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/CONSTANT_Utf8_info;)#1027
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,convert,()Ljava/lang/String;)#1028
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,12)#1029
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,10)#1030
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/inner_class_entry;,name_index)#1031
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#1032
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,eq,1042)#1033
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,4)#1042
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#New(Lsoot/tagkit/InnerClassTag;,0)#1043
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Dup(1,0)#1044
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,11)#1045
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,12)#1046
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,13)#1047
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,10)#1048
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/inner_class_entry;,access_flags)#1049
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(SPECIAL,Lsoot/tagkit/InnerClassTag;,<init>,(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V)#1050
soot.tagkit.InnerClassTag.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.tagkit.InnerClassTag.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.tagkit.InnerClassTag.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.tagkit.InnerClassTag.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.tagkit.InnerClassTag.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/tagkit/InnerClassTag;,innerClass)#4
soot.tagkit.InnerClassTag.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.tagkit.InnerClassTag.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,2)#6
soot.tagkit.InnerClassTag.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/tagkit/InnerClassTag;,outerClass)#7
soot.tagkit.InnerClassTag.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.tagkit.InnerClassTag.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,3)#9
soot.tagkit.InnerClassTag.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/tagkit/InnerClassTag;,name)#10
soot.tagkit.InnerClassTag.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.tagkit.InnerClassTag.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V#LocalLoad(I,4)#12
soot.tagkit.InnerClassTag.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V#Put(I,NONSTATIC,Lsoot/tagkit/InnerClassTag;,accessFlags)#13
soot.tagkit.InnerClassTag.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V#Return(V)#14
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/SootClass;,addTag,(Lsoot/tagkit/Tag;)V)#1051
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,9)#1052
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,1)#1053
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#BinaryOp(I,add)#1054
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(I,9)#1055
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#1034
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#1035
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,10)#1036
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/inner_class_entry;,name_index)#1037
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#1038
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/CONSTANT_Utf8_info;)#1039
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,convert,()Ljava/lang/String;)#1040
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,13)#1041
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Goto(1231)#1060
soot.CharType.hashCode()I#Constant(I,1939776628)#0
soot.CharType.hashCode()I#Return(I)#1
soot.DoubleType.hashCode()I#Constant(I,1268609602)#0
soot.DoubleType.hashCode()I#Return(I)#1
soot.FloatType.hashCode()I#Constant(I,-1471974406)#0
soot.FloatType.hashCode()I#Return(I)#1
soot.ByteType.hashCode()I#Constant(I,-2126703831)#0
soot.ByteType.hashCode()I#Return(I)#1
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#106
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(Ljava/lang/String;,"S")#107
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#108
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(I,0)#109
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#ConditionalBranch(I,eq,114)#110
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#114
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(Ljava/lang/String;,"Z")#115
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#116
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(I,0)#117
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#ConditionalBranch(I,eq,122)#118
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Invoke(STATIC,Lsoot/BooleanType;,v,()Lsoot/BooleanType;)#119
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalStore(Ljava/lang/Object;,4)#120
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Goto(133)#121
soot.SootMethod.throwsException(Lsoot/SootClass;)Z#LocalLoad(Ljava/lang/Object;,0)#4
soot.SootMethod.throwsException(Lsoot/SootClass;)Z#Get(Ljava/util/List;,NONSTATIC,Lsoot/SootMethod;,exceptions)#5
soot.SootMethod.throwsException(Lsoot/SootClass;)Z#LocalLoad(Ljava/lang/Object;,1)#6
soot.SootMethod.throwsException(Lsoot/SootClass;)Z#Invoke(INTERFACE,Ljava/util/List;,contains,(Ljava/lang/Object;)Z)#7
soot.SootMethod.throwsException(Lsoot/SootClass;)Z#Constant(I,0)#8
soot.SootMethod.throwsException(Lsoot/SootClass;)Z#ConditionalBranch(I,eq,12)#9
soot.SootMethod.addException(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#22
soot.SootMethod.addException(Lsoot/SootClass;)V#Get(Ljava/util/List;,NONSTATIC,Lsoot/SootMethod;,exceptions)#23
soot.SootMethod.addException(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#24
soot.SootMethod.addException(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/List;,contains,(Ljava/lang/Object;)Z)#25
soot.SootMethod.addException(Lsoot/SootClass;)V#Constant(I,0)#26
soot.SootMethod.addException(Lsoot/SootClass;)V#ConditionalBranch(I,eq,40)#27
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#New(Lsoot/coffi/CONSTANT_Float_info;,0)#198
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Dup(1,0)#199
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Invoke(SPECIAL,Lsoot/coffi/CONSTANT_Float_info;,<init>,()V)#200
soot.coffi.CONSTANT_Float_info.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.CONSTANT_Float_info.<init>()V#Invoke(SPECIAL,Lsoot/coffi/cp_info;,<init>,()V)#1
soot.coffi.CONSTANT_Float_info.<init>()V#Return(V)#2
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalStore(Ljava/lang/Object;,3)#201
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,3)#202
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#CheckCast(Lsoot/coffi/CONSTANT_Float_info;)#203
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#204
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readInt,()I)#205
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Conversion(I,J)#206
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Put(J,NONSTATIC,Lsoot/coffi/CONSTANT_Float_info;,bytes)#207
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#208
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Get(Z,NONSTATIC,Lsoot/coffi/ClassFile;,debug)#209
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Constant(I,0)#210
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#ConditionalBranch(I,eq,426)#211
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Invoke(STATIC,Lsoot/ByteType;,v,()Lsoot/ByteType;)#25
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalStore(Ljava/lang/Object;,4)#26
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Goto(133)#27
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Invoke(STATIC,Lsoot/DoubleType;,v,()Lsoot/DoubleType;)#41
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalStore(Ljava/lang/Object;,4)#42
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Goto(133)#43
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Invoke(STATIC,Lsoot/FloatType;,v,()Lsoot/FloatType;)#49
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalStore(Ljava/lang/Object;,4)#50
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Goto(133)#51
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Invoke(STATIC,Lsoot/ShortType;,v,()Lsoot/ShortType;)#111
soot.ShortType.v()Lsoot/ShortType;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.ShortType.v()Lsoot/ShortType;#Invoke(VIRTUAL,Lsoot/G;,soot_ShortType,()Lsoot/ShortType;)#1
soot.Singletons.soot_ShortType()Lsoot/ShortType;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_ShortType()Lsoot/ShortType;#Get(Lsoot/ShortType;,NONSTATIC,Lsoot/Singletons;,instance_soot_ShortType)#1
soot.Singletons.soot_ShortType()Lsoot/ShortType;#Constant(L;,null)#2
soot.Singletons.soot_ShortType()Lsoot/ShortType;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_ShortType()Lsoot/ShortType;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_ShortType()Lsoot/ShortType;#New(Lsoot/ShortType;,0)#5
soot.Singletons.soot_ShortType()Lsoot/ShortType;#Dup(1,0)#6
soot.Singletons.soot_ShortType()Lsoot/ShortType;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_ShortType()Lsoot/ShortType;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_ShortType()Lsoot/ShortType;#Invoke(SPECIAL,Lsoot/ShortType;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.ShortType.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.ShortType.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/PrimType;,<init>,()V)#1
soot.ShortType.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_ShortType()Lsoot/ShortType;#Put(Lsoot/ShortType;,NONSTATIC,Lsoot/Singletons;,instance_soot_ShortType)#10
soot.Singletons.soot_ShortType()Lsoot/ShortType;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_ShortType()Lsoot/ShortType;#Get(Lsoot/ShortType;,NONSTATIC,Lsoot/Singletons;,instance_soot_ShortType)#12
soot.Singletons.soot_ShortType()Lsoot/ShortType;#Return(Ljava/lang/Object;)#13
soot.ShortType.v()Lsoot/ShortType;#Return(Ljava/lang/Object;)#2
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalStore(Ljava/lang/Object;,4)#112
soot.coffi.Util.jimpleTypeOfFieldDescriptor(Ljava/lang/String;)Lsoot/Type;#Goto(133)#113
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Invoke(STATIC,Lsoot/ShortType;,v,()Lsoot/ShortType;)#146
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(Ljava/lang/Object;,7)#147
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalLoad(I,4)#148
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Constant(I,1)#149
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#BinaryOp(I,add)#150
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#LocalStore(I,4)#151
soot.coffi.Util.jimpleTypesOfFieldOrMethodDescriptor(Ljava/lang/String;)[Lsoot/Type;#Goto(176)#152
soot.ShortType.hashCode()I#Constant(I,-1954447917)#0
soot.ShortType.hashCode()I#Return(I)#1
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#New(Lsoot/tagkit/IntegerConstantValueTag;,0)#246
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Dup(1,0)#247
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,16)#248
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/CONSTANT_Integer_info;)#249
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(J,NONSTATIC,Lsoot/coffi/CONSTANT_Integer_info;,bytes)#250
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Conversion(J,I)#251
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(SPECIAL,Lsoot/tagkit/IntegerConstantValueTag;,<init>,(I)V)#252
soot.tagkit.IntegerConstantValueTag.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.tagkit.IntegerConstantValueTag.<init>(I)V#Invoke(SPECIAL,Lsoot/tagkit/ConstantValueTag;,<init>,()V)#1
soot.tagkit.IntegerConstantValueTag.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.tagkit.IntegerConstantValueTag.<init>(I)V#LocalLoad(I,1)#3
soot.tagkit.IntegerConstantValueTag.<init>(I)V#Put(I,NONSTATIC,Lsoot/tagkit/IntegerConstantValueTag;,value)#4
soot.tagkit.IntegerConstantValueTag.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.tagkit.IntegerConstantValueTag.<init>(I)V#Constant(I,4)#6
soot.tagkit.IntegerConstantValueTag.<init>(I)V#New([B,1)#7
soot.tagkit.IntegerConstantValueTag.<init>(I)V#Dup(1,0)#8
soot.tagkit.IntegerConstantValueTag.<init>(I)V#Constant(I,0)#9
soot.tagkit.IntegerConstantValueTag.<init>(I)V#LocalLoad(I,1)#10
soot.tagkit.IntegerConstantValueTag.<init>(I)V#Constant(I,24)#11
soot.tagkit.IntegerConstantValueTag.<init>(I)V#Shift(I,SHR)#12
soot.tagkit.IntegerConstantValueTag.<init>(I)V#Constant(I,255)#13
soot.tagkit.IntegerConstantValueTag.<init>(I)V#BinaryOp(I,and)#14
soot.tagkit.IntegerConstantValueTag.<init>(I)V#Conversion(I,B)#15
soot.tagkit.IntegerConstantValueTag.<init>(I)V#ArrayStore(B)#16
soot.tagkit.IntegerConstantValueTag.<init>(I)V#Dup(1,0)#17
soot.tagkit.IntegerConstantValueTag.<init>(I)V#Constant(I,1)#18
soot.tagkit.IntegerConstantValueTag.<init>(I)V#LocalLoad(I,1)#19
soot.tagkit.IntegerConstantValueTag.<init>(I)V#Constant(I,16)#20
soot.tagkit.IntegerConstantValueTag.<init>(I)V#Shift(I,SHR)#21
soot.tagkit.IntegerConstantValueTag.<init>(I)V#Constant(I,255)#22
soot.tagkit.IntegerConstantValueTag.<init>(I)V#BinaryOp(I,and)#23
soot.tagkit.IntegerConstantValueTag.<init>(I)V#Conversion(I,B)#24
soot.tagkit.IntegerConstantValueTag.<init>(I)V#ArrayStore(B)#25
soot.tagkit.IntegerConstantValueTag.<init>(I)V#Dup(1,0)#26
soot.tagkit.IntegerConstantValueTag.<init>(I)V#Constant(I,2)#27
soot.tagkit.IntegerConstantValueTag.<init>(I)V#LocalLoad(I,1)#28
soot.tagkit.IntegerConstantValueTag.<init>(I)V#Constant(I,8)#29
soot.tagkit.IntegerConstantValueTag.<init>(I)V#Shift(I,SHR)#30
soot.tagkit.IntegerConstantValueTag.<init>(I)V#Constant(I,255)#31
soot.tagkit.IntegerConstantValueTag.<init>(I)V#BinaryOp(I,and)#32
soot.tagkit.IntegerConstantValueTag.<init>(I)V#Conversion(I,B)#33
soot.tagkit.IntegerConstantValueTag.<init>(I)V#ArrayStore(B)#34
soot.tagkit.IntegerConstantValueTag.<init>(I)V#Dup(1,0)#35
soot.tagkit.IntegerConstantValueTag.<init>(I)V#Constant(I,3)#36
soot.tagkit.IntegerConstantValueTag.<init>(I)V#LocalLoad(I,1)#37
soot.tagkit.IntegerConstantValueTag.<init>(I)V#Constant(I,255)#38
soot.tagkit.IntegerConstantValueTag.<init>(I)V#BinaryOp(I,and)#39
soot.tagkit.IntegerConstantValueTag.<init>(I)V#Conversion(I,B)#40
soot.tagkit.IntegerConstantValueTag.<init>(I)V#ArrayStore(B)#41
soot.tagkit.IntegerConstantValueTag.<init>(I)V#Put([B,NONSTATIC,Lsoot/tagkit/IntegerConstantValueTag;,bytes)#42
soot.tagkit.IntegerConstantValueTag.<init>(I)V#Return(V)#43
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,17)#253
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Goto(316)#254
soot.ShortType.toString()Ljava/lang/String;#Constant(Ljava/lang/String;,"short")#0
soot.ShortType.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#1
soot.SootResolver.processResolveWorklist()V#Return(V)#114
soot.SootResolver.resolveClass(Ljava/lang/String;I)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,3)#10
soot.SootResolver.resolveClass(Ljava/lang/String;I)Lsoot/SootClass;#Return(Ljava/lang/Object;)#11
soot.Scene.tryLoadClass(Ljava/lang/String;I)Lsoot/SootClass;#LocalStore(Ljava/lang/Object;,4)#23
soot.Scene.tryLoadClass(Ljava/lang/String;I)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,0)#24
soot.Scene.tryLoadClass(Ljava/lang/String;I)Lsoot/SootClass;#Constant(I,0)#25
soot.Scene.tryLoadClass(Ljava/lang/String;I)Lsoot/SootClass;#Invoke(VIRTUAL,Lsoot/Scene;,setPhantomRefs,(Z)V)#26
soot.Scene.tryLoadClass(Ljava/lang/String;I)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,4)#27
soot.Scene.tryLoadClass(Ljava/lang/String;I)Lsoot/SootClass;#Return(Ljava/lang/Object;)#28
soot.Scene.loadBasicClasses()V#Pop(1)#20
soot.SootResolver.bringToSignatures(Lsoot/SootClass;)V#Return(V)#4
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#New(Lsoot/tagkit/FloatConstantValueTag;,0)#255
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Dup(1,0)#256
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,16)#257
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/CONSTANT_Float_info;)#258
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Float_info;,convert,()F)#259
soot.coffi.CONSTANT_Float_info.convert()F#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.CONSTANT_Float_info.convert()F#Get(J,NONSTATIC,Lsoot/coffi/CONSTANT_Float_info;,bytes)#1
soot.coffi.CONSTANT_Float_info.convert()F#Conversion(J,I)#2
soot.coffi.CONSTANT_Float_info.convert()F#Invoke(STATIC,Ljava/lang/Float;,intBitsToFloat,(I)F)#3
soot.coffi.CONSTANT_Float_info.convert()F#Return(F)#4
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(SPECIAL,Lsoot/tagkit/FloatConstantValueTag;,<init>,(F)V)#260
soot.tagkit.FloatConstantValueTag.<init>(F)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.tagkit.FloatConstantValueTag.<init>(F)V#Invoke(SPECIAL,Lsoot/tagkit/ConstantValueTag;,<init>,()V)#1
soot.tagkit.FloatConstantValueTag.<init>(F)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.tagkit.FloatConstantValueTag.<init>(F)V#LocalLoad(F,1)#3
soot.tagkit.FloatConstantValueTag.<init>(F)V#Put(F,NONSTATIC,Lsoot/tagkit/FloatConstantValueTag;,value)#4
soot.tagkit.FloatConstantValueTag.<init>(F)V#Return(V)#5
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,17)#261
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Goto(316)#262
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#New(Lsoot/coffi/CONSTANT_Double_info;,0)#275
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Dup(1,0)#276
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Invoke(SPECIAL,Lsoot/coffi/CONSTANT_Double_info;,<init>,()V)#277
soot.coffi.CONSTANT_Double_info.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.CONSTANT_Double_info.<init>()V#Invoke(SPECIAL,Lsoot/coffi/cp_info;,<init>,()V)#1
soot.coffi.CONSTANT_Double_info.<init>()V#Return(V)#2
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalStore(Ljava/lang/Object;,3)#278
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,3)#279
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#CheckCast(Lsoot/coffi/CONSTANT_Double_info;)#280
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#281
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readInt,()I)#282
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Conversion(I,J)#283
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Constant(J,4294967295)#284
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#BinaryOp(J,and)#285
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Put(J,NONSTATIC,Lsoot/coffi/CONSTANT_Double_info;,high)#286
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,3)#287
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#CheckCast(Lsoot/coffi/CONSTANT_Double_info;)#288
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,1)#289
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readInt,()I)#290
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Conversion(I,J)#291
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Constant(J,4294967295)#292
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#BinaryOp(J,and)#293
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Put(J,NONSTATIC,Lsoot/coffi/CONSTANT_Double_info;,low)#294
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalLoad(Ljava/lang/Object;,0)#295
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Get(Z,NONSTATIC,Lsoot/coffi/ClassFile;,debug)#296
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Constant(I,0)#297
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#ConditionalBranch(I,eq,315)#298
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Constant(I,1)#315
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#LocalStore(I,5)#316
soot.coffi.ClassFile.readConstantPool(Ljava/io/DataInputStream;)Z#Goto(426)#317
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,16)#278
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/CONSTANT_Double_info;)#279
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,18)#280
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#New(Lsoot/tagkit/DoubleConstantValueTag;,0)#281
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Dup(1,0)#282
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,18)#283
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Double_info;,convert,()D)#284
soot.coffi.CONSTANT_Double_info.convert()D#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.CONSTANT_Double_info.convert()D#Get(J,NONSTATIC,Lsoot/coffi/CONSTANT_Double_info;,high)#1
soot.coffi.CONSTANT_Double_info.convert()D#LocalLoad(Ljava/lang/Object;,0)#2
soot.coffi.CONSTANT_Double_info.convert()D#Get(J,NONSTATIC,Lsoot/coffi/CONSTANT_Double_info;,low)#3
soot.coffi.CONSTANT_Double_info.convert()D#Invoke(STATIC,Lsoot/coffi/CONSTANT_Double_info;,ints2long,(JJ)J)#4
soot.coffi.cp_info.ints2long(JJ)J#LocalLoad(J,0)#0
soot.coffi.cp_info.ints2long(JJ)J#LocalStore(J,4)#1
soot.coffi.cp_info.ints2long(JJ)J#LocalLoad(J,2)#2
soot.coffi.cp_info.ints2long(JJ)J#LocalStore(J,6)#3
soot.coffi.cp_info.ints2long(JJ)J#LocalLoad(J,4)#4
soot.coffi.cp_info.ints2long(JJ)J#Constant(I,32)#5
soot.coffi.cp_info.ints2long(JJ)J#Shift(J,SHL)#6
soot.coffi.cp_info.ints2long(JJ)J#LocalLoad(J,6)#7
soot.coffi.cp_info.ints2long(JJ)J#BinaryOp(J,add)#8
soot.coffi.cp_info.ints2long(JJ)J#Return(J)#9
soot.coffi.CONSTANT_Double_info.convert()D#Invoke(STATIC,Ljava/lang/Double;,longBitsToDouble,(J)D)#5
soot.coffi.CONSTANT_Double_info.convert()D#Return(D)#6
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(SPECIAL,Lsoot/tagkit/DoubleConstantValueTag;,<init>,(D)V)#285
soot.tagkit.DoubleConstantValueTag.<init>(D)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.tagkit.DoubleConstantValueTag.<init>(D)V#Invoke(SPECIAL,Lsoot/tagkit/ConstantValueTag;,<init>,()V)#1
soot.tagkit.DoubleConstantValueTag.<init>(D)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.tagkit.DoubleConstantValueTag.<init>(D)V#LocalLoad(D,1)#3
soot.tagkit.DoubleConstantValueTag.<init>(D)V#Put(D,NONSTATIC,Lsoot/tagkit/DoubleConstantValueTag;,value)#4
soot.tagkit.DoubleConstantValueTag.<init>(D)V#Return(V)#5
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,17)#286
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Goto(316)#287
soot.ArrayType.v(Lsoot/Type;I)Lsoot/ArrayType;#LocalLoad(Ljava/lang/Object;,0)#22
soot.ArrayType.v(Lsoot/Type;I)Lsoot/ArrayType;#LocalLoad(I,1)#23
soot.ArrayType.v(Lsoot/Type;I)Lsoot/ArrayType;#Constant(I,1)#24
soot.ArrayType.v(Lsoot/Type;I)Lsoot/ArrayType;#BinaryOp(I,sub)#25
soot.ArrayType.v(Lsoot/Type;I)Lsoot/ArrayType;#Invoke(STATIC,Lsoot/ArrayType;,v,(Lsoot/Type;I)Lsoot/ArrayType;)#26
soot.ArrayType.v(Lsoot/Type;I)Lsoot/ArrayType;#LocalStore(Ljava/lang/Object;,3)#27
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#20
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#Get([Lsoot/util/Numberable;,NONSTATIC,Lsoot/util/ArrayNumberer;,numberToObj)#21
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#ArrayLength()#22
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#Constant(I,2)#23
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#BinaryOp(I,mul)#24
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#New([Lsoot/util/Numberable;,1)#25
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,3)#26
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#27
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#Get([Lsoot/util/Numberable;,NONSTATIC,Lsoot/util/ArrayNumberer;,numberToObj)#28
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#Constant(I,0)#29
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,3)#30
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#Constant(I,0)#31
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#32
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#Get([Lsoot/util/Numberable;,NONSTATIC,Lsoot/util/ArrayNumberer;,numberToObj)#33
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#ArrayLength()#34
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#Invoke(STATIC,Ljava/lang/System;,arraycopy,(Ljava/lang/Object;ILjava/lang/Object;II)V)#35
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#36
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,3)#37
soot.util.ArrayNumberer.add(Ljava/lang/Object;)V#Put([Lsoot/util/Numberable;,NONSTATIC,Lsoot/util/ArrayNumberer;,numberToObj)#38
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,16)#288
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/CONSTANT_String_info;)#289
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,18)#290
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#291
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#292
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,18)#293
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_String_info;,string_index)#294
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#295
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#CheckCast(Lsoot/coffi/CONSTANT_Utf8_info;)#296
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,19)#297
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#New(Lsoot/tagkit/StringConstantValueTag;,0)#298
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Dup(1,0)#299
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,19)#300
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,convert,()Ljava/lang/String;)#301
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(SPECIAL,Lsoot/tagkit/StringConstantValueTag;,<init>,(Ljava/lang/String;)V)#302
soot.tagkit.StringConstantValueTag.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.tagkit.StringConstantValueTag.<init>(Ljava/lang/String;)V#Invoke(SPECIAL,Lsoot/tagkit/ConstantValueTag;,<init>,()V)#1
soot.tagkit.StringConstantValueTag.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.tagkit.StringConstantValueTag.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.tagkit.StringConstantValueTag.<init>(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/tagkit/StringConstantValueTag;,value)#4
soot.tagkit.StringConstantValueTag.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.tagkit.StringConstantValueTag.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#6
soot.tagkit.StringConstantValueTag.<init>(Ljava/lang/String;)V#Invoke(STATIC,Lsoot/coffi/CONSTANT_Utf8_info;,toUtf8,(Ljava/lang/String;)[B)#7
soot.coffi.CONSTANT_Utf8_info.toUtf8(Ljava/lang/String;)[B#New(Ljava/io/ByteArrayOutputStream;,0)#0
soot.coffi.CONSTANT_Utf8_info.toUtf8(Ljava/lang/String;)[B#Dup(1,0)#1
soot.coffi.CONSTANT_Utf8_info.toUtf8(Ljava/lang/String;)[B#LocalLoad(Ljava/lang/Object;,0)#2
soot.coffi.CONSTANT_Utf8_info.toUtf8(Ljava/lang/String;)[B#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#3
soot.coffi.CONSTANT_Utf8_info.toUtf8(Ljava/lang/String;)[B#Invoke(SPECIAL,Ljava/io/ByteArrayOutputStream;,<init>,(I)V)#4
soot.coffi.CONSTANT_Utf8_info.toUtf8(Ljava/lang/String;)[B#LocalStore(Ljava/lang/Object;,1)#5
soot.coffi.CONSTANT_Utf8_info.toUtf8(Ljava/lang/String;)[B#New(Ljava/io/DataOutputStream;,0)#6
soot.coffi.CONSTANT_Utf8_info.toUtf8(Ljava/lang/String;)[B#Dup(1,0)#7
soot.coffi.CONSTANT_Utf8_info.toUtf8(Ljava/lang/String;)[B#LocalLoad(Ljava/lang/Object;,1)#8
soot.coffi.CONSTANT_Utf8_info.toUtf8(Ljava/lang/String;)[B#Invoke(SPECIAL,Ljava/io/DataOutputStream;,<init>,(Ljava/io/OutputStream;)V)#9
soot.coffi.CONSTANT_Utf8_info.toUtf8(Ljava/lang/String;)[B#LocalStore(Ljava/lang/Object;,2)#10
soot.coffi.CONSTANT_Utf8_info.toUtf8(Ljava/lang/String;)[B#LocalLoad(Ljava/lang/Object;,2)#11
soot.coffi.CONSTANT_Utf8_info.toUtf8(Ljava/lang/String;)[B#LocalLoad(Ljava/lang/Object;,0)#12
soot.coffi.CONSTANT_Utf8_info.toUtf8(Ljava/lang/String;)[B#Invoke(VIRTUAL,Ljava/io/DataOutputStream;,writeUTF,(Ljava/lang/String;)V)#13
soot.coffi.CONSTANT_Utf8_info.toUtf8(Ljava/lang/String;)[B#LocalLoad(Ljava/lang/Object;,1)#14
soot.coffi.CONSTANT_Utf8_info.toUtf8(Ljava/lang/String;)[B#Invoke(VIRTUAL,Ljava/io/ByteArrayOutputStream;,toByteArray,()[B)#15
soot.coffi.CONSTANT_Utf8_info.toUtf8(Ljava/lang/String;)[B#Return(Ljava/lang/Object;)#16
soot.tagkit.StringConstantValueTag.<init>(Ljava/lang/String;)V#Put([B,NONSTATIC,Lsoot/tagkit/StringConstantValueTag;,bytes)#8
soot.tagkit.StringConstantValueTag.<init>(Ljava/lang/String;)V#Return(V)#9
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,17)#303
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Goto(316)#304
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Constant(L;,null)#34
soot.SourceLocator.lookupInClassPath(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Return(Ljava/lang/Object;)#35
soot.CoffiClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Constant(L;,null)#19
soot.CoffiClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Return(Ljava/lang/Object;)#20
soot.JimpleClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#New(Ljava/lang/StringBuilder;,0)#0
soot.JimpleClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Dup(1,0)#1
soot.JimpleClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,1)#2
soot.JimpleClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#3
soot.JimpleClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#4
soot.JimpleClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Constant(Ljava/lang/String;,".jimple")#5
soot.JimpleClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#6
soot.JimpleClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#7
soot.JimpleClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#LocalStore(Ljava/lang/Object;,2)#8
soot.JimpleClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(STATIC,Lsoot/SourceLocator;,v,()Lsoot/SourceLocator;)#9
soot.JimpleClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,2)#10
soot.JimpleClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(VIRTUAL,Lsoot/SourceLocator;,lookupInClassPath,(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;)#11
soot.JimpleClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#LocalStore(Ljava/lang/Object;,3)#12
soot.JimpleClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,3)#13
soot.JimpleClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Constant(L;,null)#14
soot.JimpleClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#ConditionalBranch(Ljava/lang/Object;,ne,18)#15
soot.JimpleClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Constant(L;,null)#16
soot.JimpleClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Return(Ljava/lang/Object;)#17
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#0
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(VIRTUAL,Lsoot/options/Options;,polyglot,()Z)#1
soot.options.Options.polyglot()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.polyglot()Z#Get(Z,NONSTATIC,Lsoot/options/Options;,polyglot)#1
soot.options.Options.polyglot()Z#Return(I)#2
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Constant(I,0)#2
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#ConditionalBranch(I,eq,17)#3
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,1)#17
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Constant(I,36)#18
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(VIRTUAL,Ljava/lang/String;,indexOf,(I)I)#19
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Constant(I,0)#20
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#ConditionalBranch(I,lt,24)#21
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Constant(I,0)#24
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#LocalStore(I,2)#25
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(STATIC,Lsoot/SourceLocator;,v,()Lsoot/SourceLocator;)#26
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,1)#27
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(VIRTUAL,Lsoot/SourceLocator;,getSourceForClass,(Ljava/lang/String;)Ljava/lang/String;)#28
soot.SourceLocator.getSourceForClass(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#0
soot.SourceLocator.getSourceForClass(Ljava/lang/String;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,2)#1
soot.SourceLocator.getSourceForClass(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#2
soot.SourceLocator.getSourceForClass(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"$")#3
soot.SourceLocator.getSourceForClass(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,indexOf,(Ljava/lang/String;)I)#4
soot.SourceLocator.getSourceForClass(Ljava/lang/String;)Ljava/lang/String;#Constant(I,-1)#5
soot.SourceLocator.getSourceForClass(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,14)#6
soot.SourceLocator.getSourceForClass(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#14
soot.SourceLocator.getSourceForClass(Ljava/lang/String;)Ljava/lang/String;#Get(Ljava/util/HashMap;,NONSTATIC,Lsoot/SourceLocator;,sourceToClassMap)#15
soot.SourceLocator.getSourceForClass(Ljava/lang/String;)Ljava/lang/String;#Constant(L;,null)#16
soot.SourceLocator.getSourceForClass(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(Ljava/lang/Object;,eq,30)#17
soot.SourceLocator.getSourceForClass(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#30
soot.SourceLocator.getSourceForClass(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#31
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#LocalStore(Ljava/lang/Object;,3)#29
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#New(Ljava/lang/StringBuilder;,0)#30
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Dup(1,0)#31
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,3)#32
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Constant(I,46)#33
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Constant(I,47)#34
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(VIRTUAL,Ljava/lang/String;,replace,(CC)Ljava/lang/String;)#35
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#36
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#37
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Constant(Ljava/lang/String;,".java")#38
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#39
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#40
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#LocalStore(Ljava/lang/Object;,4)#41
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(STATIC,Lsoot/SourceLocator;,v,()Lsoot/SourceLocator;)#42
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,4)#43
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(VIRTUAL,Lsoot/SourceLocator;,lookupInClassPath,(Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;)#44
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#LocalStore(Ljava/lang/Object;,5)#45
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,5)#46
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Constant(L;,null)#47
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#ConditionalBranch(Ljava/lang/Object;,ne,68)#48
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(I,2)#49
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Constant(I,0)#50
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#ConditionalBranch(I,eq,68)#51
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,5)#68
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Constant(L;,null)#69
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#ConditionalBranch(Ljava/lang/Object;,ne,73)#70
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Constant(L;,null)#71
soot.JavaClassProvider.find(Ljava/lang/String;)Lsoot/ClassSource;#Return(Ljava/lang/Object;)#72
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,2)#77
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Constant(L;,null)#78
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#ConditionalBranch(Ljava/lang/Object;,eq,82)#79
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,0)#82
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Get(Ljava/util/Set;,NONSTATIC,Lsoot/SourceLocator;,additionalClassLoaders)#83
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#84
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#LocalStore(Ljava/lang/Object;,4)#85
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Goto(107)#86
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,4)#107
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#108
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Constant(I,0)#109
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#ConditionalBranch(I,ne,87)#110
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,2)#111
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Constant(L;,null)#112
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#ConditionalBranch(Ljava/lang/Object;,eq,116)#113
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#LocalLoad(Ljava/lang/Object;,1)#116
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Constant(Ljava/lang/String;,"soot.rtlib.tamiflex.")#117
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Invoke(VIRTUAL,Ljava/lang/String;,startsWith,(Ljava/lang/String;)Z)#118
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Constant(I,0)#119
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#ConditionalBranch(I,eq,148)#120
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Constant(L;,null)#148
soot.SourceLocator.getClassSource(Ljava/lang/String;)Lsoot/ClassSource;#Return(Ljava/lang/Object;)#149
soot.Scene.tryLoadClass(Ljava/lang/String;I)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,0)#12
soot.Scene.tryLoadClass(Ljava/lang/String;I)Lsoot/SootClass;#Constant(I,0)#13
soot.Scene.tryLoadClass(Ljava/lang/String;I)Lsoot/SootClass;#Invoke(VIRTUAL,Lsoot/Scene;,setPhantomRefs,(Z)V)#14
soot.Scene.tryLoadClass(Ljava/lang/String;I)Lsoot/SootClass;#Constant(L;,null)#15
soot.Scene.tryLoadClass(Ljava/lang/String;I)Lsoot/SootClass;#Return(Ljava/lang/Object;)#16
soot.Scene.loadBasicClasses()V#Return(V)#32
soot.Scene.loadNecessaryClasses()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#2
soot.Scene.loadNecessaryClasses()V#Invoke(VIRTUAL,Lsoot/options/Options;,classes,()Ljava/util/LinkedList;)#3
soot.Scene.loadNecessaryClasses()V#Invoke(VIRTUAL,Ljava/util/LinkedList;,iterator,()Ljava/util/Iterator;)#4
soot.Scene.loadNecessaryClasses()V#LocalStore(Ljava/lang/Object;,1)#5
soot.Scene.loadNecessaryClasses()V#Goto(14)#6
soot.Scene.loadNecessaryClasses()V#LocalLoad(Ljava/lang/Object;,1)#14
soot.Scene.loadNecessaryClasses()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#15
soot.Scene.loadNecessaryClasses()V#Constant(I,0)#16
soot.Scene.loadNecessaryClasses()V#ConditionalBranch(I,ne,7)#17
soot.Scene.loadNecessaryClasses()V#LocalLoad(Ljava/lang/Object;,1)#7
soot.Scene.loadNecessaryClasses()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#8
soot.Scene.loadNecessaryClasses()V#CheckCast(Ljava/lang/String;)#9
soot.Scene.loadNecessaryClasses()V#LocalStore(Ljava/lang/Object;,2)#10
soot.Scene.loadNecessaryClasses()V#LocalLoad(Ljava/lang/Object;,0)#11
soot.Scene.loadNecessaryClasses()V#LocalLoad(Ljava/lang/Object;,2)#12
soot.Scene.loadNecessaryClasses()V#Invoke(SPECIAL,Lsoot/Scene;,loadNecessaryClass,(Ljava/lang/String;)V)#13
soot.Scene.loadNecessaryClass(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.loadNecessaryClass(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.Scene.loadNecessaryClass(Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/Scene;,loadClassAndSupport,(Ljava/lang/String;)Lsoot/SootClass;)#2
soot.Scene.loadClassAndSupport(Ljava/lang/String;)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.loadClassAndSupport(Ljava/lang/String;)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,1)#1
soot.Scene.loadClassAndSupport(Ljava/lang/String;)Lsoot/SootClass;#Constant(I,2)#2
soot.Scene.loadClassAndSupport(Ljava/lang/String;)Lsoot/SootClass;#Invoke(VIRTUAL,Lsoot/Scene;,loadClass,(Ljava/lang/String;I)Lsoot/SootClass;)#3
soot.Scene.loadClass(Ljava/lang/String;I)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.loadClass(Ljava/lang/String;I)Lsoot/SootClass;#Constant(I,1)#1
soot.Scene.loadClass(Ljava/lang/String;I)Lsoot/SootClass;#Invoke(VIRTUAL,Lsoot/Scene;,setPhantomRefs,(Z)V)#2
soot.Scene.loadClass(Ljava/lang/String;I)Lsoot/SootClass;#Invoke(STATIC,Lsoot/SootResolver;,v,()Lsoot/SootResolver;)#3
soot.Scene.loadClass(Ljava/lang/String;I)Lsoot/SootClass;#LocalStore(Ljava/lang/Object;,3)#4
soot.Scene.loadClass(Ljava/lang/String;I)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,3)#5
soot.Scene.loadClass(Ljava/lang/String;I)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,1)#6
soot.Scene.loadClass(Ljava/lang/String;I)Lsoot/SootClass;#LocalLoad(I,2)#7
soot.Scene.loadClass(Ljava/lang/String;I)Lsoot/SootClass;#Invoke(VIRTUAL,Lsoot/SootResolver;,resolveClass,(Ljava/lang/String;I)Lsoot/SootClass;)#8
soot.SourceLocator.lookupInDir(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#New(Lsoot/SourceLocator$FoundFile;,0)#18
soot.SourceLocator.lookupInDir(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Dup(1,0)#19
soot.SourceLocator.lookupInDir(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#LocalLoad(Ljava/lang/Object;,3)#20
soot.SourceLocator.lookupInDir(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Invoke(SPECIAL,Lsoot/SourceLocator$FoundFile;,<init>,(Ljava/io/File;)V)#21
soot.SourceLocator$FoundFile.<init>(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.SourceLocator$FoundFile.<init>(Ljava/io/File;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.SourceLocator$FoundFile.<init>(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.SourceLocator$FoundFile.<init>(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.SourceLocator$FoundFile.<init>(Ljava/io/File;)V#Put(Ljava/io/File;,NONSTATIC,Lsoot/SourceLocator$FoundFile;,file)#4
soot.SourceLocator$FoundFile.<init>(Ljava/io/File;)V#Return(V)#5
soot.SourceLocator.lookupInDir(Ljava/lang/String;Ljava/lang/String;)Lsoot/SourceLocator$FoundFile;#Return(Ljava/lang/Object;)#22
soot.SourceLocator$FoundFile.inputStream()Ljava/io/InputStream;#New(Ljava/io/FileInputStream;,0)#4
soot.SourceLocator$FoundFile.inputStream()Ljava/io/InputStream;#Dup(1,0)#5
soot.SourceLocator$FoundFile.inputStream()Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,0)#6
soot.SourceLocator$FoundFile.inputStream()Ljava/io/InputStream;#Get(Ljava/io/File;,NONSTATIC,Lsoot/SourceLocator$FoundFile;,file)#7
soot.SourceLocator$FoundFile.inputStream()Ljava/io/InputStream;#Invoke(SPECIAL,Ljava/io/FileInputStream;,<init>,(Ljava/io/File;)V)#8
soot.SourceLocator$FoundFile.inputStream()Ljava/io/InputStream;#Return(Ljava/lang/Object;)#9
soot.Scene.loadClass(Ljava/lang/String;I)Lsoot/SootClass;#LocalStore(Ljava/lang/Object;,4)#9
soot.Scene.loadClass(Ljava/lang/String;I)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,0)#10
soot.Scene.loadClass(Ljava/lang/String;I)Lsoot/SootClass;#Constant(I,0)#11
soot.Scene.loadClass(Ljava/lang/String;I)Lsoot/SootClass;#Invoke(VIRTUAL,Lsoot/Scene;,setPhantomRefs,(Z)V)#12
soot.Scene.loadClass(Ljava/lang/String;I)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,4)#13
soot.Scene.loadClass(Ljava/lang/String;I)Lsoot/SootClass;#Return(Ljava/lang/Object;)#14
soot.Scene.loadClassAndSupport(Ljava/lang/String;)Lsoot/SootClass;#LocalStore(Ljava/lang/Object;,2)#4
soot.Scene.loadClassAndSupport(Ljava/lang/String;)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,2)#5
soot.Scene.loadClassAndSupport(Ljava/lang/String;)Lsoot/SootClass;#Invoke(VIRTUAL,Lsoot/SootClass;,isPhantom,()Z)#6
soot.SootClass.isPhantom()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.isPhantom()Z#Get(Z,NONSTATIC,Lsoot/SootClass;,isPhantom)#1
soot.SootClass.isPhantom()Z#Return(I)#2
soot.Scene.loadClassAndSupport(Ljava/lang/String;)Lsoot/SootClass;#Constant(I,0)#7
soot.Scene.loadClassAndSupport(Ljava/lang/String;)Lsoot/SootClass;#ConditionalBranch(I,ne,14)#8
soot.Scene.loadClassAndSupport(Ljava/lang/String;)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,0)#9
soot.Scene.loadClassAndSupport(Ljava/lang/String;)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,1)#10
soot.Scene.loadClassAndSupport(Ljava/lang/String;)Lsoot/SootClass;#Constant(I,3)#11
soot.Scene.loadClassAndSupport(Ljava/lang/String;)Lsoot/SootClass;#Invoke(VIRTUAL,Lsoot/Scene;,loadClass,(Ljava/lang/String;I)Lsoot/SootClass;)#12
soot.SootResolver.processResolveWorklist()V#LocalLoad(Ljava/lang/Object;,0)#89
soot.SootResolver.processResolveWorklist()V#LocalLoad(Ljava/lang/Object;,2)#90
soot.SootResolver.processResolveWorklist()V#Invoke(SPECIAL,Lsoot/SootResolver;,bringToBodies,(Lsoot/SootClass;)V)#91
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,resolvingLevel,()I)#1
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Constant(I,3)#2
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#ConditionalBranch(I,lt,5)#3
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#6
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Invoke(SPECIAL,Lsoot/SootResolver;,bringToSignatures,(Lsoot/SootClass;)V)#7
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#8
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/options/Options;,debug_resolver,()Z)#9
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Constant(I,0)#10
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#ConditionalBranch(I,eq,22)#11
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#22
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Constant(I,3)#23
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,setResolvingLevel,(I)V)#24
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#25
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/SootResolver;,classToTypesHierarchy)#26
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#27
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#28
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#CheckCast(Ljava/util/Collection;)#29
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,2)#30
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,2)#31
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Constant(L;,null)#32
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#ConditionalBranch(Ljava/lang/Object;,ne,35)#33
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,2)#35
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Collection;,iterator,()Ljava/util/Iterator;)#36
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,3)#37
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Goto(68)#38
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,3)#68
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#69
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Constant(I,0)#70
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#ConditionalBranch(I,ne,39)#71
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#72
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/SootResolver;,classToTypesSignature)#73
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#74
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#75
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#CheckCast(Ljava/util/Collection;)#76
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,2)#77
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,2)#78
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Constant(L;,null)#79
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#ConditionalBranch(Ljava/lang/Object;,ne,82)#80
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,2)#82
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Collection;,iterator,()Ljava/util/Iterator;)#83
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,3)#84
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Goto(115)#85
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,3)#115
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#116
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Constant(I,0)#117
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#ConditionalBranch(I,ne,86)#118
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,3)#86
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#87
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,4)#88
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,4)#89
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Instanceof(Ljava/lang/String;)#90
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Constant(I,0)#91
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#ConditionalBranch(I,eq,99)#92
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,4)#99
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Instanceof(Lsoot/Type;)#100
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Constant(I,0)#101
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#ConditionalBranch(I,eq,109)#102
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#103
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,4)#104
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#CheckCast(Lsoot/Type;)#105
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Constant(I,2)#106
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Invoke(SPECIAL,Lsoot/SootResolver;,addToResolveWorklist,(Lsoot/Type;I)V)#107
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Goto(115)#108
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#93
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,4)#94
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#CheckCast(Ljava/lang/String;)#95
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Constant(I,2)#96
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Invoke(SPECIAL,Lsoot/SootResolver;,addToResolveWorklist,(Ljava/lang/String;I)V)#97
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Goto(115)#98
soot.SootResolver.bringToBodies(Lsoot/SootClass;)V#Return(V)#119
soot.SootResolver.processResolveWorklist()V#Goto(100)#92
soot.Scene.loadClassAndSupport(Ljava/lang/String;)Lsoot/SootClass;#LocalStore(Ljava/lang/Object;,2)#13
soot.Scene.loadClassAndSupport(Ljava/lang/String;)Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,2)#14
soot.Scene.loadClassAndSupport(Ljava/lang/String;)Lsoot/SootClass;#Return(Ljava/lang/Object;)#15
soot.Scene.loadNecessaryClass(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,2)#3
soot.Scene.loadNecessaryClass(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#4
soot.Scene.loadNecessaryClass(Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/SootClass;,setApplicationClass,()V)#5
soot.SootClass.setApplicationClass()V#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#0
soot.SootClass.setApplicationClass()V#LocalLoad(Ljava/lang/Object;,0)#1
soot.SootClass.setApplicationClass()V#Invoke(VIRTUAL,Lsoot/Scene;,getContainingChain,(Lsoot/SootClass;)Lsoot/util/Chain;)#2
soot.Scene.getContainingChain(Lsoot/SootClass;)Lsoot/util/Chain;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Scene.getContainingChain(Lsoot/SootClass;)Lsoot/util/Chain;#Invoke(VIRTUAL,Lsoot/Scene;,getLibraryClasses,()Lsoot/util/Chain;)#12
soot.Scene.getContainingChain(Lsoot/SootClass;)Lsoot/util/Chain;#Return(Ljava/lang/Object;)#13
soot.SootClass.setApplicationClass()V#LocalStore(Ljava/lang/Object;,1)#3
soot.SootClass.setApplicationClass()V#LocalLoad(Ljava/lang/Object;,1)#4
soot.SootClass.setApplicationClass()V#Constant(L;,null)#5
soot.SootClass.setApplicationClass()V#ConditionalBranch(Ljava/lang/Object;,eq,11)#6
soot.SootClass.setApplicationClass()V#LocalLoad(Ljava/lang/Object;,1)#7
soot.SootClass.setApplicationClass()V#LocalLoad(Ljava/lang/Object;,0)#8
soot.SootClass.setApplicationClass()V#Invoke(INTERFACE,Lsoot/util/Chain;,remove,(Ljava/lang/Object;)Z)#9
soot.util.HashChain.remove(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#0
soot.util.HashChain.remove(Ljava/lang/Object;)Z#Constant(L;,null)#1
soot.util.HashChain.remove(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,8)#2
soot.util.HashChain.remove(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#8
soot.util.HashChain.remove(Ljava/lang/Object;)Z#Dup(1,0)#9
soot.util.HashChain.remove(Ljava/lang/Object;)Z#Get(J,NONSTATIC,Lsoot/util/HashChain;,stateCount)#10
soot.util.HashChain.remove(Ljava/lang/Object;)Z#Constant(J,1)#11
soot.util.HashChain.remove(Ljava/lang/Object;)Z#BinaryOp(J,add)#12
soot.util.HashChain.remove(Ljava/lang/Object;)Z#Put(J,NONSTATIC,Lsoot/util/HashChain;,stateCount)#13
soot.util.HashChain.remove(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#14
soot.util.HashChain.remove(Ljava/lang/Object;)Z#Get(Ljava/util/HashMap;,NONSTATIC,Lsoot/util/HashChain;,map)#15
soot.util.HashChain.remove(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#16
soot.util.HashChain.remove(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/util/HashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#17
soot.util.HashChain.remove(Ljava/lang/Object;)Z#Constant(L;,null)#18
soot.util.HashChain.remove(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,eq,35)#19
soot.util.HashChain.remove(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#20
soot.util.HashChain.remove(Ljava/lang/Object;)Z#Get(Ljava/util/HashMap;,NONSTATIC,Lsoot/util/HashChain;,map)#21
soot.util.HashChain.remove(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#22
soot.util.HashChain.remove(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/util/HashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#23
soot.util.HashChain.remove(Ljava/lang/Object;)Z#CheckCast(Lsoot/util/HashChain$Link;)#24
soot.util.HashChain.remove(Ljava/lang/Object;)Z#LocalStore(Ljava/lang/Object;,2)#25
soot.util.HashChain.remove(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,2)#26
soot.util.HashChain.remove(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Lsoot/util/HashChain$Link;,unlinkSelf,()V)#27
soot.util.HashChain$Link.unlinkSelf()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.HashChain$Link.unlinkSelf()V#LocalLoad(Ljava/lang/Object;,0)#1
soot.util.HashChain$Link.unlinkSelf()V#Get(Lsoot/util/HashChain$Link;,NONSTATIC,Lsoot/util/HashChain$Link;,previousLink)#2
soot.util.HashChain$Link.unlinkSelf()V#LocalLoad(Ljava/lang/Object;,0)#3
soot.util.HashChain$Link.unlinkSelf()V#Get(Lsoot/util/HashChain$Link;,NONSTATIC,Lsoot/util/HashChain$Link;,nextLink)#4
soot.util.HashChain$Link.unlinkSelf()V#Invoke(SPECIAL,Lsoot/util/HashChain$Link;,bind,(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V)#5
soot.util.HashChain$Link.unlinkSelf()V#Return(V)#6
soot.util.HashChain.remove(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#28
soot.util.HashChain.remove(Ljava/lang/Object;)Z#Get(Ljava/util/HashMap;,NONSTATIC,Lsoot/util/HashChain;,map)#29
soot.util.HashChain.remove(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#30
soot.util.HashChain.remove(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/util/HashMap;,remove,(Ljava/lang/Object;)Ljava/lang/Object;)#31
soot.util.HashChain.remove(Ljava/lang/Object;)Z#Pop(1)#32
soot.util.HashChain.remove(Ljava/lang/Object;)Z#Constant(I,1)#33
soot.util.HashChain.remove(Ljava/lang/Object;)Z#Return(I)#34
soot.SootClass.setApplicationClass()V#Pop(1)#10
soot.SootClass.setApplicationClass()V#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#11
soot.SootClass.setApplicationClass()V#Invoke(VIRTUAL,Lsoot/Scene;,getApplicationClasses,()Lsoot/util/Chain;)#12
soot.SootClass.setApplicationClass()V#LocalLoad(Ljava/lang/Object;,0)#13
soot.SootClass.setApplicationClass()V#Invoke(INTERFACE,Lsoot/util/Chain;,add,(Ljava/lang/Object;)Z)#14
soot.SootClass.setApplicationClass()V#Pop(1)#15
soot.SootClass.setApplicationClass()V#LocalLoad(Ljava/lang/Object;,0)#16
soot.SootClass.setApplicationClass()V#Constant(I,0)#17
soot.SootClass.setApplicationClass()V#Put(Z,NONSTATIC,Lsoot/SootClass;,isPhantom)#18
soot.SootClass.setApplicationClass()V#Return(V)#19
soot.Scene.loadNecessaryClass(Ljava/lang/String;)V#Return(V)#6
soot.Scene.loadNecessaryClasses()V#LocalLoad(Ljava/lang/Object;,0)#18
soot.Scene.loadNecessaryClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,loadDynamicClasses,()V)#19
soot.Scene.loadDynamicClasses()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.loadDynamicClasses()V#New(Ljava/util/ArrayList;,0)#1
soot.Scene.loadDynamicClasses()V#Dup(1,0)#2
soot.Scene.loadDynamicClasses()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#3
soot.Scene.loadDynamicClasses()V#Put(Ljava/util/List;,NONSTATIC,Lsoot/Scene;,dynamicClasses)#4
soot.Scene.loadDynamicClasses()V#New(Ljava/util/HashSet;,0)#5
soot.Scene.loadDynamicClasses()V#Dup(1,0)#6
soot.Scene.loadDynamicClasses()V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#7
soot.Scene.loadDynamicClasses()V#LocalStore(Ljava/lang/Object;,1)#8
soot.Scene.loadDynamicClasses()V#LocalLoad(Ljava/lang/Object;,1)#9
soot.Scene.loadDynamicClasses()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#10
soot.Scene.loadDynamicClasses()V#Invoke(VIRTUAL,Lsoot/options/Options;,dynamic_class,()Ljava/util/List;)#11
soot.options.Options.dynamic_class()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.dynamic_class()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lsoot/options/Options;,dynamic_class)#1
soot.options.Options.dynamic_class()Ljava/util/List;#Constant(L;,null)#2
soot.options.Options.dynamic_class()Ljava/util/List;#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
soot.options.Options.dynamic_class()Ljava/util/List;#Get(Ljava/util/List;,STATIC,Ljava/util/Collections;,EMPTY_LIST)#4
soot.options.Options.dynamic_class()Ljava/util/List;#Return(Ljava/lang/Object;)#5
soot.Scene.loadDynamicClasses()V#Invoke(VIRTUAL,Ljava/util/HashSet;,addAll,(Ljava/util/Collection;)Z)#12
soot.Scene.loadDynamicClasses()V#Pop(1)#13
soot.Scene.loadDynamicClasses()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#14
soot.Scene.loadDynamicClasses()V#Invoke(VIRTUAL,Lsoot/options/Options;,dynamic_dir,()Ljava/util/List;)#15
soot.options.Options.dynamic_dir()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.dynamic_dir()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lsoot/options/Options;,dynamic_dir)#1
soot.options.Options.dynamic_dir()Ljava/util/List;#Constant(L;,null)#2
soot.options.Options.dynamic_dir()Ljava/util/List;#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
soot.options.Options.dynamic_dir()Ljava/util/List;#Get(Ljava/util/List;,STATIC,Ljava/util/Collections;,EMPTY_LIST)#4
soot.options.Options.dynamic_dir()Ljava/util/List;#Return(Ljava/lang/Object;)#5
soot.Scene.loadDynamicClasses()V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#16
soot.Scene.loadDynamicClasses()V#LocalStore(Ljava/lang/Object;,2)#17
soot.Scene.loadDynamicClasses()V#Goto(29)#18
soot.Scene.loadDynamicClasses()V#LocalLoad(Ljava/lang/Object;,2)#29
soot.Scene.loadDynamicClasses()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#30
soot.Scene.loadDynamicClasses()V#Constant(I,0)#31
soot.Scene.loadDynamicClasses()V#ConditionalBranch(I,ne,19)#32
soot.Scene.loadDynamicClasses()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#33
soot.Scene.loadDynamicClasses()V#Invoke(VIRTUAL,Lsoot/options/Options;,dynamic_package,()Ljava/util/List;)#34
soot.options.Options.dynamic_package()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.dynamic_package()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lsoot/options/Options;,dynamic_package)#1
soot.options.Options.dynamic_package()Ljava/util/List;#Constant(L;,null)#2
soot.options.Options.dynamic_package()Ljava/util/List;#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
soot.options.Options.dynamic_package()Ljava/util/List;#Get(Ljava/util/List;,STATIC,Ljava/util/Collections;,EMPTY_LIST)#4
soot.options.Options.dynamic_package()Ljava/util/List;#Return(Ljava/lang/Object;)#5
soot.Scene.loadDynamicClasses()V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#35
soot.Scene.loadDynamicClasses()V#LocalStore(Ljava/lang/Object;,2)#36
soot.Scene.loadDynamicClasses()V#Goto(48)#37
soot.Scene.loadDynamicClasses()V#LocalLoad(Ljava/lang/Object;,2)#48
soot.Scene.loadDynamicClasses()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#49
soot.Scene.loadDynamicClasses()V#Constant(I,0)#50
soot.Scene.loadDynamicClasses()V#ConditionalBranch(I,ne,38)#51
soot.Scene.loadDynamicClasses()V#LocalLoad(Ljava/lang/Object;,1)#52
soot.Scene.loadDynamicClasses()V#Invoke(VIRTUAL,Ljava/util/HashSet;,iterator,()Ljava/util/Iterator;)#53
soot.Scene.loadDynamicClasses()V#LocalStore(Ljava/lang/Object;,3)#54
soot.Scene.loadDynamicClasses()V#Goto(67)#55
soot.Scene.loadDynamicClasses()V#LocalLoad(Ljava/lang/Object;,3)#67
soot.Scene.loadDynamicClasses()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#68
soot.Scene.loadDynamicClasses()V#Constant(I,0)#69
soot.Scene.loadDynamicClasses()V#ConditionalBranch(I,ne,56)#70
soot.Scene.loadDynamicClasses()V#LocalLoad(Ljava/lang/Object;,0)#71
soot.Scene.loadDynamicClasses()V#Get(Ljava/util/List;,NONSTATIC,Lsoot/Scene;,dynamicClasses)#72
soot.Scene.loadDynamicClasses()V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#73
soot.Scene.loadDynamicClasses()V#LocalStore(Ljava/lang/Object;,2)#74
soot.Scene.loadDynamicClasses()V#Goto(103)#75
soot.Scene.loadDynamicClasses()V#LocalLoad(Ljava/lang/Object;,2)#103
soot.Scene.loadDynamicClasses()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#104
soot.Scene.loadDynamicClasses()V#Constant(I,0)#105
soot.Scene.loadDynamicClasses()V#ConditionalBranch(I,ne,76)#106
soot.Scene.loadDynamicClasses()V#Return(V)#107
soot.Scene.loadNecessaryClasses()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#20
soot.Scene.loadNecessaryClasses()V#Invoke(VIRTUAL,Lsoot/options/Options;,process_dir,()Ljava/util/List;)#21
soot.options.Options.process_dir()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.process_dir()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lsoot/options/Options;,process_dir)#1
soot.options.Options.process_dir()Ljava/util/List;#Constant(L;,null)#2
soot.options.Options.process_dir()Ljava/util/List;#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
soot.options.Options.process_dir()Ljava/util/List;#Get(Ljava/util/List;,STATIC,Ljava/util/Collections;,EMPTY_LIST)#4
soot.options.Options.process_dir()Ljava/util/List;#Return(Ljava/lang/Object;)#5
soot.Scene.loadNecessaryClasses()V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#22
soot.Scene.loadNecessaryClasses()V#LocalStore(Ljava/lang/Object;,2)#23
soot.Scene.loadNecessaryClasses()V#Goto(47)#24
soot.Scene.loadNecessaryClasses()V#LocalLoad(Ljava/lang/Object;,2)#47
soot.Scene.loadNecessaryClasses()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#48
soot.Scene.loadNecessaryClasses()V#Constant(I,0)#49
soot.Scene.loadNecessaryClasses()V#ConditionalBranch(I,ne,25)#50
soot.Scene.loadNecessaryClasses()V#LocalLoad(Ljava/lang/Object;,0)#51
soot.Scene.loadNecessaryClasses()V#Invoke(SPECIAL,Lsoot/Scene;,prepareClasses,()V)#52
soot.Scene.prepareClasses()V#New(Lsoot/util/HashChain;,0)#0
soot.Scene.prepareClasses()V#Dup(1,0)#1
soot.Scene.prepareClasses()V#Invoke(SPECIAL,Lsoot/util/HashChain;,<init>,()V)#2
soot.Scene.prepareClasses()V#LocalStore(Ljava/lang/Object;,1)#3
soot.Scene.prepareClasses()V#New(Lsoot/util/HashChain;,0)#4
soot.Scene.prepareClasses()V#Dup(1,0)#5
soot.Scene.prepareClasses()V#LocalLoad(Ljava/lang/Object;,0)#6
soot.Scene.prepareClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,getClasses,()Lsoot/util/Chain;)#7
soot.Scene.getClasses()Lsoot/util/Chain;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.getClasses()Lsoot/util/Chain;#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/Scene;,classes)#1
soot.Scene.getClasses()Lsoot/util/Chain;#Return(Ljava/lang/Object;)#2
soot.Scene.prepareClasses()V#Invoke(SPECIAL,Lsoot/util/HashChain;,<init>,(Lsoot/util/Chain;)V)#8
soot.util.HashChain.<init>(Lsoot/util/Chain;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.HashChain.<init>(Lsoot/util/Chain;)V#Invoke(SPECIAL,Lsoot/util/HashChain;,<init>,()V)#1
soot.util.HashChain.<init>(Lsoot/util/Chain;)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.util.HashChain.<init>(Lsoot/util/Chain;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#3
soot.util.HashChain.<init>(Lsoot/util/Chain;)V#LocalStore(Ljava/lang/Object;,3)#4
soot.util.HashChain.<init>(Lsoot/util/Chain;)V#Goto(14)#5
soot.util.HashChain.<init>(Lsoot/util/Chain;)V#LocalLoad(Ljava/lang/Object;,3)#14
soot.util.HashChain.<init>(Lsoot/util/Chain;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#15
soot.util.HashChain.<init>(Lsoot/util/Chain;)V#Constant(I,0)#16
soot.util.HashChain.<init>(Lsoot/util/Chain;)V#ConditionalBranch(I,ne,6)#17
soot.util.HashChain.<init>(Lsoot/util/Chain;)V#LocalLoad(Ljava/lang/Object;,3)#6
soot.util.HashChain.<init>(Lsoot/util/Chain;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#7
soot.util.HashChain.<init>(Lsoot/util/Chain;)V#CheckCast(Ljava/lang/Object;)#8
soot.util.HashChain.<init>(Lsoot/util/Chain;)V#LocalStore(Ljava/lang/Object;,2)#9
soot.util.HashChain.<init>(Lsoot/util/Chain;)V#LocalLoad(Ljava/lang/Object;,0)#10
soot.util.HashChain.<init>(Lsoot/util/Chain;)V#LocalLoad(Ljava/lang/Object;,2)#11
soot.util.HashChain.<init>(Lsoot/util/Chain;)V#Invoke(VIRTUAL,Lsoot/util/HashChain;,add,(Ljava/lang/Object;)Z)#12
soot.util.HashChain.<init>(Lsoot/util/Chain;)V#Pop(1)#13
soot.util.HashChain.<init>(Lsoot/util/Chain;)V#Return(V)#18
soot.Scene.prepareClasses()V#LocalStore(Ljava/lang/Object;,2)#9
soot.Scene.prepareClasses()V#LocalLoad(Ljava/lang/Object;,2)#10
soot.Scene.prepareClasses()V#LocalLoad(Ljava/lang/Object;,1)#11
soot.Scene.prepareClasses()V#Invoke(INTERFACE,Lsoot/util/Chain;,removeAll,(Ljava/util/Collection;)Z)#12
soot.Scene.prepareClasses()V#Pop(1)#13
soot.Scene.prepareClasses()V#LocalLoad(Ljava/lang/Object;,2)#14
soot.Scene.prepareClasses()V#Invoke(INTERFACE,Lsoot/util/Chain;,isEmpty,()Z)#15
soot.util.HashChain.size()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.HashChain.size()I#Get(Ljava/util/HashMap;,NONSTATIC,Lsoot/util/HashChain;,map)#1
soot.util.HashChain.size()I#Invoke(VIRTUAL,Ljava/util/HashMap;,size,()I)#2
soot.util.HashChain.size()I#Return(I)#3
soot.Scene.prepareClasses()V#Constant(I,0)#16
soot.Scene.prepareClasses()V#ConditionalBranch(I,eq,19)#17
soot.Scene.prepareClasses()V#LocalLoad(Ljava/lang/Object;,1)#19
soot.Scene.prepareClasses()V#LocalLoad(Ljava/lang/Object;,2)#20
soot.Scene.prepareClasses()V#Invoke(INTERFACE,Lsoot/util/Chain;,addAll,(Ljava/util/Collection;)Z)#21
soot.Scene.prepareClasses()V#Pop(1)#22
soot.Scene.prepareClasses()V#LocalLoad(Ljava/lang/Object;,2)#23
soot.Scene.prepareClasses()V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#24
soot.Scene.prepareClasses()V#LocalStore(Ljava/lang/Object;,4)#25
soot.Scene.prepareClasses()V#Goto(121)#26
soot.Scene.prepareClasses()V#LocalLoad(Ljava/lang/Object;,4)#121
soot.Scene.prepareClasses()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#122
soot.Scene.prepareClasses()V#Constant(I,0)#123
soot.Scene.prepareClasses()V#ConditionalBranch(I,ne,27)#124
soot.Scene.prepareClasses()V#LocalLoad(Ljava/lang/Object;,4)#27
soot.Scene.prepareClasses()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#28
soot.Scene.prepareClasses()V#CheckCast(Lsoot/SootClass;)#29
soot.Scene.prepareClasses()V#LocalStore(Ljava/lang/Object;,3)#30
soot.Scene.prepareClasses()V#LocalLoad(Ljava/lang/Object;,3)#31
soot.Scene.prepareClasses()V#Invoke(VIRTUAL,Lsoot/SootClass;,isPhantom,()Z)#32
soot.Scene.prepareClasses()V#Constant(I,0)#33
soot.Scene.prepareClasses()V#ConditionalBranch(I,eq,36)#34
soot.Scene.prepareClasses()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#36
soot.Scene.prepareClasses()V#Invoke(VIRTUAL,Lsoot/options/Options;,app,()Z)#37
soot.options.Options.app()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.app()Z#Get(Z,NONSTATIC,Lsoot/options/Options;,app)#1
soot.options.Options.app()Z#Return(I)#2
soot.Scene.prepareClasses()V#Constant(I,0)#38
soot.Scene.prepareClasses()V#ConditionalBranch(I,eq,42)#39
soot.Scene.prepareClasses()V#LocalLoad(Ljava/lang/Object;,3)#40
soot.Scene.prepareClasses()V#Invoke(VIRTUAL,Lsoot/SootClass;,setApplicationClass,()V)#41
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#LocalLoad(Ljava/lang/Object;,2)#3
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#Constant(L;,null)#4
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#ConditionalBranch(Ljava/lang/Object;,eq,12)#5
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#LocalLoad(Ljava/lang/Object;,0)#6
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#Get(Lsoot/util/HashChain;,NONSTATIC,Lsoot/util/HashChain$Link;,this$0)#7
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#LocalLoad(Ljava/lang/Object;,2)#8
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#Invoke(VIRTUAL,Lsoot/util/HashChain$Link;,getItem,()Ljava/lang/Object;)#9
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#Invoke(STATIC,Lsoot/util/HashChain;,access$0,(Lsoot/util/HashChain;Ljava/lang/Object;)V)#10
soot.util.HashChain.access$0(Lsoot/util/HashChain;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.HashChain.access$0(Lsoot/util/HashChain;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.util.HashChain.access$0(Lsoot/util/HashChain;Ljava/lang/Object;)V#Put(Ljava/lang/Object;,NONSTATIC,Lsoot/util/HashChain;,firstItem)#2
soot.util.HashChain.access$0(Lsoot/util/HashChain;Ljava/lang/Object;)V#Return(V)#3
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#Goto(20)#11
soot.Scene.prepareClasses()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#42
soot.Scene.prepareClasses()V#Invoke(VIRTUAL,Lsoot/options/Options;,classes,()Ljava/util/LinkedList;)#43
soot.Scene.prepareClasses()V#LocalLoad(Ljava/lang/Object;,3)#44
soot.Scene.prepareClasses()V#Invoke(VIRTUAL,Lsoot/SootClass;,getName,()Ljava/lang/String;)#45
soot.Scene.prepareClasses()V#Invoke(VIRTUAL,Ljava/util/LinkedList;,contains,(Ljava/lang/Object;)Z)#46
soot.Scene.prepareClasses()V#Constant(I,0)#47
soot.Scene.prepareClasses()V#ConditionalBranch(I,eq,52)#48
soot.Scene.prepareClasses()V#LocalLoad(Ljava/lang/Object;,0)#52
soot.Scene.prepareClasses()V#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/Scene;,excludedPackages)#53
soot.Scene.prepareClasses()V#Invoke(VIRTUAL,Ljava/util/LinkedList;,iterator,()Ljava/util/Iterator;)#54
soot.Scene.prepareClasses()V#LocalStore(Ljava/lang/Object;,5)#55
soot.Scene.prepareClasses()V#Goto(80)#56
soot.Scene.prepareClasses()V#LocalLoad(Ljava/lang/Object;,5)#80
soot.Scene.prepareClasses()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#81
soot.Scene.prepareClasses()V#Constant(I,0)#82
soot.Scene.prepareClasses()V#ConditionalBranch(I,ne,57)#83
soot.Scene.prepareClasses()V#LocalLoad(Ljava/lang/Object;,5)#57
soot.Scene.prepareClasses()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#58
soot.Scene.prepareClasses()V#CheckCast(Ljava/lang/String;)#59
soot.Scene.prepareClasses()V#LocalStore(Ljava/lang/Object;,6)#60
soot.Scene.prepareClasses()V#LocalLoad(Ljava/lang/Object;,3)#61
soot.Scene.prepareClasses()V#Invoke(VIRTUAL,Lsoot/SootClass;,isApplicationClass,()Z)#62
soot.Scene.prepareClasses()V#Constant(I,0)#63
soot.Scene.prepareClasses()V#ConditionalBranch(I,eq,80)#64
soot.Scene.prepareClasses()V#New(Ljava/lang/StringBuilder;,0)#65
soot.Scene.prepareClasses()V#Dup(1,0)#66
soot.Scene.prepareClasses()V#LocalLoad(Ljava/lang/Object;,3)#67
soot.Scene.prepareClasses()V#Invoke(VIRTUAL,Lsoot/SootClass;,getPackageName,()Ljava/lang/String;)#68
soot.SootClass.getPackageName()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.getPackageName()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsoot/SootClass;,packageName)#1
soot.SootClass.getPackageName()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
soot.Scene.prepareClasses()V#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#69
soot.Scene.prepareClasses()V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#70
soot.Scene.prepareClasses()V#Constant(Ljava/lang/String;,".")#71
soot.Scene.prepareClasses()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#72
soot.Scene.prepareClasses()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#73
soot.Scene.prepareClasses()V#LocalLoad(Ljava/lang/Object;,6)#74
soot.Scene.prepareClasses()V#Invoke(VIRTUAL,Ljava/lang/String;,startsWith,(Ljava/lang/String;)Z)#75
soot.Scene.prepareClasses()V#Constant(I,0)#76
soot.Scene.prepareClasses()V#ConditionalBranch(I,eq,80)#77
soot.Scene.prepareClasses()V#LocalLoad(Ljava/lang/Object;,3)#78
soot.Scene.prepareClasses()V#Invoke(VIRTUAL,Lsoot/SootClass;,setLibraryClass,()V)#79
soot.Scene.getContainingChain(Lsoot/SootClass;)Lsoot/util/Chain;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Scene.getContainingChain(Lsoot/SootClass;)Lsoot/util/Chain;#Invoke(VIRTUAL,Lsoot/Scene;,getApplicationClasses,()Lsoot/util/Chain;)#5
soot.Scene.getContainingChain(Lsoot/SootClass;)Lsoot/util/Chain;#Return(Ljava/lang/Object;)#6
soot.SootClass.setLibraryClass()V#LocalLoad(Ljava/lang/Object;,1)#7
soot.SootClass.setLibraryClass()V#LocalLoad(Ljava/lang/Object;,0)#8
soot.SootClass.setLibraryClass()V#Invoke(INTERFACE,Lsoot/util/Chain;,remove,(Ljava/lang/Object;)Z)#9
soot.SootClass.setLibraryClass()V#Pop(1)#10
soot.Scene.prepareClasses()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#84
soot.Scene.prepareClasses()V#Invoke(VIRTUAL,Lsoot/options/Options;,include,()Ljava/util/List;)#85
soot.options.Options.include()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.include()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lsoot/options/Options;,include)#1
soot.options.Options.include()Ljava/util/List;#Constant(L;,null)#2
soot.options.Options.include()Ljava/util/List;#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
soot.options.Options.include()Ljava/util/List;#Get(Ljava/util/List;,STATIC,Ljava/util/Collections;,EMPTY_LIST)#4
soot.options.Options.include()Ljava/util/List;#Return(Ljava/lang/Object;)#5
soot.Scene.prepareClasses()V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#86
soot.Scene.prepareClasses()V#LocalStore(Ljava/lang/Object;,5)#87
soot.Scene.prepareClasses()V#Goto(108)#88
soot.Scene.prepareClasses()V#LocalLoad(Ljava/lang/Object;,5)#108
soot.Scene.prepareClasses()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#109
soot.Scene.prepareClasses()V#Constant(I,0)#110
soot.Scene.prepareClasses()V#ConditionalBranch(I,ne,89)#111
soot.Scene.prepareClasses()V#LocalLoad(Ljava/lang/Object;,3)#112
soot.Scene.prepareClasses()V#Invoke(VIRTUAL,Lsoot/SootClass;,isApplicationClass,()Z)#113
soot.Scene.prepareClasses()V#Constant(I,0)#114
soot.Scene.prepareClasses()V#ConditionalBranch(I,eq,121)#115
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#LocalLoad(Ljava/lang/Object;,0)#12
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#Get(Lsoot/util/HashChain;,NONSTATIC,Lsoot/util/HashChain$Link;,this$0)#13
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#Constant(L;,null)#14
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#Invoke(STATIC,Lsoot/util/HashChain;,access$0,(Lsoot/util/HashChain;Ljava/lang/Object;)V)#15
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#Goto(20)#16
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#LocalLoad(Ljava/lang/Object;,0)#32
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#Get(Lsoot/util/HashChain;,NONSTATIC,Lsoot/util/HashChain$Link;,this$0)#33
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#Constant(L;,null)#34
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#Invoke(STATIC,Lsoot/util/HashChain;,access$1,(Lsoot/util/HashChain;Ljava/lang/Object;)V)#35
soot.util.HashChain$Link.bind(Lsoot/util/HashChain$Link;Lsoot/util/HashChain$Link;)V#Goto(40)#36
soot.Scene.prepareClasses()V#LocalLoad(Ljava/lang/Object;,3)#49
soot.Scene.prepareClasses()V#Invoke(VIRTUAL,Lsoot/SootClass;,setApplicationClass,()V)#50
soot.Scene.prepareClasses()V#Goto(121)#51
soot.Scene.prepareClasses()V#LocalLoad(Ljava/lang/Object;,0)#116
soot.Scene.prepareClasses()V#LocalLoad(Ljava/lang/Object;,3)#117
soot.Scene.prepareClasses()V#Invoke(VIRTUAL,Lsoot/SootClass;,getName,()Ljava/lang/String;)#118
soot.Scene.prepareClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,loadClassAndSupport,(Ljava/lang/String;)Lsoot/SootClass;)#119
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,13)#340
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#New(Lsoot/tagkit/DeprecatedTag;,0)#341
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Dup(1,0)#342
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(SPECIAL,Lsoot/tagkit/DeprecatedTag;,<init>,()V)#343
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/SootField;,addTag,(Lsoot/tagkit/Tag;)V)#344
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Goto(425)#345
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#372
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/field_info;,attributes)#373
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,14)#374
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#375
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Instanceof(Lsoot/coffi/RuntimeVisibleAnnotations_attribute;)#376
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Constant(I,0)#377
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ConditionalBranch(I,ne,386)#378
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#386
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,13)#387
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#388
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/field_info;,attributes)#389
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(I,14)#390
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#391
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#392
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#393
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Invoke(SPECIAL,Lsoot/coffi/Util;,addAnnotationVisibilityAttribute,(Lsoot/tagkit/Host;Lsoot/coffi/attribute_info;Lsoot/coffi/ClassFile;Ljava/util/List;)V)#394
soot.coffi.Util.resolveFromClassFile(Lsoot/SootClass;Ljava/io/InputStream;Ljava/util/List;)V#Goto(425)#395
soot.Scene.prepareClasses()V#Pop(1)#120
soot.Scene.prepareClasses()V#Goto(4)#125
soot.util.HashChain$LinkIterator.remove()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.HashChain$LinkIterator.remove()V#Get(Lsoot/util/HashChain;,NONSTATIC,Lsoot/util/HashChain$LinkIterator;,this$0)#1
soot.util.HashChain$LinkIterator.remove()V#Invoke(STATIC,Lsoot/util/HashChain;,access$3,(Lsoot/util/HashChain;)J)#2
soot.util.HashChain$LinkIterator.remove()V#LocalLoad(Ljava/lang/Object;,0)#3
soot.util.HashChain$LinkIterator.remove()V#Get(J,NONSTATIC,Lsoot/util/HashChain$LinkIterator;,iteratorStateCount)#4
soot.util.HashChain$LinkIterator.remove()V#Comparison(J,cmp)#5
soot.util.HashChain$LinkIterator.remove()V#Constant(I,0)#6
soot.util.HashChain$LinkIterator.remove()V#ConditionalBranch(I,eq,12)#7
soot.util.HashChain$LinkIterator.remove()V#LocalLoad(Ljava/lang/Object;,0)#12
soot.util.HashChain$LinkIterator.remove()V#Get(Lsoot/util/HashChain;,NONSTATIC,Lsoot/util/HashChain$LinkIterator;,this$0)#13
soot.util.HashChain$LinkIterator.remove()V#Dup(1,0)#14
soot.util.HashChain$LinkIterator.remove()V#Invoke(STATIC,Lsoot/util/HashChain;,access$3,(Lsoot/util/HashChain;)J)#15
soot.util.HashChain$LinkIterator.remove()V#Constant(J,1)#16
soot.util.HashChain$LinkIterator.remove()V#BinaryOp(J,add)#17
soot.util.HashChain$LinkIterator.remove()V#Invoke(STATIC,Lsoot/util/HashChain;,access$4,(Lsoot/util/HashChain;J)V)#18
soot.util.HashChain.access$4(Lsoot/util/HashChain;J)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.HashChain.access$4(Lsoot/util/HashChain;J)V#LocalLoad(J,1)#1
soot.util.HashChain.access$4(Lsoot/util/HashChain;J)V#Put(J,NONSTATIC,Lsoot/util/HashChain;,stateCount)#2
soot.util.HashChain.access$4(Lsoot/util/HashChain;J)V#Return(V)#3
soot.util.HashChain$LinkIterator.remove()V#LocalLoad(Ljava/lang/Object;,0)#19
soot.util.HashChain$LinkIterator.remove()V#Dup(1,0)#20
soot.util.HashChain$LinkIterator.remove()V#Get(J,NONSTATIC,Lsoot/util/HashChain$LinkIterator;,iteratorStateCount)#21
soot.util.HashChain$LinkIterator.remove()V#Constant(J,1)#22
soot.util.HashChain$LinkIterator.remove()V#BinaryOp(J,add)#23
soot.util.HashChain$LinkIterator.remove()V#Put(J,NONSTATIC,Lsoot/util/HashChain$LinkIterator;,iteratorStateCount)#24
soot.util.HashChain$LinkIterator.remove()V#LocalLoad(Ljava/lang/Object;,0)#25
soot.util.HashChain$LinkIterator.remove()V#Get(Z,NONSTATIC,Lsoot/util/HashChain$LinkIterator;,state)#26
soot.util.HashChain$LinkIterator.remove()V#Constant(I,0)#27
soot.util.HashChain$LinkIterator.remove()V#ConditionalBranch(I,ne,33)#28
soot.util.HashChain$LinkIterator.remove()V#LocalLoad(Ljava/lang/Object;,0)#33
soot.util.HashChain$LinkIterator.remove()V#Get(Lsoot/util/HashChain$Link;,NONSTATIC,Lsoot/util/HashChain$LinkIterator;,currentLink)#34
soot.util.HashChain$LinkIterator.remove()V#Invoke(VIRTUAL,Lsoot/util/HashChain$Link;,unlinkSelf,()V)#35
soot.util.HashChain$LinkIterator.remove()V#LocalLoad(Ljava/lang/Object;,0)#36
soot.util.HashChain$LinkIterator.remove()V#Get(Lsoot/util/HashChain;,NONSTATIC,Lsoot/util/HashChain$LinkIterator;,this$0)#37
soot.util.HashChain$LinkIterator.remove()V#Invoke(STATIC,Lsoot/util/HashChain;,access$2,(Lsoot/util/HashChain;)Ljava/util/HashMap;)#38
soot.util.HashChain$LinkIterator.remove()V#LocalLoad(Ljava/lang/Object;,0)#39
soot.util.HashChain$LinkIterator.remove()V#Get(Lsoot/util/HashChain$Link;,NONSTATIC,Lsoot/util/HashChain$LinkIterator;,currentLink)#40
soot.util.HashChain$LinkIterator.remove()V#Invoke(VIRTUAL,Lsoot/util/HashChain$Link;,getItem,()Ljava/lang/Object;)#41
soot.util.HashChain$LinkIterator.remove()V#Invoke(VIRTUAL,Ljava/util/HashMap;,remove,(Ljava/lang/Object;)Ljava/lang/Object;)#42
soot.util.HashChain$LinkIterator.remove()V#Pop(1)#43
soot.util.HashChain$LinkIterator.remove()V#LocalLoad(Ljava/lang/Object;,0)#44
soot.util.HashChain$LinkIterator.remove()V#Constant(I,0)#45
soot.util.HashChain$LinkIterator.remove()V#Put(Z,NONSTATIC,Lsoot/util/HashChain$LinkIterator;,state)#46
soot.util.HashChain$LinkIterator.remove()V#Return(V)#47
soot.Scene.prepareClasses()V#Goto(126)#18
soot.Scene.prepareClasses()V#Return(V)#126
soot.Scene.loadNecessaryClasses()V#LocalLoad(Ljava/lang/Object;,0)#53
soot.Scene.loadNecessaryClasses()V#Invoke(VIRTUAL,Lsoot/Scene;,setDoneResolving,()V)#54
soot.Scene.setDoneResolving()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.setDoneResolving()V#Constant(I,1)#1
soot.Scene.setDoneResolving()V#Put(Z,NONSTATIC,Lsoot/Scene;,doneResolving)#2
soot.Scene.setDoneResolving()V#Return(V)#3
soot.Scene.loadNecessaryClasses()V#Return(V)#55
soot.Main.run([Ljava/lang/String;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#30
soot.Main.run([Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/options/Options;,ast_metrics,()Z)#31
soot.options.Options.ast_metrics()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.ast_metrics()Z#Get(Z,NONSTATIC,Lsoot/options/Options;,ast_metrics)#1
soot.options.Options.ast_metrics()Z#Return(I)#2
soot.Main.run([Ljava/lang/String;)V#Constant(I,0)#32
soot.Main.run([Ljava/lang/String;)V#ConditionalBranch(I,eq,86)#33
soot.Main.run([Ljava/lang/String;)V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#86
soot.Main.run([Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/PackManager;,runPacks,()V)#87
soot.PackManager.runPacks()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#0
soot.PackManager.runPacks()V#Invoke(VIRTUAL,Lsoot/options/Options;,src_prec,()I)#1
soot.PackManager.runPacks()V#Constant(I,1)#2
soot.PackManager.runPacks()V#ConditionalBranch(I,ne,14)#3
soot.PackManager.runPacks()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#4
soot.PackManager.runPacks()V#Invoke(VIRTUAL,Lsoot/options/Options;,keep_line_number,()Z)#5
soot.options.Options.keep_line_number()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.keep_line_number()Z#Get(Z,NONSTATIC,Lsoot/options/Options;,keep_line_number)#1
soot.options.Options.keep_line_number()Z#Return(I)#2
soot.PackManager.runPacks()V#Constant(I,0)#6
soot.PackManager.runPacks()V#ConditionalBranch(I,eq,14)#7
soot.PackManager.runPacks()V#Invoke(STATIC,Lsoot/jimple/toolkits/annotation/LineNumberAdder;,v,()Lsoot/jimple/toolkits/annotation/LineNumberAdder;)#8
soot.jimple.toolkits.annotation.LineNumberAdder.v()Lsoot/jimple/toolkits/annotation/LineNumberAdder;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.toolkits.annotation.LineNumberAdder.v()Lsoot/jimple/toolkits/annotation/LineNumberAdder;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_toolkits_annotation_LineNumberAdder,()Lsoot/jimple/toolkits/annotation/LineNumberAdder;)#1
soot.Singletons.soot_jimple_toolkits_annotation_LineNumberAdder()Lsoot/jimple/toolkits/annotation/LineNumberAdder;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_toolkits_annotation_LineNumberAdder()Lsoot/jimple/toolkits/annotation/LineNumberAdder;#Get(Lsoot/jimple/toolkits/annotation/LineNumberAdder;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_LineNumberAdder)#1
soot.Singletons.soot_jimple_toolkits_annotation_LineNumberAdder()Lsoot/jimple/toolkits/annotation/LineNumberAdder;#Constant(L;,null)#2
soot.Singletons.soot_jimple_toolkits_annotation_LineNumberAdder()Lsoot/jimple/toolkits/annotation/LineNumberAdder;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_toolkits_annotation_LineNumberAdder()Lsoot/jimple/toolkits/annotation/LineNumberAdder;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_toolkits_annotation_LineNumberAdder()Lsoot/jimple/toolkits/annotation/LineNumberAdder;#New(Lsoot/jimple/toolkits/annotation/LineNumberAdder;,0)#5
soot.Singletons.soot_jimple_toolkits_annotation_LineNumberAdder()Lsoot/jimple/toolkits/annotation/LineNumberAdder;#Dup(1,0)#6
soot.Singletons.soot_jimple_toolkits_annotation_LineNumberAdder()Lsoot/jimple/toolkits/annotation/LineNumberAdder;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_toolkits_annotation_LineNumberAdder()Lsoot/jimple/toolkits/annotation/LineNumberAdder;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_toolkits_annotation_LineNumberAdder()Lsoot/jimple/toolkits/annotation/LineNumberAdder;#Invoke(SPECIAL,Lsoot/jimple/toolkits/annotation/LineNumberAdder;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.toolkits.annotation.LineNumberAdder.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.annotation.LineNumberAdder.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/SceneTransformer;,<init>,()V)#1
soot.jimple.toolkits.annotation.LineNumberAdder.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_toolkits_annotation_LineNumberAdder()Lsoot/jimple/toolkits/annotation/LineNumberAdder;#Put(Lsoot/jimple/toolkits/annotation/LineNumberAdder;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_LineNumberAdder)#10
soot.Singletons.soot_jimple_toolkits_annotation_LineNumberAdder()Lsoot/jimple/toolkits/annotation/LineNumberAdder;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_toolkits_annotation_LineNumberAdder()Lsoot/jimple/toolkits/annotation/LineNumberAdder;#Get(Lsoot/jimple/toolkits/annotation/LineNumberAdder;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_toolkits_annotation_LineNumberAdder)#12
soot.Singletons.soot_jimple_toolkits_annotation_LineNumberAdder()Lsoot/jimple/toolkits/annotation/LineNumberAdder;#Return(Ljava/lang/Object;)#13
soot.jimple.toolkits.annotation.LineNumberAdder.v()Lsoot/jimple/toolkits/annotation/LineNumberAdder;#Return(Ljava/lang/Object;)#2
soot.PackManager.runPacks()V#LocalStore(Ljava/lang/Object;,1)#9
soot.PackManager.runPacks()V#LocalLoad(Ljava/lang/Object;,1)#10
soot.PackManager.runPacks()V#Constant(Ljava/lang/String;,"")#11
soot.PackManager.runPacks()V#Constant(L;,null)#12
soot.PackManager.runPacks()V#Invoke(VIRTUAL,Lsoot/jimple/toolkits/annotation/LineNumberAdder;,internalTransform,(Ljava/lang/String;Ljava/util/Map;)V)#13
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#0
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Scene;,getApplicationClasses,()Lsoot/util/Chain;)#1
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#2
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,3)#3
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Goto(144)#4
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#144
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#145
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#146
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,5)#147
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#5
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#6
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/SootClass;)#7
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,4)#8
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/util/HashMap;,0)#9
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#10
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#11
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,5)#12
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#13
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getMethods,()Ljava/util/List;)#14
soot.SootClass.checkLevel(I)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.SootClass.checkLevel(I)V#Get(I,NONSTATIC,Lsoot/SootClass;,resolvingLevel)#6
soot.SootClass.checkLevel(I)V#LocalLoad(I,1)#7
soot.SootClass.checkLevel(I)V#ConditionalBranch(I,ge,55)#8
soot.SootClass.checkLevel(I)V#Return(V)#55
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#15
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,6)#16
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Goto(65)#17
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#65
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#66
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#67
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,18)#68
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#18
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#19
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/SootMethod;)#20
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,7)#21
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#22
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,isConcrete,()Z)#23
soot.SootMethod.isConcrete()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethod.isConcrete()Z#Invoke(VIRTUAL,Lsoot/SootMethod;,isPhantom,()Z)#1
soot.SootMethod.isPhantom()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethod.isPhantom()Z#Get(Z,NONSTATIC,Lsoot/SootMethod;,isPhantom)#1
soot.SootMethod.isPhantom()Z#Return(I)#2
soot.SootMethod.isConcrete()Z#Constant(I,0)#2
soot.SootMethod.isConcrete()Z#ConditionalBranch(I,ne,14)#3
soot.SootMethod.isConcrete()Z#LocalLoad(Ljava/lang/Object;,0)#4
soot.SootMethod.isConcrete()Z#Invoke(VIRTUAL,Lsoot/SootMethod;,isAbstract,()Z)#5
soot.SootMethod.isAbstract()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethod.isAbstract()Z#Invoke(VIRTUAL,Lsoot/SootMethod;,getModifiers,()I)#1
soot.SootMethod.getModifiers()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethod.getModifiers()I#Get(I,NONSTATIC,Lsoot/SootMethod;,modifiers)#1
soot.SootMethod.getModifiers()I#Return(I)#2
soot.SootMethod.isAbstract()Z#Invoke(STATIC,Lsoot/Modifier;,isAbstract,(I)Z)#2
soot.Modifier.isAbstract(I)Z#LocalLoad(I,0)#0
soot.Modifier.isAbstract(I)Z#Constant(I,1024)#1
soot.Modifier.isAbstract(I)Z#BinaryOp(I,and)#2
soot.Modifier.isAbstract(I)Z#Constant(I,0)#3
soot.Modifier.isAbstract(I)Z#ConditionalBranch(I,eq,7)#4
soot.Modifier.isAbstract(I)Z#Constant(I,0)#7
soot.Modifier.isAbstract(I)Z#Return(I)#8
soot.SootMethod.isAbstract()Z#Return(I)#3
soot.SootMethod.isConcrete()Z#Constant(I,0)#6
soot.SootMethod.isConcrete()Z#ConditionalBranch(I,ne,14)#7
soot.SootMethod.isConcrete()Z#LocalLoad(Ljava/lang/Object;,0)#8
soot.SootMethod.isConcrete()Z#Invoke(VIRTUAL,Lsoot/SootMethod;,isNative,()Z)#9
soot.SootMethod.isNative()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethod.isNative()Z#Invoke(VIRTUAL,Lsoot/SootMethod;,getModifiers,()I)#1
soot.SootMethod.isNative()Z#Invoke(STATIC,Lsoot/Modifier;,isNative,(I)Z)#2
soot.Modifier.isNative(I)Z#LocalLoad(I,0)#0
soot.Modifier.isNative(I)Z#Constant(I,256)#1
soot.Modifier.isNative(I)Z#BinaryOp(I,and)#2
soot.Modifier.isNative(I)Z#Constant(I,0)#3
soot.Modifier.isNative(I)Z#ConditionalBranch(I,eq,7)#4
soot.Modifier.isNative(I)Z#Constant(I,0)#7
soot.Modifier.isNative(I)Z#Return(I)#8
soot.SootMethod.isNative()Z#Return(I)#3
soot.SootMethod.isConcrete()Z#Constant(I,0)#10
soot.SootMethod.isConcrete()Z#ConditionalBranch(I,ne,14)#11
soot.SootMethod.isConcrete()Z#Constant(I,1)#12
soot.SootMethod.isConcrete()Z#Return(I)#13
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#24
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,27)#25
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#27
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,retrieveActiveBody,()Lsoot/Body;)#28
soot.SootMethod.retrieveActiveBody()Lsoot/Body;#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethod.retrieveActiveBody()Lsoot/Body;#Get(Lsoot/SootClass;,NONSTATIC,Lsoot/SootMethod;,declaringClass)#1
soot.SootMethod.retrieveActiveBody()Lsoot/Body;#Constant(I,3)#2
soot.SootMethod.retrieveActiveBody()Lsoot/Body;#Invoke(VIRTUAL,Lsoot/SootClass;,checkLevel,(I)V)#3
soot.SootMethod.retrieveActiveBody()Lsoot/Body;#LocalLoad(Ljava/lang/Object;,0)#4
soot.SootMethod.retrieveActiveBody()Lsoot/Body;#Get(Lsoot/SootClass;,NONSTATIC,Lsoot/SootMethod;,declaringClass)#5
soot.SootMethod.retrieveActiveBody()Lsoot/Body;#Invoke(VIRTUAL,Lsoot/SootClass;,isPhantomClass,()Z)#6
soot.SootMethod.retrieveActiveBody()Lsoot/Body;#Constant(I,0)#7
soot.SootMethod.retrieveActiveBody()Lsoot/Body;#ConditionalBranch(I,eq,23)#8
soot.SootMethod.retrieveActiveBody()Lsoot/Body;#LocalLoad(Ljava/lang/Object;,0)#23
soot.SootMethod.retrieveActiveBody()Lsoot/Body;#Invoke(VIRTUAL,Lsoot/SootMethod;,hasActiveBody,()Z)#24
soot.SootMethod.hasActiveBody()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethod.hasActiveBody()Z#Get(Lsoot/Body;,NONSTATIC,Lsoot/SootMethod;,activeBody)#1
soot.SootMethod.hasActiveBody()Z#Constant(L;,null)#2
soot.SootMethod.hasActiveBody()Z#ConditionalBranch(Ljava/lang/Object;,eq,6)#3
soot.SootMethod.hasActiveBody()Z#Constant(I,0)#6
soot.SootMethod.hasActiveBody()Z#Return(I)#7
soot.SootMethod.retrieveActiveBody()Lsoot/Body;#Constant(I,0)#25
soot.SootMethod.retrieveActiveBody()Lsoot/Body;#ConditionalBranch(I,ne,35)#26
soot.SootMethod.retrieveActiveBody()Lsoot/Body;#LocalLoad(Ljava/lang/Object;,0)#27
soot.SootMethod.retrieveActiveBody()Lsoot/Body;#LocalLoad(Ljava/lang/Object;,0)#28
soot.SootMethod.retrieveActiveBody()Lsoot/Body;#Constant(Ljava/lang/String;,"jb")#29
soot.SootMethod.retrieveActiveBody()Lsoot/Body;#Invoke(SPECIAL,Lsoot/SootMethod;,getBodyFromMethodSource,(Ljava/lang/String;)Lsoot/Body;)#30
soot.SootMethod.getBodyFromMethodSource(Ljava/lang/String;)Lsoot/Body;#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethod.getBodyFromMethodSource(Ljava/lang/String;)Lsoot/Body;#Get(Lsoot/MethodSource;,NONSTATIC,Lsoot/SootMethod;,ms)#1
soot.SootMethod.getBodyFromMethodSource(Ljava/lang/String;)Lsoot/Body;#LocalLoad(Ljava/lang/Object;,0)#2
soot.SootMethod.getBodyFromMethodSource(Ljava/lang/String;)Lsoot/Body;#LocalLoad(Ljava/lang/Object;,1)#3
soot.SootMethod.getBodyFromMethodSource(Ljava/lang/String;)Lsoot/Body;#Invoke(INTERFACE,Lsoot/MethodSource;,getBody,(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;)#4
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Invoke(STATIC,Lsoot/jimple/Jimple;,v,()Lsoot/jimple/Jimple;)#0
soot.jimple.Jimple.v()Lsoot/jimple/Jimple;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.jimple.Jimple.v()Lsoot/jimple/Jimple;#Invoke(VIRTUAL,Lsoot/G;,soot_jimple_Jimple,()Lsoot/jimple/Jimple;)#1
soot.Singletons.soot_jimple_Jimple()Lsoot/jimple/Jimple;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_jimple_Jimple()Lsoot/jimple/Jimple;#Get(Lsoot/jimple/Jimple;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_Jimple)#1
soot.Singletons.soot_jimple_Jimple()Lsoot/jimple/Jimple;#Constant(L;,null)#2
soot.Singletons.soot_jimple_Jimple()Lsoot/jimple/Jimple;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_jimple_Jimple()Lsoot/jimple/Jimple;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_jimple_Jimple()Lsoot/jimple/Jimple;#New(Lsoot/jimple/Jimple;,0)#5
soot.Singletons.soot_jimple_Jimple()Lsoot/jimple/Jimple;#Dup(1,0)#6
soot.Singletons.soot_jimple_Jimple()Lsoot/jimple/Jimple;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_jimple_Jimple()Lsoot/jimple/Jimple;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_jimple_Jimple()Lsoot/jimple/Jimple;#Invoke(SPECIAL,Lsoot/jimple/Jimple;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.jimple.Jimple.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.Jimple.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.jimple.Jimple.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_jimple_Jimple()Lsoot/jimple/Jimple;#Put(Lsoot/jimple/Jimple;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_Jimple)#10
soot.Singletons.soot_jimple_Jimple()Lsoot/jimple/Jimple;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_jimple_Jimple()Lsoot/jimple/Jimple;#Get(Lsoot/jimple/Jimple;,NONSTATIC,Lsoot/Singletons;,instance_soot_jimple_Jimple)#12
soot.Singletons.soot_jimple_Jimple()Lsoot/jimple/Jimple;#Return(Ljava/lang/Object;)#13
soot.jimple.Jimple.v()Lsoot/jimple/Jimple;#Return(Ljava/lang/Object;)#2
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalLoad(Ljava/lang/Object;,1)#1
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Invoke(VIRTUAL,Lsoot/jimple/Jimple;,newBody,(Lsoot/SootMethod;)Lsoot/jimple/JimpleBody;)#2
soot.jimple.Jimple.newBody(Lsoot/SootMethod;)Lsoot/jimple/JimpleBody;#New(Lsoot/jimple/JimpleBody;,0)#0
soot.jimple.Jimple.newBody(Lsoot/SootMethod;)Lsoot/jimple/JimpleBody;#Dup(1,0)#1
soot.jimple.Jimple.newBody(Lsoot/SootMethod;)Lsoot/jimple/JimpleBody;#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.Jimple.newBody(Lsoot/SootMethod;)Lsoot/jimple/JimpleBody;#Invoke(SPECIAL,Lsoot/jimple/JimpleBody;,<init>,(Lsoot/SootMethod;)V)#3
soot.jimple.JimpleBody.<init>(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.JimpleBody.<init>(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.jimple.JimpleBody.<init>(Lsoot/SootMethod;)V#Invoke(SPECIAL,Lsoot/jimple/StmtBody;,<init>,(Lsoot/SootMethod;)V)#2
soot.jimple.StmtBody.<init>(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.StmtBody.<init>(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.jimple.StmtBody.<init>(Lsoot/SootMethod;)V#Invoke(SPECIAL,Lsoot/Body;,<init>,(Lsoot/SootMethod;)V)#2
soot.Body.<init>(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Body.<init>(Lsoot/SootMethod;)V#Invoke(SPECIAL,Lsoot/tagkit/AbstractHost;,<init>,()V)#1
soot.Body.<init>(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.Body.<init>(Lsoot/SootMethod;)V#Constant(L;,null)#3
soot.Body.<init>(Lsoot/SootMethod;)V#Put(Lsoot/SootMethod;,NONSTATIC,Lsoot/Body;,method)#4
soot.Body.<init>(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.Body.<init>(Lsoot/SootMethod;)V#New(Lsoot/util/HashChain;,0)#6
soot.Body.<init>(Lsoot/SootMethod;)V#Dup(1,0)#7
soot.Body.<init>(Lsoot/SootMethod;)V#Invoke(SPECIAL,Lsoot/util/HashChain;,<init>,()V)#8
soot.Body.<init>(Lsoot/SootMethod;)V#Put(Lsoot/util/Chain;,NONSTATIC,Lsoot/Body;,localChain)#9
soot.Body.<init>(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#10
soot.Body.<init>(Lsoot/SootMethod;)V#New(Lsoot/util/HashChain;,0)#11
soot.Body.<init>(Lsoot/SootMethod;)V#Dup(1,0)#12
soot.Body.<init>(Lsoot/SootMethod;)V#Invoke(SPECIAL,Lsoot/util/HashChain;,<init>,()V)#13
soot.Body.<init>(Lsoot/SootMethod;)V#Put(Lsoot/util/Chain;,NONSTATIC,Lsoot/Body;,trapChain)#14
soot.Body.<init>(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#15
soot.Body.<init>(Lsoot/SootMethod;)V#New(Lsoot/PatchingChain;,0)#16
soot.Body.<init>(Lsoot/SootMethod;)V#Dup(1,0)#17
soot.Body.<init>(Lsoot/SootMethod;)V#New(Lsoot/util/HashChain;,0)#18
soot.Body.<init>(Lsoot/SootMethod;)V#Dup(1,0)#19
soot.Body.<init>(Lsoot/SootMethod;)V#Invoke(SPECIAL,Lsoot/util/HashChain;,<init>,()V)#20
soot.Body.<init>(Lsoot/SootMethod;)V#Invoke(SPECIAL,Lsoot/PatchingChain;,<init>,(Lsoot/util/Chain;)V)#21
soot.PatchingChain.<init>(Lsoot/util/Chain;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.PatchingChain.<init>(Lsoot/util/Chain;)V#Invoke(SPECIAL,Ljava/util/AbstractCollection;,<init>,()V)#1
soot.PatchingChain.<init>(Lsoot/util/Chain;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.PatchingChain.<init>(Lsoot/util/Chain;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.PatchingChain.<init>(Lsoot/util/Chain;)V#Put(Lsoot/util/Chain;,NONSTATIC,Lsoot/PatchingChain;,innerChain)#4
soot.PatchingChain.<init>(Lsoot/util/Chain;)V#Return(V)#5
soot.Body.<init>(Lsoot/SootMethod;)V#Put(Lsoot/PatchingChain;,NONSTATIC,Lsoot/Body;,unitChain)#22
soot.Body.<init>(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#23
soot.Body.<init>(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#24
soot.Body.<init>(Lsoot/SootMethod;)V#Put(Lsoot/SootMethod;,NONSTATIC,Lsoot/Body;,method)#25
soot.Body.<init>(Lsoot/SootMethod;)V#Return(V)#26
soot.jimple.StmtBody.<init>(Lsoot/SootMethod;)V#Return(V)#3
soot.jimple.JimpleBody.<init>(Lsoot/SootMethod;)V#Return(V)#3
soot.jimple.Jimple.newBody(Lsoot/SootMethod;)Lsoot/jimple/JimpleBody;#Return(Ljava/lang/Object;)#4
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalStore(Ljava/lang/Object;,3)#3
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Invoke(STATIC,Lsoot/PhaseOptions;,v,()Lsoot/PhaseOptions;)#4
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalLoad(Ljava/lang/Object;,2)#5
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Invoke(VIRTUAL,Lsoot/PhaseOptions;,getPhaseOptions,(Ljava/lang/String;)Ljava/util/Map;)#6
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:true use-original-names:false preserve-source-annotations:false ")#5
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#6
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalStore(Ljava/lang/Object;,4)#7
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalLoad(Ljava/lang/Object;,4)#8
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Constant(Ljava/lang/String;,"use-original-names")#9
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Invoke(STATIC,Lsoot/PhaseOptions;,getBoolean,(Ljava/util/Map;Ljava/lang/String;)Z)#10
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalStore(I,5)#11
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalLoad(I,5)#12
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Constant(I,0)#13
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#ConditionalBranch(I,eq,18)#14
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#18
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Invoke(VIRTUAL,Lsoot/options/Options;,verbose,()Z)#19
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Constant(I,0)#20
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#ConditionalBranch(I,eq,35)#21
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalLoad(Ljava/lang/Object;,1)#35
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Invoke(VIRTUAL,Lsoot/SootMethod;,isAbstract,()Z)#36
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Constant(I,0)#37
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#ConditionalBranch(I,ne,47)#38
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalLoad(Ljava/lang/Object;,1)#39
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Invoke(VIRTUAL,Lsoot/SootMethod;,isNative,()Z)#40
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Constant(I,0)#41
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#ConditionalBranch(I,ne,47)#42
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalLoad(Ljava/lang/Object;,1)#43
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Invoke(VIRTUAL,Lsoot/SootMethod;,isPhantom,()Z)#44
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Constant(I,0)#45
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#ConditionalBranch(I,eq,49)#46
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#49
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#50
soot.options.Options.time()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.time()Z#Get(Z,NONSTATIC,Lsoot/options/Options;,time)#1
soot.options.Options.time()Z#Return(I)#2
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Constant(I,0)#51
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#ConditionalBranch(I,eq,56)#52
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalLoad(Ljava/lang/Object;,0)#56
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Get(Lsoot/coffi/method_info;,NONSTATIC,Lsoot/coffi/CoffiMethodSource;,coffiMethod)#57
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Constant(L;,null)#58
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#ConditionalBranch(Ljava/lang/Object;,ne,64)#59
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalLoad(Ljava/lang/Object;,0)#64
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Get(Lsoot/coffi/method_info;,NONSTATIC,Lsoot/coffi/CoffiMethodSource;,coffiMethod)#65
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/method_info;,instructions)#66
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Constant(L;,null)#67
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#ConditionalBranch(Ljava/lang/Object;,ne,92)#68
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#69
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Invoke(VIRTUAL,Lsoot/options/Options;,verbose,()Z)#70
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Constant(I,0)#71
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#ConditionalBranch(I,eq,86)#72
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalLoad(Ljava/lang/Object;,0)#86
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Get(Lsoot/coffi/ClassFile;,NONSTATIC,Lsoot/coffi/CoffiMethodSource;,coffiClass)#87
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalLoad(Ljava/lang/Object;,0)#88
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Get(Lsoot/coffi/method_info;,NONSTATIC,Lsoot/coffi/CoffiMethodSource;,coffiMethod)#89
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Invoke(VIRTUAL,Lsoot/coffi/ClassFile;,parseMethod,(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;)#90
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Constant(L;,null)#0
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalStore(Ljava/lang/Object;,6)#1
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Constant(L;,null)#2
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalStore(Ljava/lang/Object;,7)#3
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#New(Lsoot/coffi/ByteCode;,0)#4
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Dup(1,0)#5
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Invoke(SPECIAL,Lsoot/coffi/ByteCode;,<init>,()V)#6
soot.coffi.ByteCode.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.ByteCode.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.coffi.ByteCode.<init>()V#Return(V)#2
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalStore(Ljava/lang/Object;,4)#7
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,1)#8
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Invoke(VIRTUAL,Lsoot/coffi/method_info;,locate_code_attribute,()Lsoot/coffi/Code_attribute;)#9
soot.coffi.method_info.locate_code_attribute()Lsoot/coffi/Code_attribute;#Constant(I,0)#0
soot.coffi.method_info.locate_code_attribute()Lsoot/coffi/Code_attribute;#LocalStore(I,2)#1
soot.coffi.method_info.locate_code_attribute()Lsoot/coffi/Code_attribute;#Goto(19)#2
soot.coffi.method_info.locate_code_attribute()Lsoot/coffi/Code_attribute;#LocalLoad(I,2)#19
soot.coffi.method_info.locate_code_attribute()Lsoot/coffi/Code_attribute;#LocalLoad(Ljava/lang/Object;,0)#20
soot.coffi.method_info.locate_code_attribute()Lsoot/coffi/Code_attribute;#Get(I,NONSTATIC,Lsoot/coffi/method_info;,attributes_count)#21
soot.coffi.method_info.locate_code_attribute()Lsoot/coffi/Code_attribute;#ConditionalBranch(I,lt,3)#22
soot.coffi.method_info.locate_code_attribute()Lsoot/coffi/Code_attribute;#LocalLoad(Ljava/lang/Object;,0)#3
soot.coffi.method_info.locate_code_attribute()Lsoot/coffi/Code_attribute;#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/method_info;,attributes)#4
soot.coffi.method_info.locate_code_attribute()Lsoot/coffi/Code_attribute;#LocalLoad(I,2)#5
soot.coffi.method_info.locate_code_attribute()Lsoot/coffi/Code_attribute;#ArrayLoad(Ljava/lang/Object;)#6
soot.coffi.method_info.locate_code_attribute()Lsoot/coffi/Code_attribute;#LocalStore(Ljava/lang/Object;,1)#7
soot.coffi.method_info.locate_code_attribute()Lsoot/coffi/Code_attribute;#LocalLoad(Ljava/lang/Object;,1)#8
soot.coffi.method_info.locate_code_attribute()Lsoot/coffi/Code_attribute;#Instanceof(Lsoot/coffi/Code_attribute;)#9
soot.coffi.method_info.locate_code_attribute()Lsoot/coffi/Code_attribute;#Constant(I,0)#10
soot.coffi.method_info.locate_code_attribute()Lsoot/coffi/Code_attribute;#ConditionalBranch(I,eq,15)#11
soot.coffi.method_info.locate_code_attribute()Lsoot/coffi/Code_attribute;#LocalLoad(Ljava/lang/Object;,1)#12
soot.coffi.method_info.locate_code_attribute()Lsoot/coffi/Code_attribute;#CheckCast(Lsoot/coffi/Code_attribute;)#13
soot.coffi.method_info.locate_code_attribute()Lsoot/coffi/Code_attribute;#Return(Ljava/lang/Object;)#14
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalStore(Ljava/lang/Object;,3)#10
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,3)#11
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Constant(L;,null)#12
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#ConditionalBranch(Ljava/lang/Object;,ne,16)#13
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Constant(I,0)#16
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalStore(I,2)#17
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Goto(80)#18
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(I,2)#80
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Conversion(I,J)#81
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,3)#82
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Get(J,NONSTATIC,Lsoot/coffi/Code_attribute;,code_length)#83
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Comparison(J,cmp)#84
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Constant(I,0)#85
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#ConditionalBranch(I,lt,19)#86
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,4)#19
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,3)#20
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Get([B,NONSTATIC,Lsoot/coffi/Code_attribute;,code)#21
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(I,2)#22
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Invoke(VIRTUAL,Lsoot/coffi/ByteCode;,disassemble_bytecode,([BI)Lsoot/coffi/Instruction;)#23
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,1)#0
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#LocalLoad(I,2)#1
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#ArrayLoad(B)#2
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#LocalStore(I,3)#3
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Constant(I,0)#4
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#LocalStore(I,4)#5
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#LocalLoad(I,3)#6
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Constant(I,255)#7
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#BinaryOp(I,and)#8
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#LocalStore(I,6)#9
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#LocalLoad(I,6)#10
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Switch(1115,0,555,1,37,2,42,3,47,4,52,5,57,6,62,7,67,8,72,9,77,10,82,11,87,12,92,13,97,14,102,15,107,16,12,17,17,18,22,19,27,20,32,21,112,22,137,23,162,24,187,25,212,26,117,27,122,28,127,29,132,30,142,31,147,32,152,33,157,34,167,35,172,36,177,37,182,38,192,39,197,40,202,41,207,42,217,43,222,44,227,45,232,46,475,47,480,48,485,49,490,50,495,51,500,52,505,53,510,54,237,55,262,56,287,57,312,58,337,59,242,60,247,61,252,62,257,63,267,64,272,65,277,66,282,67,292,68,297,69,302,70,307,71,317,72,322,73,327,74,332,75,342,76,347,77,352,78,357,79,515,80,520,81,525,82,530,83,535,84,540,85,545,86,550,87,560,88,565,89,570,90,580,91,585,92,575,93,590,94,595,95,600,96,605,97,610,98,615,99,620,100,625,101,630,102,635,103,640,104,645,105,650,106,655,107,660,108,665,109,670,110,675,111,680,112,685,113,690,114,695,115,700,116,705,117,710,118,715,119,720,120,725,121,740,122,730,123,745,124,735,125,750,126,755,127,760,128,765,129,770,130,775,131,780,132,362,133,785,134,790,135,795,136,800,137,805,138,810,139,815,140,820,141,825,142,830,143,835,144,840,145,845,146,850,147,855,148,930,149,935,150,940,151,945,152,950,153,860,154,880,155,870,156,895,157,890,158,875,159,900,160,915,161,905,162,925,163,920,164,910,165,955,166,960,167,965,168,975,169,985,170,1030,171,1035,172,1000,173,1005,174,1010,175,1015,176,1020,177,995,178,1055,179,1050,180,1045,181,1040,182,1060,183,1065,184,1070,185,1075,186,1080,187,1090,188,455,189,460,190,470,191,1085,192,1095,193,1100,194,1105,195,1110,196,367,197,465,198,865,199,885,200,970,201,980,202,1025,203,1115,204,1115,205,1115,206,1115,207,1115,208,1115,209,990)#11
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#New(Lsoot/coffi/Instruction_Aload_0;,0)#217
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Dup(1,0)#218
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Invoke(SPECIAL,Lsoot/coffi/Instruction_Aload_0;,<init>,()V)#219
soot.coffi.Instruction_Aload_0.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Instruction_Aload_0.<init>()V#Constant(I,42)#1
soot.coffi.Instruction_Aload_0.<init>()V#Invoke(SPECIAL,Lsoot/coffi/Instruction_noargs;,<init>,(B)V)#2
soot.coffi.Instruction_noargs.<init>(B)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Instruction_noargs.<init>(B)V#LocalLoad(I,1)#1
soot.coffi.Instruction_noargs.<init>(B)V#Invoke(SPECIAL,Lsoot/coffi/Instruction;,<init>,(B)V)#2
soot.coffi.Instruction.<init>(B)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Instruction.<init>(B)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.coffi.Instruction.<init>(B)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.coffi.Instruction.<init>(B)V#LocalLoad(I,1)#3
soot.coffi.Instruction.<init>(B)V#Put(B,NONSTATIC,Lsoot/coffi/Instruction;,code)#4
soot.coffi.Instruction.<init>(B)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.coffi.Instruction.<init>(B)V#Constant(L;,null)#6
soot.coffi.Instruction.<init>(B)V#Put(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/Instruction;,next)#7
soot.coffi.Instruction.<init>(B)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.coffi.Instruction.<init>(B)V#Constant(I,0)#9
soot.coffi.Instruction.<init>(B)V#Put(Z,NONSTATIC,Lsoot/coffi/Instruction;,branches)#10
soot.coffi.Instruction.<init>(B)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.coffi.Instruction.<init>(B)V#Constant(I,0)#12
soot.coffi.Instruction.<init>(B)V#Put(Z,NONSTATIC,Lsoot/coffi/Instruction;,calls)#13
soot.coffi.Instruction.<init>(B)V#LocalLoad(Ljava/lang/Object;,0)#14
soot.coffi.Instruction.<init>(B)V#Constant(I,0)#15
soot.coffi.Instruction.<init>(B)V#Put(Z,NONSTATIC,Lsoot/coffi/Instruction;,returns)#16
soot.coffi.Instruction.<init>(B)V#Return(V)#17
soot.coffi.Instruction_noargs.<init>(B)V#Return(V)#3
soot.coffi.Instruction_Aload_0.<init>()V#LocalLoad(Ljava/lang/Object;,0)#3
soot.coffi.Instruction_Aload_0.<init>()V#Constant(Ljava/lang/String;,"aload_0")#4
soot.coffi.Instruction_Aload_0.<init>()V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/coffi/Instruction_Aload_0;,name)#5
soot.coffi.Instruction_Aload_0.<init>()V#Return(V)#6
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#LocalStore(Ljava/lang/Object;,5)#220
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Goto(1120)#221
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,5)#1120
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#LocalLoad(I,2)#1121
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Put(I,NONSTATIC,Lsoot/coffi/Instruction;,label)#1122
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#LocalLoad(I,4)#1123
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Constant(I,0)#1124
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#ConditionalBranch(I,eq,1134)#1125
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,5)#1134
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,1)#1135
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#LocalLoad(I,2)#1136
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Constant(I,1)#1137
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#BinaryOp(I,add)#1138
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Invoke(VIRTUAL,Lsoot/coffi/Instruction;,parse,([BI)I)#1139
soot.coffi.Instruction_noargs.parse([BI)I#LocalLoad(I,2)#0
soot.coffi.Instruction_noargs.parse([BI)I#Return(I)#1
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Pop(1)#1140
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,5)#1141
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Return(Ljava/lang/Object;)#1142
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalStore(Ljava/lang/Object;,5)#24
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,5)#25
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(I,2)#26
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Put(I,NONSTATIC,Lsoot/coffi/Instruction;,originalIndex)#27
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,5)#28
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Instanceof(Lsoot/coffi/Instruction_Unknown;)#29
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Constant(I,0)#30
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#ConditionalBranch(I,eq,62)#31
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,5)#62
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(I,2)#63
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Invoke(VIRTUAL,Lsoot/coffi/Instruction;,nextOffset,(I)I)#64
soot.coffi.Instruction.nextOffset(I)I#LocalLoad(I,1)#0
soot.coffi.Instruction.nextOffset(I)I#Constant(I,1)#1
soot.coffi.Instruction.nextOffset(I)I#BinaryOp(I,add)#2
soot.coffi.Instruction.nextOffset(I)I#Return(I)#3
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalStore(I,2)#65
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,6)#66
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Constant(L;,null)#67
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#ConditionalBranch(Ljava/lang/Object;,ne,72)#68
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,5)#69
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalStore(Ljava/lang/Object;,6)#70
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Goto(78)#71
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,5)#78
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalStore(Ljava/lang/Object;,7)#79
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#New(Lsoot/coffi/Instruction_Invokenonvirtual;,0)#1065
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Dup(1,0)#1066
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Invoke(SPECIAL,Lsoot/coffi/Instruction_Invokenonvirtual;,<init>,()V)#1067
soot.coffi.Instruction_Invokenonvirtual.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Instruction_Invokenonvirtual.<init>()V#Constant(I,-73)#1
soot.coffi.Instruction_Invokenonvirtual.<init>()V#Invoke(SPECIAL,Lsoot/coffi/Instruction_intindex;,<init>,(B)V)#2
soot.coffi.Instruction_intindex.<init>(B)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Instruction_intindex.<init>(B)V#LocalLoad(I,1)#1
soot.coffi.Instruction_intindex.<init>(B)V#Invoke(SPECIAL,Lsoot/coffi/Instruction;,<init>,(B)V)#2
soot.coffi.Instruction_intindex.<init>(B)V#Return(V)#3
soot.coffi.Instruction_Invokenonvirtual.<init>()V#LocalLoad(Ljava/lang/Object;,0)#3
soot.coffi.Instruction_Invokenonvirtual.<init>()V#Constant(Ljava/lang/String;,"invokenonvirtual")#4
soot.coffi.Instruction_Invokenonvirtual.<init>()V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/coffi/Instruction_Invokenonvirtual;,name)#5
soot.coffi.Instruction_Invokenonvirtual.<init>()V#LocalLoad(Ljava/lang/Object;,0)#6
soot.coffi.Instruction_Invokenonvirtual.<init>()V#Constant(I,1)#7
soot.coffi.Instruction_Invokenonvirtual.<init>()V#Put(Z,NONSTATIC,Lsoot/coffi/Instruction_Invokenonvirtual;,calls)#8
soot.coffi.Instruction_Invokenonvirtual.<init>()V#Return(V)#9
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#LocalStore(Ljava/lang/Object;,5)#1068
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Goto(1120)#1069
soot.coffi.Instruction_intindex.parse([BI)I#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Instruction_intindex.parse([BI)I#LocalLoad(Ljava/lang/Object;,1)#1
soot.coffi.Instruction_intindex.parse([BI)I#LocalLoad(I,2)#2
soot.coffi.Instruction_intindex.parse([BI)I#Invoke(STATIC,Lsoot/coffi/Instruction_intindex;,getShort,([BI)S)#3
soot.coffi.Instruction.getShort([BI)S#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Instruction.getShort([BI)S#LocalLoad(I,1)#1
soot.coffi.Instruction.getShort([BI)S#ArrayLoad(B)#2
soot.coffi.Instruction.getShort([BI)S#LocalStore(I,3)#3
soot.coffi.Instruction.getShort([BI)S#LocalLoad(Ljava/lang/Object;,0)#4
soot.coffi.Instruction.getShort([BI)S#LocalLoad(I,1)#5
soot.coffi.Instruction.getShort([BI)S#Constant(I,1)#6
soot.coffi.Instruction.getShort([BI)S#BinaryOp(I,add)#7
soot.coffi.Instruction.getShort([BI)S#ArrayLoad(B)#8
soot.coffi.Instruction.getShort([BI)S#LocalStore(I,4)#9
soot.coffi.Instruction.getShort([BI)S#LocalLoad(I,3)#10
soot.coffi.Instruction.getShort([BI)S#Constant(I,8)#11
soot.coffi.Instruction.getShort([BI)S#Shift(I,SHL)#12
soot.coffi.Instruction.getShort([BI)S#Constant(I,65280)#13
soot.coffi.Instruction.getShort([BI)S#BinaryOp(I,and)#14
soot.coffi.Instruction.getShort([BI)S#LocalLoad(I,4)#15
soot.coffi.Instruction.getShort([BI)S#Constant(I,255)#16
soot.coffi.Instruction.getShort([BI)S#BinaryOp(I,and)#17
soot.coffi.Instruction.getShort([BI)S#BinaryOp(I,or)#18
soot.coffi.Instruction.getShort([BI)S#Conversion(I,S)#19
soot.coffi.Instruction.getShort([BI)S#LocalStore(I,2)#20
soot.coffi.Instruction.getShort([BI)S#LocalLoad(I,2)#21
soot.coffi.Instruction.getShort([BI)S#Return(I)#22
soot.coffi.Instruction_intindex.parse([BI)I#Put(I,NONSTATIC,Lsoot/coffi/Instruction_intindex;,arg_i)#4
soot.coffi.Instruction_intindex.parse([BI)I#LocalLoad(I,2)#5
soot.coffi.Instruction_intindex.parse([BI)I#Constant(I,2)#6
soot.coffi.Instruction_intindex.parse([BI)I#BinaryOp(I,add)#7
soot.coffi.Instruction_intindex.parse([BI)I#Return(I)#8
soot.coffi.Instruction_intindex.nextOffset(I)I#LocalLoad(I,1)#0
soot.coffi.Instruction_intindex.nextOffset(I)I#Constant(I,3)#1
soot.coffi.Instruction_intindex.nextOffset(I)I#BinaryOp(I,add)#2
soot.coffi.Instruction_intindex.nextOffset(I)I#Return(I)#3
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,7)#72
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,5)#73
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Put(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/Instruction;,next)#74
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,5)#75
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,7)#76
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Put(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/Instruction;,prev)#77
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#New(Lsoot/coffi/Instruction_Return;,0)#995
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Dup(1,0)#996
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Invoke(SPECIAL,Lsoot/coffi/Instruction_Return;,<init>,()V)#997
soot.coffi.Instruction_Return.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Instruction_Return.<init>()V#Constant(I,-79)#1
soot.coffi.Instruction_Return.<init>()V#Invoke(SPECIAL,Lsoot/coffi/Instruction_noargs;,<init>,(B)V)#2
soot.coffi.Instruction_Return.<init>()V#LocalLoad(Ljava/lang/Object;,0)#3
soot.coffi.Instruction_Return.<init>()V#Constant(Ljava/lang/String;,"return")#4
soot.coffi.Instruction_Return.<init>()V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/coffi/Instruction_Return;,name)#5
soot.coffi.Instruction_Return.<init>()V#LocalLoad(Ljava/lang/Object;,0)#6
soot.coffi.Instruction_Return.<init>()V#Constant(I,1)#7
soot.coffi.Instruction_Return.<init>()V#Put(Z,NONSTATIC,Lsoot/coffi/Instruction_Return;,branches)#8
soot.coffi.Instruction_Return.<init>()V#LocalLoad(Ljava/lang/Object;,0)#9
soot.coffi.Instruction_Return.<init>()V#Constant(I,1)#10
soot.coffi.Instruction_Return.<init>()V#Put(Z,NONSTATIC,Lsoot/coffi/Instruction_Return;,returns)#11
soot.coffi.Instruction_Return.<init>()V#Return(V)#12
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#LocalStore(Ljava/lang/Object;,5)#998
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Goto(1120)#999
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,4)#87
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,6)#88
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Invoke(VIRTUAL,Lsoot/coffi/ByteCode;,build,(Lsoot/coffi/Instruction;)V)#89
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#LocalStore(Ljava/lang/Object;,2)#1
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#Constant(I,0)#3
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#Put(I,NONSTATIC,Lsoot/coffi/ByteCode;,icount)#4
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#Goto(15)#5
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#LocalLoad(Ljava/lang/Object;,2)#15
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#Constant(L;,null)#16
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#ConditionalBranch(Ljava/lang/Object;,ne,6)#17
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#LocalLoad(Ljava/lang/Object;,0)#6
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#Dup(1,0)#7
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#Get(I,NONSTATIC,Lsoot/coffi/ByteCode;,icount)#8
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#Constant(I,1)#9
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#BinaryOp(I,add)#10
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#Put(I,NONSTATIC,Lsoot/coffi/ByteCode;,icount)#11
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#LocalLoad(Ljava/lang/Object;,2)#12
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/Instruction;,next)#13
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#LocalStore(Ljava/lang/Object;,2)#14
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#LocalLoad(Ljava/lang/Object;,0)#18
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#Get(I,NONSTATIC,Lsoot/coffi/ByteCode;,icount)#19
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#Constant(I,0)#20
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#ConditionalBranch(I,le,59)#21
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#LocalLoad(Ljava/lang/Object;,0)#22
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#LocalLoad(Ljava/lang/Object;,0)#23
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#Get(I,NONSTATIC,Lsoot/coffi/ByteCode;,icount)#24
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#New([Lsoot/coffi/Instruction;,1)#25
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#Put([Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/ByteCode;,instructions)#26
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#Constant(I,0)#27
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#LocalStore(I,3)#28
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#LocalLoad(Ljava/lang/Object;,1)#29
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#LocalStore(Ljava/lang/Object;,2)#30
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#Goto(44)#31
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#LocalLoad(Ljava/lang/Object;,2)#44
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#Constant(L;,null)#45
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#ConditionalBranch(Ljava/lang/Object;,ne,32)#46
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#LocalLoad(Ljava/lang/Object;,0)#32
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#Get([Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/ByteCode;,instructions)#33
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#LocalLoad(I,3)#34
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#LocalLoad(Ljava/lang/Object;,2)#35
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#ArrayStore(Ljava/lang/Object;)#36
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#LocalLoad(I,3)#37
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#Constant(I,1)#38
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#BinaryOp(I,add)#39
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#LocalStore(I,3)#40
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#LocalLoad(Ljava/lang/Object;,2)#41
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/Instruction;,next)#42
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#LocalStore(Ljava/lang/Object;,2)#43
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#LocalLoad(Ljava/lang/Object;,1)#47
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#LocalStore(Ljava/lang/Object;,2)#48
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#Goto(56)#49
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#LocalLoad(Ljava/lang/Object;,2)#56
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#Constant(L;,null)#57
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#ConditionalBranch(Ljava/lang/Object;,ne,50)#58
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#LocalLoad(Ljava/lang/Object;,2)#50
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#LocalLoad(Ljava/lang/Object;,0)#51
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#Invoke(VIRTUAL,Lsoot/coffi/Instruction;,offsetToPointer,(Lsoot/coffi/ByteCode;)V)#52
soot.coffi.Instruction.offsetToPointer(Lsoot/coffi/ByteCode;)V#Return(V)#0
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#LocalLoad(Ljava/lang/Object;,2)#53
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/Instruction;,next)#54
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#LocalStore(Ljava/lang/Object;,2)#55
soot.coffi.ByteCode.build(Lsoot/coffi/Instruction;)V#Return(V)#59
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Constant(I,0)#90
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalStore(I,2)#91
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Goto(140)#92
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(I,2)#140
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,3)#141
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Get(I,NONSTATIC,Lsoot/coffi/Code_attribute;,exception_table_length)#142
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#ConditionalBranch(I,lt,93)#143
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,1)#144
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,6)#145
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Put(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/method_info;,instructions)#146
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,3)#147
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/Code_attribute;,attributes)#148
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Dup(1,0)#149
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalStore(Ljava/lang/Object;,12)#150
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#ArrayLength()#151
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalStore(I,11)#152
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Constant(I,0)#153
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalStore(I,10)#154
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Goto(197)#155
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(I,10)#197
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(I,11)#198
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#ConditionalBranch(I,lt,156)#199
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,12)#156
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(I,10)#157
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#ArrayLoad(Ljava/lang/Object;)#158
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalStore(Ljava/lang/Object;,9)#159
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,9)#160
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Instanceof(Lsoot/coffi/LineNumberTable_attribute;)#161
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Constant(I,0)#162
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#ConditionalBranch(I,eq,193)#163
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,9)#164
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#CheckCast(Lsoot/coffi/LineNumberTable_attribute;)#165
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalStore(Ljava/lang/Object;,13)#166
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,13)#167
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Get([Lsoot/coffi/line_number_table_entry;,NONSTATIC,Lsoot/coffi/LineNumberTable_attribute;,line_number_table)#168
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Dup(1,0)#169
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalStore(Ljava/lang/Object;,17)#170
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#ArrayLength()#171
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalStore(I,16)#172
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Constant(I,0)#173
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalStore(I,15)#174
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Goto(190)#175
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(I,15)#190
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(I,16)#191
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#ConditionalBranch(I,lt,176)#192
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,17)#176
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(I,15)#177
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#ArrayLoad(Ljava/lang/Object;)#178
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalStore(Ljava/lang/Object;,14)#179
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,14)#180
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,4)#181
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,14)#182
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Get(I,NONSTATIC,Lsoot/coffi/line_number_table_entry;,start_pc)#183
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Invoke(VIRTUAL,Lsoot/coffi/ByteCode;,locateInst,(I)Lsoot/coffi/Instruction;)#184
soot.coffi.ByteCode.locateInst(I)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.ByteCode.locateInst(I)Lsoot/coffi/Instruction;#LocalLoad(I,1)#1
soot.coffi.ByteCode.locateInst(I)Lsoot/coffi/Instruction;#Constant(I,0)#2
soot.coffi.ByteCode.locateInst(I)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,0)#3
soot.coffi.ByteCode.locateInst(I)Lsoot/coffi/Instruction;#Get(I,NONSTATIC,Lsoot/coffi/ByteCode;,icount)#4
soot.coffi.ByteCode.locateInst(I)Lsoot/coffi/Instruction;#Invoke(SPECIAL,Lsoot/coffi/ByteCode;,locateInstr,(III)Lsoot/coffi/Instruction;)#5
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#LocalLoad(I,3)#0
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#LocalLoad(I,2)#1
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#BinaryOp(I,sub)#2
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#Constant(I,2)#3
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#BinaryOp(I,div)#4
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#LocalLoad(I,2)#5
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#BinaryOp(I,add)#6
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#LocalStore(I,4)#7
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#LocalLoad(I,2)#8
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#LocalLoad(I,3)#9
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#ConditionalBranch(I,le,13)#10
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,0)#13
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#Get([Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/ByteCode;,instructions)#14
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#LocalLoad(I,4)#15
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#ArrayLoad(Ljava/lang/Object;)#16
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#Get(I,NONSTATIC,Lsoot/coffi/Instruction;,label)#17
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#LocalLoad(I,1)#18
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#ConditionalBranch(I,ne,25)#19
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,0)#25
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#Get([Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/ByteCode;,instructions)#26
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#LocalLoad(I,4)#27
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#ArrayLoad(Ljava/lang/Object;)#28
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#Get(I,NONSTATIC,Lsoot/coffi/Instruction;,label)#29
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#LocalLoad(I,1)#30
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#ConditionalBranch(I,le,40)#31
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,0)#32
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#LocalLoad(I,1)#33
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#LocalLoad(I,2)#34
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#LocalLoad(I,4)#35
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#Constant(I,1)#36
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#BinaryOp(I,sub)#37
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#Invoke(SPECIAL,Lsoot/coffi/ByteCode;,locateInstr,(III)Lsoot/coffi/Instruction;)#38
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,0)#20
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#Get([Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/ByteCode;,instructions)#21
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#LocalLoad(I,4)#22
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#ArrayLoad(Ljava/lang/Object;)#23
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#Return(Ljava/lang/Object;)#24
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#Return(Ljava/lang/Object;)#39
soot.coffi.ByteCode.locateInst(I)Lsoot/coffi/Instruction;#Return(Ljava/lang/Object;)#6
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Put(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/line_number_table_entry;,start_inst)#185
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(I,15)#186
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Constant(I,1)#187
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#BinaryOp(I,add)#188
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalStore(I,15)#189
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(I,10)#193
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Constant(I,1)#194
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#BinaryOp(I,add)#195
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalStore(I,10)#196
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,6)#200
soot.coffi.ClassFile.parseMethod(Lsoot/coffi/method_info;)Lsoot/coffi/Instruction;#Return(Ljava/lang/Object;)#201
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Pop(1)#91
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalLoad(Ljava/lang/Object;,0)#92
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Get(Lsoot/coffi/method_info;,NONSTATIC,Lsoot/coffi/CoffiMethodSource;,coffiMethod)#93
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Get(Lsoot/coffi/CFG;,NONSTATIC,Lsoot/coffi/method_info;,cfg)#94
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Constant(L;,null)#95
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#ConditionalBranch(Ljava/lang/Object;,ne,123)#96
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#97
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Invoke(VIRTUAL,Lsoot/options/Options;,verbose,()Z)#98
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Constant(I,0)#99
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#ConditionalBranch(I,eq,114)#100
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#New(Lsoot/coffi/CFG;,0)#114
soot.coffi.CFG.<clinit>()V#New(Ljava/util/HashMap;,0)#0
soot.coffi.CFG.<clinit>()V#Dup(1,0)#1
soot.coffi.CFG.<clinit>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#2
soot.coffi.CFG.<clinit>()V#Put(Ljava/util/HashMap;,STATIC,Lsoot/coffi/CFG;,methodsToVEM)#3
soot.coffi.CFG.<clinit>()V#Return(V)#4
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalLoad(Ljava/lang/Object;,0)#115
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Get(Lsoot/coffi/method_info;,NONSTATIC,Lsoot/coffi/CoffiMethodSource;,coffiMethod)#116
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Invoke(SPECIAL,Lsoot/coffi/CFG;,<init>,(Lsoot/coffi/method_info;)V)#117
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#New(Ljava/util/HashMap;,0)#3
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Dup(1,0)#4
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#5
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/coffi/CFG;,jsr2astore)#6
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#LocalLoad(Ljava/lang/Object;,0)#7
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#New(Ljava/util/HashMap;,0)#8
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Dup(1,0)#9
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#10
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/coffi/CFG;,astore2ret)#11
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#LocalLoad(Ljava/lang/Object;,0)#12
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#New(Ljava/util/LinkedList;,0)#13
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Dup(1,0)#14
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#15
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Put(Ljava/util/LinkedList;,NONSTATIC,Lsoot/coffi/CFG;,jsrorder)#16
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#LocalLoad(Ljava/lang/Object;,0)#17
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#New(Ljava/util/Hashtable;,0)#18
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Dup(1,0)#19
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Invoke(SPECIAL,Ljava/util/Hashtable;,<init>,()V)#20
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Put(Ljava/util/Hashtable;,NONSTATIC,Lsoot/coffi/CFG;,replacedInsns)#21
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#LocalLoad(Ljava/lang/Object;,0)#22
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#LocalLoad(Ljava/lang/Object;,1)#23
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Put(Lsoot/coffi/method_info;,NONSTATIC,Lsoot/coffi/CFG;,method)#24
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#LocalLoad(Ljava/lang/Object;,0)#25
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#New(Lsoot/coffi/Instruction_Nop;,0)#26
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Dup(1,0)#27
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Invoke(SPECIAL,Lsoot/coffi/Instruction_Nop;,<init>,()V)#28
soot.coffi.Instruction_Nop.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Instruction_Nop.<init>()V#Constant(I,0)#1
soot.coffi.Instruction_Nop.<init>()V#Invoke(SPECIAL,Lsoot/coffi/Instruction_noargs;,<init>,(B)V)#2
soot.coffi.Instruction_Nop.<init>()V#LocalLoad(Ljava/lang/Object;,0)#3
soot.coffi.Instruction_Nop.<init>()V#Constant(Ljava/lang/String;,"nop")#4
soot.coffi.Instruction_Nop.<init>()V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/coffi/Instruction_Nop;,name)#5
soot.coffi.Instruction_Nop.<init>()V#Return(V)#6
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Put(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/CFG;,sentinel)#29
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#LocalLoad(Ljava/lang/Object;,0)#30
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/CFG;,sentinel)#31
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#LocalLoad(Ljava/lang/Object;,1)#32
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/method_info;,instructions)#33
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Put(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/Instruction;,next)#34
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#LocalLoad(Ljava/lang/Object;,1)#35
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/method_info;,instructions)#36
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#LocalLoad(Ljava/lang/Object;,0)#37
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/CFG;,sentinel)#38
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Put(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/Instruction;,prev)#39
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#LocalLoad(Ljava/lang/Object;,0)#40
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Invoke(SPECIAL,Lsoot/coffi/CFG;,eliminateJsrRets,()Z)#41
soot.coffi.CFG.eliminateJsrRets()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.CFG.eliminateJsrRets()Z#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/CFG;,sentinel)#1
soot.coffi.CFG.eliminateJsrRets()Z#LocalStore(Ljava/lang/Object;,1)#2
soot.coffi.CFG.eliminateJsrRets()Z#Goto(7)#3
soot.coffi.CFG.eliminateJsrRets()Z#LocalLoad(Ljava/lang/Object;,1)#7
soot.coffi.CFG.eliminateJsrRets()Z#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/Instruction;,next)#8
soot.coffi.CFG.eliminateJsrRets()Z#Constant(L;,null)#9
soot.coffi.CFG.eliminateJsrRets()Z#ConditionalBranch(Ljava/lang/Object;,ne,4)#10
soot.coffi.CFG.eliminateJsrRets()Z#LocalLoad(Ljava/lang/Object;,1)#4
soot.coffi.CFG.eliminateJsrRets()Z#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/Instruction;,next)#5
soot.coffi.CFG.eliminateJsrRets()Z#LocalStore(Ljava/lang/Object;,1)#6
soot.coffi.CFG.eliminateJsrRets()Z#LocalLoad(Ljava/lang/Object;,0)#11
soot.coffi.CFG.eliminateJsrRets()Z#LocalLoad(Ljava/lang/Object;,1)#12
soot.coffi.CFG.eliminateJsrRets()Z#Put(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/CFG;,lastInstruction)#13
soot.coffi.CFG.eliminateJsrRets()Z#New(Ljava/util/HashMap;,0)#14
soot.coffi.CFG.eliminateJsrRets()Z#Dup(1,0)#15
soot.coffi.CFG.eliminateJsrRets()Z#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#16
soot.coffi.CFG.eliminateJsrRets()Z#LocalStore(Ljava/lang/Object;,2)#17
soot.coffi.CFG.eliminateJsrRets()Z#LocalLoad(Ljava/lang/Object;,2)#18
soot.coffi.CFG.eliminateJsrRets()Z#LocalLoad(Ljava/lang/Object;,0)#19
soot.coffi.CFG.eliminateJsrRets()Z#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/CFG;,sentinel)#20
soot.coffi.CFG.eliminateJsrRets()Z#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/Instruction;,next)#21
soot.coffi.CFG.eliminateJsrRets()Z#LocalLoad(Ljava/lang/Object;,0)#22
soot.coffi.CFG.eliminateJsrRets()Z#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/CFG;,lastInstruction)#23
soot.coffi.CFG.eliminateJsrRets()Z#Invoke(VIRTUAL,Ljava/util/HashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#24
soot.coffi.Instruction.hashCode()I#New(Ljava/lang/Integer;,0)#0
soot.coffi.Instruction.hashCode()I#Dup(1,0)#1
soot.coffi.Instruction.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#2
soot.coffi.Instruction.hashCode()I#Get(I,NONSTATIC,Lsoot/coffi/Instruction;,label)#3
soot.coffi.Instruction.hashCode()I#Invoke(SPECIAL,Ljava/lang/Integer;,<init>,(I)V)#4
soot.coffi.Instruction.hashCode()I#Invoke(VIRTUAL,Ljava/lang/Integer;,hashCode,()I)#5
soot.coffi.Instruction.hashCode()I#Return(I)#6
soot.coffi.CFG.eliminateJsrRets()Z#Pop(1)#25
soot.coffi.CFG.eliminateJsrRets()Z#New(Ljava/util/LinkedList;,0)#26
soot.coffi.CFG.eliminateJsrRets()Z#Dup(1,0)#27
soot.coffi.CFG.eliminateJsrRets()Z#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#28
soot.coffi.CFG.eliminateJsrRets()Z#LocalStore(Ljava/lang/Object;,3)#29
soot.coffi.CFG.eliminateJsrRets()Z#LocalLoad(Ljava/lang/Object;,3)#30
soot.coffi.CFG.eliminateJsrRets()Z#LocalLoad(Ljava/lang/Object;,0)#31
soot.coffi.CFG.eliminateJsrRets()Z#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/CFG;,sentinel)#32
soot.coffi.CFG.eliminateJsrRets()Z#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/Instruction;,next)#33
soot.coffi.CFG.eliminateJsrRets()Z#Invoke(VIRTUAL,Ljava/util/LinkedList;,add,(Ljava/lang/Object;)Z)#34
soot.coffi.CFG.eliminateJsrRets()Z#Pop(1)#35
soot.coffi.CFG.eliminateJsrRets()Z#Goto(72)#36
soot.coffi.CFG.eliminateJsrRets()Z#LocalLoad(Ljava/lang/Object;,3)#72
soot.coffi.CFG.eliminateJsrRets()Z#Invoke(VIRTUAL,Ljava/util/LinkedList;,isEmpty,()Z)#73
soot.coffi.CFG.eliminateJsrRets()Z#Constant(I,0)#74
soot.coffi.CFG.eliminateJsrRets()Z#ConditionalBranch(I,eq,37)#75
soot.coffi.CFG.eliminateJsrRets()Z#LocalLoad(Ljava/lang/Object;,3)#37
soot.coffi.CFG.eliminateJsrRets()Z#Invoke(VIRTUAL,Ljava/util/LinkedList;,removeFirst,()Ljava/lang/Object;)#38
soot.coffi.CFG.eliminateJsrRets()Z#CheckCast(Lsoot/coffi/Instruction;)#39
soot.coffi.CFG.eliminateJsrRets()Z#LocalStore(Ljava/lang/Object;,4)#40
soot.coffi.CFG.eliminateJsrRets()Z#LocalLoad(Ljava/lang/Object;,2)#41
soot.coffi.CFG.eliminateJsrRets()Z#LocalLoad(Ljava/lang/Object;,4)#42
soot.coffi.CFG.eliminateJsrRets()Z#Invoke(VIRTUAL,Ljava/util/HashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#43
soot.coffi.CFG.eliminateJsrRets()Z#CheckCast(Lsoot/coffi/Instruction;)#44
soot.coffi.CFG.eliminateJsrRets()Z#LocalStore(Ljava/lang/Object;,5)#45
soot.coffi.CFG.eliminateJsrRets()Z#LocalLoad(Ljava/lang/Object;,0)#46
soot.coffi.CFG.eliminateJsrRets()Z#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/coffi/CFG;,jsrorder)#47
soot.coffi.CFG.eliminateJsrRets()Z#Invoke(VIRTUAL,Ljava/util/LinkedList;,clear,()V)#48
soot.coffi.CFG.eliminateJsrRets()Z#LocalLoad(Ljava/lang/Object;,0)#49
soot.coffi.CFG.eliminateJsrRets()Z#Get(Ljava/util/Map;,NONSTATIC,Lsoot/coffi/CFG;,jsr2astore)#50
soot.coffi.CFG.eliminateJsrRets()Z#Invoke(INTERFACE,Ljava/util/Map;,clear,()V)#51
soot.coffi.CFG.eliminateJsrRets()Z#LocalLoad(Ljava/lang/Object;,0)#52
soot.coffi.CFG.eliminateJsrRets()Z#Get(Ljava/util/Map;,NONSTATIC,Lsoot/coffi/CFG;,astore2ret)#53
soot.coffi.CFG.eliminateJsrRets()Z#Invoke(INTERFACE,Ljava/util/Map;,clear,()V)#54
soot.coffi.CFG.eliminateJsrRets()Z#LocalLoad(Ljava/lang/Object;,0)#55
soot.coffi.CFG.eliminateJsrRets()Z#LocalLoad(Ljava/lang/Object;,4)#56
soot.coffi.CFG.eliminateJsrRets()Z#LocalLoad(Ljava/lang/Object;,5)#57
soot.coffi.CFG.eliminateJsrRets()Z#Invoke(SPECIAL,Lsoot/coffi/CFG;,findOutmostJsrs,(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)Z)#58
soot.coffi.CFG.findOutmostJsrs(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)Z#New(Ljava/util/HashSet;,0)#0
soot.coffi.CFG.findOutmostJsrs(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)Z#Dup(1,0)#1
soot.coffi.CFG.findOutmostJsrs(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)Z#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#2
soot.coffi.CFG.findOutmostJsrs(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)Z#LocalStore(Ljava/lang/Object;,3)#3
soot.coffi.CFG.findOutmostJsrs(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)Z#Constant(I,0)#4
soot.coffi.CFG.findOutmostJsrs(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)Z#LocalStore(I,4)#5
soot.coffi.CFG.findOutmostJsrs(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)Z#LocalLoad(Ljava/lang/Object;,1)#6
soot.coffi.CFG.findOutmostJsrs(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)Z#LocalStore(Ljava/lang/Object;,5)#7
soot.coffi.CFG.findOutmostJsrs(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)Z#LocalLoad(Ljava/lang/Object;,5)#8
soot.coffi.CFG.findOutmostJsrs(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)Z#Instanceof(Lsoot/coffi/Instruction_Jsr;)#9
soot.coffi.CFG.findOutmostJsrs(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)Z#Constant(I,0)#10
soot.coffi.CFG.findOutmostJsrs(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)Z#ConditionalBranch(I,ne,16)#11
soot.coffi.CFG.findOutmostJsrs(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)Z#LocalLoad(Ljava/lang/Object;,5)#12
soot.coffi.CFG.findOutmostJsrs(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)Z#Instanceof(Lsoot/coffi/Instruction_Jsr_w;)#13
soot.coffi.CFG.findOutmostJsrs(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)Z#Constant(I,0)#14
soot.coffi.CFG.findOutmostJsrs(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)Z#ConditionalBranch(I,eq,58)#15
soot.coffi.CFG.findOutmostJsrs(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)Z#LocalLoad(Ljava/lang/Object;,5)#58
soot.coffi.CFG.findOutmostJsrs(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)Z#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/Instruction;,next)#59
soot.coffi.CFG.findOutmostJsrs(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)Z#LocalStore(Ljava/lang/Object;,5)#60
soot.coffi.CFG.findOutmostJsrs(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)Z#LocalLoad(Ljava/lang/Object;,5)#61
soot.coffi.CFG.findOutmostJsrs(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)Z#LocalLoad(Ljava/lang/Object;,2)#62
soot.coffi.CFG.findOutmostJsrs(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)Z#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/Instruction;,next)#63
soot.coffi.CFG.findOutmostJsrs(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)Z#ConditionalBranch(Ljava/lang/Object;,ne,8)#64
soot.coffi.CFG.findOutmostJsrs(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)Z#LocalLoad(I,4)#65
soot.coffi.CFG.findOutmostJsrs(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)Z#Constant(I,0)#66
soot.coffi.CFG.findOutmostJsrs(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)Z#ConditionalBranch(I,eq,74)#67
soot.coffi.CFG.findOutmostJsrs(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)Z#Constant(I,1)#74
soot.coffi.CFG.findOutmostJsrs(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)Z#Return(I)#75
soot.coffi.CFG.eliminateJsrRets()Z#Constant(I,0)#59
soot.coffi.CFG.eliminateJsrRets()Z#ConditionalBranch(I,eq,72)#60
soot.coffi.CFG.eliminateJsrRets()Z#LocalLoad(Ljava/lang/Object;,0)#61
soot.coffi.CFG.eliminateJsrRets()Z#Invoke(SPECIAL,Lsoot/coffi/CFG;,inliningJsrTargets,()Ljava/util/HashMap;)#62
soot.coffi.CFG.inliningJsrTargets()Ljava/util/HashMap;#New(Ljava/util/HashMap;,0)#0
soot.coffi.CFG.inliningJsrTargets()Ljava/util/HashMap;#Dup(1,0)#1
soot.coffi.CFG.inliningJsrTargets()Ljava/util/HashMap;#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#2
soot.coffi.CFG.inliningJsrTargets()Ljava/util/HashMap;#LocalStore(Ljava/lang/Object;,1)#3
soot.coffi.CFG.inliningJsrTargets()Ljava/util/HashMap;#Goto(78)#4
soot.coffi.CFG.inliningJsrTargets()Ljava/util/HashMap;#LocalLoad(Ljava/lang/Object;,0)#78
soot.coffi.CFG.inliningJsrTargets()Ljava/util/HashMap;#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/coffi/CFG;,jsrorder)#79
soot.coffi.CFG.inliningJsrTargets()Ljava/util/HashMap;#Invoke(VIRTUAL,Ljava/util/LinkedList;,isEmpty,()Z)#80
soot.coffi.CFG.inliningJsrTargets()Ljava/util/HashMap;#Constant(I,0)#81
soot.coffi.CFG.inliningJsrTargets()Ljava/util/HashMap;#ConditionalBranch(I,eq,5)#82
soot.coffi.CFG.inliningJsrTargets()Ljava/util/HashMap;#LocalLoad(Ljava/lang/Object;,1)#83
soot.coffi.CFG.inliningJsrTargets()Ljava/util/HashMap;#Return(Ljava/lang/Object;)#84
soot.coffi.CFG.eliminateJsrRets()Z#LocalStore(Ljava/lang/Object;,6)#63
soot.coffi.CFG.eliminateJsrRets()Z#LocalLoad(Ljava/lang/Object;,2)#64
soot.coffi.CFG.eliminateJsrRets()Z#LocalLoad(Ljava/lang/Object;,6)#65
soot.coffi.CFG.eliminateJsrRets()Z#Invoke(VIRTUAL,Ljava/util/HashMap;,putAll,(Ljava/util/Map;)V)#66
soot.coffi.CFG.eliminateJsrRets()Z#LocalLoad(Ljava/lang/Object;,3)#67
soot.coffi.CFG.eliminateJsrRets()Z#LocalLoad(Ljava/lang/Object;,6)#68
soot.coffi.CFG.eliminateJsrRets()Z#Invoke(VIRTUAL,Ljava/util/HashMap;,keySet,()Ljava/util/Set;)#69
soot.coffi.CFG.eliminateJsrRets()Z#Invoke(VIRTUAL,Ljava/util/LinkedList;,addAll,(Ljava/util/Collection;)Z)#70
soot.coffi.CFG.eliminateJsrRets()Z#Pop(1)#71
soot.coffi.CFG.eliminateJsrRets()Z#LocalLoad(Ljava/lang/Object;,0)#76
soot.coffi.CFG.eliminateJsrRets()Z#Get(Lsoot/coffi/method_info;,NONSTATIC,Lsoot/coffi/CFG;,method)#77
soot.coffi.CFG.eliminateJsrRets()Z#LocalLoad(Ljava/lang/Object;,0)#78
soot.coffi.CFG.eliminateJsrRets()Z#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/CFG;,sentinel)#79
soot.coffi.CFG.eliminateJsrRets()Z#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/Instruction;,next)#80
soot.coffi.CFG.eliminateJsrRets()Z#Put(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/method_info;,instructions)#81
soot.coffi.CFG.eliminateJsrRets()Z#LocalLoad(Ljava/lang/Object;,0)#82
soot.coffi.CFG.eliminateJsrRets()Z#Invoke(SPECIAL,Lsoot/coffi/CFG;,adjustExceptionTable,()V)#83
soot.coffi.CFG.adjustExceptionTable()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.CFG.adjustExceptionTable()V#Get(Lsoot/coffi/method_info;,NONSTATIC,Lsoot/coffi/CFG;,method)#1
soot.coffi.CFG.adjustExceptionTable()V#Invoke(VIRTUAL,Lsoot/coffi/method_info;,locate_code_attribute,()Lsoot/coffi/Code_attribute;)#2
soot.coffi.CFG.adjustExceptionTable()V#LocalStore(Ljava/lang/Object;,1)#3
soot.coffi.CFG.adjustExceptionTable()V#Constant(I,0)#4
soot.coffi.CFG.adjustExceptionTable()V#LocalStore(I,2)#5
soot.coffi.CFG.adjustExceptionTable()V#Goto(65)#6
soot.coffi.CFG.adjustExceptionTable()V#LocalLoad(I,2)#65
soot.coffi.CFG.adjustExceptionTable()V#LocalLoad(Ljava/lang/Object;,1)#66
soot.coffi.CFG.adjustExceptionTable()V#Get(I,NONSTATIC,Lsoot/coffi/Code_attribute;,exception_table_length)#67
soot.coffi.CFG.adjustExceptionTable()V#ConditionalBranch(I,lt,7)#68
soot.coffi.CFG.adjustExceptionTable()V#Return(V)#69
soot.coffi.CFG.eliminateJsrRets()Z#LocalLoad(Ljava/lang/Object;,0)#84
soot.coffi.CFG.eliminateJsrRets()Z#Invoke(SPECIAL,Lsoot/coffi/CFG;,adjustLineNumberTable,()V)#85
soot.coffi.CFG.adjustLineNumberTable()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#0
soot.coffi.CFG.adjustLineNumberTable()V#Invoke(VIRTUAL,Lsoot/options/Options;,keep_line_number,()Z)#1
soot.coffi.CFG.adjustLineNumberTable()V#Constant(I,0)#2
soot.coffi.CFG.adjustLineNumberTable()V#ConditionalBranch(I,ne,5)#3
soot.coffi.CFG.adjustLineNumberTable()V#LocalLoad(Ljava/lang/Object;,0)#5
soot.coffi.CFG.adjustLineNumberTable()V#Get(Lsoot/coffi/method_info;,NONSTATIC,Lsoot/coffi/CFG;,method)#6
soot.coffi.CFG.adjustLineNumberTable()V#Get(Lsoot/coffi/Code_attribute;,NONSTATIC,Lsoot/coffi/method_info;,code_attr)#7
soot.coffi.CFG.adjustLineNumberTable()V#Constant(L;,null)#8
soot.coffi.CFG.adjustLineNumberTable()V#ConditionalBranch(Ljava/lang/Object;,ne,11)#9
soot.coffi.CFG.adjustLineNumberTable()V#LocalLoad(Ljava/lang/Object;,0)#11
soot.coffi.CFG.adjustLineNumberTable()V#Get(Lsoot/coffi/method_info;,NONSTATIC,Lsoot/coffi/CFG;,method)#12
soot.coffi.CFG.adjustLineNumberTable()V#Get(Lsoot/coffi/Code_attribute;,NONSTATIC,Lsoot/coffi/method_info;,code_attr)#13
soot.coffi.CFG.adjustLineNumberTable()V#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/Code_attribute;,attributes)#14
soot.coffi.CFG.adjustLineNumberTable()V#LocalStore(Ljava/lang/Object;,1)#15
soot.coffi.CFG.adjustLineNumberTable()V#LocalLoad(Ljava/lang/Object;,1)#16
soot.coffi.CFG.adjustLineNumberTable()V#Dup(1,0)#17
soot.coffi.CFG.adjustLineNumberTable()V#LocalStore(Ljava/lang/Object;,5)#18
soot.coffi.CFG.adjustLineNumberTable()V#ArrayLength()#19
soot.coffi.CFG.adjustLineNumberTable()V#LocalStore(I,4)#20
soot.coffi.CFG.adjustLineNumberTable()V#Constant(I,0)#21
soot.coffi.CFG.adjustLineNumberTable()V#LocalStore(I,3)#22
soot.coffi.CFG.adjustLineNumberTable()V#Goto(74)#23
soot.coffi.CFG.adjustLineNumberTable()V#LocalLoad(I,3)#74
soot.coffi.CFG.adjustLineNumberTable()V#LocalLoad(I,4)#75
soot.coffi.CFG.adjustLineNumberTable()V#ConditionalBranch(I,lt,24)#76
soot.coffi.CFG.adjustLineNumberTable()V#LocalLoad(Ljava/lang/Object;,5)#24
soot.coffi.CFG.adjustLineNumberTable()V#LocalLoad(I,3)#25
soot.coffi.CFG.adjustLineNumberTable()V#ArrayLoad(Ljava/lang/Object;)#26
soot.coffi.CFG.adjustLineNumberTable()V#LocalStore(Ljava/lang/Object;,2)#27
soot.coffi.CFG.adjustLineNumberTable()V#LocalLoad(Ljava/lang/Object;,2)#28
soot.coffi.CFG.adjustLineNumberTable()V#Instanceof(Lsoot/coffi/LineNumberTable_attribute;)#29
soot.coffi.CFG.adjustLineNumberTable()V#Constant(I,0)#30
soot.coffi.CFG.adjustLineNumberTable()V#ConditionalBranch(I,eq,70)#31
soot.coffi.CFG.adjustLineNumberTable()V#LocalLoad(Ljava/lang/Object;,2)#32
soot.coffi.CFG.adjustLineNumberTable()V#CheckCast(Lsoot/coffi/LineNumberTable_attribute;)#33
soot.coffi.CFG.adjustLineNumberTable()V#LocalStore(Ljava/lang/Object;,6)#34
soot.coffi.CFG.adjustLineNumberTable()V#LocalLoad(Ljava/lang/Object;,6)#35
soot.coffi.CFG.adjustLineNumberTable()V#Get([Lsoot/coffi/line_number_table_entry;,NONSTATIC,Lsoot/coffi/LineNumberTable_attribute;,line_number_table)#36
soot.coffi.CFG.adjustLineNumberTable()V#Dup(1,0)#37
soot.coffi.CFG.adjustLineNumberTable()V#LocalStore(Ljava/lang/Object;,10)#38
soot.coffi.CFG.adjustLineNumberTable()V#ArrayLength()#39
soot.coffi.CFG.adjustLineNumberTable()V#LocalStore(I,9)#40
soot.coffi.CFG.adjustLineNumberTable()V#Constant(I,0)#41
soot.coffi.CFG.adjustLineNumberTable()V#LocalStore(I,8)#42
soot.coffi.CFG.adjustLineNumberTable()V#Goto(67)#43
soot.coffi.CFG.adjustLineNumberTable()V#LocalLoad(I,8)#67
soot.coffi.CFG.adjustLineNumberTable()V#LocalLoad(I,9)#68
soot.coffi.CFG.adjustLineNumberTable()V#ConditionalBranch(I,lt,44)#69
soot.coffi.CFG.adjustLineNumberTable()V#LocalLoad(Ljava/lang/Object;,10)#44
soot.coffi.CFG.adjustLineNumberTable()V#LocalLoad(I,8)#45
soot.coffi.CFG.adjustLineNumberTable()V#ArrayLoad(Ljava/lang/Object;)#46
soot.coffi.CFG.adjustLineNumberTable()V#LocalStore(Ljava/lang/Object;,7)#47
soot.coffi.CFG.adjustLineNumberTable()V#LocalLoad(Ljava/lang/Object;,7)#48
soot.coffi.CFG.adjustLineNumberTable()V#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/line_number_table_entry;,start_inst)#49
soot.coffi.CFG.adjustLineNumberTable()V#LocalStore(Ljava/lang/Object;,11)#50
soot.coffi.CFG.adjustLineNumberTable()V#LocalLoad(Ljava/lang/Object;,0)#51
soot.coffi.CFG.adjustLineNumberTable()V#Get(Ljava/util/Hashtable;,NONSTATIC,Lsoot/coffi/CFG;,replacedInsns)#52
soot.coffi.CFG.adjustLineNumberTable()V#LocalLoad(Ljava/lang/Object;,11)#53
soot.coffi.CFG.adjustLineNumberTable()V#Invoke(VIRTUAL,Ljava/util/Hashtable;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#54
soot.coffi.CFG.adjustLineNumberTable()V#CheckCast(Lsoot/coffi/Instruction;)#55
soot.coffi.CFG.adjustLineNumberTable()V#LocalStore(Ljava/lang/Object;,12)#56
soot.coffi.CFG.adjustLineNumberTable()V#LocalLoad(Ljava/lang/Object;,12)#57
soot.coffi.CFG.adjustLineNumberTable()V#Constant(L;,null)#58
soot.coffi.CFG.adjustLineNumberTable()V#ConditionalBranch(Ljava/lang/Object;,eq,63)#59
soot.coffi.CFG.adjustLineNumberTable()V#LocalLoad(I,8)#63
soot.coffi.CFG.adjustLineNumberTable()V#Constant(I,1)#64
soot.coffi.CFG.adjustLineNumberTable()V#BinaryOp(I,add)#65
soot.coffi.CFG.adjustLineNumberTable()V#LocalStore(I,8)#66
soot.coffi.CFG.adjustLineNumberTable()V#LocalLoad(I,3)#70
soot.coffi.CFG.adjustLineNumberTable()V#Constant(I,1)#71
soot.coffi.CFG.adjustLineNumberTable()V#BinaryOp(I,add)#72
soot.coffi.CFG.adjustLineNumberTable()V#LocalStore(I,3)#73
soot.coffi.CFG.adjustLineNumberTable()V#Return(V)#77
soot.coffi.CFG.eliminateJsrRets()Z#LocalLoad(Ljava/lang/Object;,0)#86
soot.coffi.CFG.eliminateJsrRets()Z#Invoke(SPECIAL,Lsoot/coffi/CFG;,adjustBranchTargets,()V)#87
soot.coffi.CFG.adjustBranchTargets()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.CFG.adjustBranchTargets()V#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/CFG;,sentinel)#1
soot.coffi.CFG.adjustBranchTargets()V#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/Instruction;,next)#2
soot.coffi.CFG.adjustBranchTargets()V#LocalStore(Ljava/lang/Object;,1)#3
soot.coffi.CFG.adjustBranchTargets()V#Goto(144)#4
soot.coffi.CFG.adjustBranchTargets()V#LocalLoad(Ljava/lang/Object;,1)#144
soot.coffi.CFG.adjustBranchTargets()V#Constant(L;,null)#145
soot.coffi.CFG.adjustBranchTargets()V#ConditionalBranch(Ljava/lang/Object;,ne,5)#146
soot.coffi.CFG.adjustBranchTargets()V#LocalLoad(Ljava/lang/Object;,1)#5
soot.coffi.CFG.adjustBranchTargets()V#Instanceof(Lsoot/coffi/Instruction_branch;)#6
soot.coffi.CFG.adjustBranchTargets()V#Constant(I,0)#7
soot.coffi.CFG.adjustBranchTargets()V#ConditionalBranch(I,eq,29)#8
soot.coffi.CFG.adjustBranchTargets()V#LocalLoad(Ljava/lang/Object;,1)#29
soot.coffi.CFG.adjustBranchTargets()V#Instanceof(Lsoot/coffi/Instruction_Lookupswitch;)#30
soot.coffi.CFG.adjustBranchTargets()V#Constant(I,0)#31
soot.coffi.CFG.adjustBranchTargets()V#ConditionalBranch(I,eq,84)#32
soot.coffi.CFG.adjustBranchTargets()V#LocalLoad(Ljava/lang/Object;,1)#84
soot.coffi.CFG.adjustBranchTargets()V#Instanceof(Lsoot/coffi/Instruction_Tableswitch;)#85
soot.coffi.CFG.adjustBranchTargets()V#Constant(I,0)#86
soot.coffi.CFG.adjustBranchTargets()V#ConditionalBranch(I,eq,141)#87
soot.coffi.CFG.adjustBranchTargets()V#LocalLoad(Ljava/lang/Object;,1)#141
soot.coffi.CFG.adjustBranchTargets()V#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/Instruction;,next)#142
soot.coffi.CFG.adjustBranchTargets()V#LocalStore(Ljava/lang/Object;,1)#143
soot.coffi.CFG.adjustBranchTargets()V#Return(V)#147
soot.coffi.CFG.eliminateJsrRets()Z#Constant(I,1)#88
soot.coffi.CFG.eliminateJsrRets()Z#Return(I)#89
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Pop(1)#42
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#LocalLoad(Ljava/lang/Object;,0)#43
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Invoke(SPECIAL,Lsoot/coffi/CFG;,buildBBCFG,()V)#44
soot.coffi.CFG.buildBBCFG()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.CFG.buildBBCFG()V#Get(Lsoot/coffi/method_info;,NONSTATIC,Lsoot/coffi/CFG;,method)#1
soot.coffi.CFG.buildBBCFG()V#Invoke(VIRTUAL,Lsoot/coffi/method_info;,locate_code_attribute,()Lsoot/coffi/Code_attribute;)#2
soot.coffi.CFG.buildBBCFG()V#LocalStore(Ljava/lang/Object;,2)#3
soot.coffi.CFG.buildBBCFG()V#LocalLoad(Ljava/lang/Object;,0)#4
soot.coffi.CFG.buildBBCFG()V#New(Ljava/util/Hashtable;,0)#5
soot.coffi.CFG.buildBBCFG()V#Dup(1,0)#6
soot.coffi.CFG.buildBBCFG()V#Constant(I,100)#7
soot.coffi.CFG.buildBBCFG()V#Constant(F,25.0)#8
soot.coffi.CFG.buildBBCFG()V#Invoke(SPECIAL,Ljava/util/Hashtable;,<init>,(IF)V)#9
soot.coffi.CFG.buildBBCFG()V#Put(Ljava/util/Hashtable;,NONSTATIC,Lsoot/coffi/CFG;,h2bb)#10
soot.coffi.CFG.buildBBCFG()V#LocalLoad(Ljava/lang/Object;,0)#11
soot.coffi.CFG.buildBBCFG()V#New(Ljava/util/Hashtable;,0)#12
soot.coffi.CFG.buildBBCFG()V#Dup(1,0)#13
soot.coffi.CFG.buildBBCFG()V#Constant(I,100)#14
soot.coffi.CFG.buildBBCFG()V#Constant(F,25.0)#15
soot.coffi.CFG.buildBBCFG()V#Invoke(SPECIAL,Ljava/util/Hashtable;,<init>,(IF)V)#16
soot.coffi.CFG.buildBBCFG()V#Put(Ljava/util/Hashtable;,NONSTATIC,Lsoot/coffi/CFG;,t2bb)#17
soot.coffi.CFG.buildBBCFG()V#LocalLoad(Ljava/lang/Object;,0)#18
soot.coffi.CFG.buildBBCFG()V#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/CFG;,sentinel)#19
soot.coffi.CFG.buildBBCFG()V#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/Instruction;,next)#20
soot.coffi.CFG.buildBBCFG()V#LocalStore(Ljava/lang/Object;,3)#21
soot.coffi.CFG.buildBBCFG()V#Constant(L;,null)#22
soot.coffi.CFG.buildBBCFG()V#LocalStore(Ljava/lang/Object;,4)#23
soot.coffi.CFG.buildBBCFG()V#LocalLoad(Ljava/lang/Object;,3)#24
soot.coffi.CFG.buildBBCFG()V#Constant(L;,null)#25
soot.coffi.CFG.buildBBCFG()V#ConditionalBranch(Ljava/lang/Object;,eq,87)#26
soot.coffi.CFG.buildBBCFG()V#LocalLoad(Ljava/lang/Object;,3)#27
soot.coffi.CFG.buildBBCFG()V#Invoke(STATIC,Lsoot/coffi/CFG;,buildBasicBlock,(Lsoot/coffi/Instruction;)Lsoot/coffi/Instruction;)#28
soot.coffi.CFG.buildBasicBlock(Lsoot/coffi/Instruction;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.CFG.buildBasicBlock(Lsoot/coffi/Instruction;)Lsoot/coffi/Instruction;#LocalStore(Ljava/lang/Object;,1)#1
soot.coffi.CFG.buildBasicBlock(Lsoot/coffi/Instruction;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,1)#2
soot.coffi.CFG.buildBasicBlock(Lsoot/coffi/Instruction;)Lsoot/coffi/Instruction;#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/Instruction;,next)#3
soot.coffi.CFG.buildBasicBlock(Lsoot/coffi/Instruction;)Lsoot/coffi/Instruction;#LocalStore(Ljava/lang/Object;,2)#4
soot.coffi.CFG.buildBasicBlock(Lsoot/coffi/Instruction;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,2)#5
soot.coffi.CFG.buildBasicBlock(Lsoot/coffi/Instruction;)Lsoot/coffi/Instruction;#Constant(L;,null)#6
soot.coffi.CFG.buildBasicBlock(Lsoot/coffi/Instruction;)Lsoot/coffi/Instruction;#ConditionalBranch(Ljava/lang/Object;,ne,10)#7
soot.coffi.CFG.buildBasicBlock(Lsoot/coffi/Instruction;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,1)#10
soot.coffi.CFG.buildBasicBlock(Lsoot/coffi/Instruction;)Lsoot/coffi/Instruction;#Get(Z,NONSTATIC,Lsoot/coffi/Instruction;,branches)#11
soot.coffi.CFG.buildBasicBlock(Lsoot/coffi/Instruction;)Lsoot/coffi/Instruction;#Constant(I,0)#12
soot.coffi.CFG.buildBasicBlock(Lsoot/coffi/Instruction;)Lsoot/coffi/Instruction;#ConditionalBranch(I,ne,27)#13
soot.coffi.CFG.buildBasicBlock(Lsoot/coffi/Instruction;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,2)#14
soot.coffi.CFG.buildBasicBlock(Lsoot/coffi/Instruction;)Lsoot/coffi/Instruction;#Get(Z,NONSTATIC,Lsoot/coffi/Instruction;,labelled)#15
soot.coffi.CFG.buildBasicBlock(Lsoot/coffi/Instruction;)Lsoot/coffi/Instruction;#Constant(I,0)#16
soot.coffi.CFG.buildBasicBlock(Lsoot/coffi/Instruction;)Lsoot/coffi/Instruction;#ConditionalBranch(I,eq,19)#17
soot.coffi.CFG.buildBasicBlock(Lsoot/coffi/Instruction;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,2)#19
soot.coffi.CFG.buildBasicBlock(Lsoot/coffi/Instruction;)Lsoot/coffi/Instruction;#LocalStore(Ljava/lang/Object;,1)#20
soot.coffi.CFG.buildBasicBlock(Lsoot/coffi/Instruction;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,1)#21
soot.coffi.CFG.buildBasicBlock(Lsoot/coffi/Instruction;)Lsoot/coffi/Instruction;#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/Instruction;,next)#22
soot.coffi.CFG.buildBasicBlock(Lsoot/coffi/Instruction;)Lsoot/coffi/Instruction;#LocalStore(Ljava/lang/Object;,2)#23
soot.coffi.CFG.buildBasicBlock(Lsoot/coffi/Instruction;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,2)#24
soot.coffi.CFG.buildBasicBlock(Lsoot/coffi/Instruction;)Lsoot/coffi/Instruction;#Constant(L;,null)#25
soot.coffi.CFG.buildBasicBlock(Lsoot/coffi/Instruction;)Lsoot/coffi/Instruction;#ConditionalBranch(Ljava/lang/Object;,ne,10)#26
soot.coffi.CFG.buildBasicBlock(Lsoot/coffi/Instruction;)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,1)#27
soot.coffi.CFG.buildBasicBlock(Lsoot/coffi/Instruction;)Lsoot/coffi/Instruction;#Return(Ljava/lang/Object;)#28
soot.coffi.CFG.buildBBCFG()V#LocalStore(Ljava/lang/Object;,5)#29
soot.coffi.CFG.buildBBCFG()V#LocalLoad(Ljava/lang/Object;,0)#30
soot.coffi.CFG.buildBBCFG()V#New(Lsoot/coffi/BasicBlock;,0)#31
soot.coffi.CFG.buildBBCFG()V#Dup(1,0)#32
soot.coffi.CFG.buildBBCFG()V#LocalLoad(Ljava/lang/Object;,3)#33
soot.coffi.CFG.buildBBCFG()V#LocalLoad(Ljava/lang/Object;,5)#34
soot.coffi.CFG.buildBBCFG()V#Invoke(SPECIAL,Lsoot/coffi/BasicBlock;,<init>,(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V)#35
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#New(Lsoot/util/ArraySet;,0)#3
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#Dup(1,0)#4
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#Invoke(SPECIAL,Lsoot/util/ArraySet;,<init>,()V)#5
soot.util.ArraySet.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.ArraySet.<init>()V#Constant(I,8)#1
soot.util.ArraySet.<init>()V#Invoke(SPECIAL,Lsoot/util/ArraySet;,<init>,(I)V)#2
soot.util.ArraySet.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.ArraySet.<init>(I)V#Invoke(SPECIAL,Ljava/util/AbstractSet;,<init>,()V)#1
soot.util.ArraySet.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.util.ArraySet.<init>(I)V#LocalLoad(I,1)#3
soot.util.ArraySet.<init>(I)V#Put(I,NONSTATIC,Lsoot/util/ArraySet;,maxElements)#4
soot.util.ArraySet.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.util.ArraySet.<init>(I)V#LocalLoad(I,1)#6
soot.util.ArraySet.<init>(I)V#New([Ljava/lang/Object;,1)#7
soot.util.ArraySet.<init>(I)V#Put([Ljava/lang/Object;,NONSTATIC,Lsoot/util/ArraySet;,elements)#8
soot.util.ArraySet.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#9
soot.util.ArraySet.<init>(I)V#Constant(I,0)#10
soot.util.ArraySet.<init>(I)V#Put(I,NONSTATIC,Lsoot/util/ArraySet;,numElements)#11
soot.util.ArraySet.<init>(I)V#Return(V)#12
soot.util.ArraySet.<init>()V#Return(V)#3
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#Put(Ljava/util/Set;,NONSTATIC,Lsoot/coffi/BasicBlock;,addressesToFixup)#6
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#LocalLoad(Ljava/lang/Object;,0)#7
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#8
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#Dup(1,0)#9
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#Get(J,NONSTATIC,Lsoot/G;,coffi_BasicBlock_ids)#10
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#Dup(1,1)#11
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#Constant(J,1)#12
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#BinaryOp(J,add)#13
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#Put(J,NONSTATIC,Lsoot/G;,coffi_BasicBlock_ids)#14
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#Put(J,NONSTATIC,Lsoot/coffi/BasicBlock;,id)#15
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#LocalLoad(Ljava/lang/Object;,0)#16
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#LocalLoad(Ljava/lang/Object;,1)#17
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#Put(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/BasicBlock;,head)#18
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#LocalLoad(Ljava/lang/Object;,0)#19
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#LocalLoad(Ljava/lang/Object;,2)#20
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#Put(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/BasicBlock;,tail)#21
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#LocalLoad(Ljava/lang/Object;,0)#22
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#New(Ljava/util/Vector;,0)#23
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#Dup(1,0)#24
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#Constant(I,2)#25
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#Constant(I,10)#26
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#Invoke(SPECIAL,Ljava/util/Vector;,<init>,(II)V)#27
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#Put(Ljava/util/Vector;,NONSTATIC,Lsoot/coffi/BasicBlock;,succ)#28
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#LocalLoad(Ljava/lang/Object;,0)#29
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#New(Ljava/util/Vector;,0)#30
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#Dup(1,0)#31
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#Constant(I,2)#32
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#Constant(I,3)#33
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#Invoke(SPECIAL,Ljava/util/Vector;,<init>,(II)V)#34
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#Put(Ljava/util/Vector;,NONSTATIC,Lsoot/coffi/BasicBlock;,pred)#35
soot.coffi.BasicBlock.<init>(Lsoot/coffi/Instruction;Lsoot/coffi/Instruction;)V#Return(V)#36
soot.coffi.CFG.buildBBCFG()V#Put(Lsoot/coffi/BasicBlock;,NONSTATIC,Lsoot/coffi/CFG;,cfg)#36
soot.coffi.CFG.buildBBCFG()V#LocalLoad(Ljava/lang/Object;,0)#37
soot.coffi.CFG.buildBBCFG()V#Get(Ljava/util/Hashtable;,NONSTATIC,Lsoot/coffi/CFG;,h2bb)#38
soot.coffi.CFG.buildBBCFG()V#LocalLoad(Ljava/lang/Object;,3)#39
soot.coffi.CFG.buildBBCFG()V#LocalLoad(Ljava/lang/Object;,0)#40
soot.coffi.CFG.buildBBCFG()V#Get(Lsoot/coffi/BasicBlock;,NONSTATIC,Lsoot/coffi/CFG;,cfg)#41
soot.coffi.CFG.buildBBCFG()V#Invoke(VIRTUAL,Ljava/util/Hashtable;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#42
soot.coffi.CFG.buildBBCFG()V#Pop(1)#43
soot.coffi.CFG.buildBBCFG()V#LocalLoad(Ljava/lang/Object;,0)#44
soot.coffi.CFG.buildBBCFG()V#Get(Ljava/util/Hashtable;,NONSTATIC,Lsoot/coffi/CFG;,t2bb)#45
soot.coffi.CFG.buildBBCFG()V#LocalLoad(Ljava/lang/Object;,5)#46
soot.coffi.CFG.buildBBCFG()V#LocalLoad(Ljava/lang/Object;,0)#47
soot.coffi.CFG.buildBBCFG()V#Get(Lsoot/coffi/BasicBlock;,NONSTATIC,Lsoot/coffi/CFG;,cfg)#48
soot.coffi.CFG.buildBBCFG()V#Invoke(VIRTUAL,Ljava/util/Hashtable;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#49
soot.coffi.CFG.buildBBCFG()V#Pop(1)#50
soot.coffi.CFG.buildBBCFG()V#LocalLoad(Ljava/lang/Object;,5)#51
soot.coffi.CFG.buildBBCFG()V#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/Instruction;,next)#52
soot.coffi.CFG.buildBBCFG()V#LocalStore(Ljava/lang/Object;,3)#53
soot.coffi.CFG.buildBBCFG()V#LocalLoad(Ljava/lang/Object;,0)#54
soot.coffi.CFG.buildBBCFG()V#Get(Lsoot/coffi/BasicBlock;,NONSTATIC,Lsoot/coffi/CFG;,cfg)#55
soot.coffi.CFG.buildBBCFG()V#LocalStore(Ljava/lang/Object;,4)#56
soot.coffi.CFG.buildBBCFG()V#Goto(87)#57
soot.coffi.CFG.buildBBCFG()V#LocalLoad(Ljava/lang/Object;,3)#87
soot.coffi.CFG.buildBBCFG()V#Constant(L;,null)#88
soot.coffi.CFG.buildBBCFG()V#ConditionalBranch(Ljava/lang/Object;,ne,58)#89
soot.coffi.CFG.buildBBCFG()V#LocalLoad(Ljava/lang/Object;,0)#90
soot.coffi.CFG.buildBBCFG()V#Get(Lsoot/coffi/BasicBlock;,NONSTATIC,Lsoot/coffi/CFG;,cfg)#91
soot.coffi.CFG.buildBBCFG()V#LocalStore(Ljava/lang/Object;,3)#92
soot.coffi.CFG.buildBBCFG()V#Goto(233)#93
soot.coffi.CFG.buildBBCFG()V#LocalLoad(Ljava/lang/Object;,3)#233
soot.coffi.CFG.buildBBCFG()V#Constant(L;,null)#234
soot.coffi.CFG.buildBBCFG()V#ConditionalBranch(Ljava/lang/Object;,ne,94)#235
soot.coffi.CFG.buildBBCFG()V#LocalLoad(Ljava/lang/Object;,3)#94
soot.coffi.CFG.buildBBCFG()V#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/BasicBlock;,tail)#95
soot.coffi.CFG.buildBBCFG()V#LocalStore(Ljava/lang/Object;,4)#96
soot.coffi.CFG.buildBBCFG()V#LocalLoad(Ljava/lang/Object;,4)#97
soot.coffi.CFG.buildBBCFG()V#Get(Z,NONSTATIC,Lsoot/coffi/Instruction;,branches)#98
soot.coffi.CFG.buildBBCFG()V#Constant(I,0)#99
soot.coffi.CFG.buildBBCFG()V#ConditionalBranch(I,eq,216)#100
soot.coffi.CFG.buildBBCFG()V#LocalLoad(Ljava/lang/Object;,4)#101
soot.coffi.CFG.buildBBCFG()V#Instanceof(Lsoot/coffi/Instruction_Athrow;)#102
soot.coffi.CFG.buildBBCFG()V#Constant(I,0)#103
soot.coffi.CFG.buildBBCFG()V#ConditionalBranch(I,eq,150)#104
soot.coffi.CFG.buildBBCFG()V#LocalLoad(Ljava/lang/Object;,4)#150
soot.coffi.CFG.buildBBCFG()V#LocalLoad(Ljava/lang/Object;,4)#151
soot.coffi.CFG.buildBBCFG()V#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/Instruction;,next)#152
soot.coffi.CFG.buildBBCFG()V#Invoke(VIRTUAL,Lsoot/coffi/Instruction;,branchpoints,(Lsoot/coffi/Instruction;)[Lsoot/coffi/Instruction;)#153
soot.coffi.Instruction.branchpoints(Lsoot/coffi/Instruction;)[Lsoot/coffi/Instruction;#Constant(L;,null)#0
soot.coffi.Instruction.branchpoints(Lsoot/coffi/Instruction;)[Lsoot/coffi/Instruction;#Return(Ljava/lang/Object;)#1
soot.coffi.CFG.buildBBCFG()V#LocalStore(Ljava/lang/Object;,1)#154
soot.coffi.CFG.buildBBCFG()V#LocalLoad(Ljava/lang/Object;,1)#155
soot.coffi.CFG.buildBBCFG()V#Constant(L;,null)#156
soot.coffi.CFG.buildBBCFG()V#ConditionalBranch(Ljava/lang/Object;,eq,230)#157
soot.coffi.CFG.buildBBCFG()V#LocalLoad(Ljava/lang/Object;,3)#230
soot.coffi.CFG.buildBBCFG()V#Get(Lsoot/coffi/BasicBlock;,NONSTATIC,Lsoot/coffi/BasicBlock;,next)#231
soot.coffi.CFG.buildBBCFG()V#LocalStore(Ljava/lang/Object;,3)#232
soot.coffi.CFG.buildBBCFG()V#Constant(I,0)#236
soot.coffi.CFG.buildBBCFG()V#LocalStore(I,4)#237
soot.coffi.CFG.buildBBCFG()V#Goto(270)#238
soot.coffi.CFG.buildBBCFG()V#LocalLoad(I,4)#270
soot.coffi.CFG.buildBBCFG()V#LocalLoad(Ljava/lang/Object;,2)#271
soot.coffi.CFG.buildBBCFG()V#Get(I,NONSTATIC,Lsoot/coffi/Code_attribute;,exception_table_length)#272
soot.coffi.CFG.buildBBCFG()V#ConditionalBranch(I,lt,239)#273
soot.coffi.CFG.buildBBCFG()V#Return(V)#274
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#LocalLoad(Ljava/lang/Object;,0)#45
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Get(Lsoot/coffi/BasicBlock;,NONSTATIC,Lsoot/coffi/CFG;,cfg)#46
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Constant(I,1)#47
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Put(Z,NONSTATIC,Lsoot/coffi/BasicBlock;,beginCode)#48
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#LocalLoad(Ljava/lang/Object;,1)#49
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#LocalLoad(Ljava/lang/Object;,0)#50
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Put(Lsoot/coffi/CFG;,NONSTATIC,Lsoot/coffi/method_info;,cfg)#51
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#LocalLoad(Ljava/lang/Object;,0)#52
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Get(Lsoot/coffi/BasicBlock;,NONSTATIC,Lsoot/coffi/CFG;,cfg)#53
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Constant(L;,null)#54
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#ConditionalBranch(Ljava/lang/Object;,eq,62)#55
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#LocalLoad(Ljava/lang/Object;,0)#56
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#LocalLoad(Ljava/lang/Object;,0)#57
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Get(Lsoot/coffi/BasicBlock;,NONSTATIC,Lsoot/coffi/CFG;,cfg)#58
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/BasicBlock;,head)#59
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Put(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/CFG;,firstInstruction)#60
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Goto(65)#61
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Get(Z,STATIC,Lsoot/jbco/Main;,metrics)#65
soot.jbco.Main.<clinit>()V#Constant(I,0)#0
soot.jbco.Main.<clinit>()V#Put(Z,STATIC,Lsoot/jbco/Main;,jbcoDebug)#1
soot.jbco.Main.<clinit>()V#Constant(I,1)#2
soot.jbco.Main.<clinit>()V#Put(Z,STATIC,Lsoot/jbco/Main;,jbcoSummary)#3
soot.jbco.Main.<clinit>()V#Constant(I,0)#4
soot.jbco.Main.<clinit>()V#Put(Z,STATIC,Lsoot/jbco/Main;,jbcoVerbose)#5
soot.jbco.Main.<clinit>()V#Constant(I,0)#6
soot.jbco.Main.<clinit>()V#Put(Z,STATIC,Lsoot/jbco/Main;,metrics)#7
soot.jbco.Main.<clinit>()V#New(Ljava/util/HashMap;,0)#8
soot.jbco.Main.<clinit>()V#Dup(1,0)#9
soot.jbco.Main.<clinit>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#10
soot.jbco.Main.<clinit>()V#Put(Ljava/util/HashMap;,STATIC,Lsoot/jbco/Main;,transformsToWeights)#11
soot.jbco.Main.<clinit>()V#New(Ljava/util/HashMap;,0)#12
soot.jbco.Main.<clinit>()V#Dup(1,0)#13
soot.jbco.Main.<clinit>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#14
soot.jbco.Main.<clinit>()V#Put(Ljava/util/HashMap;,STATIC,Lsoot/jbco/Main;,transformsToMethodsToWeights)#15
soot.jbco.Main.<clinit>()V#New(Ljava/util/HashMap;,0)#16
soot.jbco.Main.<clinit>()V#Dup(1,0)#17
soot.jbco.Main.<clinit>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#18
soot.jbco.Main.<clinit>()V#Put(Ljava/util/HashMap;,STATIC,Lsoot/jbco/Main;,method2Locals2REALTypes)#19
soot.jbco.Main.<clinit>()V#New(Ljava/util/HashMap;,0)#20
soot.jbco.Main.<clinit>()V#Dup(1,0)#21
soot.jbco.Main.<clinit>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#22
soot.jbco.Main.<clinit>()V#Put(Ljava/util/HashMap;,STATIC,Lsoot/jbco/Main;,methods2Baf2JLocals)#23
soot.jbco.Main.<clinit>()V#New(Ljava/util/HashMap;,0)#24
soot.jbco.Main.<clinit>()V#Dup(1,0)#25
soot.jbco.Main.<clinit>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#26
soot.jbco.Main.<clinit>()V#Put(Ljava/util/HashMap;,STATIC,Lsoot/jbco/Main;,methods2JLocals)#27
soot.jbco.Main.<clinit>()V#New(Ljava/util/ArrayList;,0)#28
soot.jbco.Main.<clinit>()V#Dup(1,0)#29
soot.jbco.Main.<clinit>()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#30
soot.jbco.Main.<clinit>()V#Put(Ljava/util/ArrayList;,STATIC,Lsoot/jbco/Main;,IntermediateAppClasses)#31
soot.jbco.Main.<clinit>()V#New(Ljava/util/ArrayList;,0)#32
soot.jbco.Main.<clinit>()V#Dup(1,0)#33
soot.jbco.Main.<clinit>()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#34
soot.jbco.Main.<clinit>()V#Put(Ljava/util/ArrayList;,STATIC,Lsoot/jbco/Main;,jbcotransforms)#35
soot.jbco.Main.<clinit>()V#Constant(I,2)#36
soot.jbco.Main.<clinit>()V#New([[Ljava/lang/String;,1)#37
soot.jbco.Main.<clinit>()V#Dup(1,0)#38
soot.jbco.Main.<clinit>()V#Constant(I,0)#39
soot.jbco.Main.<clinit>()V#Constant(I,18)#40
soot.jbco.Main.<clinit>()V#New([Ljava/lang/String;,1)#41
soot.jbco.Main.<clinit>()V#Dup(1,0)#42
soot.jbco.Main.<clinit>()V#Constant(I,0)#43
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"Rename Classes")#44
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#45
soot.jbco.Main.<clinit>()V#Dup(1,0)#46
soot.jbco.Main.<clinit>()V#Constant(I,1)#47
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"Rename Methods")#48
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#49
soot.jbco.Main.<clinit>()V#Dup(1,0)#50
soot.jbco.Main.<clinit>()V#Constant(I,2)#51
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"Rename Fields")#52
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#53
soot.jbco.Main.<clinit>()V#Dup(1,0)#54
soot.jbco.Main.<clinit>()V#Constant(I,3)#55
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"Build API Buffer Methods")#56
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#57
soot.jbco.Main.<clinit>()V#Dup(1,0)#58
soot.jbco.Main.<clinit>()V#Constant(I,4)#59
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"Build Library Buffer Classes")#60
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#61
soot.jbco.Main.<clinit>()V#Dup(1,0)#62
soot.jbco.Main.<clinit>()V#Constant(I,5)#63
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"Goto Instruction Augmentation")#64
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#65
soot.jbco.Main.<clinit>()V#Dup(1,0)#66
soot.jbco.Main.<clinit>()V#Constant(I,6)#67
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"Add Dead Switche Statements")#68
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#69
soot.jbco.Main.<clinit>()V#Dup(1,0)#70
soot.jbco.Main.<clinit>()V#Constant(I,7)#71
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"Convert Arith. Expr. To Bitshifting Ops")#72
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#73
soot.jbco.Main.<clinit>()V#Dup(1,0)#74
soot.jbco.Main.<clinit>()V#Constant(I,8)#75
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"Convert Branches to JSR Instructions")#76
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#77
soot.jbco.Main.<clinit>()V#Dup(1,0)#78
soot.jbco.Main.<clinit>()V#Constant(I,9)#79
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"Disobey Constructor Conventions")#80
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#81
soot.jbco.Main.<clinit>()V#Dup(1,0)#82
soot.jbco.Main.<clinit>()V#Constant(I,10)#83
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"Reuse Duplicate Sequences")#84
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#85
soot.jbco.Main.<clinit>()V#Dup(1,0)#86
soot.jbco.Main.<clinit>()V#Constant(I,11)#87
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"Replace If(Non)Nulls with Try-Catch")#88
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#89
soot.jbco.Main.<clinit>()V#Dup(1,0)#90
soot.jbco.Main.<clinit>()V#Constant(I,12)#91
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"Indirect If Instructions")#92
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#93
soot.jbco.Main.<clinit>()V#Dup(1,0)#94
soot.jbco.Main.<clinit>()V#Constant(I,13)#95
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"Pack Locals into Bitfields")#96
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#97
soot.jbco.Main.<clinit>()V#Dup(1,0)#98
soot.jbco.Main.<clinit>()V#Constant(I,14)#99
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"Reorder Loads Above Ifs")#100
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#101
soot.jbco.Main.<clinit>()V#Dup(1,0)#102
soot.jbco.Main.<clinit>()V#Constant(I,15)#103
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"Combine Try and Catch Blocks")#104
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#105
soot.jbco.Main.<clinit>()V#Dup(1,0)#106
soot.jbco.Main.<clinit>()V#Constant(I,16)#107
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"Embed Constants in Fields")#108
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#109
soot.jbco.Main.<clinit>()V#Dup(1,0)#110
soot.jbco.Main.<clinit>()V#Constant(I,17)#111
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"Partially Trap Switches")#112
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#113
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#114
soot.jbco.Main.<clinit>()V#Dup(1,0)#115
soot.jbco.Main.<clinit>()V#Constant(I,1)#116
soot.jbco.Main.<clinit>()V#Constant(I,18)#117
soot.jbco.Main.<clinit>()V#New([Ljava/lang/String;,1)#118
soot.jbco.Main.<clinit>()V#Dup(1,0)#119
soot.jbco.Main.<clinit>()V#Constant(I,0)#120
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"wjtp.jbco_cr")#121
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#122
soot.jbco.Main.<clinit>()V#Dup(1,0)#123
soot.jbco.Main.<clinit>()V#Constant(I,1)#124
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"wjtp.jbco_mr")#125
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#126
soot.jbco.Main.<clinit>()V#Dup(1,0)#127
soot.jbco.Main.<clinit>()V#Constant(I,2)#128
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"wjtp.jbco_fr")#129
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#130
soot.jbco.Main.<clinit>()V#Dup(1,0)#131
soot.jbco.Main.<clinit>()V#Constant(I,3)#132
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"wjtp.jbco_blbc")#133
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#134
soot.jbco.Main.<clinit>()V#Dup(1,0)#135
soot.jbco.Main.<clinit>()V#Constant(I,4)#136
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"wjtp.jbco_bapibm")#137
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#138
soot.jbco.Main.<clinit>()V#Dup(1,0)#139
soot.jbco.Main.<clinit>()V#Constant(I,5)#140
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"jtp.jbco_gia")#141
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#142
soot.jbco.Main.<clinit>()V#Dup(1,0)#143
soot.jbco.Main.<clinit>()V#Constant(I,6)#144
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"jtp.jbco_adss")#145
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#146
soot.jbco.Main.<clinit>()V#Dup(1,0)#147
soot.jbco.Main.<clinit>()V#Constant(I,7)#148
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"jtp.jbco_cae2bo")#149
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#150
soot.jbco.Main.<clinit>()V#Dup(1,0)#151
soot.jbco.Main.<clinit>()V#Constant(I,8)#152
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"bb.jbco_cb2ji")#153
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#154
soot.jbco.Main.<clinit>()V#Dup(1,0)#155
soot.jbco.Main.<clinit>()V#Constant(I,9)#156
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"bb.jbco_dcc")#157
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#158
soot.jbco.Main.<clinit>()V#Dup(1,0)#159
soot.jbco.Main.<clinit>()V#Constant(I,10)#160
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"bb.jbco_rds")#161
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#162
soot.jbco.Main.<clinit>()V#Dup(1,0)#163
soot.jbco.Main.<clinit>()V#Constant(I,11)#164
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"bb.jbco_riitcb")#165
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#166
soot.jbco.Main.<clinit>()V#Dup(1,0)#167
soot.jbco.Main.<clinit>()V#Constant(I,12)#168
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"bb.jbco_iii")#169
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#170
soot.jbco.Main.<clinit>()V#Dup(1,0)#171
soot.jbco.Main.<clinit>()V#Constant(I,13)#172
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"bb.jbco_plvb")#173
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#174
soot.jbco.Main.<clinit>()V#Dup(1,0)#175
soot.jbco.Main.<clinit>()V#Constant(I,14)#176
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"bb.jbco_rlaii")#177
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#178
soot.jbco.Main.<clinit>()V#Dup(1,0)#179
soot.jbco.Main.<clinit>()V#Constant(I,15)#180
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"bb.jbco_ctbcb")#181
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#182
soot.jbco.Main.<clinit>()V#Dup(1,0)#183
soot.jbco.Main.<clinit>()V#Constant(I,16)#184
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"bb.jbco_ecvf")#185
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#186
soot.jbco.Main.<clinit>()V#Dup(1,0)#187
soot.jbco.Main.<clinit>()V#Constant(I,17)#188
soot.jbco.Main.<clinit>()V#Constant(Ljava/lang/String;,"bb.jbco_ptss")#189
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#190
soot.jbco.Main.<clinit>()V#ArrayStore(Ljava/lang/Object;)#191
soot.jbco.Main.<clinit>()V#Put([[Ljava/lang/String;,STATIC,Lsoot/jbco/Main;,optionStrings)#192
soot.jbco.Main.<clinit>()V#Return(V)#193
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Constant(I,0)#66
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#ConditionalBranch(I,eq,70)#67
soot.coffi.CFG.<init>(Lsoot/coffi/method_info;)V#Return(V)#70
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Get(Z,STATIC,Lsoot/jbco/Main;,metrics)#118
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Constant(I,0)#119
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#ConditionalBranch(I,eq,123)#120
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#123
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Invoke(VIRTUAL,Lsoot/options/Options;,verbose,()Z)#124
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Constant(I,0)#125
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#ConditionalBranch(I,eq,140)#126
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#140
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Invoke(VIRTUAL,Lsoot/Scene;,getPhantomRefs,()Z)#141
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalStore(I,6)#142
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#143
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Constant(I,1)#144
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Invoke(VIRTUAL,Lsoot/Scene;,setPhantomRefs,(Z)V)#145
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalLoad(Ljava/lang/Object;,0)#146
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Get(Lsoot/coffi/method_info;,NONSTATIC,Lsoot/coffi/CoffiMethodSource;,coffiMethod)#147
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Get(Lsoot/coffi/CFG;,NONSTATIC,Lsoot/coffi/method_info;,cfg)#148
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalLoad(Ljava/lang/Object;,0)#149
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Get(Lsoot/coffi/ClassFile;,NONSTATIC,Lsoot/coffi/CoffiMethodSource;,coffiClass)#150
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Get([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/ClassFile;,constant_pool)#151
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalLoad(Ljava/lang/Object;,0)#152
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Get(Lsoot/coffi/ClassFile;,NONSTATIC,Lsoot/coffi/CoffiMethodSource;,coffiClass)#153
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Get(I,NONSTATIC,Lsoot/coffi/ClassFile;,this_class)#154
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalLoad(Ljava/lang/Object;,0)#155
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Get(Lsoot/coffi/ClassFile;,NONSTATIC,Lsoot/coffi/CoffiMethodSource;,coffiClass)#156
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Get(Lsoot/coffi/BootstrapMethods_attribute;,NONSTATIC,Lsoot/coffi/ClassFile;,bootstrap_methods_attribute)#157
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalLoad(Ljava/lang/Object;,3)#158
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Invoke(VIRTUAL,Lsoot/coffi/CFG;,jimplify,([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z)#159
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,3)#1
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Put(Lsoot/coffi/BootstrapMethods_attribute;,NONSTATIC,Lsoot/coffi/CFG;,bootstrap_methods_attribute)#2
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(STATIC,Lsoot/coffi/Util;,v,()Lsoot/coffi/Util;)#3
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#New(Ljava/util/HashMap;,0)#4
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Dup(1,0)#5
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#6
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(VIRTUAL,Lsoot/coffi/Util;,setClassNameToAbbreviation,(Ljava/util/Map;)V)#7
soot.coffi.Util.setClassNameToAbbreviation(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Util.setClassNameToAbbreviation(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.coffi.Util.setClassNameToAbbreviation(Ljava/util/Map;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/coffi/Util;,classNameToAbbreviation)#2
soot.coffi.Util.setClassNameToAbbreviation(Ljava/util/Map;)V#Return(V)#3
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,4)#8
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(VIRTUAL,Lsoot/jimple/JimpleBody;,getUnits,()Lsoot/PatchingChain;)#9
soot.Body.getUnits()Lsoot/PatchingChain;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Body.getUnits()Lsoot/PatchingChain;#Get(Lsoot/PatchingChain;,NONSTATIC,Lsoot/Body;,unitChain)#1
soot.Body.getUnits()Lsoot/PatchingChain;#Return(Ljava/lang/Object;)#2
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalStore(Ljava/lang/Object;,5)#10
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,0)#11
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,4)#12
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Put(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/coffi/CFG;,listBody)#13
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,0)#14
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,5)#15
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Put(Lsoot/util/Chain;,NONSTATIC,Lsoot/coffi/CFG;,units)#16
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,0)#17
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#New(Ljava/util/HashMap;,0)#18
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Dup(1,0)#19
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#20
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Put(Ljava/util/Map;,NONSTATIC,Lsoot/coffi/CFG;,instructionToFirstStmt)#21
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,0)#22
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#New(Ljava/util/HashMap;,0)#23
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Dup(1,0)#24
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#25
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Put(Ljava/util/Map;,NONSTATIC,Lsoot/coffi/CFG;,instructionToLastStmt)#26
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,0)#27
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,4)#28
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(VIRTUAL,Lsoot/jimple/JimpleBody;,getMethod,()Lsoot/SootMethod;)#29
soot.Body.getMethod()Lsoot/SootMethod;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Body.getMethod()Lsoot/SootMethod;#Get(Lsoot/SootMethod;,NONSTATIC,Lsoot/Body;,method)#1
soot.Body.getMethod()Lsoot/SootMethod;#Constant(L;,null)#2
soot.Body.getMethod()Lsoot/SootMethod;#ConditionalBranch(Ljava/lang/Object;,ne,9)#3
soot.Body.getMethod()Lsoot/SootMethod;#LocalLoad(Ljava/lang/Object;,0)#9
soot.Body.getMethod()Lsoot/SootMethod;#Get(Lsoot/SootMethod;,NONSTATIC,Lsoot/Body;,method)#10
soot.Body.getMethod()Lsoot/SootMethod;#Return(Ljava/lang/Object;)#11
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Put(Lsoot/SootMethod;,NONSTATIC,Lsoot/coffi/CFG;,jmethod)#30
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,0)#31
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#32
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Put(Lsoot/Scene;,NONSTATIC,Lsoot/coffi/CFG;,cm)#33
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#New(Lsoot/util/ArraySet;,0)#34
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Dup(1,0)#35
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(SPECIAL,Lsoot/util/ArraySet;,<init>,()V)#36
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalStore(Ljava/lang/Object;,6)#37
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,0)#38
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Get(Lsoot/SootMethod;,NONSTATIC,Lsoot/coffi/CFG;,jmethod)#39
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(VIRTUAL,Lsoot/SootMethod;,getParameterTypes,()Ljava/util/List;)#40
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalStore(Ljava/lang/Object;,7)#41
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,0)#42
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Get(Lsoot/coffi/method_info;,NONSTATIC,Lsoot/coffi/CFG;,method)#43
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(VIRTUAL,Lsoot/coffi/method_info;,locate_code_attribute,()Lsoot/coffi/Code_attribute;)#44
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalStore(Ljava/lang/Object;,8)#45
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,8)#46
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(VIRTUAL,Lsoot/coffi/Code_attribute;,findLocalVariableTable,()Lsoot/coffi/LocalVariableTable_attribute;)#47
soot.coffi.Code_attribute.findLocalVariableTable()Lsoot/coffi/LocalVariableTable_attribute;#Constant(I,0)#0
soot.coffi.Code_attribute.findLocalVariableTable()Lsoot/coffi/LocalVariableTable_attribute;#LocalStore(I,1)#1
soot.coffi.Code_attribute.findLocalVariableTable()Lsoot/coffi/LocalVariableTable_attribute;#Goto(20)#2
soot.coffi.Code_attribute.findLocalVariableTable()Lsoot/coffi/LocalVariableTable_attribute;#LocalLoad(I,1)#20
soot.coffi.Code_attribute.findLocalVariableTable()Lsoot/coffi/LocalVariableTable_attribute;#LocalLoad(Ljava/lang/Object;,0)#21
soot.coffi.Code_attribute.findLocalVariableTable()Lsoot/coffi/LocalVariableTable_attribute;#Get(I,NONSTATIC,Lsoot/coffi/Code_attribute;,attributes_count)#22
soot.coffi.Code_attribute.findLocalVariableTable()Lsoot/coffi/LocalVariableTable_attribute;#ConditionalBranch(I,lt,3)#23
soot.coffi.Code_attribute.findLocalVariableTable()Lsoot/coffi/LocalVariableTable_attribute;#LocalLoad(Ljava/lang/Object;,0)#3
soot.coffi.Code_attribute.findLocalVariableTable()Lsoot/coffi/LocalVariableTable_attribute;#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/Code_attribute;,attributes)#4
soot.coffi.Code_attribute.findLocalVariableTable()Lsoot/coffi/LocalVariableTable_attribute;#LocalLoad(I,1)#5
soot.coffi.Code_attribute.findLocalVariableTable()Lsoot/coffi/LocalVariableTable_attribute;#ArrayLoad(Ljava/lang/Object;)#6
soot.coffi.Code_attribute.findLocalVariableTable()Lsoot/coffi/LocalVariableTable_attribute;#Instanceof(Lsoot/coffi/LocalVariableTable_attribute;)#7
soot.coffi.Code_attribute.findLocalVariableTable()Lsoot/coffi/LocalVariableTable_attribute;#Constant(I,0)#8
soot.coffi.Code_attribute.findLocalVariableTable()Lsoot/coffi/LocalVariableTable_attribute;#ConditionalBranch(I,eq,16)#9
soot.coffi.Code_attribute.findLocalVariableTable()Lsoot/coffi/LocalVariableTable_attribute;#LocalLoad(I,1)#16
soot.coffi.Code_attribute.findLocalVariableTable()Lsoot/coffi/LocalVariableTable_attribute;#Constant(I,1)#17
soot.coffi.Code_attribute.findLocalVariableTable()Lsoot/coffi/LocalVariableTable_attribute;#BinaryOp(I,add)#18
soot.coffi.Code_attribute.findLocalVariableTable()Lsoot/coffi/LocalVariableTable_attribute;#LocalStore(I,1)#19
soot.coffi.Code_attribute.findLocalVariableTable()Lsoot/coffi/LocalVariableTable_attribute;#Constant(L;,null)#24
soot.coffi.Code_attribute.findLocalVariableTable()Lsoot/coffi/LocalVariableTable_attribute;#Return(Ljava/lang/Object;)#25
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalStore(Ljava/lang/Object;,9)#48
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,8)#49
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(VIRTUAL,Lsoot/coffi/Code_attribute;,findLocalVariableTypeTable,()Lsoot/coffi/LocalVariableTypeTable_attribute;)#50
soot.coffi.Code_attribute.findLocalVariableTypeTable()Lsoot/coffi/LocalVariableTypeTable_attribute;#Constant(I,0)#0
soot.coffi.Code_attribute.findLocalVariableTypeTable()Lsoot/coffi/LocalVariableTypeTable_attribute;#LocalStore(I,1)#1
soot.coffi.Code_attribute.findLocalVariableTypeTable()Lsoot/coffi/LocalVariableTypeTable_attribute;#Goto(20)#2
soot.coffi.Code_attribute.findLocalVariableTypeTable()Lsoot/coffi/LocalVariableTypeTable_attribute;#LocalLoad(I,1)#20
soot.coffi.Code_attribute.findLocalVariableTypeTable()Lsoot/coffi/LocalVariableTypeTable_attribute;#LocalLoad(Ljava/lang/Object;,0)#21
soot.coffi.Code_attribute.findLocalVariableTypeTable()Lsoot/coffi/LocalVariableTypeTable_attribute;#Get(I,NONSTATIC,Lsoot/coffi/Code_attribute;,attributes_count)#22
soot.coffi.Code_attribute.findLocalVariableTypeTable()Lsoot/coffi/LocalVariableTypeTable_attribute;#ConditionalBranch(I,lt,3)#23
soot.coffi.Code_attribute.findLocalVariableTypeTable()Lsoot/coffi/LocalVariableTypeTable_attribute;#LocalLoad(Ljava/lang/Object;,0)#3
soot.coffi.Code_attribute.findLocalVariableTypeTable()Lsoot/coffi/LocalVariableTypeTable_attribute;#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/Code_attribute;,attributes)#4
soot.coffi.Code_attribute.findLocalVariableTypeTable()Lsoot/coffi/LocalVariableTypeTable_attribute;#LocalLoad(I,1)#5
soot.coffi.Code_attribute.findLocalVariableTypeTable()Lsoot/coffi/LocalVariableTypeTable_attribute;#ArrayLoad(Ljava/lang/Object;)#6
soot.coffi.Code_attribute.findLocalVariableTypeTable()Lsoot/coffi/LocalVariableTypeTable_attribute;#Instanceof(Lsoot/coffi/LocalVariableTypeTable_attribute;)#7
soot.coffi.Code_attribute.findLocalVariableTypeTable()Lsoot/coffi/LocalVariableTypeTable_attribute;#Constant(I,0)#8
soot.coffi.Code_attribute.findLocalVariableTypeTable()Lsoot/coffi/LocalVariableTypeTable_attribute;#ConditionalBranch(I,eq,16)#9
soot.coffi.Code_attribute.findLocalVariableTypeTable()Lsoot/coffi/LocalVariableTypeTable_attribute;#LocalLoad(I,1)#16
soot.coffi.Code_attribute.findLocalVariableTypeTable()Lsoot/coffi/LocalVariableTypeTable_attribute;#Constant(I,1)#17
soot.coffi.Code_attribute.findLocalVariableTypeTable()Lsoot/coffi/LocalVariableTypeTable_attribute;#BinaryOp(I,add)#18
soot.coffi.Code_attribute.findLocalVariableTypeTable()Lsoot/coffi/LocalVariableTypeTable_attribute;#LocalStore(I,1)#19
soot.coffi.Code_attribute.findLocalVariableTypeTable()Lsoot/coffi/LocalVariableTypeTable_attribute;#Constant(L;,null)#24
soot.coffi.Code_attribute.findLocalVariableTypeTable()Lsoot/coffi/LocalVariableTypeTable_attribute;#Return(Ljava/lang/Object;)#25
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalStore(Ljava/lang/Object;,10)#51
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(STATIC,Lsoot/coffi/Util;,v,()Lsoot/coffi/Util;)#52
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,9)#53
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Put(Lsoot/coffi/LocalVariableTable_attribute;,NONSTATIC,Lsoot/coffi/Util;,activeVariableTable)#54
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(STATIC,Lsoot/coffi/Util;,v,()Lsoot/coffi/Util;)#55
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,10)#56
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Put(Lsoot/coffi/LocalVariableTypeTable_attribute;,NONSTATIC,Lsoot/coffi/Util;,activeVariableTypeTable)#57
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(STATIC,Lsoot/coffi/Util;,v,()Lsoot/coffi/Util;)#58
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,1)#59
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Put([Lsoot/coffi/cp_info;,NONSTATIC,Lsoot/coffi/Util;,activeConstantPool)#60
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,0)#61
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Get(Lsoot/SootMethod;,NONSTATIC,Lsoot/coffi/CFG;,jmethod)#62
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(VIRTUAL,Lsoot/SootMethod;,getDeclaringClass,()Lsoot/SootClass;)#63
soot.SootMethod.getDeclaringClass()Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethod.getDeclaringClass()Lsoot/SootClass;#Get(Z,NONSTATIC,Lsoot/SootMethod;,isDeclared)#1
soot.SootMethod.getDeclaringClass()Lsoot/SootClass;#Constant(I,0)#2
soot.SootMethod.getDeclaringClass()Lsoot/SootClass;#ConditionalBranch(I,ne,16)#3
soot.SootMethod.getDeclaringClass()Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,0)#16
soot.SootMethod.getDeclaringClass()Lsoot/SootClass;#Get(Lsoot/SootClass;,NONSTATIC,Lsoot/SootMethod;,declaringClass)#17
soot.SootMethod.getDeclaringClass()Lsoot/SootClass;#Return(Ljava/lang/Object;)#18
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(VIRTUAL,Lsoot/SootClass;,getName,()Ljava/lang/String;)#64
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(STATIC,Lsoot/RefType;,v,(Ljava/lang/String;)Lsoot/RefType;)#65
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalStore(Ljava/lang/Object;,11)#66
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,0)#67
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Get(Lsoot/SootMethod;,NONSTATIC,Lsoot/coffi/CFG;,jmethod)#68
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(VIRTUAL,Lsoot/SootMethod;,getModifiers,()I)#69
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(STATIC,Lsoot/Modifier;,isStatic,(I)Z)#70
soot.Modifier.isStatic(I)Z#LocalLoad(I,0)#0
soot.Modifier.isStatic(I)Z#Constant(I,8)#1
soot.Modifier.isStatic(I)Z#BinaryOp(I,and)#2
soot.Modifier.isStatic(I)Z#Constant(I,0)#3
soot.Modifier.isStatic(I)Z#ConditionalBranch(I,eq,7)#4
soot.Modifier.isStatic(I)Z#Constant(I,0)#7
soot.Modifier.isStatic(I)Z#Return(I)#8
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalStore(I,12)#71
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Constant(I,0)#72
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalStore(I,13)#73
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(I,12)#74
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Constant(I,0)#75
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#ConditionalBranch(I,ne,125)#76
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(STATIC,Lsoot/coffi/Util;,v,()Lsoot/coffi/Util;)#77
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Get(Z,NONSTATIC,Lsoot/coffi/Util;,useFaithfulNaming)#78
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Constant(I,0)#79
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#ConditionalBranch(I,eq,84)#80
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Constant(Ljava/lang/String;,"l0")#84
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalStore(Ljava/lang/Object;,14)#85
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Goto(99)#86
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(STATIC,Lsoot/jimple/Jimple;,v,()Lsoot/jimple/Jimple;)#99
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,14)#100
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(STATIC,Lsoot/UnknownType;,v,()Lsoot/UnknownType;)#101
soot.UnknownType.v()Lsoot/UnknownType;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.UnknownType.v()Lsoot/UnknownType;#Invoke(VIRTUAL,Lsoot/G;,soot_UnknownType,()Lsoot/UnknownType;)#1
soot.Singletons.soot_UnknownType()Lsoot/UnknownType;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_UnknownType()Lsoot/UnknownType;#Get(Lsoot/UnknownType;,NONSTATIC,Lsoot/Singletons;,instance_soot_UnknownType)#1
soot.Singletons.soot_UnknownType()Lsoot/UnknownType;#Constant(L;,null)#2
soot.Singletons.soot_UnknownType()Lsoot/UnknownType;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_UnknownType()Lsoot/UnknownType;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_UnknownType()Lsoot/UnknownType;#New(Lsoot/UnknownType;,0)#5
soot.Singletons.soot_UnknownType()Lsoot/UnknownType;#Dup(1,0)#6
soot.Singletons.soot_UnknownType()Lsoot/UnknownType;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_UnknownType()Lsoot/UnknownType;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_UnknownType()Lsoot/UnknownType;#Invoke(SPECIAL,Lsoot/UnknownType;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.UnknownType.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.UnknownType.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Type;,<init>,()V)#1
soot.UnknownType.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_UnknownType()Lsoot/UnknownType;#Put(Lsoot/UnknownType;,NONSTATIC,Lsoot/Singletons;,instance_soot_UnknownType)#10
soot.Singletons.soot_UnknownType()Lsoot/UnknownType;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_UnknownType()Lsoot/UnknownType;#Get(Lsoot/UnknownType;,NONSTATIC,Lsoot/Singletons;,instance_soot_UnknownType)#12
soot.Singletons.soot_UnknownType()Lsoot/UnknownType;#Return(Ljava/lang/Object;)#13
soot.UnknownType.v()Lsoot/UnknownType;#Return(Ljava/lang/Object;)#2
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(VIRTUAL,Lsoot/jimple/Jimple;,newLocal,(Ljava/lang/String;Lsoot/Type;)Lsoot/Local;)#102
soot.jimple.Jimple.newLocal(Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#New(Lsoot/jimple/internal/JimpleLocal;,0)#0
soot.jimple.Jimple.newLocal(Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#Dup(1,0)#1
soot.jimple.Jimple.newLocal(Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.Jimple.newLocal(Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#Invoke(VIRTUAL,Ljava/lang/String;,intern,()Ljava/lang/String;)#3
soot.jimple.Jimple.newLocal(Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,2)#4
soot.jimple.Jimple.newLocal(Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#Invoke(SPECIAL,Lsoot/jimple/internal/JimpleLocal;,<init>,(Ljava/lang/String;Lsoot/Type;)V)#5
soot.jimple.internal.JimpleLocal.<init>(Ljava/lang/String;Lsoot/Type;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JimpleLocal.<init>(Ljava/lang/String;Lsoot/Type;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.jimple.internal.JimpleLocal.<init>(Ljava/lang/String;Lsoot/Type;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.internal.JimpleLocal.<init>(Ljava/lang/String;Lsoot/Type;)V#Constant(I,0)#3
soot.jimple.internal.JimpleLocal.<init>(Ljava/lang/String;Lsoot/Type;)V#Put(I,NONSTATIC,Lsoot/jimple/internal/JimpleLocal;,number)#4
soot.jimple.internal.JimpleLocal.<init>(Ljava/lang/String;Lsoot/Type;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.jimple.internal.JimpleLocal.<init>(Ljava/lang/String;Lsoot/Type;)V#LocalLoad(Ljava/lang/Object;,1)#6
soot.jimple.internal.JimpleLocal.<init>(Ljava/lang/String;Lsoot/Type;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/jimple/internal/JimpleLocal;,name)#7
soot.jimple.internal.JimpleLocal.<init>(Ljava/lang/String;Lsoot/Type;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.jimple.internal.JimpleLocal.<init>(Ljava/lang/String;Lsoot/Type;)V#LocalLoad(Ljava/lang/Object;,2)#9
soot.jimple.internal.JimpleLocal.<init>(Ljava/lang/String;Lsoot/Type;)V#Put(Lsoot/Type;,NONSTATIC,Lsoot/jimple/internal/JimpleLocal;,type)#10
soot.jimple.internal.JimpleLocal.<init>(Ljava/lang/String;Lsoot/Type;)V#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#11
soot.jimple.internal.JimpleLocal.<init>(Ljava/lang/String;Lsoot/Type;)V#Invoke(VIRTUAL,Lsoot/Scene;,getLocalNumberer,()Lsoot/util/ArrayNumberer;)#12
soot.Scene.getLocalNumberer()Lsoot/util/ArrayNumberer;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.getLocalNumberer()Lsoot/util/ArrayNumberer;#Get(Lsoot/util/ArrayNumberer;,NONSTATIC,Lsoot/Scene;,localNumberer)#1
soot.Scene.getLocalNumberer()Lsoot/util/ArrayNumberer;#Return(Ljava/lang/Object;)#2
soot.jimple.internal.JimpleLocal.<init>(Ljava/lang/String;Lsoot/Type;)V#LocalLoad(Ljava/lang/Object;,0)#13
soot.jimple.internal.JimpleLocal.<init>(Ljava/lang/String;Lsoot/Type;)V#Invoke(VIRTUAL,Lsoot/util/ArrayNumberer;,add,(Ljava/lang/Object;)V)#14
soot.jimple.internal.JimpleLocal.getNumber()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JimpleLocal.getNumber()I#Get(I,NONSTATIC,Lsoot/jimple/internal/JimpleLocal;,number)#1
soot.jimple.internal.JimpleLocal.getNumber()I#Return(I)#2
soot.jimple.internal.JimpleLocal.setNumber(I)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JimpleLocal.setNumber(I)V#LocalLoad(I,1)#1
soot.jimple.internal.JimpleLocal.setNumber(I)V#Put(I,NONSTATIC,Lsoot/jimple/internal/JimpleLocal;,number)#2
soot.jimple.internal.JimpleLocal.setNumber(I)V#Return(V)#3
soot.jimple.internal.JimpleLocal.<init>(Ljava/lang/String;Lsoot/Type;)V#Return(V)#15
soot.jimple.Jimple.newLocal(Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#Return(Ljava/lang/Object;)#6
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalStore(Ljava/lang/Object;,15)#103
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,4)#104
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(VIRTUAL,Lsoot/jimple/JimpleBody;,getLocals,()Lsoot/util/Chain;)#105
soot.Body.getLocals()Lsoot/util/Chain;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Body.getLocals()Lsoot/util/Chain;#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/Body;,localChain)#1
soot.Body.getLocals()Lsoot/util/Chain;#Return(Ljava/lang/Object;)#2
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,15)#106
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(INTERFACE,Lsoot/util/Chain;,add,(Ljava/lang/Object;)Z)#107
soot.jimple.internal.JimpleLocal.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JimpleLocal.hashCode()I#Get(Z,NONSTATIC,Lsoot/jimple/internal/JimpleLocal;,isHashCodeChosen)#1
soot.jimple.internal.JimpleLocal.hashCode()I#Constant(I,0)#2
soot.jimple.internal.JimpleLocal.hashCode()I#ConditionalBranch(I,ne,59)#3
soot.jimple.internal.JimpleLocal.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#4
soot.jimple.internal.JimpleLocal.hashCode()I#Get(Ljava/lang/String;,NONSTATIC,Lsoot/jimple/internal/JimpleLocal;,name)#5
soot.jimple.internal.JimpleLocal.hashCode()I#Constant(L;,null)#6
soot.jimple.internal.JimpleLocal.hashCode()I#ConditionalBranch(Ljava/lang/Object;,eq,10)#7
soot.jimple.internal.JimpleLocal.hashCode()I#Constant(I,1)#8
soot.jimple.internal.JimpleLocal.hashCode()I#Goto(11)#9
soot.jimple.internal.JimpleLocal.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#11
soot.jimple.internal.JimpleLocal.hashCode()I#Get(Lsoot/Type;,NONSTATIC,Lsoot/jimple/internal/JimpleLocal;,type)#12
soot.jimple.internal.JimpleLocal.hashCode()I#Constant(L;,null)#13
soot.jimple.internal.JimpleLocal.hashCode()I#ConditionalBranch(Ljava/lang/Object;,eq,17)#14
soot.jimple.internal.JimpleLocal.hashCode()I#Constant(I,1)#15
soot.jimple.internal.JimpleLocal.hashCode()I#Goto(18)#16
soot.jimple.internal.JimpleLocal.hashCode()I#BinaryOp(I,and)#18
soot.jimple.internal.JimpleLocal.hashCode()I#Constant(I,0)#19
soot.jimple.internal.JimpleLocal.hashCode()I#ConditionalBranch(I,eq,33)#20
soot.jimple.internal.JimpleLocal.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#21
soot.jimple.internal.JimpleLocal.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#22
soot.jimple.internal.JimpleLocal.hashCode()I#Get(Ljava/lang/String;,NONSTATIC,Lsoot/jimple/internal/JimpleLocal;,name)#23
soot.jimple.internal.JimpleLocal.hashCode()I#Invoke(VIRTUAL,Ljava/lang/String;,hashCode,()I)#24
soot.jimple.internal.JimpleLocal.hashCode()I#Constant(I,19)#25
soot.jimple.internal.JimpleLocal.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#26
soot.jimple.internal.JimpleLocal.hashCode()I#Get(Lsoot/Type;,NONSTATIC,Lsoot/jimple/internal/JimpleLocal;,type)#27
soot.jimple.internal.JimpleLocal.hashCode()I#Invoke(VIRTUAL,Ljava/lang/Object;,hashCode,()I)#28
soot.UnknownType.hashCode()I#Constant(I,1554928471)#0
soot.UnknownType.hashCode()I#Return(I)#1
soot.jimple.internal.JimpleLocal.hashCode()I#BinaryOp(I,mul)#29
soot.jimple.internal.JimpleLocal.hashCode()I#BinaryOp(I,add)#30
soot.jimple.internal.JimpleLocal.hashCode()I#Put(I,NONSTATIC,Lsoot/jimple/internal/JimpleLocal;,fixedHashCode)#31
soot.jimple.internal.JimpleLocal.hashCode()I#Goto(56)#32
soot.jimple.internal.JimpleLocal.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#56
soot.jimple.internal.JimpleLocal.hashCode()I#Constant(I,1)#57
soot.jimple.internal.JimpleLocal.hashCode()I#Put(Z,NONSTATIC,Lsoot/jimple/internal/JimpleLocal;,isHashCodeChosen)#58
soot.jimple.internal.JimpleLocal.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#59
soot.jimple.internal.JimpleLocal.hashCode()I#Get(I,NONSTATIC,Lsoot/jimple/internal/JimpleLocal;,fixedHashCode)#60
soot.jimple.internal.JimpleLocal.hashCode()I#Return(I)#61
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Pop(1)#108
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(I,13)#109
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Constant(I,1)#110
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#BinaryOp(I,add)#111
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalStore(I,13)#112
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,5)#113
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(STATIC,Lsoot/jimple/Jimple;,v,()Lsoot/jimple/Jimple;)#114
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,15)#115
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(STATIC,Lsoot/jimple/Jimple;,v,()Lsoot/jimple/Jimple;)#116
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,0)#117
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Get(Lsoot/SootMethod;,NONSTATIC,Lsoot/coffi/CFG;,jmethod)#118
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(VIRTUAL,Lsoot/SootMethod;,getDeclaringClass,()Lsoot/SootClass;)#119
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(VIRTUAL,Lsoot/SootClass;,getType,()Lsoot/RefType;)#120
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(VIRTUAL,Lsoot/jimple/Jimple;,newThisRef,(Lsoot/RefType;)Lsoot/jimple/ThisRef;)#121
soot.jimple.Jimple.newThisRef(Lsoot/RefType;)Lsoot/jimple/ThisRef;#New(Lsoot/jimple/ThisRef;,0)#0
soot.jimple.Jimple.newThisRef(Lsoot/RefType;)Lsoot/jimple/ThisRef;#Dup(1,0)#1
soot.jimple.Jimple.newThisRef(Lsoot/RefType;)Lsoot/jimple/ThisRef;#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.Jimple.newThisRef(Lsoot/RefType;)Lsoot/jimple/ThisRef;#Invoke(SPECIAL,Lsoot/jimple/ThisRef;,<init>,(Lsoot/RefType;)V)#3
soot.jimple.ThisRef.<init>(Lsoot/RefType;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.ThisRef.<init>(Lsoot/RefType;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.jimple.ThisRef.<init>(Lsoot/RefType;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.ThisRef.<init>(Lsoot/RefType;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.jimple.ThisRef.<init>(Lsoot/RefType;)V#Put(Lsoot/RefType;,NONSTATIC,Lsoot/jimple/ThisRef;,thisType)#4
soot.jimple.ThisRef.<init>(Lsoot/RefType;)V#Return(V)#5
soot.jimple.Jimple.newThisRef(Lsoot/RefType;)Lsoot/jimple/ThisRef;#Return(Ljava/lang/Object;)#4
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(VIRTUAL,Lsoot/jimple/Jimple;,newIdentityStmt,(Lsoot/Value;Lsoot/Value;)Lsoot/jimple/IdentityStmt;)#122
soot.jimple.Jimple.newIdentityStmt(Lsoot/Value;Lsoot/Value;)Lsoot/jimple/IdentityStmt;#New(Lsoot/jimple/internal/JIdentityStmt;,0)#0
soot.AbstractUnit.<clinit>()V#Get(Ljava/util/List;,STATIC,Ljava/util/Collections;,EMPTY_LIST)#0
soot.AbstractUnit.<clinit>()V#Put(Ljava/util/List;,STATIC,Lsoot/AbstractUnit;,emptyList)#1
soot.AbstractUnit.<clinit>()V#Return(V)#2
soot.jimple.Jimple.newIdentityStmt(Lsoot/Value;Lsoot/Value;)Lsoot/jimple/IdentityStmt;#Dup(1,0)#1
soot.jimple.Jimple.newIdentityStmt(Lsoot/Value;Lsoot/Value;)Lsoot/jimple/IdentityStmt;#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.Jimple.newIdentityStmt(Lsoot/Value;Lsoot/Value;)Lsoot/jimple/IdentityStmt;#LocalLoad(Ljava/lang/Object;,2)#3
soot.jimple.Jimple.newIdentityStmt(Lsoot/Value;Lsoot/Value;)Lsoot/jimple/IdentityStmt;#Invoke(SPECIAL,Lsoot/jimple/internal/JIdentityStmt;,<init>,(Lsoot/Value;Lsoot/Value;)V)#4
soot.jimple.internal.JIdentityStmt.<init>(Lsoot/Value;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JIdentityStmt.<init>(Lsoot/Value;Lsoot/Value;)V#Invoke(STATIC,Lsoot/jimple/Jimple;,v,()Lsoot/jimple/Jimple;)#1
soot.jimple.internal.JIdentityStmt.<init>(Lsoot/Value;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.internal.JIdentityStmt.<init>(Lsoot/Value;Lsoot/Value;)V#Invoke(VIRTUAL,Lsoot/jimple/Jimple;,newLocalBox,(Lsoot/Value;)Lsoot/ValueBox;)#3
soot.jimple.Jimple.newLocalBox(Lsoot/Value;)Lsoot/ValueBox;#New(Lsoot/jimple/internal/JimpleLocalBox;,0)#0
soot.jimple.Jimple.newLocalBox(Lsoot/Value;)Lsoot/ValueBox;#Dup(1,0)#1
soot.jimple.Jimple.newLocalBox(Lsoot/Value;)Lsoot/ValueBox;#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.Jimple.newLocalBox(Lsoot/Value;)Lsoot/ValueBox;#Invoke(SPECIAL,Lsoot/jimple/internal/JimpleLocalBox;,<init>,(Lsoot/Value;)V)#3
soot.jimple.internal.JimpleLocalBox.<init>(Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JimpleLocalBox.<init>(Lsoot/Value;)V#Invoke(SPECIAL,Lsoot/AbstractValueBox;,<init>,()V)#1
soot.AbstractValueBox.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.AbstractValueBox.<init>()V#Invoke(SPECIAL,Lsoot/tagkit/AbstractHost;,<init>,()V)#1
soot.AbstractValueBox.<init>()V#Return(V)#2
soot.jimple.internal.JimpleLocalBox.<init>(Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.internal.JimpleLocalBox.<init>(Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.jimple.internal.JimpleLocalBox.<init>(Lsoot/Value;)V#Invoke(VIRTUAL,Lsoot/jimple/internal/JimpleLocalBox;,setValue,(Lsoot/Value;)V)#4
soot.AbstractValueBox.setValue(Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.AbstractValueBox.setValue(Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.AbstractValueBox.setValue(Lsoot/Value;)V#Invoke(VIRTUAL,Lsoot/AbstractValueBox;,canContainValue,(Lsoot/Value;)Z)#2
soot.jimple.internal.JimpleLocalBox.canContainValue(Lsoot/Value;)Z#LocalLoad(Ljava/lang/Object;,1)#0
soot.jimple.internal.JimpleLocalBox.canContainValue(Lsoot/Value;)Z#Instanceof(Lsoot/jimple/internal/JimpleLocal;)#1
soot.jimple.internal.JimpleLocalBox.canContainValue(Lsoot/Value;)Z#Return(I)#2
soot.AbstractValueBox.setValue(Lsoot/Value;)V#Constant(I,0)#3
soot.AbstractValueBox.setValue(Lsoot/Value;)V#ConditionalBranch(I,eq,9)#4
soot.AbstractValueBox.setValue(Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.AbstractValueBox.setValue(Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,1)#6
soot.AbstractValueBox.setValue(Lsoot/Value;)V#Put(Lsoot/Value;,NONSTATIC,Lsoot/AbstractValueBox;,value)#7
soot.AbstractValueBox.setValue(Lsoot/Value;)V#Goto(31)#8
soot.AbstractValueBox.setValue(Lsoot/Value;)V#Return(V)#31
soot.jimple.internal.JimpleLocalBox.<init>(Lsoot/Value;)V#Return(V)#5
soot.jimple.Jimple.newLocalBox(Lsoot/Value;)Lsoot/ValueBox;#Return(Ljava/lang/Object;)#4
soot.jimple.internal.JIdentityStmt.<init>(Lsoot/Value;Lsoot/Value;)V#Invoke(STATIC,Lsoot/jimple/Jimple;,v,()Lsoot/jimple/Jimple;)#4
soot.jimple.internal.JIdentityStmt.<init>(Lsoot/Value;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,2)#5
soot.jimple.internal.JIdentityStmt.<init>(Lsoot/Value;Lsoot/Value;)V#Invoke(VIRTUAL,Lsoot/jimple/Jimple;,newIdentityRefBox,(Lsoot/Value;)Lsoot/ValueBox;)#6
soot.jimple.Jimple.newIdentityRefBox(Lsoot/Value;)Lsoot/ValueBox;#New(Lsoot/jimple/internal/IdentityRefBox;,0)#0
soot.jimple.Jimple.newIdentityRefBox(Lsoot/Value;)Lsoot/ValueBox;#Dup(1,0)#1
soot.jimple.Jimple.newIdentityRefBox(Lsoot/Value;)Lsoot/ValueBox;#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.Jimple.newIdentityRefBox(Lsoot/Value;)Lsoot/ValueBox;#Invoke(SPECIAL,Lsoot/jimple/internal/IdentityRefBox;,<init>,(Lsoot/Value;)V)#3
soot.jimple.internal.IdentityRefBox.<init>(Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.IdentityRefBox.<init>(Lsoot/Value;)V#Invoke(SPECIAL,Lsoot/AbstractValueBox;,<init>,()V)#1
soot.jimple.internal.IdentityRefBox.<init>(Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.internal.IdentityRefBox.<init>(Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.jimple.internal.IdentityRefBox.<init>(Lsoot/Value;)V#Invoke(VIRTUAL,Lsoot/jimple/internal/IdentityRefBox;,setValue,(Lsoot/Value;)V)#4
soot.jimple.internal.IdentityRefBox.canContainValue(Lsoot/Value;)Z#LocalLoad(Ljava/lang/Object;,1)#0
soot.jimple.internal.IdentityRefBox.canContainValue(Lsoot/Value;)Z#Instanceof(Lsoot/jimple/IdentityRef;)#1
soot.jimple.internal.IdentityRefBox.canContainValue(Lsoot/Value;)Z#Return(I)#2
soot.jimple.internal.IdentityRefBox.<init>(Lsoot/Value;)V#Return(V)#5
soot.jimple.Jimple.newIdentityRefBox(Lsoot/Value;)Lsoot/ValueBox;#Return(Ljava/lang/Object;)#4
soot.jimple.internal.JIdentityStmt.<init>(Lsoot/Value;Lsoot/Value;)V#Invoke(SPECIAL,Lsoot/jimple/internal/JIdentityStmt;,<init>,(Lsoot/ValueBox;Lsoot/ValueBox;)V)#7
soot.jimple.internal.JIdentityStmt.<init>(Lsoot/ValueBox;Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JIdentityStmt.<init>(Lsoot/ValueBox;Lsoot/ValueBox;)V#Invoke(SPECIAL,Lsoot/jimple/internal/AbstractDefinitionStmt;,<init>,()V)#1
soot.jimple.internal.AbstractDefinitionStmt.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.AbstractDefinitionStmt.<init>()V#Invoke(SPECIAL,Lsoot/jimple/internal/AbstractStmt;,<init>,()V)#1
soot.jimple.internal.AbstractStmt.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.AbstractStmt.<init>()V#Invoke(SPECIAL,Lsoot/AbstractUnit;,<init>,()V)#1
soot.AbstractUnit.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.AbstractUnit.<init>()V#Invoke(SPECIAL,Lsoot/tagkit/AbstractHost;,<init>,()V)#1
soot.AbstractUnit.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
soot.AbstractUnit.<init>()V#Constant(L;,null)#3
soot.AbstractUnit.<init>()V#Put(Ljava/util/List;,NONSTATIC,Lsoot/AbstractUnit;,boxesPointingToThis)#4
soot.AbstractUnit.<init>()V#LocalLoad(Ljava/lang/Object;,0)#5
soot.AbstractUnit.<init>()V#Constant(L;,null)#6
soot.AbstractUnit.<init>()V#Put(Ljava/util/List;,NONSTATIC,Lsoot/AbstractUnit;,valueBoxes)#7
soot.AbstractUnit.<init>()V#Return(V)#8
soot.jimple.internal.AbstractStmt.<init>()V#Return(V)#2
soot.jimple.internal.AbstractDefinitionStmt.<init>()V#Return(V)#2
soot.jimple.internal.JIdentityStmt.<init>(Lsoot/ValueBox;Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.internal.JIdentityStmt.<init>(Lsoot/ValueBox;Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.jimple.internal.JIdentityStmt.<init>(Lsoot/ValueBox;Lsoot/ValueBox;)V#Put(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/JIdentityStmt;,leftBox)#4
soot.jimple.internal.JIdentityStmt.<init>(Lsoot/ValueBox;Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.jimple.internal.JIdentityStmt.<init>(Lsoot/ValueBox;Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,2)#6
soot.jimple.internal.JIdentityStmt.<init>(Lsoot/ValueBox;Lsoot/ValueBox;)V#Put(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/JIdentityStmt;,rightBox)#7
soot.jimple.internal.JIdentityStmt.<init>(Lsoot/ValueBox;Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.jimple.internal.JIdentityStmt.<init>(Lsoot/ValueBox;Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,0)#9
soot.jimple.internal.JIdentityStmt.<init>(Lsoot/ValueBox;Lsoot/ValueBox;)V#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/JIdentityStmt;,leftBox)#10
soot.jimple.internal.JIdentityStmt.<init>(Lsoot/ValueBox;Lsoot/ValueBox;)V#Invoke(STATIC,Ljava/util/Collections;,singletonList,(Ljava/lang/Object;)Ljava/util/List;)#11
soot.jimple.internal.JIdentityStmt.<init>(Lsoot/ValueBox;Lsoot/ValueBox;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/jimple/internal/JIdentityStmt;,defBoxes)#12
soot.jimple.internal.JIdentityStmt.<init>(Lsoot/ValueBox;Lsoot/ValueBox;)V#Return(V)#13
soot.jimple.internal.JIdentityStmt.<init>(Lsoot/Value;Lsoot/Value;)V#Return(V)#8
soot.jimple.Jimple.newIdentityStmt(Lsoot/Value;Lsoot/Value;)Lsoot/jimple/IdentityStmt;#Return(Ljava/lang/Object;)#5
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(INTERFACE,Lsoot/util/Chain;,add,(Ljava/lang/Object;)Z)#123
soot.PatchingChain.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.PatchingChain.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#1
soot.PatchingChain.add(Ljava/lang/Object;)Z#CheckCast(Lsoot/Unit;)#2
soot.PatchingChain.add(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Lsoot/PatchingChain;,add,(Lsoot/Unit;)Z)#3
soot.PatchingChain.add(Lsoot/Unit;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.PatchingChain.add(Lsoot/Unit;)Z#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/PatchingChain;,innerChain)#1
soot.PatchingChain.add(Lsoot/Unit;)Z#LocalLoad(Ljava/lang/Object;,1)#2
soot.PatchingChain.add(Lsoot/Unit;)Z#Invoke(INTERFACE,Lsoot/util/Chain;,add,(Ljava/lang/Object;)Z)#3
soot.PatchingChain.add(Lsoot/Unit;)Z#Return(I)#4
soot.PatchingChain.add(Ljava/lang/Object;)Z#Return(I)#4
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Pop(1)#124
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,7)#125
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#126
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalStore(Ljava/lang/Object;,14)#127
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Constant(I,0)#128
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalStore(I,15)#129
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Goto(216)#130
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,14)#216
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#217
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Constant(I,0)#218
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#ConditionalBranch(I,ne,131)#219
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(STATIC,Lsoot/coffi/Util;,v,()Lsoot/coffi/Util;)#220
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(VIRTUAL,Lsoot/coffi/Util;,resetEasyNames,()V)#221
soot.coffi.Util.resetEasyNames()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Util.resetEasyNames()V#Constant(I,0)#1
soot.coffi.Util.resetEasyNames()V#Put(I,NONSTATIC,Lsoot/coffi/Util;,nextEasyNameIndex)#2
soot.coffi.Util.resetEasyNames()V#Return(V)#3
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,0)#222
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,1)#223
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(I,2)#224
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(VIRTUAL,Lsoot/coffi/CFG;,jimplify,([Lsoot/coffi/cp_info;I)V)#225
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Get(Lsoot/coffi/method_info;,NONSTATIC,Lsoot/coffi/CFG;,method)#1
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(VIRTUAL,Lsoot/coffi/method_info;,locate_code_attribute,()Lsoot/coffi/Code_attribute;)#2
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,3)#3
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#New(Lsoot/util/ArraySet;,0)#4
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Dup(1,0)#5
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(SPECIAL,Lsoot/util/ArraySet;,<init>,()V)#6
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,4)#7
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#New(Ljava/util/HashMap;,0)#8
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Dup(1,0)#9
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#10
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,5)#11
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,0)#12
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(SPECIAL,Lsoot/coffi/CFG;,buildInsnCFGfromBBCFG,()V)#13
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#Get(Lsoot/coffi/BasicBlock;,NONSTATIC,Lsoot/coffi/CFG;,cfg)#1
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#LocalStore(Ljava/lang/Object;,1)#2
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#Goto(59)#3
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#LocalLoad(Ljava/lang/Object;,1)#59
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#Constant(L;,null)#60
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#ConditionalBranch(Ljava/lang/Object;,ne,4)#61
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#LocalLoad(Ljava/lang/Object;,1)#4
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/BasicBlock;,head)#5
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#LocalStore(Ljava/lang/Object;,2)#6
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#Goto(22)#7
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#LocalLoad(Ljava/lang/Object;,2)#22
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#LocalLoad(Ljava/lang/Object;,1)#23
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/BasicBlock;,tail)#24
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#ConditionalBranch(Ljava/lang/Object;,ne,8)#25
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#Constant(I,1)#8
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#New([Lsoot/coffi/Instruction;,1)#9
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#LocalStore(Ljava/lang/Object;,3)#10
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#LocalLoad(Ljava/lang/Object;,3)#11
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#Constant(I,0)#12
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#LocalLoad(Ljava/lang/Object;,2)#13
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/Instruction;,next)#14
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#ArrayStore(Ljava/lang/Object;)#15
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#LocalLoad(Ljava/lang/Object;,2)#16
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#LocalLoad(Ljava/lang/Object;,3)#17
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#Put([Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/Instruction;,succs)#18
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#LocalLoad(Ljava/lang/Object;,2)#19
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/Instruction;,next)#20
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#LocalStore(Ljava/lang/Object;,2)#21
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#LocalLoad(Ljava/lang/Object;,1)#26
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#Get(Ljava/util/Vector;,NONSTATIC,Lsoot/coffi/BasicBlock;,succ)#27
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#LocalStore(Ljava/lang/Object;,3)#28
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#LocalLoad(Ljava/lang/Object;,3)#29
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#Invoke(VIRTUAL,Ljava/util/Vector;,size,()I)#30
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#LocalStore(I,4)#31
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#LocalLoad(I,4)#32
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#New([Lsoot/coffi/Instruction;,1)#33
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#LocalStore(Ljava/lang/Object;,5)#34
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#Constant(I,0)#35
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#LocalStore(I,6)#36
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#Goto(50)#37
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#LocalLoad(I,6)#50
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#LocalLoad(I,4)#51
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#ConditionalBranch(I,lt,38)#52
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#LocalLoad(Ljava/lang/Object;,2)#53
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#LocalLoad(Ljava/lang/Object;,5)#54
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#Put([Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/Instruction;,succs)#55
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#LocalLoad(Ljava/lang/Object;,1)#56
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#Get(Lsoot/coffi/BasicBlock;,NONSTATIC,Lsoot/coffi/BasicBlock;,next)#57
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#LocalStore(Ljava/lang/Object;,1)#58
soot.coffi.CFG.buildInsnCFGfromBBCFG()V#Return(V)#62
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(I,0)#14
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(I,8)#15
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Goto(128)#16
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(I,8)#128
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,3)#129
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Get(I,NONSTATIC,Lsoot/coffi/Code_attribute;,exception_table_length)#130
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ConditionalBranch(I,lt,17)#131
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#New(Ljava/util/HashSet;,0)#132
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Dup(1,0)#133
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#134
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,8)#135
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#New(Ljava/util/LinkedList;,0)#136
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Dup(1,0)#137
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#138
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,9)#139
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,8)#140
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,0)#141
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/CFG;,firstInstruction)#142
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#143
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Pop(1)#144
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,9)#145
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,0)#146
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/CFG;,firstInstruction)#147
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,addLast,(Ljava/lang/Object;)V)#148
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Goto(188)#149
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,9)#188
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,isEmpty,()Z)#189
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(I,0)#190
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ConditionalBranch(I,eq,150)#191
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,9)#150
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,removeFirst,()Ljava/lang/Object;)#151
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#CheckCast(Lsoot/coffi/Instruction;)#152
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,10)#153
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,10)#154
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Get([Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/Instruction;,succs)#155
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,11)#156
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,11)#157
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Dup(1,0)#158
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,15)#159
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ArrayLength()#160
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(I,14)#161
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(I,0)#162
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(I,13)#163
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Goto(185)#164
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(I,13)#185
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(I,14)#186
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ConditionalBranch(I,lt,165)#187
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,15)#165
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(I,13)#166
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ArrayLoad(Ljava/lang/Object;)#167
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,12)#168
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,8)#169
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,12)#170
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/Set;,contains,(Ljava/lang/Object;)Z)#171
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(I,0)#172
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ConditionalBranch(I,ne,181)#173
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,8)#174
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,12)#175
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#176
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Pop(1)#177
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,9)#178
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,12)#179
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,addLast,(Ljava/lang/Object;)V)#180
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(I,13)#181
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(I,1)#182
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#BinaryOp(I,add)#183
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(I,13)#184
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#New(Ljava/util/HashMap;,0)#192
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Dup(1,0)#193
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#194
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,6)#195
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#New(Ljava/util/HashMap;,0)#196
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Dup(1,0)#197
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#198
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,7)#199
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#New(Ljava/util/HashSet;,0)#200
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Dup(1,0)#201
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#202
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,9)#203
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#New(Ljava/util/ArrayList;,0)#204
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Dup(1,0)#205
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#206
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,10)#207
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(STATIC,Lsoot/coffi/TypeStack;,v,()Lsoot/coffi/TypeStack;)#208
soot.coffi.TypeStack.v()Lsoot/coffi/TypeStack;#New(Lsoot/coffi/TypeStack;,0)#0
soot.coffi.TypeStack.v()Lsoot/coffi/TypeStack;#Dup(1,0)#1
soot.coffi.TypeStack.v()Lsoot/coffi/TypeStack;#Invoke(SPECIAL,Lsoot/coffi/TypeStack;,<init>,()V)#2
soot.coffi.TypeStack.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.TypeStack.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.coffi.TypeStack.<init>()V#Return(V)#2
soot.coffi.TypeStack.v()Lsoot/coffi/TypeStack;#LocalStore(Ljava/lang/Object;,0)#3
soot.coffi.TypeStack.v()Lsoot/coffi/TypeStack;#LocalLoad(Ljava/lang/Object;,0)#4
soot.coffi.TypeStack.v()Lsoot/coffi/TypeStack;#Constant(I,0)#5
soot.coffi.TypeStack.v()Lsoot/coffi/TypeStack;#New([Lsoot/Type;,1)#6
soot.coffi.TypeStack.v()Lsoot/coffi/TypeStack;#Put([Lsoot/Type;,NONSTATIC,Lsoot/coffi/TypeStack;,types)#7
soot.coffi.TypeStack.v()Lsoot/coffi/TypeStack;#LocalLoad(Ljava/lang/Object;,0)#8
soot.coffi.TypeStack.v()Lsoot/coffi/TypeStack;#Return(Ljava/lang/Object;)#9
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,11)#209
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,6)#210
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,0)#211
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/CFG;,firstInstruction)#212
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,11)#213
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#214
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Pop(1)#215
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,9)#216
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,0)#217
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/CFG;,firstInstruction)#218
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#219
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Pop(1)#220
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,10)#221
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,0)#222
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/CFG;,firstInstruction)#223
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#224
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Pop(1)#225
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Goto(368)#226
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,10)#368
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/List;,isEmpty,()Z)#369
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(I,0)#370
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ConditionalBranch(I,eq,227)#371
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,10)#227
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(I,0)#228
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#229
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#CheckCast(Lsoot/coffi/Instruction;)#230
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,12)#231
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,10)#232
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(I,0)#233
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/List;,remove,(I)Ljava/lang/Object;)#234
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Pop(1)#235
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,0)#236
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,12)#237
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,6)#238
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,12)#239
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#240
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#CheckCast(Lsoot/coffi/TypeStack;)#241
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,1)#242
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(VIRTUAL,Lsoot/coffi/CFG;,processFlow,(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;)#243
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,1)#0
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Get(B,NONSTATIC,Lsoot/coffi/Instruction;,code)#1
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Constant(I,255)#2
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#BinaryOp(I,and)#3
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalStore(I,4)#4
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(I,4)#5
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Switch(1916,0,565,1,37,2,43,3,43,4,43,5,43,6,43,7,43,8,43,9,48,10,48,11,57,12,57,13,57,14,62,15,62,16,7,17,12,18,17,19,27,20,27,21,71,22,96,23,76,24,87,25,81,26,105,27,105,28,105,29,105,30,121,31,121,32,121,33,121,34,110,35,110,36,110,37,110,38,130,39,130,40,130,41,130,42,115,43,115,44,115,45,115,46,368,47,445,48,382,49,463,50,396,51,368,52,368,53,368,54,139,55,155,56,145,57,166,58,151,59,177,60,177,61,177,62,177,63,220,64,220,65,220,66,220,67,183,68,183,69,183,70,183,71,231,72,231,73,231,74,231,75,189,76,189,77,189,78,189,79,481,80,525,81,510,82,545,83,496,84,481,85,481,86,481,87,566,88,570,89,577,90,602,91,627,92,583,93,662,94,699,95,746,96,767,97,806,98,835,99,850,100,767,101,806,102,835,103,850,104,767,105,806,106,835,107,850,108,767,109,806,110,835,111,850,112,767,113,806,114,835,115,850,116,879,117,879,118,879,119,879,120,767,121,782,122,767,123,782,124,767,125,782,126,767,127,806,128,767,129,806,130,767,131,806,132,242,133,880,134,894,135,904,136,918,137,933,138,948,139,967,140,977,141,991,142,1005,143,1020,144,1039,145,1054,146,1055,147,1056,148,1079,149,1104,150,1104,151,1119,152,1119,153,1057,154,1057,155,1057,156,1057,157,1057,158,1057,159,1068,160,1068,161,1068,162,1068,163,1068,164,1068,165,1144,166,1144,167,1153,168,1154,169,1159,170,1202,171,1208,172,1162,173,1190,174,1168,175,1179,176,1174,177,1161,178,1382,179,1324,180,1276,181,1214,182,1513,183,1598,184,1683,185,1764,186,1426,187,1850,188,248,189,266,190,359,191,1849,192,1863,193,1897,194,1906,195,1911,196,243,197,316,198,1063,199,1063,200,1153,201,1154,202,1201,203,1916,204,1916,205,1916,206,1916,207,1916,208,1916,209,1160)#6
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,2)#115
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Constant(Ljava/lang/String;,"java.lang.Object")#116
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(STATIC,Lsoot/RefType;,v,(Ljava/lang/String;)Lsoot/RefType;)#117
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,push,(Lsoot/Type;)Lsoot/coffi/TypeStack;)#118
soot.coffi.TypeStack.push(Lsoot/Type;)Lsoot/coffi/TypeStack;#New(Lsoot/coffi/TypeStack;,0)#0
soot.coffi.TypeStack.push(Lsoot/Type;)Lsoot/coffi/TypeStack;#Dup(1,0)#1
soot.coffi.TypeStack.push(Lsoot/Type;)Lsoot/coffi/TypeStack;#Invoke(SPECIAL,Lsoot/coffi/TypeStack;,<init>,()V)#2
soot.coffi.TypeStack.push(Lsoot/Type;)Lsoot/coffi/TypeStack;#LocalStore(Ljava/lang/Object;,2)#3
soot.coffi.TypeStack.push(Lsoot/Type;)Lsoot/coffi/TypeStack;#LocalLoad(Ljava/lang/Object;,2)#4
soot.coffi.TypeStack.push(Lsoot/Type;)Lsoot/coffi/TypeStack;#LocalLoad(Ljava/lang/Object;,0)#5
soot.coffi.TypeStack.push(Lsoot/Type;)Lsoot/coffi/TypeStack;#Get([Lsoot/Type;,NONSTATIC,Lsoot/coffi/TypeStack;,types)#6
soot.coffi.TypeStack.push(Lsoot/Type;)Lsoot/coffi/TypeStack;#ArrayLength()#7
soot.coffi.TypeStack.push(Lsoot/Type;)Lsoot/coffi/TypeStack;#Constant(I,1)#8
soot.coffi.TypeStack.push(Lsoot/Type;)Lsoot/coffi/TypeStack;#BinaryOp(I,add)#9
soot.coffi.TypeStack.push(Lsoot/Type;)Lsoot/coffi/TypeStack;#New([Lsoot/Type;,1)#10
soot.coffi.TypeStack.push(Lsoot/Type;)Lsoot/coffi/TypeStack;#Put([Lsoot/Type;,NONSTATIC,Lsoot/coffi/TypeStack;,types)#11
soot.coffi.TypeStack.push(Lsoot/Type;)Lsoot/coffi/TypeStack;#LocalLoad(Ljava/lang/Object;,0)#12
soot.coffi.TypeStack.push(Lsoot/Type;)Lsoot/coffi/TypeStack;#Get([Lsoot/Type;,NONSTATIC,Lsoot/coffi/TypeStack;,types)#13
soot.coffi.TypeStack.push(Lsoot/Type;)Lsoot/coffi/TypeStack;#Constant(I,0)#14
soot.coffi.TypeStack.push(Lsoot/Type;)Lsoot/coffi/TypeStack;#LocalLoad(Ljava/lang/Object;,2)#15
soot.coffi.TypeStack.push(Lsoot/Type;)Lsoot/coffi/TypeStack;#Get([Lsoot/Type;,NONSTATIC,Lsoot/coffi/TypeStack;,types)#16
soot.coffi.TypeStack.push(Lsoot/Type;)Lsoot/coffi/TypeStack;#Constant(I,0)#17
soot.coffi.TypeStack.push(Lsoot/Type;)Lsoot/coffi/TypeStack;#LocalLoad(Ljava/lang/Object;,0)#18
soot.coffi.TypeStack.push(Lsoot/Type;)Lsoot/coffi/TypeStack;#Get([Lsoot/Type;,NONSTATIC,Lsoot/coffi/TypeStack;,types)#19
soot.coffi.TypeStack.push(Lsoot/Type;)Lsoot/coffi/TypeStack;#ArrayLength()#20
soot.coffi.TypeStack.push(Lsoot/Type;)Lsoot/coffi/TypeStack;#Invoke(STATIC,Ljava/lang/System;,arraycopy,(Ljava/lang/Object;ILjava/lang/Object;II)V)#21
soot.coffi.TypeStack.push(Lsoot/Type;)Lsoot/coffi/TypeStack;#LocalLoad(Ljava/lang/Object;,2)#22
soot.coffi.TypeStack.push(Lsoot/Type;)Lsoot/coffi/TypeStack;#Get([Lsoot/Type;,NONSTATIC,Lsoot/coffi/TypeStack;,types)#23
soot.coffi.TypeStack.push(Lsoot/Type;)Lsoot/coffi/TypeStack;#LocalLoad(Ljava/lang/Object;,0)#24
soot.coffi.TypeStack.push(Lsoot/Type;)Lsoot/coffi/TypeStack;#Get([Lsoot/Type;,NONSTATIC,Lsoot/coffi/TypeStack;,types)#25
soot.coffi.TypeStack.push(Lsoot/Type;)Lsoot/coffi/TypeStack;#ArrayLength()#26
soot.coffi.TypeStack.push(Lsoot/Type;)Lsoot/coffi/TypeStack;#LocalLoad(Ljava/lang/Object;,1)#27
soot.coffi.TypeStack.push(Lsoot/Type;)Lsoot/coffi/TypeStack;#ArrayStore(Ljava/lang/Object;)#28
soot.coffi.TypeStack.push(Lsoot/Type;)Lsoot/coffi/TypeStack;#LocalLoad(Ljava/lang/Object;,2)#29
soot.coffi.TypeStack.push(Lsoot/Type;)Lsoot/coffi/TypeStack;#Return(Ljava/lang/Object;)#30
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalStore(Ljava/lang/Object;,2)#119
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Goto(1927)#120
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#New(Lsoot/coffi/OutFlow;,0)#1927
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Dup(1,0)#1928
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,2)#1929
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(SPECIAL,Lsoot/coffi/OutFlow;,<init>,(Lsoot/coffi/TypeStack;)V)#1930
soot.coffi.OutFlow.<init>(Lsoot/coffi/TypeStack;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.OutFlow.<init>(Lsoot/coffi/TypeStack;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.coffi.OutFlow.<init>(Lsoot/coffi/TypeStack;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.coffi.OutFlow.<init>(Lsoot/coffi/TypeStack;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.coffi.OutFlow.<init>(Lsoot/coffi/TypeStack;)V#Put(Lsoot/coffi/TypeStack;,NONSTATIC,Lsoot/coffi/OutFlow;,typeStack)#4
soot.coffi.OutFlow.<init>(Lsoot/coffi/TypeStack;)V#Return(V)#5
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Return(Ljava/lang/Object;)#1931
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,13)#244
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,7)#245
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,12)#246
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,13)#247
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Get(Lsoot/coffi/TypeStack;,NONSTATIC,Lsoot/coffi/OutFlow;,typeStack)#248
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#249
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Pop(1)#250
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,12)#251
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Get([Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/Instruction;,succs)#252
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,14)#253
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,14)#254
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Dup(1,0)#255
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,18)#256
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ArrayLength()#257
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(I,17)#258
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(I,0)#259
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(I,16)#260
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Goto(365)#261
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(I,16)#365
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(I,17)#366
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ConditionalBranch(I,lt,262)#367
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,18)#262
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(I,16)#263
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ArrayLoad(Ljava/lang/Object;)#264
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,15)#265
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,9)#266
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,15)#267
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/Set;,contains,(Ljava/lang/Object;)Z)#268
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(I,0)#269
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ConditionalBranch(I,ne,306)#270
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,4)#271
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,15)#272
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/Set;,contains,(Ljava/lang/Object;)Z)#273
soot.util.ArraySet.contains(Ljava/lang/Object;)Z#Constant(I,0)#0
soot.util.ArraySet.contains(Ljava/lang/Object;)Z#LocalStore(I,2)#1
soot.util.ArraySet.contains(Ljava/lang/Object;)Z#Goto(17)#2
soot.util.ArraySet.contains(Ljava/lang/Object;)Z#LocalLoad(I,2)#17
soot.util.ArraySet.contains(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#18
soot.util.ArraySet.contains(Ljava/lang/Object;)Z#Get(I,NONSTATIC,Lsoot/util/ArraySet;,numElements)#19
soot.util.ArraySet.contains(Ljava/lang/Object;)Z#ConditionalBranch(I,lt,3)#20
soot.util.ArraySet.contains(Ljava/lang/Object;)Z#Constant(I,0)#21
soot.util.ArraySet.contains(Ljava/lang/Object;)Z#Return(I)#22
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(I,0)#274
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ConditionalBranch(I,eq,291)#275
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,6)#291
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,15)#292
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,13)#293
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Get(Lsoot/coffi/TypeStack;,NONSTATIC,Lsoot/coffi/OutFlow;,typeStack)#294
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#295
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Pop(1)#296
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,9)#297
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,15)#298
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#299
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Pop(1)#300
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,10)#301
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,15)#302
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#303
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Pop(1)#304
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Goto(361)#305
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(I,16)#361
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(I,1)#362
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#BinaryOp(I,add)#363
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(I,16)#364
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,1)#1598
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#CheckCast(Lsoot/coffi/Instruction_Invokenonvirtual;)#1599
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalStore(Ljava/lang/Object;,5)#1600
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,3)#1601
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,5)#1602
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Get(I,NONSTATIC,Lsoot/coffi/Instruction_Invokenonvirtual;,arg_i)#1603
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(STATIC,Lsoot/coffi/cp_info;,countParams,([Lsoot/coffi/cp_info;I)I)#1604
soot.coffi.cp_info.countParams([Lsoot/coffi/cp_info;I)I#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.cp_info.countParams([Lsoot/coffi/cp_info;I)I#LocalLoad(I,1)#1
soot.coffi.cp_info.countParams([Lsoot/coffi/cp_info;I)I#Invoke(STATIC,Lsoot/coffi/cp_info;,getTypeDescr,([Lsoot/coffi/cp_info;I)Ljava/lang/String;)#2
soot.coffi.cp_info.countParams([Lsoot/coffi/cp_info;I)I#LocalStore(Ljava/lang/Object;,3)#3
soot.coffi.cp_info.countParams([Lsoot/coffi/cp_info;I)I#LocalLoad(Ljava/lang/Object;,3)#4
soot.coffi.cp_info.countParams([Lsoot/coffi/cp_info;I)I#Invoke(STATIC,Lsoot/coffi/ClassFile;,parseMethodDesc_params,(Ljava/lang/String;)Ljava/lang/String;)#5
soot.coffi.ClassFile.parseMethodDesc_params(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.ClassFile.parseMethodDesc_params(Ljava/lang/String;)Ljava/lang/String;#Constant(I,40)#1
soot.coffi.ClassFile.parseMethodDesc_params(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,indexOf,(I)I)#2
soot.coffi.ClassFile.parseMethodDesc_params(Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,1)#3
soot.coffi.ClassFile.parseMethodDesc_params(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,1)#4
soot.coffi.ClassFile.parseMethodDesc_params(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#5
soot.coffi.ClassFile.parseMethodDesc_params(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,lt,26)#6
soot.coffi.ClassFile.parseMethodDesc_params(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#7
soot.coffi.ClassFile.parseMethodDesc_params(Ljava/lang/String;)Ljava/lang/String;#Constant(I,41)#8
soot.coffi.ClassFile.parseMethodDesc_params(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,1)#9
soot.coffi.ClassFile.parseMethodDesc_params(Ljava/lang/String;)Ljava/lang/String;#Constant(I,1)#10
soot.coffi.ClassFile.parseMethodDesc_params(Ljava/lang/String;)Ljava/lang/String;#BinaryOp(I,add)#11
soot.coffi.ClassFile.parseMethodDesc_params(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,indexOf,(II)I)#12
soot.coffi.ClassFile.parseMethodDesc_params(Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,2)#13
soot.coffi.ClassFile.parseMethodDesc_params(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,2)#14
soot.coffi.ClassFile.parseMethodDesc_params(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#15
soot.coffi.ClassFile.parseMethodDesc_params(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,lt,26)#16
soot.coffi.ClassFile.parseMethodDesc_params(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#17
soot.coffi.ClassFile.parseMethodDesc_params(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,1)#18
soot.coffi.ClassFile.parseMethodDesc_params(Ljava/lang/String;)Ljava/lang/String;#Constant(I,1)#19
soot.coffi.ClassFile.parseMethodDesc_params(Ljava/lang/String;)Ljava/lang/String;#BinaryOp(I,add)#20
soot.coffi.ClassFile.parseMethodDesc_params(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,2)#21
soot.coffi.ClassFile.parseMethodDesc_params(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,substring,(II)Ljava/lang/String;)#22
soot.coffi.ClassFile.parseMethodDesc_params(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,",")#23
soot.coffi.ClassFile.parseMethodDesc_params(Ljava/lang/String;)Ljava/lang/String;#Invoke(STATIC,Lsoot/coffi/ClassFile;,parseDesc,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#24
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"")#0
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,2)#1
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#2
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,7)#3
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#4
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,8)#5
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#6
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#7
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,6)#8
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#9
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,5)#10
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Goto(212)#11
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,5)#212
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,6)#213
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,lt,12)#214
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#215
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#216
soot.coffi.ClassFile.parseMethodDesc_params(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#25
soot.coffi.cp_info.countParams([Lsoot/coffi/cp_info;I)I#LocalStore(Ljava/lang/Object;,3)#6
soot.coffi.cp_info.countParams([Lsoot/coffi/cp_info;I)I#New(Ljava/util/StringTokenizer;,0)#7
soot.coffi.cp_info.countParams([Lsoot/coffi/cp_info;I)I#Dup(1,0)#8
soot.coffi.cp_info.countParams([Lsoot/coffi/cp_info;I)I#LocalLoad(Ljava/lang/Object;,3)#9
soot.coffi.cp_info.countParams([Lsoot/coffi/cp_info;I)I#Constant(Ljava/lang/String;,",")#10
soot.coffi.cp_info.countParams([Lsoot/coffi/cp_info;I)I#Constant(I,0)#11
soot.coffi.cp_info.countParams([Lsoot/coffi/cp_info;I)I#Invoke(SPECIAL,Ljava/util/StringTokenizer;,<init>,(Ljava/lang/String;Ljava/lang/String;Z)V)#12
soot.coffi.cp_info.countParams([Lsoot/coffi/cp_info;I)I#LocalStore(Ljava/lang/Object;,2)#13
soot.coffi.cp_info.countParams([Lsoot/coffi/cp_info;I)I#LocalLoad(Ljava/lang/Object;,2)#14
soot.coffi.cp_info.countParams([Lsoot/coffi/cp_info;I)I#Invoke(VIRTUAL,Ljava/util/StringTokenizer;,countTokens,()I)#15
soot.coffi.cp_info.countParams([Lsoot/coffi/cp_info;I)I#Return(I)#16
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalStore(I,6)#1605
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,0)#1606
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,0)#1607
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,0)#1608
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Get(Lsoot/Scene;,NONSTATIC,Lsoot/coffi/CFG;,cm)#1609
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,3)#1610
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,5)#1611
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Get(I,NONSTATIC,Lsoot/coffi/Instruction_Invokenonvirtual;,arg_i)#1612
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(SPECIAL,Lsoot/coffi/CFG;,jimpleReturnTypeOfMethodRef,(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;)#1613
soot.coffi.CFG.jimpleReturnTypeOfMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,2)#0
soot.coffi.CFG.jimpleReturnTypeOfMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#LocalLoad(I,3)#1
soot.coffi.CFG.jimpleReturnTypeOfMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#ArrayLoad(Ljava/lang/Object;)#2
soot.coffi.CFG.jimpleReturnTypeOfMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#CheckCast(Lsoot/coffi/CONSTANT_Methodref_info;)#3
soot.coffi.CFG.jimpleReturnTypeOfMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#LocalStore(Ljava/lang/Object;,4)#4
soot.coffi.CFG.jimpleReturnTypeOfMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,2)#5
soot.coffi.CFG.jimpleReturnTypeOfMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,4)#6
soot.coffi.CFG.jimpleReturnTypeOfMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_Methodref_info;,name_and_type_index)#7
soot.coffi.CFG.jimpleReturnTypeOfMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#ArrayLoad(Ljava/lang/Object;)#8
soot.coffi.CFG.jimpleReturnTypeOfMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#CheckCast(Lsoot/coffi/CONSTANT_NameAndType_info;)#9
soot.coffi.CFG.jimpleReturnTypeOfMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#LocalStore(Ljava/lang/Object;,5)#10
soot.coffi.CFG.jimpleReturnTypeOfMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,2)#11
soot.coffi.CFG.jimpleReturnTypeOfMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,5)#12
soot.coffi.CFG.jimpleReturnTypeOfMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_NameAndType_info;,descriptor_index)#13
soot.coffi.CFG.jimpleReturnTypeOfMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#ArrayLoad(Ljava/lang/Object;)#14
soot.coffi.CFG.jimpleReturnTypeOfMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#CheckCast(Lsoot/coffi/CONSTANT_Utf8_info;)#15
soot.coffi.CFG.jimpleReturnTypeOfMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,convert,()Ljava/lang/String;)#16
soot.coffi.CFG.jimpleReturnTypeOfMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#LocalStore(Ljava/lang/Object;,6)#17
soot.coffi.CFG.jimpleReturnTypeOfMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#Invoke(STATIC,Lsoot/coffi/Util;,v,()Lsoot/coffi/Util;)#18
soot.coffi.CFG.jimpleReturnTypeOfMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,6)#19
soot.coffi.CFG.jimpleReturnTypeOfMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#Invoke(VIRTUAL,Lsoot/coffi/Util;,jimpleReturnTypeOfMethodDescriptor,(Ljava/lang/String;)Lsoot/Type;)#20
soot.coffi.Util.jimpleReturnTypeOfMethodDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Util.jimpleReturnTypeOfMethodDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#1
soot.coffi.Util.jimpleReturnTypeOfMethodDescriptor(Ljava/lang/String;)Lsoot/Type;#Invoke(VIRTUAL,Lsoot/coffi/Util;,jimpleTypesOfFieldOrMethodDescriptor,(Ljava/lang/String;)[Lsoot/Type;)#2
soot.coffi.Util.jimpleReturnTypeOfMethodDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalStore(Ljava/lang/Object;,2)#3
soot.coffi.Util.jimpleReturnTypeOfMethodDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,2)#4
soot.coffi.Util.jimpleReturnTypeOfMethodDescriptor(Ljava/lang/String;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,2)#5
soot.coffi.Util.jimpleReturnTypeOfMethodDescriptor(Ljava/lang/String;)Lsoot/Type;#ArrayLength()#6
soot.coffi.Util.jimpleReturnTypeOfMethodDescriptor(Ljava/lang/String;)Lsoot/Type;#Constant(I,1)#7
soot.coffi.Util.jimpleReturnTypeOfMethodDescriptor(Ljava/lang/String;)Lsoot/Type;#BinaryOp(I,sub)#8
soot.coffi.Util.jimpleReturnTypeOfMethodDescriptor(Ljava/lang/String;)Lsoot/Type;#ArrayLoad(Ljava/lang/Object;)#9
soot.coffi.Util.jimpleReturnTypeOfMethodDescriptor(Ljava/lang/String;)Lsoot/Type;#Return(Ljava/lang/Object;)#10
soot.coffi.CFG.jimpleReturnTypeOfMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#Return(Ljava/lang/Object;)#21
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(SPECIAL,Lsoot/coffi/CFG;,byteCodeTypeOf,(Lsoot/Type;)Lsoot/Type;)#1614
soot.coffi.CFG.byteCodeTypeOf(Lsoot/Type;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#0
soot.coffi.CFG.byteCodeTypeOf(Lsoot/Type;)Lsoot/Type;#Invoke(STATIC,Lsoot/ShortType;,v,()Lsoot/ShortType;)#1
soot.coffi.CFG.byteCodeTypeOf(Lsoot/Type;)Lsoot/Type;#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#2
soot.VoidType.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.VoidType.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#1
soot.VoidType.equals(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,5)#2
soot.VoidType.equals(Ljava/lang/Object;)Z#Constant(I,0)#5
soot.VoidType.equals(Ljava/lang/Object;)Z#Return(I)#6
soot.coffi.CFG.byteCodeTypeOf(Lsoot/Type;)Lsoot/Type;#Constant(I,0)#3
soot.coffi.CFG.byteCodeTypeOf(Lsoot/Type;)Lsoot/Type;#ConditionalBranch(I,ne,20)#4
soot.coffi.CFG.byteCodeTypeOf(Lsoot/Type;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#5
soot.coffi.CFG.byteCodeTypeOf(Lsoot/Type;)Lsoot/Type;#Invoke(STATIC,Lsoot/CharType;,v,()Lsoot/CharType;)#6
soot.coffi.CFG.byteCodeTypeOf(Lsoot/Type;)Lsoot/Type;#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#7
soot.coffi.CFG.byteCodeTypeOf(Lsoot/Type;)Lsoot/Type;#Constant(I,0)#8
soot.coffi.CFG.byteCodeTypeOf(Lsoot/Type;)Lsoot/Type;#ConditionalBranch(I,ne,20)#9
soot.coffi.CFG.byteCodeTypeOf(Lsoot/Type;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#10
soot.coffi.CFG.byteCodeTypeOf(Lsoot/Type;)Lsoot/Type;#Invoke(STATIC,Lsoot/ByteType;,v,()Lsoot/ByteType;)#11
soot.coffi.CFG.byteCodeTypeOf(Lsoot/Type;)Lsoot/Type;#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#12
soot.coffi.CFG.byteCodeTypeOf(Lsoot/Type;)Lsoot/Type;#Constant(I,0)#13
soot.coffi.CFG.byteCodeTypeOf(Lsoot/Type;)Lsoot/Type;#ConditionalBranch(I,ne,20)#14
soot.coffi.CFG.byteCodeTypeOf(Lsoot/Type;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#15
soot.coffi.CFG.byteCodeTypeOf(Lsoot/Type;)Lsoot/Type;#Invoke(STATIC,Lsoot/BooleanType;,v,()Lsoot/BooleanType;)#16
soot.coffi.CFG.byteCodeTypeOf(Lsoot/Type;)Lsoot/Type;#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#17
soot.coffi.CFG.byteCodeTypeOf(Lsoot/Type;)Lsoot/Type;#Constant(I,0)#18
soot.coffi.CFG.byteCodeTypeOf(Lsoot/Type;)Lsoot/Type;#ConditionalBranch(I,eq,22)#19
soot.coffi.CFG.byteCodeTypeOf(Lsoot/Type;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#22
soot.coffi.CFG.byteCodeTypeOf(Lsoot/Type;)Lsoot/Type;#Return(Ljava/lang/Object;)#23
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalStore(Ljava/lang/Object;,7)#1615
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(I,6)#1616
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Constant(I,1)#1617
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#BinaryOp(I,sub)#1618
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalStore(I,8)#1619
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Goto(1665)#1620
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(I,8)#1665
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Constant(I,0)#1666
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#ConditionalBranch(I,ge,1621)#1667
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,0)#1668
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,2)#1669
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(VIRTUAL,Lsoot/coffi/CFG;,popSafeRefType,(Lsoot/coffi/TypeStack;)Lsoot/coffi/TypeStack;)#1670
soot.coffi.CFG.popSafeRefType(Lsoot/coffi/TypeStack;)Lsoot/coffi/TypeStack;#LocalLoad(Ljava/lang/Object;,1)#0
soot.coffi.CFG.popSafeRefType(Lsoot/coffi/TypeStack;)Lsoot/coffi/TypeStack;#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,pop,()Lsoot/coffi/TypeStack;)#1
soot.coffi.TypeStack.pop()Lsoot/coffi/TypeStack;#New(Lsoot/coffi/TypeStack;,0)#0
soot.coffi.TypeStack.pop()Lsoot/coffi/TypeStack;#Dup(1,0)#1
soot.coffi.TypeStack.pop()Lsoot/coffi/TypeStack;#Invoke(SPECIAL,Lsoot/coffi/TypeStack;,<init>,()V)#2
soot.coffi.TypeStack.pop()Lsoot/coffi/TypeStack;#LocalStore(Ljava/lang/Object;,1)#3
soot.coffi.TypeStack.pop()Lsoot/coffi/TypeStack;#LocalLoad(Ljava/lang/Object;,1)#4
soot.coffi.TypeStack.pop()Lsoot/coffi/TypeStack;#LocalLoad(Ljava/lang/Object;,0)#5
soot.coffi.TypeStack.pop()Lsoot/coffi/TypeStack;#Get([Lsoot/Type;,NONSTATIC,Lsoot/coffi/TypeStack;,types)#6
soot.coffi.TypeStack.pop()Lsoot/coffi/TypeStack;#ArrayLength()#7
soot.coffi.TypeStack.pop()Lsoot/coffi/TypeStack;#Constant(I,1)#8
soot.coffi.TypeStack.pop()Lsoot/coffi/TypeStack;#BinaryOp(I,sub)#9
soot.coffi.TypeStack.pop()Lsoot/coffi/TypeStack;#New([Lsoot/Type;,1)#10
soot.coffi.TypeStack.pop()Lsoot/coffi/TypeStack;#Put([Lsoot/Type;,NONSTATIC,Lsoot/coffi/TypeStack;,types)#11
soot.coffi.TypeStack.pop()Lsoot/coffi/TypeStack;#LocalLoad(Ljava/lang/Object;,0)#12
soot.coffi.TypeStack.pop()Lsoot/coffi/TypeStack;#Get([Lsoot/Type;,NONSTATIC,Lsoot/coffi/TypeStack;,types)#13
soot.coffi.TypeStack.pop()Lsoot/coffi/TypeStack;#Constant(I,0)#14
soot.coffi.TypeStack.pop()Lsoot/coffi/TypeStack;#LocalLoad(Ljava/lang/Object;,1)#15
soot.coffi.TypeStack.pop()Lsoot/coffi/TypeStack;#Get([Lsoot/Type;,NONSTATIC,Lsoot/coffi/TypeStack;,types)#16
soot.coffi.TypeStack.pop()Lsoot/coffi/TypeStack;#Constant(I,0)#17
soot.coffi.TypeStack.pop()Lsoot/coffi/TypeStack;#LocalLoad(Ljava/lang/Object;,0)#18
soot.coffi.TypeStack.pop()Lsoot/coffi/TypeStack;#Get([Lsoot/Type;,NONSTATIC,Lsoot/coffi/TypeStack;,types)#19
soot.coffi.TypeStack.pop()Lsoot/coffi/TypeStack;#ArrayLength()#20
soot.coffi.TypeStack.pop()Lsoot/coffi/TypeStack;#Constant(I,1)#21
soot.coffi.TypeStack.pop()Lsoot/coffi/TypeStack;#BinaryOp(I,sub)#22
soot.coffi.TypeStack.pop()Lsoot/coffi/TypeStack;#Invoke(STATIC,Ljava/lang/System;,arraycopy,(Ljava/lang/Object;ILjava/lang/Object;II)V)#23
soot.coffi.TypeStack.pop()Lsoot/coffi/TypeStack;#LocalLoad(Ljava/lang/Object;,1)#24
soot.coffi.TypeStack.pop()Lsoot/coffi/TypeStack;#Return(Ljava/lang/Object;)#25
soot.coffi.CFG.popSafeRefType(Lsoot/coffi/TypeStack;)Lsoot/coffi/TypeStack;#Return(Ljava/lang/Object;)#2
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalStore(Ljava/lang/Object;,2)#1671
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,7)#1672
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(STATIC,Lsoot/VoidType;,v,()Lsoot/VoidType;)#1673
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#1674
soot.VoidType.equals(Ljava/lang/Object;)Z#Constant(I,1)#3
soot.VoidType.equals(Ljava/lang/Object;)Z#Return(I)#4
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Constant(I,0)#1675
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#ConditionalBranch(I,ne,1927)#1676
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Goto(1927)#1161
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,0)#372
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/CFG;,firstInstruction)#373
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,9)#374
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Goto(384)#375
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,9)#384
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(L;,null)#385
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ConditionalBranch(Ljava/lang/Object;,ne,376)#386
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,6)#376
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,9)#377
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#378
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#CheckCast(Lsoot/coffi/TypeStack;)#379
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,10)#380
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,9)#381
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/Instruction;,next)#382
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,9)#383
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,0)#387
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Get(Lsoot/coffi/BasicBlock;,NONSTATIC,Lsoot/coffi/CFG;,cfg)#388
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,9)#389
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Goto(493)#390
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,9)#493
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(L;,null)#494
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ConditionalBranch(Ljava/lang/Object;,ne,391)#495
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,9)#391
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/BasicBlock;,head)#392
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,10)#393
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,9)#394
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#New(Ljava/util/ArrayList;,0)#395
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Dup(1,0)#396
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#397
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/coffi/BasicBlock;,statements)#398
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,9)#399
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Get(Ljava/util/List;,NONSTATIC,Lsoot/coffi/BasicBlock;,statements)#400
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,11)#401
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#New(Ljava/util/ArrayList;,0)#402
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Dup(1,0)#403
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#404
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,12)#405
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,8)#406
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,10)#407
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/Set;,contains,(Ljava/lang/Object;)Z)#408
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(I,0)#409
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ConditionalBranch(I,eq,426)#410
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,0)#411
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,10)#412
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,6)#413
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,10)#414
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#415
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#CheckCast(Lsoot/coffi/TypeStack;)#416
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,7)#417
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,10)#418
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#419
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#CheckCast(Lsoot/coffi/TypeStack;)#420
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,1)#421
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,12)#422
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,9)#423
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(VIRTUAL,Lsoot/coffi/CFG;,generateJimple,(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V)#424
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(L;,null)#0
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,8)#1
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(L;,null)#2
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,9)#3
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(L;,null)#4
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,10)#5
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(L;,null)#6
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,11)#7
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(L;,null)#8
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,12)#9
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(L;,null)#10
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,13)#11
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(L;,null)#12
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,14)#13
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(L;,null)#14
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,17)#15
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#16
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Get(B,NONSTATIC,Lsoot/coffi/Instruction;,code)#17
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(I,255)#18
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#BinaryOp(I,and)#19
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(I,18)#20
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/coffi/Util;,v,()Lsoot/coffi/Util;)#21
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#22
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Get(I,NONSTATIC,Lsoot/coffi/Instruction;,originalIndex)#23
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Put(I,NONSTATIC,Lsoot/coffi/Util;,activeOriginalIndex)#24
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/coffi/Util;,v,()Lsoot/coffi/Util;)#25
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(I,0)#26
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Put(Z,NONSTATIC,Lsoot/coffi/Util;,isLocalStore)#27
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/coffi/Util;,v,()Lsoot/coffi/Util;)#28
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(I,0)#29
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Put(Z,NONSTATIC,Lsoot/coffi/Util;,isWideLocalStore)#30
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(I,18)#31
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Switch(4488,0,910,1,91,2,105,3,105,4,105,5,105,6,105,7,105,8,105,9,122,10,122,11,140,12,140,13,140,14,158,15,158,16,33,17,50,18,67,19,79,20,79,21,176,22,256,23,196,24,236,25,216,26,276,27,276,28,276,29,276,30,336,31,336,32,336,33,336,34,296,35,296,36,296,37,296,38,356,39,356,40,356,41,356,42,316,43,316,44,316,45,316,46,813,47,813,48,813,49,813,50,813,51,813,52,813,53,813,54,376,55,454,56,402,57,480,58,428,59,506,60,506,61,506,62,506,63,575,64,575,65,575,66,575,67,529,68,529,69,529,70,529,71,598,72,598,73,598,74,598,75,552,76,552,77,552,78,552,79,844,80,877,81,844,82,877,83,844,84,844,85,844,86,844,87,914,88,914,89,918,90,1013,91,1089,92,936,93,1272,94,1492,95,1759,96,1823,97,1854,98,1823,99,1854,100,1887,101,1918,102,1887,103,1918,104,1951,105,1982,106,1951,107,1982,108,2015,109,2046,110,2015,111,2046,112,2079,113,2110,114,2079,115,2110,116,2143,117,2143,118,2143,119,2143,120,2165,121,2258,122,2196,123,2289,124,2227,125,2320,126,2351,127,2382,128,2415,129,2446,130,2479,131,2510,132,621,133,2543,134,2566,135,2589,136,2612,137,2566,138,2589,139,2612,140,2543,141,2589,142,2612,143,2543,144,2566,145,2635,146,2658,147,2681,148,3024,149,3057,150,3088,151,3119,152,3152,153,2704,154,2783,155,2743,156,2842,157,2822,158,2763,159,2862,160,2943,161,2889,162,2997,163,2970,164,2916,165,3185,166,3212,167,3239,168,4488,169,3253,170,3298,171,3329,172,3283,173,3283,174,3283,175,3283,176,3283,177,3279,178,3639,179,3560,180,3467,181,3376,182,3944,183,4043,184,4142,185,4234,186,3718,187,4344,188,650,189,679,190,791,191,4333,192,4370,193,4418,194,4466,195,4477,196,645,197,727,198,2724,199,2803,200,3246,201,4488,202,3294,203,4488,204,4488,205,4488,206,4488,207,4488,208,4488,209,3266)#32
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/coffi/Util;,v,()Lsoot/coffi/Util;)#316
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#317
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Get(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/coffi/CFG;,listBody)#318
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(I,18)#319
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(I,42)#320
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#BinaryOp(I,sub)#321
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/Util;,getLocalForIndex,(Lsoot/jimple/JimpleBody;I)Lsoot/Local;)#322
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#Constant(L;,null)#0
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#LocalStore(Ljava/lang/Object;,3)#1
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#Constant(L;,null)#2
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#LocalStore(Ljava/lang/Object;,4)#3
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#Constant(I,0)#4
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#LocalStore(I,5)#5
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,0)#6
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#Get(Z,NONSTATIC,Lsoot/coffi/Util;,useFaithfulNaming)#7
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#Constant(I,0)#8
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#ConditionalBranch(I,eq,65)#9
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#LocalLoad(I,5)#65
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#Constant(I,0)#66
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#ConditionalBranch(I,ne,76)#67
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#New(Ljava/lang/StringBuilder;,0)#68
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#Dup(1,0)#69
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#Constant(Ljava/lang/String;,"l")#70
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#71
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#LocalLoad(I,2)#72
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#73
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#74
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#LocalStore(Ljava/lang/Object;,3)#75
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,0)#76
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,1)#77
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,3)#78
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#Invoke(VIRTUAL,Lsoot/coffi/Util;,declaresLocal,(Lsoot/Body;Ljava/lang/String;)Z)#79
soot.coffi.Util.declaresLocal(Lsoot/Body;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#0
soot.coffi.Util.declaresLocal(Lsoot/Body;Ljava/lang/String;)Z#Invoke(VIRTUAL,Lsoot/Body;,getLocals,()Lsoot/util/Chain;)#1
soot.coffi.Util.declaresLocal(Lsoot/Body;Ljava/lang/String;)Z#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#2
soot.coffi.Util.declaresLocal(Lsoot/Body;Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,3)#3
soot.coffi.Util.declaresLocal(Lsoot/Body;Ljava/lang/String;)Z#Goto(17)#4
soot.coffi.Util.declaresLocal(Lsoot/Body;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#17
soot.coffi.Util.declaresLocal(Lsoot/Body;Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#18
soot.coffi.Util.declaresLocal(Lsoot/Body;Ljava/lang/String;)Z#Constant(I,0)#19
soot.coffi.Util.declaresLocal(Lsoot/Body;Ljava/lang/String;)Z#ConditionalBranch(I,ne,5)#20
soot.coffi.Util.declaresLocal(Lsoot/Body;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#5
soot.coffi.Util.declaresLocal(Lsoot/Body;Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#6
soot.coffi.Util.declaresLocal(Lsoot/Body;Ljava/lang/String;)Z#CheckCast(Lsoot/Local;)#7
soot.coffi.Util.declaresLocal(Lsoot/Body;Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,4)#8
soot.coffi.Util.declaresLocal(Lsoot/Body;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,4)#9
soot.coffi.Util.declaresLocal(Lsoot/Body;Ljava/lang/String;)Z#Invoke(INTERFACE,Lsoot/Local;,getName,()Ljava/lang/String;)#10
soot.jimple.internal.JimpleLocal.getName()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JimpleLocal.getName()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsoot/jimple/internal/JimpleLocal;,name)#1
soot.jimple.internal.JimpleLocal.getName()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
soot.coffi.Util.declaresLocal(Lsoot/Body;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,2)#11
soot.coffi.Util.declaresLocal(Lsoot/Body;Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#12
soot.coffi.Util.declaresLocal(Lsoot/Body;Ljava/lang/String;)Z#Constant(I,0)#13
soot.coffi.Util.declaresLocal(Lsoot/Body;Ljava/lang/String;)Z#ConditionalBranch(I,eq,17)#14
soot.coffi.Util.declaresLocal(Lsoot/Body;Ljava/lang/String;)Z#Constant(I,1)#15
soot.coffi.Util.declaresLocal(Lsoot/Body;Ljava/lang/String;)Z#Return(I)#16
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#Constant(I,0)#80
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#ConditionalBranch(I,eq,87)#81
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,0)#82
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,1)#83
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,3)#84
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#Invoke(VIRTUAL,Lsoot/coffi/Util;,getLocal,(Lsoot/Body;Ljava/lang/String;)Lsoot/Local;)#85
soot.coffi.Util.getLocal(Lsoot/Body;Ljava/lang/String;)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,1)#0
soot.coffi.Util.getLocal(Lsoot/Body;Ljava/lang/String;)Lsoot/Local;#Invoke(VIRTUAL,Lsoot/Body;,getLocals,()Lsoot/util/Chain;)#1
soot.coffi.Util.getLocal(Lsoot/Body;Ljava/lang/String;)Lsoot/Local;#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#2
soot.coffi.Util.getLocal(Lsoot/Body;Ljava/lang/String;)Lsoot/Local;#LocalStore(Ljava/lang/Object;,3)#3
soot.coffi.Util.getLocal(Lsoot/Body;Ljava/lang/String;)Lsoot/Local;#Goto(17)#4
soot.coffi.Util.getLocal(Lsoot/Body;Ljava/lang/String;)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,3)#17
soot.coffi.Util.getLocal(Lsoot/Body;Ljava/lang/String;)Lsoot/Local;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#18
soot.coffi.Util.getLocal(Lsoot/Body;Ljava/lang/String;)Lsoot/Local;#Constant(I,0)#19
soot.coffi.Util.getLocal(Lsoot/Body;Ljava/lang/String;)Lsoot/Local;#ConditionalBranch(I,ne,5)#20
soot.coffi.Util.getLocal(Lsoot/Body;Ljava/lang/String;)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,3)#5
soot.coffi.Util.getLocal(Lsoot/Body;Ljava/lang/String;)Lsoot/Local;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#6
soot.coffi.Util.getLocal(Lsoot/Body;Ljava/lang/String;)Lsoot/Local;#CheckCast(Lsoot/Local;)#7
soot.coffi.Util.getLocal(Lsoot/Body;Ljava/lang/String;)Lsoot/Local;#LocalStore(Ljava/lang/Object;,4)#8
soot.coffi.Util.getLocal(Lsoot/Body;Ljava/lang/String;)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,4)#9
soot.coffi.Util.getLocal(Lsoot/Body;Ljava/lang/String;)Lsoot/Local;#Invoke(INTERFACE,Lsoot/Local;,getName,()Ljava/lang/String;)#10
soot.coffi.Util.getLocal(Lsoot/Body;Ljava/lang/String;)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,2)#11
soot.coffi.Util.getLocal(Lsoot/Body;Ljava/lang/String;)Lsoot/Local;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#12
soot.coffi.Util.getLocal(Lsoot/Body;Ljava/lang/String;)Lsoot/Local;#Constant(I,0)#13
soot.coffi.Util.getLocal(Lsoot/Body;Ljava/lang/String;)Lsoot/Local;#ConditionalBranch(I,eq,17)#14
soot.coffi.Util.getLocal(Lsoot/Body;Ljava/lang/String;)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,4)#15
soot.coffi.Util.getLocal(Lsoot/Body;Ljava/lang/String;)Lsoot/Local;#Return(Ljava/lang/Object;)#16
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#Return(Ljava/lang/Object;)#86
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,19)#323
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/jimple/Jimple;,v,()Lsoot/jimple/Jimple;)#324
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/coffi/Util;,v,()Lsoot/coffi/Util;)#325
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#326
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Get(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/coffi/CFG;,listBody)#327
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,3)#328
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,3)#329
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,topIndex,()I)#330
soot.coffi.TypeStack.topIndex()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.TypeStack.topIndex()I#Get([Lsoot/Type;,NONSTATIC,Lsoot/coffi/TypeStack;,types)#1
soot.coffi.TypeStack.topIndex()I#ArrayLength()#2
soot.coffi.TypeStack.topIndex()I#Constant(I,1)#3
soot.coffi.TypeStack.topIndex()I#BinaryOp(I,sub)#4
soot.coffi.TypeStack.topIndex()I#Return(I)#5
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/Util;,getLocalForStackOp,(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;)#331
soot.coffi.Util.getLocalForStackOp(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,2)#0
soot.coffi.Util.getLocalForStackOp(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;#LocalLoad(I,3)#1
soot.coffi.Util.getLocalForStackOp(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,get,(I)Lsoot/Type;)#2
soot.coffi.TypeStack.get(I)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.TypeStack.get(I)Lsoot/Type;#Get([Lsoot/Type;,NONSTATIC,Lsoot/coffi/TypeStack;,types)#1
soot.coffi.TypeStack.get(I)Lsoot/Type;#LocalLoad(I,1)#2
soot.coffi.TypeStack.get(I)Lsoot/Type;#ArrayLoad(Ljava/lang/Object;)#3
soot.coffi.TypeStack.get(I)Lsoot/Type;#Return(Ljava/lang/Object;)#4
soot.coffi.Util.getLocalForStackOp(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;#Invoke(STATIC,Lsoot/coffi/Double2ndHalfType;,v,()Lsoot/coffi/Double2ndHalfType;)#3
soot.coffi.Double2ndHalfType.v()Lsoot/coffi/Double2ndHalfType;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.coffi.Double2ndHalfType.v()Lsoot/coffi/Double2ndHalfType;#Invoke(VIRTUAL,Lsoot/G;,soot_coffi_Double2ndHalfType,()Lsoot/coffi/Double2ndHalfType;)#1
soot.Singletons.soot_coffi_Double2ndHalfType()Lsoot/coffi/Double2ndHalfType;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_coffi_Double2ndHalfType()Lsoot/coffi/Double2ndHalfType;#Get(Lsoot/coffi/Double2ndHalfType;,NONSTATIC,Lsoot/Singletons;,instance_soot_coffi_Double2ndHalfType)#1
soot.Singletons.soot_coffi_Double2ndHalfType()Lsoot/coffi/Double2ndHalfType;#Constant(L;,null)#2
soot.Singletons.soot_coffi_Double2ndHalfType()Lsoot/coffi/Double2ndHalfType;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_coffi_Double2ndHalfType()Lsoot/coffi/Double2ndHalfType;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_coffi_Double2ndHalfType()Lsoot/coffi/Double2ndHalfType;#New(Lsoot/coffi/Double2ndHalfType;,0)#5
soot.Singletons.soot_coffi_Double2ndHalfType()Lsoot/coffi/Double2ndHalfType;#Dup(1,0)#6
soot.Singletons.soot_coffi_Double2ndHalfType()Lsoot/coffi/Double2ndHalfType;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_coffi_Double2ndHalfType()Lsoot/coffi/Double2ndHalfType;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_coffi_Double2ndHalfType()Lsoot/coffi/Double2ndHalfType;#Invoke(SPECIAL,Lsoot/coffi/Double2ndHalfType;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.coffi.Double2ndHalfType.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Double2ndHalfType.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Type;,<init>,()V)#1
soot.coffi.Double2ndHalfType.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_coffi_Double2ndHalfType()Lsoot/coffi/Double2ndHalfType;#Put(Lsoot/coffi/Double2ndHalfType;,NONSTATIC,Lsoot/Singletons;,instance_soot_coffi_Double2ndHalfType)#10
soot.Singletons.soot_coffi_Double2ndHalfType()Lsoot/coffi/Double2ndHalfType;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_coffi_Double2ndHalfType()Lsoot/coffi/Double2ndHalfType;#Get(Lsoot/coffi/Double2ndHalfType;,NONSTATIC,Lsoot/Singletons;,instance_soot_coffi_Double2ndHalfType)#12
soot.Singletons.soot_coffi_Double2ndHalfType()Lsoot/coffi/Double2ndHalfType;#Return(Ljava/lang/Object;)#13
soot.coffi.Double2ndHalfType.v()Lsoot/coffi/Double2ndHalfType;#Return(Ljava/lang/Object;)#2
soot.coffi.Util.getLocalForStackOp(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#4
soot.coffi.Util.getLocalForStackOp(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;#Constant(I,0)#5
soot.coffi.Util.getLocalForStackOp(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;#ConditionalBranch(I,ne,14)#6
soot.coffi.Util.getLocalForStackOp(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,2)#7
soot.coffi.Util.getLocalForStackOp(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;#LocalLoad(I,3)#8
soot.coffi.Util.getLocalForStackOp(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,get,(I)Lsoot/Type;)#9
soot.coffi.Util.getLocalForStackOp(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;#Invoke(STATIC,Lsoot/coffi/Long2ndHalfType;,v,()Lsoot/coffi/Long2ndHalfType;)#10
soot.coffi.Long2ndHalfType.v()Lsoot/coffi/Long2ndHalfType;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.coffi.Long2ndHalfType.v()Lsoot/coffi/Long2ndHalfType;#Invoke(VIRTUAL,Lsoot/G;,soot_coffi_Long2ndHalfType,()Lsoot/coffi/Long2ndHalfType;)#1
soot.Singletons.soot_coffi_Long2ndHalfType()Lsoot/coffi/Long2ndHalfType;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_coffi_Long2ndHalfType()Lsoot/coffi/Long2ndHalfType;#Get(Lsoot/coffi/Long2ndHalfType;,NONSTATIC,Lsoot/Singletons;,instance_soot_coffi_Long2ndHalfType)#1
soot.Singletons.soot_coffi_Long2ndHalfType()Lsoot/coffi/Long2ndHalfType;#Constant(L;,null)#2
soot.Singletons.soot_coffi_Long2ndHalfType()Lsoot/coffi/Long2ndHalfType;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_coffi_Long2ndHalfType()Lsoot/coffi/Long2ndHalfType;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_coffi_Long2ndHalfType()Lsoot/coffi/Long2ndHalfType;#New(Lsoot/coffi/Long2ndHalfType;,0)#5
soot.Singletons.soot_coffi_Long2ndHalfType()Lsoot/coffi/Long2ndHalfType;#Dup(1,0)#6
soot.Singletons.soot_coffi_Long2ndHalfType()Lsoot/coffi/Long2ndHalfType;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_coffi_Long2ndHalfType()Lsoot/coffi/Long2ndHalfType;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_coffi_Long2ndHalfType()Lsoot/coffi/Long2ndHalfType;#Invoke(SPECIAL,Lsoot/coffi/Long2ndHalfType;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.coffi.Long2ndHalfType.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Long2ndHalfType.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Type;,<init>,()V)#1
soot.coffi.Long2ndHalfType.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_coffi_Long2ndHalfType()Lsoot/coffi/Long2ndHalfType;#Put(Lsoot/coffi/Long2ndHalfType;,NONSTATIC,Lsoot/Singletons;,instance_soot_coffi_Long2ndHalfType)#10
soot.Singletons.soot_coffi_Long2ndHalfType()Lsoot/coffi/Long2ndHalfType;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_coffi_Long2ndHalfType()Lsoot/coffi/Long2ndHalfType;#Get(Lsoot/coffi/Long2ndHalfType;,NONSTATIC,Lsoot/Singletons;,instance_soot_coffi_Long2ndHalfType)#12
soot.Singletons.soot_coffi_Long2ndHalfType()Lsoot/coffi/Long2ndHalfType;#Return(Ljava/lang/Object;)#13
soot.coffi.Long2ndHalfType.v()Lsoot/coffi/Long2ndHalfType;#Return(Ljava/lang/Object;)#2
soot.coffi.Util.getLocalForStackOp(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#11
soot.coffi.Util.getLocalForStackOp(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;#Constant(I,0)#12
soot.coffi.Util.getLocalForStackOp(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;#ConditionalBranch(I,eq,18)#13
soot.coffi.Util.getLocalForStackOp(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,0)#18
soot.coffi.Util.getLocalForStackOp(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,1)#19
soot.coffi.Util.getLocalForStackOp(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;#New(Ljava/lang/StringBuilder;,0)#20
soot.coffi.Util.getLocalForStackOp(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;#Dup(1,0)#21
soot.coffi.Util.getLocalForStackOp(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;#Constant(Ljava/lang/String;,"$stack")#22
soot.coffi.Util.getLocalForStackOp(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#23
soot.coffi.Util.getLocalForStackOp(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;#LocalLoad(I,3)#24
soot.coffi.Util.getLocalForStackOp(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#25
soot.coffi.Util.getLocalForStackOp(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#26
soot.coffi.Util.getLocalForStackOp(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;#Invoke(STATIC,Lsoot/UnknownType;,v,()Lsoot/UnknownType;)#27
soot.coffi.Util.getLocalForStackOp(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;#Invoke(VIRTUAL,Lsoot/coffi/Util;,getLocalCreatingIfNecessary,(Lsoot/jimple/JimpleBody;Ljava/lang/String;Lsoot/Type;)Lsoot/Local;)#28
soot.coffi.Util.getLocalCreatingIfNecessary(Lsoot/jimple/JimpleBody;Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Util.getLocalCreatingIfNecessary(Lsoot/jimple/JimpleBody;Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,1)#1
soot.coffi.Util.getLocalCreatingIfNecessary(Lsoot/jimple/JimpleBody;Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,2)#2
soot.coffi.Util.getLocalCreatingIfNecessary(Lsoot/jimple/JimpleBody;Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#Invoke(VIRTUAL,Lsoot/coffi/Util;,declaresLocal,(Lsoot/Body;Ljava/lang/String;)Z)#3
soot.coffi.Util.declaresLocal(Lsoot/Body;Ljava/lang/String;)Z#Constant(I,0)#21
soot.coffi.Util.declaresLocal(Lsoot/Body;Ljava/lang/String;)Z#Return(I)#22
soot.coffi.Util.getLocalCreatingIfNecessary(Lsoot/jimple/JimpleBody;Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#Constant(I,0)#4
soot.coffi.Util.getLocalCreatingIfNecessary(Lsoot/jimple/JimpleBody;Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#ConditionalBranch(I,eq,11)#5
soot.coffi.Util.getLocalCreatingIfNecessary(Lsoot/jimple/JimpleBody;Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#Invoke(STATIC,Lsoot/jimple/Jimple;,v,()Lsoot/jimple/Jimple;)#11
soot.coffi.Util.getLocalCreatingIfNecessary(Lsoot/jimple/JimpleBody;Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,2)#12
soot.coffi.Util.getLocalCreatingIfNecessary(Lsoot/jimple/JimpleBody;Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,3)#13
soot.coffi.Util.getLocalCreatingIfNecessary(Lsoot/jimple/JimpleBody;Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#Invoke(VIRTUAL,Lsoot/jimple/Jimple;,newLocal,(Ljava/lang/String;Lsoot/Type;)Lsoot/Local;)#14
soot.coffi.Util.getLocalCreatingIfNecessary(Lsoot/jimple/JimpleBody;Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#LocalStore(Ljava/lang/Object;,4)#15
soot.coffi.Util.getLocalCreatingIfNecessary(Lsoot/jimple/JimpleBody;Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,1)#16
soot.coffi.Util.getLocalCreatingIfNecessary(Lsoot/jimple/JimpleBody;Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#Invoke(VIRTUAL,Lsoot/jimple/JimpleBody;,getLocals,()Lsoot/util/Chain;)#17
soot.coffi.Util.getLocalCreatingIfNecessary(Lsoot/jimple/JimpleBody;Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,4)#18
soot.coffi.Util.getLocalCreatingIfNecessary(Lsoot/jimple/JimpleBody;Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#Invoke(INTERFACE,Lsoot/util/Chain;,add,(Ljava/lang/Object;)Z)#19
soot.coffi.Util.getLocalCreatingIfNecessary(Lsoot/jimple/JimpleBody;Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#Pop(1)#20
soot.coffi.Util.getLocalCreatingIfNecessary(Lsoot/jimple/JimpleBody;Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,4)#21
soot.coffi.Util.getLocalCreatingIfNecessary(Lsoot/jimple/JimpleBody;Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#Return(Ljava/lang/Object;)#22
soot.coffi.Util.getLocalForStackOp(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;#Return(Ljava/lang/Object;)#29
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,19)#332
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/jimple/Jimple;,newAssignStmt,(Lsoot/Value;Lsoot/Value;)Lsoot/jimple/AssignStmt;)#333
soot.jimple.Jimple.newAssignStmt(Lsoot/Value;Lsoot/Value;)Lsoot/jimple/AssignStmt;#New(Lsoot/jimple/internal/JAssignStmt;,0)#0
soot.jimple.Jimple.newAssignStmt(Lsoot/Value;Lsoot/Value;)Lsoot/jimple/AssignStmt;#Dup(1,0)#1
soot.jimple.Jimple.newAssignStmt(Lsoot/Value;Lsoot/Value;)Lsoot/jimple/AssignStmt;#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.Jimple.newAssignStmt(Lsoot/Value;Lsoot/Value;)Lsoot/jimple/AssignStmt;#LocalLoad(Ljava/lang/Object;,2)#3
soot.jimple.Jimple.newAssignStmt(Lsoot/Value;Lsoot/Value;)Lsoot/jimple/AssignStmt;#Invoke(SPECIAL,Lsoot/jimple/internal/JAssignStmt;,<init>,(Lsoot/Value;Lsoot/Value;)V)#4
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#Invoke(SPECIAL,Lsoot/jimple/internal/AbstractDefinitionStmt;,<init>,()V)#1
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#New(Lsoot/jimple/internal/JAssignStmt$LinkedVariableBox;,0)#3
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#Dup(1,0)#4
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,1)#6
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#Constant(L;,null)#7
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#Invoke(SPECIAL,Lsoot/jimple/internal/JAssignStmt$LinkedVariableBox;,<init>,(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;Lsoot/jimple/internal/JAssignStmt$LinkedVariableBox;)V)#8
soot.jimple.internal.JAssignStmt$LinkedVariableBox.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;Lsoot/jimple/internal/JAssignStmt$LinkedVariableBox;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JAssignStmt$LinkedVariableBox.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;Lsoot/jimple/internal/JAssignStmt$LinkedVariableBox;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.jimple.internal.JAssignStmt$LinkedVariableBox.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;Lsoot/jimple/internal/JAssignStmt$LinkedVariableBox;)V#LocalLoad(Ljava/lang/Object;,2)#2
soot.jimple.internal.JAssignStmt$LinkedVariableBox.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;Lsoot/jimple/internal/JAssignStmt$LinkedVariableBox;)V#Invoke(SPECIAL,Lsoot/jimple/internal/JAssignStmt$LinkedVariableBox;,<init>,(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;)V)#3
soot.jimple.internal.JAssignStmt$LinkedVariableBox.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JAssignStmt$LinkedVariableBox.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.jimple.internal.JAssignStmt$LinkedVariableBox.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;)V#Put(Lsoot/jimple/internal/JAssignStmt;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt$LinkedVariableBox;,this$0)#2
soot.jimple.internal.JAssignStmt$LinkedVariableBox.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.jimple.internal.JAssignStmt$LinkedVariableBox.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,2)#4
soot.jimple.internal.JAssignStmt$LinkedVariableBox.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;)V#Invoke(SPECIAL,Lsoot/jimple/internal/VariableBox;,<init>,(Lsoot/Value;)V)#5
soot.jimple.internal.VariableBox.<init>(Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.VariableBox.<init>(Lsoot/Value;)V#Invoke(SPECIAL,Lsoot/AbstractValueBox;,<init>,()V)#1
soot.jimple.internal.VariableBox.<init>(Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.internal.VariableBox.<init>(Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.jimple.internal.VariableBox.<init>(Lsoot/Value;)V#Invoke(VIRTUAL,Lsoot/jimple/internal/VariableBox;,setValue,(Lsoot/Value;)V)#4
soot.jimple.internal.JAssignStmt$LinkedVariableBox.canContainValue(Lsoot/Value;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JAssignStmt$LinkedVariableBox.canContainValue(Lsoot/Value;)Z#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt$LinkedVariableBox;,otherBox)#1
soot.jimple.internal.JAssignStmt$LinkedVariableBox.canContainValue(Lsoot/Value;)Z#Constant(L;,null)#2
soot.jimple.internal.JAssignStmt$LinkedVariableBox.canContainValue(Lsoot/Value;)Z#ConditionalBranch(Ljava/lang/Object;,ne,8)#3
soot.jimple.internal.JAssignStmt$LinkedVariableBox.canContainValue(Lsoot/Value;)Z#LocalLoad(Ljava/lang/Object;,0)#4
soot.jimple.internal.JAssignStmt$LinkedVariableBox.canContainValue(Lsoot/Value;)Z#LocalLoad(Ljava/lang/Object;,1)#5
soot.jimple.internal.JAssignStmt$LinkedVariableBox.canContainValue(Lsoot/Value;)Z#Invoke(SPECIAL,Lsoot/jimple/internal/VariableBox;,canContainValue,(Lsoot/Value;)Z)#6
soot.jimple.internal.VariableBox.canContainValue(Lsoot/Value;)Z#LocalLoad(Ljava/lang/Object;,1)#0
soot.jimple.internal.VariableBox.canContainValue(Lsoot/Value;)Z#Instanceof(Lsoot/Local;)#1
soot.jimple.internal.VariableBox.canContainValue(Lsoot/Value;)Z#Constant(I,0)#2
soot.jimple.internal.VariableBox.canContainValue(Lsoot/Value;)Z#ConditionalBranch(I,ne,10)#3
soot.jimple.internal.VariableBox.canContainValue(Lsoot/Value;)Z#Constant(I,1)#10
soot.jimple.internal.VariableBox.canContainValue(Lsoot/Value;)Z#Return(I)#11
soot.jimple.internal.JAssignStmt$LinkedVariableBox.canContainValue(Lsoot/Value;)Z#Return(I)#7
soot.jimple.internal.VariableBox.<init>(Lsoot/Value;)V#Return(V)#5
soot.jimple.internal.JAssignStmt$LinkedVariableBox.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#6
soot.jimple.internal.JAssignStmt$LinkedVariableBox.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;)V#Constant(L;,null)#7
soot.jimple.internal.JAssignStmt$LinkedVariableBox.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;)V#Put(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt$LinkedVariableBox;,otherBox)#8
soot.jimple.internal.JAssignStmt$LinkedVariableBox.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;)V#Return(V)#9
soot.jimple.internal.JAssignStmt$LinkedVariableBox.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;Lsoot/jimple/internal/JAssignStmt$LinkedVariableBox;)V#Return(V)#4
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#Put(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt;,leftBox)#9
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#10
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#New(Lsoot/jimple/internal/JAssignStmt$LinkedRValueBox;,0)#11
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#Dup(1,0)#12
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#13
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,2)#14
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#Constant(L;,null)#15
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#Invoke(SPECIAL,Lsoot/jimple/internal/JAssignStmt$LinkedRValueBox;,<init>,(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;Lsoot/jimple/internal/JAssignStmt$LinkedRValueBox;)V)#16
soot.jimple.internal.JAssignStmt$LinkedRValueBox.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;Lsoot/jimple/internal/JAssignStmt$LinkedRValueBox;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JAssignStmt$LinkedRValueBox.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;Lsoot/jimple/internal/JAssignStmt$LinkedRValueBox;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.jimple.internal.JAssignStmt$LinkedRValueBox.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;Lsoot/jimple/internal/JAssignStmt$LinkedRValueBox;)V#LocalLoad(Ljava/lang/Object;,2)#2
soot.jimple.internal.JAssignStmt$LinkedRValueBox.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;Lsoot/jimple/internal/JAssignStmt$LinkedRValueBox;)V#Invoke(SPECIAL,Lsoot/jimple/internal/JAssignStmt$LinkedRValueBox;,<init>,(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;)V)#3
soot.jimple.internal.JAssignStmt$LinkedRValueBox.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JAssignStmt$LinkedRValueBox.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.jimple.internal.JAssignStmt$LinkedRValueBox.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;)V#Put(Lsoot/jimple/internal/JAssignStmt;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt$LinkedRValueBox;,this$0)#2
soot.jimple.internal.JAssignStmt$LinkedRValueBox.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.jimple.internal.JAssignStmt$LinkedRValueBox.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,2)#4
soot.jimple.internal.JAssignStmt$LinkedRValueBox.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;)V#Invoke(SPECIAL,Lsoot/jimple/internal/RValueBox;,<init>,(Lsoot/Value;)V)#5
soot.jimple.internal.RValueBox.<init>(Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.RValueBox.<init>(Lsoot/Value;)V#Invoke(SPECIAL,Lsoot/AbstractValueBox;,<init>,()V)#1
soot.jimple.internal.RValueBox.<init>(Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.internal.RValueBox.<init>(Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.jimple.internal.RValueBox.<init>(Lsoot/Value;)V#Invoke(VIRTUAL,Lsoot/jimple/internal/RValueBox;,setValue,(Lsoot/Value;)V)#4
soot.jimple.internal.JAssignStmt$LinkedRValueBox.canContainValue(Lsoot/Value;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JAssignStmt$LinkedRValueBox.canContainValue(Lsoot/Value;)Z#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt$LinkedRValueBox;,otherBox)#1
soot.jimple.internal.JAssignStmt$LinkedRValueBox.canContainValue(Lsoot/Value;)Z#Constant(L;,null)#2
soot.jimple.internal.JAssignStmt$LinkedRValueBox.canContainValue(Lsoot/Value;)Z#ConditionalBranch(Ljava/lang/Object;,ne,8)#3
soot.jimple.internal.JAssignStmt$LinkedRValueBox.canContainValue(Lsoot/Value;)Z#LocalLoad(Ljava/lang/Object;,0)#4
soot.jimple.internal.JAssignStmt$LinkedRValueBox.canContainValue(Lsoot/Value;)Z#LocalLoad(Ljava/lang/Object;,1)#5
soot.jimple.internal.JAssignStmt$LinkedRValueBox.canContainValue(Lsoot/Value;)Z#Invoke(SPECIAL,Lsoot/jimple/internal/RValueBox;,canContainValue,(Lsoot/Value;)Z)#6
soot.jimple.internal.RValueBox.canContainValue(Lsoot/Value;)Z#LocalLoad(Ljava/lang/Object;,1)#0
soot.jimple.internal.RValueBox.canContainValue(Lsoot/Value;)Z#Instanceof(Lsoot/Local;)#1
soot.jimple.internal.RValueBox.canContainValue(Lsoot/Value;)Z#Constant(I,0)#2
soot.jimple.internal.RValueBox.canContainValue(Lsoot/Value;)Z#ConditionalBranch(I,ne,18)#3
soot.jimple.internal.RValueBox.canContainValue(Lsoot/Value;)Z#Constant(I,1)#18
soot.jimple.internal.RValueBox.canContainValue(Lsoot/Value;)Z#Return(I)#19
soot.jimple.internal.JAssignStmt$LinkedRValueBox.canContainValue(Lsoot/Value;)Z#Return(I)#7
soot.jimple.internal.RValueBox.<init>(Lsoot/Value;)V#Return(V)#5
soot.jimple.internal.JAssignStmt$LinkedRValueBox.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#6
soot.jimple.internal.JAssignStmt$LinkedRValueBox.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;)V#Constant(L;,null)#7
soot.jimple.internal.JAssignStmt$LinkedRValueBox.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;)V#Put(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt$LinkedRValueBox;,otherBox)#8
soot.jimple.internal.JAssignStmt$LinkedRValueBox.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;)V#Return(V)#9
soot.jimple.internal.JAssignStmt$LinkedRValueBox.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/Value;Lsoot/jimple/internal/JAssignStmt$LinkedRValueBox;)V#Return(V)#4
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#Put(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt;,rightBox)#17
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#18
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt;,leftBox)#19
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#CheckCast(Lsoot/jimple/internal/JAssignStmt$LinkedVariableBox;)#20
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#21
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt;,rightBox)#22
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#Invoke(VIRTUAL,Lsoot/jimple/internal/JAssignStmt$LinkedVariableBox;,setOtherBox,(Lsoot/ValueBox;)V)#23
soot.jimple.internal.JAssignStmt$LinkedVariableBox.setOtherBox(Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JAssignStmt$LinkedVariableBox.setOtherBox(Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.jimple.internal.JAssignStmt$LinkedVariableBox.setOtherBox(Lsoot/ValueBox;)V#Put(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt$LinkedVariableBox;,otherBox)#2
soot.jimple.internal.JAssignStmt$LinkedVariableBox.setOtherBox(Lsoot/ValueBox;)V#Return(V)#3
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#24
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt;,rightBox)#25
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#CheckCast(Lsoot/jimple/internal/JAssignStmt$LinkedRValueBox;)#26
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#27
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt;,leftBox)#28
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#Invoke(VIRTUAL,Lsoot/jimple/internal/JAssignStmt$LinkedRValueBox;,setOtherBox,(Lsoot/ValueBox;)V)#29
soot.jimple.internal.JAssignStmt$LinkedRValueBox.setOtherBox(Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JAssignStmt$LinkedRValueBox.setOtherBox(Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.jimple.internal.JAssignStmt$LinkedRValueBox.setOtherBox(Lsoot/ValueBox;)V#Put(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt$LinkedRValueBox;,otherBox)#2
soot.jimple.internal.JAssignStmt$LinkedRValueBox.setOtherBox(Lsoot/ValueBox;)V#Return(V)#3
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#30
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt;,leftBox)#31
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,1)#32
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#Invoke(INTERFACE,Lsoot/ValueBox;,canContainValue,(Lsoot/Value;)Z)#33
soot.jimple.internal.JAssignStmt$LinkedVariableBox.canContainValue(Lsoot/Value;)Z#LocalLoad(Ljava/lang/Object;,0)#8
soot.jimple.internal.JAssignStmt$LinkedVariableBox.canContainValue(Lsoot/Value;)Z#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt$LinkedVariableBox;,otherBox)#9
soot.jimple.internal.JAssignStmt$LinkedVariableBox.canContainValue(Lsoot/Value;)Z#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#10
soot.AbstractValueBox.getValue()Lsoot/Value;#LocalLoad(Ljava/lang/Object;,0)#0
soot.AbstractValueBox.getValue()Lsoot/Value;#Get(Lsoot/Value;,NONSTATIC,Lsoot/AbstractValueBox;,value)#1
soot.AbstractValueBox.getValue()Lsoot/Value;#Return(Ljava/lang/Object;)#2
soot.jimple.internal.JAssignStmt$LinkedVariableBox.canContainValue(Lsoot/Value;)Z#LocalStore(Ljava/lang/Object;,2)#11
soot.jimple.internal.JAssignStmt$LinkedVariableBox.canContainValue(Lsoot/Value;)Z#LocalLoad(Ljava/lang/Object;,0)#12
soot.jimple.internal.JAssignStmt$LinkedVariableBox.canContainValue(Lsoot/Value;)Z#LocalLoad(Ljava/lang/Object;,1)#13
soot.jimple.internal.JAssignStmt$LinkedVariableBox.canContainValue(Lsoot/Value;)Z#Invoke(SPECIAL,Lsoot/jimple/internal/VariableBox;,canContainValue,(Lsoot/Value;)Z)#14
soot.jimple.internal.JAssignStmt$LinkedVariableBox.canContainValue(Lsoot/Value;)Z#Constant(I,0)#15
soot.jimple.internal.JAssignStmt$LinkedVariableBox.canContainValue(Lsoot/Value;)Z#ConditionalBranch(I,eq,35)#16
soot.jimple.internal.JAssignStmt$LinkedVariableBox.canContainValue(Lsoot/Value;)Z#LocalLoad(Ljava/lang/Object;,1)#17
soot.jimple.internal.JAssignStmt$LinkedVariableBox.canContainValue(Lsoot/Value;)Z#Instanceof(Lsoot/Local;)#18
soot.jimple.internal.JAssignStmt$LinkedVariableBox.canContainValue(Lsoot/Value;)Z#Constant(I,0)#19
soot.jimple.internal.JAssignStmt$LinkedVariableBox.canContainValue(Lsoot/Value;)Z#ConditionalBranch(I,ne,33)#20
soot.jimple.internal.JAssignStmt$LinkedVariableBox.canContainValue(Lsoot/Value;)Z#Constant(I,1)#33
soot.jimple.internal.JAssignStmt$LinkedVariableBox.canContainValue(Lsoot/Value;)Z#Return(I)#34
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#Constant(I,0)#34
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#ConditionalBranch(I,eq,42)#35
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#36
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt;,rightBox)#37
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,2)#38
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#Invoke(INTERFACE,Lsoot/ValueBox;,canContainValue,(Lsoot/Value;)Z)#39
soot.jimple.internal.JAssignStmt$LinkedRValueBox.canContainValue(Lsoot/Value;)Z#LocalLoad(Ljava/lang/Object;,0)#8
soot.jimple.internal.JAssignStmt$LinkedRValueBox.canContainValue(Lsoot/Value;)Z#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt$LinkedRValueBox;,otherBox)#9
soot.jimple.internal.JAssignStmt$LinkedRValueBox.canContainValue(Lsoot/Value;)Z#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#10
soot.jimple.internal.JAssignStmt$LinkedRValueBox.canContainValue(Lsoot/Value;)Z#LocalStore(Ljava/lang/Object;,2)#11
soot.jimple.internal.JAssignStmt$LinkedRValueBox.canContainValue(Lsoot/Value;)Z#LocalLoad(Ljava/lang/Object;,0)#12
soot.jimple.internal.JAssignStmt$LinkedRValueBox.canContainValue(Lsoot/Value;)Z#LocalLoad(Ljava/lang/Object;,1)#13
soot.jimple.internal.JAssignStmt$LinkedRValueBox.canContainValue(Lsoot/Value;)Z#Invoke(SPECIAL,Lsoot/jimple/internal/RValueBox;,canContainValue,(Lsoot/Value;)Z)#14
soot.jimple.internal.JAssignStmt$LinkedRValueBox.canContainValue(Lsoot/Value;)Z#Constant(I,0)#15
soot.jimple.internal.JAssignStmt$LinkedRValueBox.canContainValue(Lsoot/Value;)Z#ConditionalBranch(I,eq,35)#16
soot.jimple.internal.JAssignStmt$LinkedRValueBox.canContainValue(Lsoot/Value;)Z#LocalLoad(Ljava/lang/Object;,1)#17
soot.jimple.internal.JAssignStmt$LinkedRValueBox.canContainValue(Lsoot/Value;)Z#Instanceof(Lsoot/Local;)#18
soot.jimple.internal.JAssignStmt$LinkedRValueBox.canContainValue(Lsoot/Value;)Z#Constant(I,0)#19
soot.jimple.internal.JAssignStmt$LinkedRValueBox.canContainValue(Lsoot/Value;)Z#ConditionalBranch(I,ne,33)#20
soot.jimple.internal.JAssignStmt$LinkedRValueBox.canContainValue(Lsoot/Value;)Z#Constant(I,1)#33
soot.jimple.internal.JAssignStmt$LinkedRValueBox.canContainValue(Lsoot/Value;)Z#Return(I)#34
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#Constant(I,0)#40
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#ConditionalBranch(I,ne,47)#41
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#47
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#New(Lsoot/util/SingletonList;,0)#48
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#Dup(1,0)#49
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#50
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt;,leftBox)#51
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#Invoke(SPECIAL,Lsoot/util/SingletonList;,<init>,(Ljava/lang/Object;)V)#52
soot.util.SingletonList.<init>(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.SingletonList.<init>(Ljava/lang/Object;)V#Invoke(SPECIAL,Ljava/util/AbstractList;,<init>,()V)#1
soot.util.SingletonList.<init>(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.util.SingletonList.<init>(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.util.SingletonList.<init>(Ljava/lang/Object;)V#Put(Ljava/lang/Object;,NONSTATIC,Lsoot/util/SingletonList;,o)#4
soot.util.SingletonList.<init>(Ljava/lang/Object;)V#Return(V)#5
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt;,defBoxes)#53
soot.jimple.internal.JAssignStmt.<init>(Lsoot/Value;Lsoot/Value;)V#Return(V)#54
soot.jimple.Jimple.newAssignStmt(Lsoot/Value;Lsoot/Value;)Lsoot/jimple/AssignStmt;#Return(Ljava/lang/Object;)#5
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,17)#334
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Goto(4499)#335
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,17)#4499
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(L;,null)#4500
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#ConditionalBranch(Ljava/lang/Object;,eq,4517)#4501
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#4502
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/options/Options;,keep_offset,()Z)#4503
soot.options.Options.keep_offset()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.keep_offset()Z#Get(Z,NONSTATIC,Lsoot/options/Options;,keep_offset)#1
soot.options.Options.keep_offset()Z#Return(I)#2
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(I,0)#4504
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#ConditionalBranch(I,eq,4513)#4505
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,5)#4513
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,17)#4514
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#4515
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Pop(1)#4516
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Return(V)#4517
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Goto(431)#425
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,12)#431
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/List;,isEmpty,()Z)#432
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(I,0)#433
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ConditionalBranch(I,ne,481)#434
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(I,0)#435
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(I,13)#436
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Goto(456)#437
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(I,13)#456
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,12)#457
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#458
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ConditionalBranch(I,lt,438)#459
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,0)#438
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/coffi/CFG;,units)#439
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,12)#440
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(I,13)#441
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#442
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Lsoot/util/Chain;,add,(Ljava/lang/Object;)Z)#443
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Pop(1)#444
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,11)#445
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,12)#446
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(I,13)#447
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#448
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#CheckCast(Lsoot/jimple/Stmt;)#449
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#450
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Pop(1)#451
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(I,13)#452
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(I,1)#453
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#BinaryOp(I,add)#454
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(I,13)#455
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,0)#460
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/coffi/CFG;,instructionToFirstStmt)#461
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,10)#462
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,12)#463
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(I,0)#464
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#465
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#CheckCast(Lsoot/jimple/Stmt;)#466
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#467
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Pop(1)#468
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,0)#469
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/coffi/CFG;,instructionToLastStmt)#470
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,10)#471
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,12)#472
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,12)#473
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#474
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(I,1)#475
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#BinaryOp(I,sub)#476
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#477
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#CheckCast(Lsoot/jimple/Stmt;)#478
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#479
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Pop(1)#480
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,10)#481
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,9)#482
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/BasicBlock;,tail)#483
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ConditionalBranch(Ljava/lang/Object;,ne,486)#484
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,10)#486
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/Instruction;,next)#487
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,10)#488
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Goto(402)#489
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#4043
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#CheckCast(Lsoot/coffi/Instruction_Invokenonvirtual;)#4044
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,19)#4045
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,4)#4046
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,19)#4047
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Get(I,NONSTATIC,Lsoot/coffi/Instruction_Invokenonvirtual;,arg_i)#4048
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/coffi/cp_info;,countParams,([Lsoot/coffi/cp_info;I)I)#4049
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(I,15)#4050
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,4)#4051
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,19)#4052
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Get(I,NONSTATIC,Lsoot/coffi/Instruction_Invokenonvirtual;,arg_i)#4053
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#ArrayLoad(Ljava/lang/Object;)#4054
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#CheckCast(Lsoot/coffi/CONSTANT_Methodref_info;)#4055
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,20)#4056
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#4057
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,4)#4058
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,20)#4059
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(I,0)#4060
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(SPECIAL,Lsoot/coffi/CFG;,createMethodRef,([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;)#4061
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,1)#0
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,2)#1
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#Invoke(INTERFACE,Lsoot/coffi/ICONSTANT_Methodref_info;,getClassIndex,()I)#2
soot.coffi.CONSTANT_Methodref_info.getClassIndex()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.CONSTANT_Methodref_info.getClassIndex()I#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_Methodref_info;,class_index)#1
soot.coffi.CONSTANT_Methodref_info.getClassIndex()I#Return(I)#2
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#ArrayLoad(Ljava/lang/Object;)#3
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#CheckCast(Lsoot/coffi/CONSTANT_Class_info;)#4
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalStore(Ljava/lang/Object;,5)#5
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,1)#6
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,5)#7
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_Class_info;,name_index)#8
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#ArrayLoad(Ljava/lang/Object;)#9
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#CheckCast(Lsoot/coffi/CONSTANT_Utf8_info;)#10
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,convert,()Ljava/lang/String;)#11
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalStore(Ljava/lang/Object;,6)#12
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,6)#13
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#Constant(I,47)#14
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#Constant(I,46)#15
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#Invoke(VIRTUAL,Ljava/lang/String;,replace,(CC)Ljava/lang/String;)#16
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalStore(Ljava/lang/Object;,6)#17
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,1)#18
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,2)#19
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#Invoke(INTERFACE,Lsoot/coffi/ICONSTANT_Methodref_info;,getNameAndTypeIndex,()I)#20
soot.coffi.CONSTANT_Methodref_info.getNameAndTypeIndex()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.CONSTANT_Methodref_info.getNameAndTypeIndex()I#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_Methodref_info;,name_and_type_index)#1
soot.coffi.CONSTANT_Methodref_info.getNameAndTypeIndex()I#Return(I)#2
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#ArrayLoad(Ljava/lang/Object;)#21
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#CheckCast(Lsoot/coffi/CONSTANT_NameAndType_info;)#22
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalStore(Ljava/lang/Object;,7)#23
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,1)#24
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,7)#25
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_NameAndType_info;,name_index)#26
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#ArrayLoad(Ljava/lang/Object;)#27
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#CheckCast(Lsoot/coffi/CONSTANT_Utf8_info;)#28
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,convert,()Ljava/lang/String;)#29
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalStore(Ljava/lang/Object;,8)#30
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,1)#31
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,7)#32
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_NameAndType_info;,descriptor_index)#33
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#ArrayLoad(Ljava/lang/Object;)#34
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#CheckCast(Lsoot/coffi/CONSTANT_Utf8_info;)#35
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,convert,()Ljava/lang/String;)#36
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalStore(Ljava/lang/Object;,9)#37
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,6)#38
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#Constant(I,0)#39
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#40
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#Constant(I,91)#41
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#ConditionalBranch(I,ne,45)#42
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,0)#45
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#Get(Lsoot/Scene;,NONSTATIC,Lsoot/coffi/CFG;,cm)#46
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,6)#47
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#Invoke(VIRTUAL,Lsoot/Scene;,getSootClass,(Ljava/lang/String;)Lsoot/SootClass;)#48
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalStore(Ljava/lang/Object;,10)#49
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#Invoke(STATIC,Lsoot/coffi/Util;,v,()Lsoot/coffi/Util;)#50
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,9)#51
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#Invoke(VIRTUAL,Lsoot/coffi/Util;,jimpleTypesOfFieldOrMethodDescriptor,(Ljava/lang/String;)[Lsoot/Type;)#52
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalStore(Ljava/lang/Object;,13)#53
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#New(Ljava/util/ArrayList;,0)#54
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#Dup(1,0)#55
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#56
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalStore(Ljava/lang/Object;,11)#57
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#Constant(I,0)#58
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalStore(I,14)#59
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#Goto(71)#60
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalLoad(I,14)#71
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,13)#72
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#ArrayLength()#73
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#Constant(I,1)#74
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#BinaryOp(I,sub)#75
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#ConditionalBranch(I,lt,61)#76
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,13)#77
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,13)#78
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#ArrayLength()#79
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#Constant(I,1)#80
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#BinaryOp(I,sub)#81
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#ArrayLoad(Ljava/lang/Object;)#82
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalStore(Ljava/lang/Object;,12)#83
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#84
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,10)#85
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,8)#86
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,11)#87
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,12)#88
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalLoad(I,3)#89
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#Invoke(VIRTUAL,Lsoot/Scene;,makeMethodRef,(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)Lsoot/SootMethodRef;)#90
soot.Scene.makeMethodRef(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)Lsoot/SootMethodRef;#New(Lsoot/SootMethodRefImpl;,0)#0
soot.Scene.makeMethodRef(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)Lsoot/SootMethodRef;#Dup(1,0)#1
soot.Scene.makeMethodRef(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,1)#2
soot.Scene.makeMethodRef(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,2)#3
soot.Scene.makeMethodRef(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,3)#4
soot.Scene.makeMethodRef(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,4)#5
soot.Scene.makeMethodRef(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)Lsoot/SootMethodRef;#LocalLoad(I,5)#6
soot.Scene.makeMethodRef(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)Lsoot/SootMethodRef;#Invoke(SPECIAL,Lsoot/SootMethodRefImpl;,<init>,(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V)#7
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#Put(Lsoot/SootClass;,NONSTATIC,Lsoot/SootMethodRefImpl;,declaringClass)#4
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#LocalLoad(Ljava/lang/Object;,2)#6
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/SootMethodRefImpl;,name)#7
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#New(Ljava/util/ArrayList;,0)#8
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#Dup(1,0)#9
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#10
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#LocalStore(Ljava/lang/Object;,6)#11
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#LocalLoad(Ljava/lang/Object;,6)#12
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#LocalLoad(Ljava/lang/Object;,3)#13
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#Invoke(INTERFACE,Ljava/util/List;,addAll,(Ljava/util/Collection;)Z)#14
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#Pop(1)#15
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#LocalLoad(Ljava/lang/Object;,0)#16
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#LocalLoad(Ljava/lang/Object;,6)#17
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#Invoke(STATIC,Ljava/util/Collections;,unmodifiableList,(Ljava/util/List;)Ljava/util/List;)#18
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/SootMethodRefImpl;,parameterTypes)#19
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#LocalLoad(Ljava/lang/Object;,0)#20
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#LocalLoad(Ljava/lang/Object;,4)#21
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#Put(Lsoot/Type;,NONSTATIC,Lsoot/SootMethodRefImpl;,returnType)#22
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#LocalLoad(Ljava/lang/Object;,0)#23
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#LocalLoad(I,5)#24
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#Put(Z,NONSTATIC,Lsoot/SootMethodRefImpl;,isStatic)#25
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#LocalLoad(Ljava/lang/Object;,1)#26
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#Constant(L;,null)#27
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#ConditionalBranch(Ljava/lang/Object;,ne,34)#28
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#LocalLoad(Ljava/lang/Object;,2)#34
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#Constant(L;,null)#35
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#ConditionalBranch(Ljava/lang/Object;,ne,42)#36
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#LocalLoad(Ljava/lang/Object;,3)#42
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#Constant(L;,null)#43
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#ConditionalBranch(Ljava/lang/Object;,ne,50)#44
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#LocalLoad(Ljava/lang/Object;,4)#50
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#Constant(L;,null)#51
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#ConditionalBranch(Ljava/lang/Object;,ne,58)#52
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#LocalLoad(Ljava/lang/Object;,1)#58
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#Invoke(VIRTUAL,Lsoot/SootClass;,getName,()Ljava/lang/String;)#59
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#Constant(Ljava/lang/String;,"java.dyn.InvokeDynamic")#60
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#61
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#Constant(I,0)#62
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#ConditionalBranch(I,eq,72)#63
soot.SootMethodRefImpl.<init>(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)V#Return(V)#72
soot.Scene.makeMethodRef(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)Lsoot/SootMethodRef;#Return(Ljava/lang/Object;)#8
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalStore(Ljava/lang/Object;,4)#91
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,4)#92
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#Return(Ljava/lang/Object;)#93
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,21)#4062
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,21)#4063
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(INTERFACE,Lsoot/SootMethodRef;,returnType,()Lsoot/Type;)#4064
soot.SootMethodRefImpl.returnType()Lsoot/Type;#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethodRefImpl.returnType()Lsoot/Type;#Get(Lsoot/Type;,NONSTATIC,Lsoot/SootMethodRefImpl;,returnType)#1
soot.SootMethodRefImpl.returnType()Lsoot/Type;#Return(Ljava/lang/Object;)#2
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,22)#4065
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(I,15)#4066
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#New([Lsoot/Value;,1)#4067
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,7)#4068
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(I,15)#4069
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(I,1)#4070
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#BinaryOp(I,sub)#4071
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(I,23)#4072
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Goto(4104)#4073
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(I,23)#4104
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(I,0)#4105
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#ConditionalBranch(I,ge,4074)#4106
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/jimple/Jimple;,v,()Lsoot/jimple/Jimple;)#4107
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/coffi/Util;,v,()Lsoot/coffi/Util;)#4108
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#4109
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Get(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/coffi/CFG;,listBody)#4110
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,2)#4111
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,2)#4112
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,topIndex,()I)#4113
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/Util;,getLocalForStackOp,(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;)#4114
soot.coffi.Util.getLocalCreatingIfNecessary(Lsoot/jimple/JimpleBody;Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,0)#6
soot.coffi.Util.getLocalCreatingIfNecessary(Lsoot/jimple/JimpleBody;Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,1)#7
soot.coffi.Util.getLocalCreatingIfNecessary(Lsoot/jimple/JimpleBody;Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,2)#8
soot.coffi.Util.getLocalCreatingIfNecessary(Lsoot/jimple/JimpleBody;Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#Invoke(VIRTUAL,Lsoot/coffi/Util;,getLocal,(Lsoot/Body;Ljava/lang/String;)Lsoot/Local;)#9
soot.coffi.Util.getLocalCreatingIfNecessary(Lsoot/jimple/JimpleBody;Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#Return(Ljava/lang/Object;)#10
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,21)#4115
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,7)#4116
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Ljava/util/Arrays;,asList,([Ljava/lang/Object;)Ljava/util/List;)#4117
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/jimple/Jimple;,newSpecialInvokeExpr,(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)Lsoot/jimple/SpecialInvokeExpr;)#4118
soot.jimple.Jimple.newSpecialInvokeExpr(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)Lsoot/jimple/SpecialInvokeExpr;#New(Lsoot/jimple/internal/JSpecialInvokeExpr;,0)#0
soot.jimple.Jimple.newSpecialInvokeExpr(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)Lsoot/jimple/SpecialInvokeExpr;#Dup(1,0)#1
soot.jimple.Jimple.newSpecialInvokeExpr(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)Lsoot/jimple/SpecialInvokeExpr;#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.Jimple.newSpecialInvokeExpr(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)Lsoot/jimple/SpecialInvokeExpr;#LocalLoad(Ljava/lang/Object;,2)#3
soot.jimple.Jimple.newSpecialInvokeExpr(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)Lsoot/jimple/SpecialInvokeExpr;#LocalLoad(Ljava/lang/Object;,3)#4
soot.jimple.Jimple.newSpecialInvokeExpr(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)Lsoot/jimple/SpecialInvokeExpr;#Invoke(SPECIAL,Lsoot/jimple/internal/JSpecialInvokeExpr;,<init>,(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)V)#5
soot.jimple.internal.JSpecialInvokeExpr.<init>(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JSpecialInvokeExpr.<init>(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)V#Invoke(STATIC,Lsoot/jimple/Jimple;,v,()Lsoot/jimple/Jimple;)#1
soot.jimple.internal.JSpecialInvokeExpr.<init>(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.internal.JSpecialInvokeExpr.<init>(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/jimple/Jimple;,newLocalBox,(Lsoot/Value;)Lsoot/ValueBox;)#3
soot.jimple.internal.JSpecialInvokeExpr.<init>(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#4
soot.jimple.internal.JSpecialInvokeExpr.<init>(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#5
soot.jimple.internal.JSpecialInvokeExpr.<init>(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#6
soot.jimple.internal.JSpecialInvokeExpr.<init>(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)V#New([Lsoot/jimple/internal/ImmediateBox;,1)#7
soot.jimple.internal.JSpecialInvokeExpr.<init>(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)V#Invoke(SPECIAL,Lsoot/jimple/internal/AbstractSpecialInvokeExpr;,<init>,(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V)#8
soot.jimple.internal.AbstractSpecialInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.AbstractSpecialInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#Invoke(SPECIAL,Lsoot/jimple/internal/AbstractInstanceInvokeExpr;,<init>,()V)#1
soot.jimple.internal.AbstractInstanceInvokeExpr.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.AbstractInstanceInvokeExpr.<init>()V#Invoke(SPECIAL,Lsoot/jimple/internal/AbstractInvokeExpr;,<init>,()V)#1
soot.jimple.internal.AbstractInvokeExpr.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.AbstractInvokeExpr.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.jimple.internal.AbstractInvokeExpr.<init>()V#Return(V)#2
soot.jimple.internal.AbstractInstanceInvokeExpr.<init>()V#Return(V)#2
soot.jimple.internal.AbstractSpecialInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,2)#2
soot.jimple.internal.AbstractSpecialInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#Invoke(INTERFACE,Lsoot/SootMethodRef;,isStatic,()Z)#3
soot.SootMethodRefImpl.isStatic()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethodRefImpl.isStatic()Z#Get(Z,NONSTATIC,Lsoot/SootMethodRefImpl;,isStatic)#1
soot.SootMethodRefImpl.isStatic()Z#Return(I)#2
soot.jimple.internal.AbstractSpecialInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#Constant(I,0)#4
soot.jimple.internal.AbstractSpecialInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#ConditionalBranch(I,eq,11)#5
soot.jimple.internal.AbstractSpecialInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.jimple.internal.AbstractSpecialInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,1)#12
soot.jimple.internal.AbstractSpecialInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#Put(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/AbstractSpecialInvokeExpr;,baseBox)#13
soot.jimple.internal.AbstractSpecialInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,0)#14
soot.jimple.internal.AbstractSpecialInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,2)#15
soot.jimple.internal.AbstractSpecialInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#Put(Lsoot/SootMethodRef;,NONSTATIC,Lsoot/jimple/internal/AbstractSpecialInvokeExpr;,methodRef)#16
soot.jimple.internal.AbstractSpecialInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,0)#17
soot.jimple.internal.AbstractSpecialInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,3)#18
soot.jimple.internal.AbstractSpecialInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#Put([Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/AbstractSpecialInvokeExpr;,argBoxes)#19
soot.jimple.internal.AbstractSpecialInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#Return(V)#20
soot.jimple.internal.JSpecialInvokeExpr.<init>(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)V#Constant(I,0)#9
soot.jimple.internal.JSpecialInvokeExpr.<init>(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalStore(I,4)#10
soot.jimple.internal.JSpecialInvokeExpr.<init>(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)V#Goto(26)#11
soot.jimple.internal.JSpecialInvokeExpr.<init>(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalLoad(I,4)#26
soot.jimple.internal.JSpecialInvokeExpr.<init>(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#27
soot.jimple.internal.JSpecialInvokeExpr.<init>(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#28
soot.jimple.internal.JSpecialInvokeExpr.<init>(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)V#ConditionalBranch(I,lt,12)#29
soot.jimple.internal.JSpecialInvokeExpr.<init>(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)V#Return(V)#30
soot.jimple.Jimple.newSpecialInvokeExpr(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)Lsoot/jimple/SpecialInvokeExpr;#Return(Ljava/lang/Object;)#6
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,16)#4119
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,22)#4120
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/VoidType;,v,()Lsoot/VoidType;)#4121
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#4122
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(I,0)#4123
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#ConditionalBranch(I,ne,4137)#4124
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/jimple/Jimple;,v,()Lsoot/jimple/Jimple;)#4137
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,16)#4138
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/jimple/Jimple;,newInvokeStmt,(Lsoot/Value;)Lsoot/jimple/InvokeStmt;)#4139
soot.jimple.Jimple.newInvokeStmt(Lsoot/Value;)Lsoot/jimple/InvokeStmt;#New(Lsoot/jimple/internal/JInvokeStmt;,0)#0
soot.jimple.Jimple.newInvokeStmt(Lsoot/Value;)Lsoot/jimple/InvokeStmt;#Dup(1,0)#1
soot.jimple.Jimple.newInvokeStmt(Lsoot/Value;)Lsoot/jimple/InvokeStmt;#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.Jimple.newInvokeStmt(Lsoot/Value;)Lsoot/jimple/InvokeStmt;#Invoke(SPECIAL,Lsoot/jimple/internal/JInvokeStmt;,<init>,(Lsoot/Value;)V)#3
soot.jimple.internal.JInvokeStmt.<init>(Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JInvokeStmt.<init>(Lsoot/Value;)V#Invoke(STATIC,Lsoot/jimple/Jimple;,v,()Lsoot/jimple/Jimple;)#1
soot.jimple.internal.JInvokeStmt.<init>(Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.internal.JInvokeStmt.<init>(Lsoot/Value;)V#Invoke(VIRTUAL,Lsoot/jimple/Jimple;,newInvokeExprBox,(Lsoot/Value;)Lsoot/ValueBox;)#3
soot.jimple.Jimple.newInvokeExprBox(Lsoot/Value;)Lsoot/ValueBox;#New(Lsoot/jimple/internal/InvokeExprBox;,0)#0
soot.jimple.Jimple.newInvokeExprBox(Lsoot/Value;)Lsoot/ValueBox;#Dup(1,0)#1
soot.jimple.Jimple.newInvokeExprBox(Lsoot/Value;)Lsoot/ValueBox;#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.Jimple.newInvokeExprBox(Lsoot/Value;)Lsoot/ValueBox;#Invoke(SPECIAL,Lsoot/jimple/internal/InvokeExprBox;,<init>,(Lsoot/Value;)V)#3
soot.jimple.internal.InvokeExprBox.<init>(Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.InvokeExprBox.<init>(Lsoot/Value;)V#Invoke(SPECIAL,Lsoot/AbstractValueBox;,<init>,()V)#1
soot.jimple.internal.InvokeExprBox.<init>(Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.internal.InvokeExprBox.<init>(Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.jimple.internal.InvokeExprBox.<init>(Lsoot/Value;)V#Invoke(VIRTUAL,Lsoot/jimple/internal/InvokeExprBox;,setValue,(Lsoot/Value;)V)#4
soot.jimple.internal.InvokeExprBox.canContainValue(Lsoot/Value;)Z#LocalLoad(Ljava/lang/Object;,1)#0
soot.jimple.internal.InvokeExprBox.canContainValue(Lsoot/Value;)Z#Instanceof(Lsoot/jimple/InvokeExpr;)#1
soot.jimple.internal.InvokeExprBox.canContainValue(Lsoot/Value;)Z#Return(I)#2
soot.jimple.internal.InvokeExprBox.<init>(Lsoot/Value;)V#Return(V)#5
soot.jimple.Jimple.newInvokeExprBox(Lsoot/Value;)Lsoot/ValueBox;#Return(Ljava/lang/Object;)#4
soot.jimple.internal.JInvokeStmt.<init>(Lsoot/Value;)V#Invoke(SPECIAL,Lsoot/jimple/internal/JInvokeStmt;,<init>,(Lsoot/ValueBox;)V)#4
soot.jimple.internal.JInvokeStmt.<init>(Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JInvokeStmt.<init>(Lsoot/ValueBox;)V#Invoke(SPECIAL,Lsoot/jimple/internal/AbstractStmt;,<init>,()V)#1
soot.jimple.internal.JInvokeStmt.<init>(Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.internal.JInvokeStmt.<init>(Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.jimple.internal.JInvokeStmt.<init>(Lsoot/ValueBox;)V#Put(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/JInvokeStmt;,invokeExprBox)#4
soot.jimple.internal.JInvokeStmt.<init>(Lsoot/ValueBox;)V#Return(V)#5
soot.jimple.internal.JInvokeStmt.<init>(Lsoot/Value;)V#Return(V)#5
soot.jimple.Jimple.newInvokeStmt(Lsoot/Value;)Lsoot/jimple/InvokeStmt;#Return(Ljava/lang/Object;)#4
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,17)#4140
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Goto(4499)#4141
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/jimple/Jimple;,v,()Lsoot/jimple/Jimple;)#3279
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/jimple/Jimple;,newReturnVoidStmt,()Lsoot/jimple/ReturnVoidStmt;)#3280
soot.jimple.Jimple.newReturnVoidStmt()Lsoot/jimple/ReturnVoidStmt;#New(Lsoot/jimple/internal/JReturnVoidStmt;,0)#0
soot.jimple.Jimple.newReturnVoidStmt()Lsoot/jimple/ReturnVoidStmt;#Dup(1,0)#1
soot.jimple.Jimple.newReturnVoidStmt()Lsoot/jimple/ReturnVoidStmt;#Invoke(SPECIAL,Lsoot/jimple/internal/JReturnVoidStmt;,<init>,()V)#2
soot.jimple.internal.JReturnVoidStmt.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JReturnVoidStmt.<init>()V#Invoke(SPECIAL,Lsoot/jimple/internal/AbstractStmt;,<init>,()V)#1
soot.jimple.internal.JReturnVoidStmt.<init>()V#Return(V)#2
soot.jimple.Jimple.newReturnVoidStmt()Lsoot/jimple/ReturnVoidStmt;#Return(Ljava/lang/Object;)#3
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,17)#3281
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Goto(4499)#3282
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Goto(490)#485
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,9)#490
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Get(Lsoot/coffi/BasicBlock;,NONSTATIC,Lsoot/coffi/BasicBlock;,next)#491
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,9)#492
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,0)#496
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(VIRTUAL,Lsoot/coffi/CFG;,jimpleTargetFixup,()V)#497
soot.coffi.CFG.jimpleTargetFixup()V#New(Lsoot/coffi/BBQ;,0)#0
soot.coffi.CFG.jimpleTargetFixup()V#Dup(1,0)#1
soot.coffi.CFG.jimpleTargetFixup()V#Invoke(SPECIAL,Lsoot/coffi/BBQ;,<init>,()V)#2
soot.coffi.BBQ.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.BBQ.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.coffi.BBQ.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
soot.coffi.BBQ.<init>()V#New(Ljava/util/ArrayList;,0)#3
soot.coffi.BBQ.<init>()V#Dup(1,0)#4
soot.coffi.BBQ.<init>()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#5
soot.coffi.BBQ.<init>()V#Put(Ljava/util/ArrayList;,NONSTATIC,Lsoot/coffi/BBQ;,q)#6
soot.coffi.BBQ.<init>()V#Return(V)#7
soot.coffi.CFG.jimpleTargetFixup()V#LocalStore(Ljava/lang/Object;,2)#3
soot.coffi.CFG.jimpleTargetFixup()V#LocalLoad(Ljava/lang/Object;,0)#4
soot.coffi.CFG.jimpleTargetFixup()V#Get(Lsoot/coffi/method_info;,NONSTATIC,Lsoot/coffi/CFG;,method)#5
soot.coffi.CFG.jimpleTargetFixup()V#Invoke(VIRTUAL,Lsoot/coffi/method_info;,locate_code_attribute,()Lsoot/coffi/Code_attribute;)#6
soot.coffi.CFG.jimpleTargetFixup()V#LocalStore(Ljava/lang/Object;,3)#7
soot.coffi.CFG.jimpleTargetFixup()V#LocalLoad(Ljava/lang/Object;,3)#8
soot.coffi.CFG.jimpleTargetFixup()V#Constant(L;,null)#9
soot.coffi.CFG.jimpleTargetFixup()V#ConditionalBranch(Ljava/lang/Object;,ne,12)#10
soot.coffi.CFG.jimpleTargetFixup()V#LocalLoad(Ljava/lang/Object;,0)#12
soot.coffi.CFG.jimpleTargetFixup()V#Get(Lsoot/coffi/BasicBlock;,NONSTATIC,Lsoot/coffi/CFG;,cfg)#13
soot.coffi.CFG.jimpleTargetFixup()V#LocalStore(Ljava/lang/Object;,4)#14
soot.coffi.CFG.jimpleTargetFixup()V#Goto(22)#15
soot.coffi.CFG.jimpleTargetFixup()V#LocalLoad(Ljava/lang/Object;,4)#22
soot.coffi.CFG.jimpleTargetFixup()V#Constant(L;,null)#23
soot.coffi.CFG.jimpleTargetFixup()V#ConditionalBranch(Ljava/lang/Object;,ne,16)#24
soot.coffi.CFG.jimpleTargetFixup()V#LocalLoad(Ljava/lang/Object;,4)#16
soot.coffi.CFG.jimpleTargetFixup()V#Constant(I,1)#17
soot.coffi.CFG.jimpleTargetFixup()V#Put(Z,NONSTATIC,Lsoot/coffi/BasicBlock;,done)#18
soot.coffi.CFG.jimpleTargetFixup()V#LocalLoad(Ljava/lang/Object;,4)#19
soot.coffi.CFG.jimpleTargetFixup()V#Get(Lsoot/coffi/BasicBlock;,NONSTATIC,Lsoot/coffi/BasicBlock;,next)#20
soot.coffi.CFG.jimpleTargetFixup()V#LocalStore(Ljava/lang/Object;,4)#21
soot.coffi.CFG.jimpleTargetFixup()V#LocalLoad(Ljava/lang/Object;,2)#25
soot.coffi.CFG.jimpleTargetFixup()V#LocalLoad(Ljava/lang/Object;,0)#26
soot.coffi.CFG.jimpleTargetFixup()V#Get(Lsoot/coffi/BasicBlock;,NONSTATIC,Lsoot/coffi/CFG;,cfg)#27
soot.coffi.CFG.jimpleTargetFixup()V#Invoke(VIRTUAL,Lsoot/coffi/BBQ;,push,(Lsoot/coffi/BasicBlock;)V)#28
soot.coffi.BBQ.push(Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.coffi.BBQ.push(Lsoot/coffi/BasicBlock;)V#Get(Z,NONSTATIC,Lsoot/coffi/BasicBlock;,inq)#1
soot.coffi.BBQ.push(Lsoot/coffi/BasicBlock;)V#Constant(I,0)#2
soot.coffi.BBQ.push(Lsoot/coffi/BasicBlock;)V#ConditionalBranch(I,ne,12)#3
soot.coffi.BBQ.push(Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#4
soot.coffi.BBQ.push(Lsoot/coffi/BasicBlock;)V#Constant(I,1)#5
soot.coffi.BBQ.push(Lsoot/coffi/BasicBlock;)V#Put(Z,NONSTATIC,Lsoot/coffi/BasicBlock;,inq)#6
soot.coffi.BBQ.push(Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#7
soot.coffi.BBQ.push(Lsoot/coffi/BasicBlock;)V#Get(Ljava/util/ArrayList;,NONSTATIC,Lsoot/coffi/BBQ;,q)#8
soot.coffi.BBQ.push(Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#9
soot.coffi.BBQ.push(Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#10
soot.coffi.BBQ.push(Lsoot/coffi/BasicBlock;)V#Pop(1)#11
soot.coffi.BBQ.push(Lsoot/coffi/BasicBlock;)V#Return(V)#12
soot.coffi.CFG.jimpleTargetFixup()V#LocalLoad(Ljava/lang/Object;,0)#29
soot.coffi.CFG.jimpleTargetFixup()V#LocalLoad(Ljava/lang/Object;,2)#30
soot.coffi.CFG.jimpleTargetFixup()V#Invoke(SPECIAL,Lsoot/coffi/CFG;,processTargetFixup,(Lsoot/coffi/BBQ;)V)#31
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#Goto(219)#0
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#LocalLoad(Ljava/lang/Object;,1)#219
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#Invoke(VIRTUAL,Lsoot/coffi/BBQ;,isEmpty,()Z)#220
soot.coffi.BBQ.isEmpty()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.BBQ.isEmpty()Z#Get(Ljava/util/ArrayList;,NONSTATIC,Lsoot/coffi/BBQ;,q)#1
soot.coffi.BBQ.isEmpty()Z#Invoke(VIRTUAL,Ljava/util/ArrayList;,isEmpty,()Z)#2
soot.coffi.BBQ.isEmpty()Z#Return(I)#3
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#Constant(I,0)#221
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#ConditionalBranch(I,eq,1)#222
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#Invoke(VIRTUAL,Lsoot/coffi/BBQ;,pull,()Lsoot/coffi/BasicBlock;)#2
soot.coffi.BBQ.pull()Lsoot/coffi/BasicBlock;#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.BBQ.pull()Lsoot/coffi/BasicBlock;#Get(Ljava/util/ArrayList;,NONSTATIC,Lsoot/coffi/BBQ;,q)#1
soot.coffi.BBQ.pull()Lsoot/coffi/BasicBlock;#Invoke(VIRTUAL,Ljava/util/ArrayList;,size,()I)#2
soot.coffi.BBQ.pull()Lsoot/coffi/BasicBlock;#Constant(I,0)#3
soot.coffi.BBQ.pull()Lsoot/coffi/BasicBlock;#ConditionalBranch(I,ne,10)#4
soot.coffi.BBQ.pull()Lsoot/coffi/BasicBlock;#LocalLoad(Ljava/lang/Object;,0)#10
soot.coffi.BBQ.pull()Lsoot/coffi/BasicBlock;#Get(Ljava/util/ArrayList;,NONSTATIC,Lsoot/coffi/BBQ;,q)#11
soot.coffi.BBQ.pull()Lsoot/coffi/BasicBlock;#Constant(I,0)#12
soot.coffi.BBQ.pull()Lsoot/coffi/BasicBlock;#Invoke(VIRTUAL,Ljava/util/ArrayList;,get,(I)Ljava/lang/Object;)#13
soot.coffi.BBQ.pull()Lsoot/coffi/BasicBlock;#CheckCast(Lsoot/coffi/BasicBlock;)#14
soot.coffi.BBQ.pull()Lsoot/coffi/BasicBlock;#LocalStore(Ljava/lang/Object;,1)#15
soot.coffi.BBQ.pull()Lsoot/coffi/BasicBlock;#LocalLoad(Ljava/lang/Object;,0)#16
soot.coffi.BBQ.pull()Lsoot/coffi/BasicBlock;#Get(Ljava/util/ArrayList;,NONSTATIC,Lsoot/coffi/BBQ;,q)#17
soot.coffi.BBQ.pull()Lsoot/coffi/BasicBlock;#Constant(I,0)#18
soot.coffi.BBQ.pull()Lsoot/coffi/BasicBlock;#Invoke(VIRTUAL,Ljava/util/ArrayList;,remove,(I)Ljava/lang/Object;)#19
soot.coffi.BBQ.pull()Lsoot/coffi/BasicBlock;#Pop(1)#20
soot.coffi.BBQ.pull()Lsoot/coffi/BasicBlock;#LocalLoad(Ljava/lang/Object;,1)#21
soot.coffi.BBQ.pull()Lsoot/coffi/BasicBlock;#Constant(I,0)#22
soot.coffi.BBQ.pull()Lsoot/coffi/BasicBlock;#Put(Z,NONSTATIC,Lsoot/coffi/BasicBlock;,inq)#23
soot.coffi.BBQ.pull()Lsoot/coffi/BasicBlock;#LocalLoad(Ljava/lang/Object;,1)#24
soot.coffi.BBQ.pull()Lsoot/coffi/BasicBlock;#Return(Ljava/lang/Object;)#25
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#LocalStore(Ljava/lang/Object;,2)#3
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#Goto(7)#4
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#LocalLoad(Ljava/lang/Object;,2)#7
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#Invoke(VIRTUAL,Lsoot/coffi/BasicBlock;,getTailJStmt,()Lsoot/jimple/Stmt;)#8
soot.coffi.BasicBlock.getTailJStmt()Lsoot/jimple/Stmt;#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.BasicBlock.getTailJStmt()Lsoot/jimple/Stmt;#Get(Ljava/util/List;,NONSTATIC,Lsoot/coffi/BasicBlock;,statements)#1
soot.coffi.BasicBlock.getTailJStmt()Lsoot/jimple/Stmt;#LocalLoad(Ljava/lang/Object;,0)#2
soot.coffi.BasicBlock.getTailJStmt()Lsoot/jimple/Stmt;#Get(Ljava/util/List;,NONSTATIC,Lsoot/coffi/BasicBlock;,statements)#3
soot.coffi.BasicBlock.getTailJStmt()Lsoot/jimple/Stmt;#Invoke(INTERFACE,Ljava/util/List;,size,()I)#4
soot.coffi.BasicBlock.getTailJStmt()Lsoot/jimple/Stmt;#Constant(I,1)#5
soot.coffi.BasicBlock.getTailJStmt()Lsoot/jimple/Stmt;#BinaryOp(I,sub)#6
soot.coffi.BasicBlock.getTailJStmt()Lsoot/jimple/Stmt;#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#7
soot.coffi.BasicBlock.getTailJStmt()Lsoot/jimple/Stmt;#CheckCast(Lsoot/jimple/Stmt;)#8
soot.coffi.BasicBlock.getTailJStmt()Lsoot/jimple/Stmt;#Return(Ljava/lang/Object;)#9
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#LocalStore(Ljava/lang/Object;,4)#9
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#LocalLoad(Ljava/lang/Object;,4)#10
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#Instanceof(Lsoot/jimple/GotoStmt;)#11
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#Constant(I,0)#12
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#ConditionalBranch(I,eq,69)#13
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#LocalLoad(Ljava/lang/Object;,4)#69
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#Instanceof(Lsoot/jimple/IfStmt;)#70
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#Constant(I,0)#71
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#ConditionalBranch(I,eq,107)#72
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#LocalLoad(Ljava/lang/Object;,4)#107
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#Instanceof(Lsoot/jimple/TableSwitchStmt;)#108
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#Constant(I,0)#109
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#ConditionalBranch(I,eq,151)#110
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#LocalLoad(Ljava/lang/Object;,4)#151
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#Instanceof(Lsoot/jimple/LookupSwitchStmt;)#152
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#Constant(I,0)#153
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#ConditionalBranch(I,eq,194)#154
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#LocalLoad(Ljava/lang/Object;,2)#194
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#Constant(I,0)#195
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#Put(Z,NONSTATIC,Lsoot/coffi/BasicBlock;,done)#196
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#LocalLoad(Ljava/lang/Object;,2)#197
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#Get(Ljava/util/Vector;,NONSTATIC,Lsoot/coffi/BasicBlock;,succ)#198
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#Invoke(VIRTUAL,Ljava/util/Vector;,iterator,()Ljava/util/Iterator;)#199
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#LocalStore(Ljava/lang/Object;,6)#200
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#Goto(215)#201
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#LocalLoad(Ljava/lang/Object;,6)#215
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#216
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#Constant(I,0)#217
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#ConditionalBranch(I,ne,202)#218
soot.coffi.CFG.processTargetFixup(Lsoot/coffi/BBQ;)V#Return(V)#223
soot.coffi.CFG.jimpleTargetFixup()V#LocalLoad(Ljava/lang/Object;,2)#32
soot.coffi.CFG.jimpleTargetFixup()V#Invoke(VIRTUAL,Lsoot/coffi/BBQ;,isEmpty,()Z)#33
soot.coffi.CFG.jimpleTargetFixup()V#Constant(I,0)#34
soot.coffi.CFG.jimpleTargetFixup()V#ConditionalBranch(I,eq,75)#35
soot.coffi.CFG.jimpleTargetFixup()V#Constant(I,0)#36
soot.coffi.CFG.jimpleTargetFixup()V#LocalStore(I,4)#37
soot.coffi.CFG.jimpleTargetFixup()V#Goto(71)#38
soot.coffi.CFG.jimpleTargetFixup()V#LocalLoad(I,4)#71
soot.coffi.CFG.jimpleTargetFixup()V#LocalLoad(Ljava/lang/Object;,3)#72
soot.coffi.CFG.jimpleTargetFixup()V#Get(I,NONSTATIC,Lsoot/coffi/Code_attribute;,exception_table_length)#73
soot.coffi.CFG.jimpleTargetFixup()V#ConditionalBranch(I,lt,39)#74
soot.coffi.CFG.jimpleTargetFixup()V#Return(V)#75
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#New(Ljava/util/HashMap;,0)#498
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Dup(1,0)#499
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#500
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,9)#501
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(I,0)#502
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(I,10)#503
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Goto(716)#504
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(I,10)#716
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,3)#717
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Get(I,NONSTATIC,Lsoot/coffi/Code_attribute;,exception_table_length)#718
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ConditionalBranch(I,lt,505)#719
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#720
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(VIRTUAL,Lsoot/options/Options;,keep_line_number,()Z)#721
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(I,0)#722
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ConditionalBranch(I,eq,901)#723
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#New(Ljava/util/HashMap;,0)#724
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Dup(1,0)#725
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#726
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,9)#727
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#New(Ljava/util/LinkedList;,0)#728
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Dup(1,0)#729
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#730
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,10)#731
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,3)#732
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Get([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/Code_attribute;,attributes)#733
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,11)#734
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,11)#735
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Dup(1,0)#736
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,15)#737
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ArrayLength()#738
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(I,14)#739
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(I,0)#740
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(I,13)#741
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Goto(803)#742
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(I,13)#803
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(I,14)#804
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ConditionalBranch(I,lt,743)#805
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,15)#743
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(I,13)#744
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ArrayLoad(Ljava/lang/Object;)#745
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,12)#746
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,12)#747
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Instanceof(Lsoot/coffi/LineNumberTable_attribute;)#748
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(I,0)#749
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ConditionalBranch(I,eq,799)#750
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,12)#751
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#CheckCast(Lsoot/coffi/LineNumberTable_attribute;)#752
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,16)#753
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,16)#754
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Get([Lsoot/coffi/line_number_table_entry;,NONSTATIC,Lsoot/coffi/LineNumberTable_attribute;,line_number_table)#755
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Dup(1,0)#756
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,20)#757
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ArrayLength()#758
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(I,19)#759
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(I,0)#760
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(I,18)#761
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Goto(796)#762
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(I,18)#796
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(I,19)#797
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ConditionalBranch(I,lt,763)#798
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,20)#763
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(I,18)#764
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ArrayLoad(Ljava/lang/Object;)#765
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,17)#766
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,0)#767
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/coffi/CFG;,instructionToFirstStmt)#768
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,17)#769
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Get(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/line_number_table_entry;,start_inst)#770
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#771
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#CheckCast(Lsoot/jimple/Stmt;)#772
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,21)#773
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,21)#774
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(L;,null)#775
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ConditionalBranch(Ljava/lang/Object;,eq,792)#776
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#New(Lsoot/tagkit/LineNumberTag;,0)#777
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Dup(1,0)#778
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,17)#779
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Get(I,NONSTATIC,Lsoot/coffi/line_number_table_entry;,line_number)#780
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(SPECIAL,Lsoot/tagkit/LineNumberTag;,<init>,(I)V)#781
soot.tagkit.LineNumberTag.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.tagkit.LineNumberTag.<init>(I)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.tagkit.LineNumberTag.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.tagkit.LineNumberTag.<init>(I)V#LocalLoad(I,1)#3
soot.tagkit.LineNumberTag.<init>(I)V#Put(I,NONSTATIC,Lsoot/tagkit/LineNumberTag;,line_number)#4
soot.tagkit.LineNumberTag.<init>(I)V#Return(V)#5
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,22)#782
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,9)#783
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,21)#784
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,22)#785
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(VIRTUAL,Ljava/util/HashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#786
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Pop(1)#787
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,10)#788
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,21)#789
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,add,(Ljava/lang/Object;)Z)#790
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Pop(1)#791
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(I,18)#792
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(I,1)#793
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#BinaryOp(I,add)#794
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(I,18)#795
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(I,13)#799
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(I,1)#800
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#BinaryOp(I,add)#801
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(I,13)#802
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#New(Ljava/util/ArrayList;,0)#806
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Dup(1,0)#807
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,9)#808
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(VIRTUAL,Ljava/util/HashMap;,keySet,()Ljava/util/Set;)#809
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,(Ljava/util/Collection;)V)#810
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(VIRTUAL,Ljava/util/ArrayList;,iterator,()Ljava/util/Iterator;)#811
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,12)#812
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Goto(849)#813
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,12)#849
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#850
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(I,0)#851
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ConditionalBranch(I,ne,814)#852
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,12)#814
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#815
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#CheckCast(Lsoot/jimple/Stmt;)#816
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,13)#817
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,13)#818
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,14)#819
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,9)#820
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,13)#821
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(VIRTUAL,Ljava/util/HashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#822
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#CheckCast(Lsoot/tagkit/Tag;)#823
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,15)#824
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,0)#825
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/coffi/CFG;,units)#826
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,14)#827
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Lsoot/util/Chain;,getPredOf,(Ljava/lang/Object;)Ljava/lang/Object;)#828
soot.PatchingChain.getPredOf(Ljava/lang/Object;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#0
soot.PatchingChain.getPredOf(Ljava/lang/Object;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,1)#1
soot.PatchingChain.getPredOf(Ljava/lang/Object;)Ljava/lang/Object;#CheckCast(Lsoot/Unit;)#2
soot.PatchingChain.getPredOf(Ljava/lang/Object;)Ljava/lang/Object;#Invoke(VIRTUAL,Lsoot/PatchingChain;,getPredOf,(Lsoot/Unit;)Lsoot/Unit;)#3
soot.PatchingChain.getPredOf(Lsoot/Unit;)Lsoot/Unit;#LocalLoad(Ljava/lang/Object;,0)#0
soot.PatchingChain.getPredOf(Lsoot/Unit;)Lsoot/Unit;#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/PatchingChain;,innerChain)#1
soot.PatchingChain.getPredOf(Lsoot/Unit;)Lsoot/Unit;#LocalLoad(Ljava/lang/Object;,1)#2
soot.PatchingChain.getPredOf(Lsoot/Unit;)Lsoot/Unit;#Invoke(INTERFACE,Lsoot/util/Chain;,getPredOf,(Ljava/lang/Object;)Ljava/lang/Object;)#3
soot.util.HashChain.getPredOf(Ljava/lang/Object;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.HashChain.getPredOf(Ljava/lang/Object;)Ljava/lang/Object;#Get(Ljava/util/HashMap;,NONSTATIC,Lsoot/util/HashChain;,map)#1
soot.util.HashChain.getPredOf(Ljava/lang/Object;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,1)#2
soot.util.HashChain.getPredOf(Ljava/lang/Object;)Ljava/lang/Object;#Invoke(VIRTUAL,Ljava/util/HashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
soot.util.HashChain.getPredOf(Ljava/lang/Object;)Ljava/lang/Object;#CheckCast(Lsoot/util/HashChain$Link;)#4
soot.util.HashChain.getPredOf(Ljava/lang/Object;)Ljava/lang/Object;#LocalStore(Ljava/lang/Object;,2)#5
soot.util.HashChain.getPredOf(Ljava/lang/Object;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,1)#6
soot.util.HashChain.getPredOf(Ljava/lang/Object;)Ljava/lang/Object;#Constant(L;,null)#7
soot.util.HashChain.getPredOf(Ljava/lang/Object;)Ljava/lang/Object;#ConditionalBranch(Ljava/lang/Object;,ne,14)#8
soot.util.HashChain.getPredOf(Ljava/lang/Object;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,2)#14
soot.util.HashChain.getPredOf(Ljava/lang/Object;)Ljava/lang/Object;#Invoke(VIRTUAL,Lsoot/util/HashChain$Link;,getPrevious,()Lsoot/util/HashChain$Link;)#15
soot.util.HashChain$Link.getPrevious()Lsoot/util/HashChain$Link;#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.HashChain$Link.getPrevious()Lsoot/util/HashChain$Link;#Get(Lsoot/util/HashChain$Link;,NONSTATIC,Lsoot/util/HashChain$Link;,previousLink)#1
soot.util.HashChain$Link.getPrevious()Lsoot/util/HashChain$Link;#Return(Ljava/lang/Object;)#2
soot.util.HashChain.getPredOf(Ljava/lang/Object;)Ljava/lang/Object;#LocalStore(Ljava/lang/Object;,2)#16
soot.util.HashChain.getPredOf(Ljava/lang/Object;)Ljava/lang/Object;#Goto(23)#17
soot.util.HashChain.getPredOf(Ljava/lang/Object;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,2)#23
soot.util.HashChain.getPredOf(Ljava/lang/Object;)Ljava/lang/Object;#Constant(L;,null)#24
soot.util.HashChain.getPredOf(Ljava/lang/Object;)Ljava/lang/Object;#ConditionalBranch(Ljava/lang/Object;,ne,28)#25
soot.util.HashChain.getPredOf(Ljava/lang/Object;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,2)#28
soot.util.HashChain.getPredOf(Ljava/lang/Object;)Ljava/lang/Object;#Invoke(VIRTUAL,Lsoot/util/HashChain$Link;,getItem,()Ljava/lang/Object;)#29
soot.util.HashChain.getPredOf(Ljava/lang/Object;)Ljava/lang/Object;#Return(Ljava/lang/Object;)#30
soot.PatchingChain.getPredOf(Lsoot/Unit;)Lsoot/Unit;#CheckCast(Lsoot/Unit;)#4
soot.PatchingChain.getPredOf(Lsoot/Unit;)Lsoot/Unit;#Return(Ljava/lang/Object;)#5
soot.PatchingChain.getPredOf(Ljava/lang/Object;)Ljava/lang/Object;#Return(Ljava/lang/Object;)#4
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#CheckCast(Lsoot/jimple/Stmt;)#829
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,14)#830
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,14)#831
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(L;,null)#832
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ConditionalBranch(Ljava/lang/Object;,ne,835)#833
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,14)#835
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Instanceof(Lsoot/jimple/IdentityStmt;)#836
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(I,0)#837
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ConditionalBranch(I,ne,840)#838
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,9)#840
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,14)#841
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,15)#842
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(VIRTUAL,Ljava/util/HashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#843
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Pop(1)#844
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,14)#845
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,15)#846
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Lsoot/jimple/Stmt;,addTag,(Lsoot/tagkit/Tag;)V)#847
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Goto(825)#848
soot.util.HashChain.getPredOf(Ljava/lang/Object;)Ljava/lang/Object;#Constant(L;,null)#26
soot.util.HashChain.getPredOf(Ljava/lang/Object;)Ljava/lang/Object;#Return(Ljava/lang/Object;)#27
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Goto(849)#834
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(I,0)#853
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(I,12)#854
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Goto(897)#855
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(I,12)#897
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,10)#898
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,size,()I)#899
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ConditionalBranch(I,lt,856)#900
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,10)#856
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(I,12)#857
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,get,(I)Ljava/lang/Object;)#858
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#CheckCast(Lsoot/jimple/Stmt;)#859
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,13)#860
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,9)#861
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,13)#862
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(VIRTUAL,Ljava/util/HashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#863
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#CheckCast(Lsoot/tagkit/Tag;)#864
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,14)#865
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,13)#866
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,14)#867
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Lsoot/jimple/Stmt;,addTag,(Lsoot/tagkit/Tag;)V)#868
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,0)#869
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/coffi/CFG;,units)#870
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,13)#871
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Lsoot/util/Chain;,getSuccOf,(Ljava/lang/Object;)Ljava/lang/Object;)#872
soot.PatchingChain.getSuccOf(Ljava/lang/Object;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#0
soot.PatchingChain.getSuccOf(Ljava/lang/Object;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,1)#1
soot.PatchingChain.getSuccOf(Ljava/lang/Object;)Ljava/lang/Object;#CheckCast(Lsoot/Unit;)#2
soot.PatchingChain.getSuccOf(Ljava/lang/Object;)Ljava/lang/Object;#Invoke(VIRTUAL,Lsoot/PatchingChain;,getSuccOf,(Lsoot/Unit;)Lsoot/Unit;)#3
soot.PatchingChain.getSuccOf(Lsoot/Unit;)Lsoot/Unit;#LocalLoad(Ljava/lang/Object;,0)#0
soot.PatchingChain.getSuccOf(Lsoot/Unit;)Lsoot/Unit;#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/PatchingChain;,innerChain)#1
soot.PatchingChain.getSuccOf(Lsoot/Unit;)Lsoot/Unit;#LocalLoad(Ljava/lang/Object;,1)#2
soot.PatchingChain.getSuccOf(Lsoot/Unit;)Lsoot/Unit;#Invoke(INTERFACE,Lsoot/util/Chain;,getSuccOf,(Ljava/lang/Object;)Ljava/lang/Object;)#3
soot.util.HashChain.getSuccOf(Ljava/lang/Object;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.HashChain.getSuccOf(Ljava/lang/Object;)Ljava/lang/Object;#Get(Ljava/util/HashMap;,NONSTATIC,Lsoot/util/HashChain;,map)#1
soot.util.HashChain.getSuccOf(Ljava/lang/Object;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,1)#2
soot.util.HashChain.getSuccOf(Ljava/lang/Object;)Ljava/lang/Object;#Invoke(VIRTUAL,Ljava/util/HashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
soot.util.HashChain.getSuccOf(Ljava/lang/Object;)Ljava/lang/Object;#CheckCast(Lsoot/util/HashChain$Link;)#4
soot.util.HashChain.getSuccOf(Ljava/lang/Object;)Ljava/lang/Object;#LocalStore(Ljava/lang/Object;,2)#5
soot.util.HashChain.getSuccOf(Ljava/lang/Object;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,2)#6
soot.util.HashChain.getSuccOf(Ljava/lang/Object;)Ljava/lang/Object;#Invoke(VIRTUAL,Lsoot/util/HashChain$Link;,getNext,()Lsoot/util/HashChain$Link;)#7
soot.util.HashChain.getSuccOf(Ljava/lang/Object;)Ljava/lang/Object;#LocalStore(Ljava/lang/Object;,2)#8
soot.util.HashChain.getSuccOf(Ljava/lang/Object;)Ljava/lang/Object;#Goto(15)#9
soot.util.HashChain.getSuccOf(Ljava/lang/Object;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,2)#15
soot.util.HashChain.getSuccOf(Ljava/lang/Object;)Ljava/lang/Object;#Constant(L;,null)#16
soot.util.HashChain.getSuccOf(Ljava/lang/Object;)Ljava/lang/Object;#ConditionalBranch(Ljava/lang/Object;,ne,20)#17
soot.util.HashChain.getSuccOf(Ljava/lang/Object;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,2)#20
soot.util.HashChain.getSuccOf(Ljava/lang/Object;)Ljava/lang/Object;#Invoke(VIRTUAL,Lsoot/util/HashChain$Link;,getItem,()Ljava/lang/Object;)#21
soot.util.HashChain.getSuccOf(Ljava/lang/Object;)Ljava/lang/Object;#Return(Ljava/lang/Object;)#22
soot.PatchingChain.getSuccOf(Lsoot/Unit;)Lsoot/Unit;#CheckCast(Lsoot/Unit;)#4
soot.PatchingChain.getSuccOf(Lsoot/Unit;)Lsoot/Unit;#Return(Ljava/lang/Object;)#5
soot.PatchingChain.getSuccOf(Ljava/lang/Object;)Ljava/lang/Object;#Return(Ljava/lang/Object;)#4
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#CheckCast(Lsoot/jimple/Stmt;)#873
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,13)#874
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Goto(885)#875
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,13)#885
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(L;,null)#886
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ConditionalBranch(Ljava/lang/Object;,eq,893)#887
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,9)#888
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,13)#889
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(VIRTUAL,Ljava/util/HashMap;,containsKey,(Ljava/lang/Object;)Z)#890
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(I,0)#891
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#ConditionalBranch(I,eq,876)#892
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,13)#876
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,14)#877
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Lsoot/jimple/Stmt;,addTag,(Lsoot/tagkit/Tag;)V)#878
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,0)#879
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/coffi/CFG;,units)#880
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(Ljava/lang/Object;,13)#881
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Invoke(INTERFACE,Lsoot/util/Chain;,getSuccOf,(Ljava/lang/Object;)Ljava/lang/Object;)#882
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#CheckCast(Lsoot/jimple/Stmt;)#883
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(Ljava/lang/Object;,13)#884
soot.util.HashChain.getSuccOf(Ljava/lang/Object;)Ljava/lang/Object;#Constant(L;,null)#18
soot.util.HashChain.getSuccOf(Ljava/lang/Object;)Ljava/lang/Object;#Return(Ljava/lang/Object;)#19
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalLoad(I,12)#893
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Constant(I,1)#894
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#BinaryOp(I,add)#895
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#LocalStore(I,12)#896
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Return(V)#901
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Constant(I,1)#226
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Return(I)#227
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Pop(1)#160
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#161
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalLoad(I,6)#162
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Invoke(VIRTUAL,Lsoot/Scene;,setPhantomRefs,(Z)V)#163
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#164
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#165
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Constant(I,0)#166
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#ConditionalBranch(I,eq,171)#167
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalLoad(Ljava/lang/Object;,0)#171
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Get(Lsoot/coffi/method_info;,NONSTATIC,Lsoot/coffi/CoffiMethodSource;,coffiMethod)#172
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Constant(L;,null)#173
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Put(Lsoot/coffi/Instruction;,NONSTATIC,Lsoot/coffi/method_info;,instructions)#174
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalLoad(Ljava/lang/Object;,0)#175
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Get(Lsoot/coffi/method_info;,NONSTATIC,Lsoot/coffi/CoffiMethodSource;,coffiMethod)#176
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Constant(L;,null)#177
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Put(Lsoot/coffi/CFG;,NONSTATIC,Lsoot/coffi/method_info;,cfg)#178
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalLoad(Ljava/lang/Object;,0)#179
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Get(Lsoot/coffi/method_info;,NONSTATIC,Lsoot/coffi/CoffiMethodSource;,coffiMethod)#180
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Constant(L;,null)#181
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Put([Lsoot/coffi/attribute_info;,NONSTATIC,Lsoot/coffi/method_info;,attributes)#182
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalLoad(Ljava/lang/Object;,0)#183
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Get(Lsoot/coffi/method_info;,NONSTATIC,Lsoot/coffi/CoffiMethodSource;,coffiMethod)#184
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Constant(L;,null)#185
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Put(Lsoot/coffi/Code_attribute;,NONSTATIC,Lsoot/coffi/method_info;,code_attr)#186
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalLoad(Ljava/lang/Object;,0)#187
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Get(Lsoot/coffi/method_info;,NONSTATIC,Lsoot/coffi/CoffiMethodSource;,coffiMethod)#188
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Constant(L;,null)#189
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Put(Lsoot/SootMethod;,NONSTATIC,Lsoot/coffi/method_info;,jmethod)#190
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalLoad(Ljava/lang/Object;,0)#191
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Get(Lsoot/coffi/method_info;,NONSTATIC,Lsoot/coffi/CoffiMethodSource;,coffiMethod)#192
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Constant(L;,null)#193
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Put(Ljava/util/List;,NONSTATIC,Lsoot/coffi/method_info;,instructionList)#194
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalLoad(Ljava/lang/Object;,0)#195
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Constant(L;,null)#196
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Put(Lsoot/coffi/method_info;,NONSTATIC,Lsoot/coffi/CoffiMethodSource;,coffiMethod)#197
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalLoad(Ljava/lang/Object;,0)#198
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Constant(L;,null)#199
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Put(Lsoot/coffi/ClassFile;,NONSTATIC,Lsoot/coffi/CoffiMethodSource;,coffiClass)#200
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#201
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Constant(Ljava/lang/String;,"jb")#202
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Invoke(VIRTUAL,Lsoot/PackManager;,getPack,(Ljava/lang/String;)Lsoot/Pack;)#203
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalLoad(Ljava/lang/Object;,3)#204
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Invoke(VIRTUAL,Lsoot/Pack;,apply,(Lsoot/Body;)V)#205
soot.Pack.apply(Lsoot/Body;)V#Invoke(STATIC,Lsoot/PhaseOptions;,v,()Lsoot/PhaseOptions;)#0
soot.Pack.apply(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#1
soot.Pack.apply(Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/PhaseOptions;,getPhaseOptions,(Lsoot/HasPhaseOptions;)Ljava/util/Map;)#2
soot.Pack.apply(Lsoot/Body;)V#LocalStore(Ljava/lang/Object;,2)#3
soot.Pack.apply(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,2)#4
soot.Pack.apply(Lsoot/Body;)V#Constant(Ljava/lang/String;,"enabled")#5
soot.Pack.apply(Lsoot/Body;)V#Invoke(STATIC,Lsoot/PhaseOptions;,getBoolean,(Ljava/util/Map;Ljava/lang/String;)Z)#6
soot.Pack.apply(Lsoot/Body;)V#Constant(I,0)#7
soot.Pack.apply(Lsoot/Body;)V#ConditionalBranch(I,ne,10)#8
soot.Pack.apply(Lsoot/Body;)V#Invoke(STATIC,Lsoot/util/PhaseDumper;,v,()Lsoot/util/PhaseDumper;)#10
soot.util.PhaseDumper.v()Lsoot/util/PhaseDumper;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.util.PhaseDumper.v()Lsoot/util/PhaseDumper;#Invoke(VIRTUAL,Lsoot/G;,soot_util_PhaseDumper,()Lsoot/util/PhaseDumper;)#1
soot.Singletons.soot_util_PhaseDumper()Lsoot/util/PhaseDumper;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_util_PhaseDumper()Lsoot/util/PhaseDumper;#Get(Lsoot/util/PhaseDumper;,NONSTATIC,Lsoot/Singletons;,instance_soot_util_PhaseDumper)#1
soot.Singletons.soot_util_PhaseDumper()Lsoot/util/PhaseDumper;#Constant(L;,null)#2
soot.Singletons.soot_util_PhaseDumper()Lsoot/util/PhaseDumper;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_util_PhaseDumper()Lsoot/util/PhaseDumper;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_util_PhaseDumper()Lsoot/util/PhaseDumper;#New(Lsoot/util/PhaseDumper;,0)#5
soot.Singletons.soot_util_PhaseDumper()Lsoot/util/PhaseDumper;#Dup(1,0)#6
soot.Singletons.soot_util_PhaseDumper()Lsoot/util/PhaseDumper;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_util_PhaseDumper()Lsoot/util/PhaseDumper;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_util_PhaseDumper()Lsoot/util/PhaseDumper;#Invoke(SPECIAL,Lsoot/util/PhaseDumper;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.util.PhaseDumper.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.PhaseDumper.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.util.PhaseDumper.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.util.PhaseDumper.<init>(Lsoot/Singletons$Global;)V#Constant(L;,null)#3
soot.util.PhaseDumper.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/util/PhaseDumper;,bodyDumpingPhases)#4
soot.util.PhaseDumper.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.util.PhaseDumper.<init>(Lsoot/Singletons$Global;)V#Constant(L;,null)#6
soot.util.PhaseDumper.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/util/PhaseDumper;,cfgDumpingPhases)#7
soot.util.PhaseDumper.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.util.PhaseDumper.<init>(Lsoot/Singletons$Global;)V#New(Lsoot/util/PhaseDumper$PhaseStack;,0)#9
soot.util.PhaseDumper.<init>(Lsoot/Singletons$Global;)V#Dup(1,0)#10
soot.util.PhaseDumper.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.util.PhaseDumper.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/util/PhaseDumper$PhaseStack;,<init>,(Lsoot/util/PhaseDumper;)V)#12
soot.util.PhaseDumper$PhaseStack.<init>(Lsoot/util/PhaseDumper;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.PhaseDumper$PhaseStack.<init>(Lsoot/util/PhaseDumper;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.util.PhaseDumper$PhaseStack.<init>(Lsoot/util/PhaseDumper;)V#Put(Lsoot/util/PhaseDumper;,NONSTATIC,Lsoot/util/PhaseDumper$PhaseStack;,this$0)#2
soot.util.PhaseDumper$PhaseStack.<init>(Lsoot/util/PhaseDumper;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.util.PhaseDumper$PhaseStack.<init>(Lsoot/util/PhaseDumper;)V#Constant(I,4)#4
soot.util.PhaseDumper$PhaseStack.<init>(Lsoot/util/PhaseDumper;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,(I)V)#5
soot.util.PhaseDumper$PhaseStack.<init>(Lsoot/util/PhaseDumper;)V#Return(V)#6
soot.util.PhaseDumper.<init>(Lsoot/Singletons$Global;)V#Put(Lsoot/util/PhaseDumper$PhaseStack;,NONSTATIC,Lsoot/util/PhaseDumper;,phaseStack)#13
soot.util.PhaseDumper.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#14
soot.util.PhaseDumper.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#15
soot.util.PhaseDumper.<init>(Lsoot/Singletons$Global;)V#Put(Z,NONSTATIC,Lsoot/util/PhaseDumper;,alreadyDumping)#16
soot.util.PhaseDumper.<init>(Lsoot/Singletons$Global;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#17
soot.util.PhaseDumper.<init>(Lsoot/Singletons$Global;)V#Invoke(VIRTUAL,Lsoot/options/Options;,dump_body,()Ljava/util/List;)#18
soot.options.Options.dump_body()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.dump_body()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lsoot/options/Options;,dump_body)#1
soot.options.Options.dump_body()Ljava/util/List;#Constant(L;,null)#2
soot.options.Options.dump_body()Ljava/util/List;#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
soot.options.Options.dump_body()Ljava/util/List;#Get(Ljava/util/List;,STATIC,Ljava/util/Collections;,EMPTY_LIST)#4
soot.options.Options.dump_body()Ljava/util/List;#Return(Ljava/lang/Object;)#5
soot.util.PhaseDumper.<init>(Lsoot/Singletons$Global;)V#Invoke(INTERFACE,Ljava/util/List;,isEmpty,()Z)#19
soot.util.PhaseDumper.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#20
soot.util.PhaseDumper.<init>(Lsoot/Singletons$Global;)V#ConditionalBranch(I,ne,26)#21
soot.util.PhaseDumper.<init>(Lsoot/Singletons$Global;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#26
soot.util.PhaseDumper.<init>(Lsoot/Singletons$Global;)V#Invoke(VIRTUAL,Lsoot/options/Options;,dump_cfg,()Ljava/util/List;)#27
soot.options.Options.dump_cfg()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.dump_cfg()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lsoot/options/Options;,dump_cfg)#1
soot.options.Options.dump_cfg()Ljava/util/List;#Constant(L;,null)#2
soot.options.Options.dump_cfg()Ljava/util/List;#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
soot.options.Options.dump_cfg()Ljava/util/List;#Get(Ljava/util/List;,STATIC,Ljava/util/Collections;,EMPTY_LIST)#4
soot.options.Options.dump_cfg()Ljava/util/List;#Return(Ljava/lang/Object;)#5
soot.util.PhaseDumper.<init>(Lsoot/Singletons$Global;)V#Invoke(INTERFACE,Ljava/util/List;,isEmpty,()Z)#28
soot.util.PhaseDumper.<init>(Lsoot/Singletons$Global;)V#Constant(I,0)#29
soot.util.PhaseDumper.<init>(Lsoot/Singletons$Global;)V#ConditionalBranch(I,ne,35)#30
soot.util.PhaseDumper.<init>(Lsoot/Singletons$Global;)V#Return(V)#35
soot.Singletons.soot_util_PhaseDumper()Lsoot/util/PhaseDumper;#Put(Lsoot/util/PhaseDumper;,NONSTATIC,Lsoot/Singletons;,instance_soot_util_PhaseDumper)#10
soot.Singletons.soot_util_PhaseDumper()Lsoot/util/PhaseDumper;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_util_PhaseDumper()Lsoot/util/PhaseDumper;#Get(Lsoot/util/PhaseDumper;,NONSTATIC,Lsoot/Singletons;,instance_soot_util_PhaseDumper)#12
soot.Singletons.soot_util_PhaseDumper()Lsoot/util/PhaseDumper;#Return(Ljava/lang/Object;)#13
soot.util.PhaseDumper.v()Lsoot/util/PhaseDumper;#Return(Ljava/lang/Object;)#2
soot.Pack.apply(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,1)#11
soot.Pack.apply(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#12
soot.Pack.apply(Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/Pack;,getPhaseName,()Ljava/lang/String;)#13
soot.Pack.apply(Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/util/PhaseDumper;,dumpBefore,(Lsoot/Body;Ljava/lang/String;)V)#14
soot.util.PhaseDumper.dumpBefore(Lsoot/Body;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.PhaseDumper.dumpBefore(Lsoot/Body;Ljava/lang/String;)V#Get(Lsoot/util/PhaseDumper$PhaseStack;,NONSTATIC,Lsoot/util/PhaseDumper;,phaseStack)#1
soot.util.PhaseDumper.dumpBefore(Lsoot/Body;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#2
soot.util.PhaseDumper.dumpBefore(Lsoot/Body;Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/util/PhaseDumper$PhaseStack;,push,(Ljava/lang/String;)Ljava/lang/String;)#3
soot.util.PhaseDumper$PhaseStack.push(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.PhaseDumper$PhaseStack.push(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#1
soot.util.PhaseDumper$PhaseStack.push(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Lsoot/util/PhaseDumper$PhaseStack;,add,(Ljava/lang/Object;)Z)#2
soot.util.PhaseDumper$PhaseStack.push(Ljava/lang/String;)Ljava/lang/String;#Pop(1)#3
soot.util.PhaseDumper$PhaseStack.push(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#4
soot.util.PhaseDumper$PhaseStack.push(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#5
soot.util.PhaseDumper.dumpBefore(Lsoot/Body;Ljava/lang/String;)V#Pop(1)#4
soot.util.PhaseDumper.dumpBefore(Lsoot/Body;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.util.PhaseDumper.dumpBefore(Lsoot/Body;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#6
soot.util.PhaseDumper.dumpBefore(Lsoot/Body;Ljava/lang/String;)V#Invoke(SPECIAL,Lsoot/util/PhaseDumper;,isBodyDumpingPhase,(Ljava/lang/String;)Z)#7
soot.util.PhaseDumper.isBodyDumpingPhase(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.PhaseDumper.isBodyDumpingPhase(Ljava/lang/String;)Z#Get(Ljava/util/List;,NONSTATIC,Lsoot/util/PhaseDumper;,bodyDumpingPhases)#1
soot.util.PhaseDumper.isBodyDumpingPhase(Ljava/lang/String;)Z#Constant(L;,null)#2
soot.util.PhaseDumper.isBodyDumpingPhase(Ljava/lang/String;)Z#ConditionalBranch(Ljava/lang/Object;,eq,18)#3
soot.util.PhaseDumper.isBodyDumpingPhase(Ljava/lang/String;)Z#Constant(I,0)#18
soot.util.PhaseDumper.isBodyDumpingPhase(Ljava/lang/String;)Z#Return(I)#19
soot.util.PhaseDumper.dumpBefore(Lsoot/Body;Ljava/lang/String;)V#Constant(I,0)#8
soot.util.PhaseDumper.dumpBefore(Lsoot/Body;Ljava/lang/String;)V#ConditionalBranch(I,eq,24)#9
soot.util.PhaseDumper.dumpBefore(Lsoot/Body;Ljava/lang/String;)V#Return(V)#24
soot.Pack.apply(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#15
soot.Pack.apply(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,1)#16
soot.Pack.apply(Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/Pack;,internalApply,(Lsoot/Body;)V)#17
soot.JimpleBodyPack.internalApply(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.JimpleBodyPack.internalApply(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.JimpleBodyPack.internalApply(Lsoot/Body;)V#CheckCast(Lsoot/jimple/JimpleBody;)#2
soot.JimpleBodyPack.internalApply(Lsoot/Body;)V#Invoke(STATIC,Lsoot/PhaseOptions;,v,()Lsoot/PhaseOptions;)#3
soot.JimpleBodyPack.internalApply(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#4
soot.JimpleBodyPack.internalApply(Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/JimpleBodyPack;,getPhaseName,()Ljava/lang/String;)#5
soot.JimpleBodyPack.internalApply(Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/PhaseOptions;,getPhaseOptions,(Ljava/lang/String;)Ljava/util/Map;)#6
soot.JimpleBodyPack.internalApply(Lsoot/Body;)V#Invoke(SPECIAL,Lsoot/JimpleBodyPack;,applyPhaseOptions,(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V)#7
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#New(Lsoot/options/JBOptions;,0)#0
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Dup(1,0)#1
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,2)#2
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(SPECIAL,Lsoot/options/JBOptions;,<init>,(Ljava/util/Map;)V)#3
soot.options.JBOptions.<init>(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.JBOptions.<init>(Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.options.JBOptions.<init>(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.options.JBOptions.<init>(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.options.JBOptions.<init>(Ljava/util/Map;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/options/JBOptions;,options)#4
soot.options.JBOptions.<init>(Ljava/util/Map;)V#Return(V)#5
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,3)#4
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#5
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/JBOptions;,use_original_names,()Z)#6
soot.options.JBOptions.use_original_names()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.JBOptions.use_original_names()Z#Get(Ljava/util/Map;,NONSTATIC,Lsoot/options/JBOptions;,options)#1
soot.options.JBOptions.use_original_names()Z#Constant(Ljava/lang/String;,"use-original-names")#2
soot.options.JBOptions.use_original_names()Z#Invoke(STATIC,Lsoot/PhaseOptions;,getBoolean,(Ljava/util/Map;Ljava/lang/String;)Z)#3
soot.options.JBOptions.use_original_names()Z#Return(I)#4
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Constant(I,0)#7
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#ConditionalBranch(I,eq,13)#8
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#13
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#14
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Constant(I,0)#15
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#ConditionalBranch(I,eq,20)#16
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#20
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"jb.tt")#21
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/PackManager;,getTransform,(Ljava/lang/String;)Lsoot/Transform;)#22
soot.PackManager.getTransform(Ljava/lang/String;)Lsoot/Transform;#LocalLoad(Ljava/lang/Object;,0)#0
soot.PackManager.getTransform(Ljava/lang/String;)Lsoot/Transform;#LocalLoad(Ljava/lang/Object;,1)#1
soot.PackManager.getTransform(Ljava/lang/String;)Lsoot/Transform;#Invoke(VIRTUAL,Lsoot/PackManager;,getPhase,(Ljava/lang/String;)Lsoot/HasPhaseOptions;)#2
soot.PackManager.getTransform(Ljava/lang/String;)Lsoot/Transform;#CheckCast(Lsoot/Transform;)#3
soot.PackManager.getTransform(Ljava/lang/String;)Lsoot/Transform;#Return(Ljava/lang/Object;)#4
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#23
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Transform;,apply,(Lsoot/Body;)V)#24
soot.Transform.apply(Lsoot/Body;)V#Invoke(STATIC,Lsoot/PhaseOptions;,v,()Lsoot/PhaseOptions;)#0
soot.Transform.apply(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#1
soot.Transform.apply(Lsoot/Body;)V#Get(Ljava/lang/String;,NONSTATIC,Lsoot/Transform;,phaseName)#2
soot.Transform.apply(Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/PhaseOptions;,getPhaseOptions,(Ljava/lang/String;)Ljava/util/Map;)#3
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:false ")#96
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#97
soot.Transform.apply(Lsoot/Body;)V#LocalStore(Ljava/lang/Object;,2)#4
soot.Transform.apply(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,2)#5
soot.Transform.apply(Lsoot/Body;)V#Constant(Ljava/lang/String;,"enabled")#6
soot.Transform.apply(Lsoot/Body;)V#Invoke(STATIC,Lsoot/PhaseOptions;,getBoolean,(Ljava/util/Map;Ljava/lang/String;)Z)#7
soot.Transform.apply(Lsoot/Body;)V#Constant(I,0)#8
soot.Transform.apply(Lsoot/Body;)V#ConditionalBranch(I,eq,32)#9
soot.Transform.apply(Lsoot/Body;)V#Invoke(STATIC,Lsoot/util/PhaseDumper;,v,()Lsoot/util/PhaseDumper;)#32
soot.Transform.apply(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,1)#33
soot.Transform.apply(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#34
soot.Transform.apply(Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/Transform;,getPhaseName,()Ljava/lang/String;)#35
soot.Transform.apply(Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/util/PhaseDumper;,dumpBefore,(Lsoot/Body;Ljava/lang/String;)V)#36
soot.Transform.apply(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#37
soot.Transform.apply(Lsoot/Body;)V#Get(Lsoot/Transformer;,NONSTATIC,Lsoot/Transform;,t)#38
soot.Transform.apply(Lsoot/Body;)V#CheckCast(Lsoot/BodyTransformer;)#39
soot.Transform.apply(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,1)#40
soot.Transform.apply(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#41
soot.Transform.apply(Lsoot/Body;)V#Get(Ljava/lang/String;,NONSTATIC,Lsoot/Transform;,phaseName)#42
soot.Transform.apply(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,2)#43
soot.Transform.apply(Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/BodyTransformer;,transform,(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V)#44
soot.BodyTransformer.transform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#0
soot.BodyTransformer.transform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"enabled")#1
soot.BodyTransformer.transform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/PhaseOptions;,getBoolean,(Ljava/util/Map;Ljava/lang/String;)Z)#2
soot.BodyTransformer.transform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#3
soot.BodyTransformer.transform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,6)#4
soot.BodyTransformer.transform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Return(V)#5
soot.Transform.apply(Lsoot/Body;)V#Invoke(STATIC,Lsoot/util/PhaseDumper;,v,()Lsoot/util/PhaseDumper;)#45
soot.Transform.apply(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,1)#46
soot.Transform.apply(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#47
soot.Transform.apply(Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/Transform;,getPhaseName,()Ljava/lang/String;)#48
soot.Transform.apply(Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/util/PhaseDumper;,dumpAfter,(Lsoot/Body;Ljava/lang/String;)V)#49
soot.util.PhaseDumper.dumpAfter(Lsoot/Body;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.PhaseDumper.dumpAfter(Lsoot/Body;Ljava/lang/String;)V#Get(Lsoot/util/PhaseDumper$PhaseStack;,NONSTATIC,Lsoot/util/PhaseDumper;,phaseStack)#1
soot.util.PhaseDumper.dumpAfter(Lsoot/Body;Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/util/PhaseDumper$PhaseStack;,pop,()Ljava/lang/String;)#2
soot.util.PhaseDumper$PhaseStack.pop()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.PhaseDumper$PhaseStack.pop()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#1
soot.util.PhaseDumper$PhaseStack.pop()Ljava/lang/String;#Invoke(VIRTUAL,Lsoot/util/PhaseDumper$PhaseStack;,size,()I)#2
soot.util.PhaseDumper$PhaseStack.pop()Ljava/lang/String;#Constant(I,1)#3
soot.util.PhaseDumper$PhaseStack.pop()Ljava/lang/String;#BinaryOp(I,sub)#4
soot.util.PhaseDumper$PhaseStack.pop()Ljava/lang/String;#Invoke(VIRTUAL,Lsoot/util/PhaseDumper$PhaseStack;,remove,(I)Ljava/lang/Object;)#5
soot.util.PhaseDumper$PhaseStack.pop()Ljava/lang/String;#CheckCast(Ljava/lang/String;)#6
soot.util.PhaseDumper$PhaseStack.pop()Ljava/lang/String;#Return(Ljava/lang/Object;)#7
soot.util.PhaseDumper.dumpAfter(Lsoot/Body;Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,3)#3
soot.util.PhaseDumper.dumpAfter(Lsoot/Body;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#4
soot.util.PhaseDumper.dumpAfter(Lsoot/Body;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#5
soot.util.PhaseDumper.dumpAfter(Lsoot/Body;Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,eq,22)#6
soot.util.PhaseDumper.dumpAfter(Lsoot/Body;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#22
soot.util.PhaseDumper.dumpAfter(Lsoot/Body;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#23
soot.util.PhaseDumper.dumpAfter(Lsoot/Body;Ljava/lang/String;)V#Invoke(SPECIAL,Lsoot/util/PhaseDumper;,isBodyDumpingPhase,(Ljava/lang/String;)Z)#24
soot.util.PhaseDumper.dumpAfter(Lsoot/Body;Ljava/lang/String;)V#Constant(I,0)#25
soot.util.PhaseDumper.dumpAfter(Lsoot/Body;Ljava/lang/String;)V#ConditionalBranch(I,eq,38)#26
soot.util.PhaseDumper.dumpAfter(Lsoot/Body;Ljava/lang/String;)V#Return(V)#38
soot.Transform.apply(Lsoot/Body;)V#Return(V)#50
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#25
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"jb.ls")#26
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/PackManager;,getTransform,(Ljava/lang/String;)Lsoot/Transform;)#27
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#28
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Transform;,apply,(Lsoot/Body;)V)#29
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:true ")#12
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#13
soot.Transform.apply(Lsoot/Body;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#10
soot.Transform.apply(Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/options/Options;,verbose,()Z)#11
soot.Transform.apply(Lsoot/Body;)V#Constant(I,0)#12
soot.Transform.apply(Lsoot/Body;)V#ConditionalBranch(I,eq,32)#13
soot.BodyTransformer.transform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#6
soot.BodyTransformer.transform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#7
soot.BodyTransformer.transform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,2)#8
soot.BodyTransformer.transform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#9
soot.BodyTransformer.transform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/BodyTransformer;,internalTransform,(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V)#10
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Body;,getUnits,()Lsoot/PatchingChain;)#1
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,4)#2
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/util/ArrayList;,0)#3
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#4
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#5
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,5)#6
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#7
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/Options;,verbose,()Z)#8
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#9
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,25)#10
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/util/HashMap;,0)#25
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#26
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#27
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/util/Chain;,size,()I)#28
soot.PatchingChain.size()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.PatchingChain.size()I#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/PatchingChain;,innerChain)#1
soot.PatchingChain.size()I#Invoke(INTERFACE,Lsoot/util/Chain;,size,()I)#2
soot.PatchingChain.size()I#Return(I)#3
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,2)#29
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#BinaryOp(I,mul)#30
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,1)#31
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#BinaryOp(I,add)#32
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(F,0.7)#33
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(IF)V)#34
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,6)#35
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#36
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#37
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#38
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,43)#39
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Lsoot/toolkits/graph/ExceptionalUnitGraph;,0)#43
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#44
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#45
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Lsoot/toolkits/graph/ExceptionalUnitGraph;,<init>,(Lsoot/Body;)V)#46
soot.toolkits.graph.ExceptionalUnitGraph.<init>(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.ExceptionalUnitGraph.<init>(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.toolkits.graph.ExceptionalUnitGraph.<init>(Lsoot/Body;)V#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#2
soot.toolkits.graph.ExceptionalUnitGraph.<init>(Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/Scene;,getDefaultThrowAnalysis,()Lsoot/toolkits/exceptions/ThrowAnalysis;)#3
soot.Scene.getDefaultThrowAnalysis()Lsoot/toolkits/exceptions/ThrowAnalysis;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.getDefaultThrowAnalysis()Lsoot/toolkits/exceptions/ThrowAnalysis;#Get(Lsoot/toolkits/exceptions/ThrowAnalysis;,NONSTATIC,Lsoot/Scene;,defaultThrowAnalysis)#1
soot.Scene.getDefaultThrowAnalysis()Lsoot/toolkits/exceptions/ThrowAnalysis;#Constant(L;,null)#2
soot.Scene.getDefaultThrowAnalysis()Lsoot/toolkits/exceptions/ThrowAnalysis;#ConditionalBranch(Ljava/lang/Object;,ne,29)#3
soot.Scene.getDefaultThrowAnalysis()Lsoot/toolkits/exceptions/ThrowAnalysis;#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#4
soot.Scene.getDefaultThrowAnalysis()Lsoot/toolkits/exceptions/ThrowAnalysis;#Invoke(VIRTUAL,Lsoot/options/Options;,throw_analysis,()I)#5
soot.options.Options.throw_analysis()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.throw_analysis()I#Get(I,NONSTATIC,Lsoot/options/Options;,throw_analysis)#1
soot.options.Options.throw_analysis()I#Constant(I,0)#2
soot.options.Options.throw_analysis()I#ConditionalBranch(I,ne,6)#3
soot.options.Options.throw_analysis()I#Constant(I,1)#4
soot.options.Options.throw_analysis()I#Return(I)#5
soot.Scene.getDefaultThrowAnalysis()Lsoot/toolkits/exceptions/ThrowAnalysis;#LocalStore(I,1)#6
soot.Scene.getDefaultThrowAnalysis()Lsoot/toolkits/exceptions/ThrowAnalysis;#LocalLoad(I,1)#7
soot.Scene.getDefaultThrowAnalysis()Lsoot/toolkits/exceptions/ThrowAnalysis;#Switch(17,1,9,2,13)#8
soot.Scene.getDefaultThrowAnalysis()Lsoot/toolkits/exceptions/ThrowAnalysis;#LocalLoad(Ljava/lang/Object;,0)#9
soot.Scene.getDefaultThrowAnalysis()Lsoot/toolkits/exceptions/ThrowAnalysis;#Invoke(STATIC,Lsoot/toolkits/exceptions/PedanticThrowAnalysis;,v,()Lsoot/toolkits/exceptions/PedanticThrowAnalysis;)#10
soot.toolkits.exceptions.PedanticThrowAnalysis.v()Lsoot/toolkits/exceptions/PedanticThrowAnalysis;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.toolkits.exceptions.PedanticThrowAnalysis.v()Lsoot/toolkits/exceptions/PedanticThrowAnalysis;#Invoke(VIRTUAL,Lsoot/G;,soot_toolkits_exceptions_PedanticThrowAnalysis,()Lsoot/toolkits/exceptions/PedanticThrowAnalysis;)#1
soot.Singletons.soot_toolkits_exceptions_PedanticThrowAnalysis()Lsoot/toolkits/exceptions/PedanticThrowAnalysis;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_toolkits_exceptions_PedanticThrowAnalysis()Lsoot/toolkits/exceptions/PedanticThrowAnalysis;#Get(Lsoot/toolkits/exceptions/PedanticThrowAnalysis;,NONSTATIC,Lsoot/Singletons;,instance_soot_toolkits_exceptions_PedanticThrowAnalysis)#1
soot.Singletons.soot_toolkits_exceptions_PedanticThrowAnalysis()Lsoot/toolkits/exceptions/PedanticThrowAnalysis;#Constant(L;,null)#2
soot.Singletons.soot_toolkits_exceptions_PedanticThrowAnalysis()Lsoot/toolkits/exceptions/PedanticThrowAnalysis;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_toolkits_exceptions_PedanticThrowAnalysis()Lsoot/toolkits/exceptions/PedanticThrowAnalysis;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_toolkits_exceptions_PedanticThrowAnalysis()Lsoot/toolkits/exceptions/PedanticThrowAnalysis;#New(Lsoot/toolkits/exceptions/PedanticThrowAnalysis;,0)#5
soot.Singletons.soot_toolkits_exceptions_PedanticThrowAnalysis()Lsoot/toolkits/exceptions/PedanticThrowAnalysis;#Dup(1,0)#6
soot.Singletons.soot_toolkits_exceptions_PedanticThrowAnalysis()Lsoot/toolkits/exceptions/PedanticThrowAnalysis;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_toolkits_exceptions_PedanticThrowAnalysis()Lsoot/toolkits/exceptions/PedanticThrowAnalysis;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_toolkits_exceptions_PedanticThrowAnalysis()Lsoot/toolkits/exceptions/PedanticThrowAnalysis;#Invoke(SPECIAL,Lsoot/toolkits/exceptions/PedanticThrowAnalysis;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.toolkits.exceptions.PedanticThrowAnalysis.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.exceptions.PedanticThrowAnalysis.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/toolkits/exceptions/AbstractThrowAnalysis;,<init>,()V)#1
soot.toolkits.exceptions.AbstractThrowAnalysis.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.exceptions.AbstractThrowAnalysis.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.toolkits.exceptions.AbstractThrowAnalysis.<init>()V#Return(V)#2
soot.toolkits.exceptions.PedanticThrowAnalysis.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_toolkits_exceptions_PedanticThrowAnalysis()Lsoot/toolkits/exceptions/PedanticThrowAnalysis;#Put(Lsoot/toolkits/exceptions/PedanticThrowAnalysis;,NONSTATIC,Lsoot/Singletons;,instance_soot_toolkits_exceptions_PedanticThrowAnalysis)#10
soot.Singletons.soot_toolkits_exceptions_PedanticThrowAnalysis()Lsoot/toolkits/exceptions/PedanticThrowAnalysis;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_toolkits_exceptions_PedanticThrowAnalysis()Lsoot/toolkits/exceptions/PedanticThrowAnalysis;#Get(Lsoot/toolkits/exceptions/PedanticThrowAnalysis;,NONSTATIC,Lsoot/Singletons;,instance_soot_toolkits_exceptions_PedanticThrowAnalysis)#12
soot.Singletons.soot_toolkits_exceptions_PedanticThrowAnalysis()Lsoot/toolkits/exceptions/PedanticThrowAnalysis;#Return(Ljava/lang/Object;)#13
soot.toolkits.exceptions.PedanticThrowAnalysis.v()Lsoot/toolkits/exceptions/PedanticThrowAnalysis;#Return(Ljava/lang/Object;)#2
soot.Scene.getDefaultThrowAnalysis()Lsoot/toolkits/exceptions/ThrowAnalysis;#Put(Lsoot/toolkits/exceptions/ThrowAnalysis;,NONSTATIC,Lsoot/Scene;,defaultThrowAnalysis)#11
soot.Scene.getDefaultThrowAnalysis()Lsoot/toolkits/exceptions/ThrowAnalysis;#Goto(29)#12
soot.Scene.getDefaultThrowAnalysis()Lsoot/toolkits/exceptions/ThrowAnalysis;#LocalLoad(Ljava/lang/Object;,0)#29
soot.Scene.getDefaultThrowAnalysis()Lsoot/toolkits/exceptions/ThrowAnalysis;#Get(Lsoot/toolkits/exceptions/ThrowAnalysis;,NONSTATIC,Lsoot/Scene;,defaultThrowAnalysis)#30
soot.Scene.getDefaultThrowAnalysis()Lsoot/toolkits/exceptions/ThrowAnalysis;#Return(Ljava/lang/Object;)#31
soot.toolkits.graph.ExceptionalUnitGraph.<init>(Lsoot/Body;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#4
soot.toolkits.graph.ExceptionalUnitGraph.<init>(Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/options/Options;,omit_excepting_unit_edges,()Z)#5
soot.options.Options.omit_excepting_unit_edges()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.omit_excepting_unit_edges()Z#Get(Z,NONSTATIC,Lsoot/options/Options;,omit_excepting_unit_edges)#1
soot.options.Options.omit_excepting_unit_edges()Z#Return(I)#2
soot.toolkits.graph.ExceptionalUnitGraph.<init>(Lsoot/Body;)V#Invoke(SPECIAL,Lsoot/toolkits/graph/ExceptionalUnitGraph;,<init>,(Lsoot/Body;Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V)#6
soot.toolkits.graph.ExceptionalUnitGraph.<init>(Lsoot/Body;Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.ExceptionalUnitGraph.<init>(Lsoot/Body;Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.toolkits.graph.ExceptionalUnitGraph.<init>(Lsoot/Body;Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Invoke(SPECIAL,Lsoot/toolkits/graph/UnitGraph;,<init>,(Lsoot/Body;)V)#2
soot.toolkits.graph.UnitGraph.<init>(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.UnitGraph.<init>(Lsoot/Body;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.toolkits.graph.UnitGraph.<init>(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.toolkits.graph.UnitGraph.<init>(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.toolkits.graph.UnitGraph.<init>(Lsoot/Body;)V#Put(Lsoot/Body;,NONSTATIC,Lsoot/toolkits/graph/UnitGraph;,body)#4
soot.toolkits.graph.UnitGraph.<init>(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.toolkits.graph.UnitGraph.<init>(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,1)#6
soot.toolkits.graph.UnitGraph.<init>(Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/Body;,getUnits,()Lsoot/PatchingChain;)#7
soot.toolkits.graph.UnitGraph.<init>(Lsoot/Body;)V#Put(Lsoot/util/Chain;,NONSTATIC,Lsoot/toolkits/graph/UnitGraph;,unitChain)#8
soot.toolkits.graph.UnitGraph.<init>(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#9
soot.toolkits.graph.UnitGraph.<init>(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,1)#10
soot.toolkits.graph.UnitGraph.<init>(Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/Body;,getMethod,()Lsoot/SootMethod;)#11
soot.toolkits.graph.UnitGraph.<init>(Lsoot/Body;)V#Put(Lsoot/SootMethod;,NONSTATIC,Lsoot/toolkits/graph/UnitGraph;,method)#12
soot.toolkits.graph.UnitGraph.<init>(Lsoot/Body;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#13
soot.toolkits.graph.UnitGraph.<init>(Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/options/Options;,verbose,()Z)#14
soot.toolkits.graph.UnitGraph.<init>(Lsoot/Body;)V#Constant(I,0)#15
soot.toolkits.graph.UnitGraph.<init>(Lsoot/Body;)V#ConditionalBranch(I,eq,37)#16
soot.toolkits.graph.UnitGraph.<init>(Lsoot/Body;)V#Return(V)#37
soot.toolkits.graph.ExceptionalUnitGraph.<init>(Lsoot/Body;Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.toolkits.graph.ExceptionalUnitGraph.<init>(Lsoot/Body;Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#LocalLoad(Ljava/lang/Object;,2)#4
soot.toolkits.graph.ExceptionalUnitGraph.<init>(Lsoot/Body;Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#LocalLoad(I,3)#5
soot.toolkits.graph.ExceptionalUnitGraph.<init>(Lsoot/Body;Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Invoke(VIRTUAL,Lsoot/toolkits/graph/ExceptionalUnitGraph;,initialize,(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V)#6
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/toolkits/graph/ExceptionalUnitGraph;,unitChain)#1
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Invoke(INTERFACE,Lsoot/util/Chain;,size,()I)#2
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#LocalStore(I,3)#3
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Invoke(STATIC,Ljava/util/Collections;,emptySet,()Ljava/util/Set;)#4
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#LocalStore(Ljava/lang/Object;,4)#5
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#6
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#7
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Constant(I,0)#8
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#ConditionalBranch(I,eq,13)#9
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#LocalLoad(Ljava/lang/Object;,0)#13
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#New(Ljava/util/HashMap;,0)#14
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Dup(1,0)#15
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#LocalLoad(I,3)#16
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Constant(I,2)#17
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#BinaryOp(I,mul)#18
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Constant(I,1)#19
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#BinaryOp(I,add)#20
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Constant(F,0.7)#21
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(IF)V)#22
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/graph/ExceptionalUnitGraph;,unitToUnexceptionalSuccs)#23
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#LocalLoad(Ljava/lang/Object;,0)#24
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#New(Ljava/util/HashMap;,0)#25
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Dup(1,0)#26
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#LocalLoad(I,3)#27
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Constant(I,2)#28
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#BinaryOp(I,mul)#29
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Constant(I,1)#30
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#BinaryOp(I,add)#31
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Constant(F,0.7)#32
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(IF)V)#33
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/graph/ExceptionalUnitGraph;,unitToUnexceptionalPreds)#34
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#LocalLoad(Ljava/lang/Object;,0)#35
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#LocalLoad(Ljava/lang/Object;,0)#36
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/graph/ExceptionalUnitGraph;,unitToUnexceptionalSuccs)#37
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#LocalLoad(Ljava/lang/Object;,0)#38
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/graph/ExceptionalUnitGraph;,unitToUnexceptionalPreds)#39
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Invoke(VIRTUAL,Lsoot/toolkits/graph/ExceptionalUnitGraph;,buildUnexceptionalEdges,(Ljava/util/Map;Ljava/util/Map;)V)#40
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/toolkits/graph/UnitGraph;,unitChain)#1
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#2
soot.PatchingChain.iterator()Ljava/util/Iterator;#New(Lsoot/PatchingChain$PatchingIterator;,0)#0
soot.PatchingChain.iterator()Ljava/util/Iterator;#Dup(1,0)#1
soot.PatchingChain.iterator()Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#2
soot.PatchingChain.iterator()Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#3
soot.PatchingChain.iterator()Ljava/util/Iterator;#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/PatchingChain;,innerChain)#4
soot.PatchingChain.iterator()Ljava/util/Iterator;#Invoke(SPECIAL,Lsoot/PatchingChain$PatchingIterator;,<init>,(Lsoot/PatchingChain;Lsoot/util/Chain;)V)#5
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;)V#Put(Lsoot/PatchingChain;,NONSTATIC,Lsoot/PatchingChain$PatchingIterator;,this$0)#2
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#4
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;)V#Constant(L;,null)#6
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;)V#Put(Ljava/util/Iterator;,NONSTATIC,Lsoot/PatchingChain$PatchingIterator;,innerIterator)#7
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;)V#Constant(I,0)#9
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;)V#Put(Z,NONSTATIC,Lsoot/PatchingChain$PatchingIterator;,state)#10
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;)V#LocalLoad(Ljava/lang/Object;,2)#12
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#13
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;)V#Put(Ljava/util/Iterator;,NONSTATIC,Lsoot/PatchingChain$PatchingIterator;,innerIterator)#14
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;)V#Return(V)#15
soot.PatchingChain.iterator()Ljava/util/Iterator;#Return(Ljava/lang/Object;)#6
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,3)#3
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Goto(14)#4
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#14
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#15
soot.PatchingChain$PatchingIterator.hasNext()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.PatchingChain$PatchingIterator.hasNext()Z#Get(Ljava/util/Iterator;,NONSTATIC,Lsoot/PatchingChain$PatchingIterator;,innerIterator)#1
soot.PatchingChain$PatchingIterator.hasNext()Z#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#2
soot.PatchingChain$PatchingIterator.hasNext()Z#Return(I)#3
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Constant(I,0)#16
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#ConditionalBranch(I,ne,5)#17
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,2)#5
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#6
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#7
soot.PatchingChain$PatchingIterator.next()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#0
soot.PatchingChain$PatchingIterator.next()Ljava/lang/Object;#Invoke(VIRTUAL,Lsoot/PatchingChain$PatchingIterator;,next,()Lsoot/Unit;)#1
soot.PatchingChain$PatchingIterator.next()Lsoot/Unit;#LocalLoad(Ljava/lang/Object;,0)#0
soot.PatchingChain$PatchingIterator.next()Lsoot/Unit;#LocalLoad(Ljava/lang/Object;,0)#1
soot.PatchingChain$PatchingIterator.next()Lsoot/Unit;#Get(Ljava/util/Iterator;,NONSTATIC,Lsoot/PatchingChain$PatchingIterator;,innerIterator)#2
soot.PatchingChain$PatchingIterator.next()Lsoot/Unit;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#3
soot.PatchingChain$PatchingIterator.next()Lsoot/Unit;#CheckCast(Lsoot/Unit;)#4
soot.PatchingChain$PatchingIterator.next()Lsoot/Unit;#Put(Lsoot/Unit;,NONSTATIC,Lsoot/PatchingChain$PatchingIterator;,lastObject)#5
soot.PatchingChain$PatchingIterator.next()Lsoot/Unit;#LocalLoad(Ljava/lang/Object;,0)#6
soot.PatchingChain$PatchingIterator.next()Lsoot/Unit;#Constant(I,1)#7
soot.PatchingChain$PatchingIterator.next()Lsoot/Unit;#Put(Z,NONSTATIC,Lsoot/PatchingChain$PatchingIterator;,state)#8
soot.PatchingChain$PatchingIterator.next()Lsoot/Unit;#LocalLoad(Ljava/lang/Object;,0)#9
soot.PatchingChain$PatchingIterator.next()Lsoot/Unit;#Get(Lsoot/Unit;,NONSTATIC,Lsoot/PatchingChain$PatchingIterator;,lastObject)#10
soot.PatchingChain$PatchingIterator.next()Lsoot/Unit;#Return(Ljava/lang/Object;)#11
soot.PatchingChain$PatchingIterator.next()Ljava/lang/Object;#Return(Ljava/lang/Object;)#2
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#CheckCast(Lsoot/Unit;)#8
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#New(Ljava/util/ArrayList;,0)#9
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Dup(1,0)#10
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#11
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#12
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Pop(1)#13
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#18
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/toolkits/graph/UnitGraph;,unitChain)#19
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#20
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,3)#21
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#22
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#23
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Constant(I,0)#24
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#ConditionalBranch(I,eq,30)#25
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#26
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#27
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#CheckCast(Lsoot/Unit;)#28
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Goto(31)#29
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,5)#31
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Goto(106)#32
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#106
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Constant(L;,null)#107
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#ConditionalBranch(Ljava/lang/Object;,ne,33)#108
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#33
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,4)#34
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#35
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#36
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Constant(I,0)#37
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#ConditionalBranch(I,eq,43)#38
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#39
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#40
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#CheckCast(Lsoot/Unit;)#41
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Goto(44)#42
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,5)#44
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#New(Ljava/util/ArrayList;,0)#45
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Dup(1,0)#46
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#47
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,6)#48
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#49
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Unit;,fallsThrough,()Z)#50
soot.jimple.internal.AbstractDefinitionStmt.fallsThrough()Z#Constant(I,1)#0
soot.jimple.internal.AbstractDefinitionStmt.fallsThrough()Z#Return(I)#1
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Constant(I,0)#51
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#ConditionalBranch(I,eq,67)#52
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#53
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Constant(L;,null)#54
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#ConditionalBranch(Ljava/lang/Object;,eq,67)#55
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#56
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#57
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#58
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Pop(1)#59
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,2)#60
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#61
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#62
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#CheckCast(Ljava/util/List;)#63
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#64
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#65
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Pop(1)#66
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#67
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Unit;,branches,()Z)#68
soot.jimple.internal.AbstractDefinitionStmt.branches()Z#Constant(I,0)#0
soot.jimple.internal.AbstractDefinitionStmt.branches()Z#Return(I)#1
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Constant(I,0)#69
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#ConditionalBranch(I,eq,101)#70
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#101
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#102
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#103
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#104
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Pop(1)#105
soot.jimple.internal.JInvokeStmt.fallsThrough()Z#Constant(I,1)#0
soot.jimple.internal.JInvokeStmt.fallsThrough()Z#Return(I)#1
soot.jimple.internal.JInvokeStmt.branches()Z#Constant(I,0)#0
soot.jimple.internal.JInvokeStmt.branches()Z#Return(I)#1
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Constant(L;,null)#43
soot.jimple.internal.JReturnVoidStmt.fallsThrough()Z#Constant(I,0)#0
soot.jimple.internal.JReturnVoidStmt.fallsThrough()Z#Return(I)#1
soot.jimple.internal.JReturnVoidStmt.branches()Z#Constant(I,0)#0
soot.jimple.internal.JReturnVoidStmt.branches()Z#Return(I)#1
soot.toolkits.graph.UnitGraph.buildUnexceptionalEdges(Ljava/util/Map;Ljava/util/Map;)V#Return(V)#109
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#LocalLoad(Ljava/lang/Object;,0)#41
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/graph/ExceptionalUnitGraph;,unitToUnexceptionalSuccs)#42
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Invoke(STATIC,Lsoot/toolkits/graph/ExceptionalUnitGraph;,makeMappedListsUnmodifiable,(Ljava/util/Map;)V)#43
soot.toolkits.graph.UnitGraph.makeMappedListsUnmodifiable(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.UnitGraph.makeMappedListsUnmodifiable(Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,entrySet,()Ljava/util/Set;)#1
soot.toolkits.graph.UnitGraph.makeMappedListsUnmodifiable(Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#2
soot.toolkits.graph.UnitGraph.makeMappedListsUnmodifiable(Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,2)#3
soot.toolkits.graph.UnitGraph.makeMappedListsUnmodifiable(Ljava/util/Map;)V#Goto(27)#4
soot.toolkits.graph.UnitGraph.makeMappedListsUnmodifiable(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,2)#27
soot.toolkits.graph.UnitGraph.makeMappedListsUnmodifiable(Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#28
soot.toolkits.graph.UnitGraph.makeMappedListsUnmodifiable(Ljava/util/Map;)V#Constant(I,0)#29
soot.toolkits.graph.UnitGraph.makeMappedListsUnmodifiable(Ljava/util/Map;)V#ConditionalBranch(I,ne,5)#30
soot.toolkits.graph.UnitGraph.makeMappedListsUnmodifiable(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,2)#5
soot.toolkits.graph.UnitGraph.makeMappedListsUnmodifiable(Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#6
soot.toolkits.graph.UnitGraph.makeMappedListsUnmodifiable(Ljava/util/Map;)V#CheckCast(Ljava/util/Map$Entry;)#7
soot.toolkits.graph.UnitGraph.makeMappedListsUnmodifiable(Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,1)#8
soot.toolkits.graph.UnitGraph.makeMappedListsUnmodifiable(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#9
soot.toolkits.graph.UnitGraph.makeMappedListsUnmodifiable(Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map$Entry;,getValue,()Ljava/lang/Object;)#10
soot.toolkits.graph.UnitGraph.makeMappedListsUnmodifiable(Ljava/util/Map;)V#CheckCast(Ljava/util/List;)#11
soot.toolkits.graph.UnitGraph.makeMappedListsUnmodifiable(Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,3)#12
soot.toolkits.graph.UnitGraph.makeMappedListsUnmodifiable(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#13
soot.toolkits.graph.UnitGraph.makeMappedListsUnmodifiable(Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#14
soot.toolkits.graph.UnitGraph.makeMappedListsUnmodifiable(Ljava/util/Map;)V#Constant(I,0)#15
soot.toolkits.graph.UnitGraph.makeMappedListsUnmodifiable(Ljava/util/Map;)V#ConditionalBranch(I,ne,22)#16
soot.toolkits.graph.UnitGraph.makeMappedListsUnmodifiable(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#22
soot.toolkits.graph.UnitGraph.makeMappedListsUnmodifiable(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#23
soot.toolkits.graph.UnitGraph.makeMappedListsUnmodifiable(Ljava/util/Map;)V#Invoke(STATIC,Ljava/util/Collections;,unmodifiableList,(Ljava/util/List;)Ljava/util/List;)#24
soot.toolkits.graph.UnitGraph.makeMappedListsUnmodifiable(Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map$Entry;,setValue,(Ljava/lang/Object;)Ljava/lang/Object;)#25
soot.toolkits.graph.UnitGraph.makeMappedListsUnmodifiable(Ljava/util/Map;)V#Pop(1)#26
soot.toolkits.graph.UnitGraph.makeMappedListsUnmodifiable(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#17
soot.toolkits.graph.UnitGraph.makeMappedListsUnmodifiable(Ljava/util/Map;)V#Invoke(STATIC,Ljava/util/Collections;,emptyList,()Ljava/util/List;)#18
soot.toolkits.graph.UnitGraph.makeMappedListsUnmodifiable(Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map$Entry;,setValue,(Ljava/lang/Object;)Ljava/lang/Object;)#19
soot.toolkits.graph.UnitGraph.makeMappedListsUnmodifiable(Ljava/util/Map;)V#Pop(1)#20
soot.toolkits.graph.UnitGraph.makeMappedListsUnmodifiable(Ljava/util/Map;)V#Goto(27)#21
soot.toolkits.graph.UnitGraph.makeMappedListsUnmodifiable(Ljava/util/Map;)V#Return(V)#31
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#LocalLoad(Ljava/lang/Object;,0)#44
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/graph/ExceptionalUnitGraph;,unitToUnexceptionalPreds)#45
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Invoke(STATIC,Lsoot/toolkits/graph/ExceptionalUnitGraph;,makeMappedListsUnmodifiable,(Ljava/util/Map;)V)#46
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#LocalLoad(Ljava/lang/Object;,0)#47
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#LocalLoad(Ljava/lang/Object;,1)#48
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Put(Lsoot/toolkits/exceptions/ThrowAnalysis;,NONSTATIC,Lsoot/toolkits/graph/ExceptionalUnitGraph;,throwAnalysis)#49
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#LocalLoad(Ljava/lang/Object;,0)#50
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Get(Lsoot/Body;,NONSTATIC,Lsoot/toolkits/graph/ExceptionalUnitGraph;,body)#51
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Invoke(VIRTUAL,Lsoot/Body;,getTraps,()Lsoot/util/Chain;)#52
soot.Body.getTraps()Lsoot/util/Chain;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Body.getTraps()Lsoot/util/Chain;#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/Body;,trapChain)#1
soot.Body.getTraps()Lsoot/util/Chain;#Return(Ljava/lang/Object;)#2
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Invoke(INTERFACE,Lsoot/util/Chain;,size,()I)#53
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Constant(I,0)#54
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#ConditionalBranch(I,ne,74)#55
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#LocalLoad(Ljava/lang/Object;,0)#56
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Invoke(STATIC,Ljava/util/Collections;,emptyMap,()Ljava/util/Map;)#57
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/graph/ExceptionalUnitGraph;,unitToExceptionDests)#58
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#LocalLoad(Ljava/lang/Object;,0)#59
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Invoke(STATIC,Ljava/util/Collections;,emptyMap,()Ljava/util/Map;)#60
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/graph/ExceptionalUnitGraph;,unitToExceptionalSuccs)#61
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#LocalLoad(Ljava/lang/Object;,0)#62
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Invoke(STATIC,Ljava/util/Collections;,emptyMap,()Ljava/util/Map;)#63
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/graph/ExceptionalUnitGraph;,unitToExceptionalPreds)#64
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#LocalLoad(Ljava/lang/Object;,0)#65
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#LocalLoad(Ljava/lang/Object;,0)#66
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/graph/ExceptionalUnitGraph;,unitToUnexceptionalSuccs)#67
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/graph/ExceptionalUnitGraph;,unitToSuccs)#68
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#LocalLoad(Ljava/lang/Object;,0)#69
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#LocalLoad(Ljava/lang/Object;,0)#70
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/graph/ExceptionalUnitGraph;,unitToUnexceptionalPreds)#71
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/graph/ExceptionalUnitGraph;,unitToPreds)#72
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Goto(139)#73
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#LocalLoad(Ljava/lang/Object;,0)#139
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#LocalLoad(Ljava/lang/Object;,4)#140
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Invoke(SPECIAL,Lsoot/toolkits/graph/ExceptionalUnitGraph;,buildHeadsAndTails,(Ljava/util/Set;)V)#141
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#New(Ljava/util/ArrayList;,0)#0
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Dup(1,0)#1
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Invoke(INTERFACE,Ljava/util/Set;,size,()I)#3
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Constant(I,1)#4
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#BinaryOp(I,add)#5
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,(I)V)#6
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#LocalStore(Ljava/lang/Object;,2)#7
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,2)#8
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,1)#9
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Invoke(INTERFACE,Ljava/util/List;,addAll,(Ljava/util/Collection;)Z)#10
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Pop(1)#11
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,0)#12
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/toolkits/graph/ExceptionalUnitGraph;,unitChain)#13
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Invoke(INTERFACE,Lsoot/util/Chain;,getFirst,()Ljava/lang/Object;)#14
soot.PatchingChain.getFirst()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#0
soot.PatchingChain.getFirst()Ljava/lang/Object;#Invoke(VIRTUAL,Lsoot/PatchingChain;,getFirst,()Lsoot/Unit;)#1
soot.PatchingChain.getFirst()Lsoot/Unit;#LocalLoad(Ljava/lang/Object;,0)#0
soot.PatchingChain.getFirst()Lsoot/Unit;#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/PatchingChain;,innerChain)#1
soot.PatchingChain.getFirst()Lsoot/Unit;#Invoke(INTERFACE,Lsoot/util/Chain;,getFirst,()Ljava/lang/Object;)#2
soot.util.HashChain.getFirst()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.HashChain.getFirst()Ljava/lang/Object;#Get(Ljava/lang/Object;,NONSTATIC,Lsoot/util/HashChain;,firstItem)#1
soot.util.HashChain.getFirst()Ljava/lang/Object;#Constant(L;,null)#2
soot.util.HashChain.getFirst()Ljava/lang/Object;#ConditionalBranch(Ljava/lang/Object;,ne,8)#3
soot.util.HashChain.getFirst()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#8
soot.util.HashChain.getFirst()Ljava/lang/Object;#Get(Ljava/lang/Object;,NONSTATIC,Lsoot/util/HashChain;,firstItem)#9
soot.util.HashChain.getFirst()Ljava/lang/Object;#Return(Ljava/lang/Object;)#10
soot.PatchingChain.getFirst()Lsoot/Unit;#CheckCast(Lsoot/Unit;)#3
soot.PatchingChain.getFirst()Lsoot/Unit;#Return(Ljava/lang/Object;)#4
soot.PatchingChain.getFirst()Ljava/lang/Object;#Return(Ljava/lang/Object;)#2
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#CheckCast(Lsoot/Unit;)#15
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#LocalStore(Ljava/lang/Object;,3)#16
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,2)#17
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,3)#18
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Invoke(INTERFACE,Ljava/util/List;,contains,(Ljava/lang/Object;)Z)#19
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Constant(I,0)#20
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#ConditionalBranch(I,ne,26)#21
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,2)#22
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,3)#23
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#24
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Pop(1)#25
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#New(Ljava/util/ArrayList;,0)#26
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Dup(1,0)#27
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#28
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#LocalStore(Ljava/lang/Object;,4)#29
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,0)#30
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/toolkits/graph/ExceptionalUnitGraph;,unitChain)#31
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#32
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#LocalStore(Ljava/lang/Object;,5)#33
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Goto(101)#34
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,5)#101
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#102
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Constant(I,0)#103
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#ConditionalBranch(I,ne,35)#104
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,5)#35
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#36
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#CheckCast(Lsoot/Unit;)#37
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#LocalStore(Ljava/lang/Object;,6)#38
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,6)#39
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Instanceof(Lsoot/jimple/ReturnStmt;)#40
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Constant(I,0)#41
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#ConditionalBranch(I,ne,55)#42
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,6)#43
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Instanceof(Lsoot/jimple/ReturnVoidStmt;)#44
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Constant(I,0)#45
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#ConditionalBranch(I,ne,55)#46
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,6)#47
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Instanceof(Lsoot/baf/ReturnInst;)#48
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Constant(I,0)#49
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#ConditionalBranch(I,ne,55)#50
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,6)#51
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Instanceof(Lsoot/baf/ReturnVoidInst;)#52
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Constant(I,0)#53
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#ConditionalBranch(I,eq,60)#54
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,6)#60
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Instanceof(Lsoot/jimple/ThrowStmt;)#61
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Constant(I,0)#62
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#ConditionalBranch(I,ne,68)#63
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,6)#64
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Instanceof(Lsoot/baf/ThrowInst;)#65
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Constant(I,0)#66
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#ConditionalBranch(I,eq,101)#67
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,4)#55
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,6)#56
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#57
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Pop(1)#58
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Goto(101)#59
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,0)#105
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,4)#106
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Invoke(STATIC,Ljava/util/Collections;,unmodifiableList,(Ljava/util/List;)Ljava/util/List;)#107
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/toolkits/graph/ExceptionalUnitGraph;,tails)#108
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,0)#109
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,2)#110
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Invoke(STATIC,Ljava/util/Collections;,unmodifiableList,(Ljava/util/List;)Ljava/util/List;)#111
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/toolkits/graph/ExceptionalUnitGraph;,heads)#112
soot.toolkits.graph.ExceptionalUnitGraph.buildHeadsAndTails(Ljava/util/Set;)V#Return(V)#113
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#142
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#143
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Constant(I,0)#144
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#ConditionalBranch(I,eq,149)#145
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Invoke(STATIC,Lsoot/util/PhaseDumper;,v,()Lsoot/util/PhaseDumper;)#149
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#LocalLoad(Ljava/lang/Object;,0)#150
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Invoke(VIRTUAL,Lsoot/util/PhaseDumper;,dumpGraph,(Lsoot/toolkits/graph/ExceptionalGraph;)V)#151
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/ExceptionalGraph;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/ExceptionalGraph;)V#Get(Z,NONSTATIC,Lsoot/util/PhaseDumper;,alreadyDumping)#1
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/ExceptionalGraph;)V#Constant(I,0)#2
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/ExceptionalGraph;)V#ConditionalBranch(I,eq,5)#3
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/ExceptionalGraph;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/ExceptionalGraph;)V#Constant(I,1)#6
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/ExceptionalGraph;)V#Put(Z,NONSTATIC,Lsoot/util/PhaseDumper;,alreadyDumping)#7
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/ExceptionalGraph;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/ExceptionalGraph;)V#Get(Lsoot/util/PhaseDumper$PhaseStack;,NONSTATIC,Lsoot/util/PhaseDumper;,phaseStack)#9
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/ExceptionalGraph;)V#Invoke(VIRTUAL,Lsoot/util/PhaseDumper$PhaseStack;,currentPhase,()Ljava/lang/String;)#10
soot.util.PhaseDumper$PhaseStack.currentPhase()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.PhaseDumper$PhaseStack.currentPhase()Ljava/lang/String;#Invoke(VIRTUAL,Lsoot/util/PhaseDumper$PhaseStack;,size,()I)#1
soot.util.PhaseDumper$PhaseStack.currentPhase()Ljava/lang/String;#Constant(I,0)#2
soot.util.PhaseDumper$PhaseStack.currentPhase()Ljava/lang/String;#ConditionalBranch(I,gt,6)#3
soot.util.PhaseDumper$PhaseStack.currentPhase()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#6
soot.util.PhaseDumper$PhaseStack.currentPhase()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#7
soot.util.PhaseDumper$PhaseStack.currentPhase()Ljava/lang/String;#Invoke(VIRTUAL,Lsoot/util/PhaseDumper$PhaseStack;,size,()I)#8
soot.util.PhaseDumper$PhaseStack.currentPhase()Ljava/lang/String;#Constant(I,1)#9
soot.util.PhaseDumper$PhaseStack.currentPhase()Ljava/lang/String;#BinaryOp(I,sub)#10
soot.util.PhaseDumper$PhaseStack.currentPhase()Ljava/lang/String;#Invoke(VIRTUAL,Lsoot/util/PhaseDumper$PhaseStack;,get,(I)Ljava/lang/Object;)#11
soot.util.PhaseDumper$PhaseStack.currentPhase()Ljava/lang/String;#CheckCast(Ljava/lang/String;)#12
soot.util.PhaseDumper$PhaseStack.currentPhase()Ljava/lang/String;#Return(Ljava/lang/Object;)#13
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/ExceptionalGraph;)V#LocalStore(Ljava/lang/Object;,2)#11
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/ExceptionalGraph;)V#LocalLoad(Ljava/lang/Object;,0)#12
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/ExceptionalGraph;)V#LocalLoad(Ljava/lang/Object;,2)#13
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/ExceptionalGraph;)V#Invoke(SPECIAL,Lsoot/util/PhaseDumper;,isCFGDumpingPhase,(Ljava/lang/String;)Z)#14
soot.util.PhaseDumper.isCFGDumpingPhase(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.PhaseDumper.isCFGDumpingPhase(Ljava/lang/String;)Z#Get(Ljava/util/List;,NONSTATIC,Lsoot/util/PhaseDumper;,cfgDumpingPhases)#1
soot.util.PhaseDumper.isCFGDumpingPhase(Ljava/lang/String;)Z#Constant(L;,null)#2
soot.util.PhaseDumper.isCFGDumpingPhase(Ljava/lang/String;)Z#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
soot.util.PhaseDumper.isCFGDumpingPhase(Ljava/lang/String;)Z#Constant(I,0)#4
soot.util.PhaseDumper.isCFGDumpingPhase(Ljava/lang/String;)Z#Return(I)#5
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/ExceptionalGraph;)V#Constant(I,0)#15
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/ExceptionalGraph;)V#ConditionalBranch(I,eq,74)#16
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/ExceptionalGraph;)V#LocalLoad(Ljava/lang/Object;,0)#74
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/ExceptionalGraph;)V#Constant(I,0)#75
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/ExceptionalGraph;)V#Put(Z,NONSTATIC,Lsoot/util/PhaseDumper;,alreadyDumping)#76
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/ExceptionalGraph;)V#Return(V)#77
soot.toolkits.graph.ExceptionalUnitGraph.initialize(Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Return(V)#152
soot.toolkits.graph.ExceptionalUnitGraph.<init>(Lsoot/Body;Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V#Return(V)#7
soot.toolkits.graph.ExceptionalUnitGraph.<init>(Lsoot/Body;)V#Return(V)#7
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,7)#47
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Lsoot/toolkits/scalar/SmartLocalDefs;,0)#48
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#49
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#50
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Lsoot/toolkits/scalar/SimpleLiveLocals;,0)#51
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#52
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#53
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Lsoot/toolkits/scalar/SimpleLiveLocals;,<init>,(Lsoot/toolkits/graph/UnitGraph;)V)#54
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#2
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#3
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Constant(I,0)#4
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#ConditionalBranch(I,eq,9)#5
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#9
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(VIRTUAL,Lsoot/options/Options;,verbose,()Z)#10
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Constant(I,0)#11
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#ConditionalBranch(I,eq,28)#12
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#New(Lsoot/toolkits/scalar/SimpleLiveLocalsAnalysis;,0)#28
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Dup(1,0)#29
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,1)#30
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(SPECIAL,Lsoot/toolkits/scalar/SimpleLiveLocalsAnalysis;,<init>,(Lsoot/toolkits/graph/UnitGraph;)V)#31
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(SPECIAL,Lsoot/toolkits/scalar/BackwardFlowAnalysis;,<init>,(Lsoot/toolkits/graph/DirectedGraph;)V)#2
soot.toolkits.scalar.BackwardFlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.BackwardFlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.toolkits.scalar.BackwardFlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#Invoke(SPECIAL,Lsoot/toolkits/scalar/FlowAnalysis;,<init>,(Lsoot/toolkits/graph/DirectedGraph;)V)#2
soot.toolkits.scalar.FlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.FlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.toolkits.scalar.FlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#Invoke(SPECIAL,Lsoot/toolkits/scalar/AbstractFlowAnalysis;,<init>,(Lsoot/toolkits/graph/DirectedGraph;)V)#2
soot.toolkits.scalar.AbstractFlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.AbstractFlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.toolkits.scalar.AbstractFlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.toolkits.scalar.AbstractFlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#New(Ljava/util/HashMap;,0)#3
soot.toolkits.scalar.AbstractFlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#Dup(1,0)#4
soot.toolkits.scalar.AbstractFlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#LocalLoad(Ljava/lang/Object;,1)#5
soot.toolkits.scalar.AbstractFlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#Invoke(INTERFACE,Lsoot/toolkits/graph/DirectedGraph;,size,()I)#6
soot.toolkits.graph.UnitGraph.size()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.UnitGraph.size()I#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/toolkits/graph/UnitGraph;,unitChain)#1
soot.toolkits.graph.UnitGraph.size()I#Invoke(INTERFACE,Lsoot/util/Chain;,size,()I)#2
soot.toolkits.graph.UnitGraph.size()I#Return(I)#3
soot.toolkits.scalar.AbstractFlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#Constant(I,2)#7
soot.toolkits.scalar.AbstractFlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#BinaryOp(I,mul)#8
soot.toolkits.scalar.AbstractFlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#Constant(I,1)#9
soot.toolkits.scalar.AbstractFlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#BinaryOp(I,add)#10
soot.toolkits.scalar.AbstractFlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#Constant(F,0.7)#11
soot.toolkits.scalar.AbstractFlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(IF)V)#12
soot.toolkits.scalar.AbstractFlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/AbstractFlowAnalysis;,unitToBeforeFlow)#13
soot.toolkits.scalar.AbstractFlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#LocalLoad(Ljava/lang/Object;,0)#14
soot.toolkits.scalar.AbstractFlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#LocalLoad(Ljava/lang/Object;,1)#15
soot.toolkits.scalar.AbstractFlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#Put(Lsoot/toolkits/graph/DirectedGraph;,NONSTATIC,Lsoot/toolkits/scalar/AbstractFlowAnalysis;,graph)#16
soot.toolkits.scalar.AbstractFlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#17
soot.toolkits.scalar.AbstractFlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#Invoke(VIRTUAL,Lsoot/options/Options;,interactive_mode,()Z)#18
soot.options.Options.interactive_mode()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.interactive_mode()Z#Get(Z,NONSTATIC,Lsoot/options/Options;,interactive_mode)#1
soot.options.Options.interactive_mode()Z#Return(I)#2
soot.toolkits.scalar.AbstractFlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#Constant(I,0)#19
soot.toolkits.scalar.AbstractFlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#ConditionalBranch(I,eq,24)#20
soot.toolkits.scalar.AbstractFlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#Return(V)#24
soot.toolkits.scalar.FlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.toolkits.scalar.FlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#New(Ljava/util/HashMap;,0)#4
soot.toolkits.scalar.FlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#Dup(1,0)#5
soot.toolkits.scalar.FlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#LocalLoad(Ljava/lang/Object;,1)#6
soot.toolkits.scalar.FlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#Invoke(INTERFACE,Lsoot/toolkits/graph/DirectedGraph;,size,()I)#7
soot.toolkits.scalar.FlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#Constant(I,2)#8
soot.toolkits.scalar.FlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#BinaryOp(I,mul)#9
soot.toolkits.scalar.FlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#Constant(I,1)#10
soot.toolkits.scalar.FlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#BinaryOp(I,add)#11
soot.toolkits.scalar.FlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#Constant(F,0.7)#12
soot.toolkits.scalar.FlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(IF)V)#13
soot.toolkits.scalar.FlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/FlowAnalysis;,unitToAfterFlow)#14
soot.toolkits.scalar.FlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#Return(V)#15
soot.toolkits.scalar.BackwardFlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#Return(V)#3
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#3
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#4
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Constant(I,0)#5
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#ConditionalBranch(I,eq,10)#6
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,0)#10
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#New(Lsoot/toolkits/scalar/ArraySparseSet;,0)#11
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Dup(1,0)#12
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(SPECIAL,Lsoot/toolkits/scalar/ArraySparseSet;,<init>,()V)#13
soot.toolkits.scalar.ArraySparseSet.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.ArraySparseSet.<init>()V#Invoke(SPECIAL,Lsoot/toolkits/scalar/AbstractFlowSet;,<init>,()V)#1
soot.toolkits.scalar.AbstractFlowSet.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.AbstractFlowSet.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.toolkits.scalar.AbstractFlowSet.<init>()V#Return(V)#2
soot.toolkits.scalar.ArraySparseSet.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
soot.toolkits.scalar.ArraySparseSet.<init>()V#Constant(I,8)#3
soot.toolkits.scalar.ArraySparseSet.<init>()V#Put(I,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,maxElements)#4
soot.toolkits.scalar.ArraySparseSet.<init>()V#LocalLoad(Ljava/lang/Object;,0)#5
soot.toolkits.scalar.ArraySparseSet.<init>()V#Constant(I,8)#6
soot.toolkits.scalar.ArraySparseSet.<init>()V#New([Ljava/lang/Object;,1)#7
soot.toolkits.scalar.ArraySparseSet.<init>()V#Put([Ljava/lang/Object;,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,elements)#8
soot.toolkits.scalar.ArraySparseSet.<init>()V#LocalLoad(Ljava/lang/Object;,0)#9
soot.toolkits.scalar.ArraySparseSet.<init>()V#Constant(I,0)#10
soot.toolkits.scalar.ArraySparseSet.<init>()V#Put(I,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,numElements)#11
soot.toolkits.scalar.ArraySparseSet.<init>()V#Return(V)#12
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Put(Lsoot/toolkits/scalar/FlowSet;,NONSTATIC,Lsoot/toolkits/scalar/SimpleLiveLocalsAnalysis;,emptySet)#14
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,0)#15
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#New(Ljava/util/HashMap;,0)#16
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Dup(1,0)#17
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,1)#18
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(VIRTUAL,Lsoot/toolkits/graph/UnitGraph;,size,()I)#19
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Constant(I,2)#20
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#BinaryOp(I,mul)#21
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Constant(I,1)#22
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#BinaryOp(I,add)#23
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Constant(F,0.7)#24
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(IF)V)#25
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/SimpleLiveLocalsAnalysis;,unitToKillSet)#26
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,1)#27
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(VIRTUAL,Lsoot/toolkits/graph/UnitGraph;,iterator,()Ljava/util/Iterator;)#28
soot.toolkits.graph.UnitGraph.iterator()Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.UnitGraph.iterator()Ljava/util/Iterator;#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/toolkits/graph/UnitGraph;,unitChain)#1
soot.toolkits.graph.UnitGraph.iterator()Ljava/util/Iterator;#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#2
soot.toolkits.graph.UnitGraph.iterator()Ljava/util/Iterator;#Return(Ljava/lang/Object;)#3
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalStore(Ljava/lang/Object;,2)#29
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Goto(68)#30
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,2)#68
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#69
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Constant(I,0)#70
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#ConditionalBranch(I,ne,31)#71
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,2)#31
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#32
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#CheckCast(Lsoot/Unit;)#33
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalStore(Ljava/lang/Object;,3)#34
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,0)#35
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Get(Lsoot/toolkits/scalar/FlowSet;,NONSTATIC,Lsoot/toolkits/scalar/SimpleLiveLocalsAnalysis;,emptySet)#36
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(INTERFACE,Lsoot/toolkits/scalar/FlowSet;,clone,()Lsoot/toolkits/scalar/FlowSet;)#37
soot.toolkits.scalar.ArraySparseSet.clone()Lsoot/toolkits/scalar/FlowSet;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.ArraySparseSet.clone()Lsoot/toolkits/scalar/FlowSet;#Invoke(VIRTUAL,Lsoot/toolkits/scalar/ArraySparseSet;,clone,()Lsoot/toolkits/scalar/ArraySparseSet;)#1
soot.toolkits.scalar.ArraySparseSet.clone()Lsoot/toolkits/scalar/ArraySparseSet;#New(Lsoot/toolkits/scalar/ArraySparseSet;,0)#0
soot.toolkits.scalar.ArraySparseSet.clone()Lsoot/toolkits/scalar/ArraySparseSet;#Dup(1,0)#1
soot.toolkits.scalar.ArraySparseSet.clone()Lsoot/toolkits/scalar/ArraySparseSet;#LocalLoad(Ljava/lang/Object;,0)#2
soot.toolkits.scalar.ArraySparseSet.clone()Lsoot/toolkits/scalar/ArraySparseSet;#Invoke(SPECIAL,Lsoot/toolkits/scalar/ArraySparseSet;,<init>,(Lsoot/toolkits/scalar/ArraySparseSet;)V)#3
soot.toolkits.scalar.ArraySparseSet.<init>(Lsoot/toolkits/scalar/ArraySparseSet;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.ArraySparseSet.<init>(Lsoot/toolkits/scalar/ArraySparseSet;)V#Invoke(SPECIAL,Lsoot/toolkits/scalar/AbstractFlowSet;,<init>,()V)#1
soot.toolkits.scalar.ArraySparseSet.<init>(Lsoot/toolkits/scalar/ArraySparseSet;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.toolkits.scalar.ArraySparseSet.<init>(Lsoot/toolkits/scalar/ArraySparseSet;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.toolkits.scalar.ArraySparseSet.<init>(Lsoot/toolkits/scalar/ArraySparseSet;)V#Get(I,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,numElements)#4
soot.toolkits.scalar.ArraySparseSet.<init>(Lsoot/toolkits/scalar/ArraySparseSet;)V#Put(I,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,numElements)#5
soot.toolkits.scalar.ArraySparseSet.<init>(Lsoot/toolkits/scalar/ArraySparseSet;)V#LocalLoad(Ljava/lang/Object;,0)#6
soot.toolkits.scalar.ArraySparseSet.<init>(Lsoot/toolkits/scalar/ArraySparseSet;)V#LocalLoad(Ljava/lang/Object;,1)#7
soot.toolkits.scalar.ArraySparseSet.<init>(Lsoot/toolkits/scalar/ArraySparseSet;)V#Get(I,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,maxElements)#8
soot.toolkits.scalar.ArraySparseSet.<init>(Lsoot/toolkits/scalar/ArraySparseSet;)V#Put(I,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,maxElements)#9
soot.toolkits.scalar.ArraySparseSet.<init>(Lsoot/toolkits/scalar/ArraySparseSet;)V#LocalLoad(Ljava/lang/Object;,0)#10
soot.toolkits.scalar.ArraySparseSet.<init>(Lsoot/toolkits/scalar/ArraySparseSet;)V#LocalLoad(Ljava/lang/Object;,1)#11
soot.toolkits.scalar.ArraySparseSet.<init>(Lsoot/toolkits/scalar/ArraySparseSet;)V#Get([Ljava/lang/Object;,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,elements)#12
soot.toolkits.scalar.ArraySparseSet.<init>(Lsoot/toolkits/scalar/ArraySparseSet;)V#Invoke(VIRTUAL,[Ljava/lang/Object;,clone,()Ljava/lang/Object;)#13
soot.toolkits.scalar.ArraySparseSet.<init>(Lsoot/toolkits/scalar/ArraySparseSet;)V#CheckCast([Ljava/lang/Object;)#14
soot.toolkits.scalar.ArraySparseSet.<init>(Lsoot/toolkits/scalar/ArraySparseSet;)V#Put([Ljava/lang/Object;,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,elements)#15
soot.toolkits.scalar.ArraySparseSet.<init>(Lsoot/toolkits/scalar/ArraySparseSet;)V#Return(V)#16
soot.toolkits.scalar.ArraySparseSet.clone()Lsoot/toolkits/scalar/ArraySparseSet;#Return(Ljava/lang/Object;)#4
soot.toolkits.scalar.ArraySparseSet.clone()Lsoot/toolkits/scalar/FlowSet;#Return(Ljava/lang/Object;)#2
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalStore(Ljava/lang/Object;,4)#38
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,3)#39
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(INTERFACE,Lsoot/Unit;,getDefBoxes,()Ljava/util/List;)#40
soot.jimple.internal.AbstractDefinitionStmt.getDefBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.AbstractDefinitionStmt.getDefBoxes()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lsoot/jimple/internal/AbstractDefinitionStmt;,defBoxes)#1
soot.jimple.internal.AbstractDefinitionStmt.getDefBoxes()Ljava/util/List;#Return(Ljava/lang/Object;)#2
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#41
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalStore(Ljava/lang/Object;,5)#42
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Goto(58)#43
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,5)#58
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#59
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Constant(I,0)#60
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#ConditionalBranch(I,ne,44)#61
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,5)#44
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#45
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#CheckCast(Lsoot/ValueBox;)#46
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalStore(Ljava/lang/Object;,6)#47
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,6)#48
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#49
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Instanceof(Lsoot/Local;)#50
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Constant(I,0)#51
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#ConditionalBranch(I,eq,58)#52
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,4)#53
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,6)#54
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#55
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,4)#56
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(INTERFACE,Lsoot/toolkits/scalar/FlowSet;,add,(Ljava/lang/Object;Lsoot/toolkits/scalar/FlowSet;)V)#57
soot.toolkits.scalar.AbstractFlowSet.add(Ljava/lang/Object;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,2)#0
soot.toolkits.scalar.AbstractFlowSet.add(Ljava/lang/Object;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,0)#1
soot.toolkits.scalar.AbstractFlowSet.add(Ljava/lang/Object;Lsoot/toolkits/scalar/FlowSet;)V#ConditionalBranch(Ljava/lang/Object;,eq,6)#2
soot.toolkits.scalar.AbstractFlowSet.add(Ljava/lang/Object;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,2)#6
soot.toolkits.scalar.AbstractFlowSet.add(Ljava/lang/Object;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,1)#7
soot.toolkits.scalar.AbstractFlowSet.add(Ljava/lang/Object;Lsoot/toolkits/scalar/FlowSet;)V#Invoke(INTERFACE,Lsoot/toolkits/scalar/FlowSet;,add,(Ljava/lang/Object;)V)#8
soot.toolkits.scalar.ArraySparseSet.add(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.ArraySparseSet.add(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.toolkits.scalar.ArraySparseSet.add(Ljava/lang/Object;)V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/ArraySparseSet;,contains,(Ljava/lang/Object;)Z)#2
soot.toolkits.scalar.ArraySparseSet.contains(Ljava/lang/Object;)Z#Constant(I,0)#0
soot.toolkits.scalar.ArraySparseSet.contains(Ljava/lang/Object;)Z#LocalStore(I,2)#1
soot.toolkits.scalar.ArraySparseSet.contains(Ljava/lang/Object;)Z#Goto(17)#2
soot.toolkits.scalar.ArraySparseSet.contains(Ljava/lang/Object;)Z#LocalLoad(I,2)#17
soot.toolkits.scalar.ArraySparseSet.contains(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#18
soot.toolkits.scalar.ArraySparseSet.contains(Ljava/lang/Object;)Z#Get(I,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,numElements)#19
soot.toolkits.scalar.ArraySparseSet.contains(Ljava/lang/Object;)Z#ConditionalBranch(I,lt,3)#20
soot.toolkits.scalar.ArraySparseSet.contains(Ljava/lang/Object;)Z#Constant(I,0)#21
soot.toolkits.scalar.ArraySparseSet.contains(Ljava/lang/Object;)Z#Return(I)#22
soot.toolkits.scalar.ArraySparseSet.add(Ljava/lang/Object;)V#Constant(I,0)#3
soot.toolkits.scalar.ArraySparseSet.add(Ljava/lang/Object;)V#ConditionalBranch(I,ne,23)#4
soot.toolkits.scalar.ArraySparseSet.add(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.toolkits.scalar.ArraySparseSet.add(Ljava/lang/Object;)V#Get(I,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,numElements)#6
soot.toolkits.scalar.ArraySparseSet.add(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#7
soot.toolkits.scalar.ArraySparseSet.add(Ljava/lang/Object;)V#Get(I,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,maxElements)#8
soot.toolkits.scalar.ArraySparseSet.add(Ljava/lang/Object;)V#ConditionalBranch(I,ne,12)#9
soot.toolkits.scalar.ArraySparseSet.add(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#12
soot.toolkits.scalar.ArraySparseSet.add(Ljava/lang/Object;)V#Get([Ljava/lang/Object;,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,elements)#13
soot.toolkits.scalar.ArraySparseSet.add(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#14
soot.toolkits.scalar.ArraySparseSet.add(Ljava/lang/Object;)V#Dup(1,0)#15
soot.toolkits.scalar.ArraySparseSet.add(Ljava/lang/Object;)V#Get(I,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,numElements)#16
soot.toolkits.scalar.ArraySparseSet.add(Ljava/lang/Object;)V#Dup(1,1)#17
soot.toolkits.scalar.ArraySparseSet.add(Ljava/lang/Object;)V#Constant(I,1)#18
soot.toolkits.scalar.ArraySparseSet.add(Ljava/lang/Object;)V#BinaryOp(I,add)#19
soot.toolkits.scalar.ArraySparseSet.add(Ljava/lang/Object;)V#Put(I,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,numElements)#20
soot.toolkits.scalar.ArraySparseSet.add(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#21
soot.toolkits.scalar.ArraySparseSet.add(Ljava/lang/Object;)V#ArrayStore(Ljava/lang/Object;)#22
soot.toolkits.scalar.ArraySparseSet.add(Ljava/lang/Object;)V#Return(V)#23
soot.toolkits.scalar.AbstractFlowSet.add(Ljava/lang/Object;Lsoot/toolkits/scalar/FlowSet;)V#Return(V)#9
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,0)#62
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/SimpleLiveLocalsAnalysis;,unitToKillSet)#63
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,3)#64
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,4)#65
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#66
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Pop(1)#67
soot.util.SingletonList.size()I#Constant(I,1)#0
soot.util.SingletonList.size()I#Return(I)#1
soot.util.SingletonList.get(I)Ljava/lang/Object;#LocalLoad(I,1)#0
soot.util.SingletonList.get(I)Ljava/lang/Object;#Constant(I,0)#1
soot.util.SingletonList.get(I)Ljava/lang/Object;#ConditionalBranch(I,eq,14)#2
soot.util.SingletonList.get(I)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#14
soot.util.SingletonList.get(I)Ljava/lang/Object;#Get(Ljava/lang/Object;,NONSTATIC,Lsoot/util/SingletonList;,o)#15
soot.util.SingletonList.get(I)Ljava/lang/Object;#Return(Ljava/lang/Object;)#16
soot.AbstractUnit.getDefBoxes()Ljava/util/List;#Get(Ljava/util/List;,STATIC,Lsoot/AbstractUnit;,emptyList)#0
soot.AbstractUnit.getDefBoxes()Ljava/util/List;#Return(Ljava/lang/Object;)#1
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,0)#72
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#New(Ljava/util/HashMap;,0)#73
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Dup(1,0)#74
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,1)#75
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(VIRTUAL,Lsoot/toolkits/graph/UnitGraph;,size,()I)#76
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Constant(I,2)#77
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#BinaryOp(I,mul)#78
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Constant(I,1)#79
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#BinaryOp(I,add)#80
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Constant(F,0.7)#81
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(IF)V)#82
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/SimpleLiveLocalsAnalysis;,unitToGenerateSet)#83
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,1)#84
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(VIRTUAL,Lsoot/toolkits/graph/UnitGraph;,iterator,()Ljava/util/Iterator;)#85
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalStore(Ljava/lang/Object;,2)#86
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Goto(125)#87
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,2)#125
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#126
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Constant(I,0)#127
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#ConditionalBranch(I,ne,88)#128
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,2)#88
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#89
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#CheckCast(Lsoot/Unit;)#90
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalStore(Ljava/lang/Object;,3)#91
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,0)#92
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Get(Lsoot/toolkits/scalar/FlowSet;,NONSTATIC,Lsoot/toolkits/scalar/SimpleLiveLocalsAnalysis;,emptySet)#93
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(INTERFACE,Lsoot/toolkits/scalar/FlowSet;,clone,()Lsoot/toolkits/scalar/FlowSet;)#94
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalStore(Ljava/lang/Object;,4)#95
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,3)#96
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(INTERFACE,Lsoot/Unit;,getUseBoxes,()Ljava/util/List;)#97
soot.jimple.internal.AbstractDefinitionStmt.getUseBoxes()Ljava/util/List;#New(Ljava/util/ArrayList;,0)#0
soot.jimple.internal.AbstractDefinitionStmt.getUseBoxes()Ljava/util/List;#Dup(1,0)#1
soot.jimple.internal.AbstractDefinitionStmt.getUseBoxes()Ljava/util/List;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#2
soot.jimple.internal.AbstractDefinitionStmt.getUseBoxes()Ljava/util/List;#LocalStore(Ljava/lang/Object;,1)#3
soot.jimple.internal.AbstractDefinitionStmt.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#4
soot.jimple.internal.AbstractDefinitionStmt.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#5
soot.jimple.internal.AbstractDefinitionStmt.getUseBoxes()Ljava/util/List;#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/AbstractDefinitionStmt;,leftBox)#6
soot.jimple.internal.AbstractDefinitionStmt.getUseBoxes()Ljava/util/List;#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#7
soot.jimple.internal.AbstractDefinitionStmt.getUseBoxes()Ljava/util/List;#Invoke(INTERFACE,Lsoot/Value;,getUseBoxes,()Ljava/util/List;)#8
soot.jimple.internal.JimpleLocal.getUseBoxes()Ljava/util/List;#Get(Ljava/util/List;,STATIC,Lsoot/AbstractUnit;,emptyList)#0
soot.jimple.internal.JimpleLocal.getUseBoxes()Ljava/util/List;#Return(Ljava/lang/Object;)#1
soot.jimple.internal.AbstractDefinitionStmt.getUseBoxes()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,addAll,(Ljava/util/Collection;)Z)#9
soot.jimple.internal.AbstractDefinitionStmt.getUseBoxes()Ljava/util/List;#Pop(1)#10
soot.jimple.internal.AbstractDefinitionStmt.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#11
soot.jimple.internal.AbstractDefinitionStmt.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#12
soot.jimple.internal.AbstractDefinitionStmt.getUseBoxes()Ljava/util/List;#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/AbstractDefinitionStmt;,rightBox)#13
soot.jimple.internal.AbstractDefinitionStmt.getUseBoxes()Ljava/util/List;#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#14
soot.jimple.internal.AbstractDefinitionStmt.getUseBoxes()Ljava/util/List;#Invoke(INTERFACE,Lsoot/Value;,getUseBoxes,()Ljava/util/List;)#15
soot.jimple.ThisRef.getUseBoxes()Ljava/util/List;#Get(Ljava/util/List;,STATIC,Lsoot/AbstractUnit;,emptyList)#0
soot.jimple.ThisRef.getUseBoxes()Ljava/util/List;#Return(Ljava/lang/Object;)#1
soot.jimple.internal.AbstractDefinitionStmt.getUseBoxes()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,addAll,(Ljava/util/Collection;)Z)#16
soot.jimple.internal.AbstractDefinitionStmt.getUseBoxes()Ljava/util/List;#Pop(1)#17
soot.jimple.internal.AbstractDefinitionStmt.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#18
soot.jimple.internal.AbstractDefinitionStmt.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#19
soot.jimple.internal.AbstractDefinitionStmt.getUseBoxes()Ljava/util/List;#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/AbstractDefinitionStmt;,rightBox)#20
soot.jimple.internal.AbstractDefinitionStmt.getUseBoxes()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#21
soot.jimple.internal.AbstractDefinitionStmt.getUseBoxes()Ljava/util/List;#Pop(1)#22
soot.jimple.internal.AbstractDefinitionStmt.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#23
soot.jimple.internal.AbstractDefinitionStmt.getUseBoxes()Ljava/util/List;#Return(Ljava/lang/Object;)#24
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#98
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalStore(Ljava/lang/Object;,5)#99
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Goto(115)#100
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,5)#115
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#116
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Constant(I,0)#117
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#ConditionalBranch(I,ne,101)#118
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,5)#101
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#102
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#CheckCast(Lsoot/ValueBox;)#103
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalStore(Ljava/lang/Object;,6)#104
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,6)#105
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#106
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Instanceof(Lsoot/Local;)#107
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Constant(I,0)#108
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#ConditionalBranch(I,eq,115)#109
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,0)#119
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/SimpleLiveLocalsAnalysis;,unitToGenerateSet)#120
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,3)#121
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,4)#122
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#123
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Pop(1)#124
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,4)#110
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,6)#111
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#112
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,4)#113
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(INTERFACE,Lsoot/toolkits/scalar/FlowSet;,add,(Ljava/lang/Object;Lsoot/toolkits/scalar/FlowSet;)V)#114
soot.jimple.internal.JInvokeStmt.getUseBoxes()Ljava/util/List;#New(Ljava/util/ArrayList;,0)#0
soot.jimple.internal.JInvokeStmt.getUseBoxes()Ljava/util/List;#Dup(1,0)#1
soot.jimple.internal.JInvokeStmt.getUseBoxes()Ljava/util/List;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#2
soot.jimple.internal.JInvokeStmt.getUseBoxes()Ljava/util/List;#LocalStore(Ljava/lang/Object;,1)#3
soot.jimple.internal.JInvokeStmt.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#4
soot.jimple.internal.JInvokeStmt.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#5
soot.jimple.internal.JInvokeStmt.getUseBoxes()Ljava/util/List;#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/JInvokeStmt;,invokeExprBox)#6
soot.jimple.internal.JInvokeStmt.getUseBoxes()Ljava/util/List;#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#7
soot.jimple.internal.JInvokeStmt.getUseBoxes()Ljava/util/List;#Invoke(INTERFACE,Lsoot/Value;,getUseBoxes,()Ljava/util/List;)#8
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#New(Ljava/util/ArrayList;,0)#0
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#Dup(1,0)#1
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#2
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#LocalStore(Ljava/lang/Object;,1)#3
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#4
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#5
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/AbstractInstanceInvokeExpr;,baseBox)#6
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#7
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#Invoke(INTERFACE,Lsoot/Value;,getUseBoxes,()Ljava/util/List;)#8
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,addAll,(Ljava/util/Collection;)Z)#9
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#Pop(1)#10
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#11
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#12
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/AbstractInstanceInvokeExpr;,baseBox)#13
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#14
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#Pop(1)#15
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#16
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#Get([Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/AbstractInstanceInvokeExpr;,argBoxes)#17
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#Dup(1,0)#18
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#LocalStore(Ljava/lang/Object;,5)#19
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#ArrayLength()#20
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#LocalStore(I,4)#21
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#Constant(I,0)#22
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#LocalStore(I,3)#23
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#Goto(43)#24
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#LocalLoad(I,3)#43
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#LocalLoad(I,4)#44
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#ConditionalBranch(I,lt,25)#45
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#46
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#Return(Ljava/lang/Object;)#47
soot.jimple.internal.JInvokeStmt.getUseBoxes()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,addAll,(Ljava/util/Collection;)Z)#9
soot.jimple.internal.JInvokeStmt.getUseBoxes()Ljava/util/List;#Pop(1)#10
soot.jimple.internal.JInvokeStmt.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#11
soot.jimple.internal.JInvokeStmt.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#12
soot.jimple.internal.JInvokeStmt.getUseBoxes()Ljava/util/List;#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/JInvokeStmt;,invokeExprBox)#13
soot.jimple.internal.JInvokeStmt.getUseBoxes()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#14
soot.jimple.internal.JInvokeStmt.getUseBoxes()Ljava/util/List;#Pop(1)#15
soot.jimple.internal.JInvokeStmt.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#16
soot.jimple.internal.JInvokeStmt.getUseBoxes()Ljava/util/List;#Return(Ljava/lang/Object;)#17
soot.AbstractUnit.getUseBoxes()Ljava/util/List;#Get(Ljava/util/List;,STATIC,Lsoot/AbstractUnit;,emptyList)#0
soot.AbstractUnit.getUseBoxes()Ljava/util/List;#Return(Ljava/lang/Object;)#1
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#129
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#130
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Constant(I,0)#131
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#ConditionalBranch(I,eq,136)#132
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#136
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#137
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Constant(I,0)#138
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#ConditionalBranch(I,eq,143)#139
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,0)#143
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/SimpleLiveLocalsAnalysis;,doAnalysis,()V)#144
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#New(Ljava/util/HashMap;,0)#0
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Dup(1,0)#1
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#2
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,1)#3
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#4
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/BackwardFlowAnalysis;,constructOrderer,()Lsoot/toolkits/graph/Orderer;)#5
soot.toolkits.scalar.FlowAnalysis.constructOrderer()Lsoot/toolkits/graph/Orderer;#New(Lsoot/toolkits/graph/PseudoTopologicalOrderer;,0)#0
soot.toolkits.graph.PseudoTopologicalOrderer.<clinit>()V#New(Ljava/lang/Object;,0)#0
soot.toolkits.graph.PseudoTopologicalOrderer.<clinit>()V#Dup(1,0)#1
soot.toolkits.graph.PseudoTopologicalOrderer.<clinit>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#2
soot.toolkits.graph.PseudoTopologicalOrderer.<clinit>()V#Put(Ljava/lang/Object;,STATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,GRAY)#3
soot.toolkits.graph.PseudoTopologicalOrderer.<clinit>()V#Return(V)#4
soot.toolkits.scalar.FlowAnalysis.constructOrderer()Lsoot/toolkits/graph/Orderer;#Dup(1,0)#1
soot.toolkits.scalar.FlowAnalysis.constructOrderer()Lsoot/toolkits/graph/Orderer;#Invoke(SPECIAL,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,<init>,()V)#2
soot.toolkits.graph.PseudoTopologicalOrderer.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.PseudoTopologicalOrderer.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.toolkits.graph.PseudoTopologicalOrderer.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
soot.toolkits.graph.PseudoTopologicalOrderer.<init>()V#Constant(I,0)#3
soot.toolkits.graph.PseudoTopologicalOrderer.<init>()V#Put(Z,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,mIsReversed)#4
soot.toolkits.graph.PseudoTopologicalOrderer.<init>()V#Return(V)#5
soot.toolkits.scalar.FlowAnalysis.constructOrderer()Lsoot/toolkits/graph/Orderer;#Return(Ljava/lang/Object;)#3
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#6
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Get(Lsoot/toolkits/graph/DirectedGraph;,NONSTATIC,Lsoot/toolkits/scalar/BackwardFlowAnalysis;,graph)#7
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Constant(I,1)#8
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Lsoot/toolkits/graph/Orderer;,newList,(Lsoot/toolkits/graph/DirectedGraph;Z)Ljava/util/List;)#9
soot.toolkits.graph.PseudoTopologicalOrderer.newList(Lsoot/toolkits/graph/DirectedGraph;Z)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.PseudoTopologicalOrderer.newList(Lsoot/toolkits/graph/DirectedGraph;Z)Ljava/util/List;#LocalLoad(I,2)#1
soot.toolkits.graph.PseudoTopologicalOrderer.newList(Lsoot/toolkits/graph/DirectedGraph;Z)Ljava/util/List;#Put(Z,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,mIsReversed)#2
soot.toolkits.graph.PseudoTopologicalOrderer.newList(Lsoot/toolkits/graph/DirectedGraph;Z)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#3
soot.toolkits.graph.PseudoTopologicalOrderer.newList(Lsoot/toolkits/graph/DirectedGraph;Z)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#4
soot.toolkits.graph.PseudoTopologicalOrderer.newList(Lsoot/toolkits/graph/DirectedGraph;Z)Ljava/util/List;#Invoke(VIRTUAL,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,computeOrder,(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;)#5
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#New(Ljava/util/IdentityHashMap;,0)#1
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#Dup(1,0)#2
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#Constant(I,3)#3
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#4
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#Invoke(INTERFACE,Lsoot/toolkits/graph/DirectedGraph;,size,()I)#5
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#BinaryOp(I,mul)#6
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#Constant(I,2)#7
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#BinaryOp(I,div)#8
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#Invoke(SPECIAL,Ljava/util/IdentityHashMap;,<init>,(I)V)#9
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#Put(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,stmtToColor)#10
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#11
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#12
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#Invoke(INTERFACE,Lsoot/toolkits/graph/DirectedGraph;,size,()I)#13
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#New([I,1)#14
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#Put([I,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,indexStack)#15
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#16
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#17
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#Invoke(INTERFACE,Lsoot/toolkits/graph/DirectedGraph;,size,()I)#18
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#New([Ljava/lang/Object;,1)#19
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#Put([Ljava/lang/Object;,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,stmtStack)#20
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#21
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#New(Ljava/util/LinkedList;,0)#22
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#Dup(1,0)#23
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#24
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#Put(Ljava/util/LinkedList;,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,order)#25
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#26
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#27
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#Put(Lsoot/toolkits/graph/DirectedGraph;,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,graph)#28
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#29
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#Invoke(INTERFACE,Lsoot/toolkits/graph/DirectedGraph;,iterator,()Ljava/util/Iterator;)#30
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,2)#31
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#Goto(45)#32
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#45
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#46
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#Constant(I,0)#47
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#ConditionalBranch(I,ne,33)#48
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#33
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#34
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,3)#35
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#36
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,stmtToColor)#37
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#38
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#39
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#Constant(L;,null)#40
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#ConditionalBranch(Ljava/lang/Object;,ne,45)#41
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#42
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#43
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#Invoke(VIRTUAL,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,visitNode,(Ljava/lang/Object;)V)#44
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Constant(I,0)#1
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Put(I,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,last)#2
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,stmtToColor)#4
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#5
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Get(Ljava/lang/Object;,STATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,GRAY)#6
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#7
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Pop(1)#8
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#9
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Get([Ljava/lang/Object;,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,stmtStack)#10
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Get(I,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,last)#12
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#13
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#ArrayStore(Ljava/lang/Object;)#14
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#15
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Get([I,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,indexStack)#16
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#17
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Dup(1,0)#18
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Get(I,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,last)#19
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Dup(1,1)#20
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Constant(I,1)#21
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#BinaryOp(I,add)#22
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Put(I,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,last)#23
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Constant(I,-1)#24
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#ArrayStore(I)#25
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Goto(110)#26
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#110
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Get(I,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,last)#111
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Constant(I,0)#112
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#ConditionalBranch(I,gt,27)#113
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#27
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Get([I,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,indexStack)#28
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#29
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Get(I,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,last)#30
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Constant(I,1)#31
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#BinaryOp(I,sub)#32
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Dup(2,0)#33
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#ArrayLoad(I)#34
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Constant(I,1)#35
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#BinaryOp(I,add)#36
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Dup(1,2)#37
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#ArrayStore(I)#38
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalStore(I,2)#39
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#40
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Get([Ljava/lang/Object;,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,stmtStack)#41
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#42
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Get(I,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,last)#43
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Constant(I,1)#44
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#BinaryOp(I,sub)#45
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#ArrayLoad(Ljava/lang/Object;)#46
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,3)#47
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#48
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Get(Lsoot/toolkits/graph/DirectedGraph;,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,graph)#49
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,3)#50
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Invoke(INTERFACE,Lsoot/toolkits/graph/DirectedGraph;,getSuccsOf,(Ljava/lang/Object;)Ljava/util/List;)#51
soot.toolkits.graph.UnitGraph.getSuccsOf(Ljava/lang/Object;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.UnitGraph.getSuccsOf(Ljava/lang/Object;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#1
soot.toolkits.graph.UnitGraph.getSuccsOf(Ljava/lang/Object;)Ljava/util/List;#CheckCast(Lsoot/Unit;)#2
soot.toolkits.graph.UnitGraph.getSuccsOf(Ljava/lang/Object;)Ljava/util/List;#Invoke(VIRTUAL,Lsoot/toolkits/graph/UnitGraph;,getSuccsOf,(Lsoot/Unit;)Ljava/util/List;)#3
soot.toolkits.graph.UnitGraph.getSuccsOf(Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.UnitGraph.getSuccsOf(Lsoot/Unit;)Ljava/util/List;#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/graph/UnitGraph;,unitToSuccs)#1
soot.toolkits.graph.UnitGraph.getSuccsOf(Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#2
soot.toolkits.graph.UnitGraph.getSuccsOf(Lsoot/Unit;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
soot.toolkits.graph.UnitGraph.getSuccsOf(Lsoot/Unit;)Ljava/util/List;#CheckCast(Ljava/util/List;)#4
soot.toolkits.graph.UnitGraph.getSuccsOf(Lsoot/Unit;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,2)#5
soot.toolkits.graph.UnitGraph.getSuccsOf(Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#6
soot.toolkits.graph.UnitGraph.getSuccsOf(Lsoot/Unit;)Ljava/util/List;#Constant(L;,null)#7
soot.toolkits.graph.UnitGraph.getSuccsOf(Lsoot/Unit;)Ljava/util/List;#ConditionalBranch(Ljava/lang/Object;,ne,20)#8
soot.toolkits.graph.UnitGraph.getSuccsOf(Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#20
soot.toolkits.graph.UnitGraph.getSuccsOf(Lsoot/Unit;)Ljava/util/List;#Return(Ljava/lang/Object;)#21
soot.toolkits.graph.UnitGraph.getSuccsOf(Ljava/lang/Object;)Ljava/util/List;#Return(Ljava/lang/Object;)#4
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,4)#52
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(I,2)#53
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,4)#54
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#55
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#ConditionalBranch(I,lt,77)#56
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,4)#77
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(I,2)#78
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#79
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,5)#80
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#81
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,stmtToColor)#82
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,5)#83
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#84
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Constant(L;,null)#85
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#ConditionalBranch(Ljava/lang/Object;,ne,110)#86
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#87
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,stmtToColor)#88
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,5)#89
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Get(Ljava/lang/Object;,STATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,GRAY)#90
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#91
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Pop(1)#92
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#93
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Get([Ljava/lang/Object;,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,stmtStack)#94
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#95
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Get(I,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,last)#96
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,5)#97
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#ArrayStore(Ljava/lang/Object;)#98
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#99
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Get([I,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,indexStack)#100
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#101
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Dup(1,0)#102
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Get(I,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,last)#103
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Dup(1,1)#104
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Constant(I,1)#105
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#BinaryOp(I,add)#106
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Put(I,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,last)#107
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Constant(I,-1)#108
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#ArrayStore(I)#109
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#57
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Get(Z,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,mIsReversed)#58
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Constant(I,0)#59
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#ConditionalBranch(I,eq,66)#60
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#61
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,order)#62
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,3)#63
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,addLast,(Ljava/lang/Object;)V)#64
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Goto(70)#65
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#70
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Dup(1,0)#71
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Get(I,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,last)#72
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Constant(I,1)#73
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#BinaryOp(I,sub)#74
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Put(I,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,last)#75
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Goto(110)#76
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Return(V)#114
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#49
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#Constant(L;,null)#50
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#Put([I,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,indexStack)#51
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#52
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#Constant(L;,null)#53
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#Put([Ljava/lang/Object;,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,stmtStack)#54
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#55
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#Constant(L;,null)#56
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#Put(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,stmtToColor)#57
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#58
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,order)#59
soot.toolkits.graph.PseudoTopologicalOrderer.computeOrder(Lsoot/toolkits/graph/DirectedGraph;)Ljava/util/List;#Return(Ljava/lang/Object;)#60
soot.toolkits.graph.PseudoTopologicalOrderer.newList(Lsoot/toolkits/graph/DirectedGraph;Z)Ljava/util/List;#Return(Ljava/lang/Object;)#6
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,2)#10
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Constant(I,1)#11
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalStore(I,3)#12
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,2)#13
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#14
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,4)#15
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Goto(32)#16
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,4)#32
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#33
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Constant(I,0)#34
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#ConditionalBranch(I,ne,17)#35
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,4)#17
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#18
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,5)#19
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,1)#20
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,5)#21
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#New(Ljava/lang/Integer;,0)#22
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Dup(1,0)#23
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(I,3)#24
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(SPECIAL,Ljava/lang/Integer;,<init>,(I)V)#25
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#26
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Pop(1)#27
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(I,3)#28
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Constant(I,1)#29
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#BinaryOp(I,add)#30
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalStore(I,3)#31
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#36
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,1)#37
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/BackwardFlowAnalysis;,constructWorklist,(Ljava/util/Map;)Ljava/util/Collection;)#38
soot.toolkits.scalar.BackwardFlowAnalysis.constructWorklist(Ljava/util/Map;)Ljava/util/Collection;#New(Ljava/util/TreeSet;,0)#0
soot.toolkits.scalar.BackwardFlowAnalysis.constructWorklist(Ljava/util/Map;)Ljava/util/Collection;#Dup(1,0)#1
soot.toolkits.scalar.BackwardFlowAnalysis.constructWorklist(Ljava/util/Map;)Ljava/util/Collection;#New(Lsoot/toolkits/scalar/BackwardFlowAnalysis$1;,0)#2
soot.toolkits.scalar.BackwardFlowAnalysis.constructWorklist(Ljava/util/Map;)Ljava/util/Collection;#Dup(1,0)#3
soot.toolkits.scalar.BackwardFlowAnalysis.constructWorklist(Ljava/util/Map;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,0)#4
soot.toolkits.scalar.BackwardFlowAnalysis.constructWorklist(Ljava/util/Map;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,1)#5
soot.toolkits.scalar.BackwardFlowAnalysis.constructWorklist(Ljava/util/Map;)Ljava/util/Collection;#Invoke(SPECIAL,Lsoot/toolkits/scalar/BackwardFlowAnalysis$1;,<init>,(Lsoot/toolkits/scalar/BackwardFlowAnalysis;Ljava/util/Map;)V)#6
soot.toolkits.scalar.BackwardFlowAnalysis$1.<init>(Lsoot/toolkits/scalar/BackwardFlowAnalysis;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.BackwardFlowAnalysis$1.<init>(Lsoot/toolkits/scalar/BackwardFlowAnalysis;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.toolkits.scalar.BackwardFlowAnalysis$1.<init>(Lsoot/toolkits/scalar/BackwardFlowAnalysis;Ljava/util/Map;)V#Put(Lsoot/toolkits/scalar/BackwardFlowAnalysis;,NONSTATIC,Lsoot/toolkits/scalar/BackwardFlowAnalysis$1;,this$0)#2
soot.toolkits.scalar.BackwardFlowAnalysis$1.<init>(Lsoot/toolkits/scalar/BackwardFlowAnalysis;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.toolkits.scalar.BackwardFlowAnalysis$1.<init>(Lsoot/toolkits/scalar/BackwardFlowAnalysis;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,2)#4
soot.toolkits.scalar.BackwardFlowAnalysis$1.<init>(Lsoot/toolkits/scalar/BackwardFlowAnalysis;Ljava/util/Map;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/BackwardFlowAnalysis$1;,val$numbers)#5
soot.toolkits.scalar.BackwardFlowAnalysis$1.<init>(Lsoot/toolkits/scalar/BackwardFlowAnalysis;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#6
soot.toolkits.scalar.BackwardFlowAnalysis$1.<init>(Lsoot/toolkits/scalar/BackwardFlowAnalysis;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#7
soot.toolkits.scalar.BackwardFlowAnalysis$1.<init>(Lsoot/toolkits/scalar/BackwardFlowAnalysis;Ljava/util/Map;)V#Return(V)#8
soot.toolkits.scalar.BackwardFlowAnalysis.constructWorklist(Ljava/util/Map;)Ljava/util/Collection;#Invoke(SPECIAL,Ljava/util/TreeSet;,<init>,(Ljava/util/Comparator;)V)#7
soot.toolkits.scalar.BackwardFlowAnalysis.constructWorklist(Ljava/util/Map;)Ljava/util/Collection;#Return(Ljava/lang/Object;)#8
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,4)#39
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#40
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Get(Lsoot/toolkits/graph/DirectedGraph;,NONSTATIC,Lsoot/toolkits/scalar/BackwardFlowAnalysis;,graph)#41
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Lsoot/toolkits/graph/DirectedGraph;,iterator,()Ljava/util/Iterator;)#42
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,5)#43
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Goto(66)#44
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,5)#66
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#67
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Constant(I,0)#68
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#ConditionalBranch(I,ne,45)#69
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,5)#45
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#46
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,6)#47
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,4)#48
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,6)#49
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Collection;,add,(Ljava/lang/Object;)Z)#50
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Pop(1)#51
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#52
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/BackwardFlowAnalysis;,unitToBeforeFlow)#53
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,6)#54
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#55
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/BackwardFlowAnalysis;,newInitialFlow,()Ljava/lang/Object;)#56
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.newInitialFlow()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.newInitialFlow()Ljava/lang/Object;#Get(Lsoot/toolkits/scalar/FlowSet;,NONSTATIC,Lsoot/toolkits/scalar/SimpleLiveLocalsAnalysis;,emptySet)#1
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.newInitialFlow()Ljava/lang/Object;#Invoke(INTERFACE,Lsoot/toolkits/scalar/FlowSet;,clone,()Lsoot/toolkits/scalar/FlowSet;)#2
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.newInitialFlow()Ljava/lang/Object;#Return(Ljava/lang/Object;)#3
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#57
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Pop(1)#58
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#59
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/BackwardFlowAnalysis;,unitToAfterFlow)#60
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,6)#61
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#62
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/BackwardFlowAnalysis;,newInitialFlow,()Ljava/lang/Object;)#63
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#64
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Pop(1)#65
soot.toolkits.scalar.BackwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.BackwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/BackwardFlowAnalysis$1;,val$numbers)#1
soot.toolkits.scalar.BackwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,1)#2
soot.toolkits.scalar.BackwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
soot.toolkits.scalar.BackwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#CheckCast(Ljava/lang/Integer;)#4
soot.toolkits.scalar.BackwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalStore(Ljava/lang/Object;,3)#5
soot.toolkits.scalar.BackwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,0)#6
soot.toolkits.scalar.BackwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/BackwardFlowAnalysis$1;,val$numbers)#7
soot.toolkits.scalar.BackwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,2)#8
soot.toolkits.scalar.BackwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#9
soot.toolkits.scalar.BackwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#CheckCast(Ljava/lang/Integer;)#10
soot.toolkits.scalar.BackwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalStore(Ljava/lang/Object;,4)#11
soot.toolkits.scalar.BackwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,3)#12
soot.toolkits.scalar.BackwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#13
soot.toolkits.scalar.BackwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,4)#14
soot.toolkits.scalar.BackwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#15
soot.toolkits.scalar.BackwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#BinaryOp(I,sub)#16
soot.toolkits.scalar.BackwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#Return(I)#17
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#70
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Get(Lsoot/toolkits/graph/DirectedGraph;,NONSTATIC,Lsoot/toolkits/scalar/BackwardFlowAnalysis;,graph)#71
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Lsoot/toolkits/graph/DirectedGraph;,getTails,()Ljava/util/List;)#72
soot.toolkits.graph.UnitGraph.getTails()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.UnitGraph.getTails()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lsoot/toolkits/graph/UnitGraph;,tails)#1
soot.toolkits.graph.UnitGraph.getTails()Ljava/util/List;#Return(Ljava/lang/Object;)#2
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,5)#73
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,5)#74
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#75
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,6)#76
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Goto(88)#77
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,6)#88
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#89
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Constant(I,0)#90
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#ConditionalBranch(I,ne,78)#91
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,6)#78
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#79
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,7)#80
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#81
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/BackwardFlowAnalysis;,unitToAfterFlow)#82
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,7)#83
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#84
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/BackwardFlowAnalysis;,entryInitialFlow,()Ljava/lang/Object;)#85
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.entryInitialFlow()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.entryInitialFlow()Ljava/lang/Object;#Get(Lsoot/toolkits/scalar/FlowSet;,NONSTATIC,Lsoot/toolkits/scalar/SimpleLiveLocalsAnalysis;,emptySet)#1
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.entryInitialFlow()Ljava/lang/Object;#Invoke(INTERFACE,Lsoot/toolkits/scalar/FlowSet;,clone,()Lsoot/toolkits/scalar/FlowSet;)#2
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.entryInitialFlow()Ljava/lang/Object;#Return(Ljava/lang/Object;)#3
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#86
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Pop(1)#87
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#92
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/BackwardFlowAnalysis;,newInitialFlow,()Ljava/lang/Object;)#93
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,6)#94
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Goto(305)#95
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,4)#305
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Collection;,isEmpty,()Z)#306
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Constant(I,0)#307
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#ConditionalBranch(I,eq,96)#308
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,4)#96
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Collection;,iterator,()Ljava/util/Iterator;)#97
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#98
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,9)#99
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,4)#100
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,9)#101
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Collection;,remove,(Ljava/lang/Object;)Z)#102
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Pop(1)#103
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,5)#104
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,9)#105
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/List;,contains,(Ljava/lang/Object;)Z)#106
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalStore(I,10)#107
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#108
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#109
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/BackwardFlowAnalysis;,unitToBeforeFlow)#110
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,9)#111
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#112
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,6)#113
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/BackwardFlowAnalysis;,copy,(Ljava/lang/Object;Ljava/lang/Object;)V)#114
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#CheckCast(Lsoot/toolkits/scalar/FlowSet;)#1
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,3)#2
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,2)#3
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#CheckCast(Lsoot/toolkits/scalar/FlowSet;)#4
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,4)#5
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,3)#6
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,4)#7
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(INTERFACE,Lsoot/toolkits/scalar/FlowSet;,copy,(Lsoot/toolkits/scalar/FlowSet;)V)#8
soot.toolkits.scalar.ArraySparseSet.copy(Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.ArraySparseSet.copy(Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.toolkits.scalar.ArraySparseSet.copy(Lsoot/toolkits/scalar/FlowSet;)V#Invoke(SPECIAL,Lsoot/toolkits/scalar/ArraySparseSet;,sameType,(Ljava/lang/Object;)Z)#2
soot.toolkits.scalar.ArraySparseSet.sameType(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#0
soot.toolkits.scalar.ArraySparseSet.sameType(Ljava/lang/Object;)Z#Instanceof(Lsoot/toolkits/scalar/ArraySparseSet;)#1
soot.toolkits.scalar.ArraySparseSet.sameType(Ljava/lang/Object;)Z#Return(I)#2
soot.toolkits.scalar.ArraySparseSet.copy(Lsoot/toolkits/scalar/FlowSet;)V#Constant(I,0)#3
soot.toolkits.scalar.ArraySparseSet.copy(Lsoot/toolkits/scalar/FlowSet;)V#ConditionalBranch(I,eq,30)#4
soot.toolkits.scalar.ArraySparseSet.copy(Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,1)#5
soot.toolkits.scalar.ArraySparseSet.copy(Lsoot/toolkits/scalar/FlowSet;)V#CheckCast(Lsoot/toolkits/scalar/ArraySparseSet;)#6
soot.toolkits.scalar.ArraySparseSet.copy(Lsoot/toolkits/scalar/FlowSet;)V#LocalStore(Ljava/lang/Object;,2)#7
soot.toolkits.scalar.ArraySparseSet.copy(Lsoot/toolkits/scalar/FlowSet;)V#Goto(11)#8
soot.toolkits.scalar.ArraySparseSet.copy(Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,2)#11
soot.toolkits.scalar.ArraySparseSet.copy(Lsoot/toolkits/scalar/FlowSet;)V#Get(I,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,maxElements)#12
soot.toolkits.scalar.ArraySparseSet.copy(Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,0)#13
soot.toolkits.scalar.ArraySparseSet.copy(Lsoot/toolkits/scalar/FlowSet;)V#Get(I,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,maxElements)#14
soot.toolkits.scalar.ArraySparseSet.copy(Lsoot/toolkits/scalar/FlowSet;)V#ConditionalBranch(I,lt,9)#15
soot.toolkits.scalar.ArraySparseSet.copy(Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,2)#16
soot.toolkits.scalar.ArraySparseSet.copy(Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,0)#17
soot.toolkits.scalar.ArraySparseSet.copy(Lsoot/toolkits/scalar/FlowSet;)V#Get(I,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,numElements)#18
soot.toolkits.scalar.ArraySparseSet.copy(Lsoot/toolkits/scalar/FlowSet;)V#Put(I,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,numElements)#19
soot.toolkits.scalar.ArraySparseSet.copy(Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,0)#20
soot.toolkits.scalar.ArraySparseSet.copy(Lsoot/toolkits/scalar/FlowSet;)V#Get([Ljava/lang/Object;,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,elements)#21
soot.toolkits.scalar.ArraySparseSet.copy(Lsoot/toolkits/scalar/FlowSet;)V#Constant(I,0)#22
soot.toolkits.scalar.ArraySparseSet.copy(Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,2)#23
soot.toolkits.scalar.ArraySparseSet.copy(Lsoot/toolkits/scalar/FlowSet;)V#Get([Ljava/lang/Object;,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,elements)#24
soot.toolkits.scalar.ArraySparseSet.copy(Lsoot/toolkits/scalar/FlowSet;)V#Constant(I,0)#25
soot.toolkits.scalar.ArraySparseSet.copy(Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,0)#26
soot.toolkits.scalar.ArraySparseSet.copy(Lsoot/toolkits/scalar/FlowSet;)V#Get(I,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,numElements)#27
soot.toolkits.scalar.ArraySparseSet.copy(Lsoot/toolkits/scalar/FlowSet;)V#Invoke(STATIC,Ljava/lang/System;,arraycopy,(Ljava/lang/Object;ILjava/lang/Object;II)V)#28
soot.toolkits.scalar.ArraySparseSet.copy(Lsoot/toolkits/scalar/FlowSet;)V#Goto(33)#29
soot.toolkits.scalar.ArraySparseSet.copy(Lsoot/toolkits/scalar/FlowSet;)V#Return(V)#33
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#Return(V)#9
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#115
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Get(Lsoot/toolkits/graph/DirectedGraph;,NONSTATIC,Lsoot/toolkits/scalar/BackwardFlowAnalysis;,graph)#116
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,9)#117
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Lsoot/toolkits/graph/DirectedGraph;,getSuccsOf,(Ljava/lang/Object;)Ljava/util/List;)#118
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,11)#119
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#120
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/BackwardFlowAnalysis;,unitToAfterFlow)#121
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,9)#122
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#123
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,8)#124
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,11)#125
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#126
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Constant(I,1)#127
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#ConditionalBranch(I,ne,139)#128
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,11)#139
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#140
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Constant(I,0)#141
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#ConditionalBranch(I,eq,183)#142
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#183
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/BackwardFlowAnalysis;,unitToBeforeFlow)#184
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,9)#185
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#186
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,7)#187
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#188
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(VIRTUAL,Lsoot/options/Options;,interactive_mode,()Z)#189
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Constant(I,0)#190
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#ConditionalBranch(I,eq,239)#191
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#239
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,8)#240
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,9)#241
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,7)#242
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/BackwardFlowAnalysis;,flowThrough,(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V)#243
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#CheckCast(Lsoot/toolkits/scalar/FlowSet;)#1
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,4)#2
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,3)#3
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#CheckCast(Lsoot/toolkits/scalar/FlowSet;)#4
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,5)#5
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,4)#6
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#7
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/SimpleLiveLocalsAnalysis;,unitToKillSet)#8
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,2)#9
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#10
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#CheckCast(Lsoot/toolkits/scalar/FlowSet;)#11
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,5)#12
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(INTERFACE,Lsoot/toolkits/scalar/FlowSet;,difference,(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V)#13
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#Invoke(SPECIAL,Lsoot/toolkits/scalar/ArraySparseSet;,sameType,(Ljava/lang/Object;)Z)#2
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#Constant(I,0)#3
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#ConditionalBranch(I,eq,63)#4
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,2)#6
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#Invoke(SPECIAL,Lsoot/toolkits/scalar/ArraySparseSet;,sameType,(Ljava/lang/Object;)Z)#7
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#Constant(I,0)#8
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#ConditionalBranch(I,eq,63)#9
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,1)#10
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#CheckCast(Lsoot/toolkits/scalar/ArraySparseSet;)#11
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalStore(Ljava/lang/Object;,3)#12
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,2)#13
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#CheckCast(Lsoot/toolkits/scalar/ArraySparseSet;)#14
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalStore(Ljava/lang/Object;,4)#15
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,4)#16
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,3)#17
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#ConditionalBranch(Ljava/lang/Object;,eq,22)#18
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,4)#19
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,0)#20
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#ConditionalBranch(Ljava/lang/Object;,ne,27)#21
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,4)#27
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalStore(Ljava/lang/Object;,5)#28
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,5)#29
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/ArraySparseSet;,clear,()V)#30
soot.toolkits.scalar.ArraySparseSet.clear()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.ArraySparseSet.clear()V#Constant(I,0)#1
soot.toolkits.scalar.ArraySparseSet.clear()V#Put(I,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,numElements)#2
soot.toolkits.scalar.ArraySparseSet.clear()V#Return(V)#3
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#Constant(I,0)#31
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalStore(I,6)#32
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#Goto(52)#33
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(I,6)#52
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,0)#53
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#Get(I,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,numElements)#54
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#ConditionalBranch(I,lt,34)#55
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,5)#56
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,4)#57
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#ConditionalBranch(Ljava/lang/Object;,eq,67)#58
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#Return(V)#67
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,5)#14
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#15
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/SimpleLiveLocalsAnalysis;,unitToGenerateSet)#16
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,2)#17
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#18
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#CheckCast(Lsoot/toolkits/scalar/FlowSet;)#19
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,5)#20
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(INTERFACE,Lsoot/toolkits/scalar/FlowSet;,union,(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V)#21
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#Invoke(SPECIAL,Lsoot/toolkits/scalar/ArraySparseSet;,sameType,(Ljava/lang/Object;)Z)#2
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#Constant(I,0)#3
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#ConditionalBranch(I,eq,61)#4
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,2)#6
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#Invoke(SPECIAL,Lsoot/toolkits/scalar/ArraySparseSet;,sameType,(Ljava/lang/Object;)Z)#7
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#Constant(I,0)#8
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#ConditionalBranch(I,eq,61)#9
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,1)#10
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#CheckCast(Lsoot/toolkits/scalar/ArraySparseSet;)#11
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalStore(Ljava/lang/Object;,3)#12
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,2)#13
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#CheckCast(Lsoot/toolkits/scalar/ArraySparseSet;)#14
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalStore(Ljava/lang/Object;,4)#15
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,4)#16
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,3)#17
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#ConditionalBranch(Ljava/lang/Object;,ne,37)#18
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,0)#37
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,4)#38
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#ConditionalBranch(Ljava/lang/Object;,eq,43)#39
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#Constant(I,0)#43
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalStore(I,5)#44
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#Goto(56)#45
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(I,5)#56
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,3)#57
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#Get(I,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,numElements)#58
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#ConditionalBranch(I,lt,46)#59
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#Goto(65)#60
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#Return(V)#65
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Return(V)#22
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#244
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(VIRTUAL,Lsoot/options/Options;,interactive_mode,()Z)#245
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Constant(I,0)#246
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#ConditionalBranch(I,eq,282)#247
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,7)#282
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,6)#283
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#284
soot.toolkits.scalar.ArraySparseSet.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.ArraySparseSet.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#1
soot.toolkits.scalar.ArraySparseSet.equals(Ljava/lang/Object;)Z#Invoke(SPECIAL,Lsoot/toolkits/scalar/ArraySparseSet;,sameType,(Ljava/lang/Object;)Z)#2
soot.toolkits.scalar.ArraySparseSet.equals(Ljava/lang/Object;)Z#Constant(I,0)#3
soot.toolkits.scalar.ArraySparseSet.equals(Ljava/lang/Object;)Z#ConditionalBranch(I,eq,40)#4
soot.toolkits.scalar.ArraySparseSet.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#5
soot.toolkits.scalar.ArraySparseSet.equals(Ljava/lang/Object;)Z#CheckCast(Lsoot/toolkits/scalar/ArraySparseSet;)#6
soot.toolkits.scalar.ArraySparseSet.equals(Ljava/lang/Object;)Z#LocalStore(Ljava/lang/Object;,2)#7
soot.toolkits.scalar.ArraySparseSet.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,2)#8
soot.toolkits.scalar.ArraySparseSet.equals(Ljava/lang/Object;)Z#Get(I,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,numElements)#9
soot.toolkits.scalar.ArraySparseSet.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#10
soot.toolkits.scalar.ArraySparseSet.equals(Ljava/lang/Object;)Z#Get(I,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,numElements)#11
soot.toolkits.scalar.ArraySparseSet.equals(Ljava/lang/Object;)Z#ConditionalBranch(I,eq,15)#12
soot.toolkits.scalar.ArraySparseSet.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#15
soot.toolkits.scalar.ArraySparseSet.equals(Ljava/lang/Object;)Z#Get(I,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,numElements)#16
soot.toolkits.scalar.ArraySparseSet.equals(Ljava/lang/Object;)Z#LocalStore(I,3)#17
soot.toolkits.scalar.ArraySparseSet.equals(Ljava/lang/Object;)Z#Constant(I,0)#18
soot.toolkits.scalar.ArraySparseSet.equals(Ljava/lang/Object;)Z#LocalStore(I,4)#19
soot.toolkits.scalar.ArraySparseSet.equals(Ljava/lang/Object;)Z#Goto(35)#20
soot.toolkits.scalar.ArraySparseSet.equals(Ljava/lang/Object;)Z#LocalLoad(I,4)#35
soot.toolkits.scalar.ArraySparseSet.equals(Ljava/lang/Object;)Z#LocalLoad(I,3)#36
soot.toolkits.scalar.ArraySparseSet.equals(Ljava/lang/Object;)Z#ConditionalBranch(I,lt,21)#37
soot.toolkits.scalar.ArraySparseSet.equals(Ljava/lang/Object;)Z#Constant(I,1)#38
soot.toolkits.scalar.ArraySparseSet.equals(Ljava/lang/Object;)Z#Return(I)#39
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Constant(I,0)#285
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#ConditionalBranch(I,ne,305)#286
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#129
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#130
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/BackwardFlowAnalysis;,unitToBeforeFlow)#131
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,11)#132
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Constant(I,0)#133
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#134
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#135
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,8)#136
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/BackwardFlowAnalysis;,copy,(Ljava/lang/Object;Ljava/lang/Object;)V)#137
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Goto(183)#138
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,4)#46
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,3)#47
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#Get([Ljava/lang/Object;,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,elements)#48
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(I,5)#49
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#ArrayLoad(Ljava/lang/Object;)#50
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/ArraySparseSet;,add,(Ljava/lang/Object;)V)#51
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(I,5)#52
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#Constant(I,1)#53
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#BinaryOp(I,add)#54
soot.toolkits.scalar.ArraySparseSet.union(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalStore(I,5)#55
soot.toolkits.scalar.ArraySparseSet.equals(Ljava/lang/Object;)Z#Constant(I,0)#13
soot.toolkits.scalar.ArraySparseSet.equals(Ljava/lang/Object;)Z#Return(I)#14
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#287
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Get(Lsoot/toolkits/graph/DirectedGraph;,NONSTATIC,Lsoot/toolkits/scalar/BackwardFlowAnalysis;,graph)#288
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,9)#289
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Lsoot/toolkits/graph/DirectedGraph;,getPredsOf,(Ljava/lang/Object;)Ljava/util/List;)#290
soot.toolkits.graph.UnitGraph.getPredsOf(Ljava/lang/Object;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.UnitGraph.getPredsOf(Ljava/lang/Object;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#1
soot.toolkits.graph.UnitGraph.getPredsOf(Ljava/lang/Object;)Ljava/util/List;#CheckCast(Lsoot/Unit;)#2
soot.toolkits.graph.UnitGraph.getPredsOf(Ljava/lang/Object;)Ljava/util/List;#Invoke(VIRTUAL,Lsoot/toolkits/graph/UnitGraph;,getPredsOf,(Lsoot/Unit;)Ljava/util/List;)#3
soot.toolkits.graph.UnitGraph.getPredsOf(Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.UnitGraph.getPredsOf(Lsoot/Unit;)Ljava/util/List;#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/graph/UnitGraph;,unitToPreds)#1
soot.toolkits.graph.UnitGraph.getPredsOf(Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#2
soot.toolkits.graph.UnitGraph.getPredsOf(Lsoot/Unit;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#3
soot.toolkits.graph.UnitGraph.getPredsOf(Lsoot/Unit;)Ljava/util/List;#Constant(I,0)#4
soot.toolkits.graph.UnitGraph.getPredsOf(Lsoot/Unit;)Ljava/util/List;#ConditionalBranch(I,ne,17)#5
soot.toolkits.graph.UnitGraph.getPredsOf(Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#17
soot.toolkits.graph.UnitGraph.getPredsOf(Lsoot/Unit;)Ljava/util/List;#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/graph/UnitGraph;,unitToPreds)#18
soot.toolkits.graph.UnitGraph.getPredsOf(Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#19
soot.toolkits.graph.UnitGraph.getPredsOf(Lsoot/Unit;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#20
soot.toolkits.graph.UnitGraph.getPredsOf(Lsoot/Unit;)Ljava/util/List;#CheckCast(Ljava/util/List;)#21
soot.toolkits.graph.UnitGraph.getPredsOf(Lsoot/Unit;)Ljava/util/List;#Return(Ljava/lang/Object;)#22
soot.toolkits.graph.UnitGraph.getPredsOf(Ljava/lang/Object;)Ljava/util/List;#Return(Ljava/lang/Object;)#4
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#291
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,11)#292
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Goto(301)#293
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,11)#301
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#302
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Constant(I,0)#303
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#ConditionalBranch(I,ne,294)#304
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,11)#294
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#295
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,12)#296
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,4)#297
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,12)#298
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Collection;,add,(Ljava/lang/Object;)Z)#299
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Pop(1)#300
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,3)#34
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,0)#35
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#Get([Ljava/lang/Object;,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,elements)#36
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(I,6)#37
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#ArrayLoad(Ljava/lang/Object;)#38
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/ArraySparseSet;,contains,(Ljava/lang/Object;)Z)#39
soot.toolkits.scalar.ArraySparseSet.contains(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#3
soot.toolkits.scalar.ArraySparseSet.contains(Ljava/lang/Object;)Z#Get([Ljava/lang/Object;,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,elements)#4
soot.toolkits.scalar.ArraySparseSet.contains(Ljava/lang/Object;)Z#LocalLoad(I,2)#5
soot.toolkits.scalar.ArraySparseSet.contains(Ljava/lang/Object;)Z#ArrayLoad(Ljava/lang/Object;)#6
soot.toolkits.scalar.ArraySparseSet.contains(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#7
soot.toolkits.scalar.ArraySparseSet.contains(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#8
soot.toolkits.scalar.ArraySparseSet.contains(Ljava/lang/Object;)Z#Constant(I,0)#9
soot.toolkits.scalar.ArraySparseSet.contains(Ljava/lang/Object;)Z#ConditionalBranch(I,eq,13)#10
soot.toolkits.scalar.ArraySparseSet.contains(Ljava/lang/Object;)Z#Constant(I,1)#11
soot.toolkits.scalar.ArraySparseSet.contains(Ljava/lang/Object;)Z#Return(I)#12
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#Constant(I,0)#40
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#ConditionalBranch(I,ne,48)#41
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(I,6)#48
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#Constant(I,1)#49
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#BinaryOp(I,add)#50
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalStore(I,6)#51
soot.toolkits.scalar.BackwardFlowAnalysis.doAnalysis()V#Return(V)#309
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#145
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#146
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Constant(I,0)#147
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#ConditionalBranch(I,eq,152)#148
soot.toolkits.scalar.SimpleLiveLocalsAnalysis.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Return(V)#152
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalStore(Ljava/lang/Object;,2)#32
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#33
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#34
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Constant(I,0)#35
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#ConditionalBranch(I,eq,40)#36
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,0)#40
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#New(Ljava/util/HashMap;,0)#41
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Dup(1,0)#42
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,1)#43
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(VIRTUAL,Lsoot/toolkits/graph/UnitGraph;,size,()I)#44
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Constant(I,2)#45
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#BinaryOp(I,mul)#46
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Constant(I,1)#47
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#BinaryOp(I,add)#48
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Constant(F,0.7)#49
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(IF)V)#50
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/SimpleLiveLocals;,unitToLocalsAfter)#51
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,0)#52
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#New(Ljava/util/HashMap;,0)#53
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Dup(1,0)#54
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,1)#55
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(VIRTUAL,Lsoot/toolkits/graph/UnitGraph;,size,()I)#56
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Constant(I,2)#57
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#BinaryOp(I,mul)#58
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Constant(I,1)#59
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#BinaryOp(I,add)#60
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Constant(F,0.7)#61
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(IF)V)#62
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/SimpleLiveLocals;,unitToLocalsBefore)#63
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,1)#64
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(VIRTUAL,Lsoot/toolkits/graph/UnitGraph;,iterator,()Ljava/util/Iterator;)#65
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalStore(Ljava/lang/Object;,3)#66
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Goto(98)#67
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,3)#98
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#99
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Constant(I,0)#100
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#ConditionalBranch(I,ne,68)#101
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,3)#68
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#69
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#CheckCast(Lsoot/Unit;)#70
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalStore(Ljava/lang/Object;,4)#71
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,2)#72
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,4)#73
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/SimpleLiveLocalsAnalysis;,getFlowBefore,(Ljava/lang/Object;)Ljava/lang/Object;)#74
soot.toolkits.scalar.AbstractFlowAnalysis.getFlowBefore(Ljava/lang/Object;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.AbstractFlowAnalysis.getFlowBefore(Ljava/lang/Object;)Ljava/lang/Object;#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/AbstractFlowAnalysis;,unitToBeforeFlow)#1
soot.toolkits.scalar.AbstractFlowAnalysis.getFlowBefore(Ljava/lang/Object;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,1)#2
soot.toolkits.scalar.AbstractFlowAnalysis.getFlowBefore(Ljava/lang/Object;)Ljava/lang/Object;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
soot.toolkits.scalar.AbstractFlowAnalysis.getFlowBefore(Ljava/lang/Object;)Ljava/lang/Object;#Return(Ljava/lang/Object;)#4
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#CheckCast(Lsoot/toolkits/scalar/FlowSet;)#75
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalStore(Ljava/lang/Object;,5)#76
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,0)#77
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/SimpleLiveLocals;,unitToLocalsBefore)#78
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,4)#79
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,5)#80
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(INTERFACE,Lsoot/toolkits/scalar/FlowSet;,toList,()Ljava/util/List;)#81
soot.toolkits.scalar.ArraySparseSet.toList()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.ArraySparseSet.toList()Ljava/util/List;#Get(I,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,numElements)#1
soot.toolkits.scalar.ArraySparseSet.toList()Ljava/util/List;#New([Ljava/lang/Object;,1)#2
soot.toolkits.scalar.ArraySparseSet.toList()Ljava/util/List;#LocalStore(Ljava/lang/Object;,1)#3
soot.toolkits.scalar.ArraySparseSet.toList()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#4
soot.toolkits.scalar.ArraySparseSet.toList()Ljava/util/List;#Get([Ljava/lang/Object;,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,elements)#5
soot.toolkits.scalar.ArraySparseSet.toList()Ljava/util/List;#Constant(I,0)#6
soot.toolkits.scalar.ArraySparseSet.toList()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#7
soot.toolkits.scalar.ArraySparseSet.toList()Ljava/util/List;#Constant(I,0)#8
soot.toolkits.scalar.ArraySparseSet.toList()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#9
soot.toolkits.scalar.ArraySparseSet.toList()Ljava/util/List;#Get(I,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,numElements)#10
soot.toolkits.scalar.ArraySparseSet.toList()Ljava/util/List;#Invoke(STATIC,Ljava/lang/System;,arraycopy,(Ljava/lang/Object;ILjava/lang/Object;II)V)#11
soot.toolkits.scalar.ArraySparseSet.toList()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#12
soot.toolkits.scalar.ArraySparseSet.toList()Ljava/util/List;#Invoke(STATIC,Ljava/util/Arrays;,asList,([Ljava/lang/Object;)Ljava/util/List;)#13
soot.toolkits.scalar.ArraySparseSet.toList()Ljava/util/List;#Return(Ljava/lang/Object;)#14
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(STATIC,Ljava/util/Collections;,unmodifiableList,(Ljava/util/List;)Ljava/util/List;)#82
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#83
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Pop(1)#84
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,2)#85
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,4)#86
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/SimpleLiveLocalsAnalysis;,getFlowAfter,(Ljava/lang/Object;)Ljava/lang/Object;)#87
soot.toolkits.scalar.FlowAnalysis.getFlowAfter(Ljava/lang/Object;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.FlowAnalysis.getFlowAfter(Ljava/lang/Object;)Ljava/lang/Object;#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/FlowAnalysis;,unitToAfterFlow)#1
soot.toolkits.scalar.FlowAnalysis.getFlowAfter(Ljava/lang/Object;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,1)#2
soot.toolkits.scalar.FlowAnalysis.getFlowAfter(Ljava/lang/Object;)Ljava/lang/Object;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
soot.toolkits.scalar.FlowAnalysis.getFlowAfter(Ljava/lang/Object;)Ljava/lang/Object;#Return(Ljava/lang/Object;)#4
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#CheckCast(Lsoot/toolkits/scalar/FlowSet;)#88
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalStore(Ljava/lang/Object;,5)#89
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,0)#90
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/SimpleLiveLocals;,unitToLocalsAfter)#91
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,4)#92
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,5)#93
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(INTERFACE,Lsoot/toolkits/scalar/FlowSet;,toList,()Ljava/util/List;)#94
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(STATIC,Ljava/util/Collections;,unmodifiableList,(Ljava/util/List;)Ljava/util/List;)#95
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#96
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Pop(1)#97
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#102
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#103
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Constant(I,0)#104
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#ConditionalBranch(I,eq,109)#105
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#109
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#110
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Constant(I,0)#111
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#ConditionalBranch(I,eq,116)#112
soot.toolkits.scalar.SimpleLiveLocals.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Return(V)#116
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Lsoot/toolkits/scalar/SmartLocalDefs;,<init>,(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V)#55
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Put(Lsoot/toolkits/graph/UnitGraph;,NONSTATIC,Lsoot/toolkits/scalar/SmartLocalDefs;,graph)#4
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#5
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#6
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Constant(I,0)#7
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#ConditionalBranch(I,eq,12)#8
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#12
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(VIRTUAL,Lsoot/options/Options;,verbose,()Z)#13
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Constant(I,0)#14
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#ConditionalBranch(I,eq,31)#15
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,0)#31
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#New(Ljava/util/HashMap;,0)#32
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Dup(1,0)#33
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#34
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/SmartLocalDefs;,localToDefs)#35
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,0)#36
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#New(Ljava/util/HashMap;,0)#37
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Dup(1,0)#38
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#39
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/SmartLocalDefs;,unitToMask)#40
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,1)#41
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(VIRTUAL,Lsoot/toolkits/graph/UnitGraph;,iterator,()Ljava/util/Iterator;)#42
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalStore(Ljava/lang/Object;,3)#43
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Goto(65)#44
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,3)#65
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#66
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Constant(I,0)#67
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#ConditionalBranch(I,ne,45)#68
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,3)#45
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#46
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#CheckCast(Lsoot/Unit;)#47
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalStore(Ljava/lang/Object;,4)#48
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,0)#49
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,4)#50
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(SPECIAL,Lsoot/toolkits/scalar/SmartLocalDefs;,localDef,(Lsoot/Unit;)Lsoot/Local;)#51
soot.toolkits.scalar.SmartLocalDefs.localDef(Lsoot/Unit;)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,1)#0
soot.toolkits.scalar.SmartLocalDefs.localDef(Lsoot/Unit;)Lsoot/Local;#Invoke(INTERFACE,Lsoot/Unit;,getDefBoxes,()Ljava/util/List;)#1
soot.toolkits.scalar.SmartLocalDefs.localDef(Lsoot/Unit;)Lsoot/Local;#LocalStore(Ljava/lang/Object;,2)#2
soot.toolkits.scalar.SmartLocalDefs.localDef(Lsoot/Unit;)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,2)#3
soot.toolkits.scalar.SmartLocalDefs.localDef(Lsoot/Unit;)Lsoot/Local;#Invoke(INTERFACE,Ljava/util/List;,size,()I)#4
soot.toolkits.scalar.SmartLocalDefs.localDef(Lsoot/Unit;)Lsoot/Local;#LocalStore(I,3)#5
soot.toolkits.scalar.SmartLocalDefs.localDef(Lsoot/Unit;)Lsoot/Local;#LocalLoad(I,3)#6
soot.toolkits.scalar.SmartLocalDefs.localDef(Lsoot/Unit;)Lsoot/Local;#Constant(I,0)#7
soot.toolkits.scalar.SmartLocalDefs.localDef(Lsoot/Unit;)Lsoot/Local;#ConditionalBranch(I,ne,11)#8
soot.toolkits.scalar.SmartLocalDefs.localDef(Lsoot/Unit;)Lsoot/Local;#LocalLoad(I,3)#11
soot.toolkits.scalar.SmartLocalDefs.localDef(Lsoot/Unit;)Lsoot/Local;#Constant(I,1)#12
soot.toolkits.scalar.SmartLocalDefs.localDef(Lsoot/Unit;)Lsoot/Local;#ConditionalBranch(I,eq,18)#13
soot.toolkits.scalar.SmartLocalDefs.localDef(Lsoot/Unit;)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,2)#18
soot.toolkits.scalar.SmartLocalDefs.localDef(Lsoot/Unit;)Lsoot/Local;#Constant(I,0)#19
soot.toolkits.scalar.SmartLocalDefs.localDef(Lsoot/Unit;)Lsoot/Local;#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#20
soot.toolkits.scalar.SmartLocalDefs.localDef(Lsoot/Unit;)Lsoot/Local;#CheckCast(Lsoot/ValueBox;)#21
soot.toolkits.scalar.SmartLocalDefs.localDef(Lsoot/Unit;)Lsoot/Local;#LocalStore(Ljava/lang/Object;,4)#22
soot.toolkits.scalar.SmartLocalDefs.localDef(Lsoot/Unit;)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,4)#23
soot.toolkits.scalar.SmartLocalDefs.localDef(Lsoot/Unit;)Lsoot/Local;#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#24
soot.toolkits.scalar.SmartLocalDefs.localDef(Lsoot/Unit;)Lsoot/Local;#LocalStore(Ljava/lang/Object;,5)#25
soot.toolkits.scalar.SmartLocalDefs.localDef(Lsoot/Unit;)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,5)#26
soot.toolkits.scalar.SmartLocalDefs.localDef(Lsoot/Unit;)Lsoot/Local;#Instanceof(Lsoot/Local;)#27
soot.toolkits.scalar.SmartLocalDefs.localDef(Lsoot/Unit;)Lsoot/Local;#Constant(I,0)#28
soot.toolkits.scalar.SmartLocalDefs.localDef(Lsoot/Unit;)Lsoot/Local;#ConditionalBranch(I,ne,32)#29
soot.toolkits.scalar.SmartLocalDefs.localDef(Lsoot/Unit;)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,5)#32
soot.toolkits.scalar.SmartLocalDefs.localDef(Lsoot/Unit;)Lsoot/Local;#CheckCast(Lsoot/Local;)#33
soot.toolkits.scalar.SmartLocalDefs.localDef(Lsoot/Unit;)Lsoot/Local;#Return(Ljava/lang/Object;)#34
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalStore(Ljava/lang/Object;,5)#52
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,5)#53
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Constant(L;,null)#54
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#ConditionalBranch(Ljava/lang/Object;,ne,57)#55
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,0)#57
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,5)#58
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(SPECIAL,Lsoot/toolkits/scalar/SmartLocalDefs;,defsOf,(Lsoot/Local;)Ljava/util/HashSet;)#59
soot.toolkits.scalar.SmartLocalDefs.defsOf(Lsoot/Local;)Ljava/util/HashSet;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.SmartLocalDefs.defsOf(Lsoot/Local;)Ljava/util/HashSet;#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/SmartLocalDefs;,localToDefs)#1
soot.toolkits.scalar.SmartLocalDefs.defsOf(Lsoot/Local;)Ljava/util/HashSet;#LocalLoad(Ljava/lang/Object;,1)#2
soot.toolkits.scalar.SmartLocalDefs.defsOf(Lsoot/Local;)Ljava/util/HashSet;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
soot.toolkits.scalar.SmartLocalDefs.defsOf(Lsoot/Local;)Ljava/util/HashSet;#CheckCast(Ljava/util/HashSet;)#4
soot.toolkits.scalar.SmartLocalDefs.defsOf(Lsoot/Local;)Ljava/util/HashSet;#LocalStore(Ljava/lang/Object;,2)#5
soot.toolkits.scalar.SmartLocalDefs.defsOf(Lsoot/Local;)Ljava/util/HashSet;#LocalLoad(Ljava/lang/Object;,2)#6
soot.toolkits.scalar.SmartLocalDefs.defsOf(Lsoot/Local;)Ljava/util/HashSet;#Constant(L;,null)#7
soot.toolkits.scalar.SmartLocalDefs.defsOf(Lsoot/Local;)Ljava/util/HashSet;#ConditionalBranch(Ljava/lang/Object;,ne,19)#8
soot.toolkits.scalar.SmartLocalDefs.defsOf(Lsoot/Local;)Ljava/util/HashSet;#LocalLoad(Ljava/lang/Object;,0)#9
soot.toolkits.scalar.SmartLocalDefs.defsOf(Lsoot/Local;)Ljava/util/HashSet;#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/SmartLocalDefs;,localToDefs)#10
soot.toolkits.scalar.SmartLocalDefs.defsOf(Lsoot/Local;)Ljava/util/HashSet;#LocalLoad(Ljava/lang/Object;,1)#11
soot.toolkits.scalar.SmartLocalDefs.defsOf(Lsoot/Local;)Ljava/util/HashSet;#New(Ljava/util/HashSet;,0)#12
soot.toolkits.scalar.SmartLocalDefs.defsOf(Lsoot/Local;)Ljava/util/HashSet;#Dup(1,0)#13
soot.toolkits.scalar.SmartLocalDefs.defsOf(Lsoot/Local;)Ljava/util/HashSet;#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#14
soot.toolkits.scalar.SmartLocalDefs.defsOf(Lsoot/Local;)Ljava/util/HashSet;#Dup(1,0)#15
soot.toolkits.scalar.SmartLocalDefs.defsOf(Lsoot/Local;)Ljava/util/HashSet;#LocalStore(Ljava/lang/Object;,2)#16
soot.toolkits.scalar.SmartLocalDefs.defsOf(Lsoot/Local;)Ljava/util/HashSet;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#17
soot.toolkits.scalar.SmartLocalDefs.defsOf(Lsoot/Local;)Ljava/util/HashSet;#Pop(1)#18
soot.toolkits.scalar.SmartLocalDefs.defsOf(Lsoot/Local;)Ljava/util/HashSet;#LocalLoad(Ljava/lang/Object;,2)#19
soot.toolkits.scalar.SmartLocalDefs.defsOf(Lsoot/Local;)Ljava/util/HashSet;#Return(Ljava/lang/Object;)#20
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalStore(Ljava/lang/Object;,6)#60
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,6)#61
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,4)#62
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(VIRTUAL,Ljava/util/HashSet;,add,(Ljava/lang/Object;)Z)#63
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Pop(1)#64
soot.toolkits.scalar.SmartLocalDefs.localDef(Lsoot/Unit;)Lsoot/Local;#Constant(L;,null)#9
soot.toolkits.scalar.SmartLocalDefs.localDef(Lsoot/Unit;)Lsoot/Local;#Return(Ljava/lang/Object;)#10
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Goto(65)#56
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#69
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(VIRTUAL,Lsoot/options/Options;,verbose,()Z)#70
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Constant(I,0)#71
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#ConditionalBranch(I,eq,88)#72
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,1)#88
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(VIRTUAL,Lsoot/toolkits/graph/UnitGraph;,iterator,()Ljava/util/Iterator;)#89
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalStore(Ljava/lang/Object;,3)#90
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Goto(107)#91
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,3)#107
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#108
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Constant(I,0)#109
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#ConditionalBranch(I,ne,92)#110
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,3)#92
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#93
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#CheckCast(Lsoot/Unit;)#94
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalStore(Ljava/lang/Object;,4)#95
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,0)#96
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/SmartLocalDefs;,unitToMask)#97
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,4)#98
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#New(Ljava/util/HashSet;,0)#99
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Dup(1,0)#100
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,2)#101
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,4)#102
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Lsoot/toolkits/scalar/LiveLocals;,getLiveLocalsAfter,(Lsoot/Unit;)Ljava/util/List;)#103
soot.toolkits.scalar.SimpleLiveLocals.getLiveLocalsAfter(Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.SimpleLiveLocals.getLiveLocalsAfter(Lsoot/Unit;)Ljava/util/List;#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/SimpleLiveLocals;,unitToLocalsAfter)#1
soot.toolkits.scalar.SimpleLiveLocals.getLiveLocalsAfter(Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#2
soot.toolkits.scalar.SimpleLiveLocals.getLiveLocalsAfter(Lsoot/Unit;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
soot.toolkits.scalar.SimpleLiveLocals.getLiveLocalsAfter(Lsoot/Unit;)Ljava/util/List;#CheckCast(Ljava/util/List;)#4
soot.toolkits.scalar.SimpleLiveLocals.getLiveLocalsAfter(Lsoot/Unit;)Ljava/util/List;#Return(Ljava/lang/Object;)#5
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,(Ljava/util/Collection;)V)#104
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#105
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Pop(1)#106
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#111
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(VIRTUAL,Lsoot/options/Options;,verbose,()Z)#112
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Constant(I,0)#113
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#ConditionalBranch(I,eq,130)#114
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,0)#130
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#New(Lsoot/toolkits/scalar/SmartLocalDefs$LocalDefsAnalysis;,0)#131
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Dup(1,0)#132
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,0)#133
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,0)#134
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Get(Lsoot/toolkits/graph/UnitGraph;,NONSTATIC,Lsoot/toolkits/scalar/SmartLocalDefs;,graph)#135
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(SPECIAL,Lsoot/toolkits/scalar/SmartLocalDefs$LocalDefsAnalysis;,<init>,(Lsoot/toolkits/scalar/SmartLocalDefs;Lsoot/toolkits/graph/UnitGraph;)V)#136
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.<init>(Lsoot/toolkits/scalar/SmartLocalDefs;Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.<init>(Lsoot/toolkits/scalar/SmartLocalDefs;Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.<init>(Lsoot/toolkits/scalar/SmartLocalDefs;Lsoot/toolkits/graph/UnitGraph;)V#Put(Lsoot/toolkits/scalar/SmartLocalDefs;,NONSTATIC,Lsoot/toolkits/scalar/SmartLocalDefs$LocalDefsAnalysis;,this$0)#2
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.<init>(Lsoot/toolkits/scalar/SmartLocalDefs;Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.<init>(Lsoot/toolkits/scalar/SmartLocalDefs;Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,2)#4
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.<init>(Lsoot/toolkits/scalar/SmartLocalDefs;Lsoot/toolkits/graph/UnitGraph;)V#Invoke(SPECIAL,Lsoot/toolkits/scalar/ForwardFlowAnalysis;,<init>,(Lsoot/toolkits/graph/DirectedGraph;)V)#5
soot.toolkits.scalar.ForwardFlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.ForwardFlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.toolkits.scalar.ForwardFlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#Invoke(SPECIAL,Lsoot/toolkits/scalar/FlowAnalysis;,<init>,(Lsoot/toolkits/graph/DirectedGraph;)V)#2
soot.toolkits.scalar.ForwardFlowAnalysis.<init>(Lsoot/toolkits/graph/DirectedGraph;)V#Return(V)#3
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.<init>(Lsoot/toolkits/scalar/SmartLocalDefs;Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,0)#6
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.<init>(Lsoot/toolkits/scalar/SmartLocalDefs;Lsoot/toolkits/graph/UnitGraph;)V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/SmartLocalDefs$LocalDefsAnalysis;,doAnalysis,()V)#7
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#New(Ljava/util/HashMap;,0)#0
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Dup(1,0)#1
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#2
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,1)#3
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#4
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/ForwardFlowAnalysis;,constructOrderer,()Lsoot/toolkits/graph/Orderer;)#5
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#6
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Get(Lsoot/toolkits/graph/DirectedGraph;,NONSTATIC,Lsoot/toolkits/scalar/ForwardFlowAnalysis;,graph)#7
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Constant(I,0)#8
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Lsoot/toolkits/graph/Orderer;,newList,(Lsoot/toolkits/graph/DirectedGraph;Z)Ljava/util/List;)#9
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#66
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,order)#67
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,3)#68
soot.toolkits.graph.PseudoTopologicalOrderer.visitNode(Ljava/lang/Object;)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,addFirst,(Ljava/lang/Object;)V)#69
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,2)#10
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Constant(I,1)#11
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalStore(I,3)#12
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,2)#13
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#14
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,4)#15
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Goto(32)#16
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,4)#32
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#33
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Constant(I,0)#34
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#ConditionalBranch(I,ne,17)#35
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,4)#17
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#18
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,5)#19
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,1)#20
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,5)#21
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#New(Ljava/lang/Integer;,0)#22
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Dup(1,0)#23
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(I,3)#24
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(SPECIAL,Ljava/lang/Integer;,<init>,(I)V)#25
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#26
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Pop(1)#27
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(I,3)#28
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Constant(I,1)#29
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#BinaryOp(I,add)#30
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalStore(I,3)#31
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#36
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,1)#37
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/ForwardFlowAnalysis;,constructWorklist,(Ljava/util/Map;)Ljava/util/Collection;)#38
soot.toolkits.scalar.ForwardFlowAnalysis.constructWorklist(Ljava/util/Map;)Ljava/util/Collection;#New(Ljava/util/TreeSet;,0)#0
soot.toolkits.scalar.ForwardFlowAnalysis.constructWorklist(Ljava/util/Map;)Ljava/util/Collection;#Dup(1,0)#1
soot.toolkits.scalar.ForwardFlowAnalysis.constructWorklist(Ljava/util/Map;)Ljava/util/Collection;#New(Lsoot/toolkits/scalar/ForwardFlowAnalysis$1;,0)#2
soot.toolkits.scalar.ForwardFlowAnalysis.constructWorklist(Ljava/util/Map;)Ljava/util/Collection;#Dup(1,0)#3
soot.toolkits.scalar.ForwardFlowAnalysis.constructWorklist(Ljava/util/Map;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,0)#4
soot.toolkits.scalar.ForwardFlowAnalysis.constructWorklist(Ljava/util/Map;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,1)#5
soot.toolkits.scalar.ForwardFlowAnalysis.constructWorklist(Ljava/util/Map;)Ljava/util/Collection;#Invoke(SPECIAL,Lsoot/toolkits/scalar/ForwardFlowAnalysis$1;,<init>,(Lsoot/toolkits/scalar/ForwardFlowAnalysis;Ljava/util/Map;)V)#6
soot.toolkits.scalar.ForwardFlowAnalysis$1.<init>(Lsoot/toolkits/scalar/ForwardFlowAnalysis;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.ForwardFlowAnalysis$1.<init>(Lsoot/toolkits/scalar/ForwardFlowAnalysis;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.toolkits.scalar.ForwardFlowAnalysis$1.<init>(Lsoot/toolkits/scalar/ForwardFlowAnalysis;Ljava/util/Map;)V#Put(Lsoot/toolkits/scalar/ForwardFlowAnalysis;,NONSTATIC,Lsoot/toolkits/scalar/ForwardFlowAnalysis$1;,this$0)#2
soot.toolkits.scalar.ForwardFlowAnalysis$1.<init>(Lsoot/toolkits/scalar/ForwardFlowAnalysis;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.toolkits.scalar.ForwardFlowAnalysis$1.<init>(Lsoot/toolkits/scalar/ForwardFlowAnalysis;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,2)#4
soot.toolkits.scalar.ForwardFlowAnalysis$1.<init>(Lsoot/toolkits/scalar/ForwardFlowAnalysis;Ljava/util/Map;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/ForwardFlowAnalysis$1;,val$numbers)#5
soot.toolkits.scalar.ForwardFlowAnalysis$1.<init>(Lsoot/toolkits/scalar/ForwardFlowAnalysis;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#6
soot.toolkits.scalar.ForwardFlowAnalysis$1.<init>(Lsoot/toolkits/scalar/ForwardFlowAnalysis;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#7
soot.toolkits.scalar.ForwardFlowAnalysis$1.<init>(Lsoot/toolkits/scalar/ForwardFlowAnalysis;Ljava/util/Map;)V#Return(V)#8
soot.toolkits.scalar.ForwardFlowAnalysis.constructWorklist(Ljava/util/Map;)Ljava/util/Collection;#Invoke(SPECIAL,Ljava/util/TreeSet;,<init>,(Ljava/util/Comparator;)V)#7
soot.toolkits.scalar.ForwardFlowAnalysis.constructWorklist(Ljava/util/Map;)Ljava/util/Collection;#Return(Ljava/lang/Object;)#8
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,4)#39
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#40
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Get(Lsoot/toolkits/graph/DirectedGraph;,NONSTATIC,Lsoot/toolkits/scalar/ForwardFlowAnalysis;,graph)#41
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Lsoot/toolkits/graph/DirectedGraph;,getHeads,()Ljava/util/List;)#42
soot.toolkits.graph.UnitGraph.getHeads()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.UnitGraph.getHeads()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lsoot/toolkits/graph/UnitGraph;,heads)#1
soot.toolkits.graph.UnitGraph.getHeads()Ljava/util/List;#Return(Ljava/lang/Object;)#2
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,5)#43
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#44
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Get(Lsoot/toolkits/graph/DirectedGraph;,NONSTATIC,Lsoot/toolkits/scalar/ForwardFlowAnalysis;,graph)#45
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Lsoot/toolkits/graph/DirectedGraph;,size,()I)#46
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalStore(I,6)#47
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Constant(I,0)#48
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalStore(I,7)#49
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#50
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Get(Lsoot/toolkits/graph/DirectedGraph;,NONSTATIC,Lsoot/toolkits/scalar/ForwardFlowAnalysis;,graph)#51
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Lsoot/toolkits/graph/DirectedGraph;,iterator,()Ljava/util/Iterator;)#52
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,8)#53
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Goto(76)#54
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,8)#76
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#77
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Constant(I,0)#78
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#ConditionalBranch(I,ne,55)#79
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,8)#55
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#56
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,9)#57
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,4)#58
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,9)#59
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Collection;,add,(Ljava/lang/Object;)Z)#60
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Pop(1)#61
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#62
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/ForwardFlowAnalysis;,unitToBeforeFlow)#63
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,9)#64
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#65
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/ForwardFlowAnalysis;,newInitialFlow,()Ljava/lang/Object;)#66
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.newInitialFlow()Ljava/lang/Object;#New(Ljava/util/HashSet;,0)#0
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.newInitialFlow()Ljava/lang/Object;#Dup(1,0)#1
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.newInitialFlow()Ljava/lang/Object;#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#2
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.newInitialFlow()Ljava/lang/Object;#Return(Ljava/lang/Object;)#3
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#67
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Pop(1)#68
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#69
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/ForwardFlowAnalysis;,unitToAfterFlow)#70
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,9)#71
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#72
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/ForwardFlowAnalysis;,newInitialFlow,()Ljava/lang/Object;)#73
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#74
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Pop(1)#75
soot.toolkits.scalar.ForwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.ForwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/ForwardFlowAnalysis$1;,val$numbers)#1
soot.toolkits.scalar.ForwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,1)#2
soot.toolkits.scalar.ForwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
soot.toolkits.scalar.ForwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#CheckCast(Ljava/lang/Integer;)#4
soot.toolkits.scalar.ForwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalStore(Ljava/lang/Object;,3)#5
soot.toolkits.scalar.ForwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,0)#6
soot.toolkits.scalar.ForwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/ForwardFlowAnalysis$1;,val$numbers)#7
soot.toolkits.scalar.ForwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,2)#8
soot.toolkits.scalar.ForwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#9
soot.toolkits.scalar.ForwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#CheckCast(Ljava/lang/Integer;)#10
soot.toolkits.scalar.ForwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalStore(Ljava/lang/Object;,4)#11
soot.toolkits.scalar.ForwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,3)#12
soot.toolkits.scalar.ForwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#13
soot.toolkits.scalar.ForwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,4)#14
soot.toolkits.scalar.ForwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#15
soot.toolkits.scalar.ForwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#BinaryOp(I,sub)#16
soot.toolkits.scalar.ForwardFlowAnalysis$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#Return(I)#17
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,5)#80
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#81
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,8)#82
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Goto(94)#83
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,8)#94
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#95
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Constant(I,0)#96
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#ConditionalBranch(I,ne,84)#97
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,8)#84
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#85
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,9)#86
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#87
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/ForwardFlowAnalysis;,unitToBeforeFlow)#88
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,9)#89
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#90
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/ForwardFlowAnalysis;,entryInitialFlow,()Ljava/lang/Object;)#91
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.entryInitialFlow()Ljava/lang/Object;#New(Ljava/util/HashSet;,0)#0
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.entryInitialFlow()Ljava/lang/Object;#Dup(1,0)#1
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.entryInitialFlow()Ljava/lang/Object;#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#2
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.entryInitialFlow()Ljava/lang/Object;#Return(Ljava/lang/Object;)#3
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#92
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Pop(1)#93
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#98
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/ForwardFlowAnalysis;,newInitialFlow,()Ljava/lang/Object;)#99
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,8)#100
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Goto(315)#101
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,4)#315
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Collection;,isEmpty,()Z)#316
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Constant(I,0)#317
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#ConditionalBranch(I,eq,102)#318
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,4)#102
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Collection;,iterator,()Ljava/util/Iterator;)#103
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#104
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,11)#105
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,4)#106
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,11)#107
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Collection;,remove,(Ljava/lang/Object;)Z)#108
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Pop(1)#109
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,5)#110
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,11)#111
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/List;,contains,(Ljava/lang/Object;)Z)#112
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalStore(I,12)#113
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#114
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#115
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/ForwardFlowAnalysis;,unitToAfterFlow)#116
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,11)#117
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#118
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,8)#119
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/ForwardFlowAnalysis;,copy,(Ljava/lang/Object;Ljava/lang/Object;)V)#120
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#CheckCast(Ljava/util/HashSet;)#1
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,3)#2
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,2)#3
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#CheckCast(Ljava/util/HashSet;)#4
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,4)#5
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,4)#6
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(VIRTUAL,Ljava/util/HashSet;,size,()I)#7
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#Constant(I,0)#8
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#ConditionalBranch(I,le,14)#9
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,3)#14
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(VIRTUAL,Ljava/util/HashSet;,size,()I)#15
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#Constant(I,0)#16
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#ConditionalBranch(I,le,38)#17
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#Return(V)#38
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#121
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Get(Lsoot/toolkits/graph/DirectedGraph;,NONSTATIC,Lsoot/toolkits/scalar/ForwardFlowAnalysis;,graph)#122
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,11)#123
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Lsoot/toolkits/graph/DirectedGraph;,getPredsOf,(Ljava/lang/Object;)Ljava/util/List;)#124
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,13)#125
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#126
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/ForwardFlowAnalysis;,unitToBeforeFlow)#127
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,11)#128
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#129
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,9)#130
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,13)#131
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#132
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Constant(I,1)#133
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#ConditionalBranch(I,ne,145)#134
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,13)#145
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#146
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Constant(I,0)#147
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#ConditionalBranch(I,eq,176)#148
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(I,12)#176
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Constant(I,0)#177
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#ConditionalBranch(I,eq,189)#178
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,13)#179
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#180
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Constant(I,0)#181
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#ConditionalBranch(I,eq,189)#182
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#189
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/ForwardFlowAnalysis;,unitToAfterFlow)#190
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,11)#191
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#192
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,10)#193
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#194
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(VIRTUAL,Lsoot/options/Options;,interactive_mode,()Z)#195
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Constant(I,0)#196
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#ConditionalBranch(I,eq,245)#197
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#245
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,9)#246
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,11)#247
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,10)#248
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/ForwardFlowAnalysis;,flowThrough,(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V)#249
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,2)#0
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#CheckCast(Lsoot/Unit;)#1
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,4)#2
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#CheckCast(Ljava/util/HashSet;)#4
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,5)#5
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,3)#6
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#CheckCast(Ljava/util/HashSet;)#7
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,6)#8
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,6)#9
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(VIRTUAL,Ljava/util/HashSet;,clear,()V)#10
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Get(Lsoot/toolkits/scalar/SmartLocalDefs;,NONSTATIC,Lsoot/toolkits/scalar/SmartLocalDefs$LocalDefsAnalysis;,this$0)#12
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(STATIC,Lsoot/toolkits/scalar/SmartLocalDefs;,access$0,(Lsoot/toolkits/scalar/SmartLocalDefs;)Ljava/util/Map;)#13
soot.toolkits.scalar.SmartLocalDefs.access$0(Lsoot/toolkits/scalar/SmartLocalDefs;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.SmartLocalDefs.access$0(Lsoot/toolkits/scalar/SmartLocalDefs;)Ljava/util/Map;#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/SmartLocalDefs;,unitToMask)#1
soot.toolkits.scalar.SmartLocalDefs.access$0(Lsoot/toolkits/scalar/SmartLocalDefs;)Ljava/util/Map;#Return(Ljava/lang/Object;)#2
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,4)#14
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#15
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#CheckCast(Ljava/util/Set;)#16
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,7)#17
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#18
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Get(Lsoot/toolkits/scalar/SmartLocalDefs;,NONSTATIC,Lsoot/toolkits/scalar/SmartLocalDefs$LocalDefsAnalysis;,this$0)#19
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,4)#20
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(STATIC,Lsoot/toolkits/scalar/SmartLocalDefs;,access$1,(Lsoot/toolkits/scalar/SmartLocalDefs;Lsoot/Unit;)Lsoot/Local;)#21
soot.toolkits.scalar.SmartLocalDefs.access$1(Lsoot/toolkits/scalar/SmartLocalDefs;Lsoot/Unit;)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.SmartLocalDefs.access$1(Lsoot/toolkits/scalar/SmartLocalDefs;Lsoot/Unit;)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,1)#1
soot.toolkits.scalar.SmartLocalDefs.access$1(Lsoot/toolkits/scalar/SmartLocalDefs;Lsoot/Unit;)Lsoot/Local;#Invoke(SPECIAL,Lsoot/toolkits/scalar/SmartLocalDefs;,localDef,(Lsoot/Unit;)Lsoot/Local;)#2
soot.toolkits.scalar.SmartLocalDefs.access$1(Lsoot/toolkits/scalar/SmartLocalDefs;Lsoot/Unit;)Lsoot/Local;#Return(Ljava/lang/Object;)#3
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,8)#22
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Constant(L;,null)#23
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,9)#24
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,8)#25
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Constant(L;,null)#26
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#ConditionalBranch(Ljava/lang/Object;,ne,53)#27
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#53
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Get(Lsoot/toolkits/scalar/SmartLocalDefs;,NONSTATIC,Lsoot/toolkits/scalar/SmartLocalDefs$LocalDefsAnalysis;,this$0)#54
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,8)#55
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(STATIC,Lsoot/toolkits/scalar/SmartLocalDefs;,access$2,(Lsoot/toolkits/scalar/SmartLocalDefs;Lsoot/Local;)Ljava/util/HashSet;)#56
soot.toolkits.scalar.SmartLocalDefs.access$2(Lsoot/toolkits/scalar/SmartLocalDefs;Lsoot/Local;)Ljava/util/HashSet;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.SmartLocalDefs.access$2(Lsoot/toolkits/scalar/SmartLocalDefs;Lsoot/Local;)Ljava/util/HashSet;#LocalLoad(Ljava/lang/Object;,1)#1
soot.toolkits.scalar.SmartLocalDefs.access$2(Lsoot/toolkits/scalar/SmartLocalDefs;Lsoot/Local;)Ljava/util/HashSet;#Invoke(SPECIAL,Lsoot/toolkits/scalar/SmartLocalDefs;,defsOf,(Lsoot/Local;)Ljava/util/HashSet;)#2
soot.toolkits.scalar.SmartLocalDefs.access$2(Lsoot/toolkits/scalar/SmartLocalDefs;Lsoot/Local;)Ljava/util/HashSet;#Return(Ljava/lang/Object;)#3
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,9)#57
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,5)#58
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(VIRTUAL,Ljava/util/HashSet;,iterator,()Ljava/util/Iterator;)#59
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,10)#60
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Goto(88)#61
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,10)#88
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#89
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Constant(I,0)#90
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#ConditionalBranch(I,ne,62)#91
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,6)#92
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,9)#93
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(VIRTUAL,Ljava/util/HashSet;,removeAll,(Ljava/util/Collection;)Z)#94
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Pop(1)#95
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,7)#96
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,8)#97
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(INTERFACE,Ljava/util/Set;,contains,(Ljava/lang/Object;)Z)#98
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Constant(I,0)#99
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#ConditionalBranch(I,eq,105)#100
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,6)#101
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,4)#102
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(VIRTUAL,Ljava/util/HashSet;,add,(Ljava/lang/Object;)Z)#103
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Pop(1)#104
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Return(V)#105
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#250
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(VIRTUAL,Lsoot/options/Options;,interactive_mode,()Z)#251
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Constant(I,0)#252
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#ConditionalBranch(I,eq,288)#253
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(I,7)#288
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Constant(I,1)#289
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#BinaryOp(I,add)#290
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalStore(I,7)#291
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,10)#292
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,8)#293
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#294
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Constant(I,0)#295
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#ConditionalBranch(I,ne,315)#296
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#297
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Get(Lsoot/toolkits/graph/DirectedGraph;,NONSTATIC,Lsoot/toolkits/scalar/ForwardFlowAnalysis;,graph)#298
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,11)#299
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Lsoot/toolkits/graph/DirectedGraph;,getSuccsOf,(Ljava/lang/Object;)Ljava/util/List;)#300
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#301
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,13)#302
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Goto(311)#303
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,13)#311
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#312
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Constant(I,0)#313
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#ConditionalBranch(I,ne,304)#314
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,13)#304
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#305
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalStore(Ljava/lang/Object;,14)#306
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,4)#307
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,14)#308
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Collection;,add,(Ljava/lang/Object;)Z)#309
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Pop(1)#310
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#135
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,0)#136
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/ForwardFlowAnalysis;,unitToAfterFlow)#137
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,13)#138
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Constant(I,0)#139
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#140
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#141
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(Ljava/lang/Object;,9)#142
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/ForwardFlowAnalysis;,copy,(Ljava/lang/Object;Ljava/lang/Object;)V)#143
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,3)#18
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(VIRTUAL,Ljava/util/HashSet;,iterator,()Ljava/util/Iterator;)#19
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,5)#20
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#Goto(34)#21
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,5)#34
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#35
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#Constant(I,0)#36
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#ConditionalBranch(I,ne,22)#37
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,5)#22
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#23
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,6)#24
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,4)#25
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,6)#26
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(VIRTUAL,Ljava/util/HashSet;,contains,(Ljava/lang/Object;)Z)#27
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#Constant(I,0)#28
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#ConditionalBranch(I,ne,34)#29
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,4)#30
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,6)#31
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(VIRTUAL,Ljava/util/HashSet;,add,(Ljava/lang/Object;)Z)#32
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.copy(Ljava/lang/Object;Ljava/lang/Object;)V#Pop(1)#33
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Goto(176)#144
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,10)#62
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#63
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#CheckCast(Lsoot/Unit;)#64
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,11)#65
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,7)#66
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#67
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Get(Lsoot/toolkits/scalar/SmartLocalDefs;,NONSTATIC,Lsoot/toolkits/scalar/SmartLocalDefs$LocalDefsAnalysis;,this$0)#68
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,11)#69
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(STATIC,Lsoot/toolkits/scalar/SmartLocalDefs;,access$1,(Lsoot/toolkits/scalar/SmartLocalDefs;Lsoot/Unit;)Lsoot/Local;)#70
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(INTERFACE,Ljava/util/Set;,contains,(Ljava/lang/Object;)Z)#71
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Constant(I,0)#72
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#ConditionalBranch(I,eq,88)#73
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,5)#28
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(VIRTUAL,Ljava/util/HashSet;,iterator,()Ljava/util/Iterator;)#29
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,10)#30
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Goto(48)#31
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,10)#48
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#49
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Constant(I,0)#50
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#ConditionalBranch(I,ne,32)#51
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,10)#32
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#33
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#CheckCast(Lsoot/Unit;)#34
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,11)#35
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,7)#36
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#37
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Get(Lsoot/toolkits/scalar/SmartLocalDefs;,NONSTATIC,Lsoot/toolkits/scalar/SmartLocalDefs$LocalDefsAnalysis;,this$0)#38
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,11)#39
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(STATIC,Lsoot/toolkits/scalar/SmartLocalDefs;,access$1,(Lsoot/toolkits/scalar/SmartLocalDefs;Lsoot/Unit;)Lsoot/Local;)#40
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(INTERFACE,Ljava/util/Set;,contains,(Ljava/lang/Object;)Z)#41
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Constant(I,0)#42
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#ConditionalBranch(I,eq,48)#43
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Goto(105)#52
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(STATIC,Lsoot/Timers;,v,()Lsoot/Timers;)#319
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Dup(1,0)#320
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Get(I,NONSTATIC,Lsoot/Timers;,totalFlowNodes)#321
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(I,6)#322
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#BinaryOp(I,add)#323
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Put(I,NONSTATIC,Lsoot/Timers;,totalFlowNodes)#324
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Invoke(STATIC,Lsoot/Timers;,v,()Lsoot/Timers;)#325
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Dup(1,0)#326
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Get(I,NONSTATIC,Lsoot/Timers;,totalFlowComputations)#327
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#LocalLoad(I,7)#328
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#BinaryOp(I,add)#329
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Put(I,NONSTATIC,Lsoot/Timers;,totalFlowComputations)#330
soot.toolkits.scalar.ForwardFlowAnalysis.doAnalysis()V#Return(V)#331
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.<init>(Lsoot/toolkits/scalar/SmartLocalDefs;Lsoot/toolkits/graph/UnitGraph;)V#Return(V)#8
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Put(Lsoot/toolkits/scalar/SmartLocalDefs$LocalDefsAnalysis;,NONSTATIC,Lsoot/toolkits/scalar/SmartLocalDefs;,analysis)#137
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,0)#138
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#New(Ljava/util/HashMap;,0)#139
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Dup(1,0)#140
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#141
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/SmartLocalDefs;,answer)#142
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,0)#143
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Get(Lsoot/toolkits/graph/UnitGraph;,NONSTATIC,Lsoot/toolkits/scalar/SmartLocalDefs;,graph)#144
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(VIRTUAL,Lsoot/toolkits/graph/UnitGraph;,iterator,()Ljava/util/Iterator;)#145
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalStore(Ljava/lang/Object;,3)#146
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Goto(217)#147
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,3)#217
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#218
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Constant(I,0)#219
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#ConditionalBranch(I,ne,148)#220
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,3)#148
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#149
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#CheckCast(Lsoot/Unit;)#150
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalStore(Ljava/lang/Object;,4)#151
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,4)#152
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Lsoot/Unit;,getUseBoxes,()Ljava/util/List;)#153
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#154
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalStore(Ljava/lang/Object;,5)#155
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Goto(213)#156
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,5)#213
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#214
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Constant(I,0)#215
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#ConditionalBranch(I,ne,157)#216
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,5)#157
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#158
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#CheckCast(Lsoot/ValueBox;)#159
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalStore(Ljava/lang/Object;,6)#160
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,6)#161
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#162
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalStore(Ljava/lang/Object;,7)#163
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,7)#164
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Instanceof(Lsoot/Local;)#165
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Constant(I,0)#166
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#ConditionalBranch(I,ne,169)#167
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Goto(213)#168
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,0)#169
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Get(Lsoot/toolkits/scalar/SmartLocalDefs$LocalDefsAnalysis;,NONSTATIC,Lsoot/toolkits/scalar/SmartLocalDefs;,analysis)#170
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,4)#171
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/SmartLocalDefs$LocalDefsAnalysis;,getFlowBefore,(Ljava/lang/Object;)Ljava/lang/Object;)#172
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#CheckCast(Ljava/util/HashSet;)#173
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalStore(Ljava/lang/Object;,8)#174
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#New(Ljava/util/ArrayList;,0)#175
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Dup(1,0)#176
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#177
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalStore(Ljava/lang/Object;,9)#178
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,0)#179
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,7)#180
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#CheckCast(Lsoot/Local;)#181
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(SPECIAL,Lsoot/toolkits/scalar/SmartLocalDefs;,defsOf,(Lsoot/Local;)Ljava/util/HashSet;)#182
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(VIRTUAL,Ljava/util/HashSet;,iterator,()Ljava/util/Iterator;)#183
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalStore(Ljava/lang/Object;,11)#184
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Goto(199)#185
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,11)#199
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#200
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Constant(I,0)#201
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#ConditionalBranch(I,ne,186)#202
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,11)#186
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#187
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#CheckCast(Lsoot/Unit;)#188
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalStore(Ljava/lang/Object;,10)#189
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,8)#190
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,10)#191
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(VIRTUAL,Ljava/util/HashSet;,contains,(Ljava/lang/Object;)Z)#192
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Constant(I,0)#193
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#ConditionalBranch(I,eq,199)#194
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,9)#195
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,10)#196
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#197
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Pop(1)#198
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,0)#203
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/SmartLocalDefs;,answer)#204
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#New(Lsoot/util/Cons;,0)#205
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Dup(1,0)#206
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,4)#207
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,7)#208
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(SPECIAL,Lsoot/util/Cons;,<init>,(Ljava/lang/Object;Ljava/lang/Object;)V)#209
soot.util.Cons.<init>(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.Cons.<init>(Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.util.Cons.<init>(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.util.Cons.<init>(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.util.Cons.<init>(Ljava/lang/Object;Ljava/lang/Object;)V#Put(Ljava/lang/Object;,NONSTATIC,Lsoot/util/Cons;,car)#4
soot.util.Cons.<init>(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.util.Cons.<init>(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,2)#6
soot.util.Cons.<init>(Ljava/lang/Object;Ljava/lang/Object;)V#Put(Ljava/lang/Object;,NONSTATIC,Lsoot/util/Cons;,cdr)#7
soot.util.Cons.<init>(Ljava/lang/Object;Ljava/lang/Object;)V#Return(V)#8
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,9)#210
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#211
soot.util.Cons.hashCode()I#Constant(I,0)#0
soot.util.Cons.hashCode()I#LocalStore(I,1)#1
soot.util.Cons.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#2
soot.util.Cons.hashCode()I#Get(Ljava/lang/Object;,NONSTATIC,Lsoot/util/Cons;,car)#3
soot.util.Cons.hashCode()I#Constant(L;,null)#4
soot.util.Cons.hashCode()I#ConditionalBranch(Ljava/lang/Object;,eq,12)#5
soot.util.Cons.hashCode()I#LocalLoad(I,1)#6
soot.util.Cons.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#7
soot.util.Cons.hashCode()I#Get(Ljava/lang/Object;,NONSTATIC,Lsoot/util/Cons;,car)#8
soot.util.Cons.hashCode()I#Invoke(VIRTUAL,Ljava/lang/Object;,hashCode,()I)#9
soot.util.Cons.hashCode()I#BinaryOp(I,add)#10
soot.util.Cons.hashCode()I#LocalStore(I,1)#11
soot.util.Cons.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#12
soot.util.Cons.hashCode()I#Get(Ljava/lang/Object;,NONSTATIC,Lsoot/util/Cons;,cdr)#13
soot.util.Cons.hashCode()I#Constant(L;,null)#14
soot.util.Cons.hashCode()I#ConditionalBranch(Ljava/lang/Object;,eq,22)#15
soot.util.Cons.hashCode()I#LocalLoad(I,1)#16
soot.util.Cons.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#17
soot.util.Cons.hashCode()I#Get(Ljava/lang/Object;,NONSTATIC,Lsoot/util/Cons;,cdr)#18
soot.util.Cons.hashCode()I#Invoke(VIRTUAL,Ljava/lang/Object;,hashCode,()I)#19
soot.util.Cons.hashCode()I#BinaryOp(I,add)#20
soot.util.Cons.hashCode()I#LocalStore(I,1)#21
soot.util.Cons.hashCode()I#LocalLoad(I,1)#22
soot.util.Cons.hashCode()I#Return(I)#23
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Pop(1)#212
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#221
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#222
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Constant(I,0)#223
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#ConditionalBranch(I,eq,228)#224
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#228
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(VIRTUAL,Lsoot/options/Options;,verbose,()Z)#229
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Constant(I,0)#230
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#ConditionalBranch(I,eq,247)#231
soot.toolkits.scalar.SmartLocalDefs.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V#Return(V)#247
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,8)#56
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Lsoot/toolkits/scalar/SimpleLocalUses;,0)#57
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#58
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#59
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#60
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Lsoot/toolkits/scalar/SimpleLocalUses;,<init>,(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LocalDefs;)V)#61
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(VIRTUAL,Lsoot/toolkits/graph/UnitGraph;,getBody,()Lsoot/Body;)#2
soot.toolkits.graph.UnitGraph.getBody()Lsoot/Body;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.UnitGraph.getBody()Lsoot/Body;#Get(Lsoot/Body;,NONSTATIC,Lsoot/toolkits/graph/UnitGraph;,body)#1
soot.toolkits.graph.UnitGraph.getBody()Lsoot/Body;#Return(Ljava/lang/Object;)#2
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,2)#3
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(SPECIAL,Lsoot/toolkits/scalar/SimpleLocalUses;,<init>,(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V)#4
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#2
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#3
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Constant(I,0)#4
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#ConditionalBranch(I,eq,9)#5
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#9
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#10
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Constant(I,0)#11
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#ConditionalBranch(I,eq,16)#12
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#16
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(VIRTUAL,Lsoot/options/Options;,verbose,()Z)#17
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Constant(I,0)#18
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#ConditionalBranch(I,eq,34)#19
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,1)#34
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(VIRTUAL,Lsoot/Body;,getUnits,()Lsoot/PatchingChain;)#35
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalStore(Ljava/lang/Object;,3)#36
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,0)#37
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#New(Ljava/util/HashMap;,0)#38
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Dup(1,0)#39
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,3)#40
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(INTERFACE,Lsoot/util/Chain;,size,()I)#41
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Constant(I,2)#42
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#BinaryOp(I,mul)#43
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Constant(I,1)#44
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#BinaryOp(I,add)#45
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Constant(F,0.7)#46
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(IF)V)#47
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/SimpleLocalUses;,unitToUses)#48
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,3)#49
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#50
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalStore(Ljava/lang/Object;,4)#51
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Goto(65)#52
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,4)#65
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#66
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Constant(I,0)#67
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#ConditionalBranch(I,ne,53)#68
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,4)#53
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#54
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#CheckCast(Lsoot/Unit;)#55
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalStore(Ljava/lang/Object;,5)#56
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,0)#57
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/SimpleLocalUses;,unitToUses)#58
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,5)#59
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#New(Ljava/util/ArrayList;,0)#60
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Dup(1,0)#61
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#62
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#63
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Pop(1)#64
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#69
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#70
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Constant(I,0)#71
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#ConditionalBranch(I,eq,76)#72
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#76
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#77
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Constant(I,0)#78
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#ConditionalBranch(I,eq,83)#79
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,3)#83
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#84
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalStore(Ljava/lang/Object;,4)#85
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Goto(141)#86
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,4)#141
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#142
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Constant(I,0)#143
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#ConditionalBranch(I,ne,87)#144
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,4)#87
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#88
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#CheckCast(Lsoot/Unit;)#89
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalStore(Ljava/lang/Object;,5)#90
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,5)#91
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(INTERFACE,Lsoot/Unit;,getUseBoxes,()Ljava/util/List;)#92
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#93
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalStore(Ljava/lang/Object;,6)#94
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Goto(137)#95
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,6)#137
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#138
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Constant(I,0)#139
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#ConditionalBranch(I,ne,96)#140
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,6)#96
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#97
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#CheckCast(Lsoot/ValueBox;)#98
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalStore(Ljava/lang/Object;,7)#99
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,7)#100
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#101
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Instanceof(Lsoot/Local;)#102
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Constant(I,0)#103
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#ConditionalBranch(I,eq,137)#104
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,7)#105
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#106
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#CheckCast(Lsoot/Local;)#107
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalStore(Ljava/lang/Object;,8)#108
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,2)#109
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,8)#110
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,5)#111
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(INTERFACE,Lsoot/toolkits/scalar/LocalDefs;,getDefsOfAt,(Lsoot/Local;Lsoot/Unit;)Ljava/util/List;)#112
soot.toolkits.scalar.SmartLocalDefs.getDefsOfAt(Lsoot/Local;Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.SmartLocalDefs.getDefsOfAt(Lsoot/Local;Lsoot/Unit;)Ljava/util/List;#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/SmartLocalDefs;,answer)#1
soot.toolkits.scalar.SmartLocalDefs.getDefsOfAt(Lsoot/Local;Lsoot/Unit;)Ljava/util/List;#New(Lsoot/util/Cons;,0)#2
soot.toolkits.scalar.SmartLocalDefs.getDefsOfAt(Lsoot/Local;Lsoot/Unit;)Ljava/util/List;#Dup(1,0)#3
soot.toolkits.scalar.SmartLocalDefs.getDefsOfAt(Lsoot/Local;Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#4
soot.toolkits.scalar.SmartLocalDefs.getDefsOfAt(Lsoot/Local;Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#5
soot.toolkits.scalar.SmartLocalDefs.getDefsOfAt(Lsoot/Local;Lsoot/Unit;)Ljava/util/List;#Invoke(SPECIAL,Lsoot/util/Cons;,<init>,(Ljava/lang/Object;Ljava/lang/Object;)V)#6
soot.toolkits.scalar.SmartLocalDefs.getDefsOfAt(Lsoot/Local;Lsoot/Unit;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#7
soot.util.Cons.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#0
soot.util.Cons.equals(Ljava/lang/Object;)Z#Instanceof(Lsoot/util/Cons;)#1
soot.util.Cons.equals(Ljava/lang/Object;)Z#Constant(I,0)#2
soot.util.Cons.equals(Ljava/lang/Object;)Z#ConditionalBranch(I,ne,6)#3
soot.util.Cons.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#6
soot.util.Cons.equals(Ljava/lang/Object;)Z#CheckCast(Lsoot/util/Cons;)#7
soot.util.Cons.equals(Ljava/lang/Object;)Z#LocalStore(Ljava/lang/Object;,2)#8
soot.util.Cons.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#9
soot.util.Cons.equals(Ljava/lang/Object;)Z#Get(Ljava/lang/Object;,NONSTATIC,Lsoot/util/Cons;,car)#10
soot.util.Cons.equals(Ljava/lang/Object;)Z#Constant(L;,null)#11
soot.util.Cons.equals(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,19)#12
soot.util.Cons.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#19
soot.util.Cons.equals(Ljava/lang/Object;)Z#Get(Ljava/lang/Object;,NONSTATIC,Lsoot/util/Cons;,car)#20
soot.util.Cons.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,2)#21
soot.util.Cons.equals(Ljava/lang/Object;)Z#Get(Ljava/lang/Object;,NONSTATIC,Lsoot/util/Cons;,car)#22
soot.util.Cons.equals(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#23
soot.util.Cons.equals(Ljava/lang/Object;)Z#Constant(I,0)#24
soot.util.Cons.equals(Ljava/lang/Object;)Z#ConditionalBranch(I,ne,28)#25
soot.util.Cons.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#28
soot.util.Cons.equals(Ljava/lang/Object;)Z#Get(Ljava/lang/Object;,NONSTATIC,Lsoot/util/Cons;,cdr)#29
soot.util.Cons.equals(Ljava/lang/Object;)Z#Constant(L;,null)#30
soot.util.Cons.equals(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,38)#31
soot.util.Cons.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#38
soot.util.Cons.equals(Ljava/lang/Object;)Z#Get(Ljava/lang/Object;,NONSTATIC,Lsoot/util/Cons;,cdr)#39
soot.util.Cons.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,2)#40
soot.util.Cons.equals(Ljava/lang/Object;)Z#Get(Ljava/lang/Object;,NONSTATIC,Lsoot/util/Cons;,cdr)#41
soot.util.Cons.equals(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#42
soot.util.Cons.equals(Ljava/lang/Object;)Z#Constant(I,0)#43
soot.util.Cons.equals(Ljava/lang/Object;)Z#ConditionalBranch(I,ne,47)#44
soot.util.Cons.equals(Ljava/lang/Object;)Z#Constant(I,1)#47
soot.util.Cons.equals(Ljava/lang/Object;)Z#Return(I)#48
soot.toolkits.scalar.SmartLocalDefs.getDefsOfAt(Lsoot/Local;Lsoot/Unit;)Ljava/util/List;#CheckCast(Ljava/util/List;)#8
soot.toolkits.scalar.SmartLocalDefs.getDefsOfAt(Lsoot/Local;Lsoot/Unit;)Ljava/util/List;#Return(Ljava/lang/Object;)#9
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalStore(Ljava/lang/Object;,9)#113
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,9)#114
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#115
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalStore(Ljava/lang/Object;,10)#116
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Goto(133)#117
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,10)#133
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#134
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Constant(I,0)#135
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#ConditionalBranch(I,ne,118)#136
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,0)#118
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/SimpleLocalUses;,unitToUses)#119
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,10)#120
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#121
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#122
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#CheckCast(Ljava/util/List;)#123
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalStore(Ljava/lang/Object;,11)#124
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,11)#125
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#New(Lsoot/toolkits/scalar/UnitValueBoxPair;,0)#126
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Dup(1,0)#127
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,5)#128
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,7)#129
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(SPECIAL,Lsoot/toolkits/scalar/UnitValueBoxPair;,<init>,(Lsoot/Unit;Lsoot/ValueBox;)V)#130
soot.toolkits.scalar.UnitValueBoxPair.<init>(Lsoot/Unit;Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.UnitValueBoxPair.<init>(Lsoot/Unit;Lsoot/ValueBox;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.toolkits.scalar.UnitValueBoxPair.<init>(Lsoot/Unit;Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.toolkits.scalar.UnitValueBoxPair.<init>(Lsoot/Unit;Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.toolkits.scalar.UnitValueBoxPair.<init>(Lsoot/Unit;Lsoot/ValueBox;)V#Put(Lsoot/Unit;,NONSTATIC,Lsoot/toolkits/scalar/UnitValueBoxPair;,unit)#4
soot.toolkits.scalar.UnitValueBoxPair.<init>(Lsoot/Unit;Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.toolkits.scalar.UnitValueBoxPair.<init>(Lsoot/Unit;Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,2)#6
soot.toolkits.scalar.UnitValueBoxPair.<init>(Lsoot/Unit;Lsoot/ValueBox;)V#Put(Lsoot/ValueBox;,NONSTATIC,Lsoot/toolkits/scalar/UnitValueBoxPair;,valueBox)#7
soot.toolkits.scalar.UnitValueBoxPair.<init>(Lsoot/Unit;Lsoot/ValueBox;)V#Return(V)#8
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#131
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Pop(1)#132
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#145
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#146
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Constant(I,0)#147
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#ConditionalBranch(I,eq,152)#148
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#152
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#153
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Constant(I,0)#154
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#ConditionalBranch(I,eq,159)#155
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,3)#159
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#160
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalStore(Ljava/lang/Object;,4)#161
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Goto(178)#162
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,4)#178
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#179
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Constant(I,0)#180
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#ConditionalBranch(I,ne,163)#181
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,4)#163
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#164
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#CheckCast(Lsoot/Unit;)#165
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalStore(Ljava/lang/Object;,5)#166
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,0)#167
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/SimpleLocalUses;,unitToUses)#168
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,5)#169
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,0)#170
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/SimpleLocalUses;,unitToUses)#171
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#LocalLoad(Ljava/lang/Object;,5)#172
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#173
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#CheckCast(Ljava/util/List;)#174
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(STATIC,Ljava/util/Collections;,unmodifiableList,(Ljava/util/List;)Ljava/util/List;)#175
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#176
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Pop(1)#177
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#182
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#183
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Constant(I,0)#184
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#ConditionalBranch(I,eq,189)#185
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#189
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#190
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Constant(I,0)#191
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#ConditionalBranch(I,eq,196)#192
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#196
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Invoke(VIRTUAL,Lsoot/options/Options;,verbose,()Z)#197
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Constant(I,0)#198
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#ConditionalBranch(I,eq,214)#199
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/Body;Lsoot/toolkits/scalar/LocalDefs;)V#Return(V)#214
soot.toolkits.scalar.SimpleLocalUses.<init>(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LocalDefs;)V#Return(V)#5
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,9)#62
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#63
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#64
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#65
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,70)#66
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#70
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#71
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#72
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,77)#73
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/util/HashSet;,0)#77
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#78
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#79
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,10)#80
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/util/HashMap;,0)#81
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#82
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#83
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/util/Chain;,size,()I)#84
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,2)#85
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#BinaryOp(I,mul)#86
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,1)#87
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#BinaryOp(I,add)#88
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(F,0.7)#89
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(IF)V)#90
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,11)#91
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#92
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#93
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,12)#94
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(276)#95
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#276
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#277
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#278
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,96)#279
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#96
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#97
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/Unit;)#98
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,13)#99
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,13)#100
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Unit;,getDefBoxes,()Ljava/util/List;)#101
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#102
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,1)#103
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,le,110)#104
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,13)#110
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Unit;,getDefBoxes,()Ljava/util/List;)#111
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#112
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,1)#113
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ge,116)#114
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,13)#116
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Unit;,getDefBoxes,()Ljava/util/List;)#117
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#118
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#119
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/ValueBox;)#120
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,14)#121
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,14)#122
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#123
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,15)#124
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,15)#125
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Instanceof(Lsoot/Local;)#126
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#127
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,276)#128
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#129
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,14)#130
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,contains,(Ljava/lang/Object;)Z)#131
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#132
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,276)#133
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/util/LinkedList;,0)#134
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#135
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#136
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,16)#137
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/util/LinkedList;,0)#138
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#139
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#140
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,17)#141
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/util/ArrayList;,0)#142
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#143
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#144
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,18)#145
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#146
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,18)#147
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#148
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Pop(1)#149
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,16)#150
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,13)#151
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,add,(Ljava/lang/Object;)Z)#152
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Pop(1)#153
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#154
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,14)#155
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#156
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Pop(1)#157
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(268)#158
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,17)#268
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,isEmpty,()Z)#269
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#270
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,159)#271
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,16)#272
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,isEmpty,()Z)#273
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#274
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,159)#275
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,16)#159
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,isEmpty,()Z)#160
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#161
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,213)#162
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,16)#163
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,removeFirst,()Ljava/lang/Object;)#164
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/Unit;)#165
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,19)#166
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,18)#167
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,19)#168
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Unit;,getDefBoxes,()Ljava/util/List;)#169
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#170
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#171
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#172
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Pop(1)#173
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#174
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,19)#175
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/toolkits/scalar/LocalUses;,getUsesOf,(Lsoot/Unit;)Ljava/util/List;)#176
soot.toolkits.scalar.SimpleLocalUses.getUsesOf(Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.SimpleLocalUses.getUsesOf(Lsoot/Unit;)Ljava/util/List;#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/SimpleLocalUses;,unitToUses)#1
soot.toolkits.scalar.SimpleLocalUses.getUsesOf(Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#2
soot.toolkits.scalar.SimpleLocalUses.getUsesOf(Lsoot/Unit;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
soot.toolkits.scalar.SimpleLocalUses.getUsesOf(Lsoot/Unit;)Ljava/util/List;#CheckCast(Ljava/util/List;)#4
soot.toolkits.scalar.SimpleLocalUses.getUsesOf(Lsoot/Unit;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,2)#5
soot.toolkits.scalar.SimpleLocalUses.getUsesOf(Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#6
soot.toolkits.scalar.SimpleLocalUses.getUsesOf(Lsoot/Unit;)Ljava/util/List;#Return(Ljava/lang/Object;)#7
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,20)#177
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,20)#178
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#179
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,21)#180
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(208)#181
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,21)#208
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#209
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#210
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,182)#211
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,21)#182
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#183
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/toolkits/scalar/UnitValueBoxPair;)#184
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,22)#185
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#186
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,22)#187
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/toolkits/scalar/UnitValueBoxPair;,valueBox)#188
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,contains,(Ljava/lang/Object;)Z)#189
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#190
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,208)#191
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#192
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,22)#193
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/toolkits/scalar/UnitValueBoxPair;,valueBox)#194
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#195
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Pop(1)#196
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,17)#197
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,22)#198
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/toolkits/scalar/UnitValueBoxPair;,valueBox)#199
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,addLast,(Ljava/lang/Object;)V)#200
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#201
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,22)#202
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/toolkits/scalar/UnitValueBoxPair;,valueBox)#203
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,22)#204
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Get(Lsoot/Unit;,NONSTATIC,Lsoot/toolkits/scalar/UnitValueBoxPair;,unit)#205
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#206
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Pop(1)#207
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(268)#212
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,17)#213
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,removeFirst,()Ljava/lang/Object;)#214
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/ValueBox;)#215
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,19)#216
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,18)#217
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,19)#218
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#219
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Pop(1)#220
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#221
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,19)#222
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#223
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/Local;)#224
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#225
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,19)#226
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#227
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/Unit;)#228
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/toolkits/scalar/LocalDefs;,getDefsOfAt,(Lsoot/Local;Lsoot/Unit;)Ljava/util/List;)#229
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,20)#230
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,20)#231
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#232
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,21)#233
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(264)#234
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,21)#264
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#265
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#266
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,235)#267
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,21)#235
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#236
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/Unit;)#237
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,22)#238
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,22)#239
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Unit;,getDefBoxes,()Ljava/util/List;)#240
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#241
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,23)#242
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(260)#243
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,23)#260
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#261
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#262
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,244)#263
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,23)#244
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#245
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/ValueBox;)#246
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,24)#247
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#248
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,24)#249
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,contains,(Ljava/lang/Object;)Z)#250
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#251
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,260)#252
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(276)#115
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/util/HashMap;,0)#280
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#281
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#282
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Body;,getLocalCount,()I)#283
soot.Body.getLocalCount()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.Body.getLocalCount()I#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/Body;,localChain)#1
soot.Body.getLocalCount()I#Invoke(INTERFACE,Lsoot/util/Chain;,size,()I)#2
soot.Body.getLocalCount()I#Return(I)#3
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,2)#284
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#BinaryOp(I,mul)#285
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,1)#286
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#BinaryOp(I,add)#287
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(F,0.7)#288
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(IF)V)#289
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,7)#290
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#291
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#292
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,8)#293
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(375)#294
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#375
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#376
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#377
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,295)#378
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#295
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#296
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Ljava/util/List;)#297
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,9)#298
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#299
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#300
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#301
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/ValueBox;)#302
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,10)#303
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#304
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#305
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/Local;)#306
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,11)#307
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#308
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#309
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#310
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#311
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,322)#312
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#313
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#314
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/lang/Integer;,0)#315
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#316
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,1)#317
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/lang/Integer;,<init>,(I)V)#318
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#319
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Pop(1)#320
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(375)#321
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#379
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#380
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#381
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,386)#382
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Return(V)#386
soot.BodyTransformer.transform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Return(V)#11
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#30
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#31
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Constant(I,0)#32
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#ConditionalBranch(I,eq,37)#33
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#37
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"jb.a")#38
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/PackManager;,getTransform,(Ljava/lang/String;)Lsoot/Transform;)#39
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#40
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Transform;,apply,(Lsoot/Body;)V)#41
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:true only-stack-locals:true ")#19
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#20
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/jimple/StmtBody;)#1
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,4)#2
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#3
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"only-stack-locals")#4
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/PhaseOptions;,getBoolean,(Ljava/util/Map;Ljava/lang/String;)Z)#5
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(I,5)#6
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,1)#7
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(I,6)#8
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#9
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#10
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#11
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,16)#12
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#16
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(I,7)#17
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/util/HashMap;,0)#18
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#19
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#20
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/jimple/StmtBody;,getUnits,()Lsoot/PatchingChain;)#21
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/PatchingChain;,size,()I)#22
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,2)#23
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#BinaryOp(I,mul)#24
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,1)#25
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#BinaryOp(I,add)#26
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(F,0.7)#27
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(IF)V)#28
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,8)#29
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Lsoot/jimple/toolkits/base/Zonation;,0)#30
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#31
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#32
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Lsoot/jimple/toolkits/base/Zonation;,<init>,(Lsoot/jimple/StmtBody;)V)#33
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Invoke(VIRTUAL,Lsoot/jimple/StmtBody;,getUnits,()Lsoot/PatchingChain;)#3
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalStore(Ljava/lang/Object;,2)#4
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#New(Ljava/util/HashMap;,0)#5
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Dup(1,0)#6
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#7
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalStore(Ljava/lang/Object;,3)#8
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalLoad(Ljava/lang/Object;,2)#9
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#10
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalStore(Ljava/lang/Object;,4)#11
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Goto(24)#12
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalLoad(Ljava/lang/Object;,4)#24
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#25
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Constant(I,0)#26
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#ConditionalBranch(I,ne,13)#27
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalLoad(Ljava/lang/Object;,4)#13
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#14
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#CheckCast(Lsoot/Unit;)#15
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalStore(Ljava/lang/Object;,5)#16
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalLoad(Ljava/lang/Object;,3)#17
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalLoad(Ljava/lang/Object;,5)#18
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#New(Ljava/util/ArrayList;,0)#19
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Dup(1,0)#20
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#21
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#22
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Pop(1)#23
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalLoad(Ljava/lang/Object;,1)#28
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Invoke(VIRTUAL,Lsoot/jimple/StmtBody;,getTraps,()Lsoot/util/Chain;)#29
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#30
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalStore(Ljava/lang/Object;,4)#31
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Goto(57)#32
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalLoad(Ljava/lang/Object;,4)#57
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#58
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Constant(I,0)#59
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#ConditionalBranch(I,ne,33)#60
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#New(Ljava/util/HashMap;,0)#61
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Dup(1,0)#62
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Constant(I,10)#63
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Constant(F,0.7)#64
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(IF)V)#65
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalStore(Ljava/lang/Object;,4)#66
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#New(Ljava/util/ArrayList;,0)#67
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Dup(1,0)#68
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#69
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalStore(Ljava/lang/Object;,5)#70
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalLoad(Ljava/lang/Object;,0)#71
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Constant(I,0)#72
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Put(I,NONSTATIC,Lsoot/jimple/toolkits/base/Zonation;,zoneCount)#73
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalLoad(Ljava/lang/Object;,0)#74
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#New(Ljava/util/HashMap;,0)#75
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Dup(1,0)#76
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalLoad(Ljava/lang/Object;,2)#77
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Invoke(INTERFACE,Lsoot/util/Chain;,size,()I)#78
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Constant(I,2)#79
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#BinaryOp(I,mul)#80
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Constant(I,1)#81
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#BinaryOp(I,add)#82
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Constant(F,0.7)#83
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(IF)V)#84
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/jimple/toolkits/base/Zonation;,unitToZone)#85
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#New(Lsoot/jimple/toolkits/base/Zone;,0)#86
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Dup(1,0)#87
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Constant(Ljava/lang/String;,"0")#88
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Invoke(SPECIAL,Lsoot/jimple/toolkits/base/Zone;,<init>,(Ljava/lang/String;)V)#89
soot.jimple.toolkits.base.Zone.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.base.Zone.<init>(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.jimple.toolkits.base.Zone.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.toolkits.base.Zone.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.jimple.toolkits.base.Zone.<init>(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/jimple/toolkits/base/Zone;,name)#4
soot.jimple.toolkits.base.Zone.<init>(Ljava/lang/String;)V#Return(V)#5
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalStore(Ljava/lang/Object;,6)#90
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalLoad(Ljava/lang/Object;,4)#91
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#New(Ljava/util/ArrayList;,0)#92
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Dup(1,0)#93
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#94
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalLoad(Ljava/lang/Object;,6)#95
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#96
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Pop(1)#97
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalLoad(Ljava/lang/Object;,2)#98
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#99
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalStore(Ljava/lang/Object;,7)#100
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Goto(179)#101
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalLoad(Ljava/lang/Object;,7)#179
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#180
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Constant(I,0)#181
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#ConditionalBranch(I,ne,102)#182
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalLoad(Ljava/lang/Object;,7)#102
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#103
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#CheckCast(Lsoot/Unit;)#104
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalStore(Ljava/lang/Object;,8)#105
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalLoad(Ljava/lang/Object;,3)#106
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalLoad(Ljava/lang/Object;,8)#107
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#108
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#CheckCast(Ljava/util/List;)#109
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalStore(Ljava/lang/Object;,9)#110
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalLoad(Ljava/lang/Object;,9)#111
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#112
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Constant(I,0)#113
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#ConditionalBranch(I,eq,173)#114
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalLoad(Ljava/lang/Object;,0)#173
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/jimple/toolkits/base/Zonation;,unitToZone)#174
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalLoad(Ljava/lang/Object;,8)#175
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#LocalLoad(Ljava/lang/Object;,6)#176
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#177
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Pop(1)#178
soot.jimple.toolkits.base.Zonation.<init>(Lsoot/jimple/StmtBody;)V#Return(V)#183
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,9)#34
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#35
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/jimple/StmtBody;,getUnits,()Lsoot/PatchingChain;)#36
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/PatchingChain;,iterator,()Ljava/util/Iterator;)#37
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,10)#38
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(84)#39
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#84
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#85
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#86
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,40)#87
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#40
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#41
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/Unit;)#42
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,11)#43
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#44
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#45
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/jimple/toolkits/base/Zonation;,getZoneOf,(Lsoot/Unit;)Lsoot/jimple/toolkits/base/Zone;)#46
soot.jimple.toolkits.base.Zonation.getZoneOf(Lsoot/Unit;)Lsoot/jimple/toolkits/base/Zone;#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.base.Zonation.getZoneOf(Lsoot/Unit;)Lsoot/jimple/toolkits/base/Zone;#Get(Ljava/util/Map;,NONSTATIC,Lsoot/jimple/toolkits/base/Zonation;,unitToZone)#1
soot.jimple.toolkits.base.Zonation.getZoneOf(Lsoot/Unit;)Lsoot/jimple/toolkits/base/Zone;#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.toolkits.base.Zonation.getZoneOf(Lsoot/Unit;)Lsoot/jimple/toolkits/base/Zone;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
soot.jimple.toolkits.base.Zonation.getZoneOf(Lsoot/Unit;)Lsoot/jimple/toolkits/base/Zone;#CheckCast(Lsoot/jimple/toolkits/base/Zone;)#4
soot.jimple.toolkits.base.Zonation.getZoneOf(Lsoot/Unit;)Lsoot/jimple/toolkits/base/Zone;#LocalStore(Ljava/lang/Object;,2)#5
soot.jimple.toolkits.base.Zonation.getZoneOf(Lsoot/Unit;)Lsoot/jimple/toolkits/base/Zone;#LocalLoad(Ljava/lang/Object;,2)#6
soot.jimple.toolkits.base.Zonation.getZoneOf(Lsoot/Unit;)Lsoot/jimple/toolkits/base/Zone;#Constant(L;,null)#7
soot.jimple.toolkits.base.Zonation.getZoneOf(Lsoot/Unit;)Lsoot/jimple/toolkits/base/Zone;#ConditionalBranch(Ljava/lang/Object;,ne,14)#8
soot.jimple.toolkits.base.Zonation.getZoneOf(Lsoot/Unit;)Lsoot/jimple/toolkits/base/Zone;#LocalLoad(Ljava/lang/Object;,2)#14
soot.jimple.toolkits.base.Zonation.getZoneOf(Lsoot/Unit;)Lsoot/jimple/toolkits/base/Zone;#Return(Ljava/lang/Object;)#15
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,12)#47
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#48
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Unit;,getUseBoxes,()Ljava/util/List;)#49
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#50
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,13)#51
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(62)#52
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,13)#62
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#63
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#64
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,53)#65
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,13)#53
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#54
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/ValueBox;)#55
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,14)#56
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#57
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,14)#58
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#59
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#60
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Pop(1)#61
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#66
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Unit;,getDefBoxes,()Ljava/util/List;)#67
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#68
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,13)#69
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(80)#70
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,13)#80
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#81
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#82
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,71)#83
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,13)#71
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#72
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/ValueBox;)#73
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,14)#74
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#75
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,14)#76
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#77
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#78
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Pop(1)#79
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#88
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/Options;,verbose,()Z)#89
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#90
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,110)#91
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#110
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#111
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(I,5)#112
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/jimple/toolkits/base/Aggregator;,internalAggregate,(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z)#113
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#0
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(I,7)#1
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(VIRTUAL,Lsoot/jimple/StmtBody;,getUnits,()Lsoot/PatchingChain;)#3
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(Ljava/lang/Object;,8)#4
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#New(Lsoot/toolkits/graph/ExceptionalUnitGraph;,0)#5
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Dup(1,0)#6
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,0)#7
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(SPECIAL,Lsoot/toolkits/graph/ExceptionalUnitGraph;,<init>,(Lsoot/Body;)V)#8
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(Ljava/lang/Object;,6)#9
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#New(Lsoot/toolkits/scalar/SmartLocalDefs;,0)#10
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Dup(1,0)#11
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,6)#12
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#New(Lsoot/toolkits/scalar/SimpleLiveLocals;,0)#13
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Dup(1,0)#14
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,6)#15
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(SPECIAL,Lsoot/toolkits/scalar/SimpleLiveLocals;,<init>,(Lsoot/toolkits/graph/UnitGraph;)V)#16
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(SPECIAL,Lsoot/toolkits/scalar/SmartLocalDefs;,<init>,(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V)#17
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(Ljava/lang/Object;,5)#18
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#New(Lsoot/toolkits/scalar/SimpleLocalUses;,0)#19
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Dup(1,0)#20
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,6)#21
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,5)#22
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(SPECIAL,Lsoot/toolkits/scalar/SimpleLocalUses;,<init>,(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LocalDefs;)V)#23
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(Ljava/lang/Object;,4)#24
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#New(Lsoot/toolkits/graph/PseudoTopologicalOrderer;,0)#25
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Dup(1,0)#26
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(SPECIAL,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,<init>,()V)#27
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,6)#28
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#29
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(VIRTUAL,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,newList,(Lsoot/toolkits/graph/DirectedGraph;Z)Ljava/util/List;)#30
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#31
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(Ljava/lang/Object;,3)#32
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Goto(378)#33
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,3)#378
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#379
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#380
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(I,ne,34)#381
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,3)#34
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#35
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#CheckCast(Lsoot/jimple/Stmt;)#36
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(Ljava/lang/Object;,9)#37
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,9)#38
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Instanceof(Lsoot/jimple/AssignStmt;)#39
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#40
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(I,ne,43)#41
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Goto(378)#42
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,9)#43
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#CheckCast(Lsoot/jimple/AssignStmt;)#44
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Lsoot/jimple/AssignStmt;,getLeftOp,()Lsoot/Value;)#45
soot.jimple.internal.AbstractDefinitionStmt.getLeftOp()Lsoot/Value;#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.AbstractDefinitionStmt.getLeftOp()Lsoot/Value;#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/AbstractDefinitionStmt;,leftBox)#1
soot.jimple.internal.AbstractDefinitionStmt.getLeftOp()Lsoot/Value;#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#2
soot.jimple.internal.AbstractDefinitionStmt.getLeftOp()Lsoot/Value;#Return(Ljava/lang/Object;)#3
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(Ljava/lang/Object;,10)#46
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,10)#47
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Instanceof(Lsoot/Local;)#48
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#49
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(I,ne,52)#50
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(I,2)#52
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#53
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(I,eq,63)#54
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,10)#55
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#CheckCast(Lsoot/Local;)#56
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Lsoot/Local;,getName,()Ljava/lang/String;)#57
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(Ljava/lang/String;,"$")#58
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(VIRTUAL,Ljava/lang/String;,startsWith,(Ljava/lang/String;)Z)#59
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#60
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(I,ne,63)#61
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,4)#63
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,9)#64
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Lsoot/toolkits/scalar/LocalUses;,getUsesOf,(Lsoot/Unit;)Ljava/util/List;)#65
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(Ljava/lang/Object;,11)#66
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,11)#67
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Ljava/util/List;,size,()I)#68
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,1)#69
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(I,eq,72)#70
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,11)#72
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#73
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#74
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#CheckCast(Lsoot/toolkits/scalar/UnitValueBoxPair;)#75
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(Ljava/lang/Object;,12)#76
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,12)#77
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Get(Lsoot/Unit;,NONSTATIC,Lsoot/toolkits/scalar/UnitValueBoxPair;,unit)#78
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(Ljava/lang/Object;,13)#79
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,12)#80
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/toolkits/scalar/UnitValueBoxPair;,valueBox)#81
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(Ljava/lang/Object;,14)#82
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,5)#83
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,10)#84
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#CheckCast(Lsoot/Local;)#85
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,13)#86
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Lsoot/toolkits/scalar/LocalDefs;,getDefsOfAt,(Lsoot/Local;Lsoot/Unit;)Ljava/util/List;)#87
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(Ljava/lang/Object;,15)#88
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,15)#89
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Ljava/util/List;,size,()I)#90
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,1)#91
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(I,eq,94)#92
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,1)#94
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,9)#95
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#CheckCast(Lsoot/jimple/AssignStmt;)#96
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Lsoot/jimple/AssignStmt;,getRightOpBox,()Lsoot/ValueBox;)#97
soot.jimple.internal.AbstractDefinitionStmt.getRightOpBox()Lsoot/ValueBox;#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.AbstractDefinitionStmt.getRightOpBox()Lsoot/ValueBox;#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/AbstractDefinitionStmt;,rightBox)#1
soot.jimple.internal.AbstractDefinitionStmt.getRightOpBox()Lsoot/ValueBox;#Return(Ljava/lang/Object;)#2
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#98
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,1)#99
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,12)#100
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/toolkits/scalar/UnitValueBoxPair;,valueBox)#101
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#102
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(Ljava/lang/Object;,eq,105)#103
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#105
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(I,16)#106
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#107
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(I,17)#108
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#109
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(I,18)#110
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#111
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(I,19)#112
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#New(Ljava/util/ArrayList;,0)#113
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Dup(1,0)#114
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#115
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(Ljava/lang/Object;,20)#116
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#New(Ljava/util/LinkedList;,0)#117
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Dup(1,0)#118
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#119
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(Ljava/lang/Object;,21)#120
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,9)#121
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Lsoot/jimple/Stmt;,getUseBoxes,()Ljava/util/List;)#122
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#123
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(Ljava/lang/Object;,22)#124
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Goto(164)#125
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,22)#164
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#165
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#166
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(I,ne,126)#167
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,22)#126
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#127
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#CheckCast(Lsoot/ValueBox;)#128
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#129
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(Ljava/lang/Object;,23)#130
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,23)#131
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Instanceof(Lsoot/Local;)#132
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#133
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(I,eq,140)#134
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,21)#135
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,23)#136
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(VIRTUAL,Ljava/util/LinkedList;,add,(Ljava/lang/Object;)Z)#137
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Pop(1)#138
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Goto(164)#139
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,6)#168
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,9)#169
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,13)#170
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(VIRTUAL,Lsoot/toolkits/graph/ExceptionalUnitGraph;,getExtendedBasicBlockPathBetween,(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;)#171
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,3)#1
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#2
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#3
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Invoke(VIRTUAL,Lsoot/toolkits/graph/UnitGraph;,getPredsOf,(Lsoot/Unit;)Ljava/util/List;)#4
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,size,()I)#5
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Constant(I,1)#6
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#ConditionalBranch(I,le,10)#7
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#New(Ljava/util/LinkedList;,0)#10
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Dup(1,0)#11
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#12
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,4)#13
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#New(Ljava/util/LinkedList;,0)#14
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Dup(1,0)#15
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#16
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,5)#17
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,4)#18
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#19
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/util/LinkedList;,add,(Ljava/lang/Object;)Z)#20
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Pop(1)#21
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,5)#22
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#New(Ljava/lang/Integer;,0)#23
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Dup(1,0)#24
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Constant(I,0)#25
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Invoke(SPECIAL,Ljava/lang/Integer;,<init>,(I)V)#26
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/util/LinkedList;,add,(Ljava/lang/Object;)Z)#27
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Pop(1)#28
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#29
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,4)#30
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Constant(I,0)#31
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/util/LinkedList;,get,(I)Ljava/lang/Object;)#32
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#CheckCast(Lsoot/Unit;)#33
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Invoke(VIRTUAL,Lsoot/toolkits/graph/UnitGraph;,getSuccsOf,(Lsoot/Unit;)Ljava/util/List;)#34
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,size,()I)#35
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalStore(I,6)#36
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Constant(I,0)#37
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalStore(I,7)#38
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Goto(132)#39
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,5)#132
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Constant(I,0)#133
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/util/LinkedList;,get,(I)Ljava/lang/Object;)#134
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#CheckCast(Ljava/lang/Integer;)#135
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#136
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalLoad(I,6)#137
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#ConditionalBranch(I,ne,40)#138
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,5)#40
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalLoad(I,7)#41
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/util/LinkedList;,get,(I)Ljava/lang/Object;)#42
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#CheckCast(Ljava/lang/Integer;)#43
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#44
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalStore(I,8)#45
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#46
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,4)#47
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalLoad(I,7)#48
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/util/LinkedList;,get,(I)Ljava/lang/Object;)#49
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#CheckCast(Lsoot/Unit;)#50
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Invoke(VIRTUAL,Lsoot/toolkits/graph/UnitGraph;,getSuccsOf,(Lsoot/Unit;)Ljava/util/List;)#51
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,9)#52
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalLoad(I,8)#53
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,9)#54
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,size,()I)#55
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#ConditionalBranch(I,lt,86)#56
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,9)#86
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalLoad(I,8)#87
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#88
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#CheckCast(Lsoot/Unit;)#89
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,10)#90
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,10)#91
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#92
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#ConditionalBranch(Ljava/lang/Object;,ne,100)#93
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,4)#94
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#95
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/util/LinkedList;,add,(Ljava/lang/Object;)Z)#96
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Pop(1)#97
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,4)#98
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Return(Ljava/lang/Object;)#99
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(Ljava/lang/Object;,22)#172
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,22)#173
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(L;,null)#174
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(Ljava/lang/Object;,ne,177)#175
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,22)#177
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#178
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(Ljava/lang/Object;,23)#179
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,23)#180
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#181
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#182
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(I,eq,336)#183
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,23)#184
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#185
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Pop(1)#186
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Goto(336)#187
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,23)#336
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#337
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#338
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(I,eq,343)#339
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(I,16)#340
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#341
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(I,eq,188)#342
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,23)#188
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#189
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#CheckCast(Lsoot/jimple/Stmt;)#190
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(Ljava/lang/Object;,24)#191
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,24)#192
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,13)#193
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(Ljava/lang/Object;,eq,286)#194
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(I,17)#286
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#287
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(I,ne,295)#288
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(I,18)#289
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#290
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(I,ne,295)#291
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(I,19)#292
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#293
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(I,eq,336)#294
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(I,16)#343
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#344
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(I,eq,347)#345
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,9)#347
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#CheckCast(Lsoot/jimple/AssignStmt;)#348
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Lsoot/jimple/AssignStmt;,getRightOp,()Lsoot/Value;)#349
soot.jimple.internal.AbstractDefinitionStmt.getRightOp()Lsoot/Value;#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.AbstractDefinitionStmt.getRightOp()Lsoot/Value;#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/AbstractDefinitionStmt;,rightBox)#1
soot.jimple.internal.AbstractDefinitionStmt.getRightOp()Lsoot/Value;#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#2
soot.jimple.internal.AbstractDefinitionStmt.getRightOp()Lsoot/Value;#Return(Ljava/lang/Object;)#3
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(Ljava/lang/Object;,24)#350
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,12)#351
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/toolkits/scalar/UnitValueBoxPair;,valueBox)#352
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,24)#353
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Lsoot/ValueBox;,canContainValue,(Lsoot/Value;)Z)#354
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#355
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(I,eq,378)#356
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,12)#357
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Get(Lsoot/Unit;,NONSTATIC,Lsoot/toolkits/scalar/UnitValueBoxPair;,unit)#358
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(STATIC,Lsoot/jimple/toolkits/base/Aggregator;,isSimpleCopy,(Lsoot/Unit;)Z)#359
soot.jimple.toolkits.base.Aggregator.isSimpleCopy(Lsoot/Unit;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.base.Aggregator.isSimpleCopy(Lsoot/Unit;)Z#Instanceof(Lsoot/jimple/DefinitionStmt;)#1
soot.jimple.toolkits.base.Aggregator.isSimpleCopy(Lsoot/Unit;)Z#Constant(I,0)#2
soot.jimple.toolkits.base.Aggregator.isSimpleCopy(Lsoot/Unit;)Z#ConditionalBranch(I,ne,6)#3
soot.jimple.toolkits.base.Aggregator.isSimpleCopy(Lsoot/Unit;)Z#Constant(I,0)#4
soot.jimple.toolkits.base.Aggregator.isSimpleCopy(Lsoot/Unit;)Z#Return(I)#5
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(I,25)#360
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,12)#361
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/toolkits/scalar/UnitValueBoxPair;,valueBox)#362
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,24)#363
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Lsoot/ValueBox;,setValue,(Lsoot/Value;)V)#364
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,8)#365
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,9)#366
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Lsoot/util/Chain;,remove,(Ljava/lang/Object;)Z)#367
soot.PatchingChain.remove(Ljava/lang/Object;)Z#Constant(I,0)#0
soot.PatchingChain.remove(Ljava/lang/Object;)Z#LocalStore(I,2)#1
soot.PatchingChain.remove(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#2
soot.PatchingChain.remove(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#3
soot.PatchingChain.remove(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Lsoot/PatchingChain;,contains,(Ljava/lang/Object;)Z)#4
soot.PatchingChain.contains(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.PatchingChain.contains(Ljava/lang/Object;)Z#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/PatchingChain;,innerChain)#1
soot.PatchingChain.contains(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#2
soot.PatchingChain.contains(Ljava/lang/Object;)Z#Invoke(INTERFACE,Lsoot/util/Chain;,contains,(Ljava/lang/Object;)Z)#3
soot.PatchingChain.contains(Ljava/lang/Object;)Z#Return(I)#4
soot.PatchingChain.remove(Ljava/lang/Object;)Z#Constant(I,0)#5
soot.PatchingChain.remove(Ljava/lang/Object;)Z#ConditionalBranch(I,eq,29)#6
soot.PatchingChain.remove(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#7
soot.PatchingChain.remove(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#8
soot.PatchingChain.remove(Ljava/lang/Object;)Z#CheckCast(Lsoot/Unit;)#9
soot.PatchingChain.remove(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Lsoot/PatchingChain;,getSuccOf,(Lsoot/Unit;)Lsoot/Unit;)#10
soot.PatchingChain.remove(Ljava/lang/Object;)Z#Dup(1,0)#11
soot.PatchingChain.remove(Ljava/lang/Object;)Z#LocalStore(Ljava/lang/Object;,3)#12
soot.PatchingChain.remove(Ljava/lang/Object;)Z#Constant(L;,null)#13
soot.PatchingChain.remove(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,20)#14
soot.PatchingChain.remove(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#20
soot.PatchingChain.remove(Ljava/lang/Object;)Z#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/PatchingChain;,innerChain)#21
soot.PatchingChain.remove(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#22
soot.PatchingChain.remove(Ljava/lang/Object;)Z#Invoke(INTERFACE,Lsoot/util/Chain;,remove,(Ljava/lang/Object;)Z)#23
soot.PatchingChain.remove(Ljava/lang/Object;)Z#LocalStore(I,2)#24
soot.PatchingChain.remove(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#25
soot.PatchingChain.remove(Ljava/lang/Object;)Z#CheckCast(Lsoot/Unit;)#26
soot.PatchingChain.remove(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,3)#27
soot.PatchingChain.remove(Ljava/lang/Object;)Z#Invoke(INTERFACE,Lsoot/Unit;,redirectJumpsToThisTo,(Lsoot/Unit;)V)#28
soot.AbstractUnit.redirectJumpsToThisTo(Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.AbstractUnit.redirectJumpsToThisTo(Lsoot/Unit;)V#Invoke(VIRTUAL,Lsoot/AbstractUnit;,getBoxesPointingToThis,()Ljava/util/List;)#1
soot.AbstractUnit.getBoxesPointingToThis()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.AbstractUnit.getBoxesPointingToThis()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lsoot/AbstractUnit;,boxesPointingToThis)#1
soot.AbstractUnit.getBoxesPointingToThis()Ljava/util/List;#Constant(L;,null)#2
soot.AbstractUnit.getBoxesPointingToThis()Ljava/util/List;#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
soot.AbstractUnit.getBoxesPointingToThis()Ljava/util/List;#Get(Ljava/util/List;,STATIC,Lsoot/AbstractUnit;,emptyList)#4
soot.AbstractUnit.getBoxesPointingToThis()Ljava/util/List;#Return(Ljava/lang/Object;)#5
soot.AbstractUnit.redirectJumpsToThisTo(Lsoot/Unit;)V#LocalStore(Ljava/lang/Object;,2)#2
soot.AbstractUnit.redirectJumpsToThisTo(Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,2)#3
soot.AbstractUnit.redirectJumpsToThisTo(Lsoot/Unit;)V#Invoke(INTERFACE,Ljava/util/List;,toArray,()[Ljava/lang/Object;)#4
soot.AbstractUnit.redirectJumpsToThisTo(Lsoot/Unit;)V#LocalStore(Ljava/lang/Object;,3)#5
soot.AbstractUnit.redirectJumpsToThisTo(Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,3)#6
soot.AbstractUnit.redirectJumpsToThisTo(Lsoot/Unit;)V#Dup(1,0)#7
soot.AbstractUnit.redirectJumpsToThisTo(Lsoot/Unit;)V#LocalStore(Ljava/lang/Object;,7)#8
soot.AbstractUnit.redirectJumpsToThisTo(Lsoot/Unit;)V#ArrayLength()#9
soot.AbstractUnit.redirectJumpsToThisTo(Lsoot/Unit;)V#LocalStore(I,6)#10
soot.AbstractUnit.redirectJumpsToThisTo(Lsoot/Unit;)V#Constant(I,0)#11
soot.AbstractUnit.redirectJumpsToThisTo(Lsoot/Unit;)V#LocalStore(I,5)#12
soot.AbstractUnit.redirectJumpsToThisTo(Lsoot/Unit;)V#Goto(41)#13
soot.AbstractUnit.redirectJumpsToThisTo(Lsoot/Unit;)V#LocalLoad(I,5)#41
soot.AbstractUnit.redirectJumpsToThisTo(Lsoot/Unit;)V#LocalLoad(I,6)#42
soot.AbstractUnit.redirectJumpsToThisTo(Lsoot/Unit;)V#ConditionalBranch(I,lt,14)#43
soot.AbstractUnit.redirectJumpsToThisTo(Lsoot/Unit;)V#Return(V)#44
soot.PatchingChain.remove(Ljava/lang/Object;)Z#LocalLoad(I,2)#29
soot.PatchingChain.remove(Ljava/lang/Object;)Z#Return(I)#30
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Pop(1)#368
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,1)#369
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(I,7)#370
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(I,25)#371
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#372
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(I,eq,378)#373
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(I,7)#382
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Return(I)#383
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(I,7)#114
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(I,6)#115
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,1)#116
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#BinaryOp(I,add)#117
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(I,6)#118
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(I,7)#119
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#120
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,88)#121
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#122
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#123
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#124
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,129)#125
soot.jimple.toolkits.base.Aggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Return(V)#129
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#42
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"jb.ule")#43
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/PackManager;,getTransform,(Ljava/lang/String;)Lsoot/Transform;)#44
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#45
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Transform;,apply,(Lsoot/Body;)V)#46
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:true ")#26
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#27
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#0
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/Options;,verbose,()Z)#1
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#2
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,18)#3
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/util/HashSet;,0)#18
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#19
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#20
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,4)#21
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#22
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Body;,getUnits,()Lsoot/PatchingChain;)#23
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/PatchingChain;,iterator,()Ljava/util/Iterator;)#24
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,5)#25
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(85)#26
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#85
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#86
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#87
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,27)#88
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#27
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#28
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/Unit;)#29
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,6)#30
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#31
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Unit;,getUseBoxes,()Ljava/util/List;)#32
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#33
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,7)#34
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(54)#35
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#54
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#55
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#56
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,36)#57
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#36
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#37
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/ValueBox;)#38
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#39
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,8)#40
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#41
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Instanceof(Lsoot/Local;)#42
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#43
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,54)#44
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#58
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Unit;,getDefBoxes,()Ljava/util/List;)#59
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#60
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,7)#61
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(81)#62
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#81
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#82
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#83
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,63)#84
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#63
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#64
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/ValueBox;)#65
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#66
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,8)#67
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#68
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Instanceof(Lsoot/Local;)#69
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#70
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,81)#71
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#72
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#73
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,contains,(Ljava/lang/Object;)Z)#74
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#75
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,81)#76
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#77
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#78
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#79
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Pop(1)#80
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#45
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#46
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,contains,(Ljava/lang/Object;)Z)#47
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#48
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,54)#49
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#89
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Body;,getLocals,()Lsoot/util/Chain;)#90
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#91
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,5)#92
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(105)#93
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#105
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#106
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#107
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,94)#108
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#94
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#95
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/Local;)#96
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,6)#97
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#98
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#99
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,contains,(Ljava/lang/Object;)Z)#100
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#101
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,105)#102
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#103
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,remove,()V)#104
soot.toolkits.scalar.UnusedLocalEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Return(V)#109
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#47
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#48
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Constant(I,0)#49
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#ConditionalBranch(I,eq,54)#50
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#54
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"jb.tr")#55
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/PackManager;,getTransform,(Ljava/lang/String;)Lsoot/Transform;)#56
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#57
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Transform;,apply,(Lsoot/Body;)V)#58
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:true ignore-wrong-staticness:false use-older-type-assigner:false compare-type-assigners:false ")#33
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#34
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(L;,null)#1
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(Ljava/lang/Object;,ne,7)#2
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/util/Date;,0)#7
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#8
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/Date;,<init>,()V)#9
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,4)#10
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#11
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/Options;,verbose,()Z)#12
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#13
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,25)#14
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Lsoot/options/JBTROptions;,0)#25
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#26
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#27
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Lsoot/options/JBTROptions;,<init>,(Ljava/util/Map;)V)#28
soot.options.JBTROptions.<init>(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.JBTROptions.<init>(Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.options.JBTROptions.<init>(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.options.JBTROptions.<init>(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.options.JBTROptions.<init>(Ljava/util/Map;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/options/JBTROptions;,options)#4
soot.options.JBTROptions.<init>(Ljava/util/Map;)V#Return(V)#5
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,5)#29
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#30
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#31
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/JBTROptions;,ignore_wrong_staticness,()Z)#32
soot.options.JBTROptions.ignore_wrong_staticness()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.JBTROptions.ignore_wrong_staticness()Z#Get(Ljava/util/Map;,NONSTATIC,Lsoot/options/JBTROptions;,options)#1
soot.options.JBTROptions.ignore_wrong_staticness()Z#Constant(Ljava/lang/String;,"ignore-wrong-staticness")#2
soot.options.JBTROptions.ignore_wrong_staticness()Z#Invoke(STATIC,Lsoot/PhaseOptions;,getBoolean,(Ljava/util/Map;Ljava/lang/String;)Z)#3
soot.options.JBTROptions.ignore_wrong_staticness()Z#Return(I)#4
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Put(Z,NONSTATIC,Lsoot/jimple/toolkits/typing/TypeAssigner;,ignoreWrongStaticNess)#33
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#34
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/JBTROptions;,compare_type_assigners,()Z)#35
soot.options.JBTROptions.compare_type_assigners()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.JBTROptions.compare_type_assigners()Z#Get(Ljava/util/Map;,NONSTATIC,Lsoot/options/JBTROptions;,options)#1
soot.options.JBTROptions.compare_type_assigners()Z#Constant(Ljava/lang/String;,"compare-type-assigners")#2
soot.options.JBTROptions.compare_type_assigners()Z#Invoke(STATIC,Lsoot/PhaseOptions;,getBoolean,(Ljava/util/Map;Ljava/lang/String;)Z)#3
soot.options.JBTROptions.compare_type_assigners()Z#Return(I)#4
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#36
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,44)#37
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#44
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/JBTROptions;,use_older_type_assigner,()Z)#45
soot.options.JBTROptions.use_older_type_assigner()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.JBTROptions.use_older_type_assigner()Z#Get(Ljava/util/Map;,NONSTATIC,Lsoot/options/JBTROptions;,options)#1
soot.options.JBTROptions.use_older_type_assigner()Z#Constant(Ljava/lang/String;,"use-older-type-assigner")#2
soot.options.JBTROptions.use_older_type_assigner()Z#Invoke(STATIC,Lsoot/PhaseOptions;,getBoolean,(Ljava/util/Map;Ljava/lang/String;)Z)#3
soot.options.JBTROptions.use_older_type_assigner()Z#Return(I)#4
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#46
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,53)#47
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Lsoot/jimple/toolkits/typing/fast/TypeResolver;,0)#53
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#54
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#55
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/jimple/JimpleBody;)#56
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,<init>,(Lsoot/jimple/JimpleBody;)V)#57
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#Put(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,jb)#4
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#New(Ljava/util/LinkedList;,0)#6
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#Dup(1,0)#7
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#8
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,assignments)#9
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#LocalLoad(Ljava/lang/Object;,0)#10
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#New(Ljava/util/HashMap;,0)#11
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#Dup(1,0)#12
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#13
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#Put(Ljava/util/HashMap;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,depends)#14
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#LocalLoad(Ljava/lang/Object;,0)#15
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#Get(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,jb)#16
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#Invoke(VIRTUAL,Lsoot/jimple/JimpleBody;,getLocals,()Lsoot/util/Chain;)#17
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#18
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#LocalStore(Ljava/lang/Object;,3)#19
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#Goto(28)#20
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#LocalLoad(Ljava/lang/Object;,3)#28
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#29
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#Constant(I,0)#30
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#ConditionalBranch(I,ne,21)#31
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#LocalLoad(Ljava/lang/Object;,3)#21
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#22
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#CheckCast(Lsoot/Local;)#23
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#LocalStore(Ljava/lang/Object;,2)#24
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#LocalLoad(Ljava/lang/Object;,0)#25
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#LocalLoad(Ljava/lang/Object;,2)#26
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#Invoke(SPECIAL,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,addLocal,(Lsoot/Local;)V)#27
soot.jimple.toolkits.typing.fast.TypeResolver.addLocal(Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.TypeResolver.addLocal(Lsoot/Local;)V#Get(Ljava/util/HashMap;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,depends)#1
soot.jimple.toolkits.typing.fast.TypeResolver.addLocal(Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.toolkits.typing.fast.TypeResolver.addLocal(Lsoot/Local;)V#New(Ljava/util/LinkedList;,0)#3
soot.jimple.toolkits.typing.fast.TypeResolver.addLocal(Lsoot/Local;)V#Dup(1,0)#4
soot.jimple.toolkits.typing.fast.TypeResolver.addLocal(Lsoot/Local;)V#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#5
soot.jimple.toolkits.typing.fast.TypeResolver.addLocal(Lsoot/Local;)V#Invoke(VIRTUAL,Ljava/util/HashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#6
soot.jimple.toolkits.typing.fast.TypeResolver.addLocal(Lsoot/Local;)V#Pop(1)#7
soot.jimple.toolkits.typing.fast.TypeResolver.addLocal(Lsoot/Local;)V#Return(V)#8
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#LocalLoad(Ljava/lang/Object;,0)#32
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#Invoke(SPECIAL,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,initAssignments,()V)#33
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignments()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignments()V#Get(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,jb)#1
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignments()V#Invoke(VIRTUAL,Lsoot/jimple/JimpleBody;,getUnits,()Lsoot/PatchingChain;)#2
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignments()V#Invoke(VIRTUAL,Lsoot/PatchingChain;,iterator,()Ljava/util/Iterator;)#3
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignments()V#LocalStore(Ljava/lang/Object;,2)#4
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignments()V#Goto(18)#5
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignments()V#LocalLoad(Ljava/lang/Object;,2)#18
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignments()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#19
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignments()V#Constant(I,0)#20
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignments()V#ConditionalBranch(I,ne,6)#21
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignments()V#LocalLoad(Ljava/lang/Object;,2)#6
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignments()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#7
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignments()V#CheckCast(Lsoot/Unit;)#8
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignments()V#LocalStore(Ljava/lang/Object;,1)#9
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignments()V#LocalLoad(Ljava/lang/Object;,1)#10
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignments()V#Instanceof(Lsoot/jimple/DefinitionStmt;)#11
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignments()V#Constant(I,0)#12
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignments()V#ConditionalBranch(I,eq,18)#13
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignments()V#LocalLoad(Ljava/lang/Object;,0)#14
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignments()V#LocalLoad(Ljava/lang/Object;,1)#15
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignments()V#CheckCast(Lsoot/jimple/DefinitionStmt;)#16
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignments()V#Invoke(SPECIAL,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,initAssignment,(Lsoot/jimple/DefinitionStmt;)V)#17
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#Invoke(INTERFACE,Lsoot/jimple/DefinitionStmt;,getLeftOp,()Lsoot/Value;)#1
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#LocalStore(Ljava/lang/Object;,2)#2
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#Invoke(INTERFACE,Lsoot/jimple/DefinitionStmt;,getRightOp,()Lsoot/Value;)#4
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#LocalStore(Ljava/lang/Object;,3)#5
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#LocalLoad(Ljava/lang/Object;,2)#6
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#Instanceof(Lsoot/Local;)#7
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#Constant(I,0)#8
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#ConditionalBranch(I,ne,14)#9
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#LocalLoad(Ljava/lang/Object;,0)#14
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#Get(Ljava/util/List;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,assignments)#15
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#LocalLoad(Ljava/lang/Object;,1)#16
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#17
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#Pop(1)#18
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#LocalLoad(Ljava/lang/Object;,3)#19
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#Instanceof(Lsoot/Local;)#20
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#Constant(I,0)#21
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#ConditionalBranch(I,eq,29)#22
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#LocalLoad(Ljava/lang/Object;,3)#29
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#Instanceof(Lsoot/jimple/BinopExpr;)#30
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#Constant(I,0)#31
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#ConditionalBranch(I,eq,61)#32
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#LocalLoad(Ljava/lang/Object;,3)#61
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#Instanceof(Lsoot/jimple/NegExpr;)#62
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#Constant(I,0)#63
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#ConditionalBranch(I,eq,79)#64
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#LocalLoad(Ljava/lang/Object;,3)#79
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#Instanceof(Lsoot/jimple/ArrayRef;)#80
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#Constant(I,0)#81
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#ConditionalBranch(I,eq,90)#82
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#Return(V)#90
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignments()V#Return(V)#22
soot.jimple.toolkits.typing.fast.TypeResolver.<init>(Lsoot/jimple/JimpleBody;)V#Return(V)#34
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,inferTypes,()V)#58
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#New(Lsoot/jimple/toolkits/typing/fast/AugEvalFunction;,0)#0
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Dup(1,0)#1
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Get(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,jb)#3
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Invoke(SPECIAL,Lsoot/jimple/toolkits/typing/fast/AugEvalFunction;,<init>,(Lsoot/jimple/JimpleBody;)V)#4
soot.jimple.toolkits.typing.fast.AugEvalFunction.<init>(Lsoot/jimple/JimpleBody;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.AugEvalFunction.<init>(Lsoot/jimple/JimpleBody;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.jimple.toolkits.typing.fast.AugEvalFunction.<init>(Lsoot/jimple/JimpleBody;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.toolkits.typing.fast.AugEvalFunction.<init>(Lsoot/jimple/JimpleBody;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.jimple.toolkits.typing.fast.AugEvalFunction.<init>(Lsoot/jimple/JimpleBody;)V#Put(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/AugEvalFunction;,jb)#4
soot.jimple.toolkits.typing.fast.AugEvalFunction.<init>(Lsoot/jimple/JimpleBody;)V#Return(V)#5
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalStore(Ljava/lang/Object;,1)#5
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#New(Lsoot/jimple/toolkits/typing/fast/AugHierarchy;,0)#6
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Dup(1,0)#7
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Invoke(SPECIAL,Lsoot/jimple/toolkits/typing/fast/AugHierarchy;,<init>,()V)#8
soot.jimple.toolkits.typing.fast.AugHierarchy.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.AugHierarchy.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.jimple.toolkits.typing.fast.AugHierarchy.<init>()V#Return(V)#2
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalStore(Ljava/lang/Object;,2)#9
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#New(Lsoot/jimple/toolkits/typing/fast/BytecodeHierarchy;,0)#10
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Dup(1,0)#11
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Invoke(SPECIAL,Lsoot/jimple/toolkits/typing/fast/BytecodeHierarchy;,<init>,()V)#12
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.<init>()V#Return(V)#2
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalStore(Ljava/lang/Object;,3)#13
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalLoad(Ljava/lang/Object;,0)#14
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#New(Lsoot/jimple/toolkits/typing/fast/Typing;,0)#15
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Dup(1,0)#16
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalLoad(Ljava/lang/Object;,0)#17
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Get(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,jb)#18
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Invoke(VIRTUAL,Lsoot/jimple/JimpleBody;,getLocals,()Lsoot/util/Chain;)#19
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Invoke(SPECIAL,Lsoot/jimple/toolkits/typing/fast/Typing;,<init>,(Ljava/util/Collection;)V)#20
soot.jimple.toolkits.typing.fast.Typing.<init>(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.Typing.<init>(Ljava/util/Collection;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.jimple.toolkits.typing.fast.Typing.<init>(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.toolkits.typing.fast.Typing.<init>(Ljava/util/Collection;)V#New(Ljava/util/HashMap;,0)#3
soot.jimple.toolkits.typing.fast.Typing.<init>(Ljava/util/Collection;)V#Dup(1,0)#4
soot.jimple.toolkits.typing.fast.Typing.<init>(Ljava/util/Collection;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#5
soot.jimple.toolkits.typing.fast.Typing.<init>(Ljava/util/Collection;)V#Put(Ljava/util/HashMap;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/Typing;,map)#6
soot.jimple.toolkits.typing.fast.Typing.<init>(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,1)#7
soot.jimple.toolkits.typing.fast.Typing.<init>(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Collection;,iterator,()Ljava/util/Iterator;)#8
soot.jimple.toolkits.typing.fast.Typing.<init>(Ljava/util/Collection;)V#LocalStore(Ljava/lang/Object;,3)#9
soot.jimple.toolkits.typing.fast.Typing.<init>(Ljava/util/Collection;)V#Goto(21)#10
soot.jimple.toolkits.typing.fast.Typing.<init>(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,3)#21
soot.jimple.toolkits.typing.fast.Typing.<init>(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#22
soot.jimple.toolkits.typing.fast.Typing.<init>(Ljava/util/Collection;)V#Constant(I,0)#23
soot.jimple.toolkits.typing.fast.Typing.<init>(Ljava/util/Collection;)V#ConditionalBranch(I,ne,11)#24
soot.jimple.toolkits.typing.fast.Typing.<init>(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,3)#11
soot.jimple.toolkits.typing.fast.Typing.<init>(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#12
soot.jimple.toolkits.typing.fast.Typing.<init>(Ljava/util/Collection;)V#CheckCast(Lsoot/Local;)#13
soot.jimple.toolkits.typing.fast.Typing.<init>(Ljava/util/Collection;)V#LocalStore(Ljava/lang/Object;,2)#14
soot.jimple.toolkits.typing.fast.Typing.<init>(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,0)#15
soot.jimple.toolkits.typing.fast.Typing.<init>(Ljava/util/Collection;)V#Get(Ljava/util/HashMap;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/Typing;,map)#16
soot.jimple.toolkits.typing.fast.Typing.<init>(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,2)#17
soot.jimple.toolkits.typing.fast.Typing.<init>(Ljava/util/Collection;)V#Invoke(STATIC,Lsoot/jimple/toolkits/typing/fast/BottomType;,v,()Lsoot/jimple/toolkits/typing/fast/BottomType;)#18
soot.jimple.toolkits.typing.fast.BottomType.<clinit>()V#New(Lsoot/jimple/toolkits/typing/fast/BottomType;,0)#0
soot.jimple.toolkits.typing.fast.BottomType.<clinit>()V#Dup(1,0)#1
soot.jimple.toolkits.typing.fast.BottomType.<clinit>()V#Invoke(SPECIAL,Lsoot/jimple/toolkits/typing/fast/BottomType;,<init>,()V)#2
soot.jimple.toolkits.typing.fast.BottomType.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.BottomType.<init>()V#Invoke(SPECIAL,Lsoot/Type;,<init>,()V)#1
soot.jimple.toolkits.typing.fast.BottomType.<init>()V#Return(V)#2
soot.jimple.toolkits.typing.fast.BottomType.<clinit>()V#Put(Lsoot/jimple/toolkits/typing/fast/BottomType;,STATIC,Lsoot/jimple/toolkits/typing/fast/BottomType;,instance)#3
soot.jimple.toolkits.typing.fast.BottomType.<clinit>()V#Return(V)#4
soot.jimple.toolkits.typing.fast.BottomType.v()Lsoot/jimple/toolkits/typing/fast/BottomType;#Get(Lsoot/jimple/toolkits/typing/fast/BottomType;,STATIC,Lsoot/jimple/toolkits/typing/fast/BottomType;,instance)#0
soot.jimple.toolkits.typing.fast.BottomType.v()Lsoot/jimple/toolkits/typing/fast/BottomType;#Return(Ljava/lang/Object;)#1
soot.jimple.toolkits.typing.fast.Typing.<init>(Ljava/util/Collection;)V#Invoke(VIRTUAL,Ljava/util/HashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#19
soot.jimple.toolkits.typing.fast.Typing.<init>(Ljava/util/Collection;)V#Pop(1)#20
soot.jimple.toolkits.typing.fast.Typing.<init>(Ljava/util/Collection;)V#Return(V)#25
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalLoad(Ljava/lang/Object;,1)#21
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalLoad(Ljava/lang/Object;,3)#22
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Invoke(SPECIAL,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,applyAssignmentConstraints,(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;)#23
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#New(Ljava/util/LinkedList;,0)#0
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Dup(1,0)#1
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#2
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalStore(Ljava/lang/Object;,4)#3
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#New(Ljava/util/LinkedList;,0)#4
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Dup(1,0)#5
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#6
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalStore(Ljava/lang/Object;,5)#7
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#New(Ljava/util/HashMap;,0)#8
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Dup(1,0)#9
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#10
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalStore(Ljava/lang/Object;,6)#11
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,4)#12
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,1)#13
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Invoke(VIRTUAL,Ljava/util/LinkedList;,add,(Ljava/lang/Object;)Z)#14
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Pop(1)#15
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#New(Lsoot/jimple/toolkits/typing/fast/QueuedSet;,0)#16
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Dup(1,0)#17
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,0)#18
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Get(Ljava/util/List;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,assignments)#19
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Invoke(SPECIAL,Lsoot/jimple/toolkits/typing/fast/QueuedSet;,<init>,(Ljava/util/List;)V)#20
soot.jimple.toolkits.typing.fast.QueuedSet.<init>(Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.QueuedSet.<init>(Ljava/util/List;)V#Invoke(SPECIAL,Lsoot/jimple/toolkits/typing/fast/QueuedSet;,<init>,()V)#1
soot.jimple.toolkits.typing.fast.QueuedSet.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.QueuedSet.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.jimple.toolkits.typing.fast.QueuedSet.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.toolkits.typing.fast.QueuedSet.<init>()V#New(Ljava/util/HashSet;,0)#3
soot.jimple.toolkits.typing.fast.QueuedSet.<init>()V#Dup(1,0)#4
soot.jimple.toolkits.typing.fast.QueuedSet.<init>()V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#5
soot.jimple.toolkits.typing.fast.QueuedSet.<init>()V#Put(Ljava/util/HashSet;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/QueuedSet;,hs)#6
soot.jimple.toolkits.typing.fast.QueuedSet.<init>()V#LocalLoad(Ljava/lang/Object;,0)#7
soot.jimple.toolkits.typing.fast.QueuedSet.<init>()V#New(Ljava/util/LinkedList;,0)#8
soot.jimple.toolkits.typing.fast.QueuedSet.<init>()V#Dup(1,0)#9
soot.jimple.toolkits.typing.fast.QueuedSet.<init>()V#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#10
soot.jimple.toolkits.typing.fast.QueuedSet.<init>()V#Put(Ljava/util/LinkedList;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/QueuedSet;,ll)#11
soot.jimple.toolkits.typing.fast.QueuedSet.<init>()V#Return(V)#12
soot.jimple.toolkits.typing.fast.QueuedSet.<init>(Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.toolkits.typing.fast.QueuedSet.<init>(Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#3
soot.jimple.toolkits.typing.fast.QueuedSet.<init>(Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,3)#4
soot.jimple.toolkits.typing.fast.QueuedSet.<init>(Ljava/util/List;)V#Goto(19)#5
soot.jimple.toolkits.typing.fast.QueuedSet.<init>(Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#19
soot.jimple.toolkits.typing.fast.QueuedSet.<init>(Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#20
soot.jimple.toolkits.typing.fast.QueuedSet.<init>(Ljava/util/List;)V#Constant(I,0)#21
soot.jimple.toolkits.typing.fast.QueuedSet.<init>(Ljava/util/List;)V#ConditionalBranch(I,ne,6)#22
soot.jimple.toolkits.typing.fast.QueuedSet.<init>(Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#6
soot.jimple.toolkits.typing.fast.QueuedSet.<init>(Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#7
soot.jimple.toolkits.typing.fast.QueuedSet.<init>(Ljava/util/List;)V#CheckCast(Ljava/lang/Object;)#8
soot.jimple.toolkits.typing.fast.QueuedSet.<init>(Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,2)#9
soot.jimple.toolkits.typing.fast.QueuedSet.<init>(Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#10
soot.jimple.toolkits.typing.fast.QueuedSet.<init>(Ljava/util/List;)V#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/QueuedSet;,ll)#11
soot.jimple.toolkits.typing.fast.QueuedSet.<init>(Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#12
soot.jimple.toolkits.typing.fast.QueuedSet.<init>(Ljava/util/List;)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,addLast,(Ljava/lang/Object;)V)#13
soot.jimple.toolkits.typing.fast.QueuedSet.<init>(Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#14
soot.jimple.toolkits.typing.fast.QueuedSet.<init>(Ljava/util/List;)V#Get(Ljava/util/HashSet;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/QueuedSet;,hs)#15
soot.jimple.toolkits.typing.fast.QueuedSet.<init>(Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#16
soot.jimple.toolkits.typing.fast.QueuedSet.<init>(Ljava/util/List;)V#Invoke(VIRTUAL,Ljava/util/HashSet;,add,(Ljava/lang/Object;)Z)#17
soot.jimple.toolkits.typing.fast.QueuedSet.<init>(Ljava/util/List;)V#Pop(1)#18
soot.jimple.toolkits.typing.fast.QueuedSet.<init>(Ljava/util/List;)V#Return(V)#23
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalStore(Ljava/lang/Object;,7)#21
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,6)#22
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,1)#23
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,7)#24
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Invoke(VIRTUAL,Ljava/util/HashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#25
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Pop(1)#26
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Goto(200)#27
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,4)#200
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Invoke(VIRTUAL,Ljava/util/LinkedList;,isEmpty,()Z)#201
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Constant(I,0)#202
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#ConditionalBranch(I,eq,28)#203
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,4)#28
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Invoke(VIRTUAL,Ljava/util/LinkedList;,element,()Ljava/lang/Object;)#29
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#CheckCast(Lsoot/jimple/toolkits/typing/fast/Typing;)#30
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalStore(Ljava/lang/Object;,1)#31
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,6)#32
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,1)#33
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Invoke(VIRTUAL,Ljava/util/HashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#34
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#CheckCast(Lsoot/jimple/toolkits/typing/fast/QueuedSet;)#35
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalStore(Ljava/lang/Object;,7)#36
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,7)#37
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Invoke(VIRTUAL,Lsoot/jimple/toolkits/typing/fast/QueuedSet;,isEmpty,()Z)#38
soot.jimple.toolkits.typing.fast.QueuedSet.isEmpty()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.QueuedSet.isEmpty()Z#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/QueuedSet;,ll)#1
soot.jimple.toolkits.typing.fast.QueuedSet.isEmpty()Z#Invoke(VIRTUAL,Ljava/util/LinkedList;,isEmpty,()Z)#2
soot.jimple.toolkits.typing.fast.QueuedSet.isEmpty()Z#Return(I)#3
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Constant(I,0)#39
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#ConditionalBranch(I,eq,53)#40
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,7)#53
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Invoke(VIRTUAL,Lsoot/jimple/toolkits/typing/fast/QueuedSet;,removeFirst,()Ljava/lang/Object;)#54
soot.jimple.toolkits.typing.fast.QueuedSet.removeFirst()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.QueuedSet.removeFirst()Ljava/lang/Object;#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/QueuedSet;,ll)#1
soot.jimple.toolkits.typing.fast.QueuedSet.removeFirst()Ljava/lang/Object;#Invoke(VIRTUAL,Ljava/util/LinkedList;,removeFirst,()Ljava/lang/Object;)#2
soot.jimple.toolkits.typing.fast.QueuedSet.removeFirst()Ljava/lang/Object;#LocalStore(Ljava/lang/Object;,1)#3
soot.jimple.toolkits.typing.fast.QueuedSet.removeFirst()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#4
soot.jimple.toolkits.typing.fast.QueuedSet.removeFirst()Ljava/lang/Object;#Get(Ljava/util/HashSet;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/QueuedSet;,hs)#5
soot.jimple.toolkits.typing.fast.QueuedSet.removeFirst()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,1)#6
soot.jimple.toolkits.typing.fast.QueuedSet.removeFirst()Ljava/lang/Object;#Invoke(VIRTUAL,Ljava/util/HashSet;,remove,(Ljava/lang/Object;)Z)#7
soot.jimple.toolkits.typing.fast.QueuedSet.removeFirst()Ljava/lang/Object;#Pop(1)#8
soot.jimple.toolkits.typing.fast.QueuedSet.removeFirst()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,1)#9
soot.jimple.toolkits.typing.fast.QueuedSet.removeFirst()Ljava/lang/Object;#Return(Ljava/lang/Object;)#10
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#CheckCast(Lsoot/jimple/DefinitionStmt;)#55
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalStore(Ljava/lang/Object;,8)#56
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,8)#57
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Invoke(INTERFACE,Lsoot/jimple/DefinitionStmt;,getLeftOp,()Lsoot/Value;)#58
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalStore(Ljava/lang/Object;,9)#59
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,8)#60
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Invoke(INTERFACE,Lsoot/jimple/DefinitionStmt;,getRightOp,()Lsoot/Value;)#61
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalStore(Ljava/lang/Object;,10)#62
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,9)#63
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Instanceof(Lsoot/Local;)#64
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Constant(I,0)#65
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#ConditionalBranch(I,eq,71)#66
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,9)#67
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#CheckCast(Lsoot/Local;)#68
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalStore(Ljava/lang/Object;,11)#69
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Goto(76)#70
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,1)#76
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,11)#77
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Invoke(VIRTUAL,Lsoot/jimple/toolkits/typing/fast/Typing;,get,(Lsoot/Local;)Lsoot/Type;)#78
soot.jimple.toolkits.typing.fast.Typing.get(Lsoot/Local;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.Typing.get(Lsoot/Local;)Lsoot/Type;#Get(Ljava/util/HashMap;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/Typing;,map)#1
soot.jimple.toolkits.typing.fast.Typing.get(Lsoot/Local;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.toolkits.typing.fast.Typing.get(Lsoot/Local;)Lsoot/Type;#Invoke(VIRTUAL,Ljava/util/HashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
soot.jimple.toolkits.typing.fast.Typing.get(Lsoot/Local;)Lsoot/Type;#CheckCast(Lsoot/Type;)#4
soot.jimple.toolkits.typing.fast.Typing.get(Lsoot/Local;)Lsoot/Type;#Return(Ljava/lang/Object;)#5
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalStore(Ljava/lang/Object;,12)#79
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Constant(I,0)#80
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalStore(I,13)#81
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,2)#82
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,1)#83
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,10)#84
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,8)#85
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Invoke(INTERFACE,Lsoot/jimple/toolkits/typing/fast/IEvalFunction;,eval,(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;)Ljava/util/Collection;)#86
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;)Ljava/util/Collection;#New(Lsoot/jimple/toolkits/typing/fast/SingletonList;,0)#0
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;)Ljava/util/Collection;#Dup(1,0)#1
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,2)#3
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,3)#4
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,0)#5
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;)Ljava/util/Collection;#Get(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/AugEvalFunction;,jb)#6
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;)Ljava/util/Collection;#Invoke(STATIC,Lsoot/jimple/toolkits/typing/fast/AugEvalFunction;,eval_,(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;)#7
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#0
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Instanceof(Lsoot/jimple/ThisRef;)#1
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Constant(I,0)#2
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#ConditionalBranch(I,eq,8)#3
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#4
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#CheckCast(Lsoot/jimple/ThisRef;)#5
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Invoke(VIRTUAL,Lsoot/jimple/ThisRef;,getType,()Lsoot/Type;)#6
soot.jimple.ThisRef.getType()Lsoot/Type;#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.ThisRef.getType()Lsoot/Type;#Get(Lsoot/RefType;,NONSTATIC,Lsoot/jimple/ThisRef;,thisType)#1
soot.jimple.ThisRef.getType()Lsoot/Type;#Return(Ljava/lang/Object;)#2
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Return(Ljava/lang/Object;)#7
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;)Ljava/util/Collection;#Invoke(SPECIAL,Lsoot/jimple/toolkits/typing/fast/SingletonList;,<init>,(Ljava/lang/Object;)V)#8
soot.jimple.toolkits.typing.fast.SingletonList.<init>(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.SingletonList.<init>(Ljava/lang/Object;)V#Invoke(SPECIAL,Ljava/util/AbstractList;,<init>,()V)#1
soot.jimple.toolkits.typing.fast.SingletonList.<init>(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.toolkits.typing.fast.SingletonList.<init>(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.jimple.toolkits.typing.fast.SingletonList.<init>(Ljava/lang/Object;)V#Put(Ljava/lang/Object;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/SingletonList;,e)#4
soot.jimple.toolkits.typing.fast.SingletonList.<init>(Ljava/lang/Object;)V#Return(V)#5
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;)Ljava/util/Collection;#Return(Ljava/lang/Object;)#9
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalStore(Ljava/lang/Object;,14)#87
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,14)#88
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Invoke(INTERFACE,Ljava/util/Collection;,iterator,()Ljava/util/Iterator;)#89
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalStore(Ljava/lang/Object;,16)#90
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Goto(186)#91
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,16)#186
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#187
soot.jimple.toolkits.typing.fast.SingletonList.size()I#Constant(I,1)#0
soot.jimple.toolkits.typing.fast.SingletonList.size()I#Return(I)#1
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Constant(I,0)#188
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#ConditionalBranch(I,ne,92)#189
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,16)#92
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#93
soot.jimple.toolkits.typing.fast.SingletonList.get(I)Ljava/lang/Object;#LocalLoad(I,1)#0
soot.jimple.toolkits.typing.fast.SingletonList.get(I)Ljava/lang/Object;#Constant(I,0)#1
soot.jimple.toolkits.typing.fast.SingletonList.get(I)Ljava/lang/Object;#ConditionalBranch(I,eq,7)#2
soot.jimple.toolkits.typing.fast.SingletonList.get(I)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#7
soot.jimple.toolkits.typing.fast.SingletonList.get(I)Ljava/lang/Object;#Get(Ljava/lang/Object;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/SingletonList;,e)#8
soot.jimple.toolkits.typing.fast.SingletonList.get(I)Ljava/lang/Object;#Return(Ljava/lang/Object;)#9
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#CheckCast(Lsoot/Type;)#94
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalStore(Ljava/lang/Object;,15)#95
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,9)#96
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Instanceof(Lsoot/jimple/ArrayRef;)#97
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Constant(I,0)#98
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#ConditionalBranch(I,eq,114)#99
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,3)#114
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,12)#115
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,15)#116
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Invoke(INTERFACE,Lsoot/jimple/toolkits/typing/fast/IHierarchy;,lcas,(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;)#117
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.lcas(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,1)#0
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.lcas(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,2)#1
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.lcas(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;#Invoke(STATIC,Lsoot/jimple/toolkits/typing/fast/BytecodeHierarchy;,lcas_,(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;)#2
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.lcas_(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.lcas_(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,1)#1
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.lcas_(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;#Invoke(STATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,typesEqual,(Lsoot/Type;Lsoot/Type;)Z)#2
soot.jimple.toolkits.typing.fast.TypeResolver.typesEqual(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.TypeResolver.typesEqual(Lsoot/Type;Lsoot/Type;)Z#Instanceof(Lsoot/ArrayType;)#1
soot.jimple.toolkits.typing.fast.TypeResolver.typesEqual(Lsoot/Type;Lsoot/Type;)Z#Constant(I,0)#2
soot.jimple.toolkits.typing.fast.TypeResolver.typesEqual(Lsoot/Type;Lsoot/Type;)Z#ConditionalBranch(I,eq,30)#3
soot.jimple.toolkits.typing.fast.TypeResolver.typesEqual(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,0)#30
soot.jimple.toolkits.typing.fast.TypeResolver.typesEqual(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,1)#31
soot.jimple.toolkits.typing.fast.TypeResolver.typesEqual(Lsoot/Type;Lsoot/Type;)Z#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#32
soot.jimple.toolkits.typing.fast.BottomType.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.BottomType.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#1
soot.jimple.toolkits.typing.fast.BottomType.equals(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,5)#2
soot.jimple.toolkits.typing.fast.BottomType.equals(Ljava/lang/Object;)Z#Constant(I,0)#5
soot.jimple.toolkits.typing.fast.BottomType.equals(Ljava/lang/Object;)Z#Return(I)#6
soot.jimple.toolkits.typing.fast.TypeResolver.typesEqual(Lsoot/Type;Lsoot/Type;)Z#Return(I)#33
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.lcas_(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;#Constant(I,0)#3
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.lcas_(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;#ConditionalBranch(I,eq,10)#4
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.lcas_(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,0)#10
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.lcas_(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;#Instanceof(Lsoot/jimple/toolkits/typing/fast/BottomType;)#11
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.lcas_(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;#Constant(I,0)#12
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.lcas_(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;#ConditionalBranch(I,eq,19)#13
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.lcas_(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;#New(Lsoot/jimple/toolkits/typing/fast/SingletonList;,0)#14
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.lcas_(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;#Dup(1,0)#15
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.lcas_(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,1)#16
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.lcas_(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;#Invoke(SPECIAL,Lsoot/jimple/toolkits/typing/fast/SingletonList;,<init>,(Ljava/lang/Object;)V)#17
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.lcas_(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;#Return(Ljava/lang/Object;)#18
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.lcas(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;#Return(Ljava/lang/Object;)#3
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalStore(Ljava/lang/Object;,17)#118
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,17)#119
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Invoke(INTERFACE,Ljava/util/Collection;,iterator,()Ljava/util/Iterator;)#120
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalStore(Ljava/lang/Object;,19)#121
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Goto(182)#122
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,19)#182
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#183
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Constant(I,0)#184
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#ConditionalBranch(I,ne,123)#185
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,19)#123
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#124
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#CheckCast(Lsoot/Type;)#125
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalStore(Ljava/lang/Object;,18)#126
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,18)#127
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,12)#128
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Invoke(STATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,typesEqual,(Lsoot/Type;Lsoot/Type;)Z)#129
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Constant(I,0)#130
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#ConditionalBranch(I,eq,135)#131
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,14)#135
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Invoke(INTERFACE,Ljava/util/Collection;,size,()I)#136
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Constant(I,1)#137
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#ConditionalBranch(I,ne,150)#138
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,17)#139
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Invoke(INTERFACE,Ljava/util/Collection;,size,()I)#140
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Constant(I,1)#141
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#ConditionalBranch(I,ne,150)#142
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,1)#143
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalStore(Ljava/lang/Object;,20)#144
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,7)#145
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalStore(Ljava/lang/Object;,21)#146
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Constant(I,1)#147
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalStore(I,13)#148
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Goto(169)#149
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,20)#169
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,11)#170
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,18)#171
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Invoke(VIRTUAL,Lsoot/jimple/toolkits/typing/fast/Typing;,set,(Lsoot/Local;Lsoot/Type;)Lsoot/Type;)#172
soot.jimple.toolkits.typing.fast.Typing.set(Lsoot/Local;Lsoot/Type;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.Typing.set(Lsoot/Local;Lsoot/Type;)Lsoot/Type;#Get(Ljava/util/HashMap;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/Typing;,map)#1
soot.jimple.toolkits.typing.fast.Typing.set(Lsoot/Local;Lsoot/Type;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.toolkits.typing.fast.Typing.set(Lsoot/Local;Lsoot/Type;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,2)#3
soot.jimple.toolkits.typing.fast.Typing.set(Lsoot/Local;Lsoot/Type;)Lsoot/Type;#Invoke(VIRTUAL,Ljava/util/HashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#4
soot.jimple.toolkits.typing.fast.Typing.set(Lsoot/Local;Lsoot/Type;)Lsoot/Type;#CheckCast(Lsoot/Type;)#5
soot.jimple.toolkits.typing.fast.Typing.set(Lsoot/Local;Lsoot/Type;)Lsoot/Type;#Return(Ljava/lang/Object;)#6
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Pop(1)#173
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,21)#174
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,0)#175
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Get(Ljava/util/HashMap;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,depends)#176
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,11)#177
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Invoke(VIRTUAL,Ljava/util/HashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#178
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#CheckCast(Ljava/util/List;)#179
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Invoke(VIRTUAL,Lsoot/jimple/toolkits/typing/fast/QueuedSet;,addLast,(Ljava/util/List;)I)#180
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/util/List;)I#Constant(I,0)#0
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/util/List;)I#LocalStore(I,2)#1
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/util/List;)I#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/util/List;)I#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#3
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/util/List;)I#LocalStore(Ljava/lang/Object;,4)#4
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/util/List;)I#Goto(19)#5
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/util/List;)I#LocalLoad(Ljava/lang/Object;,4)#19
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/util/List;)I#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#20
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/util/List;)I#Constant(I,0)#21
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/util/List;)I#ConditionalBranch(I,ne,6)#22
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/util/List;)I#LocalLoad(I,2)#23
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/util/List;)I#Return(I)#24
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Pop(1)#181
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(I,13)#190
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Constant(I,0)#191
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#ConditionalBranch(I,ne,200)#192
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,5)#41
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,1)#42
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Invoke(VIRTUAL,Ljava/util/LinkedList;,add,(Ljava/lang/Object;)Z)#43
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Pop(1)#44
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,4)#45
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Invoke(VIRTUAL,Ljava/util/LinkedList;,remove,()Ljava/lang/Object;)#46
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Pop(1)#47
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,6)#48
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,1)#49
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Invoke(VIRTUAL,Ljava/util/HashMap;,remove,(Ljava/lang/Object;)Ljava/lang/Object;)#50
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Pop(1)#51
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Goto(200)#52
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,5)#204
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,3)#205
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Invoke(STATIC,Lsoot/jimple/toolkits/typing/fast/Typing;,minimize,(Ljava/util/List;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V)#206
soot.jimple.toolkits.typing.fast.Typing.minimize(Ljava/util/List;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.Typing.minimize(Ljava/util/List;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#Invoke(INTERFACE,Ljava/util/List;,listIterator,()Ljava/util/ListIterator;)#1
soot.jimple.toolkits.typing.fast.Typing.minimize(Ljava/util/List;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#LocalStore(Ljava/lang/Object;,2)#2
soot.jimple.toolkits.typing.fast.Typing.minimize(Ljava/util/List;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#Goto(32)#3
soot.jimple.toolkits.typing.fast.Typing.minimize(Ljava/util/List;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#LocalLoad(Ljava/lang/Object;,2)#32
soot.jimple.toolkits.typing.fast.Typing.minimize(Ljava/util/List;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#Invoke(INTERFACE,Ljava/util/ListIterator;,hasNext,()Z)#33
soot.jimple.toolkits.typing.fast.Typing.minimize(Ljava/util/List;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#Constant(I,0)#34
soot.jimple.toolkits.typing.fast.Typing.minimize(Ljava/util/List;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#ConditionalBranch(I,ne,4)#35
soot.jimple.toolkits.typing.fast.Typing.minimize(Ljava/util/List;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#LocalLoad(Ljava/lang/Object;,2)#4
soot.jimple.toolkits.typing.fast.Typing.minimize(Ljava/util/List;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#Invoke(INTERFACE,Ljava/util/ListIterator;,next,()Ljava/lang/Object;)#5
soot.jimple.toolkits.typing.fast.Typing.minimize(Ljava/util/List;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#CheckCast(Lsoot/jimple/toolkits/typing/fast/Typing;)#6
soot.jimple.toolkits.typing.fast.Typing.minimize(Ljava/util/List;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#LocalStore(Ljava/lang/Object;,3)#7
soot.jimple.toolkits.typing.fast.Typing.minimize(Ljava/util/List;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.jimple.toolkits.typing.fast.Typing.minimize(Ljava/util/List;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#Invoke(INTERFACE,Ljava/util/List;,listIterator,()Ljava/util/ListIterator;)#9
soot.jimple.toolkits.typing.fast.Typing.minimize(Ljava/util/List;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#LocalStore(Ljava/lang/Object;,4)#10
soot.jimple.toolkits.typing.fast.Typing.minimize(Ljava/util/List;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#Goto(28)#11
soot.jimple.toolkits.typing.fast.Typing.minimize(Ljava/util/List;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#LocalLoad(Ljava/lang/Object;,4)#28
soot.jimple.toolkits.typing.fast.Typing.minimize(Ljava/util/List;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#Invoke(INTERFACE,Ljava/util/ListIterator;,hasNext,()Z)#29
soot.jimple.toolkits.typing.fast.Typing.minimize(Ljava/util/List;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#Constant(I,0)#30
soot.jimple.toolkits.typing.fast.Typing.minimize(Ljava/util/List;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#ConditionalBranch(I,ne,12)#31
soot.jimple.toolkits.typing.fast.Typing.minimize(Ljava/util/List;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#LocalLoad(Ljava/lang/Object;,4)#12
soot.jimple.toolkits.typing.fast.Typing.minimize(Ljava/util/List;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#Invoke(INTERFACE,Ljava/util/ListIterator;,next,()Ljava/lang/Object;)#13
soot.jimple.toolkits.typing.fast.Typing.minimize(Ljava/util/List;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#CheckCast(Lsoot/jimple/toolkits/typing/fast/Typing;)#14
soot.jimple.toolkits.typing.fast.Typing.minimize(Ljava/util/List;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#LocalStore(Ljava/lang/Object;,5)#15
soot.jimple.toolkits.typing.fast.Typing.minimize(Ljava/util/List;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#LocalLoad(Ljava/lang/Object;,3)#16
soot.jimple.toolkits.typing.fast.Typing.minimize(Ljava/util/List;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#LocalLoad(Ljava/lang/Object;,5)#17
soot.jimple.toolkits.typing.fast.Typing.minimize(Ljava/util/List;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#ConditionalBranch(Ljava/lang/Object;,eq,28)#18
soot.jimple.toolkits.typing.fast.Typing.minimize(Ljava/util/List;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#Return(V)#36
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,5)#207
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Return(Ljava/lang/Object;)#208
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalStore(Ljava/lang/Object;,4)#24
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Constant(I,1)#25
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#New([I,1)#26
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalStore(Ljava/lang/Object;,5)#27
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalLoad(Ljava/lang/Object;,0)#28
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalLoad(Ljava/lang/Object;,4)#29
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalLoad(Ljava/lang/Object;,3)#30
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalLoad(Ljava/lang/Object;,5)#31
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Invoke(SPECIAL,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,minCasts,(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;)#32
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#Constant(L;,null)#0
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalStore(Ljava/lang/Object;,4)#1
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,3)#2
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#Constant(I,0)#3
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#Constant(I,-1)#4
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#ArrayStore(I)#5
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#Constant(I,0)#6
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalStore(I,5)#7
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,1)#8
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#Invoke(INTERFACE,Ljava/util/Collection;,iterator,()Ljava/util/Iterator;)#9
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalStore(Ljava/lang/Object;,7)#10
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#Goto(40)#11
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,7)#40
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#41
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#Constant(I,0)#42
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#ConditionalBranch(I,ne,12)#43
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,7)#12
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#13
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#CheckCast(Lsoot/jimple/toolkits/typing/fast/Typing;)#14
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalStore(Ljava/lang/Object;,6)#15
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,0)#16
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,6)#17
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,2)#18
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#Constant(I,1)#19
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#Invoke(SPECIAL,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,insertCasts,(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;Z)I)#20
soot.jimple.toolkits.typing.fast.TypeResolver.insertCasts(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;Z)I#New(Lsoot/jimple/toolkits/typing/fast/UseChecker;,0)#0
soot.jimple.toolkits.typing.fast.TypeResolver.insertCasts(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;Z)I#Dup(1,0)#1
soot.jimple.toolkits.typing.fast.TypeResolver.insertCasts(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;Z)I#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.toolkits.typing.fast.TypeResolver.insertCasts(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;Z)I#Get(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,jb)#3
soot.jimple.toolkits.typing.fast.TypeResolver.insertCasts(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;Z)I#Invoke(SPECIAL,Lsoot/jimple/toolkits/typing/fast/UseChecker;,<init>,(Lsoot/jimple/JimpleBody;)V)#4
soot.jimple.toolkits.typing.fast.UseChecker.<init>(Lsoot/jimple/JimpleBody;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.UseChecker.<init>(Lsoot/jimple/JimpleBody;)V#Invoke(SPECIAL,Lsoot/jimple/AbstractStmtSwitch;,<init>,()V)#1
soot.jimple.AbstractStmtSwitch.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.AbstractStmtSwitch.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.jimple.AbstractStmtSwitch.<init>()V#Return(V)#2
soot.jimple.toolkits.typing.fast.UseChecker.<init>(Lsoot/jimple/JimpleBody;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.toolkits.typing.fast.UseChecker.<init>(Lsoot/jimple/JimpleBody;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.jimple.toolkits.typing.fast.UseChecker.<init>(Lsoot/jimple/JimpleBody;)V#Put(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/UseChecker;,jb)#4
soot.jimple.toolkits.typing.fast.UseChecker.<init>(Lsoot/jimple/JimpleBody;)V#Return(V)#5
soot.jimple.toolkits.typing.fast.TypeResolver.insertCasts(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;Z)I#LocalStore(Ljava/lang/Object;,4)#5
soot.jimple.toolkits.typing.fast.TypeResolver.insertCasts(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;Z)I#New(Lsoot/jimple/toolkits/typing/fast/TypeResolver$CastInsertionUseVisitor;,0)#6
soot.jimple.toolkits.typing.fast.TypeResolver.insertCasts(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;Z)I#Dup(1,0)#7
soot.jimple.toolkits.typing.fast.TypeResolver.insertCasts(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;Z)I#LocalLoad(Ljava/lang/Object;,0)#8
soot.jimple.toolkits.typing.fast.TypeResolver.insertCasts(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;Z)I#LocalLoad(I,3)#9
soot.jimple.toolkits.typing.fast.TypeResolver.insertCasts(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;Z)I#LocalLoad(Ljava/lang/Object;,0)#10
soot.jimple.toolkits.typing.fast.TypeResolver.insertCasts(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;Z)I#Get(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,jb)#11
soot.jimple.toolkits.typing.fast.TypeResolver.insertCasts(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;Z)I#LocalLoad(Ljava/lang/Object;,1)#12
soot.jimple.toolkits.typing.fast.TypeResolver.insertCasts(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;Z)I#LocalLoad(Ljava/lang/Object;,2)#13
soot.jimple.toolkits.typing.fast.TypeResolver.insertCasts(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;Z)I#Invoke(SPECIAL,Lsoot/jimple/toolkits/typing/fast/TypeResolver$CastInsertionUseVisitor;,<init>,(Lsoot/jimple/toolkits/typing/fast/TypeResolver;ZLsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V)#14
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;ZLsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;ZLsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;ZLsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#Put(Lsoot/jimple/toolkits/typing/fast/TypeResolver;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver$CastInsertionUseVisitor;,this$0)#2
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;ZLsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;ZLsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#4
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;ZLsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;ZLsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#LocalLoad(Ljava/lang/Object;,3)#6
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;ZLsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#Put(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver$CastInsertionUseVisitor;,jb)#7
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;ZLsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;ZLsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#LocalLoad(Ljava/lang/Object;,4)#9
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;ZLsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#Put(Lsoot/jimple/toolkits/typing/fast/Typing;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver$CastInsertionUseVisitor;,tg)#10
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;ZLsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;ZLsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#LocalLoad(Ljava/lang/Object;,5)#12
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;ZLsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#Put(Lsoot/jimple/toolkits/typing/fast/IHierarchy;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver$CastInsertionUseVisitor;,h)#13
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;ZLsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#LocalLoad(Ljava/lang/Object;,0)#14
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;ZLsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#LocalLoad(I,2)#15
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;ZLsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#Put(Z,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver$CastInsertionUseVisitor;,countOnly)#16
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;ZLsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#LocalLoad(Ljava/lang/Object;,0)#17
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;ZLsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#Constant(I,0)#18
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;ZLsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#Put(I,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver$CastInsertionUseVisitor;,count)#19
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;ZLsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)V#Return(V)#20
soot.jimple.toolkits.typing.fast.TypeResolver.insertCasts(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;Z)I#LocalStore(Ljava/lang/Object;,5)#15
soot.jimple.toolkits.typing.fast.TypeResolver.insertCasts(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;Z)I#LocalLoad(Ljava/lang/Object;,4)#16
soot.jimple.toolkits.typing.fast.TypeResolver.insertCasts(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;Z)I#LocalLoad(Ljava/lang/Object;,1)#17
soot.jimple.toolkits.typing.fast.TypeResolver.insertCasts(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;Z)I#LocalLoad(Ljava/lang/Object;,5)#18
soot.jimple.toolkits.typing.fast.TypeResolver.insertCasts(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;Z)I#Invoke(VIRTUAL,Lsoot/jimple/toolkits/typing/fast/UseChecker;,check,(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IUseVisitor;)V)#19
soot.jimple.toolkits.typing.fast.UseChecker.check(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IUseVisitor;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.UseChecker.check(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IUseVisitor;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.jimple.toolkits.typing.fast.UseChecker.check(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IUseVisitor;)V#Put(Lsoot/jimple/toolkits/typing/fast/Typing;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/UseChecker;,tg)#2
soot.jimple.toolkits.typing.fast.UseChecker.check(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IUseVisitor;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.jimple.toolkits.typing.fast.UseChecker.check(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IUseVisitor;)V#LocalLoad(Ljava/lang/Object;,2)#4
soot.jimple.toolkits.typing.fast.UseChecker.check(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IUseVisitor;)V#Put(Lsoot/jimple/toolkits/typing/fast/IUseVisitor;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/UseChecker;,uv)#5
soot.jimple.toolkits.typing.fast.UseChecker.check(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IUseVisitor;)V#LocalLoad(Ljava/lang/Object;,0)#6
soot.jimple.toolkits.typing.fast.UseChecker.check(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IUseVisitor;)V#Get(Lsoot/jimple/toolkits/typing/fast/Typing;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/UseChecker;,tg)#7
soot.jimple.toolkits.typing.fast.UseChecker.check(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IUseVisitor;)V#Constant(L;,null)#8
soot.jimple.toolkits.typing.fast.UseChecker.check(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IUseVisitor;)V#ConditionalBranch(Ljava/lang/Object;,ne,20)#9
soot.jimple.toolkits.typing.fast.UseChecker.check(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IUseVisitor;)V#LocalLoad(Ljava/lang/Object;,0)#20
soot.jimple.toolkits.typing.fast.UseChecker.check(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IUseVisitor;)V#Get(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/UseChecker;,jb)#21
soot.jimple.toolkits.typing.fast.UseChecker.check(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IUseVisitor;)V#Invoke(VIRTUAL,Lsoot/jimple/JimpleBody;,getUnits,()Lsoot/PatchingChain;)#22
soot.jimple.toolkits.typing.fast.UseChecker.check(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IUseVisitor;)V#Invoke(VIRTUAL,Lsoot/PatchingChain;,snapshotIterator,()Ljava/util/Iterator;)#23
soot.PatchingChain.snapshotIterator()Ljava/util/Iterator;#New(Ljava/util/ArrayList;,0)#0
soot.PatchingChain.snapshotIterator()Ljava/util/Iterator;#Dup(1,0)#1
soot.PatchingChain.snapshotIterator()Ljava/util/Iterator;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#2
soot.PatchingChain.snapshotIterator()Ljava/util/Iterator;#LocalStore(Ljava/lang/Object;,1)#3
soot.PatchingChain.snapshotIterator()Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,1)#4
soot.PatchingChain.snapshotIterator()Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#5
soot.PatchingChain.snapshotIterator()Ljava/util/Iterator;#Invoke(INTERFACE,Ljava/util/List;,addAll,(Ljava/util/Collection;)Z)#6
soot.PatchingChain.snapshotIterator()Ljava/util/Iterator;#Pop(1)#7
soot.PatchingChain.snapshotIterator()Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,1)#8
soot.PatchingChain.snapshotIterator()Ljava/util/Iterator;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#9
soot.PatchingChain.snapshotIterator()Ljava/util/Iterator;#Return(Ljava/lang/Object;)#10
soot.jimple.toolkits.typing.fast.UseChecker.check(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IUseVisitor;)V#LocalStore(Ljava/lang/Object;,3)#24
soot.jimple.toolkits.typing.fast.UseChecker.check(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IUseVisitor;)V#Goto(36)#25
soot.jimple.toolkits.typing.fast.UseChecker.check(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IUseVisitor;)V#LocalLoad(Ljava/lang/Object;,3)#36
soot.jimple.toolkits.typing.fast.UseChecker.check(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IUseVisitor;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#37
soot.jimple.toolkits.typing.fast.UseChecker.check(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IUseVisitor;)V#Constant(I,0)#38
soot.jimple.toolkits.typing.fast.UseChecker.check(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IUseVisitor;)V#ConditionalBranch(I,ne,26)#39
soot.jimple.toolkits.typing.fast.UseChecker.check(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IUseVisitor;)V#LocalLoad(Ljava/lang/Object;,2)#26
soot.jimple.toolkits.typing.fast.UseChecker.check(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IUseVisitor;)V#Invoke(INTERFACE,Lsoot/jimple/toolkits/typing/fast/IUseVisitor;,finish,()Z)#27
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.finish()Z#Constant(I,0)#0
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.finish()Z#Return(I)#1
soot.jimple.toolkits.typing.fast.UseChecker.check(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IUseVisitor;)V#Constant(I,0)#28
soot.jimple.toolkits.typing.fast.UseChecker.check(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IUseVisitor;)V#ConditionalBranch(I,eq,31)#29
soot.jimple.toolkits.typing.fast.UseChecker.check(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IUseVisitor;)V#LocalLoad(Ljava/lang/Object;,3)#31
soot.jimple.toolkits.typing.fast.UseChecker.check(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IUseVisitor;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#32
soot.jimple.toolkits.typing.fast.UseChecker.check(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IUseVisitor;)V#CheckCast(Lsoot/jimple/Stmt;)#33
soot.jimple.toolkits.typing.fast.UseChecker.check(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IUseVisitor;)V#LocalLoad(Ljava/lang/Object;,0)#34
soot.jimple.toolkits.typing.fast.UseChecker.check(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IUseVisitor;)V#Invoke(INTERFACE,Lsoot/jimple/Stmt;,apply,(Lsoot/util/Switch;)V)#35
soot.jimple.internal.JIdentityStmt.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.jimple.internal.JIdentityStmt.apply(Lsoot/util/Switch;)V#CheckCast(Lsoot/jimple/StmtSwitch;)#1
soot.jimple.internal.JIdentityStmt.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.internal.JIdentityStmt.apply(Lsoot/util/Switch;)V#Invoke(INTERFACE,Lsoot/jimple/StmtSwitch;,caseIdentityStmt,(Lsoot/jimple/IdentityStmt;)V)#3
soot.jimple.toolkits.typing.fast.UseChecker.caseIdentityStmt(Lsoot/jimple/IdentityStmt;)V#Return(V)#0
soot.jimple.internal.JIdentityStmt.apply(Lsoot/util/Switch;)V#Return(V)#4
soot.jimple.internal.JInvokeStmt.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.jimple.internal.JInvokeStmt.apply(Lsoot/util/Switch;)V#CheckCast(Lsoot/jimple/StmtSwitch;)#1
soot.jimple.internal.JInvokeStmt.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.internal.JInvokeStmt.apply(Lsoot/util/Switch;)V#Invoke(INTERFACE,Lsoot/jimple/StmtSwitch;,caseInvokeStmt,(Lsoot/jimple/InvokeStmt;)V)#3
soot.jimple.toolkits.typing.fast.UseChecker.caseInvokeStmt(Lsoot/jimple/InvokeStmt;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.UseChecker.caseInvokeStmt(Lsoot/jimple/InvokeStmt;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.jimple.toolkits.typing.fast.UseChecker.caseInvokeStmt(Lsoot/jimple/InvokeStmt;)V#Invoke(INTERFACE,Lsoot/jimple/InvokeStmt;,getInvokeExpr,()Lsoot/jimple/InvokeExpr;)#2
soot.jimple.internal.JInvokeStmt.getInvokeExpr()Lsoot/jimple/InvokeExpr;#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JInvokeStmt.getInvokeExpr()Lsoot/jimple/InvokeExpr;#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/JInvokeStmt;,invokeExprBox)#1
soot.jimple.internal.JInvokeStmt.getInvokeExpr()Lsoot/jimple/InvokeExpr;#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#2
soot.jimple.internal.JInvokeStmt.getInvokeExpr()Lsoot/jimple/InvokeExpr;#CheckCast(Lsoot/jimple/InvokeExpr;)#3
soot.jimple.internal.JInvokeStmt.getInvokeExpr()Lsoot/jimple/InvokeExpr;#Return(Ljava/lang/Object;)#4
soot.jimple.toolkits.typing.fast.UseChecker.caseInvokeStmt(Lsoot/jimple/InvokeStmt;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.jimple.toolkits.typing.fast.UseChecker.caseInvokeStmt(Lsoot/jimple/InvokeStmt;)V#Invoke(SPECIAL,Lsoot/jimple/toolkits/typing/fast/UseChecker;,handleInvokeExpr,(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V)#4
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#Invoke(INTERFACE,Lsoot/jimple/InvokeExpr;,getMethodRef,()Lsoot/SootMethodRef;)#1
soot.jimple.internal.AbstractInvokeExpr.getMethodRef()Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.AbstractInvokeExpr.getMethodRef()Lsoot/SootMethodRef;#Get(Lsoot/SootMethodRef;,NONSTATIC,Lsoot/jimple/internal/AbstractInvokeExpr;,methodRef)#1
soot.jimple.internal.AbstractInvokeExpr.getMethodRef()Lsoot/SootMethodRef;#Return(Ljava/lang/Object;)#2
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#LocalStore(Ljava/lang/Object;,3)#2
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#Instanceof(Lsoot/jimple/InstanceInvokeExpr;)#4
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#Constant(I,0)#5
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#ConditionalBranch(I,eq,21)#6
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#LocalLoad(Ljava/lang/Object;,1)#7
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#CheckCast(Lsoot/jimple/InstanceInvokeExpr;)#8
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#LocalStore(Ljava/lang/Object;,4)#9
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#LocalLoad(Ljava/lang/Object;,4)#10
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#Get(Lsoot/jimple/toolkits/typing/fast/IUseVisitor;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/UseChecker;,uv)#12
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#LocalLoad(Ljava/lang/Object;,4)#13
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#Invoke(INTERFACE,Lsoot/jimple/InstanceInvokeExpr;,getBase,()Lsoot/Value;)#14
soot.jimple.internal.AbstractInstanceInvokeExpr.getBase()Lsoot/Value;#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.AbstractInstanceInvokeExpr.getBase()Lsoot/Value;#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/AbstractInstanceInvokeExpr;,baseBox)#1
soot.jimple.internal.AbstractInstanceInvokeExpr.getBase()Lsoot/Value;#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#2
soot.jimple.internal.AbstractInstanceInvokeExpr.getBase()Lsoot/Value;#Return(Ljava/lang/Object;)#3
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#LocalLoad(Ljava/lang/Object;,3)#15
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#Invoke(INTERFACE,Lsoot/SootMethodRef;,declaringClass,()Lsoot/SootClass;)#16
soot.SootMethodRefImpl.declaringClass()Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethodRefImpl.declaringClass()Lsoot/SootClass;#Get(Lsoot/SootClass;,NONSTATIC,Lsoot/SootMethodRefImpl;,declaringClass)#1
soot.SootMethodRefImpl.declaringClass()Lsoot/SootClass;#Return(Ljava/lang/Object;)#2
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getType,()Lsoot/RefType;)#17
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#LocalLoad(Ljava/lang/Object;,2)#18
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#Invoke(INTERFACE,Lsoot/jimple/toolkits/typing/fast/IUseVisitor;,visit,(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;)#19
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#Get(Lsoot/jimple/toolkits/typing/fast/Typing;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver$CastInsertionUseVisitor;,tg)#1
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#LocalLoad(Ljava/lang/Object;,3)#3
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#LocalLoad(Ljava/lang/Object;,0)#4
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#Get(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver$CastInsertionUseVisitor;,jb)#5
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#Invoke(STATIC,Lsoot/jimple/toolkits/typing/fast/AugEvalFunction;,eval_,(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;)#6
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#8
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Instanceof(Lsoot/jimple/ParameterRef;)#9
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Constant(I,0)#10
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#ConditionalBranch(I,eq,16)#11
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#16
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Instanceof(Lsoot/Local;)#17
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Constant(I,0)#18
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#ConditionalBranch(I,eq,32)#19
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#20
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#CheckCast(Lsoot/Local;)#21
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#LocalStore(Ljava/lang/Object;,4)#22
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,0)#23
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Constant(L;,null)#24
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#ConditionalBranch(Ljava/lang/Object;,ne,28)#25
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,0)#28
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,4)#29
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Invoke(VIRTUAL,Lsoot/jimple/toolkits/typing/fast/Typing;,get,(Lsoot/Local;)Lsoot/Type;)#30
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Return(Ljava/lang/Object;)#31
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#LocalStore(Ljava/lang/Object;,4)#7
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#LocalLoad(Ljava/lang/Object;,0)#8
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#Get(Lsoot/jimple/toolkits/typing/fast/IHierarchy;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver$CastInsertionUseVisitor;,h)#9
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#LocalLoad(Ljava/lang/Object;,2)#10
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#LocalLoad(Ljava/lang/Object;,4)#11
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#Invoke(INTERFACE,Lsoot/jimple/toolkits/typing/fast/IHierarchy;,ancestor,(Lsoot/Type;Lsoot/Type;)Z)#12
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,1)#0
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,2)#1
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor(Lsoot/Type;Lsoot/Type;)Z#Invoke(STATIC,Lsoot/jimple/toolkits/typing/fast/BytecodeHierarchy;,ancestor_,(Lsoot/Type;Lsoot/Type;)Z)#2
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,1)#1
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Invoke(STATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,typesEqual,(Lsoot/Type;Lsoot/Type;)Z)#2
soot.RefType.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#4
soot.RefType.equals(Ljava/lang/Object;)Z#Get(Ljava/lang/String;,NONSTATIC,Lsoot/RefType;,className)#5
soot.RefType.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#6
soot.RefType.equals(Ljava/lang/Object;)Z#CheckCast(Lsoot/RefType;)#7
soot.RefType.equals(Ljava/lang/Object;)Z#Get(Ljava/lang/String;,NONSTATIC,Lsoot/RefType;,className)#8
soot.RefType.equals(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#9
soot.RefType.equals(Ljava/lang/Object;)Z#Constant(I,0)#10
soot.RefType.equals(Ljava/lang/Object;)Z#ConditionalBranch(I,eq,14)#11
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Constant(I,0)#3
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#ConditionalBranch(I,eq,7)#4
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,1)#7
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Instanceof(Lsoot/jimple/toolkits/typing/fast/BottomType;)#8
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Constant(I,0)#9
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#ConditionalBranch(I,eq,13)#10
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,0)#13
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Instanceof(Lsoot/jimple/toolkits/typing/fast/BottomType;)#14
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Constant(I,0)#15
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#ConditionalBranch(I,eq,19)#16
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,0)#19
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Instanceof(Lsoot/IntegerType;)#20
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Constant(I,0)#21
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#ConditionalBranch(I,eq,29)#22
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,0)#29
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Instanceof(Lsoot/PrimType;)#30
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Constant(I,0)#31
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#ConditionalBranch(I,ne,37)#32
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,1)#33
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Instanceof(Lsoot/PrimType;)#34
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Constant(I,0)#35
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#ConditionalBranch(I,eq,39)#36
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,1)#39
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Instanceof(Lsoot/NullType;)#40
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Constant(I,0)#41
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#ConditionalBranch(I,eq,45)#42
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,0)#45
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Instanceof(Lsoot/NullType;)#46
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Constant(I,0)#47
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#ConditionalBranch(I,eq,51)#48
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#51
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Invoke(VIRTUAL,Lsoot/Scene;,getOrMakeFastHierarchy,()Lsoot/FastHierarchy;)#52
soot.Scene.getOrMakeFastHierarchy()Lsoot/FastHierarchy;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.getOrMakeFastHierarchy()Lsoot/FastHierarchy;#Invoke(VIRTUAL,Lsoot/Scene;,hasFastHierarchy,()Z)#1
soot.Scene.hasFastHierarchy()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.hasFastHierarchy()Z#Get(Lsoot/FastHierarchy;,NONSTATIC,Lsoot/Scene;,activeFastHierarchy)#1
soot.Scene.hasFastHierarchy()Z#Constant(L;,null)#2
soot.Scene.hasFastHierarchy()Z#ConditionalBranch(Ljava/lang/Object;,eq,6)#3
soot.Scene.hasFastHierarchy()Z#Constant(I,0)#6
soot.Scene.hasFastHierarchy()Z#Return(I)#7
soot.Scene.getOrMakeFastHierarchy()Lsoot/FastHierarchy;#Constant(I,0)#2
soot.Scene.getOrMakeFastHierarchy()Lsoot/FastHierarchy;#ConditionalBranch(I,ne,9)#3
soot.Scene.getOrMakeFastHierarchy()Lsoot/FastHierarchy;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Scene.getOrMakeFastHierarchy()Lsoot/FastHierarchy;#New(Lsoot/FastHierarchy;,0)#5
soot.Scene.getOrMakeFastHierarchy()Lsoot/FastHierarchy;#Dup(1,0)#6
soot.Scene.getOrMakeFastHierarchy()Lsoot/FastHierarchy;#Invoke(SPECIAL,Lsoot/FastHierarchy;,<init>,()V)#7
soot.FastHierarchy.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.FastHierarchy.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.FastHierarchy.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
soot.FastHierarchy.<init>()V#New(Ljava/util/HashMap;,0)#3
soot.FastHierarchy.<init>()V#Dup(1,0)#4
soot.FastHierarchy.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#5
soot.FastHierarchy.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/FastHierarchy;,classToSubclasses)#6
soot.FastHierarchy.<init>()V#LocalLoad(Ljava/lang/Object;,0)#7
soot.FastHierarchy.<init>()V#New(Lsoot/util/HashMultiMap;,0)#8
soot.FastHierarchy.<init>()V#Dup(1,0)#9
soot.FastHierarchy.<init>()V#Invoke(SPECIAL,Lsoot/util/HashMultiMap;,<init>,()V)#10
soot.FastHierarchy.<init>()V#Put(Lsoot/util/MultiMap;,NONSTATIC,Lsoot/FastHierarchy;,interfaceToSubinterfaces)#11
soot.FastHierarchy.<init>()V#LocalLoad(Ljava/lang/Object;,0)#12
soot.FastHierarchy.<init>()V#New(Lsoot/util/HashMultiMap;,0)#13
soot.FastHierarchy.<init>()V#Dup(1,0)#14
soot.FastHierarchy.<init>()V#Invoke(SPECIAL,Lsoot/util/HashMultiMap;,<init>,()V)#15
soot.FastHierarchy.<init>()V#Put(Lsoot/util/MultiMap;,NONSTATIC,Lsoot/FastHierarchy;,interfaceToImplementers)#16
soot.FastHierarchy.<init>()V#LocalLoad(Ljava/lang/Object;,0)#17
soot.FastHierarchy.<init>()V#New(Lsoot/util/HashMultiMap;,0)#18
soot.FastHierarchy.<init>()V#Dup(1,0)#19
soot.FastHierarchy.<init>()V#Invoke(SPECIAL,Lsoot/util/HashMultiMap;,<init>,()V)#20
soot.FastHierarchy.<init>()V#Put(Lsoot/util/MultiMap;,NONSTATIC,Lsoot/FastHierarchy;,interfaceToAllSubinterfaces)#21
soot.FastHierarchy.<init>()V#LocalLoad(Ljava/lang/Object;,0)#22
soot.FastHierarchy.<init>()V#New(Lsoot/util/HashMultiMap;,0)#23
soot.FastHierarchy.<init>()V#Dup(1,0)#24
soot.FastHierarchy.<init>()V#Invoke(SPECIAL,Lsoot/util/HashMultiMap;,<init>,()V)#25
soot.FastHierarchy.<init>()V#Put(Lsoot/util/MultiMap;,NONSTATIC,Lsoot/FastHierarchy;,interfaceToAllImplementers)#26
soot.FastHierarchy.<init>()V#LocalLoad(Ljava/lang/Object;,0)#27
soot.FastHierarchy.<init>()V#New(Ljava/util/HashMap;,0)#28
soot.FastHierarchy.<init>()V#Dup(1,0)#29
soot.FastHierarchy.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#30
soot.FastHierarchy.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/FastHierarchy;,classToInterval)#31
soot.FastHierarchy.<init>()V#LocalLoad(Ljava/lang/Object;,0)#32
soot.FastHierarchy.<init>()V#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#33
soot.FastHierarchy.<init>()V#Put(Lsoot/Scene;,NONSTATIC,Lsoot/FastHierarchy;,sc)#34
soot.FastHierarchy.<init>()V#LocalLoad(Ljava/lang/Object;,0)#35
soot.FastHierarchy.<init>()V#Get(Lsoot/Scene;,NONSTATIC,Lsoot/FastHierarchy;,sc)#36
soot.FastHierarchy.<init>()V#Invoke(VIRTUAL,Lsoot/Scene;,getClasses,()Lsoot/util/Chain;)#37
soot.FastHierarchy.<init>()V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#38
soot.FastHierarchy.<init>()V#LocalStore(Ljava/lang/Object;,1)#39
soot.FastHierarchy.<init>()V#Goto(94)#40
soot.FastHierarchy.<init>()V#LocalLoad(Ljava/lang/Object;,1)#94
soot.FastHierarchy.<init>()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#95
soot.FastHierarchy.<init>()V#Constant(I,0)#96
soot.FastHierarchy.<init>()V#ConditionalBranch(I,ne,41)#97
soot.FastHierarchy.<init>()V#LocalLoad(Ljava/lang/Object;,1)#41
soot.FastHierarchy.<init>()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#42
soot.FastHierarchy.<init>()V#CheckCast(Lsoot/SootClass;)#43
soot.FastHierarchy.<init>()V#LocalStore(Ljava/lang/Object;,2)#44
soot.FastHierarchy.<init>()V#LocalLoad(Ljava/lang/Object;,2)#45
soot.FastHierarchy.<init>()V#Invoke(VIRTUAL,Lsoot/SootClass;,resolvingLevel,()I)#46
soot.FastHierarchy.<init>()V#Constant(I,1)#47
soot.FastHierarchy.<init>()V#ConditionalBranch(I,ge,50)#48
soot.FastHierarchy.<init>()V#LocalLoad(Ljava/lang/Object;,2)#50
soot.FastHierarchy.<init>()V#Invoke(VIRTUAL,Lsoot/SootClass;,isInterface,()Z)#51
soot.SootClass.isInterface()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.isInterface()Z#Constant(I,1)#1
soot.SootClass.isInterface()Z#Invoke(VIRTUAL,Lsoot/SootClass;,checkLevel,(I)V)#2
soot.SootClass.isInterface()Z#LocalLoad(Ljava/lang/Object;,0)#3
soot.SootClass.isInterface()Z#Invoke(VIRTUAL,Lsoot/SootClass;,getModifiers,()I)#4
soot.SootClass.getModifiers()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.getModifiers()I#Get(I,NONSTATIC,Lsoot/SootClass;,modifiers)#1
soot.SootClass.getModifiers()I#Return(I)#2
soot.SootClass.isInterface()Z#Invoke(STATIC,Lsoot/Modifier;,isInterface,(I)Z)#5
soot.Modifier.isInterface(I)Z#LocalLoad(I,0)#0
soot.Modifier.isInterface(I)Z#Constant(I,512)#1
soot.Modifier.isInterface(I)Z#BinaryOp(I,and)#2
soot.Modifier.isInterface(I)Z#Constant(I,0)#3
soot.Modifier.isInterface(I)Z#ConditionalBranch(I,eq,7)#4
soot.Modifier.isInterface(I)Z#Constant(I,0)#7
soot.Modifier.isInterface(I)Z#Return(I)#8
soot.SootClass.isInterface()Z#Return(I)#6
soot.FastHierarchy.<init>()V#Constant(I,0)#52
soot.FastHierarchy.<init>()V#ConditionalBranch(I,ne,64)#53
soot.FastHierarchy.<init>()V#LocalLoad(Ljava/lang/Object;,2)#54
soot.FastHierarchy.<init>()V#Invoke(VIRTUAL,Lsoot/SootClass;,hasSuperclass,()Z)#55
soot.FastHierarchy.<init>()V#Constant(I,0)#56
soot.FastHierarchy.<init>()V#ConditionalBranch(I,eq,64)#57
soot.FastHierarchy.<init>()V#LocalLoad(Ljava/lang/Object;,0)#58
soot.FastHierarchy.<init>()V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/FastHierarchy;,classToSubclasses)#59
soot.FastHierarchy.<init>()V#LocalLoad(Ljava/lang/Object;,2)#60
soot.FastHierarchy.<init>()V#Invoke(VIRTUAL,Lsoot/SootClass;,getSuperclass,()Lsoot/SootClass;)#61
soot.FastHierarchy.<init>()V#LocalLoad(Ljava/lang/Object;,2)#62
soot.FastHierarchy.<init>()V#Invoke(STATIC,Lsoot/FastHierarchy;,put,(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V)#63
soot.FastHierarchy.put(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.FastHierarchy.put(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.FastHierarchy.put(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#2
soot.FastHierarchy.put(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V#CheckCast(Ljava/util/List;)#3
soot.FastHierarchy.put(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,3)#4
soot.FastHierarchy.put(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,3)#5
soot.FastHierarchy.put(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V#Constant(L;,null)#6
soot.FastHierarchy.put(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V#ConditionalBranch(Ljava/lang/Object;,ne,17)#7
soot.FastHierarchy.put(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.FastHierarchy.put(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#9
soot.FastHierarchy.put(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V#New(Ljava/util/ArrayList;,0)#10
soot.FastHierarchy.put(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V#Dup(1,0)#11
soot.FastHierarchy.put(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#12
soot.FastHierarchy.put(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V#Dup(1,0)#13
soot.FastHierarchy.put(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,3)#14
soot.FastHierarchy.put(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#15
soot.FastHierarchy.put(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V#Pop(1)#16
soot.FastHierarchy.put(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,3)#17
soot.FastHierarchy.put(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,2)#18
soot.FastHierarchy.put(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#19
soot.FastHierarchy.put(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V#Pop(1)#20
soot.FastHierarchy.put(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V#Return(V)#21
soot.FastHierarchy.<init>()V#LocalLoad(Ljava/lang/Object;,2)#64
soot.FastHierarchy.<init>()V#Invoke(VIRTUAL,Lsoot/SootClass;,getInterfaces,()Lsoot/util/Chain;)#65
soot.FastHierarchy.<init>()V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#66
soot.FastHierarchy.<init>()V#LocalStore(Ljava/lang/Object;,3)#67
soot.FastHierarchy.<init>()V#Goto(90)#68
soot.FastHierarchy.<init>()V#LocalLoad(Ljava/lang/Object;,3)#90
soot.FastHierarchy.<init>()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#91
soot.FastHierarchy.<init>()V#Constant(I,0)#92
soot.FastHierarchy.<init>()V#ConditionalBranch(I,ne,69)#93
soot.FastHierarchy.<init>()V#LocalLoad(Ljava/lang/Object;,3)#69
soot.FastHierarchy.<init>()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#70
soot.FastHierarchy.<init>()V#CheckCast(Lsoot/SootClass;)#71
soot.FastHierarchy.<init>()V#LocalStore(Ljava/lang/Object;,4)#72
soot.FastHierarchy.<init>()V#LocalLoad(Ljava/lang/Object;,2)#73
soot.FastHierarchy.<init>()V#Invoke(VIRTUAL,Lsoot/SootClass;,isInterface,()Z)#74
soot.FastHierarchy.<init>()V#Constant(I,0)#75
soot.FastHierarchy.<init>()V#ConditionalBranch(I,eq,84)#76
soot.FastHierarchy.<init>()V#LocalLoad(Ljava/lang/Object;,0)#84
soot.FastHierarchy.<init>()V#Get(Lsoot/util/MultiMap;,NONSTATIC,Lsoot/FastHierarchy;,interfaceToImplementers)#85
soot.FastHierarchy.<init>()V#LocalLoad(Ljava/lang/Object;,4)#86
soot.FastHierarchy.<init>()V#LocalLoad(Ljava/lang/Object;,2)#87
soot.FastHierarchy.<init>()V#Invoke(INTERFACE,Lsoot/util/MultiMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Z)#88
soot.util.HashMultiMap.put(Ljava/lang/Object;Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.HashMultiMap.put(Ljava/lang/Object;Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#1
soot.util.HashMultiMap.put(Ljava/lang/Object;Ljava/lang/Object;)Z#Invoke(SPECIAL,Lsoot/util/HashMultiMap;,findSet,(Ljava/lang/Object;)Ljava/util/Set;)#2
soot.util.HashMultiMap.findSet(Ljava/lang/Object;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.HashMultiMap.findSet(Ljava/lang/Object;)Ljava/util/Set;#Get(Ljava/util/Map;,NONSTATIC,Lsoot/util/HashMultiMap;,m)#1
soot.util.HashMultiMap.findSet(Ljava/lang/Object;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#2
soot.util.HashMultiMap.findSet(Ljava/lang/Object;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
soot.util.HashMultiMap.findSet(Ljava/lang/Object;)Ljava/util/Set;#CheckCast(Ljava/util/Set;)#4
soot.util.HashMultiMap.findSet(Ljava/lang/Object;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,2)#5
soot.util.HashMultiMap.findSet(Ljava/lang/Object;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,2)#6
soot.util.HashMultiMap.findSet(Ljava/lang/Object;)Ljava/util/Set;#Constant(L;,null)#7
soot.util.HashMultiMap.findSet(Ljava/lang/Object;)Ljava/util/Set;#ConditionalBranch(Ljava/lang/Object;,ne,18)#8
soot.util.HashMultiMap.findSet(Ljava/lang/Object;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#9
soot.util.HashMultiMap.findSet(Ljava/lang/Object;)Ljava/util/Set;#Invoke(VIRTUAL,Lsoot/util/HashMultiMap;,newSet,()Ljava/util/Set;)#10
soot.util.HashMultiMap.newSet()Ljava/util/Set;#New(Ljava/util/HashSet;,0)#0
soot.util.HashMultiMap.newSet()Ljava/util/Set;#Dup(1,0)#1
soot.util.HashMultiMap.newSet()Ljava/util/Set;#Constant(I,4)#2
soot.util.HashMultiMap.newSet()Ljava/util/Set;#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,(I)V)#3
soot.util.HashMultiMap.newSet()Ljava/util/Set;#Return(Ljava/lang/Object;)#4
soot.util.HashMultiMap.findSet(Ljava/lang/Object;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,2)#11
soot.util.HashMultiMap.findSet(Ljava/lang/Object;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#12
soot.util.HashMultiMap.findSet(Ljava/lang/Object;)Ljava/util/Set;#Get(Ljava/util/Map;,NONSTATIC,Lsoot/util/HashMultiMap;,m)#13
soot.util.HashMultiMap.findSet(Ljava/lang/Object;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#14
soot.util.HashMultiMap.findSet(Ljava/lang/Object;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,2)#15
soot.util.HashMultiMap.findSet(Ljava/lang/Object;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#16
soot.util.HashMultiMap.findSet(Ljava/lang/Object;)Ljava/util/Set;#Pop(1)#17
soot.util.HashMultiMap.findSet(Ljava/lang/Object;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,2)#18
soot.util.HashMultiMap.findSet(Ljava/lang/Object;)Ljava/util/Set;#Return(Ljava/lang/Object;)#19
soot.util.HashMultiMap.put(Ljava/lang/Object;Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,2)#3
soot.util.HashMultiMap.put(Ljava/lang/Object;Ljava/lang/Object;)Z#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#4
soot.util.HashMultiMap.put(Ljava/lang/Object;Ljava/lang/Object;)Z#Return(I)#5
soot.FastHierarchy.<init>()V#Pop(1)#89
soot.Modifier.isInterface(I)Z#Constant(I,1)#5
soot.Modifier.isInterface(I)Z#Return(I)#6
soot.FastHierarchy.<init>()V#LocalLoad(Ljava/lang/Object;,0)#77
soot.FastHierarchy.<init>()V#Get(Lsoot/util/MultiMap;,NONSTATIC,Lsoot/FastHierarchy;,interfaceToSubinterfaces)#78
soot.FastHierarchy.<init>()V#LocalLoad(Ljava/lang/Object;,4)#79
soot.FastHierarchy.<init>()V#LocalLoad(Ljava/lang/Object;,2)#80
soot.FastHierarchy.<init>()V#Invoke(INTERFACE,Lsoot/util/MultiMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Z)#81
soot.FastHierarchy.<init>()V#Pop(1)#82
soot.FastHierarchy.<init>()V#Goto(90)#83
soot.FastHierarchy.<init>()V#Goto(94)#49
soot.FastHierarchy.<init>()V#LocalLoad(Ljava/lang/Object;,0)#98
soot.FastHierarchy.<init>()V#Constant(I,0)#99
soot.FastHierarchy.<init>()V#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#100
soot.FastHierarchy.<init>()V#Constant(Ljava/lang/String;,"java.lang.Object")#101
soot.FastHierarchy.<init>()V#Invoke(VIRTUAL,Lsoot/Scene;,getSootClass,(Ljava/lang/String;)Lsoot/SootClass;)#102
soot.FastHierarchy.<init>()V#Invoke(VIRTUAL,Lsoot/FastHierarchy;,dfsVisit,(ILsoot/SootClass;)I)#103
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#New(Lsoot/FastHierarchy$Interval;,0)#0
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#Dup(1,0)#1
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#LocalLoad(Ljava/lang/Object;,0)#2
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#Invoke(SPECIAL,Lsoot/FastHierarchy$Interval;,<init>,(Lsoot/FastHierarchy;)V)#3
soot.FastHierarchy$Interval.<init>(Lsoot/FastHierarchy;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.FastHierarchy$Interval.<init>(Lsoot/FastHierarchy;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.FastHierarchy$Interval.<init>(Lsoot/FastHierarchy;)V#Put(Lsoot/FastHierarchy;,NONSTATIC,Lsoot/FastHierarchy$Interval;,this$0)#2
soot.FastHierarchy$Interval.<init>(Lsoot/FastHierarchy;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.FastHierarchy$Interval.<init>(Lsoot/FastHierarchy;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#4
soot.FastHierarchy$Interval.<init>(Lsoot/FastHierarchy;)V#Return(V)#5
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#LocalStore(Ljava/lang/Object;,3)#4
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#LocalLoad(Ljava/lang/Object;,3)#5
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#LocalLoad(I,1)#6
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#LocalLoad(I,1)#7
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#Constant(I,1)#8
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#BinaryOp(I,add)#9
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#LocalStore(I,1)#10
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#Put(I,NONSTATIC,Lsoot/FastHierarchy$Interval;,lower)#11
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#LocalLoad(Ljava/lang/Object;,0)#12
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#Get(Ljava/util/Map;,NONSTATIC,Lsoot/FastHierarchy;,classToSubclasses)#13
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#LocalLoad(Ljava/lang/Object;,2)#14
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#15
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#CheckCast(Ljava/util/Collection;)#16
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#LocalStore(Ljava/lang/Object;,4)#17
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#LocalLoad(Ljava/lang/Object;,4)#18
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#Constant(L;,null)#19
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#ConditionalBranch(Ljava/lang/Object;,eq,43)#20
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#LocalLoad(Ljava/lang/Object;,4)#21
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#Invoke(INTERFACE,Ljava/util/Collection;,iterator,()Ljava/util/Iterator;)#22
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#LocalStore(Ljava/lang/Object;,5)#23
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#Goto(39)#24
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#LocalLoad(Ljava/lang/Object;,5)#39
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#40
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#Constant(I,0)#41
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#ConditionalBranch(I,ne,25)#42
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#LocalLoad(Ljava/lang/Object;,5)#25
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#26
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#CheckCast(Lsoot/SootClass;)#27
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#LocalStore(Ljava/lang/Object;,6)#28
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#LocalLoad(Ljava/lang/Object;,6)#29
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#Invoke(VIRTUAL,Lsoot/SootClass;,isInterface,()Z)#30
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#Constant(I,0)#31
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#ConditionalBranch(I,eq,34)#32
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#LocalLoad(Ljava/lang/Object;,0)#34
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#LocalLoad(I,1)#35
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#LocalLoad(Ljava/lang/Object;,6)#36
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#Invoke(VIRTUAL,Lsoot/FastHierarchy;,dfsVisit,(ILsoot/SootClass;)I)#37
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#LocalLoad(Ljava/lang/Object;,3)#43
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#LocalLoad(I,1)#44
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#LocalLoad(I,1)#45
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#Constant(I,1)#46
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#BinaryOp(I,add)#47
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#LocalStore(I,1)#48
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#Put(I,NONSTATIC,Lsoot/FastHierarchy$Interval;,upper)#49
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#LocalLoad(Ljava/lang/Object;,2)#50
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#Invoke(VIRTUAL,Lsoot/SootClass;,isInterface,()Z)#51
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#Constant(I,0)#52
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#ConditionalBranch(I,eq,65)#53
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#LocalLoad(Ljava/lang/Object;,0)#65
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#Get(Ljava/util/Map;,NONSTATIC,Lsoot/FastHierarchy;,classToInterval)#66
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#LocalLoad(Ljava/lang/Object;,2)#67
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#68
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#Constant(I,0)#69
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#ConditionalBranch(I,ne,77)#70
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#LocalLoad(Ljava/lang/Object;,0)#71
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#Get(Ljava/util/Map;,NONSTATIC,Lsoot/FastHierarchy;,classToInterval)#72
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#LocalLoad(Ljava/lang/Object;,2)#73
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#LocalLoad(Ljava/lang/Object;,3)#74
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#75
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#Pop(1)#76
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#LocalLoad(I,1)#77
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#Return(I)#78
soot.FastHierarchy.dfsVisit(ILsoot/SootClass;)I#LocalStore(I,1)#38
soot.FastHierarchy.<init>()V#Pop(1)#104
soot.FastHierarchy.<init>()V#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#105
soot.FastHierarchy.<init>()V#Invoke(VIRTUAL,Lsoot/Scene;,getPhantomClasses,()Lsoot/util/Chain;)#106
soot.FastHierarchy.<init>()V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#107
soot.FastHierarchy.<init>()V#LocalStore(Ljava/lang/Object;,2)#108
soot.FastHierarchy.<init>()V#Goto(123)#109
soot.FastHierarchy.<init>()V#LocalLoad(Ljava/lang/Object;,2)#123
soot.FastHierarchy.<init>()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#124
soot.FastHierarchy.<init>()V#Constant(I,0)#125
soot.FastHierarchy.<init>()V#ConditionalBranch(I,ne,110)#126
soot.FastHierarchy.<init>()V#Return(V)#127
soot.Scene.getOrMakeFastHierarchy()Lsoot/FastHierarchy;#Invoke(VIRTUAL,Lsoot/Scene;,setFastHierarchy,(Lsoot/FastHierarchy;)V)#8
soot.Scene.setFastHierarchy(Lsoot/FastHierarchy;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.setFastHierarchy(Lsoot/FastHierarchy;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.Scene.setFastHierarchy(Lsoot/FastHierarchy;)V#Put(Lsoot/FastHierarchy;,NONSTATIC,Lsoot/Scene;,activeFastHierarchy)#2
soot.Scene.setFastHierarchy(Lsoot/FastHierarchy;)V#Return(V)#3
soot.Scene.getOrMakeFastHierarchy()Lsoot/FastHierarchy;#LocalLoad(Ljava/lang/Object;,0)#9
soot.Scene.getOrMakeFastHierarchy()Lsoot/FastHierarchy;#Invoke(VIRTUAL,Lsoot/Scene;,getFastHierarchy,()Lsoot/FastHierarchy;)#10
soot.Scene.getFastHierarchy()Lsoot/FastHierarchy;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Scene.getFastHierarchy()Lsoot/FastHierarchy;#Invoke(VIRTUAL,Lsoot/Scene;,hasFastHierarchy,()Z)#1
soot.Scene.hasFastHierarchy()Z#Constant(I,1)#4
soot.Scene.hasFastHierarchy()Z#Return(I)#5
soot.Scene.getFastHierarchy()Lsoot/FastHierarchy;#Constant(I,0)#2
soot.Scene.getFastHierarchy()Lsoot/FastHierarchy;#ConditionalBranch(I,ne,9)#3
soot.Scene.getFastHierarchy()Lsoot/FastHierarchy;#LocalLoad(Ljava/lang/Object;,0)#9
soot.Scene.getFastHierarchy()Lsoot/FastHierarchy;#Get(Lsoot/FastHierarchy;,NONSTATIC,Lsoot/Scene;,activeFastHierarchy)#10
soot.Scene.getFastHierarchy()Lsoot/FastHierarchy;#Return(Ljava/lang/Object;)#11
soot.Scene.getOrMakeFastHierarchy()Lsoot/FastHierarchy;#Return(Ljava/lang/Object;)#11
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,1)#53
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,0)#54
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Invoke(VIRTUAL,Lsoot/FastHierarchy;,canStoreType,(Lsoot/Type;Lsoot/Type;)Z)#55
soot.FastHierarchy.canStoreType(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,1)#0
soot.FastHierarchy.canStoreType(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,2)#1
soot.FastHierarchy.canStoreType(Lsoot/Type;Lsoot/Type;)Z#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#2
soot.FastHierarchy.canStoreType(Lsoot/Type;Lsoot/Type;)Z#Constant(I,0)#3
soot.FastHierarchy.canStoreType(Lsoot/Type;Lsoot/Type;)Z#ConditionalBranch(I,eq,7)#4
soot.FastHierarchy.canStoreType(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,2)#7
soot.FastHierarchy.canStoreType(Lsoot/Type;Lsoot/Type;)Z#Instanceof(Lsoot/NullType;)#8
soot.FastHierarchy.canStoreType(Lsoot/Type;Lsoot/Type;)Z#Constant(I,0)#9
soot.FastHierarchy.canStoreType(Lsoot/Type;Lsoot/Type;)Z#ConditionalBranch(I,eq,13)#10
soot.FastHierarchy.canStoreType(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,1)#13
soot.FastHierarchy.canStoreType(Lsoot/Type;Lsoot/Type;)Z#Instanceof(Lsoot/NullType;)#14
soot.FastHierarchy.canStoreType(Lsoot/Type;Lsoot/Type;)Z#Constant(I,0)#15
soot.FastHierarchy.canStoreType(Lsoot/Type;Lsoot/Type;)Z#ConditionalBranch(I,eq,20)#16
soot.FastHierarchy.canStoreType(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,1)#20
soot.FastHierarchy.canStoreType(Lsoot/Type;Lsoot/Type;)Z#Instanceof(Lsoot/RefType;)#21
soot.FastHierarchy.canStoreType(Lsoot/Type;Lsoot/Type;)Z#Constant(I,0)#22
soot.FastHierarchy.canStoreType(Lsoot/Type;Lsoot/Type;)Z#ConditionalBranch(I,eq,39)#23
soot.FastHierarchy.canStoreType(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,2)#24
soot.FastHierarchy.canStoreType(Lsoot/Type;Lsoot/Type;)Z#Instanceof(Lsoot/RefType;)#25
soot.FastHierarchy.canStoreType(Lsoot/Type;Lsoot/Type;)Z#Constant(I,0)#26
soot.FastHierarchy.canStoreType(Lsoot/Type;Lsoot/Type;)Z#ConditionalBranch(I,eq,37)#27
soot.FastHierarchy.canStoreType(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,0)#28
soot.FastHierarchy.canStoreType(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,1)#29
soot.FastHierarchy.canStoreType(Lsoot/Type;Lsoot/Type;)Z#CheckCast(Lsoot/RefType;)#30
soot.FastHierarchy.canStoreType(Lsoot/Type;Lsoot/Type;)Z#Invoke(VIRTUAL,Lsoot/RefType;,getSootClass,()Lsoot/SootClass;)#31
soot.FastHierarchy.canStoreType(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,2)#32
soot.FastHierarchy.canStoreType(Lsoot/Type;Lsoot/Type;)Z#CheckCast(Lsoot/RefType;)#33
soot.FastHierarchy.canStoreType(Lsoot/Type;Lsoot/Type;)Z#Invoke(VIRTUAL,Lsoot/RefType;,getSootClass,()Lsoot/SootClass;)#34
soot.FastHierarchy.canStoreType(Lsoot/Type;Lsoot/Type;)Z#Invoke(VIRTUAL,Lsoot/FastHierarchy;,canStoreClass,(Lsoot/SootClass;Lsoot/SootClass;)Z)#35
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#LocalLoad(Ljava/lang/Object;,2)#0
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#Constant(I,1)#1
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#Invoke(VIRTUAL,Lsoot/SootClass;,checkLevel,(I)V)#2
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#LocalLoad(Ljava/lang/Object;,1)#3
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#Constant(I,1)#4
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#Invoke(VIRTUAL,Lsoot/SootClass;,checkLevel,(I)V)#5
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#LocalLoad(Ljava/lang/Object;,0)#6
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#Get(Ljava/util/Map;,NONSTATIC,Lsoot/FastHierarchy;,classToInterval)#7
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#LocalLoad(Ljava/lang/Object;,2)#8
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#9
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#CheckCast(Lsoot/FastHierarchy$Interval;)#10
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#LocalStore(Ljava/lang/Object;,3)#11
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#LocalLoad(Ljava/lang/Object;,0)#12
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#Get(Ljava/util/Map;,NONSTATIC,Lsoot/FastHierarchy;,classToInterval)#13
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#LocalLoad(Ljava/lang/Object;,1)#14
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#15
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#CheckCast(Lsoot/FastHierarchy$Interval;)#16
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#LocalStore(Ljava/lang/Object;,4)#17
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#LocalLoad(Ljava/lang/Object;,3)#18
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#Constant(L;,null)#19
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#ConditionalBranch(Ljava/lang/Object;,eq,28)#20
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#LocalLoad(Ljava/lang/Object;,4)#21
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#Constant(L;,null)#22
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#ConditionalBranch(Ljava/lang/Object;,eq,28)#23
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#LocalLoad(Ljava/lang/Object;,3)#24
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#LocalLoad(Ljava/lang/Object;,4)#25
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#Invoke(VIRTUAL,Lsoot/FastHierarchy$Interval;,isSubrange,(Lsoot/FastHierarchy$Interval;)Z)#26
soot.FastHierarchy$Interval.isSubrange(Lsoot/FastHierarchy$Interval;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.FastHierarchy$Interval.isSubrange(Lsoot/FastHierarchy$Interval;)Z#Get(I,NONSTATIC,Lsoot/FastHierarchy$Interval;,lower)#1
soot.FastHierarchy$Interval.isSubrange(Lsoot/FastHierarchy$Interval;)Z#LocalLoad(Ljava/lang/Object;,1)#2
soot.FastHierarchy$Interval.isSubrange(Lsoot/FastHierarchy$Interval;)Z#Get(I,NONSTATIC,Lsoot/FastHierarchy$Interval;,lower)#3
soot.FastHierarchy$Interval.isSubrange(Lsoot/FastHierarchy$Interval;)Z#ConditionalBranch(I,le,7)#4
soot.FastHierarchy$Interval.isSubrange(Lsoot/FastHierarchy$Interval;)Z#LocalLoad(Ljava/lang/Object;,0)#7
soot.FastHierarchy$Interval.isSubrange(Lsoot/FastHierarchy$Interval;)Z#Get(I,NONSTATIC,Lsoot/FastHierarchy$Interval;,upper)#8
soot.FastHierarchy$Interval.isSubrange(Lsoot/FastHierarchy$Interval;)Z#LocalLoad(Ljava/lang/Object;,1)#9
soot.FastHierarchy$Interval.isSubrange(Lsoot/FastHierarchy$Interval;)Z#Get(I,NONSTATIC,Lsoot/FastHierarchy$Interval;,upper)#10
soot.FastHierarchy$Interval.isSubrange(Lsoot/FastHierarchy$Interval;)Z#ConditionalBranch(I,ge,14)#11
soot.FastHierarchy$Interval.isSubrange(Lsoot/FastHierarchy$Interval;)Z#Constant(I,1)#14
soot.FastHierarchy$Interval.isSubrange(Lsoot/FastHierarchy$Interval;)Z#Return(I)#15
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#Return(I)#27
soot.FastHierarchy.canStoreType(Lsoot/Type;Lsoot/Type;)Z#Return(I)#36
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Return(I)#56
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor(Lsoot/Type;Lsoot/Type;)Z#Return(I)#3
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#Constant(I,0)#13
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#ConditionalBranch(I,eq,17)#14
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#LocalLoad(Ljava/lang/Object;,1)#15
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#Return(Ljava/lang/Object;)#16
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#Invoke(INTERFACE,Lsoot/jimple/InstanceInvokeExpr;,setBase,(Lsoot/Value;)V)#20
soot.jimple.internal.AbstractInstanceInvokeExpr.setBase(Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.AbstractInstanceInvokeExpr.setBase(Lsoot/Value;)V#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/AbstractInstanceInvokeExpr;,baseBox)#1
soot.jimple.internal.AbstractInstanceInvokeExpr.setBase(Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.internal.AbstractInstanceInvokeExpr.setBase(Lsoot/Value;)V#Invoke(INTERFACE,Lsoot/ValueBox;,setValue,(Lsoot/Value;)V)#3
soot.jimple.internal.AbstractInstanceInvokeExpr.setBase(Lsoot/Value;)V#Return(V)#4
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#Constant(I,0)#21
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#LocalStore(I,4)#22
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#Goto(41)#23
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#LocalLoad(I,4)#41
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#LocalLoad(Ljava/lang/Object;,1)#42
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#Invoke(INTERFACE,Lsoot/jimple/InvokeExpr;,getArgCount,()I)#43
soot.jimple.internal.AbstractInvokeExpr.getArgCount()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.AbstractInvokeExpr.getArgCount()I#Get([Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/AbstractInvokeExpr;,argBoxes)#1
soot.jimple.internal.AbstractInvokeExpr.getArgCount()I#ArrayLength()#2
soot.jimple.internal.AbstractInvokeExpr.getArgCount()I#Return(I)#3
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#ConditionalBranch(I,lt,24)#44
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#Return(V)#45
soot.jimple.toolkits.typing.fast.UseChecker.caseInvokeStmt(Lsoot/jimple/InvokeStmt;)V#Return(V)#5
soot.jimple.internal.JInvokeStmt.apply(Lsoot/util/Switch;)V#Return(V)#4
soot.jimple.internal.JReturnVoidStmt.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.jimple.internal.JReturnVoidStmt.apply(Lsoot/util/Switch;)V#CheckCast(Lsoot/jimple/StmtSwitch;)#1
soot.jimple.internal.JReturnVoidStmt.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.internal.JReturnVoidStmt.apply(Lsoot/util/Switch;)V#Invoke(INTERFACE,Lsoot/jimple/StmtSwitch;,caseReturnVoidStmt,(Lsoot/jimple/ReturnVoidStmt;)V)#3
soot.jimple.toolkits.typing.fast.UseChecker.caseReturnVoidStmt(Lsoot/jimple/ReturnVoidStmt;)V#Return(V)#0
soot.jimple.internal.JReturnVoidStmt.apply(Lsoot/util/Switch;)V#Return(V)#4
soot.jimple.toolkits.typing.fast.UseChecker.check(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IUseVisitor;)V#Return(V)#40
soot.jimple.toolkits.typing.fast.TypeResolver.insertCasts(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;Z)I#LocalLoad(Ljava/lang/Object;,5)#20
soot.jimple.toolkits.typing.fast.TypeResolver.insertCasts(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;Z)I#Invoke(VIRTUAL,Lsoot/jimple/toolkits/typing/fast/TypeResolver$CastInsertionUseVisitor;,getCount,()I)#21
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.getCount()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.getCount()I#Get(I,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver$CastInsertionUseVisitor;,count)#1
soot.jimple.toolkits.typing.fast.TypeResolver$CastInsertionUseVisitor.getCount()I#Return(I)#2
soot.jimple.toolkits.typing.fast.TypeResolver.insertCasts(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;Z)I#Return(I)#22
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalStore(I,8)#21
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,3)#22
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#Constant(I,0)#23
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#ArrayLoad(I)#24
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#Constant(I,-1)#25
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#ConditionalBranch(I,eq,32)#26
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,3)#32
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#Constant(I,0)#33
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(I,8)#34
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#ArrayStore(I)#35
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,6)#36
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalStore(Ljava/lang/Object;,4)#37
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#Constant(I,1)#38
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalStore(I,5)#39
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(I,5)#44
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#Constant(I,0)#45
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#ConditionalBranch(I,eq,49)#46
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,4)#47
soot.jimple.toolkits.typing.fast.TypeResolver.minCasts(Ljava/util/Collection;Lsoot/jimple/toolkits/typing/fast/IHierarchy;[I)Lsoot/jimple/toolkits/typing/fast/Typing;#Return(Ljava/lang/Object;)#48
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalStore(Ljava/lang/Object;,6)#33
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalLoad(Ljava/lang/Object;,5)#34
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Constant(I,0)#35
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#ArrayLoad(I)#36
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Constant(I,0)#37
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#ConditionalBranch(I,eq,58)#38
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalLoad(Ljava/lang/Object;,0)#58
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalLoad(Ljava/lang/Object;,6)#59
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalLoad(Ljava/lang/Object;,3)#60
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Constant(I,0)#61
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Invoke(SPECIAL,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,insertCasts,(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IHierarchy;Z)I)#62
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Pop(1)#63
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalLoad(Ljava/lang/Object;,0)#64
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Get(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,jb)#65
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Invoke(VIRTUAL,Lsoot/jimple/JimpleBody;,getLocals,()Lsoot/util/Chain;)#66
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#67
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalStore(Ljava/lang/Object;,8)#68
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Goto(92)#69
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalLoad(Ljava/lang/Object;,8)#92
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#93
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Constant(I,0)#94
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#ConditionalBranch(I,ne,70)#95
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalLoad(Ljava/lang/Object;,8)#70
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#71
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#CheckCast(Lsoot/Local;)#72
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalStore(Ljava/lang/Object;,7)#73
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalLoad(Ljava/lang/Object;,6)#74
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalLoad(Ljava/lang/Object;,7)#75
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Invoke(VIRTUAL,Lsoot/jimple/toolkits/typing/fast/Typing;,get,(Lsoot/Local;)Lsoot/Type;)#76
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalStore(Ljava/lang/Object;,9)#77
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalLoad(Ljava/lang/Object;,9)#78
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Instanceof(Lsoot/IntegerType;)#79
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Constant(I,0)#80
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#ConditionalBranch(I,eq,89)#81
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalLoad(Ljava/lang/Object;,7)#89
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalLoad(Ljava/lang/Object;,9)#90
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Invoke(INTERFACE,Lsoot/Local;,setType,(Lsoot/Type;)V)#91
soot.jimple.internal.JimpleLocal.setType(Lsoot/Type;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JimpleLocal.setType(Lsoot/Type;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.jimple.internal.JimpleLocal.setType(Lsoot/Type;)V#Put(Lsoot/Type;,NONSTATIC,Lsoot/jimple/internal/JimpleLocal;,type)#2
soot.jimple.internal.JimpleLocal.setType(Lsoot/Type;)V#Return(V)#3
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalLoad(Ljava/lang/Object;,0)#96
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalLoad(Ljava/lang/Object;,6)#97
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Invoke(SPECIAL,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,typePromotion,(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;)#98
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#New(Lsoot/jimple/toolkits/typing/fast/AugEvalFunction;,0)#0
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Dup(1,0)#1
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Get(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,jb)#3
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Invoke(SPECIAL,Lsoot/jimple/toolkits/typing/fast/AugEvalFunction;,<init>,(Lsoot/jimple/JimpleBody;)V)#4
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalStore(Ljava/lang/Object;,2)#5
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#New(Lsoot/jimple/toolkits/typing/fast/AugHierarchy;,0)#6
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Dup(1,0)#7
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Invoke(SPECIAL,Lsoot/jimple/toolkits/typing/fast/AugHierarchy;,<init>,()V)#8
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalStore(Ljava/lang/Object;,3)#9
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#New(Lsoot/jimple/toolkits/typing/fast/UseChecker;,0)#10
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Dup(1,0)#11
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,0)#12
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Get(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,jb)#13
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Invoke(SPECIAL,Lsoot/jimple/toolkits/typing/fast/UseChecker;,<init>,(Lsoot/jimple/JimpleBody;)V)#14
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalStore(Ljava/lang/Object;,4)#15
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#New(Lsoot/jimple/toolkits/typing/fast/TypeResolver$TypePromotionUseVisitor;,0)#16
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Dup(1,0)#17
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,0)#18
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,0)#19
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Get(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,jb)#20
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,1)#21
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Invoke(SPECIAL,Lsoot/jimple/toolkits/typing/fast/TypeResolver$TypePromotionUseVisitor;,<init>,(Lsoot/jimple/toolkits/typing/fast/TypeResolver;Lsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;)V)#22
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;Lsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;Lsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;Lsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;)V#Put(Lsoot/jimple/toolkits/typing/fast/TypeResolver;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver$TypePromotionUseVisitor;,this$0)#2
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;Lsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;Lsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#4
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;Lsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;Lsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;)V#LocalLoad(Ljava/lang/Object;,2)#6
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;Lsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;)V#Put(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver$TypePromotionUseVisitor;,jb)#7
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;Lsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;Lsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;)V#LocalLoad(Ljava/lang/Object;,3)#9
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;Lsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;)V#Put(Lsoot/jimple/toolkits/typing/fast/Typing;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver$TypePromotionUseVisitor;,tg)#10
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;Lsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;Lsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;)V#Constant(I,0)#12
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;Lsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;)V#Put(Z,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver$TypePromotionUseVisitor;,fail)#13
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;Lsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;)V#LocalLoad(Ljava/lang/Object;,0)#14
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;Lsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;)V#Constant(I,0)#15
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;Lsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;)V#Put(Z,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver$TypePromotionUseVisitor;,typingChanged)#16
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.<init>(Lsoot/jimple/toolkits/typing/fast/TypeResolver;Lsoot/jimple/JimpleBody;Lsoot/jimple/toolkits/typing/fast/Typing;)V#Return(V)#17
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalStore(Ljava/lang/Object;,5)#23
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,0)#24
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,1)#25
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,2)#26
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,3)#27
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Invoke(SPECIAL,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,applyAssignmentConstraints,(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;)#28
soot.jimple.toolkits.typing.fast.AugHierarchy.lcas(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,1)#0
soot.jimple.toolkits.typing.fast.AugHierarchy.lcas(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,2)#1
soot.jimple.toolkits.typing.fast.AugHierarchy.lcas(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;#Invoke(STATIC,Lsoot/jimple/toolkits/typing/fast/AugHierarchy;,lcas_,(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;)#2
soot.jimple.toolkits.typing.fast.AugHierarchy.lcas_(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.AugHierarchy.lcas_(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,1)#1
soot.jimple.toolkits.typing.fast.AugHierarchy.lcas_(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;#Invoke(STATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,typesEqual,(Lsoot/Type;Lsoot/Type;)Z)#2
soot.RefType.equals(Ljava/lang/Object;)Z#Constant(I,1)#12
soot.RefType.equals(Ljava/lang/Object;)Z#Return(I)#13
soot.jimple.toolkits.typing.fast.AugHierarchy.lcas_(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;#Constant(I,0)#3
soot.jimple.toolkits.typing.fast.AugHierarchy.lcas_(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;#ConditionalBranch(I,eq,10)#4
soot.jimple.toolkits.typing.fast.AugHierarchy.lcas_(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;#New(Lsoot/jimple/toolkits/typing/fast/SingletonList;,0)#5
soot.jimple.toolkits.typing.fast.AugHierarchy.lcas_(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;#Dup(1,0)#6
soot.jimple.toolkits.typing.fast.AugHierarchy.lcas_(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,0)#7
soot.jimple.toolkits.typing.fast.AugHierarchy.lcas_(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;#Invoke(SPECIAL,Lsoot/jimple/toolkits/typing/fast/SingletonList;,<init>,(Ljava/lang/Object;)V)#8
soot.jimple.toolkits.typing.fast.AugHierarchy.lcas_(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;#Return(Ljava/lang/Object;)#9
soot.jimple.toolkits.typing.fast.AugHierarchy.lcas(Lsoot/Type;Lsoot/Type;)Ljava/util/Collection;#Return(Ljava/lang/Object;)#3
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Constant(I,1)#132
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#LocalStore(I,13)#133
soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IEvalFunction;Lsoot/jimple/toolkits/typing/fast/IHierarchy;)Ljava/util/Collection;#Goto(182)#134
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalStore(Ljava/lang/Object;,6)#29
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,6)#30
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Invoke(INTERFACE,Ljava/util/Collection;,isEmpty,()Z)#31
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Constant(I,0)#32
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#ConditionalBranch(I,eq,36)#33
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,6)#36
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Invoke(INTERFACE,Ljava/util/Collection;,iterator,()Ljava/util/Iterator;)#37
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#38
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#CheckCast(Lsoot/jimple/toolkits/typing/fast/Typing;)#39
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalStore(Ljava/lang/Object;,1)#40
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,5)#41
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Constant(I,0)#42
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Put(Z,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver$TypePromotionUseVisitor;,typingChanged)#43
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,4)#44
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,1)#45
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,5)#46
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Invoke(VIRTUAL,Lsoot/jimple/toolkits/typing/fast/UseChecker;,check,(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/jimple/toolkits/typing/fast/IUseVisitor;)V)#47
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.finish()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.finish()Z#Get(Z,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver$TypePromotionUseVisitor;,typingChanged)#1
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.finish()Z#Constant(I,0)#2
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.finish()Z#ConditionalBranch(I,ne,10)#3
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.finish()Z#LocalLoad(Ljava/lang/Object;,0)#4
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.finish()Z#Get(Z,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver$TypePromotionUseVisitor;,fail)#5
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.finish()Z#Constant(I,0)#6
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.finish()Z#ConditionalBranch(I,ne,10)#7
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.finish()Z#Constant(I,0)#8
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.finish()Z#Return(I)#9
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#Invoke(VIRTUAL,Lsoot/jimple/toolkits/typing/fast/TypeResolver$TypePromotionUseVisitor;,finish,()Z)#1
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#Constant(I,0)#2
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#ConditionalBranch(I,eq,6)#3
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#LocalLoad(Ljava/lang/Object;,0)#6
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#Get(Lsoot/jimple/toolkits/typing/fast/Typing;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver$TypePromotionUseVisitor;,tg)#7
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#LocalLoad(Ljava/lang/Object;,1)#8
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#LocalLoad(Ljava/lang/Object;,3)#9
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#LocalLoad(Ljava/lang/Object;,0)#10
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#Get(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver$TypePromotionUseVisitor;,jb)#11
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#Invoke(STATIC,Lsoot/jimple/toolkits/typing/fast/AugEvalFunction;,eval_,(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;)#12
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#LocalStore(Ljava/lang/Object;,4)#13
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#LocalLoad(Ljava/lang/Object;,2)#14
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#LocalLoad(Ljava/lang/Object;,4)#15
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#Invoke(STATIC,Lsoot/jimple/toolkits/typing/fast/AugHierarchy;,ancestor_,(Lsoot/Type;Lsoot/Type;)Z)#16
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,1)#1
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Invoke(STATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,typesEqual,(Lsoot/Type;Lsoot/Type;)Z)#2
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Constant(I,0)#3
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#ConditionalBranch(I,eq,7)#4
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,0)#7
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Instanceof(Lsoot/jimple/toolkits/typing/fast/Integer1Type;)#8
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Constant(I,0)#9
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#ConditionalBranch(I,eq,19)#10
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,0)#19
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Instanceof(Lsoot/BooleanType;)#20
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Constant(I,0)#21
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#ConditionalBranch(I,eq,35)#22
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,0)#35
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Instanceof(Lsoot/jimple/toolkits/typing/fast/Integer127Type;)#36
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Constant(I,0)#37
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#ConditionalBranch(I,eq,51)#38
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,0)#51
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Instanceof(Lsoot/ByteType;)#52
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Constant(I,0)#53
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#ConditionalBranch(I,ne,59)#54
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,0)#55
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Instanceof(Lsoot/jimple/toolkits/typing/fast/Integer32767Type;)#56
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Constant(I,0)#57
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#ConditionalBranch(I,eq,75)#58
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,0)#75
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Instanceof(Lsoot/CharType;)#76
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Constant(I,0)#77
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#ConditionalBranch(I,eq,99)#78
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,0)#99
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Instanceof(Lsoot/ShortType;)#100
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Constant(I,0)#101
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#ConditionalBranch(I,eq,127)#102
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,0)#127
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Instanceof(Lsoot/IntType;)#128
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Constant(I,0)#129
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#ConditionalBranch(I,eq,163)#130
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,1)#163
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Instanceof(Lsoot/IntegerType;)#164
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Constant(I,0)#165
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#ConditionalBranch(I,eq,169)#166
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,0)#169
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,1)#170
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Invoke(STATIC,Lsoot/jimple/toolkits/typing/fast/BytecodeHierarchy;,ancestor_,(Lsoot/Type;Lsoot/Type;)Z)#171
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Return(I)#172
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#Constant(I,0)#17
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#ConditionalBranch(I,ne,23)#18
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#LocalLoad(Ljava/lang/Object;,1)#23
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#Instanceof(Lsoot/Local;)#24
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#Constant(I,0)#25
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#ConditionalBranch(I,eq,66)#26
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#LocalLoad(Ljava/lang/Object;,4)#27
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#Instanceof(Lsoot/jimple/toolkits/typing/fast/Integer1Type;)#28
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#Constant(I,0)#29
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#ConditionalBranch(I,ne,39)#30
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#LocalLoad(Ljava/lang/Object;,4)#31
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#Instanceof(Lsoot/jimple/toolkits/typing/fast/Integer127Type;)#32
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#Constant(I,0)#33
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#ConditionalBranch(I,ne,39)#34
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#LocalLoad(Ljava/lang/Object;,4)#35
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#Instanceof(Lsoot/jimple/toolkits/typing/fast/Integer32767Type;)#36
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#Constant(I,0)#37
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#ConditionalBranch(I,eq,66)#38
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#LocalLoad(Ljava/lang/Object;,1)#66
soot.jimple.toolkits.typing.fast.TypeResolver$TypePromotionUseVisitor.visit(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;#Return(Ljava/lang/Object;)#67
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,5)#48
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Get(Z,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver$TypePromotionUseVisitor;,fail)#49
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Constant(I,0)#50
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#ConditionalBranch(I,eq,54)#51
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,5)#54
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Get(Z,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver$TypePromotionUseVisitor;,typingChanged)#55
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Constant(I,0)#56
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#ConditionalBranch(I,ne,24)#57
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,0)#58
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Get(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,jb)#59
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Invoke(VIRTUAL,Lsoot/jimple/JimpleBody;,getLocals,()Lsoot/util/Chain;)#60
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#61
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalStore(Ljava/lang/Object;,7)#62
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Goto(111)#63
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,7)#111
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#112
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Constant(I,0)#113
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#ConditionalBranch(I,ne,64)#114
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,7)#64
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#65
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#CheckCast(Lsoot/Local;)#66
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalStore(Ljava/lang/Object;,6)#67
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,1)#68
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,6)#69
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Invoke(VIRTUAL,Lsoot/jimple/toolkits/typing/fast/Typing;,get,(Lsoot/Local;)Lsoot/Type;)#70
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalStore(Ljava/lang/Object;,8)#71
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,8)#72
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Instanceof(Lsoot/jimple/toolkits/typing/fast/Integer1Type;)#73
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Constant(I,0)#74
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#ConditionalBranch(I,eq,85)#75
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,8)#85
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Instanceof(Lsoot/jimple/toolkits/typing/fast/Integer127Type;)#86
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Constant(I,0)#87
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#ConditionalBranch(I,eq,98)#88
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,8)#98
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Instanceof(Lsoot/jimple/toolkits/typing/fast/Integer32767Type;)#99
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Constant(I,0)#100
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#ConditionalBranch(I,eq,111)#101
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#LocalLoad(Ljava/lang/Object;,1)#115
soot.jimple.toolkits.typing.fast.TypeResolver.typePromotion(Lsoot/jimple/toolkits/typing/fast/Typing;)Lsoot/jimple/toolkits/typing/fast/Typing;#Return(Ljava/lang/Object;)#116
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalStore(Ljava/lang/Object;,6)#99
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalLoad(Ljava/lang/Object;,6)#100
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Constant(L;,null)#101
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#ConditionalBranch(Ljava/lang/Object;,ne,107)#102
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalLoad(Ljava/lang/Object;,0)#107
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Get(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,jb)#108
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Invoke(VIRTUAL,Lsoot/jimple/JimpleBody;,getLocals,()Lsoot/util/Chain;)#109
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#110
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalStore(Ljava/lang/Object;,8)#111
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Goto(122)#112
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalLoad(Ljava/lang/Object;,8)#122
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#123
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Constant(I,0)#124
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#ConditionalBranch(I,ne,113)#125
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalLoad(Ljava/lang/Object;,8)#113
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#114
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#CheckCast(Lsoot/Local;)#115
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalStore(Ljava/lang/Object;,7)#116
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalLoad(Ljava/lang/Object;,7)#117
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalLoad(Ljava/lang/Object;,6)#118
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#LocalLoad(Ljava/lang/Object;,7)#119
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Invoke(VIRTUAL,Lsoot/jimple/toolkits/typing/fast/Typing;,get,(Lsoot/Local;)Lsoot/Type;)#120
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Invoke(INTERFACE,Lsoot/Local;,setType,(Lsoot/Type;)V)#121
soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes()V#Return(V)#126
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/util/Date;,0)#59
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#60
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/Date;,<init>,()V)#61
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,6)#62
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#63
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/Options;,verbose,()Z)#64
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#65
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,99)#66
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#99
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#100
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/jimple/JimpleBody;)#101
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Lsoot/jimple/toolkits/typing/TypeAssigner;,typingFailed,(Lsoot/jimple/JimpleBody;)Z)#102
soot.jimple.toolkits.typing.TypeAssigner.typingFailed(Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,1)#0
soot.jimple.toolkits.typing.TypeAssigner.typingFailed(Lsoot/jimple/JimpleBody;)Z#Invoke(VIRTUAL,Lsoot/jimple/JimpleBody;,getLocals,()Lsoot/util/Chain;)#1
soot.jimple.toolkits.typing.TypeAssigner.typingFailed(Lsoot/jimple/JimpleBody;)Z#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#2
soot.jimple.toolkits.typing.TypeAssigner.typingFailed(Lsoot/jimple/JimpleBody;)Z#LocalStore(Ljava/lang/Object;,2)#3
soot.jimple.toolkits.typing.TypeAssigner.typingFailed(Lsoot/jimple/JimpleBody;)Z#Goto(23)#4
soot.jimple.toolkits.typing.TypeAssigner.typingFailed(Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,2)#23
soot.jimple.toolkits.typing.TypeAssigner.typingFailed(Lsoot/jimple/JimpleBody;)Z#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#24
soot.jimple.toolkits.typing.TypeAssigner.typingFailed(Lsoot/jimple/JimpleBody;)Z#Constant(I,0)#25
soot.jimple.toolkits.typing.TypeAssigner.typingFailed(Lsoot/jimple/JimpleBody;)Z#ConditionalBranch(I,ne,5)#26
soot.jimple.toolkits.typing.TypeAssigner.typingFailed(Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,2)#5
soot.jimple.toolkits.typing.TypeAssigner.typingFailed(Lsoot/jimple/JimpleBody;)Z#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#6
soot.jimple.toolkits.typing.TypeAssigner.typingFailed(Lsoot/jimple/JimpleBody;)Z#CheckCast(Lsoot/Local;)#7
soot.jimple.toolkits.typing.TypeAssigner.typingFailed(Lsoot/jimple/JimpleBody;)Z#LocalStore(Ljava/lang/Object;,3)#8
soot.jimple.toolkits.typing.TypeAssigner.typingFailed(Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,3)#9
soot.jimple.toolkits.typing.TypeAssigner.typingFailed(Lsoot/jimple/JimpleBody;)Z#Invoke(INTERFACE,Lsoot/Local;,getType,()Lsoot/Type;)#10
soot.jimple.internal.JimpleLocal.getType()Lsoot/Type;#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JimpleLocal.getType()Lsoot/Type;#Get(Lsoot/Type;,NONSTATIC,Lsoot/jimple/internal/JimpleLocal;,type)#1
soot.jimple.internal.JimpleLocal.getType()Lsoot/Type;#Return(Ljava/lang/Object;)#2
soot.jimple.toolkits.typing.TypeAssigner.typingFailed(Lsoot/jimple/JimpleBody;)Z#Invoke(STATIC,Lsoot/UnknownType;,v,()Lsoot/UnknownType;)#11
soot.jimple.toolkits.typing.TypeAssigner.typingFailed(Lsoot/jimple/JimpleBody;)Z#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#12
soot.jimple.toolkits.typing.TypeAssigner.typingFailed(Lsoot/jimple/JimpleBody;)Z#Constant(I,0)#13
soot.jimple.toolkits.typing.TypeAssigner.typingFailed(Lsoot/jimple/JimpleBody;)Z#ConditionalBranch(I,ne,21)#14
soot.jimple.toolkits.typing.TypeAssigner.typingFailed(Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,3)#15
soot.jimple.toolkits.typing.TypeAssigner.typingFailed(Lsoot/jimple/JimpleBody;)Z#Invoke(INTERFACE,Lsoot/Local;,getType,()Lsoot/Type;)#16
soot.jimple.toolkits.typing.TypeAssigner.typingFailed(Lsoot/jimple/JimpleBody;)Z#Invoke(STATIC,Lsoot/ErroneousType;,v,()Lsoot/ErroneousType;)#17
soot.ErroneousType.v()Lsoot/ErroneousType;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.ErroneousType.v()Lsoot/ErroneousType;#Invoke(VIRTUAL,Lsoot/G;,soot_ErroneousType,()Lsoot/ErroneousType;)#1
soot.Singletons.soot_ErroneousType()Lsoot/ErroneousType;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_ErroneousType()Lsoot/ErroneousType;#Get(Lsoot/ErroneousType;,NONSTATIC,Lsoot/Singletons;,instance_soot_ErroneousType)#1
soot.Singletons.soot_ErroneousType()Lsoot/ErroneousType;#Constant(L;,null)#2
soot.Singletons.soot_ErroneousType()Lsoot/ErroneousType;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_ErroneousType()Lsoot/ErroneousType;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_ErroneousType()Lsoot/ErroneousType;#New(Lsoot/ErroneousType;,0)#5
soot.Singletons.soot_ErroneousType()Lsoot/ErroneousType;#Dup(1,0)#6
soot.Singletons.soot_ErroneousType()Lsoot/ErroneousType;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_ErroneousType()Lsoot/ErroneousType;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_ErroneousType()Lsoot/ErroneousType;#Invoke(SPECIAL,Lsoot/ErroneousType;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.ErroneousType.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.ErroneousType.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Type;,<init>,()V)#1
soot.ErroneousType.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_ErroneousType()Lsoot/ErroneousType;#Put(Lsoot/ErroneousType;,NONSTATIC,Lsoot/Singletons;,instance_soot_ErroneousType)#10
soot.Singletons.soot_ErroneousType()Lsoot/ErroneousType;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_ErroneousType()Lsoot/ErroneousType;#Get(Lsoot/ErroneousType;,NONSTATIC,Lsoot/Singletons;,instance_soot_ErroneousType)#12
soot.Singletons.soot_ErroneousType()Lsoot/ErroneousType;#Return(Ljava/lang/Object;)#13
soot.ErroneousType.v()Lsoot/ErroneousType;#Return(Ljava/lang/Object;)#2
soot.jimple.toolkits.typing.TypeAssigner.typingFailed(Lsoot/jimple/JimpleBody;)Z#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#18
soot.jimple.toolkits.typing.TypeAssigner.typingFailed(Lsoot/jimple/JimpleBody;)Z#Constant(I,0)#19
soot.jimple.toolkits.typing.TypeAssigner.typingFailed(Lsoot/jimple/JimpleBody;)Z#ConditionalBranch(I,eq,23)#20
soot.jimple.toolkits.typing.TypeAssigner.typingFailed(Lsoot/jimple/JimpleBody;)Z#Constant(I,0)#27
soot.jimple.toolkits.typing.TypeAssigner.typingFailed(Lsoot/jimple/JimpleBody;)Z#Return(I)#28
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#103
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,110)#104
soot.jimple.toolkits.typing.TypeAssigner.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Return(V)#110
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#59
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#60
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Constant(I,0)#61
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#ConditionalBranch(I,eq,66)#62
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#66
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/JBOptions;,use_original_names,()Z)#67
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Constant(I,0)#68
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#ConditionalBranch(I,eq,75)#69
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#75
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"jb.lns")#76
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/PackManager;,getTransform,(Ljava/lang/String;)Lsoot/Transform;)#77
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#78
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Transform;,apply,(Lsoot/Body;)V)#79
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:true only-stack-locals:false ")#47
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#48
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#0
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"only-stack-locals")#1
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/PhaseOptions;,getBoolean,(Ljava/util/Map;Ljava/lang/String;)Z)#2
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(I,4)#3
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#4
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(I,5)#5
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#6
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(I,6)#7
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#8
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(I,7)#9
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#10
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(I,8)#11
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#12
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(I,9)#13
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#14
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(I,10)#15
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#16
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(I,11)#17
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#18
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(I,12)#19
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#20
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Body;,getLocals,()Lsoot/util/Chain;)#21
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#22
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,13)#23
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(319)#24
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,13)#319
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#320
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#321
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,25)#322
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,13)#25
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#26
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/Local;)#27
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,14)#28
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"")#29
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,15)#30
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,14)#31
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Local;,getName,()Ljava/lang/String;)#32
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"$")#33
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/String;,startsWith,(Ljava/lang/String;)Z)#34
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#35
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,40)#36
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(I,4)#40
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#41
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,44)#42
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,14)#44
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Local;,getType,()Lsoot/Type;)#45
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/BooleanType;,v,()Lsoot/BooleanType;)#46
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#47
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#48
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,67)#49
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,14)#67
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Local;,getType,()Lsoot/Type;)#68
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/ByteType;,v,()Lsoot/ByteType;)#69
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#70
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#71
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,90)#72
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,14)#90
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Local;,getType,()Lsoot/Type;)#91
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/ShortType;,v,()Lsoot/ShortType;)#92
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#93
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#94
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,113)#95
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,14)#113
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Local;,getType,()Lsoot/Type;)#114
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/CharType;,v,()Lsoot/CharType;)#115
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#116
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#117
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,136)#118
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,14)#136
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Local;,getType,()Lsoot/Type;)#137
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/IntType;,v,()Lsoot/IntType;)#138
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#139
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#140
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,159)#141
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,14)#159
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Local;,getType,()Lsoot/Type;)#160
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/LongType;,v,()Lsoot/LongType;)#161
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#162
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#163
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,182)#164
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,14)#182
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Local;,getType,()Lsoot/Type;)#183
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/DoubleType;,v,()Lsoot/DoubleType;)#184
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#185
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#186
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,205)#187
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,14)#205
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Local;,getType,()Lsoot/Type;)#206
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/FloatType;,v,()Lsoot/FloatType;)#207
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#208
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#209
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,228)#210
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,14)#228
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Local;,getType,()Lsoot/Type;)#229
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/StmtAddressType;,v,()Lsoot/StmtAddressType;)#230
soot.StmtAddressType.v()Lsoot/StmtAddressType;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.StmtAddressType.v()Lsoot/StmtAddressType;#Invoke(VIRTUAL,Lsoot/G;,soot_StmtAddressType,()Lsoot/StmtAddressType;)#1
soot.Singletons.soot_StmtAddressType()Lsoot/StmtAddressType;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_StmtAddressType()Lsoot/StmtAddressType;#Get(Lsoot/StmtAddressType;,NONSTATIC,Lsoot/Singletons;,instance_soot_StmtAddressType)#1
soot.Singletons.soot_StmtAddressType()Lsoot/StmtAddressType;#Constant(L;,null)#2
soot.Singletons.soot_StmtAddressType()Lsoot/StmtAddressType;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_StmtAddressType()Lsoot/StmtAddressType;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_StmtAddressType()Lsoot/StmtAddressType;#New(Lsoot/StmtAddressType;,0)#5
soot.Singletons.soot_StmtAddressType()Lsoot/StmtAddressType;#Dup(1,0)#6
soot.Singletons.soot_StmtAddressType()Lsoot/StmtAddressType;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_StmtAddressType()Lsoot/StmtAddressType;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_StmtAddressType()Lsoot/StmtAddressType;#Invoke(SPECIAL,Lsoot/StmtAddressType;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.StmtAddressType.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.StmtAddressType.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Type;,<init>,()V)#1
soot.StmtAddressType.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_StmtAddressType()Lsoot/StmtAddressType;#Put(Lsoot/StmtAddressType;,NONSTATIC,Lsoot/Singletons;,instance_soot_StmtAddressType)#10
soot.Singletons.soot_StmtAddressType()Lsoot/StmtAddressType;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_StmtAddressType()Lsoot/StmtAddressType;#Get(Lsoot/StmtAddressType;,NONSTATIC,Lsoot/Singletons;,instance_soot_StmtAddressType)#12
soot.Singletons.soot_StmtAddressType()Lsoot/StmtAddressType;#Return(Ljava/lang/Object;)#13
soot.StmtAddressType.v()Lsoot/StmtAddressType;#Return(Ljava/lang/Object;)#2
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#231
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#232
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,251)#233
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,14)#251
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Local;,getType,()Lsoot/Type;)#252
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/ErroneousType;,v,()Lsoot/ErroneousType;)#253
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#254
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#255
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,263)#256
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,14)#257
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Local;,getType,()Lsoot/Type;)#258
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/UnknownType;,v,()Lsoot/UnknownType;)#259
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#260
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#261
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,280)#262
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,14)#280
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Local;,getType,()Lsoot/Type;)#281
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/NullType;,v,()Lsoot/NullType;)#282
soot.NullType.v()Lsoot/NullType;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.NullType.v()Lsoot/NullType;#Invoke(VIRTUAL,Lsoot/G;,soot_NullType,()Lsoot/NullType;)#1
soot.Singletons.soot_NullType()Lsoot/NullType;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_NullType()Lsoot/NullType;#Get(Lsoot/NullType;,NONSTATIC,Lsoot/Singletons;,instance_soot_NullType)#1
soot.Singletons.soot_NullType()Lsoot/NullType;#Constant(L;,null)#2
soot.Singletons.soot_NullType()Lsoot/NullType;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_NullType()Lsoot/NullType;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_NullType()Lsoot/NullType;#New(Lsoot/NullType;,0)#5
soot.Singletons.soot_NullType()Lsoot/NullType;#Dup(1,0)#6
soot.Singletons.soot_NullType()Lsoot/NullType;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_NullType()Lsoot/NullType;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_NullType()Lsoot/NullType;#Invoke(SPECIAL,Lsoot/NullType;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.NullType.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.NullType.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/RefLikeType;,<init>,()V)#1
soot.NullType.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_NullType()Lsoot/NullType;#Put(Lsoot/NullType;,NONSTATIC,Lsoot/Singletons;,instance_soot_NullType)#10
soot.Singletons.soot_NullType()Lsoot/NullType;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_NullType()Lsoot/NullType;#Get(Lsoot/NullType;,NONSTATIC,Lsoot/Singletons;,instance_soot_NullType)#12
soot.Singletons.soot_NullType()Lsoot/NullType;#Return(Ljava/lang/Object;)#13
soot.NullType.v()Lsoot/NullType;#Return(Ljava/lang/Object;)#2
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#283
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#284
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,303)#285
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,14)#303
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/lang/StringBuilder;,0)#304
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#305
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,15)#306
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#307
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#308
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"r")#309
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#310
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(I,5)#311
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(I,5)#312
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,1)#313
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#BinaryOp(I,add)#314
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(I,5)#315
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#316
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#317
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Local;,setName,(Ljava/lang/String;)V)#318
soot.jimple.internal.JimpleLocal.setName(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JimpleLocal.setName(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.jimple.internal.JimpleLocal.setName(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/jimple/internal/JimpleLocal;,name)#2
soot.jimple.internal.JimpleLocal.setName(Ljava/lang/String;)V#Return(V)#3
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Return(V)#323
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#80
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"jb.cp")#81
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/PackManager;,getTransform,(Ljava/lang/String;)Lsoot/Transform;)#82
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#83
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Transform;,apply,(Lsoot/Body;)V)#84
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:true only-regular-locals:false only-stack-locals:true ")#54
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#55
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Lsoot/options/CPOptions;,0)#0
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#1
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#2
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Lsoot/options/CPOptions;,<init>,(Ljava/util/Map;)V)#3
soot.options.CPOptions.<init>(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.CPOptions.<init>(Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.options.CPOptions.<init>(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.options.CPOptions.<init>(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.options.CPOptions.<init>(Ljava/util/Map;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/options/CPOptions;,options)#4
soot.options.CPOptions.<init>(Ljava/util/Map;)V#Return(V)#5
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,4)#4
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#5
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/jimple/StmtBody;)#6
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,5)#7
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#8
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(I,6)#9
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#10
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(I,7)#11
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#12
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/Options;,verbose,()Z)#13
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#14
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,30)#15
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#30
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#31
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#32
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,37)#33
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#37
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/jimple/StmtBody;,getUnits,()Lsoot/PatchingChain;)#38
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,8)#39
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/util/HashMap;,0)#40
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#41
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#42
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,9)#43
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#44
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#45
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,10)#46
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(95)#47
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#95
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#96
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#97
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,48)#98
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#48
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#49
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/jimple/Stmt;)#50
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,11)#51
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#52
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Instanceof(Lsoot/jimple/DefinitionStmt;)#53
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#54
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,95)#55
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#56
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/jimple/DefinitionStmt;)#57
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/jimple/DefinitionStmt;,getLeftOp,()Lsoot/Value;)#58
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Instanceof(Lsoot/Local;)#59
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#60
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,95)#61
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#62
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/jimple/DefinitionStmt;)#63
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/jimple/DefinitionStmt;,getLeftOp,()Lsoot/Value;)#64
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/Local;)#65
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,12)#66
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#67
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#68
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#69
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#70
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,81)#71
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#72
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#73
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/lang/Integer;,0)#74
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#75
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,1)#76
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/lang/Integer;,<init>,(I)V)#77
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#78
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Pop(1)#79
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(95)#80
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Lsoot/toolkits/graph/ExceptionalUnitGraph;,0)#99
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#100
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#101
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Lsoot/toolkits/graph/ExceptionalUnitGraph;,<init>,(Lsoot/Body;)V)#102
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,10)#103
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Lsoot/toolkits/scalar/SmartLocalDefs;,0)#104
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#105
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#106
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Lsoot/toolkits/scalar/SimpleLiveLocals;,0)#107
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#108
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#109
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Lsoot/toolkits/scalar/SimpleLiveLocals;,<init>,(Lsoot/toolkits/graph/UnitGraph;)V)#110
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Lsoot/toolkits/scalar/SmartLocalDefs;,<init>,(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V)#111
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,11)#112
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Lsoot/toolkits/graph/PseudoTopologicalOrderer;,0)#113
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#114
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,<init>,()V)#115
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#116
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#117
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/toolkits/graph/PseudoTopologicalOrderer;,newList,(Lsoot/toolkits/graph/DirectedGraph;Z)Ljava/util/List;)#118
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#119
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,12)#120
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(300)#121
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#300
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#301
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#302
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,122)#303
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#122
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#123
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/jimple/Stmt;)#124
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,13)#125
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,13)#126
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/jimple/Stmt;,getUseBoxes,()Ljava/util/List;)#127
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#128
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,14)#129
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(296)#130
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,14)#296
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#297
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#298
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,131)#299
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,14)#131
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#132
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/ValueBox;)#133
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,15)#134
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,15)#135
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#136
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Instanceof(Lsoot/Local;)#137
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#138
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,296)#139
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,15)#140
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#141
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/Local;)#142
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,16)#143
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#144
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/CPOptions;,only_regular_locals,()Z)#145
soot.options.CPOptions.only_regular_locals()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.CPOptions.only_regular_locals()Z#Get(Ljava/util/Map;,NONSTATIC,Lsoot/options/CPOptions;,options)#1
soot.options.CPOptions.only_regular_locals()Z#Constant(Ljava/lang/String;,"only-regular-locals")#2
soot.options.CPOptions.only_regular_locals()Z#Invoke(STATIC,Lsoot/PhaseOptions;,getBoolean,(Ljava/util/Map;Ljava/lang/String;)Z)#3
soot.options.CPOptions.only_regular_locals()Z#Return(I)#4
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#146
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,155)#147
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#155
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/CPOptions;,only_stack_locals,()Z)#156
soot.options.CPOptions.only_stack_locals()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.CPOptions.only_stack_locals()Z#Get(Ljava/util/Map;,NONSTATIC,Lsoot/options/CPOptions;,options)#1
soot.options.CPOptions.only_stack_locals()Z#Constant(Ljava/lang/String;,"only-stack-locals")#2
soot.options.CPOptions.only_stack_locals()Z#Invoke(STATIC,Lsoot/PhaseOptions;,getBoolean,(Ljava/util/Map;Ljava/lang/String;)Z)#3
soot.options.CPOptions.only_stack_locals()Z#Return(I)#4
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#157
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,166)#158
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,16)#159
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Local;,getName,()Ljava/lang/String;)#160
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"$")#161
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/String;,startsWith,(Ljava/lang/String;)Z)#162
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#163
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,166)#164
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(296)#165
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#304
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/Options;,verbose,()Z)#305
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#306
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,330)#307
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#330
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#331
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#332
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,337)#333
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Return(V)#337
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#85
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"jb.dae")#86
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/PackManager;,getTransform,(Ljava/lang/String;)Lsoot/Transform;)#87
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#88
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Transform;,apply,(Lsoot/Body;)V)#89
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:true only-stack-locals:true ")#61
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#62
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#0
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"only-stack-locals")#1
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/PhaseOptions;,getBoolean,(Ljava/util/Map;Ljava/lang/String;)Z)#2
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(I,4)#3
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#4
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/Options;,verbose,()Z)#5
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#6
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,22)#7
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#22
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#23
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#24
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,29)#25
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/util/HashSet;,0)#29
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#30
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#31
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,5)#32
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/util/LinkedList;,0)#33
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#34
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#35
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,6)#36
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#37
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Body;,getUnits,()Lsoot/PatchingChain;)#38
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,7)#39
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#40
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#41
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,8)#42
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(196)#43
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#196
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#197
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#198
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,44)#199
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#44
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#45
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/jimple/Stmt;)#46
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,9)#47
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,1)#48
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(I,10)#49
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#50
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Instanceof(Lsoot/jimple/NopStmt;)#51
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#52
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,56)#53
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#56
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Instanceof(Lsoot/jimple/AssignStmt;)#57
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#58
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,186)#59
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(I,10)#186
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#187
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,196)#188
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#189
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#190
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#191
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Pop(1)#192
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#193
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#194
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,addLast,(Ljava/lang/Object;)V)#195
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Lsoot/toolkits/graph/ExceptionalUnitGraph;,0)#200
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#201
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#202
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Lsoot/toolkits/graph/ExceptionalUnitGraph;,<init>,(Lsoot/Body;)V)#203
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,8)#204
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Lsoot/toolkits/scalar/SmartLocalDefs;,0)#205
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#206
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#207
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Lsoot/toolkits/scalar/SimpleLiveLocals;,0)#208
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#209
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#210
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Lsoot/toolkits/scalar/SimpleLiveLocals;,<init>,(Lsoot/toolkits/graph/UnitGraph;)V)#211
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Lsoot/toolkits/scalar/SmartLocalDefs;,<init>,(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V)#212
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,9)#213
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Lsoot/toolkits/scalar/SimpleLocalUses;,0)#214
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#215
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#216
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#217
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Lsoot/toolkits/scalar/SimpleLocalUses;,<init>,(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LocalDefs;)V)#218
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,10)#219
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(272)#220
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#272
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,isEmpty,()Z)#273
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#274
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,221)#275
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#221
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,removeFirst,()Ljava/lang/Object;)#222
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/jimple/Stmt;)#223
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,11)#224
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#225
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/jimple/Stmt;,getUseBoxes,()Ljava/util/List;)#226
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#227
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,12)#228
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(268)#229
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#268
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#269
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#270
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,230)#271
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#230
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#231
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/ValueBox;)#232
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,13)#233
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,13)#234
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#235
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Instanceof(Lsoot/Local;)#236
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#237
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,268)#238
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#239
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,13)#240
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#241
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/Local;)#242
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#243
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/toolkits/scalar/LocalDefs;,getDefsOfAt,(Lsoot/Local;Lsoot/Unit;)Ljava/util/List;)#244
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#245
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,14)#246
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(264)#247
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,14)#264
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#265
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#266
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,248)#267
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,14)#248
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#249
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/jimple/Stmt;)#250
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,15)#251
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#252
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,15)#253
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,contains,(Ljava/lang/Object;)Z)#254
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#255
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,264)#256
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#276
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#277
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,11)#278
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(315)#279
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#315
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#316
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#317
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,280)#318
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#280
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#281
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/jimple/Stmt;)#282
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,12)#283
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#284
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#285
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,contains,(Ljava/lang/Object;)Z)#286
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#287
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,294)#288
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#294
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Instanceof(Lsoot/jimple/AssignStmt;)#295
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#296
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,315)#297
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#319
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/util/Chain;,snapshotIterator,()Ljava/util/Iterator;)#320
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,11)#321
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(382)#322
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#382
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#383
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#384
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,323)#385
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#323
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#324
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/jimple/Stmt;)#325
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,12)#326
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#327
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Instanceof(Lsoot/jimple/AssignStmt;)#328
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#329
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,382)#330
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#386
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#387
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#388
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,393)#389
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Return(V)#393
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#90
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"jb.cp-ule")#91
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/PackManager;,getTransform,(Ljava/lang/String;)Lsoot/Transform;)#92
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#93
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Transform;,apply,(Lsoot/Body;)V)#94
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:true ")#68
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#69
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#95
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"jb.lp")#96
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/PackManager;,getTransform,(Ljava/lang/String;)Lsoot/Transform;)#97
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#98
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Transform;,apply,(Lsoot/Body;)V)#99
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:false unsplit-original-locals:false ")#75
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#76
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#100
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"jb.ne")#101
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/PackManager;,getTransform,(Ljava/lang/String;)Lsoot/Transform;)#102
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#103
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Transform;,apply,(Lsoot/Body;)V)#104
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:true ")#82
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#83
soot.jimple.toolkits.scalar.NopEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.jimple.toolkits.scalar.NopEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/jimple/JimpleBody;)#1
soot.jimple.toolkits.scalar.NopEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,4)#2
soot.jimple.toolkits.scalar.NopEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#3
soot.jimple.toolkits.scalar.NopEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/Options;,verbose,()Z)#4
soot.jimple.toolkits.scalar.NopEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#5
soot.jimple.toolkits.scalar.NopEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,21)#6
soot.jimple.toolkits.scalar.NopEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#21
soot.jimple.toolkits.scalar.NopEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/jimple/JimpleBody;,getUnits,()Lsoot/PatchingChain;)#22
soot.jimple.toolkits.scalar.NopEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,5)#23
soot.jimple.toolkits.scalar.NopEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#24
soot.jimple.toolkits.scalar.NopEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/util/Chain;,snapshotIterator,()Ljava/util/Iterator;)#25
soot.jimple.toolkits.scalar.NopEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,6)#26
soot.jimple.toolkits.scalar.NopEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(40)#27
soot.jimple.toolkits.scalar.NopEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#40
soot.jimple.toolkits.scalar.NopEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#41
soot.jimple.toolkits.scalar.NopEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#42
soot.jimple.toolkits.scalar.NopEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,28)#43
soot.jimple.toolkits.scalar.NopEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#28
soot.jimple.toolkits.scalar.NopEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#29
soot.jimple.toolkits.scalar.NopEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/jimple/Stmt;)#30
soot.jimple.toolkits.scalar.NopEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,7)#31
soot.jimple.toolkits.scalar.NopEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#32
soot.jimple.toolkits.scalar.NopEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Instanceof(Lsoot/jimple/NopStmt;)#33
soot.jimple.toolkits.scalar.NopEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#34
soot.jimple.toolkits.scalar.NopEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,40)#35
soot.jimple.toolkits.scalar.NopEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Return(V)#44
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#105
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"jb.uce")#106
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/PackManager;,getTransform,(Ljava/lang/String;)Lsoot/Transform;)#107
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#108
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Transform;,apply,(Lsoot/Body;)V)#109
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:true remove-unreachable-traps:false ")#89
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#90
soot.jimple.toolkits.scalar.UnreachableCodeEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator$Instance;,0)#0
soot.jimple.toolkits.scalar.UnreachableCodeEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#1
soot.jimple.toolkits.scalar.UnreachableCodeEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.toolkits.scalar.UnreachableCodeEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator$Instance;,<init>,(Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;)V)#3
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.<init>(Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.<init>(Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.<init>(Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;)V#Put(Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;,NONSTATIC,Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator$Instance;,this$0)#2
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.<init>(Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.<init>(Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#4
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.<init>(Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator;)V#Return(V)#5
soot.jimple.toolkits.scalar.UnreachableCodeEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#4
soot.jimple.toolkits.scalar.UnreachableCodeEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,2)#5
soot.jimple.toolkits.scalar.UnreachableCodeEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#6
soot.jimple.toolkits.scalar.UnreachableCodeEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator$Instance;,internalTransform,(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V)#7
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/jimple/StmtBody;)#1
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,4)#2
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#3
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/Options;,verbose,()Z)#4
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#5
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,21)#6
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#21
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#22
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Put(I,NONSTATIC,Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator$Instance;,numPruned)#23
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#24
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"remove-unreachable-traps")#25
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/PhaseOptions;,getBoolean,(Ljava/util/Map;Ljava/lang/String;)Z)#26
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#27
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,36)#28
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#36
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Lsoot/toolkits/graph/ExceptionalUnitGraph;,0)#37
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#38
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#39
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/toolkits/exceptions/PedanticThrowAnalysis;,v,()Lsoot/toolkits/exceptions/PedanticThrowAnalysis;)#40
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#41
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Lsoot/toolkits/graph/ExceptionalUnitGraph;,<init>,(Lsoot/Body;Lsoot/toolkits/exceptions/ThrowAnalysis;Z)V)#42
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Put(Lsoot/toolkits/graph/ExceptionalUnitGraph;,NONSTATIC,Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator$Instance;,stmtGraph)#43
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#44
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/util/HashSet;,0)#45
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#46
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#47
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Put(Ljava/util/HashSet;,NONSTATIC,Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator$Instance;,visited)#48
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/util/HashMap;,0)#49
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#50
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#51
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,5)#52
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#53
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/jimple/StmtBody;,getTraps,()Lsoot/util/Chain;)#54
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#55
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,6)#56
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(87)#57
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#87
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#88
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#89
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,58)#90
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#91
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/jimple/StmtBody;,getUnits,()Lsoot/PatchingChain;)#92
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/PatchingChain;,isEmpty,()Z)#93
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#94
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,108)#95
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/util/LinkedList;,0)#96
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#97
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#98
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,6)#99
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#100
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#101
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/jimple/StmtBody;,getUnits,()Lsoot/PatchingChain;)#102
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/PatchingChain;,getFirst,()Lsoot/Unit;)#103
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,addLast,(Ljava/lang/Object;)V)#104
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#105
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#106
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator$Instance;,visitStmts,(Ljava/util/LinkedList;)V)#107
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#Goto(40)#0
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#LocalLoad(Ljava/lang/Object;,1)#40
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,isEmpty,()Z)#41
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#Constant(I,0)#42
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#ConditionalBranch(I,eq,1)#43
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,removeLast,()Ljava/lang/Object;)#2
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#CheckCast(Lsoot/Unit;)#3
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#LocalStore(Ljava/lang/Object;,2)#4
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#Get(Ljava/util/HashSet;,NONSTATIC,Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator$Instance;,visited)#6
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#LocalLoad(Ljava/lang/Object;,2)#7
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#Invoke(VIRTUAL,Ljava/util/HashSet;,contains,(Ljava/lang/Object;)Z)#8
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#Constant(I,0)#9
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#ConditionalBranch(I,ne,40)#10
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#Get(Ljava/util/HashSet;,NONSTATIC,Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator$Instance;,visited)#12
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#LocalLoad(Ljava/lang/Object;,2)#13
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#Invoke(VIRTUAL,Ljava/util/HashSet;,add,(Ljava/lang/Object;)Z)#14
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#Pop(1)#15
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#LocalLoad(Ljava/lang/Object;,0)#16
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#Get(Lsoot/toolkits/graph/ExceptionalUnitGraph;,NONSTATIC,Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator$Instance;,stmtGraph)#17
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#LocalLoad(Ljava/lang/Object;,2)#18
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#Invoke(VIRTUAL,Lsoot/toolkits/graph/ExceptionalUnitGraph;,getSuccsOf,(Lsoot/Unit;)Ljava/util/List;)#19
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#20
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#LocalStore(Ljava/lang/Object;,3)#21
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#Goto(36)#22
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#LocalLoad(Ljava/lang/Object;,3)#36
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#37
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#Constant(I,0)#38
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#ConditionalBranch(I,ne,23)#39
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#LocalLoad(Ljava/lang/Object;,3)#23
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#24
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#CheckCast(Lsoot/Unit;)#25
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#LocalStore(Ljava/lang/Object;,4)#26
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#LocalLoad(Ljava/lang/Object;,0)#27
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#Get(Ljava/util/HashSet;,NONSTATIC,Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator$Instance;,visited)#28
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#LocalLoad(Ljava/lang/Object;,4)#29
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#Invoke(VIRTUAL,Ljava/util/HashSet;,contains,(Ljava/lang/Object;)Z)#30
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#Constant(I,0)#31
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#ConditionalBranch(I,ne,36)#32
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#LocalLoad(Ljava/lang/Object;,1)#33
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#LocalLoad(Ljava/lang/Object;,4)#34
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,addLast,(Ljava/lang/Object;)V)#35
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.visitStmts(Ljava/util/LinkedList;)V#Return(V)#44
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#108
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/jimple/StmtBody;,getUnits,()Lsoot/PatchingChain;)#109
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/PatchingChain;,snapshotIterator,()Ljava/util/Iterator;)#110
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,6)#111
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(159)#112
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#159
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#160
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#161
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,113)#162
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#113
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#114
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/jimple/Stmt;)#115
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,7)#116
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#117
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Get(Ljava/util/HashSet;,NONSTATIC,Lsoot/jimple/toolkits/scalar/UnreachableCodeEliminator$Instance;,visited)#118
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#119
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/util/HashSet;,contains,(Ljava/lang/Object;)Z)#120
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#121
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,159)#122
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#163
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/Options;,verbose,()Z)#164
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#165
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,186)#166
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#186
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Body;,getTraps,()Lsoot/util/Chain;)#187
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#188
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,7)#189
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(202)#190
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#202
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#203
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#204
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,191)#205
soot.jimple.toolkits.scalar.UnreachableCodeEliminator$Instance.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Return(V)#206
soot.jimple.toolkits.scalar.UnreachableCodeEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Return(V)#8
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#110
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#111
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Constant(I,0)#112
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#ConditionalBranch(I,eq,123)#113
soot.JimpleBodyPack.applyPhaseOptions(Lsoot/jimple/JimpleBody;Ljava/util/Map;)V#Return(V)#123
soot.JimpleBodyPack.internalApply(Lsoot/Body;)V#Return(V)#8
soot.Pack.apply(Lsoot/Body;)V#Invoke(STATIC,Lsoot/util/PhaseDumper;,v,()Lsoot/util/PhaseDumper;)#18
soot.Pack.apply(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,1)#19
soot.Pack.apply(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#20
soot.Pack.apply(Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/Pack;,getPhaseName,()Ljava/lang/String;)#21
soot.Pack.apply(Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/util/PhaseDumper;,dumpAfter,(Lsoot/Body;Ljava/lang/String;)V)#22
soot.Pack.apply(Lsoot/Body;)V#Return(V)#23
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#LocalLoad(Ljava/lang/Object;,3)#206
soot.coffi.CoffiMethodSource.getBody(Lsoot/SootMethod;Ljava/lang/String;)Lsoot/Body;#Return(Ljava/lang/Object;)#207
soot.SootMethod.getBodyFromMethodSource(Ljava/lang/String;)Lsoot/Body;#Return(Ljava/lang/Object;)#5
soot.SootMethod.retrieveActiveBody()Lsoot/Body;#Invoke(VIRTUAL,Lsoot/SootMethod;,setActiveBody,(Lsoot/Body;)V)#31
soot.SootMethod.setActiveBody(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethod.setActiveBody(Lsoot/Body;)V#Get(Lsoot/SootClass;,NONSTATIC,Lsoot/SootMethod;,declaringClass)#1
soot.SootMethod.setActiveBody(Lsoot/Body;)V#Constant(L;,null)#2
soot.SootMethod.setActiveBody(Lsoot/Body;)V#ConditionalBranch(Ljava/lang/Object;,eq,20)#3
soot.SootMethod.setActiveBody(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#4
soot.SootMethod.setActiveBody(Lsoot/Body;)V#Get(Lsoot/SootClass;,NONSTATIC,Lsoot/SootMethod;,declaringClass)#5
soot.SootMethod.setActiveBody(Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/SootClass;,isPhantomClass,()Z)#6
soot.SootMethod.setActiveBody(Lsoot/Body;)V#Constant(I,0)#7
soot.SootMethod.setActiveBody(Lsoot/Body;)V#ConditionalBranch(I,eq,20)#8
soot.SootMethod.setActiveBody(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#20
soot.SootMethod.setActiveBody(Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,isConcrete,()Z)#21
soot.SootMethod.setActiveBody(Lsoot/Body;)V#Constant(I,0)#22
soot.SootMethod.setActiveBody(Lsoot/Body;)V#ConditionalBranch(I,ne,35)#23
soot.SootMethod.setActiveBody(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,1)#35
soot.SootMethod.setActiveBody(Lsoot/Body;)V#Constant(L;,null)#36
soot.SootMethod.setActiveBody(Lsoot/Body;)V#ConditionalBranch(Ljava/lang/Object;,eq,45)#37
soot.SootMethod.setActiveBody(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,1)#38
soot.SootMethod.setActiveBody(Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/Body;,getMethod,()Lsoot/SootMethod;)#39
soot.SootMethod.setActiveBody(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#40
soot.SootMethod.setActiveBody(Lsoot/Body;)V#ConditionalBranch(Ljava/lang/Object;,eq,45)#41
soot.SootMethod.setActiveBody(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#45
soot.SootMethod.setActiveBody(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,1)#46
soot.SootMethod.setActiveBody(Lsoot/Body;)V#Put(Lsoot/Body;,NONSTATIC,Lsoot/SootMethod;,activeBody)#47
soot.SootMethod.setActiveBody(Lsoot/Body;)V#Return(V)#48
soot.SootMethod.retrieveActiveBody()Lsoot/Body;#LocalLoad(Ljava/lang/Object;,0)#32
soot.SootMethod.retrieveActiveBody()Lsoot/Body;#Constant(L;,null)#33
soot.SootMethod.retrieveActiveBody()Lsoot/Body;#Put(Lsoot/MethodSource;,NONSTATIC,Lsoot/SootMethod;,ms)#34
soot.SootMethod.retrieveActiveBody()Lsoot/Body;#LocalLoad(Ljava/lang/Object;,0)#35
soot.SootMethod.retrieveActiveBody()Lsoot/Body;#Invoke(VIRTUAL,Lsoot/SootMethod;,getActiveBody,()Lsoot/Body;)#36
soot.SootMethod.getActiveBody()Lsoot/Body;#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethod.getActiveBody()Lsoot/Body;#Get(Lsoot/SootClass;,NONSTATIC,Lsoot/SootMethod;,declaringClass)#1
soot.SootMethod.getActiveBody()Lsoot/Body;#Constant(L;,null)#2
soot.SootMethod.getActiveBody()Lsoot/Body;#ConditionalBranch(Ljava/lang/Object;,eq,21)#3
soot.SootMethod.getActiveBody()Lsoot/Body;#LocalLoad(Ljava/lang/Object;,0)#4
soot.SootMethod.getActiveBody()Lsoot/Body;#Get(Lsoot/SootClass;,NONSTATIC,Lsoot/SootMethod;,declaringClass)#5
soot.SootMethod.getActiveBody()Lsoot/Body;#Invoke(VIRTUAL,Lsoot/SootClass;,isPhantomClass,()Z)#6
soot.SootMethod.getActiveBody()Lsoot/Body;#Constant(I,0)#7
soot.SootMethod.getActiveBody()Lsoot/Body;#ConditionalBranch(I,eq,21)#8
soot.SootMethod.getActiveBody()Lsoot/Body;#Get(Z,STATIC,Lsoot/jbco/Main;,metrics)#21
soot.SootMethod.getActiveBody()Lsoot/Body;#Constant(I,0)#22
soot.SootMethod.getActiveBody()Lsoot/Body;#ConditionalBranch(I,ne,40)#23
soot.SootMethod.getActiveBody()Lsoot/Body;#LocalLoad(Ljava/lang/Object;,0)#24
soot.SootMethod.getActiveBody()Lsoot/Body;#Invoke(VIRTUAL,Lsoot/SootMethod;,hasActiveBody,()Z)#25
soot.SootMethod.hasActiveBody()Z#Constant(I,1)#4
soot.SootMethod.hasActiveBody()Z#Return(I)#5
soot.SootMethod.getActiveBody()Lsoot/Body;#Constant(I,0)#26
soot.SootMethod.getActiveBody()Lsoot/Body;#ConditionalBranch(I,ne,40)#27
soot.SootMethod.getActiveBody()Lsoot/Body;#LocalLoad(Ljava/lang/Object;,0)#40
soot.SootMethod.getActiveBody()Lsoot/Body;#Get(Lsoot/Body;,NONSTATIC,Lsoot/SootMethod;,activeBody)#41
soot.SootMethod.getActiveBody()Lsoot/Body;#Return(Ljava/lang/Object;)#42
soot.SootMethod.retrieveActiveBody()Lsoot/Body;#Return(Ljava/lang/Object;)#37
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,8)#29
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#30
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Body;,getUnits,()Lsoot/PatchingChain;)#31
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/PatchingChain;,getFirst,()Lsoot/Unit;)#32
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/jimple/Stmt;)#33
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,9)#34
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Goto(42)#35
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#42
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Instanceof(Lsoot/jimple/IdentityStmt;)#43
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#44
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,36)#45
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#36
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Body;,getUnits,()Lsoot/PatchingChain;)#37
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#38
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/PatchingChain;,getSuccOf,(Lsoot/Unit;)Lsoot/Unit;)#39
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/jimple/Stmt;)#40
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,9)#41
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#46
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"LineNumberTag")#47
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/jimple/Stmt;,hasTag,(Ljava/lang/String;)Z)#48
soot.tagkit.AbstractHost.hasTag(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.tagkit.AbstractHost.hasTag(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#1
soot.tagkit.AbstractHost.hasTag(Ljava/lang/String;)Z#Invoke(SPECIAL,Lsoot/tagkit/AbstractHost;,searchForTag,(Ljava/lang/String;)I)#2
soot.tagkit.AbstractHost.searchForTag(Ljava/lang/String;)I#Constant(I,0)#0
soot.tagkit.AbstractHost.searchForTag(Ljava/lang/String;)I#LocalStore(I,2)#1
soot.tagkit.AbstractHost.searchForTag(Ljava/lang/String;)I#LocalLoad(Ljava/lang/Object;,0)#2
soot.tagkit.AbstractHost.searchForTag(Ljava/lang/String;)I#Get(Ljava/util/List;,NONSTATIC,Lsoot/tagkit/AbstractHost;,mTagList)#3
soot.tagkit.AbstractHost.searchForTag(Ljava/lang/String;)I#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#4
soot.tagkit.AbstractHost.searchForTag(Ljava/lang/String;)I#LocalStore(Ljava/lang/Object;,3)#5
soot.tagkit.AbstractHost.searchForTag(Ljava/lang/String;)I#Goto(23)#6
soot.tagkit.AbstractHost.searchForTag(Ljava/lang/String;)I#LocalLoad(Ljava/lang/Object;,3)#23
soot.tagkit.AbstractHost.searchForTag(Ljava/lang/String;)I#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#24
soot.tagkit.AbstractHost.searchForTag(Ljava/lang/String;)I#Constant(I,0)#25
soot.tagkit.AbstractHost.searchForTag(Ljava/lang/String;)I#ConditionalBranch(I,ne,7)#26
soot.tagkit.AbstractHost.searchForTag(Ljava/lang/String;)I#LocalLoad(Ljava/lang/Object;,3)#7
soot.tagkit.AbstractHost.searchForTag(Ljava/lang/String;)I#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#8
soot.tagkit.AbstractHost.searchForTag(Ljava/lang/String;)I#CheckCast(Lsoot/tagkit/Tag;)#9
soot.tagkit.AbstractHost.searchForTag(Ljava/lang/String;)I#LocalStore(Ljava/lang/Object;,4)#10
soot.tagkit.AbstractHost.searchForTag(Ljava/lang/String;)I#LocalLoad(Ljava/lang/Object;,4)#11
soot.tagkit.AbstractHost.searchForTag(Ljava/lang/String;)I#Invoke(INTERFACE,Lsoot/tagkit/Tag;,getName,()Ljava/lang/String;)#12
soot.tagkit.LineNumberTag.getName()Ljava/lang/String;#Constant(Ljava/lang/String;,"LineNumberTag")#0
soot.tagkit.LineNumberTag.getName()Ljava/lang/String;#Return(Ljava/lang/Object;)#1
soot.tagkit.AbstractHost.searchForTag(Ljava/lang/String;)I#LocalLoad(Ljava/lang/Object;,1)#13
soot.tagkit.AbstractHost.searchForTag(Ljava/lang/String;)I#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#14
soot.tagkit.AbstractHost.searchForTag(Ljava/lang/String;)I#Constant(I,0)#15
soot.tagkit.AbstractHost.searchForTag(Ljava/lang/String;)I#ConditionalBranch(I,eq,19)#16
soot.tagkit.AbstractHost.searchForTag(Ljava/lang/String;)I#LocalLoad(I,2)#17
soot.tagkit.AbstractHost.searchForTag(Ljava/lang/String;)I#Return(I)#18
soot.tagkit.AbstractHost.hasTag(Ljava/lang/String;)Z#Constant(I,-1)#3
soot.tagkit.AbstractHost.hasTag(Ljava/lang/String;)Z#ConditionalBranch(I,eq,7)#4
soot.tagkit.AbstractHost.hasTag(Ljava/lang/String;)Z#Constant(I,1)#5
soot.tagkit.AbstractHost.hasTag(Ljava/lang/String;)Z#Return(I)#6
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#49
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,65)#50
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#51
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"LineNumberTag")#52
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/jimple/Stmt;,getTag,(Ljava/lang/String;)Lsoot/tagkit/Tag;)#53
soot.tagkit.AbstractHost.getTag(Ljava/lang/String;)Lsoot/tagkit/Tag;#LocalLoad(Ljava/lang/Object;,0)#0
soot.tagkit.AbstractHost.getTag(Ljava/lang/String;)Lsoot/tagkit/Tag;#LocalLoad(Ljava/lang/Object;,1)#1
soot.tagkit.AbstractHost.getTag(Ljava/lang/String;)Lsoot/tagkit/Tag;#Invoke(SPECIAL,Lsoot/tagkit/AbstractHost;,searchForTag,(Ljava/lang/String;)I)#2
soot.tagkit.AbstractHost.getTag(Ljava/lang/String;)Lsoot/tagkit/Tag;#Dup(1,0)#3
soot.tagkit.AbstractHost.getTag(Ljava/lang/String;)Lsoot/tagkit/Tag;#LocalStore(I,2)#4
soot.tagkit.AbstractHost.getTag(Ljava/lang/String;)Lsoot/tagkit/Tag;#Constant(I,-1)#5
soot.tagkit.AbstractHost.getTag(Ljava/lang/String;)Lsoot/tagkit/Tag;#ConditionalBranch(I,eq,13)#6
soot.tagkit.AbstractHost.getTag(Ljava/lang/String;)Lsoot/tagkit/Tag;#LocalLoad(Ljava/lang/Object;,0)#7
soot.tagkit.AbstractHost.getTag(Ljava/lang/String;)Lsoot/tagkit/Tag;#Get(Ljava/util/List;,NONSTATIC,Lsoot/tagkit/AbstractHost;,mTagList)#8
soot.tagkit.AbstractHost.getTag(Ljava/lang/String;)Lsoot/tagkit/Tag;#LocalLoad(I,2)#9
soot.tagkit.AbstractHost.getTag(Ljava/lang/String;)Lsoot/tagkit/Tag;#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#10
soot.tagkit.AbstractHost.getTag(Ljava/lang/String;)Lsoot/tagkit/Tag;#CheckCast(Lsoot/tagkit/Tag;)#11
soot.tagkit.AbstractHost.getTag(Ljava/lang/String;)Lsoot/tagkit/Tag;#Return(Ljava/lang/Object;)#12
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/tagkit/LineNumberTag;)#54
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,10)#55
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#56
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/lang/Integer;,0)#57
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#58
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#59
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/tagkit/LineNumberTag;,getLineNumber,()I)#60
soot.tagkit.LineNumberTag.getLineNumber()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.tagkit.LineNumberTag.getLineNumber()I#Get(I,NONSTATIC,Lsoot/tagkit/LineNumberTag;,line_number)#1
soot.tagkit.LineNumberTag.getLineNumber()I#Return(I)#2
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/lang/Integer;,<init>,(I)V)#61
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#62
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/util/HashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#63
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Pop(1)#64
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#New(Lsoot/coffi/Instruction_New;,0)#1090
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Dup(1,0)#1091
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Invoke(SPECIAL,Lsoot/coffi/Instruction_New;,<init>,()V)#1092
soot.coffi.Instruction_New.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Instruction_New.<init>()V#Constant(I,-69)#1
soot.coffi.Instruction_New.<init>()V#Invoke(SPECIAL,Lsoot/coffi/Instruction_intindex;,<init>,(B)V)#2
soot.coffi.Instruction_New.<init>()V#LocalLoad(Ljava/lang/Object;,0)#3
soot.coffi.Instruction_New.<init>()V#Constant(Ljava/lang/String;,"new")#4
soot.coffi.Instruction_New.<init>()V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/coffi/Instruction_New;,name)#5
soot.coffi.Instruction_New.<init>()V#LocalLoad(Ljava/lang/Object;,0)#6
soot.coffi.Instruction_New.<init>()V#Constant(I,1)#7
soot.coffi.Instruction_New.<init>()V#Put(Z,NONSTATIC,Lsoot/coffi/Instruction_New;,calls)#8
soot.coffi.Instruction_New.<init>()V#Return(V)#9
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#LocalStore(Ljava/lang/Object;,5)#1093
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Goto(1120)#1094
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#New(Lsoot/coffi/Instruction_Dup;,0)#570
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Dup(1,0)#571
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Invoke(SPECIAL,Lsoot/coffi/Instruction_Dup;,<init>,()V)#572
soot.coffi.Instruction_Dup.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Instruction_Dup.<init>()V#Constant(I,89)#1
soot.coffi.Instruction_Dup.<init>()V#Invoke(SPECIAL,Lsoot/coffi/Instruction_noargs;,<init>,(B)V)#2
soot.coffi.Instruction_Dup.<init>()V#LocalLoad(Ljava/lang/Object;,0)#3
soot.coffi.Instruction_Dup.<init>()V#Constant(Ljava/lang/String;,"dup")#4
soot.coffi.Instruction_Dup.<init>()V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/coffi/Instruction_Dup;,name)#5
soot.coffi.Instruction_Dup.<init>()V#Return(V)#6
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#LocalStore(Ljava/lang/Object;,5)#573
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Goto(1120)#574
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#New(Lsoot/coffi/Instruction_Astore_1;,0)#347
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Dup(1,0)#348
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Invoke(SPECIAL,Lsoot/coffi/Instruction_Astore_1;,<init>,()V)#349
soot.coffi.Instruction_Astore_1.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Instruction_Astore_1.<init>()V#Constant(I,76)#1
soot.coffi.Instruction_Astore_1.<init>()V#Invoke(SPECIAL,Lsoot/coffi/Instruction_noargs;,<init>,(B)V)#2
soot.coffi.Instruction_Astore_1.<init>()V#LocalLoad(Ljava/lang/Object;,0)#3
soot.coffi.Instruction_Astore_1.<init>()V#Constant(Ljava/lang/String;,"astore_1")#4
soot.coffi.Instruction_Astore_1.<init>()V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/coffi/Instruction_Astore_1;,name)#5
soot.coffi.Instruction_Astore_1.<init>()V#Return(V)#6
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#LocalStore(Ljava/lang/Object;,5)#350
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Goto(1120)#351
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#New(Lsoot/coffi/Instruction_Aload_1;,0)#222
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Dup(1,0)#223
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Invoke(SPECIAL,Lsoot/coffi/Instruction_Aload_1;,<init>,()V)#224
soot.coffi.Instruction_Aload_1.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Instruction_Aload_1.<init>()V#Constant(I,43)#1
soot.coffi.Instruction_Aload_1.<init>()V#Invoke(SPECIAL,Lsoot/coffi/Instruction_noargs;,<init>,(B)V)#2
soot.coffi.Instruction_Aload_1.<init>()V#LocalLoad(Ljava/lang/Object;,0)#3
soot.coffi.Instruction_Aload_1.<init>()V#Constant(Ljava/lang/String;,"aload_1")#4
soot.coffi.Instruction_Aload_1.<init>()V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/coffi/Instruction_Aload_1;,name)#5
soot.coffi.Instruction_Aload_1.<init>()V#Return(V)#6
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#LocalStore(Ljava/lang/Object;,5)#225
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Goto(1120)#226
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#New(Lsoot/coffi/Instruction_Ldc1;,0)#22
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Dup(1,0)#23
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Invoke(SPECIAL,Lsoot/coffi/Instruction_Ldc1;,<init>,()V)#24
soot.coffi.Instruction_Ldc1.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Instruction_Ldc1.<init>()V#Constant(I,18)#1
soot.coffi.Instruction_Ldc1.<init>()V#Invoke(SPECIAL,Lsoot/coffi/Instruction_byteindex;,<init>,(B)V)#2
soot.coffi.Instruction_byteindex.<init>(B)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Instruction_byteindex.<init>(B)V#LocalLoad(I,1)#1
soot.coffi.Instruction_byteindex.<init>(B)V#Invoke(SPECIAL,Lsoot/coffi/Instruction;,<init>,(B)V)#2
soot.coffi.Instruction_byteindex.<init>(B)V#Return(V)#3
soot.coffi.Instruction_Ldc1.<init>()V#LocalLoad(Ljava/lang/Object;,0)#3
soot.coffi.Instruction_Ldc1.<init>()V#Constant(Ljava/lang/String;,"ldc1")#4
soot.coffi.Instruction_Ldc1.<init>()V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/coffi/Instruction_Ldc1;,name)#5
soot.coffi.Instruction_Ldc1.<init>()V#Return(V)#6
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#LocalStore(Ljava/lang/Object;,5)#25
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Goto(1120)#26
soot.coffi.Instruction_byteindex.parse([BI)I#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Instruction_byteindex.parse([BI)I#LocalLoad(Ljava/lang/Object;,1)#1
soot.coffi.Instruction_byteindex.parse([BI)I#LocalLoad(I,2)#2
soot.coffi.Instruction_byteindex.parse([BI)I#ArrayLoad(B)#3
soot.coffi.Instruction_byteindex.parse([BI)I#Put(S,NONSTATIC,Lsoot/coffi/Instruction_byteindex;,arg_b)#4
soot.coffi.Instruction_byteindex.parse([BI)I#LocalLoad(Ljava/lang/Object;,0)#5
soot.coffi.Instruction_byteindex.parse([BI)I#LocalLoad(Ljava/lang/Object;,0)#6
soot.coffi.Instruction_byteindex.parse([BI)I#Get(S,NONSTATIC,Lsoot/coffi/Instruction_byteindex;,arg_b)#7
soot.coffi.Instruction_byteindex.parse([BI)I#Constant(I,0)#8
soot.coffi.Instruction_byteindex.parse([BI)I#ConditionalBranch(I,lt,13)#9
soot.coffi.Instruction_byteindex.parse([BI)I#LocalLoad(Ljava/lang/Object;,0)#10
soot.coffi.Instruction_byteindex.parse([BI)I#Get(S,NONSTATIC,Lsoot/coffi/Instruction_byteindex;,arg_b)#11
soot.coffi.Instruction_byteindex.parse([BI)I#Goto(18)#12
soot.coffi.Instruction_byteindex.parse([BI)I#Put(S,NONSTATIC,Lsoot/coffi/Instruction_byteindex;,arg_b)#18
soot.coffi.Instruction_byteindex.parse([BI)I#LocalLoad(I,2)#19
soot.coffi.Instruction_byteindex.parse([BI)I#Constant(I,1)#20
soot.coffi.Instruction_byteindex.parse([BI)I#BinaryOp(I,add)#21
soot.coffi.Instruction_byteindex.parse([BI)I#Return(I)#22
soot.coffi.Instruction_byteindex.nextOffset(I)I#LocalLoad(I,1)#0
soot.coffi.Instruction_byteindex.nextOffset(I)I#Constant(I,2)#1
soot.coffi.Instruction_byteindex.nextOffset(I)I#BinaryOp(I,add)#2
soot.coffi.Instruction_byteindex.nextOffset(I)I#Return(I)#3
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#New(Lsoot/coffi/Instruction_Invokeinterface;,0)#1075
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Dup(1,0)#1076
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Invoke(SPECIAL,Lsoot/coffi/Instruction_Invokeinterface;,<init>,()V)#1077
soot.coffi.Instruction_Invokeinterface.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Instruction_Invokeinterface.<init>()V#Constant(I,-71)#1
soot.coffi.Instruction_Invokeinterface.<init>()V#Invoke(SPECIAL,Lsoot/coffi/Instruction_intindex;,<init>,(B)V)#2
soot.coffi.Instruction_Invokeinterface.<init>()V#LocalLoad(Ljava/lang/Object;,0)#3
soot.coffi.Instruction_Invokeinterface.<init>()V#Constant(Ljava/lang/String;,"invokeinterface")#4
soot.coffi.Instruction_Invokeinterface.<init>()V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/coffi/Instruction_Invokeinterface;,name)#5
soot.coffi.Instruction_Invokeinterface.<init>()V#LocalLoad(Ljava/lang/Object;,0)#6
soot.coffi.Instruction_Invokeinterface.<init>()V#Constant(I,1)#7
soot.coffi.Instruction_Invokeinterface.<init>()V#Put(Z,NONSTATIC,Lsoot/coffi/Instruction_Invokeinterface;,calls)#8
soot.coffi.Instruction_Invokeinterface.<init>()V#Return(V)#9
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#LocalStore(Ljava/lang/Object;,5)#1078
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Goto(1120)#1079
soot.coffi.Instruction_Invokeinterface.parse([BI)I#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Instruction_Invokeinterface.parse([BI)I#LocalLoad(Ljava/lang/Object;,1)#1
soot.coffi.Instruction_Invokeinterface.parse([BI)I#LocalLoad(I,2)#2
soot.coffi.Instruction_Invokeinterface.parse([BI)I#Invoke(SPECIAL,Lsoot/coffi/Instruction_intindex;,parse,([BI)I)#3
soot.coffi.Instruction_Invokeinterface.parse([BI)I#LocalStore(I,2)#4
soot.coffi.Instruction_Invokeinterface.parse([BI)I#LocalLoad(Ljava/lang/Object;,0)#5
soot.coffi.Instruction_Invokeinterface.parse([BI)I#LocalLoad(Ljava/lang/Object;,1)#6
soot.coffi.Instruction_Invokeinterface.parse([BI)I#LocalLoad(I,2)#7
soot.coffi.Instruction_Invokeinterface.parse([BI)I#ArrayLoad(B)#8
soot.coffi.Instruction_Invokeinterface.parse([BI)I#Put(B,NONSTATIC,Lsoot/coffi/Instruction_Invokeinterface;,nargs)#9
soot.coffi.Instruction_Invokeinterface.parse([BI)I#LocalLoad(I,2)#10
soot.coffi.Instruction_Invokeinterface.parse([BI)I#Constant(I,1)#11
soot.coffi.Instruction_Invokeinterface.parse([BI)I#BinaryOp(I,add)#12
soot.coffi.Instruction_Invokeinterface.parse([BI)I#LocalStore(I,2)#13
soot.coffi.Instruction_Invokeinterface.parse([BI)I#LocalLoad(Ljava/lang/Object;,0)#14
soot.coffi.Instruction_Invokeinterface.parse([BI)I#LocalLoad(Ljava/lang/Object;,1)#15
soot.coffi.Instruction_Invokeinterface.parse([BI)I#LocalLoad(I,2)#16
soot.coffi.Instruction_Invokeinterface.parse([BI)I#ArrayLoad(B)#17
soot.coffi.Instruction_Invokeinterface.parse([BI)I#Put(B,NONSTATIC,Lsoot/coffi/Instruction_Invokeinterface;,reserved)#18
soot.coffi.Instruction_Invokeinterface.parse([BI)I#LocalLoad(I,2)#19
soot.coffi.Instruction_Invokeinterface.parse([BI)I#Constant(I,1)#20
soot.coffi.Instruction_Invokeinterface.parse([BI)I#BinaryOp(I,add)#21
soot.coffi.Instruction_Invokeinterface.parse([BI)I#Return(I)#22
soot.coffi.Instruction_Invokeinterface.nextOffset(I)I#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Instruction_Invokeinterface.nextOffset(I)I#LocalLoad(I,1)#1
soot.coffi.Instruction_Invokeinterface.nextOffset(I)I#Invoke(SPECIAL,Lsoot/coffi/Instruction_intindex;,nextOffset,(I)I)#2
soot.coffi.Instruction_Invokeinterface.nextOffset(I)I#Constant(I,2)#3
soot.coffi.Instruction_Invokeinterface.nextOffset(I)I#BinaryOp(I,add)#4
soot.coffi.Instruction_Invokeinterface.nextOffset(I)I#Return(I)#5
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#LocalLoad(Ljava/lang/Object;,0)#40
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#LocalLoad(I,1)#41
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#LocalLoad(I,4)#42
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#Constant(I,1)#43
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#BinaryOp(I,add)#44
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#LocalLoad(I,3)#45
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#Invoke(SPECIAL,Lsoot/coffi/ByteCode;,locateInstr,(III)Lsoot/coffi/Instruction;)#46
soot.coffi.ByteCode.locateInstr(III)Lsoot/coffi/Instruction;#Return(Ljava/lang/Object;)#47
soot.Modifier.isStatic(I)Z#Constant(I,1)#5
soot.Modifier.isStatic(I)Z#Return(I)#6
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,14)#131
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#132
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#CheckCast(Lsoot/Type;)#133
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalStore(Ljava/lang/Object;,17)#134
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(STATIC,Lsoot/coffi/Util;,v,()Lsoot/coffi/Util;)#135
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Get(Z,NONSTATIC,Lsoot/coffi/Util;,useFaithfulNaming)#136
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Constant(I,0)#137
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#ConditionalBranch(I,eq,142)#138
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#New(Ljava/lang/StringBuilder;,0)#142
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Dup(1,0)#143
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Constant(Ljava/lang/String;,"l")#144
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#145
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(I,13)#146
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#147
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#148
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalStore(Ljava/lang/Object;,16)#149
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Goto(169)#150
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(STATIC,Lsoot/jimple/Jimple;,v,()Lsoot/jimple/Jimple;)#169
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,16)#170
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(STATIC,Lsoot/UnknownType;,v,()Lsoot/UnknownType;)#171
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(VIRTUAL,Lsoot/jimple/Jimple;,newLocal,(Ljava/lang/String;Lsoot/Type;)Lsoot/Local;)#172
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalStore(Ljava/lang/Object;,18)#173
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,6)#174
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,18)#175
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#176
soot.util.ArraySet.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#0
soot.util.ArraySet.add(Ljava/lang/Object;)Z#Constant(L;,null)#1
soot.util.ArraySet.add(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,8)#2
soot.util.ArraySet.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#8
soot.util.ArraySet.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#9
soot.util.ArraySet.add(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Lsoot/util/ArraySet;,contains,(Ljava/lang/Object;)Z)#10
soot.util.ArraySet.add(Ljava/lang/Object;)Z#Constant(I,0)#11
soot.util.ArraySet.add(Ljava/lang/Object;)Z#ConditionalBranch(I,eq,15)#12
soot.util.ArraySet.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#15
soot.util.ArraySet.add(Ljava/lang/Object;)Z#Get(I,NONSTATIC,Lsoot/util/ArraySet;,numElements)#16
soot.util.ArraySet.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#17
soot.util.ArraySet.add(Ljava/lang/Object;)Z#Get(I,NONSTATIC,Lsoot/util/ArraySet;,maxElements)#18
soot.util.ArraySet.add(Ljava/lang/Object;)Z#ConditionalBranch(I,ne,22)#19
soot.util.ArraySet.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#22
soot.util.ArraySet.add(Ljava/lang/Object;)Z#Get([Ljava/lang/Object;,NONSTATIC,Lsoot/util/ArraySet;,elements)#23
soot.util.ArraySet.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#24
soot.util.ArraySet.add(Ljava/lang/Object;)Z#Dup(1,0)#25
soot.util.ArraySet.add(Ljava/lang/Object;)Z#Get(I,NONSTATIC,Lsoot/util/ArraySet;,numElements)#26
soot.util.ArraySet.add(Ljava/lang/Object;)Z#Dup(1,1)#27
soot.util.ArraySet.add(Ljava/lang/Object;)Z#Constant(I,1)#28
soot.util.ArraySet.add(Ljava/lang/Object;)Z#BinaryOp(I,add)#29
soot.util.ArraySet.add(Ljava/lang/Object;)Z#Put(I,NONSTATIC,Lsoot/util/ArraySet;,numElements)#30
soot.util.ArraySet.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#31
soot.util.ArraySet.add(Ljava/lang/Object;)Z#ArrayStore(Ljava/lang/Object;)#32
soot.util.ArraySet.add(Ljava/lang/Object;)Z#Constant(I,1)#33
soot.util.ArraySet.add(Ljava/lang/Object;)Z#Return(I)#34
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Pop(1)#177
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,4)#178
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(VIRTUAL,Lsoot/jimple/JimpleBody;,getLocals,()Lsoot/util/Chain;)#179
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,18)#180
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(INTERFACE,Lsoot/util/Chain;,add,(Ljava/lang/Object;)Z)#181
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Pop(1)#182
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,5)#183
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(STATIC,Lsoot/jimple/Jimple;,v,()Lsoot/jimple/Jimple;)#184
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,18)#185
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(STATIC,Lsoot/jimple/Jimple;,v,()Lsoot/jimple/Jimple;)#186
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,17)#187
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(I,15)#188
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(VIRTUAL,Lsoot/jimple/Jimple;,newParameterRef,(Lsoot/Type;I)Lsoot/jimple/ParameterRef;)#189
soot.jimple.Jimple.newParameterRef(Lsoot/Type;I)Lsoot/jimple/ParameterRef;#New(Lsoot/jimple/ParameterRef;,0)#0
soot.jimple.Jimple.newParameterRef(Lsoot/Type;I)Lsoot/jimple/ParameterRef;#Dup(1,0)#1
soot.jimple.Jimple.newParameterRef(Lsoot/Type;I)Lsoot/jimple/ParameterRef;#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.Jimple.newParameterRef(Lsoot/Type;I)Lsoot/jimple/ParameterRef;#LocalLoad(I,2)#3
soot.jimple.Jimple.newParameterRef(Lsoot/Type;I)Lsoot/jimple/ParameterRef;#Invoke(SPECIAL,Lsoot/jimple/ParameterRef;,<init>,(Lsoot/Type;I)V)#4
soot.jimple.ParameterRef.<init>(Lsoot/Type;I)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.ParameterRef.<init>(Lsoot/Type;I)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.jimple.ParameterRef.<init>(Lsoot/Type;I)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.ParameterRef.<init>(Lsoot/Type;I)V#LocalLoad(I,2)#3
soot.jimple.ParameterRef.<init>(Lsoot/Type;I)V#Put(I,NONSTATIC,Lsoot/jimple/ParameterRef;,n)#4
soot.jimple.ParameterRef.<init>(Lsoot/Type;I)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.jimple.ParameterRef.<init>(Lsoot/Type;I)V#LocalLoad(Ljava/lang/Object;,1)#6
soot.jimple.ParameterRef.<init>(Lsoot/Type;I)V#Put(Lsoot/Type;,NONSTATIC,Lsoot/jimple/ParameterRef;,paramType)#7
soot.jimple.ParameterRef.<init>(Lsoot/Type;I)V#Return(V)#8
soot.jimple.Jimple.newParameterRef(Lsoot/Type;I)Lsoot/jimple/ParameterRef;#Return(Ljava/lang/Object;)#5
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(VIRTUAL,Lsoot/jimple/Jimple;,newIdentityStmt,(Lsoot/Value;Lsoot/Value;)Lsoot/jimple/IdentityStmt;)#190
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(INTERFACE,Lsoot/util/Chain;,add,(Ljava/lang/Object;)Z)#191
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Pop(1)#192
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,17)#193
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(STATIC,Lsoot/DoubleType;,v,()Lsoot/DoubleType;)#194
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#195
soot.ArrayType.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#0
soot.ArrayType.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#1
soot.ArrayType.equals(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,5)#2
soot.ArrayType.equals(Ljava/lang/Object;)Z#Constant(I,0)#5
soot.ArrayType.equals(Ljava/lang/Object;)Z#Return(I)#6
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Constant(I,0)#196
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#ConditionalBranch(I,ne,203)#197
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(Ljava/lang/Object;,17)#198
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(STATIC,Lsoot/LongType;,v,()Lsoot/LongType;)#199
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#200
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Constant(I,0)#201
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#ConditionalBranch(I,eq,208)#202
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(I,13)#208
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Constant(I,1)#209
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#BinaryOp(I,add)#210
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalStore(I,13)#211
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalLoad(I,15)#212
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#Constant(I,1)#213
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#BinaryOp(I,add)#214
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;ILsoot/coffi/BootstrapMethods_attribute;Lsoot/jimple/JimpleBody;)Z#LocalStore(I,15)#215
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,0)#1850
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,3)#1851
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,1)#1852
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#CheckCast(Lsoot/coffi/Instruction_New;)#1853
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Get(I,NONSTATIC,Lsoot/coffi/Instruction_New;,arg_i)#1854
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(VIRTUAL,Lsoot/coffi/CFG;,getClassName,([Lsoot/coffi/cp_info;I)Ljava/lang/String;)#1855
soot.coffi.CFG.getClassName([Lsoot/coffi/cp_info;I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#0
soot.coffi.CFG.getClassName([Lsoot/coffi/cp_info;I)Ljava/lang/String;#LocalLoad(I,2)#1
soot.coffi.CFG.getClassName([Lsoot/coffi/cp_info;I)Ljava/lang/String;#ArrayLoad(Ljava/lang/Object;)#2
soot.coffi.CFG.getClassName([Lsoot/coffi/cp_info;I)Ljava/lang/String;#CheckCast(Lsoot/coffi/CONSTANT_Class_info;)#3
soot.coffi.CFG.getClassName([Lsoot/coffi/cp_info;I)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,3)#4
soot.coffi.CFG.getClassName([Lsoot/coffi/cp_info;I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#5
soot.coffi.CFG.getClassName([Lsoot/coffi/cp_info;I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#6
soot.coffi.CFG.getClassName([Lsoot/coffi/cp_info;I)Ljava/lang/String;#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_Class_info;,name_index)#7
soot.coffi.CFG.getClassName([Lsoot/coffi/cp_info;I)Ljava/lang/String;#ArrayLoad(Ljava/lang/Object;)#8
soot.coffi.CFG.getClassName([Lsoot/coffi/cp_info;I)Ljava/lang/String;#CheckCast(Lsoot/coffi/CONSTANT_Utf8_info;)#9
soot.coffi.CFG.getClassName([Lsoot/coffi/cp_info;I)Ljava/lang/String;#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,convert,()Ljava/lang/String;)#10
soot.coffi.CFG.getClassName([Lsoot/coffi/cp_info;I)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,4)#11
soot.coffi.CFG.getClassName([Lsoot/coffi/cp_info;I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,4)#12
soot.coffi.CFG.getClassName([Lsoot/coffi/cp_info;I)Ljava/lang/String;#Constant(I,47)#13
soot.coffi.CFG.getClassName([Lsoot/coffi/cp_info;I)Ljava/lang/String;#Constant(I,46)#14
soot.coffi.CFG.getClassName([Lsoot/coffi/cp_info;I)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,replace,(CC)Ljava/lang/String;)#15
soot.coffi.CFG.getClassName([Lsoot/coffi/cp_info;I)Ljava/lang/String;#Return(Ljava/lang/Object;)#16
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(STATIC,Lsoot/RefType;,v,(Ljava/lang/String;)Lsoot/RefType;)#1856
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalStore(Ljava/lang/Object;,5)#1857
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,2)#1858
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,5)#1859
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,push,(Lsoot/Type;)Lsoot/coffi/TypeStack;)#1860
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalStore(Ljava/lang/Object;,2)#1861
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Goto(1927)#1862
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,2)#577
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,2)#578
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,top,()Lsoot/Type;)#579
soot.coffi.TypeStack.top()Lsoot/Type;#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.TypeStack.top()Lsoot/Type;#Get([Lsoot/Type;,NONSTATIC,Lsoot/coffi/TypeStack;,types)#1
soot.coffi.TypeStack.top()Lsoot/Type;#ArrayLength()#2
soot.coffi.TypeStack.top()Lsoot/Type;#Constant(I,0)#3
soot.coffi.TypeStack.top()Lsoot/Type;#ConditionalBranch(I,ne,10)#4
soot.coffi.TypeStack.top()Lsoot/Type;#LocalLoad(Ljava/lang/Object;,0)#10
soot.coffi.TypeStack.top()Lsoot/Type;#Get([Lsoot/Type;,NONSTATIC,Lsoot/coffi/TypeStack;,types)#11
soot.coffi.TypeStack.top()Lsoot/Type;#LocalLoad(Ljava/lang/Object;,0)#12
soot.coffi.TypeStack.top()Lsoot/Type;#Get([Lsoot/Type;,NONSTATIC,Lsoot/coffi/TypeStack;,types)#13
soot.coffi.TypeStack.top()Lsoot/Type;#ArrayLength()#14
soot.coffi.TypeStack.top()Lsoot/Type;#Constant(I,1)#15
soot.coffi.TypeStack.top()Lsoot/Type;#BinaryOp(I,sub)#16
soot.coffi.TypeStack.top()Lsoot/Type;#ArrayLoad(Ljava/lang/Object;)#17
soot.coffi.TypeStack.top()Lsoot/Type;#Return(Ljava/lang/Object;)#18
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,push,(Lsoot/Type;)Lsoot/coffi/TypeStack;)#580
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalStore(Ljava/lang/Object;,2)#581
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Goto(1927)#582
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,2)#189
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,top,()Lsoot/Type;)#190
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Instanceof(Lsoot/StmtAddressType;)#191
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Constant(I,0)#192
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#ConditionalBranch(I,ne,216)#193
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,2)#194
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,top,()Lsoot/Type;)#195
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Instanceof(Lsoot/RefType;)#196
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Constant(I,0)#197
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#ConditionalBranch(I,ne,216)#198
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,2)#216
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,pop,()Lsoot/coffi/TypeStack;)#217
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalStore(Ljava/lang/Object;,2)#218
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Goto(1927)#219
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,0)#17
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,3)#18
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,1)#19
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#CheckCast(Lsoot/coffi/Instruction_Ldc1;)#20
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Get(S,NONSTATIC,Lsoot/coffi/Instruction_Ldc1;,arg_b)#21
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,2)#22
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,0)#23
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Get(Lsoot/SootMethod;,NONSTATIC,Lsoot/coffi/CFG;,jmethod)#24
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(SPECIAL,Lsoot/coffi/CFG;,processCPEntry,([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;)#25
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,1)#0
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#LocalLoad(I,2)#1
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#ArrayLoad(Ljava/lang/Object;)#2
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#LocalStore(Ljava/lang/Object;,5)#3
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,5)#4
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#Instanceof(Lsoot/coffi/CONSTANT_Integer_info;)#5
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#Constant(I,0)#6
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#ConditionalBranch(I,eq,13)#7
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,5)#13
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#Instanceof(Lsoot/coffi/CONSTANT_Float_info;)#14
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#Constant(I,0)#15
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#ConditionalBranch(I,eq,22)#16
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,5)#22
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#Instanceof(Lsoot/coffi/CONSTANT_Long_info;)#23
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#Constant(I,0)#24
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#ConditionalBranch(I,eq,35)#25
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,5)#35
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#Instanceof(Lsoot/coffi/CONSTANT_Double_info;)#36
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#Constant(I,0)#37
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#ConditionalBranch(I,eq,48)#38
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,5)#48
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#Instanceof(Lsoot/coffi/CONSTANT_String_info;)#49
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#Constant(I,0)#50
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#ConditionalBranch(I,eq,58)#51
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,3)#52
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#Constant(Ljava/lang/String;,"java.lang.String")#53
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#Invoke(STATIC,Lsoot/RefType;,v,(Ljava/lang/String;)Lsoot/RefType;)#54
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,push,(Lsoot/Type;)Lsoot/coffi/TypeStack;)#55
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#LocalStore(Ljava/lang/Object;,3)#56
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#Goto(178)#57
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#New(Lsoot/coffi/OutFlow;,0)#178
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#Dup(1,0)#179
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,3)#180
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#Invoke(SPECIAL,Lsoot/coffi/OutFlow;,<init>,(Lsoot/coffi/TypeStack;)V)#181
soot.coffi.CFG.processCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/SootMethod;)Lsoot/coffi/OutFlow;#Return(Ljava/lang/Object;)#182
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Return(Ljava/lang/Object;)#26
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,1)#1764
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#CheckCast(Lsoot/coffi/Instruction_Invokeinterface;)#1765
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalStore(Ljava/lang/Object;,5)#1766
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,3)#1767
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,5)#1768
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Get(I,NONSTATIC,Lsoot/coffi/Instruction_Invokeinterface;,arg_i)#1769
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(STATIC,Lsoot/coffi/cp_info;,countParams,([Lsoot/coffi/cp_info;I)I)#1770
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#12
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,5)#13
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#14
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,4)#15
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,4)#16
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"B")#17
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#18
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#19
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ne,24)#20
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,4)#24
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"C")#25
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#26
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#27
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ne,32)#28
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,4)#32
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"D")#33
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#34
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#35
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ne,40)#36
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,4)#40
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"F")#41
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#42
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#43
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ne,48)#44
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,4)#48
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"I")#49
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#50
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#51
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ne,56)#52
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,4)#56
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"J")#57
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#58
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#59
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ne,64)#60
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,4)#64
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"S")#65
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#66
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#67
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ne,72)#68
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,4)#72
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"Z")#73
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#74
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#75
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ne,80)#76
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,4)#80
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"V")#81
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#82
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#83
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ne,88)#84
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,4)#88
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"[")#89
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#90
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#91
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ne,98)#92
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,4)#98
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"L")#99
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#100
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#101
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ne,166)#102
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#103
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(I,59)#104
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,5)#105
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(I,1)#106
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#BinaryOp(I,add)#107
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,indexOf,(II)I)#108
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,9)#109
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,9)#110
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#111
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ge,130)#112
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,9)#130
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,5)#131
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#BinaryOp(I,sub)#132
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(I,10)#133
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,le,151)#134
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#135
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,5)#136
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(I,1)#137
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#BinaryOp(I,add)#138
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,5)#139
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(I,11)#140
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#BinaryOp(I,add)#141
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,substring,(II)Ljava/lang/String;)#142
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"java/lang/")#143
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,compareTo,(Ljava/lang/String;)I)#144
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#145
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ne,151)#146
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,5)#147
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(I,10)#148
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#BinaryOp(I,add)#149
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,5)#150
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#151
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,5)#152
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(I,1)#153
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#BinaryOp(I,add)#154
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,9)#155
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,substring,(II)Ljava/lang/String;)#156
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,3)#157
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#158
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(I,47)#159
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(I,46)#160
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,replace,(CC)Ljava/lang/String;)#161
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,3)#162
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,9)#163
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,5)#164
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Goto(168)#165
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,8)#168
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#169
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,180)#170
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#New(Ljava/lang/StringBuilder;,0)#180
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Dup(1,0)#181
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#182
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#183
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#184
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#185
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#186
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#187
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,2)#188
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Goto(203)#189
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,7)#203
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#204
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,gt,190)#205
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(I,1)#206
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,8)#207
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,5)#208
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(I,1)#209
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#BinaryOp(I,add)#210
soot.coffi.ClassFile.parseDesc(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,5)#211
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalStore(I,6)#1771
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,0)#1772
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,0)#1773
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,0)#1774
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Get(Lsoot/Scene;,NONSTATIC,Lsoot/coffi/CFG;,cm)#1775
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,3)#1776
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,5)#1777
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Get(I,NONSTATIC,Lsoot/coffi/Instruction_Invokeinterface;,arg_i)#1778
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(SPECIAL,Lsoot/coffi/CFG;,jimpleReturnTypeOfInterfaceMethodRef,(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;)#1779
soot.coffi.CFG.jimpleReturnTypeOfInterfaceMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,2)#0
soot.coffi.CFG.jimpleReturnTypeOfInterfaceMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#LocalLoad(I,3)#1
soot.coffi.CFG.jimpleReturnTypeOfInterfaceMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#ArrayLoad(Ljava/lang/Object;)#2
soot.coffi.CFG.jimpleReturnTypeOfInterfaceMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#CheckCast(Lsoot/coffi/CONSTANT_InterfaceMethodref_info;)#3
soot.coffi.CFG.jimpleReturnTypeOfInterfaceMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#LocalStore(Ljava/lang/Object;,4)#4
soot.coffi.CFG.jimpleReturnTypeOfInterfaceMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,2)#5
soot.coffi.CFG.jimpleReturnTypeOfInterfaceMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,4)#6
soot.coffi.CFG.jimpleReturnTypeOfInterfaceMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_InterfaceMethodref_info;,name_and_type_index)#7
soot.coffi.CFG.jimpleReturnTypeOfInterfaceMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#ArrayLoad(Ljava/lang/Object;)#8
soot.coffi.CFG.jimpleReturnTypeOfInterfaceMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#CheckCast(Lsoot/coffi/CONSTANT_NameAndType_info;)#9
soot.coffi.CFG.jimpleReturnTypeOfInterfaceMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#LocalStore(Ljava/lang/Object;,5)#10
soot.coffi.CFG.jimpleReturnTypeOfInterfaceMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,2)#11
soot.coffi.CFG.jimpleReturnTypeOfInterfaceMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,5)#12
soot.coffi.CFG.jimpleReturnTypeOfInterfaceMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_NameAndType_info;,descriptor_index)#13
soot.coffi.CFG.jimpleReturnTypeOfInterfaceMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#ArrayLoad(Ljava/lang/Object;)#14
soot.coffi.CFG.jimpleReturnTypeOfInterfaceMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#CheckCast(Lsoot/coffi/CONSTANT_Utf8_info;)#15
soot.coffi.CFG.jimpleReturnTypeOfInterfaceMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,convert,()Ljava/lang/String;)#16
soot.coffi.CFG.jimpleReturnTypeOfInterfaceMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#LocalStore(Ljava/lang/Object;,6)#17
soot.coffi.CFG.jimpleReturnTypeOfInterfaceMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#Invoke(STATIC,Lsoot/coffi/Util;,v,()Lsoot/coffi/Util;)#18
soot.coffi.CFG.jimpleReturnTypeOfInterfaceMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,6)#19
soot.coffi.CFG.jimpleReturnTypeOfInterfaceMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#Invoke(VIRTUAL,Lsoot/coffi/Util;,jimpleReturnTypeOfMethodDescriptor,(Ljava/lang/String;)Lsoot/Type;)#20
soot.coffi.CFG.jimpleReturnTypeOfInterfaceMethodRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#Return(Ljava/lang/Object;)#21
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(SPECIAL,Lsoot/coffi/CFG;,byteCodeTypeOf,(Lsoot/Type;)Lsoot/Type;)#1780
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalStore(Ljava/lang/Object;,7)#1781
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(I,6)#1782
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Constant(I,1)#1783
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#BinaryOp(I,sub)#1784
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalStore(I,8)#1785
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Goto(1831)#1786
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(I,8)#1831
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Constant(I,0)#1832
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#ConditionalBranch(I,ge,1787)#1833
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,2)#1787
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,top,()Lsoot/Type;)#1788
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(STATIC,Lsoot/coffi/Long2ndHalfType;,v,()Lsoot/coffi/Long2ndHalfType;)#1789
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#1790
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Constant(I,0)#1791
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#ConditionalBranch(I,eq,1804)#1792
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,2)#1804
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,top,()Lsoot/Type;)#1805
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(STATIC,Lsoot/coffi/Double2ndHalfType;,v,()Lsoot/coffi/Double2ndHalfType;)#1806
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#1807
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Constant(I,0)#1808
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#ConditionalBranch(I,eq,1821)#1809
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,0)#1821
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,2)#1822
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,2)#1823
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,top,()Lsoot/Type;)#1824
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(VIRTUAL,Lsoot/coffi/CFG;,popSafe,(Lsoot/coffi/TypeStack;Lsoot/Type;)Lsoot/coffi/TypeStack;)#1825
soot.coffi.CFG.popSafe(Lsoot/coffi/TypeStack;Lsoot/Type;)Lsoot/coffi/TypeStack;#LocalLoad(Ljava/lang/Object;,1)#0
soot.coffi.CFG.popSafe(Lsoot/coffi/TypeStack;Lsoot/Type;)Lsoot/coffi/TypeStack;#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,pop,()Lsoot/coffi/TypeStack;)#1
soot.coffi.CFG.popSafe(Lsoot/coffi/TypeStack;Lsoot/Type;)Lsoot/coffi/TypeStack;#Return(Ljava/lang/Object;)#2
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalStore(Ljava/lang/Object;,2)#1826
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(I,8)#1827
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Constant(I,-1)#1828
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#BinaryOp(I,add)#1829
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalStore(I,8)#1830
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,0)#1834
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,2)#1835
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(VIRTUAL,Lsoot/coffi/CFG;,popSafeRefType,(Lsoot/coffi/TypeStack;)Lsoot/coffi/TypeStack;)#1836
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalStore(Ljava/lang/Object;,2)#1837
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,7)#1838
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(STATIC,Lsoot/VoidType;,v,()Lsoot/VoidType;)#1839
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#1840
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Constant(I,0)#1841
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#ConditionalBranch(I,ne,1927)#1842
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#4344
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Get(Lsoot/Scene;,NONSTATIC,Lsoot/coffi/CFG;,cm)#4345
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#4346
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,4)#4347
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#4348
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#CheckCast(Lsoot/coffi/Instruction_New;)#4349
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Get(I,NONSTATIC,Lsoot/coffi/Instruction_New;,arg_i)#4350
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/CFG;,getClassName,([Lsoot/coffi/cp_info;I)Ljava/lang/String;)#4351
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/Scene;,getSootClass,(Ljava/lang/String;)Lsoot/SootClass;)#4352
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,19)#4353
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/jimple/Jimple;,v,()Lsoot/jimple/Jimple;)#4354
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/coffi/Util;,v,()Lsoot/coffi/Util;)#4355
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#4356
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Get(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/coffi/CFG;,listBody)#4357
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,3)#4358
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,3)#4359
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,topIndex,()I)#4360
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/Util;,getLocalForStackOp,(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;)#4361
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/jimple/Jimple;,v,()Lsoot/jimple/Jimple;)#4362
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,19)#4363
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getName,()Ljava/lang/String;)#4364
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/RefType;,v,(Ljava/lang/String;)Lsoot/RefType;)#4365
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/jimple/Jimple;,newNewExpr,(Lsoot/RefType;)Lsoot/jimple/NewExpr;)#4366
soot.jimple.Jimple.newNewExpr(Lsoot/RefType;)Lsoot/jimple/NewExpr;#New(Lsoot/jimple/internal/JNewExpr;,0)#0
soot.jimple.Jimple.newNewExpr(Lsoot/RefType;)Lsoot/jimple/NewExpr;#Dup(1,0)#1
soot.jimple.Jimple.newNewExpr(Lsoot/RefType;)Lsoot/jimple/NewExpr;#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.Jimple.newNewExpr(Lsoot/RefType;)Lsoot/jimple/NewExpr;#Invoke(SPECIAL,Lsoot/jimple/internal/JNewExpr;,<init>,(Lsoot/RefType;)V)#3
soot.jimple.internal.JNewExpr.<init>(Lsoot/RefType;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JNewExpr.<init>(Lsoot/RefType;)V#Invoke(SPECIAL,Lsoot/jimple/internal/AbstractNewExpr;,<init>,()V)#1
soot.jimple.internal.AbstractNewExpr.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.AbstractNewExpr.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.jimple.internal.AbstractNewExpr.<init>()V#Return(V)#2
soot.jimple.internal.JNewExpr.<init>(Lsoot/RefType;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.internal.JNewExpr.<init>(Lsoot/RefType;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.jimple.internal.JNewExpr.<init>(Lsoot/RefType;)V#Put(Lsoot/RefType;,NONSTATIC,Lsoot/jimple/internal/JNewExpr;,type)#4
soot.jimple.internal.JNewExpr.<init>(Lsoot/RefType;)V#Return(V)#5
soot.jimple.Jimple.newNewExpr(Lsoot/RefType;)Lsoot/jimple/NewExpr;#Return(Ljava/lang/Object;)#4
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/jimple/Jimple;,newAssignStmt,(Lsoot/Value;Lsoot/Value;)Lsoot/jimple/AssignStmt;)#4367
soot.jimple.internal.RValueBox.canContainValue(Lsoot/Value;)Z#LocalLoad(Ljava/lang/Object;,1)#4
soot.jimple.internal.RValueBox.canContainValue(Lsoot/Value;)Z#Instanceof(Lsoot/jimple/Constant;)#5
soot.jimple.internal.RValueBox.canContainValue(Lsoot/Value;)Z#Constant(I,0)#6
soot.jimple.internal.RValueBox.canContainValue(Lsoot/Value;)Z#ConditionalBranch(I,ne,18)#7
soot.jimple.internal.RValueBox.canContainValue(Lsoot/Value;)Z#LocalLoad(Ljava/lang/Object;,1)#8
soot.jimple.internal.RValueBox.canContainValue(Lsoot/Value;)Z#Instanceof(Lsoot/jimple/ConcreteRef;)#9
soot.jimple.internal.RValueBox.canContainValue(Lsoot/Value;)Z#Constant(I,0)#10
soot.jimple.internal.RValueBox.canContainValue(Lsoot/Value;)Z#ConditionalBranch(I,ne,18)#11
soot.jimple.internal.RValueBox.canContainValue(Lsoot/Value;)Z#LocalLoad(Ljava/lang/Object;,1)#12
soot.jimple.internal.RValueBox.canContainValue(Lsoot/Value;)Z#Instanceof(Lsoot/jimple/Expr;)#13
soot.jimple.internal.RValueBox.canContainValue(Lsoot/Value;)Z#Constant(I,0)#14
soot.jimple.internal.RValueBox.canContainValue(Lsoot/Value;)Z#ConditionalBranch(I,ne,18)#15
soot.jimple.internal.JAssignStmt$LinkedRValueBox.canContainValue(Lsoot/Value;)Z#LocalLoad(Ljava/lang/Object;,1)#21
soot.jimple.internal.JAssignStmt$LinkedRValueBox.canContainValue(Lsoot/Value;)Z#Instanceof(Lsoot/jimple/Constant;)#22
soot.jimple.internal.JAssignStmt$LinkedRValueBox.canContainValue(Lsoot/Value;)Z#Constant(I,0)#23
soot.jimple.internal.JAssignStmt$LinkedRValueBox.canContainValue(Lsoot/Value;)Z#ConditionalBranch(I,ne,33)#24
soot.jimple.internal.JAssignStmt$LinkedRValueBox.canContainValue(Lsoot/Value;)Z#LocalLoad(Ljava/lang/Object;,2)#25
soot.jimple.internal.JAssignStmt$LinkedRValueBox.canContainValue(Lsoot/Value;)Z#Instanceof(Lsoot/Local;)#26
soot.jimple.internal.JAssignStmt$LinkedRValueBox.canContainValue(Lsoot/Value;)Z#Constant(I,0)#27
soot.jimple.internal.JAssignStmt$LinkedRValueBox.canContainValue(Lsoot/Value;)Z#ConditionalBranch(I,ne,33)#28
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,17)#4368
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Goto(4499)#4369
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/jimple/Jimple;,v,()Lsoot/jimple/Jimple;)#918
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/coffi/Util;,v,()Lsoot/coffi/Util;)#919
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#920
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Get(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/coffi/CFG;,listBody)#921
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,3)#922
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,3)#923
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,topIndex,()I)#924
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/Util;,getLocalForStackOp,(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;)#925
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/coffi/Util;,v,()Lsoot/coffi/Util;)#926
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#927
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Get(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/coffi/CFG;,listBody)#928
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,2)#929
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,2)#930
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,topIndex,()I)#931
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/Util;,getLocalForStackOp,(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;)#932
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/jimple/Jimple;,newAssignStmt,(Lsoot/Value;Lsoot/Value;)Lsoot/jimple/AssignStmt;)#933
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,17)#934
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Goto(4499)#935
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/coffi/Util;,v,()Lsoot/coffi/Util;)#552
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(I,1)#553
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Put(Z,NONSTATIC,Lsoot/coffi/Util;,isLocalStore)#554
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/coffi/Util;,v,()Lsoot/coffi/Util;)#555
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#556
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Get(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/coffi/CFG;,listBody)#557
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(I,18)#558
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(I,75)#559
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#BinaryOp(I,sub)#560
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/Util;,getLocalForIndex,(Lsoot/jimple/JimpleBody;I)Lsoot/Local;)#561
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#Invoke(STATIC,Lsoot/jimple/Jimple;,v,()Lsoot/jimple/Jimple;)#87
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,3)#88
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#Invoke(STATIC,Lsoot/UnknownType;,v,()Lsoot/UnknownType;)#89
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#Invoke(VIRTUAL,Lsoot/jimple/Jimple;,newLocal,(Ljava/lang/String;Lsoot/Type;)Lsoot/Local;)#90
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#LocalStore(Ljava/lang/Object;,6)#91
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,1)#92
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#Invoke(VIRTUAL,Lsoot/jimple/JimpleBody;,getLocals,()Lsoot/util/Chain;)#93
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,6)#94
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#Invoke(INTERFACE,Lsoot/util/Chain;,add,(Ljava/lang/Object;)Z)#95
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#Pop(1)#96
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,6)#97
soot.coffi.Util.getLocalForIndex(Lsoot/jimple/JimpleBody;I)Lsoot/Local;#Return(Ljava/lang/Object;)#98
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,19)#562
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/jimple/Jimple;,v,()Lsoot/jimple/Jimple;)#563
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,19)#564
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/coffi/Util;,v,()Lsoot/coffi/Util;)#565
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#566
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Get(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/coffi/CFG;,listBody)#567
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,2)#568
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,2)#569
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,topIndex,()I)#570
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/Util;,getLocalForStackOp,(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;)#571
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/jimple/Jimple;,newAssignStmt,(Lsoot/Value;Lsoot/Value;)Lsoot/jimple/AssignStmt;)#572
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,17)#573
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Goto(4499)#574
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#67
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,4)#68
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#69
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#CheckCast(Lsoot/coffi/Instruction_Ldc1;)#70
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Get(S,NONSTATIC,Lsoot/coffi/Instruction_Ldc1;,arg_b)#71
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,2)#72
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,3)#73
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#74
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Get(Lsoot/SootMethod;,NONSTATIC,Lsoot/coffi/CFG;,jmethod)#75
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,5)#76
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(SPECIAL,Lsoot/coffi/CFG;,generateJimpleForCPEntry,([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V)#77
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#LocalLoad(I,2)#1
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#2
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,9)#3
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,9)#4
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#Instanceof(Lsoot/coffi/CONSTANT_Integer_info;)#5
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#Constant(I,0)#6
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#ConditionalBranch(I,eq,28)#7
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,9)#28
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#Instanceof(Lsoot/coffi/CONSTANT_Float_info;)#29
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#Constant(I,0)#30
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#ConditionalBranch(I,eq,51)#31
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,9)#51
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#Instanceof(Lsoot/coffi/CONSTANT_Long_info;)#52
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#Constant(I,0)#53
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#ConditionalBranch(I,eq,74)#54
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,9)#74
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#Instanceof(Lsoot/coffi/CONSTANT_Double_info;)#75
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#Constant(I,0)#76
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#ConditionalBranch(I,eq,97)#77
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,9)#97
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#Instanceof(Lsoot/coffi/CONSTANT_String_info;)#98
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#Constant(I,0)#99
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#ConditionalBranch(I,eq,141)#100
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,9)#101
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#CheckCast(Lsoot/coffi/CONSTANT_String_info;)#102
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,10)#103
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,10)#104
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#105
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_String_info;,toString,([Lsoot/coffi/cp_info;)Ljava/lang/String;)#106
soot.coffi.CONSTANT_String_info.toString([Lsoot/coffi/cp_info;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#0
soot.coffi.CONSTANT_String_info.toString([Lsoot/coffi/cp_info;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#1
soot.coffi.CONSTANT_String_info.toString([Lsoot/coffi/cp_info;)Ljava/lang/String;#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_String_info;,string_index)#2
soot.coffi.CONSTANT_String_info.toString([Lsoot/coffi/cp_info;)Ljava/lang/String;#ArrayLoad(Ljava/lang/Object;)#3
soot.coffi.CONSTANT_String_info.toString([Lsoot/coffi/cp_info;)Ljava/lang/String;#CheckCast(Lsoot/coffi/CONSTANT_Utf8_info;)#4
soot.coffi.CONSTANT_String_info.toString([Lsoot/coffi/cp_info;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,2)#5
soot.coffi.CONSTANT_String_info.toString([Lsoot/coffi/cp_info;)Ljava/lang/String;#New(Ljava/lang/StringBuilder;,0)#6
soot.coffi.CONSTANT_String_info.toString([Lsoot/coffi/cp_info;)Ljava/lang/String;#Dup(1,0)#7
soot.coffi.CONSTANT_String_info.toString([Lsoot/coffi/cp_info;)Ljava/lang/String;#Constant(Ljava/lang/String;,"\"")#8
soot.coffi.CONSTANT_String_info.toString([Lsoot/coffi/cp_info;)Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#9
soot.coffi.CONSTANT_String_info.toString([Lsoot/coffi/cp_info;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#10
soot.coffi.CONSTANT_String_info.toString([Lsoot/coffi/cp_info;)Ljava/lang/String;#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,convert,()Ljava/lang/String;)#11
soot.coffi.CONSTANT_String_info.toString([Lsoot/coffi/cp_info;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#12
soot.coffi.CONSTANT_String_info.toString([Lsoot/coffi/cp_info;)Ljava/lang/String;#Constant(Ljava/lang/String;,"\"")#13
soot.coffi.CONSTANT_String_info.toString([Lsoot/coffi/cp_info;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#14
soot.coffi.CONSTANT_String_info.toString([Lsoot/coffi/cp_info;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#15
soot.coffi.CONSTANT_String_info.toString([Lsoot/coffi/cp_info;)Ljava/lang/String;#Return(Ljava/lang/Object;)#16
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,11)#107
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,11)#108
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#Constant(Ljava/lang/String;,"\"")#109
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#Invoke(VIRTUAL,Ljava/lang/String;,startsWith,(Ljava/lang/String;)Z)#110
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#Constant(I,0)#111
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#ConditionalBranch(I,eq,126)#112
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,11)#113
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#Constant(Ljava/lang/String;,"\"")#114
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#Invoke(VIRTUAL,Ljava/lang/String;,endsWith,(Ljava/lang/String;)Z)#115
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#Constant(I,0)#116
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#ConditionalBranch(I,eq,126)#117
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,11)#118
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#Constant(I,1)#119
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,11)#120
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#121
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#Constant(I,1)#122
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#BinaryOp(I,sub)#123
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#Invoke(VIRTUAL,Ljava/lang/String;,substring,(II)Ljava/lang/String;)#124
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,11)#125
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,11)#126
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#Invoke(STATIC,Lsoot/jimple/StringConstant;,v,(Ljava/lang/String;)Lsoot/jimple/StringConstant;)#127
soot.jimple.StringConstant.v(Ljava/lang/String;)Lsoot/jimple/StringConstant;#New(Lsoot/jimple/StringConstant;,0)#0
soot.jimple.StringConstant.v(Ljava/lang/String;)Lsoot/jimple/StringConstant;#Dup(1,0)#1
soot.jimple.StringConstant.v(Ljava/lang/String;)Lsoot/jimple/StringConstant;#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.StringConstant.v(Ljava/lang/String;)Lsoot/jimple/StringConstant;#Invoke(SPECIAL,Lsoot/jimple/StringConstant;,<init>,(Ljava/lang/String;)V)#3
soot.jimple.StringConstant.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.StringConstant.<init>(Ljava/lang/String;)V#Invoke(SPECIAL,Lsoot/jimple/Constant;,<init>,()V)#1
soot.jimple.Constant.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.Constant.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.jimple.Constant.<init>()V#Return(V)#2
soot.jimple.StringConstant.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.StringConstant.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.jimple.StringConstant.<init>(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/jimple/StringConstant;,value)#4
soot.jimple.StringConstant.<init>(Ljava/lang/String;)V#Return(V)#5
soot.jimple.StringConstant.v(Ljava/lang/String;)Lsoot/jimple/StringConstant;#Return(Ljava/lang/Object;)#4
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,8)#128
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#Invoke(STATIC,Lsoot/jimple/Jimple;,v,()Lsoot/jimple/Jimple;)#129
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#Invoke(STATIC,Lsoot/coffi/Util;,v,()Lsoot/coffi/Util;)#130
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#131
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#Get(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/coffi/CFG;,listBody)#132
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,4)#133
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,4)#134
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,topIndex,()I)#135
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/coffi/Util;,getLocalForStackOp,(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;)#136
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,8)#137
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/jimple/Jimple;,newAssignStmt,(Lsoot/Value;Lsoot/Value;)Lsoot/jimple/AssignStmt;)#138
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,7)#139
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#Goto(222)#140
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#222
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,7)#223
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#224
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#Pop(1)#225
soot.coffi.CFG.generateJimpleForCPEntry([Lsoot/coffi/cp_info;ILsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;Lsoot/SootMethod;Ljava/util/List;)V#Return(V)#226
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Goto(4499)#78
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#4234
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#CheckCast(Lsoot/coffi/Instruction_Invokeinterface;)#4235
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,19)#4236
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,4)#4237
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,19)#4238
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Get(I,NONSTATIC,Lsoot/coffi/Instruction_Invokeinterface;,arg_i)#4239
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/coffi/cp_info;,countParams,([Lsoot/coffi/cp_info;I)I)#4240
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(I,15)#4241
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,4)#4242
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,19)#4243
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Get(I,NONSTATIC,Lsoot/coffi/Instruction_Invokeinterface;,arg_i)#4244
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#ArrayLoad(Ljava/lang/Object;)#4245
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#CheckCast(Lsoot/coffi/CONSTANT_InterfaceMethodref_info;)#4246
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,20)#4247
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#4248
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,4)#4249
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,20)#4250
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(I,0)#4251
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(SPECIAL,Lsoot/coffi/CFG;,createMethodRef,([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;)#4252
soot.coffi.CONSTANT_InterfaceMethodref_info.getClassIndex()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.CONSTANT_InterfaceMethodref_info.getClassIndex()I#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_InterfaceMethodref_info;,class_index)#1
soot.coffi.CONSTANT_InterfaceMethodref_info.getClassIndex()I#Return(I)#2
soot.coffi.CONSTANT_InterfaceMethodref_info.getNameAndTypeIndex()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.CONSTANT_InterfaceMethodref_info.getNameAndTypeIndex()I#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_InterfaceMethodref_info;,name_and_type_index)#1
soot.coffi.CONSTANT_InterfaceMethodref_info.getNameAndTypeIndex()I#Return(I)#2
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,11)#61
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,13)#62
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalLoad(I,14)#63
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#ArrayLoad(Ljava/lang/Object;)#64
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#65
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#Pop(1)#66
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalLoad(I,14)#67
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#Constant(I,1)#68
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#BinaryOp(I,add)#69
soot.coffi.CFG.createMethodRef([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;#LocalStore(I,14)#70
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,21)#4253
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,21)#4254
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(INTERFACE,Lsoot/SootMethodRef;,returnType,()Lsoot/Type;)#4255
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,22)#4256
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(I,15)#4257
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#New([Lsoot/Value;,1)#4258
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,7)#4259
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(I,15)#4260
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(I,1)#4261
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#BinaryOp(I,sub)#4262
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(I,23)#4263
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Goto(4295)#4264
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(I,23)#4295
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(I,0)#4296
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#ConditionalBranch(I,ge,4265)#4297
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,7)#4265
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(I,23)#4266
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/coffi/Util;,v,()Lsoot/coffi/Util;)#4267
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#4268
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Get(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/coffi/CFG;,listBody)#4269
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,2)#4270
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,2)#4271
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,topIndex,()I)#4272
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/Util;,getLocalForStackOp,(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;)#4273
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#ArrayStore(Ljava/lang/Object;)#4274
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#4275
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,2)#4276
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,top,()Lsoot/Type;)#4277
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/CFG;,typeSize,(Lsoot/Type;)I)#4278
soot.coffi.CFG.typeSize(Lsoot/Type;)I#LocalLoad(Ljava/lang/Object;,1)#0
soot.coffi.CFG.typeSize(Lsoot/Type;)I#Invoke(STATIC,Lsoot/LongType;,v,()Lsoot/LongType;)#1
soot.coffi.CFG.typeSize(Lsoot/Type;)I#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#2
soot.coffi.CFG.typeSize(Lsoot/Type;)I#Constant(I,0)#3
soot.coffi.CFG.typeSize(Lsoot/Type;)I#ConditionalBranch(I,ne,20)#4
soot.coffi.CFG.typeSize(Lsoot/Type;)I#LocalLoad(Ljava/lang/Object;,1)#5
soot.coffi.CFG.typeSize(Lsoot/Type;)I#Invoke(STATIC,Lsoot/DoubleType;,v,()Lsoot/DoubleType;)#6
soot.coffi.CFG.typeSize(Lsoot/Type;)I#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#7
soot.coffi.CFG.typeSize(Lsoot/Type;)I#Constant(I,0)#8
soot.coffi.CFG.typeSize(Lsoot/Type;)I#ConditionalBranch(I,ne,20)#9
soot.coffi.CFG.typeSize(Lsoot/Type;)I#LocalLoad(Ljava/lang/Object;,1)#10
soot.coffi.CFG.typeSize(Lsoot/Type;)I#Invoke(STATIC,Lsoot/coffi/Long2ndHalfType;,v,()Lsoot/coffi/Long2ndHalfType;)#11
soot.coffi.CFG.typeSize(Lsoot/Type;)I#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#12
soot.coffi.CFG.typeSize(Lsoot/Type;)I#Constant(I,0)#13
soot.coffi.CFG.typeSize(Lsoot/Type;)I#ConditionalBranch(I,ne,20)#14
soot.coffi.CFG.typeSize(Lsoot/Type;)I#LocalLoad(Ljava/lang/Object;,1)#15
soot.coffi.CFG.typeSize(Lsoot/Type;)I#Invoke(STATIC,Lsoot/coffi/Double2ndHalfType;,v,()Lsoot/coffi/Double2ndHalfType;)#16
soot.coffi.CFG.typeSize(Lsoot/Type;)I#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#17
soot.coffi.CFG.typeSize(Lsoot/Type;)I#Constant(I,0)#18
soot.coffi.CFG.typeSize(Lsoot/Type;)I#ConditionalBranch(I,eq,22)#19
soot.coffi.CFG.typeSize(Lsoot/Type;)I#Constant(I,1)#22
soot.coffi.CFG.typeSize(Lsoot/Type;)I#Return(I)#23
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(I,2)#4279
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#ConditionalBranch(I,ne,4288)#4280
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,2)#4288
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,pop,()Lsoot/coffi/TypeStack;)#4289
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,2)#4290
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(I,23)#4291
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(I,-1)#4292
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#BinaryOp(I,add)#4293
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(I,23)#4294
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/jimple/Jimple;,v,()Lsoot/jimple/Jimple;)#4298
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/coffi/Util;,v,()Lsoot/coffi/Util;)#4299
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#4300
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Get(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/coffi/CFG;,listBody)#4301
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,2)#4302
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,2)#4303
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,topIndex,()I)#4304
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/Util;,getLocalForStackOp,(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;)#4305
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,21)#4306
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,7)#4307
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Ljava/util/Arrays;,asList,([Ljava/lang/Object;)Ljava/util/List;)#4308
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/jimple/Jimple;,newInterfaceInvokeExpr,(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)Lsoot/jimple/InterfaceInvokeExpr;)#4309
soot.jimple.Jimple.newInterfaceInvokeExpr(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)Lsoot/jimple/InterfaceInvokeExpr;#New(Lsoot/jimple/internal/JInterfaceInvokeExpr;,0)#0
soot.jimple.Jimple.newInterfaceInvokeExpr(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)Lsoot/jimple/InterfaceInvokeExpr;#Dup(1,0)#1
soot.jimple.Jimple.newInterfaceInvokeExpr(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)Lsoot/jimple/InterfaceInvokeExpr;#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.Jimple.newInterfaceInvokeExpr(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)Lsoot/jimple/InterfaceInvokeExpr;#LocalLoad(Ljava/lang/Object;,2)#3
soot.jimple.Jimple.newInterfaceInvokeExpr(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)Lsoot/jimple/InterfaceInvokeExpr;#LocalLoad(Ljava/lang/Object;,3)#4
soot.jimple.Jimple.newInterfaceInvokeExpr(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)Lsoot/jimple/InterfaceInvokeExpr;#Invoke(SPECIAL,Lsoot/jimple/internal/JInterfaceInvokeExpr;,<init>,(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V)#5
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#Invoke(STATIC,Lsoot/jimple/Jimple;,v,()Lsoot/jimple/Jimple;)#1
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/jimple/Jimple;,newLocalBox,(Lsoot/Value;)Lsoot/ValueBox;)#3
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#4
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#5
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#6
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#New([Lsoot/ValueBox;,1)#7
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#Invoke(SPECIAL,Lsoot/jimple/internal/AbstractInterfaceInvokeExpr;,<init>,(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V)#8
soot.jimple.internal.AbstractInterfaceInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.AbstractInterfaceInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#Invoke(SPECIAL,Lsoot/jimple/internal/AbstractInstanceInvokeExpr;,<init>,()V)#1
soot.jimple.internal.AbstractInterfaceInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,2)#2
soot.jimple.internal.AbstractInterfaceInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#Invoke(INTERFACE,Lsoot/SootMethodRef;,isStatic,()Z)#3
soot.jimple.internal.AbstractInterfaceInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#Constant(I,0)#4
soot.jimple.internal.AbstractInterfaceInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#ConditionalBranch(I,eq,11)#5
soot.jimple.internal.AbstractInterfaceInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.jimple.internal.AbstractInterfaceInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,1)#12
soot.jimple.internal.AbstractInterfaceInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#Put(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/AbstractInterfaceInvokeExpr;,baseBox)#13
soot.jimple.internal.AbstractInterfaceInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,0)#14
soot.jimple.internal.AbstractInterfaceInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,2)#15
soot.jimple.internal.AbstractInterfaceInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#Put(Lsoot/SootMethodRef;,NONSTATIC,Lsoot/jimple/internal/AbstractInterfaceInvokeExpr;,methodRef)#16
soot.jimple.internal.AbstractInterfaceInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,0)#17
soot.jimple.internal.AbstractInterfaceInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,3)#18
soot.jimple.internal.AbstractInterfaceInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#Put([Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/AbstractInterfaceInvokeExpr;,argBoxes)#19
soot.jimple.internal.AbstractInterfaceInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#Return(V)#20
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#9
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#Invoke(INTERFACE,Lsoot/SootMethodRef;,declaringClass,()Lsoot/SootClass;)#10
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/SootClass;,isInterface,()Z)#11
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#Constant(I,0)#12
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#ConditionalBranch(I,ne,33)#13
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#Constant(I,0)#33
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalStore(I,4)#34
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#Goto(50)#35
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalLoad(I,4)#50
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#51
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#52
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#ConditionalBranch(I,lt,36)#53
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#36
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#Get([Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/JInterfaceInvokeExpr;,argBoxes)#37
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalLoad(I,4)#38
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#Invoke(STATIC,Lsoot/jimple/Jimple;,v,()Lsoot/jimple/Jimple;)#39
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#40
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalLoad(I,4)#41
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#42
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#CheckCast(Lsoot/Value;)#43
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/jimple/Jimple;,newImmediateBox,(Lsoot/Value;)Lsoot/ValueBox;)#44
soot.jimple.Jimple.newImmediateBox(Lsoot/Value;)Lsoot/ValueBox;#New(Lsoot/jimple/internal/ImmediateBox;,0)#0
soot.jimple.Jimple.newImmediateBox(Lsoot/Value;)Lsoot/ValueBox;#Dup(1,0)#1
soot.jimple.Jimple.newImmediateBox(Lsoot/Value;)Lsoot/ValueBox;#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.Jimple.newImmediateBox(Lsoot/Value;)Lsoot/ValueBox;#Invoke(SPECIAL,Lsoot/jimple/internal/ImmediateBox;,<init>,(Lsoot/Value;)V)#3
soot.jimple.internal.ImmediateBox.<init>(Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.ImmediateBox.<init>(Lsoot/Value;)V#Invoke(SPECIAL,Lsoot/AbstractValueBox;,<init>,()V)#1
soot.jimple.internal.ImmediateBox.<init>(Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.internal.ImmediateBox.<init>(Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.jimple.internal.ImmediateBox.<init>(Lsoot/Value;)V#Invoke(VIRTUAL,Lsoot/jimple/internal/ImmediateBox;,setValue,(Lsoot/Value;)V)#4
soot.jimple.internal.ImmediateBox.canContainValue(Lsoot/Value;)Z#LocalLoad(Ljava/lang/Object;,1)#0
soot.jimple.internal.ImmediateBox.canContainValue(Lsoot/Value;)Z#Instanceof(Lsoot/Local;)#1
soot.jimple.internal.ImmediateBox.canContainValue(Lsoot/Value;)Z#Constant(I,0)#2
soot.jimple.internal.ImmediateBox.canContainValue(Lsoot/Value;)Z#ConditionalBranch(I,ne,10)#3
soot.jimple.internal.ImmediateBox.canContainValue(Lsoot/Value;)Z#Constant(I,1)#10
soot.jimple.internal.ImmediateBox.canContainValue(Lsoot/Value;)Z#Return(I)#11
soot.jimple.internal.ImmediateBox.<init>(Lsoot/Value;)V#Return(V)#5
soot.jimple.Jimple.newImmediateBox(Lsoot/Value;)Lsoot/ValueBox;#Return(Ljava/lang/Object;)#4
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#ArrayStore(Ljava/lang/Object;)#45
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalLoad(I,4)#46
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#Constant(I,1)#47
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#BinaryOp(I,add)#48
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalStore(I,4)#49
soot.jimple.internal.JInterfaceInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#Return(V)#54
soot.jimple.Jimple.newInterfaceInvokeExpr(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)Lsoot/jimple/InterfaceInvokeExpr;#Return(Ljava/lang/Object;)#6
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,16)#4310
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,22)#4311
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/VoidType;,v,()Lsoot/VoidType;)#4312
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#4313
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(I,0)#4314
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#ConditionalBranch(I,ne,4328)#4315
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/jimple/Jimple;,v,()Lsoot/jimple/Jimple;)#4328
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,16)#4329
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/jimple/Jimple;,newInvokeStmt,(Lsoot/Value;)Lsoot/jimple/InvokeStmt;)#4330
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,17)#4331
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Goto(4499)#4332
soot.coffi.CFG.jimplify([Lsoot/coffi/cp_info;I)V#Goto(849)#839
soot.jimple.ParameterRef.getUseBoxes()Ljava/util/List;#Get(Ljava/util/List;,STATIC,Lsoot/AbstractUnit;,emptyList)#0
soot.jimple.ParameterRef.getUseBoxes()Ljava/util/List;#Return(Ljava/lang/Object;)#1
soot.jimple.internal.AbstractNewExpr.getUseBoxes()Ljava/util/List;#Get(Ljava/util/List;,STATIC,Lsoot/AbstractUnit;,emptyList)#0
soot.jimple.internal.AbstractNewExpr.getUseBoxes()Ljava/util/List;#Return(Ljava/lang/Object;)#1
soot.jimple.Constant.getUseBoxes()Ljava/util/List;#Get(Ljava/util/List;,STATIC,Lsoot/AbstractUnit;,emptyList)#0
soot.jimple.Constant.getUseBoxes()Ljava/util/List;#Return(Ljava/lang/Object;)#1
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,5)#25
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#LocalLoad(I,3)#26
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#ArrayLoad(Ljava/lang/Object;)#27
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#LocalStore(Ljava/lang/Object;,2)#28
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#29
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#30
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#31
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#Invoke(INTERFACE,Lsoot/Value;,getUseBoxes,()Ljava/util/List;)#32
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,addAll,(Ljava/util/Collection;)Z)#33
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#Pop(1)#34
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#35
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#36
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#37
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#Pop(1)#38
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#LocalLoad(I,3)#39
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#Constant(I,1)#40
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#BinaryOp(I,add)#41
soot.jimple.internal.AbstractInstanceInvokeExpr.getUseBoxes()Ljava/util/List;#LocalStore(I,3)#42
soot.toolkits.scalar.ArraySparseSet.contains(Ljava/lang/Object;)Z#LocalLoad(I,2)#13
soot.toolkits.scalar.ArraySparseSet.contains(Ljava/lang/Object;)Z#Constant(I,1)#14
soot.toolkits.scalar.ArraySparseSet.contains(Ljava/lang/Object;)Z#BinaryOp(I,add)#15
soot.toolkits.scalar.ArraySparseSet.contains(Ljava/lang/Object;)Z#LocalStore(I,2)#16
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,5)#42
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(Ljava/lang/Object;,0)#43
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#Get([Ljava/lang/Object;,NONSTATIC,Lsoot/toolkits/scalar/ArraySparseSet;,elements)#44
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#LocalLoad(I,6)#45
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#ArrayLoad(Ljava/lang/Object;)#46
soot.toolkits.scalar.ArraySparseSet.difference(Lsoot/toolkits/scalar/FlowSet;Lsoot/toolkits/scalar/FlowSet;)V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/ArraySparseSet;,add,(Ljava/lang/Object;)V)#47
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,9)#74
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,11)#75
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(VIRTUAL,Ljava/util/HashSet;,contains,(Ljava/lang/Object;)Z)#76
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Constant(I,0)#77
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#ConditionalBranch(I,eq,84)#78
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,6)#84
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,11)#85
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(VIRTUAL,Ljava/util/HashSet;,add,(Ljava/lang/Object;)Z)#86
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Pop(1)#87
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,6)#44
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,11)#45
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(VIRTUAL,Ljava/util/HashSet;,add,(Ljava/lang/Object;)Z)#46
soot.toolkits.scalar.SmartLocalDefs$LocalDefsAnalysis.flowThrough(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V#Pop(1)#47
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#322
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#323
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#324
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Ljava/lang/Integer;)#325
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#326
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,1)#327
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#BinaryOp(I,add)#328
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(I,12)#329
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#330
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#331
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/lang/Integer;,0)#332
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#333
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(I,12)#334
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/lang/Integer;,<init>,(I)V)#335
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#336
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Pop(1)#337
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#338
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Local;,clone,()Ljava/lang/Object;)#339
soot.jimple.internal.JimpleLocal.clone()Ljava/lang/Object;#New(Lsoot/jimple/internal/JimpleLocal;,0)#0
soot.jimple.internal.JimpleLocal.clone()Ljava/lang/Object;#Dup(1,0)#1
soot.jimple.internal.JimpleLocal.clone()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.internal.JimpleLocal.clone()Ljava/lang/Object;#Get(Ljava/lang/String;,NONSTATIC,Lsoot/jimple/internal/JimpleLocal;,name)#3
soot.jimple.internal.JimpleLocal.clone()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#4
soot.jimple.internal.JimpleLocal.clone()Ljava/lang/Object;#Get(Lsoot/Type;,NONSTATIC,Lsoot/jimple/internal/JimpleLocal;,type)#5
soot.jimple.internal.JimpleLocal.clone()Ljava/lang/Object;#Invoke(SPECIAL,Lsoot/jimple/internal/JimpleLocal;,<init>,(Ljava/lang/String;Lsoot/Type;)V)#6
soot.jimple.internal.JimpleLocal.clone()Ljava/lang/Object;#Return(Ljava/lang/Object;)#7
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/Local;)#340
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,13)#341
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,13)#342
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/lang/StringBuilder;,0)#343
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#344
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#345
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Local;,getName,()Ljava/lang/String;)#346
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#347
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#348
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"#")#349
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#350
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(I,12)#351
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#352
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#353
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Local;,setName,(Ljava/lang/String;)V)#354
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#355
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Body;,getLocals,()Lsoot/util/Chain;)#356
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,13)#357
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/util/Chain;,add,(Ljava/lang/Object;)Z)#358
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Pop(1)#359
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#360
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#361
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,14)#362
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(371)#363
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,14)#371
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#372
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#373
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,364)#374
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,14)#364
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#365
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/ValueBox;)#366
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,15)#367
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,15)#368
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,13)#369
soot.toolkits.scalar.LocalSplitter.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/ValueBox;,setValue,(Lsoot/Value;)V)#370
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Goto(378)#71
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Goto(378)#62
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#100
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,10)#101
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Invoke(VIRTUAL,Lsoot/toolkits/graph/UnitGraph;,getPredsOf,(Lsoot/Unit;)Ljava/util/List;)#102
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,size,()I)#103
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Constant(I,1)#104
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#ConditionalBranch(I,le,117)#105
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalLoad(I,7)#117
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Constant(I,1)#118
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#BinaryOp(I,add)#119
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalStore(I,7)#120
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,5)#121
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#New(Ljava/lang/Integer;,0)#122
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Dup(1,0)#123
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Constant(I,0)#124
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Invoke(SPECIAL,Ljava/lang/Integer;,<init>,(I)V)#125
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/util/LinkedList;,add,(Ljava/lang/Object;)Z)#126
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Pop(1)#127
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,4)#128
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,10)#129
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/util/LinkedList;,add,(Ljava/lang/Object;)Z)#130
soot.toolkits.graph.UnitGraph.getExtendedBasicBlockPathBetween(Lsoot/Unit;Lsoot/Unit;)Ljava/util/List;#Pop(1)#131
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,24)#195
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Lsoot/jimple/Stmt;,getDefBoxes,()Ljava/util/List;)#196
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#197
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(Ljava/lang/Object;,25)#198
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Goto(273)#199
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,25)#273
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#274
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#275
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(I,ne,200)#276
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,25)#200
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#201
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#CheckCast(Lsoot/ValueBox;)#202
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#203
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(Ljava/lang/Object;,26)#204
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,21)#205
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,26)#206
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(VIRTUAL,Ljava/util/LinkedList;,contains,(Ljava/lang/Object;)Z)#207
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#208
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(I,eq,213)#209
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(I,17)#213
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#214
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(I,ne,222)#215
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(I,18)#216
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#217
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(I,ne,222)#218
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(I,19)#219
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#220
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(I,eq,273)#221
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(I,17)#277
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#278
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(I,eq,286)#279
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,23)#140
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Instanceof(Lsoot/jimple/InvokeExpr;)#141
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#142
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(I,eq,147)#143
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,23)#147
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Instanceof(Lsoot/jimple/ArrayRef;)#148
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#149
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(I,eq,154)#150
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,23)#154
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Instanceof(Lsoot/jimple/FieldRef;)#155
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#156
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(I,eq,164)#157
soot.jimple.internal.ImmediateBox.canContainValue(Lsoot/Value;)Z#LocalLoad(Ljava/lang/Object;,1)#4
soot.jimple.internal.ImmediateBox.canContainValue(Lsoot/Value;)Z#Instanceof(Lsoot/jimple/Constant;)#5
soot.jimple.internal.ImmediateBox.canContainValue(Lsoot/Value;)Z#Constant(I,0)#6
soot.jimple.internal.ImmediateBox.canContainValue(Lsoot/Value;)Z#ConditionalBranch(I,ne,10)#7
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#LocalLoad(Ljava/lang/Object;,0)#23
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#LocalLoad(Ljava/lang/Object;,3)#24
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#CheckCast(Lsoot/Local;)#25
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#LocalLoad(Ljava/lang/Object;,1)#26
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#Invoke(SPECIAL,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,addDepend,(Lsoot/Local;Lsoot/jimple/DefinitionStmt;)V)#27
soot.jimple.toolkits.typing.fast.TypeResolver.addDepend(Lsoot/Local;Lsoot/jimple/DefinitionStmt;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.TypeResolver.addDepend(Lsoot/Local;Lsoot/jimple/DefinitionStmt;)V#Get(Ljava/util/HashMap;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/TypeResolver;,depends)#1
soot.jimple.toolkits.typing.fast.TypeResolver.addDepend(Lsoot/Local;Lsoot/jimple/DefinitionStmt;)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.toolkits.typing.fast.TypeResolver.addDepend(Lsoot/Local;Lsoot/jimple/DefinitionStmt;)V#Invoke(VIRTUAL,Ljava/util/HashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
soot.jimple.toolkits.typing.fast.TypeResolver.addDepend(Lsoot/Local;Lsoot/jimple/DefinitionStmt;)V#CheckCast(Ljava/util/List;)#4
soot.jimple.toolkits.typing.fast.TypeResolver.addDepend(Lsoot/Local;Lsoot/jimple/DefinitionStmt;)V#LocalLoad(Ljava/lang/Object;,2)#5
soot.jimple.toolkits.typing.fast.TypeResolver.addDepend(Lsoot/Local;Lsoot/jimple/DefinitionStmt;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#6
soot.jimple.toolkits.typing.fast.TypeResolver.addDepend(Lsoot/Local;Lsoot/jimple/DefinitionStmt;)V#Pop(1)#7
soot.jimple.toolkits.typing.fast.TypeResolver.addDepend(Lsoot/Local;Lsoot/jimple/DefinitionStmt;)V#Return(V)#8
soot.jimple.toolkits.typing.fast.TypeResolver.initAssignment(Lsoot/jimple/DefinitionStmt;)V#Goto(90)#28
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#12
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#CheckCast(Lsoot/jimple/ParameterRef;)#13
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Invoke(VIRTUAL,Lsoot/jimple/ParameterRef;,getType,()Lsoot/Type;)#14
soot.jimple.ParameterRef.getType()Lsoot/Type;#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.ParameterRef.getType()Lsoot/Type;#Get(Lsoot/Type;,NONSTATIC,Lsoot/jimple/ParameterRef;,paramType)#1
soot.jimple.ParameterRef.getType()Lsoot/Type;#Return(Ljava/lang/Object;)#2
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Return(Ljava/lang/Object;)#15
soot.jimple.toolkits.typing.fast.TypeResolver.typesEqual(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,1)#4
soot.jimple.toolkits.typing.fast.TypeResolver.typesEqual(Lsoot/Type;Lsoot/Type;)Z#Instanceof(Lsoot/ArrayType;)#5
soot.jimple.toolkits.typing.fast.TypeResolver.typesEqual(Lsoot/Type;Lsoot/Type;)Z#Constant(I,0)#6
soot.jimple.toolkits.typing.fast.TypeResolver.typesEqual(Lsoot/Type;Lsoot/Type;)Z#ConditionalBranch(I,eq,30)#7
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#32
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Instanceof(Lsoot/jimple/BinopExpr;)#33
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Constant(I,0)#34
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#ConditionalBranch(I,eq,219)#35
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#219
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Instanceof(Lsoot/jimple/NegExpr;)#220
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Constant(I,0)#221
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#ConditionalBranch(I,eq,267)#222
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#267
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Instanceof(Lsoot/jimple/CaughtExceptionRef;)#268
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Constant(I,0)#269
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#ConditionalBranch(I,eq,307)#270
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#307
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Instanceof(Lsoot/jimple/ArrayRef;)#308
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Constant(I,0)#309
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#ConditionalBranch(I,eq,343)#310
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#343
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Instanceof(Lsoot/jimple/NewArrayExpr;)#344
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Constant(I,0)#345
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#ConditionalBranch(I,eq,352)#346
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#352
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Instanceof(Lsoot/jimple/NewMultiArrayExpr;)#353
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Constant(I,0)#354
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#ConditionalBranch(I,eq,360)#355
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#360
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Instanceof(Lsoot/jimple/CastExpr;)#361
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Constant(I,0)#362
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#ConditionalBranch(I,eq,368)#363
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#368
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Instanceof(Lsoot/jimple/InstanceOfExpr;)#369
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Constant(I,0)#370
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#ConditionalBranch(I,eq,374)#371
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#374
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Instanceof(Lsoot/jimple/LengthExpr;)#375
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Constant(I,0)#376
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#ConditionalBranch(I,eq,380)#377
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#380
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Instanceof(Lsoot/jimple/InvokeExpr;)#381
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Constant(I,0)#382
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#ConditionalBranch(I,eq,389)#383
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#389
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Instanceof(Lsoot/jimple/NewExpr;)#390
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Constant(I,0)#391
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#ConditionalBranch(I,eq,397)#392
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#393
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#CheckCast(Lsoot/jimple/NewExpr;)#394
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Invoke(INTERFACE,Lsoot/jimple/NewExpr;,getBaseType,()Lsoot/RefType;)#395
soot.jimple.internal.AbstractNewExpr.getBaseType()Lsoot/RefType;#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.AbstractNewExpr.getBaseType()Lsoot/RefType;#Get(Lsoot/RefType;,NONSTATIC,Lsoot/jimple/internal/AbstractNewExpr;,type)#1
soot.jimple.internal.AbstractNewExpr.getBaseType()Lsoot/RefType;#Return(Ljava/lang/Object;)#2
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Return(Ljava/lang/Object;)#396
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/util/List;)I#LocalLoad(Ljava/lang/Object;,4)#6
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/util/List;)I#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#7
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/util/List;)I#CheckCast(Ljava/lang/Object;)#8
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/util/List;)I#LocalStore(Ljava/lang/Object;,3)#9
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/util/List;)I#LocalLoad(Ljava/lang/Object;,0)#10
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/util/List;)I#LocalLoad(Ljava/lang/Object;,3)#11
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/util/List;)I#Invoke(VIRTUAL,Lsoot/jimple/toolkits/typing/fast/QueuedSet;,addLast,(Ljava/lang/Object;)Z)#12
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/lang/Object;)Z#Get(Ljava/util/HashSet;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/QueuedSet;,hs)#1
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/util/HashSet;,contains,(Ljava/lang/Object;)Z)#3
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/lang/Object;)Z#LocalStore(I,2)#4
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/lang/Object;)Z#LocalLoad(I,2)#5
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/lang/Object;)Z#Constant(I,0)#6
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/lang/Object;)Z#ConditionalBranch(I,ne,17)#7
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/lang/Object;)Z#LocalLoad(I,2)#17
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/lang/Object;)Z#Return(I)#18
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/util/List;)I#Constant(I,0)#13
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/util/List;)I#ConditionalBranch(I,eq,19)#14
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/util/List;)I#LocalLoad(I,2)#15
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/util/List;)I#Constant(I,1)#16
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/util/List;)I#BinaryOp(I,add)#17
soot.jimple.toolkits.typing.fast.QueuedSet.addLast(Ljava/util/List;)I#LocalStore(I,2)#18
soot.jimple.internal.JAssignStmt.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.jimple.internal.JAssignStmt.apply(Lsoot/util/Switch;)V#CheckCast(Lsoot/jimple/StmtSwitch;)#1
soot.jimple.internal.JAssignStmt.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.internal.JAssignStmt.apply(Lsoot/util/Switch;)V#Invoke(INTERFACE,Lsoot/jimple/StmtSwitch;,caseAssignStmt,(Lsoot/jimple/AssignStmt;)V)#3
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Invoke(INTERFACE,Lsoot/jimple/AssignStmt;,getLeftOp,()Lsoot/Value;)#1
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#LocalStore(Ljava/lang/Object;,2)#2
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Constant(L;,null)#3
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#LocalStore(Ljava/lang/Object;,3)#4
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#LocalLoad(Ljava/lang/Object;,2)#5
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Instanceof(Lsoot/Local;)#6
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Constant(I,0)#7
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#ConditionalBranch(I,eq,16)#8
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#LocalLoad(Ljava/lang/Object;,0)#9
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Get(Lsoot/jimple/toolkits/typing/fast/Typing;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/UseChecker;,tg)#10
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#LocalLoad(Ljava/lang/Object;,2)#11
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#CheckCast(Lsoot/Local;)#12
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Invoke(VIRTUAL,Lsoot/jimple/toolkits/typing/fast/Typing;,get,(Lsoot/Local;)Lsoot/Type;)#13
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#LocalStore(Ljava/lang/Object;,3)#14
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Goto(72)#15
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#LocalLoad(Ljava/lang/Object;,1)#72
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Invoke(INTERFACE,Lsoot/jimple/AssignStmt;,getRightOp,()Lsoot/Value;)#73
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#LocalStore(Ljava/lang/Object;,4)#74
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#LocalLoad(Ljava/lang/Object;,4)#75
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Instanceof(Lsoot/Local;)#76
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Constant(I,0)#77
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#ConditionalBranch(I,eq,88)#78
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#LocalLoad(Ljava/lang/Object;,4)#88
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Instanceof(Lsoot/jimple/ArrayRef;)#89
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Constant(I,0)#90
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#ConditionalBranch(I,eq,106)#91
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#LocalLoad(Ljava/lang/Object;,4)#106
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Instanceof(Lsoot/jimple/InstanceFieldRef;)#107
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Constant(I,0)#108
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#ConditionalBranch(I,eq,124)#109
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#LocalLoad(Ljava/lang/Object;,4)#124
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Instanceof(Lsoot/jimple/BinopExpr;)#125
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Constant(I,0)#126
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#ConditionalBranch(I,eq,135)#127
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#LocalLoad(Ljava/lang/Object;,4)#135
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Instanceof(Lsoot/jimple/InvokeExpr;)#136
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Constant(I,0)#137
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#ConditionalBranch(I,eq,153)#138
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#LocalLoad(Ljava/lang/Object;,4)#153
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Instanceof(Lsoot/jimple/CastExpr;)#154
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Constant(I,0)#155
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#ConditionalBranch(I,eq,166)#156
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#LocalLoad(Ljava/lang/Object;,4)#166
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Instanceof(Lsoot/jimple/InstanceOfExpr;)#167
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Constant(I,0)#168
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#ConditionalBranch(I,eq,192)#169
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#LocalLoad(Ljava/lang/Object;,4)#192
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Instanceof(Lsoot/jimple/NewArrayExpr;)#193
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Constant(I,0)#194
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#ConditionalBranch(I,eq,217)#195
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#LocalLoad(Ljava/lang/Object;,4)#217
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Instanceof(Lsoot/jimple/NewMultiArrayExpr;)#218
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Constant(I,0)#219
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#ConditionalBranch(I,eq,255)#220
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#LocalLoad(Ljava/lang/Object;,4)#255
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Instanceof(Lsoot/jimple/LengthExpr;)#256
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Constant(I,0)#257
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#ConditionalBranch(I,eq,268)#258
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#LocalLoad(Ljava/lang/Object;,4)#268
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Instanceof(Lsoot/jimple/NegExpr;)#269
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Constant(I,0)#270
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#ConditionalBranch(I,eq,283)#271
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Return(V)#283
soot.jimple.internal.JAssignStmt.apply(Lsoot/util/Switch;)V#Return(V)#4
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Constant(I,1)#5
soot.jimple.toolkits.typing.fast.BytecodeHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Return(I)#6
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#LocalLoad(Ljava/lang/Object;,1)#79
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#LocalLoad(Ljava/lang/Object;,0)#80
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Get(Lsoot/jimple/toolkits/typing/fast/IUseVisitor;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/UseChecker;,uv)#81
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#LocalLoad(Ljava/lang/Object;,4)#82
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#LocalLoad(Ljava/lang/Object;,3)#83
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#LocalLoad(Ljava/lang/Object;,1)#84
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Invoke(INTERFACE,Lsoot/jimple/toolkits/typing/fast/IUseVisitor;,visit,(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;)#85
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Invoke(INTERFACE,Lsoot/jimple/AssignStmt;,setRightOp,(Lsoot/Value;)V)#86
soot.jimple.internal.JAssignStmt.setRightOp(Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JAssignStmt.setRightOp(Lsoot/Value;)V#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt;,rightBox)#1
soot.jimple.internal.JAssignStmt.setRightOp(Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.internal.JAssignStmt.setRightOp(Lsoot/Value;)V#Invoke(INTERFACE,Lsoot/ValueBox;,setValue,(Lsoot/Value;)V)#3
soot.jimple.internal.JAssignStmt.setRightOp(Lsoot/Value;)V#Return(V)#4
soot.jimple.toolkits.typing.fast.UseChecker.caseAssignStmt(Lsoot/jimple/AssignStmt;)V#Goto(283)#87
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#LocalLoad(Ljava/lang/Object;,4)#28
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#Constant(L;,null)#29
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#ConditionalBranch(Ljava/lang/Object;,ne,46)#30
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#LocalLoad(Ljava/lang/Object;,0)#46
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#LocalLoad(Ljava/lang/Object;,2)#47
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#Invoke(VIRTUAL,Lsoot/FastHierarchy;,getAllImplementersOfInterface,(Lsoot/SootClass;)Ljava/util/Set;)#48
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#0
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#Constant(I,1)#1
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#Invoke(VIRTUAL,Lsoot/SootClass;,checkLevel,(I)V)#2
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#3
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#Get(Lsoot/util/MultiMap;,NONSTATIC,Lsoot/FastHierarchy;,interfaceToAllImplementers)#4
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#5
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#Invoke(INTERFACE,Lsoot/util/MultiMap;,containsKey,(Ljava/lang/Object;)Z)#6
soot.util.HashMultiMap.containsKey(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.HashMultiMap.containsKey(Ljava/lang/Object;)Z#Get(Ljava/util/Map;,NONSTATIC,Lsoot/util/HashMultiMap;,m)#1
soot.util.HashMultiMap.containsKey(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#2
soot.util.HashMultiMap.containsKey(Ljava/lang/Object;)Z#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#3
soot.util.HashMultiMap.containsKey(Ljava/lang/Object;)Z#Return(I)#4
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#Constant(I,0)#7
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#ConditionalBranch(I,ne,44)#8
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#9
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#10
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#Invoke(VIRTUAL,Lsoot/FastHierarchy;,getAllSubinterfaces,(Lsoot/SootClass;)Ljava/util/Set;)#11
soot.FastHierarchy.getAllSubinterfaces(Lsoot/SootClass;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#0
soot.FastHierarchy.getAllSubinterfaces(Lsoot/SootClass;)Ljava/util/Set;#Constant(I,1)#1
soot.FastHierarchy.getAllSubinterfaces(Lsoot/SootClass;)Ljava/util/Set;#Invoke(VIRTUAL,Lsoot/SootClass;,checkLevel,(I)V)#2
soot.FastHierarchy.getAllSubinterfaces(Lsoot/SootClass;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#3
soot.FastHierarchy.getAllSubinterfaces(Lsoot/SootClass;)Ljava/util/Set;#Get(Lsoot/util/MultiMap;,NONSTATIC,Lsoot/FastHierarchy;,interfaceToAllSubinterfaces)#4
soot.FastHierarchy.getAllSubinterfaces(Lsoot/SootClass;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#5
soot.FastHierarchy.getAllSubinterfaces(Lsoot/SootClass;)Ljava/util/Set;#Invoke(INTERFACE,Lsoot/util/MultiMap;,containsKey,(Ljava/lang/Object;)Z)#6
soot.FastHierarchy.getAllSubinterfaces(Lsoot/SootClass;)Ljava/util/Set;#Constant(I,0)#7
soot.FastHierarchy.getAllSubinterfaces(Lsoot/SootClass;)Ljava/util/Set;#ConditionalBranch(I,ne,36)#8
soot.FastHierarchy.getAllSubinterfaces(Lsoot/SootClass;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#9
soot.FastHierarchy.getAllSubinterfaces(Lsoot/SootClass;)Ljava/util/Set;#Get(Lsoot/util/MultiMap;,NONSTATIC,Lsoot/FastHierarchy;,interfaceToAllSubinterfaces)#10
soot.FastHierarchy.getAllSubinterfaces(Lsoot/SootClass;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#11
soot.FastHierarchy.getAllSubinterfaces(Lsoot/SootClass;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#12
soot.FastHierarchy.getAllSubinterfaces(Lsoot/SootClass;)Ljava/util/Set;#Invoke(INTERFACE,Lsoot/util/MultiMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Z)#13
soot.FastHierarchy.getAllSubinterfaces(Lsoot/SootClass;)Ljava/util/Set;#Pop(1)#14
soot.FastHierarchy.getAllSubinterfaces(Lsoot/SootClass;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#15
soot.FastHierarchy.getAllSubinterfaces(Lsoot/SootClass;)Ljava/util/Set;#Get(Lsoot/util/MultiMap;,NONSTATIC,Lsoot/FastHierarchy;,interfaceToSubinterfaces)#16
soot.FastHierarchy.getAllSubinterfaces(Lsoot/SootClass;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#17
soot.FastHierarchy.getAllSubinterfaces(Lsoot/SootClass;)Ljava/util/Set;#Invoke(INTERFACE,Lsoot/util/MultiMap;,get,(Ljava/lang/Object;)Ljava/util/Set;)#18
soot.util.HashMultiMap.get(Ljava/lang/Object;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.HashMultiMap.get(Ljava/lang/Object;)Ljava/util/Set;#Get(Ljava/util/Map;,NONSTATIC,Lsoot/util/HashMultiMap;,m)#1
soot.util.HashMultiMap.get(Ljava/lang/Object;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#2
soot.util.HashMultiMap.get(Ljava/lang/Object;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
soot.util.HashMultiMap.get(Ljava/lang/Object;)Ljava/util/Set;#CheckCast(Ljava/util/Set;)#4
soot.util.HashMultiMap.get(Ljava/lang/Object;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,2)#5
soot.util.HashMultiMap.get(Ljava/lang/Object;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,2)#6
soot.util.HashMultiMap.get(Ljava/lang/Object;)Ljava/util/Set;#Constant(L;,null)#7
soot.util.HashMultiMap.get(Ljava/lang/Object;)Ljava/util/Set;#ConditionalBranch(Ljava/lang/Object;,ne,11)#8
soot.util.HashMultiMap.get(Ljava/lang/Object;)Ljava/util/Set;#Get(Ljava/util/Set;,STATIC,Ljava/util/Collections;,EMPTY_SET)#9
soot.util.HashMultiMap.get(Ljava/lang/Object;)Ljava/util/Set;#Return(Ljava/lang/Object;)#10
soot.FastHierarchy.getAllSubinterfaces(Lsoot/SootClass;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#19
soot.FastHierarchy.getAllSubinterfaces(Lsoot/SootClass;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,2)#20
soot.FastHierarchy.getAllSubinterfaces(Lsoot/SootClass;)Ljava/util/Set;#Goto(32)#21
soot.FastHierarchy.getAllSubinterfaces(Lsoot/SootClass;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,2)#32
soot.FastHierarchy.getAllSubinterfaces(Lsoot/SootClass;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#33
soot.FastHierarchy.getAllSubinterfaces(Lsoot/SootClass;)Ljava/util/Set;#Constant(I,0)#34
soot.FastHierarchy.getAllSubinterfaces(Lsoot/SootClass;)Ljava/util/Set;#ConditionalBranch(I,ne,22)#35
soot.FastHierarchy.getAllSubinterfaces(Lsoot/SootClass;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#36
soot.FastHierarchy.getAllSubinterfaces(Lsoot/SootClass;)Ljava/util/Set;#Get(Lsoot/util/MultiMap;,NONSTATIC,Lsoot/FastHierarchy;,interfaceToAllSubinterfaces)#37
soot.FastHierarchy.getAllSubinterfaces(Lsoot/SootClass;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#38
soot.FastHierarchy.getAllSubinterfaces(Lsoot/SootClass;)Ljava/util/Set;#Invoke(INTERFACE,Lsoot/util/MultiMap;,get,(Ljava/lang/Object;)Ljava/util/Set;)#39
soot.util.HashMultiMap.get(Ljava/lang/Object;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,2)#11
soot.util.HashMultiMap.get(Ljava/lang/Object;)Ljava/util/Set;#Invoke(STATIC,Ljava/util/Collections;,unmodifiableSet,(Ljava/util/Set;)Ljava/util/Set;)#12
soot.util.HashMultiMap.get(Ljava/lang/Object;)Ljava/util/Set;#Return(Ljava/lang/Object;)#13
soot.FastHierarchy.getAllSubinterfaces(Lsoot/SootClass;)Ljava/util/Set;#Return(Ljava/lang/Object;)#40
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#12
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,2)#13
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#Goto(31)#14
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,2)#31
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#32
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#Constant(I,0)#33
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#ConditionalBranch(I,ne,15)#34
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,2)#15
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#16
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#CheckCast(Lsoot/SootClass;)#17
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,3)#18
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,3)#19
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#20
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#ConditionalBranch(Ljava/lang/Object;,ne,23)#21
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#Goto(31)#22
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#35
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#Get(Lsoot/util/MultiMap;,NONSTATIC,Lsoot/FastHierarchy;,interfaceToAllImplementers)#36
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#37
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#38
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#Get(Lsoot/util/MultiMap;,NONSTATIC,Lsoot/FastHierarchy;,interfaceToImplementers)#39
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#40
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#Invoke(INTERFACE,Lsoot/util/MultiMap;,get,(Ljava/lang/Object;)Ljava/util/Set;)#41
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#Invoke(INTERFACE,Lsoot/util/MultiMap;,putAll,(Ljava/lang/Object;Ljava/util/Set;)Z)#42
soot.util.HashMultiMap.putAll(Ljava/lang/Object;Ljava/util/Set;)Z#LocalLoad(Ljava/lang/Object;,2)#0
soot.util.HashMultiMap.putAll(Ljava/lang/Object;Ljava/util/Set;)Z#Invoke(INTERFACE,Ljava/util/Set;,isEmpty,()Z)#1
soot.util.HashMultiMap.putAll(Ljava/lang/Object;Ljava/util/Set;)Z#Constant(I,0)#2
soot.util.HashMultiMap.putAll(Ljava/lang/Object;Ljava/util/Set;)Z#ConditionalBranch(I,eq,6)#3
soot.util.HashMultiMap.putAll(Ljava/lang/Object;Ljava/util/Set;)Z#LocalLoad(Ljava/lang/Object;,0)#6
soot.util.HashMultiMap.putAll(Ljava/lang/Object;Ljava/util/Set;)Z#LocalLoad(Ljava/lang/Object;,1)#7
soot.util.HashMultiMap.putAll(Ljava/lang/Object;Ljava/util/Set;)Z#Invoke(SPECIAL,Lsoot/util/HashMultiMap;,findSet,(Ljava/lang/Object;)Ljava/util/Set;)#8
soot.util.HashMultiMap.putAll(Ljava/lang/Object;Ljava/util/Set;)Z#LocalLoad(Ljava/lang/Object;,2)#9
soot.util.HashMultiMap.putAll(Ljava/lang/Object;Ljava/util/Set;)Z#Invoke(INTERFACE,Ljava/util/Set;,addAll,(Ljava/util/Collection;)Z)#10
soot.util.HashMultiMap.putAll(Ljava/lang/Object;Ljava/util/Set;)Z#Return(I)#11
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#Pop(1)#43
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#44
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#Get(Lsoot/util/MultiMap;,NONSTATIC,Lsoot/FastHierarchy;,interfaceToAllImplementers)#45
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#46
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#Invoke(INTERFACE,Lsoot/util/MultiMap;,get,(Ljava/lang/Object;)Ljava/util/Set;)#47
soot.FastHierarchy.getAllImplementersOfInterface(Lsoot/SootClass;)Ljava/util/Set;#Return(Ljava/lang/Object;)#48
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#LocalStore(Ljava/lang/Object;,5)#49
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#LocalLoad(Ljava/lang/Object;,5)#50
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#51
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#LocalStore(Ljava/lang/Object;,6)#52
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#Goto(71)#53
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#LocalLoad(Ljava/lang/Object;,6)#71
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#72
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#Constant(I,0)#73
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#ConditionalBranch(I,ne,54)#74
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#LocalLoad(Ljava/lang/Object;,0)#54
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#Get(Ljava/util/Map;,NONSTATIC,Lsoot/FastHierarchy;,classToInterval)#55
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#LocalLoad(Ljava/lang/Object;,6)#56
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#57
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#58
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#CheckCast(Lsoot/FastHierarchy$Interval;)#59
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#LocalStore(Ljava/lang/Object;,3)#60
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#LocalLoad(Ljava/lang/Object;,3)#61
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#Constant(L;,null)#62
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#ConditionalBranch(Ljava/lang/Object;,eq,71)#63
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#LocalLoad(Ljava/lang/Object;,3)#64
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#LocalLoad(Ljava/lang/Object;,4)#65
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#Invoke(VIRTUAL,Lsoot/FastHierarchy$Interval;,isSubrange,(Lsoot/FastHierarchy$Interval;)Z)#66
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#Constant(I,0)#67
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#ConditionalBranch(I,eq,71)#68
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#Constant(I,1)#69
soot.FastHierarchy.canStoreClass(Lsoot/SootClass;Lsoot/SootClass;)Z#Return(I)#70
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#LocalLoad(Ljava/lang/Object;,1)#24
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#LocalLoad(I,4)#25
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#LocalLoad(Ljava/lang/Object;,0)#26
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#Get(Lsoot/jimple/toolkits/typing/fast/IUseVisitor;,NONSTATIC,Lsoot/jimple/toolkits/typing/fast/UseChecker;,uv)#27
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#LocalLoad(Ljava/lang/Object;,1)#28
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#LocalLoad(I,4)#29
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#Invoke(INTERFACE,Lsoot/jimple/InvokeExpr;,getArg,(I)Lsoot/Value;)#30
soot.jimple.internal.AbstractInvokeExpr.getArg(I)Lsoot/Value;#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.AbstractInvokeExpr.getArg(I)Lsoot/Value;#Get([Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/AbstractInvokeExpr;,argBoxes)#1
soot.jimple.internal.AbstractInvokeExpr.getArg(I)Lsoot/Value;#LocalLoad(I,1)#2
soot.jimple.internal.AbstractInvokeExpr.getArg(I)Lsoot/Value;#ArrayLoad(Ljava/lang/Object;)#3
soot.jimple.internal.AbstractInvokeExpr.getArg(I)Lsoot/Value;#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#4
soot.jimple.internal.AbstractInvokeExpr.getArg(I)Lsoot/Value;#Return(Ljava/lang/Object;)#5
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#LocalLoad(Ljava/lang/Object;,3)#31
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#LocalLoad(I,4)#32
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#Invoke(INTERFACE,Lsoot/SootMethodRef;,parameterType,(I)Lsoot/Type;)#33
soot.SootMethodRefImpl.parameterType(I)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethodRefImpl.parameterType(I)Lsoot/Type;#Get(Ljava/util/List;,NONSTATIC,Lsoot/SootMethodRefImpl;,parameterTypes)#1
soot.SootMethodRefImpl.parameterType(I)Lsoot/Type;#LocalLoad(I,1)#2
soot.SootMethodRefImpl.parameterType(I)Lsoot/Type;#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#3
soot.SootMethodRefImpl.parameterType(I)Lsoot/Type;#CheckCast(Lsoot/Type;)#4
soot.SootMethodRefImpl.parameterType(I)Lsoot/Type;#Return(Ljava/lang/Object;)#5
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#LocalLoad(Ljava/lang/Object;,2)#34
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#Invoke(INTERFACE,Lsoot/jimple/toolkits/typing/fast/IUseVisitor;,visit,(Lsoot/Value;Lsoot/Type;Lsoot/jimple/Stmt;)Lsoot/Value;)#35
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#397
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Instanceof(Lsoot/jimple/FieldRef;)#398
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Constant(I,0)#399
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#ConditionalBranch(I,eq,406)#400
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#406
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Instanceof(Lsoot/jimple/DoubleConstant;)#407
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Constant(I,0)#408
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#ConditionalBranch(I,eq,412)#409
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#412
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Instanceof(Lsoot/jimple/FloatConstant;)#413
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Constant(I,0)#414
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#ConditionalBranch(I,eq,418)#415
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#418
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Instanceof(Lsoot/jimple/IntConstant;)#419
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Constant(I,0)#420
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#ConditionalBranch(I,eq,476)#421
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#476
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Instanceof(Lsoot/jimple/LongConstant;)#477
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Constant(I,0)#478
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#ConditionalBranch(I,eq,482)#479
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#482
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Instanceof(Lsoot/jimple/NullConstant;)#483
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Constant(I,0)#484
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#ConditionalBranch(I,eq,488)#485
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#488
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Instanceof(Lsoot/jimple/StringConstant;)#489
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Constant(I,0)#490
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#ConditionalBranch(I,eq,495)#491
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Constant(Ljava/lang/String;,"java.lang.String")#492
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Invoke(STATIC,Lsoot/RefType;,v,(Ljava/lang/String;)Lsoot/RefType;)#493
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Return(Ljava/lang/Object;)#494
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#Invoke(INTERFACE,Lsoot/jimple/InvokeExpr;,setArg,(ILsoot/Value;)V)#36
soot.jimple.internal.AbstractInvokeExpr.setArg(ILsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.AbstractInvokeExpr.setArg(ILsoot/Value;)V#Get([Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/AbstractInvokeExpr;,argBoxes)#1
soot.jimple.internal.AbstractInvokeExpr.setArg(ILsoot/Value;)V#LocalLoad(I,1)#2
soot.jimple.internal.AbstractInvokeExpr.setArg(ILsoot/Value;)V#ArrayLoad(Ljava/lang/Object;)#3
soot.jimple.internal.AbstractInvokeExpr.setArg(ILsoot/Value;)V#LocalLoad(Ljava/lang/Object;,2)#4
soot.jimple.internal.AbstractInvokeExpr.setArg(ILsoot/Value;)V#Invoke(INTERFACE,Lsoot/ValueBox;,setValue,(Lsoot/Value;)V)#5
soot.jimple.internal.AbstractInvokeExpr.setArg(ILsoot/Value;)V#Return(V)#6
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#LocalLoad(I,4)#37
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#Constant(I,1)#38
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#BinaryOp(I,add)#39
soot.jimple.toolkits.typing.fast.UseChecker.handleInvokeExpr(Lsoot/jimple/InvokeExpr;Lsoot/jimple/Stmt;)V#LocalStore(I,4)#40
soot.jimple.toolkits.typing.fast.TypeResolver.typesEqual(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,0)#8
soot.jimple.toolkits.typing.fast.TypeResolver.typesEqual(Lsoot/Type;Lsoot/Type;)Z#CheckCast(Lsoot/ArrayType;)#9
soot.jimple.toolkits.typing.fast.TypeResolver.typesEqual(Lsoot/Type;Lsoot/Type;)Z#LocalStore(Ljava/lang/Object;,2)#10
soot.jimple.toolkits.typing.fast.TypeResolver.typesEqual(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,1)#11
soot.jimple.toolkits.typing.fast.TypeResolver.typesEqual(Lsoot/Type;Lsoot/Type;)Z#CheckCast(Lsoot/ArrayType;)#12
soot.jimple.toolkits.typing.fast.TypeResolver.typesEqual(Lsoot/Type;Lsoot/Type;)Z#LocalStore(Ljava/lang/Object;,3)#13
soot.jimple.toolkits.typing.fast.TypeResolver.typesEqual(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,2)#14
soot.jimple.toolkits.typing.fast.TypeResolver.typesEqual(Lsoot/Type;Lsoot/Type;)Z#Get(I,NONSTATIC,Lsoot/ArrayType;,numDimensions)#15
soot.jimple.toolkits.typing.fast.TypeResolver.typesEqual(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,3)#16
soot.jimple.toolkits.typing.fast.TypeResolver.typesEqual(Lsoot/Type;Lsoot/Type;)Z#Get(I,NONSTATIC,Lsoot/ArrayType;,numDimensions)#17
soot.jimple.toolkits.typing.fast.TypeResolver.typesEqual(Lsoot/Type;Lsoot/Type;)Z#ConditionalBranch(I,ne,28)#18
soot.jimple.toolkits.typing.fast.TypeResolver.typesEqual(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,2)#19
soot.jimple.toolkits.typing.fast.TypeResolver.typesEqual(Lsoot/Type;Lsoot/Type;)Z#Get(Lsoot/Type;,NONSTATIC,Lsoot/ArrayType;,baseType)#20
soot.jimple.toolkits.typing.fast.TypeResolver.typesEqual(Lsoot/Type;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,3)#21
soot.jimple.toolkits.typing.fast.TypeResolver.typesEqual(Lsoot/Type;Lsoot/Type;)Z#Get(Lsoot/Type;,NONSTATIC,Lsoot/ArrayType;,baseType)#22
soot.jimple.toolkits.typing.fast.TypeResolver.typesEqual(Lsoot/Type;Lsoot/Type;)Z#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#23
soot.jimple.toolkits.typing.fast.TypeResolver.typesEqual(Lsoot/Type;Lsoot/Type;)Z#Constant(I,0)#24
soot.jimple.toolkits.typing.fast.TypeResolver.typesEqual(Lsoot/Type;Lsoot/Type;)Z#ConditionalBranch(I,eq,28)#25
soot.jimple.toolkits.typing.fast.TypeResolver.typesEqual(Lsoot/Type;Lsoot/Type;)Z#Constant(I,1)#26
soot.jimple.toolkits.typing.fast.TypeResolver.typesEqual(Lsoot/Type;Lsoot/Type;)Z#Return(I)#27
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Constant(I,1)#5
soot.jimple.toolkits.typing.fast.AugHierarchy.ancestor_(Lsoot/Type;Lsoot/Type;)Z#Return(I)#6
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"$")#37
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,15)#38
soot.jimple.toolkits.scalar.LocalNameStandardizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(44)#39
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#166
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,16)#167
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,13)#168
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/toolkits/scalar/LocalDefs;,getDefsOfAt,(Lsoot/Local;Lsoot/Unit;)Ljava/util/List;)#169
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,17)#170
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,17)#171
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#172
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,1)#173
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,296)#174
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,17)#175
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#176
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#177
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/jimple/DefinitionStmt;)#178
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,18)#179
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,18)#180
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/jimple/DefinitionStmt;,getRightOp,()Lsoot/Value;)#181
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Instanceof(Lsoot/Local;)#182
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#183
soot.jimple.toolkits.scalar.CopyPropagator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,296)#184
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#60
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/jimple/AssignStmt;)#61
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,11)#62
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#63
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/jimple/AssignStmt;,getLeftOp,()Lsoot/Value;)#64
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Instanceof(Lsoot/Local;)#65
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#66
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,186)#67
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(I,4)#68
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#69
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,79)#70
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#71
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/jimple/AssignStmt;,getLeftOp,()Lsoot/Value;)#72
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/Local;)#73
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Local;,getName,()Ljava/lang/String;)#74
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"$")#75
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/String;,startsWith,(Ljava/lang/String;)Z)#76
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#77
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,186)#78
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#79
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/jimple/AssignStmt;,getRightOp,()Lsoot/Value;)#80
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,12)#81
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#82
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(I,10)#83
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#84
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Instanceof(Lsoot/jimple/InvokeExpr;)#85
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#86
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,92)#87
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#88
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Instanceof(Lsoot/jimple/ArrayRef;)#89
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#90
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,94)#91
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#94
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Instanceof(Lsoot/jimple/InstanceFieldRef;)#95
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#96
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,112)#97
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#112
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Instanceof(Lsoot/jimple/DivExpr;)#113
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#114
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,120)#115
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#116
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Instanceof(Lsoot/jimple/RemExpr;)#117
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#118
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,154)#119
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#154
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Instanceof(Lsoot/jimple/CastExpr;)#155
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#156
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,161)#157
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#161
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Instanceof(Lsoot/jimple/NewArrayExpr;)#162
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#163
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,169)#164
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#165
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Instanceof(Lsoot/jimple/NewMultiArrayExpr;)#166
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#167
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,172)#168
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#172
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Instanceof(Lsoot/jimple/NewExpr;)#173
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#174
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,184)#175
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,1)#184
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(I,10)#185
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#298
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/jimple/AssignStmt;)#299
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/jimple/AssignStmt;,getLeftOp,()Lsoot/Value;)#300
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#301
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/jimple/AssignStmt;)#302
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/jimple/AssignStmt;,getRightOp,()Lsoot/Value;)#303
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(Ljava/lang/Object;,ne,315)#304
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#331
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/jimple/Stmt;,containsInvokeExpr,()Z)#332
soot.jimple.internal.JAssignStmt.containsInvokeExpr()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JAssignStmt.containsInvokeExpr()Z#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt;,rightBox)#1
soot.jimple.internal.JAssignStmt.containsInvokeExpr()Z#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#2
soot.jimple.internal.JAssignStmt.containsInvokeExpr()Z#Instanceof(Lsoot/jimple/InvokeExpr;)#3
soot.jimple.internal.JAssignStmt.containsInvokeExpr()Z#Return(I)#4
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#333
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,382)#334
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#69
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getMethods,()Ljava/util/List;)#70
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#71
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,7)#72
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Goto(140)#73
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#140
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#141
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#142
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,74)#143
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#74
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#75
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/SootMethod;)#76
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,8)#77
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#78
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,isConcrete,()Z)#79
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#80
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,83)#81
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#83
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,retrieveActiveBody,()Lsoot/Body;)#84
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,9)#85
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#86
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Body;,getUnits,()Lsoot/PatchingChain;)#87
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/PatchingChain;,getFirst,()Lsoot/Unit;)#88
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/jimple/Stmt;)#89
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,10)#90
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Goto(98)#91
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#98
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Instanceof(Lsoot/jimple/IdentityStmt;)#99
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#100
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,92)#101
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#92
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Body;,getUnits,()Lsoot/PatchingChain;)#93
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#94
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/PatchingChain;,getSuccOf,(Lsoot/Unit;)Lsoot/Unit;)#95
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/jimple/Stmt;)#96
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,10)#97
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#102
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"LineNumberTag")#103
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/jimple/Stmt;,hasTag,(Ljava/lang/String;)Z)#104
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#105
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,140)#106
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#107
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"LineNumberTag")#108
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/jimple/Stmt;,getTag,(Ljava/lang/String;)Lsoot/tagkit/Tag;)#109
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/tagkit/LineNumberTag;)#110
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,11)#111
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#112
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/tagkit/LineNumberTag;,getLineNumber,()I)#113
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Constant(I,1)#114
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#BinaryOp(I,sub)#115
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalStore(I,12)#116
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#117
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/lang/Integer;,0)#118
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#119
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(I,12)#120
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/lang/Integer;,<init>,(I)V)#121
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/util/HashMap;,containsKey,(Ljava/lang/Object;)Z)#122
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#123
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,134)#124
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#134
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#New(Lsoot/tagkit/LineNumberTag;,0)#135
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#136
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(I,12)#137
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Lsoot/tagkit/LineNumberTag;,<init>,(I)V)#138
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,addTag,(Lsoot/tagkit/Tag;)V)#139
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#New(Lsoot/coffi/Instruction_Getstatic;,0)#1055
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Dup(1,0)#1056
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Invoke(SPECIAL,Lsoot/coffi/Instruction_Getstatic;,<init>,()V)#1057
soot.coffi.Instruction_Getstatic.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Instruction_Getstatic.<init>()V#Constant(I,-78)#1
soot.coffi.Instruction_Getstatic.<init>()V#Invoke(SPECIAL,Lsoot/coffi/Instruction_intindex;,<init>,(B)V)#2
soot.coffi.Instruction_Getstatic.<init>()V#LocalLoad(Ljava/lang/Object;,0)#3
soot.coffi.Instruction_Getstatic.<init>()V#Constant(Ljava/lang/String;,"getstatic")#4
soot.coffi.Instruction_Getstatic.<init>()V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/coffi/Instruction_Getstatic;,name)#5
soot.coffi.Instruction_Getstatic.<init>()V#Return(V)#6
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#LocalStore(Ljava/lang/Object;,5)#1058
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Goto(1120)#1059
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#New(Lsoot/coffi/Instruction_Invokevirtual;,0)#1060
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Dup(1,0)#1061
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Invoke(SPECIAL,Lsoot/coffi/Instruction_Invokevirtual;,<init>,()V)#1062
soot.coffi.Instruction_Invokevirtual.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.coffi.Instruction_Invokevirtual.<init>()V#Constant(I,-74)#1
soot.coffi.Instruction_Invokevirtual.<init>()V#Invoke(SPECIAL,Lsoot/coffi/Instruction_intindex;,<init>,(B)V)#2
soot.coffi.Instruction_Invokevirtual.<init>()V#LocalLoad(Ljava/lang/Object;,0)#3
soot.coffi.Instruction_Invokevirtual.<init>()V#Constant(Ljava/lang/String;,"invokevirtual")#4
soot.coffi.Instruction_Invokevirtual.<init>()V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/coffi/Instruction_Invokevirtual;,name)#5
soot.coffi.Instruction_Invokevirtual.<init>()V#LocalLoad(Ljava/lang/Object;,0)#6
soot.coffi.Instruction_Invokevirtual.<init>()V#Constant(I,1)#7
soot.coffi.Instruction_Invokevirtual.<init>()V#Put(Z,NONSTATIC,Lsoot/coffi/Instruction_Invokevirtual;,calls)#8
soot.coffi.Instruction_Invokevirtual.<init>()V#Return(V)#9
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#LocalStore(Ljava/lang/Object;,5)#1063
soot.coffi.ByteCode.disassemble_bytecode([BI)Lsoot/coffi/Instruction;#Goto(1120)#1064
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,0)#1382
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,0)#1383
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,0)#1384
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Get(Lsoot/Scene;,NONSTATIC,Lsoot/coffi/CFG;,cm)#1385
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,3)#1386
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,1)#1387
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#CheckCast(Lsoot/coffi/Instruction_Getstatic;)#1388
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Get(I,NONSTATIC,Lsoot/coffi/Instruction_Getstatic;,arg_i)#1389
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(SPECIAL,Lsoot/coffi/CFG;,jimpleTypeOfFieldInFieldRef,(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;)#1390
soot.coffi.CFG.jimpleTypeOfFieldInFieldRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,2)#0
soot.coffi.CFG.jimpleTypeOfFieldInFieldRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#LocalLoad(I,3)#1
soot.coffi.CFG.jimpleTypeOfFieldInFieldRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#ArrayLoad(Ljava/lang/Object;)#2
soot.coffi.CFG.jimpleTypeOfFieldInFieldRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#CheckCast(Lsoot/coffi/CONSTANT_Fieldref_info;)#3
soot.coffi.CFG.jimpleTypeOfFieldInFieldRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#LocalStore(Ljava/lang/Object;,4)#4
soot.coffi.CFG.jimpleTypeOfFieldInFieldRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,2)#5
soot.coffi.CFG.jimpleTypeOfFieldInFieldRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,4)#6
soot.coffi.CFG.jimpleTypeOfFieldInFieldRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_Fieldref_info;,name_and_type_index)#7
soot.coffi.CFG.jimpleTypeOfFieldInFieldRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#ArrayLoad(Ljava/lang/Object;)#8
soot.coffi.CFG.jimpleTypeOfFieldInFieldRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#CheckCast(Lsoot/coffi/CONSTANT_NameAndType_info;)#9
soot.coffi.CFG.jimpleTypeOfFieldInFieldRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#LocalStore(Ljava/lang/Object;,5)#10
soot.coffi.CFG.jimpleTypeOfFieldInFieldRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,2)#11
soot.coffi.CFG.jimpleTypeOfFieldInFieldRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,5)#12
soot.coffi.CFG.jimpleTypeOfFieldInFieldRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_NameAndType_info;,descriptor_index)#13
soot.coffi.CFG.jimpleTypeOfFieldInFieldRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#ArrayLoad(Ljava/lang/Object;)#14
soot.coffi.CFG.jimpleTypeOfFieldInFieldRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#CheckCast(Lsoot/coffi/CONSTANT_Utf8_info;)#15
soot.coffi.CFG.jimpleTypeOfFieldInFieldRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,convert,()Ljava/lang/String;)#16
soot.coffi.CFG.jimpleTypeOfFieldInFieldRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#LocalStore(Ljava/lang/Object;,6)#17
soot.coffi.CFG.jimpleTypeOfFieldInFieldRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#Invoke(STATIC,Lsoot/coffi/Util;,v,()Lsoot/coffi/Util;)#18
soot.coffi.CFG.jimpleTypeOfFieldInFieldRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,6)#19
soot.coffi.CFG.jimpleTypeOfFieldInFieldRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#Invoke(VIRTUAL,Lsoot/coffi/Util;,jimpleTypeOfFieldDescriptor,(Ljava/lang/String;)Lsoot/Type;)#20
soot.coffi.CFG.jimpleTypeOfFieldInFieldRef(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;#Return(Ljava/lang/Object;)#21
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(SPECIAL,Lsoot/coffi/CFG;,byteCodeTypeOf,(Lsoot/Type;)Lsoot/Type;)#1391
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalStore(Ljava/lang/Object;,5)#1392
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,5)#1393
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(STATIC,Lsoot/DoubleType;,v,()Lsoot/DoubleType;)#1394
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#1395
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Constant(I,0)#1396
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#ConditionalBranch(I,eq,1407)#1397
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,5)#1407
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(STATIC,Lsoot/LongType;,v,()Lsoot/LongType;)#1408
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#1409
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Constant(I,0)#1410
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#ConditionalBranch(I,eq,1421)#1411
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,2)#1421
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,5)#1422
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,push,(Lsoot/Type;)Lsoot/coffi/TypeStack;)#1423
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalStore(Ljava/lang/Object;,2)#1424
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Goto(1927)#1425
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,1)#1513
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#CheckCast(Lsoot/coffi/Instruction_Invokevirtual;)#1514
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalStore(Ljava/lang/Object;,5)#1515
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,3)#1516
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,5)#1517
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Get(I,NONSTATIC,Lsoot/coffi/Instruction_Invokevirtual;,arg_i)#1518
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(STATIC,Lsoot/coffi/cp_info;,countParams,([Lsoot/coffi/cp_info;I)I)#1519
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalStore(I,6)#1520
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,0)#1521
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,0)#1522
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,0)#1523
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Get(Lsoot/Scene;,NONSTATIC,Lsoot/coffi/CFG;,cm)#1524
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,3)#1525
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,5)#1526
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Get(I,NONSTATIC,Lsoot/coffi/Instruction_Invokevirtual;,arg_i)#1527
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(SPECIAL,Lsoot/coffi/CFG;,jimpleReturnTypeOfMethodRef,(Lsoot/Scene;[Lsoot/coffi/cp_info;I)Lsoot/Type;)#1528
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(SPECIAL,Lsoot/coffi/CFG;,byteCodeTypeOf,(Lsoot/Type;)Lsoot/Type;)#1529
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalStore(Ljava/lang/Object;,7)#1530
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(I,6)#1531
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Constant(I,1)#1532
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#BinaryOp(I,sub)#1533
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalStore(I,8)#1534
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Goto(1580)#1535
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(I,8)#1580
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Constant(I,0)#1581
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#ConditionalBranch(I,ge,1536)#1582
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,2)#1536
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,top,()Lsoot/Type;)#1537
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(STATIC,Lsoot/coffi/Long2ndHalfType;,v,()Lsoot/coffi/Long2ndHalfType;)#1538
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#1539
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Constant(I,0)#1540
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#ConditionalBranch(I,eq,1553)#1541
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,2)#1553
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,top,()Lsoot/Type;)#1554
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(STATIC,Lsoot/coffi/Double2ndHalfType;,v,()Lsoot/coffi/Double2ndHalfType;)#1555
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#1556
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Constant(I,0)#1557
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#ConditionalBranch(I,eq,1570)#1558
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,0)#1570
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,2)#1571
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,2)#1572
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,top,()Lsoot/Type;)#1573
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(VIRTUAL,Lsoot/coffi/CFG;,popSafe,(Lsoot/coffi/TypeStack;Lsoot/Type;)Lsoot/coffi/TypeStack;)#1574
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalStore(Ljava/lang/Object;,2)#1575
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(I,8)#1576
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Constant(I,-1)#1577
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#BinaryOp(I,add)#1578
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalStore(I,8)#1579
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,0)#1583
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,2)#1584
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(VIRTUAL,Lsoot/coffi/CFG;,popSafeRefType,(Lsoot/coffi/TypeStack;)Lsoot/coffi/TypeStack;)#1585
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalStore(Ljava/lang/Object;,2)#1586
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#LocalLoad(Ljava/lang/Object;,7)#1587
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(STATIC,Lsoot/VoidType;,v,()Lsoot/VoidType;)#1588
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#1589
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#Constant(I,0)#1590
soot.coffi.CFG.processFlow(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;)Lsoot/coffi/OutFlow;#ConditionalBranch(I,ne,1927)#1591
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(L;,null)#3639
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,19)#3640
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,4)#3641
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#3642
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#CheckCast(Lsoot/coffi/Instruction_Getstatic;)#3643
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Get(I,NONSTATIC,Lsoot/coffi/Instruction_Getstatic;,arg_i)#3644
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#ArrayLoad(Ljava/lang/Object;)#3645
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#CheckCast(Lsoot/coffi/CONSTANT_Fieldref_info;)#3646
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,20)#3647
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,4)#3648
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,20)#3649
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_Fieldref_info;,class_index)#3650
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#ArrayLoad(Ljava/lang/Object;)#3651
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#CheckCast(Lsoot/coffi/CONSTANT_Class_info;)#3652
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,21)#3653
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,4)#3654
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,21)#3655
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_Class_info;,name_index)#3656
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#ArrayLoad(Ljava/lang/Object;)#3657
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#CheckCast(Lsoot/coffi/CONSTANT_Utf8_info;)#3658
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,convert,()Ljava/lang/String;)#3659
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,22)#3660
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,22)#3661
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(I,47)#3662
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(I,46)#3663
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Ljava/lang/String;,replace,(CC)Ljava/lang/String;)#3664
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,22)#3665
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,4)#3666
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,20)#3667
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_Fieldref_info;,name_and_type_index)#3668
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#ArrayLoad(Ljava/lang/Object;)#3669
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#CheckCast(Lsoot/coffi/CONSTANT_NameAndType_info;)#3670
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,23)#3671
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,4)#3672
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,23)#3673
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_NameAndType_info;,name_index)#3674
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#ArrayLoad(Ljava/lang/Object;)#3675
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#CheckCast(Lsoot/coffi/CONSTANT_Utf8_info;)#3676
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,convert,()Ljava/lang/String;)#3677
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,24)#3678
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,4)#3679
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,23)#3680
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Get(I,NONSTATIC,Lsoot/coffi/CONSTANT_NameAndType_info;,descriptor_index)#3681
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#ArrayLoad(Ljava/lang/Object;)#3682
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#CheckCast(Lsoot/coffi/CONSTANT_Utf8_info;)#3683
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/CONSTANT_Utf8_info;,convert,()Ljava/lang/String;)#3684
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,25)#3685
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/coffi/Util;,v,()Lsoot/coffi/Util;)#3686
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,25)#3687
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/Util;,jimpleTypeOfFieldDescriptor,(Ljava/lang/String;)Lsoot/Type;)#3688
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,26)#3689
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#3690
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Get(Lsoot/Scene;,NONSTATIC,Lsoot/coffi/CFG;,cm)#3691
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,22)#3692
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/Scene;,getSootClass,(Ljava/lang/String;)Lsoot/SootClass;)#3693
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,27)#3694
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#3695
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,27)#3696
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,24)#3697
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,26)#3698
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(I,1)#3699
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/Scene;,makeFieldRef,(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)Lsoot/SootFieldRef;)#3700
soot.Scene.makeFieldRef(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)Lsoot/SootFieldRef;#New(Lsoot/AbstractSootFieldRef;,0)#0
soot.Scene.makeFieldRef(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)Lsoot/SootFieldRef;#Dup(1,0)#1
soot.Scene.makeFieldRef(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)Lsoot/SootFieldRef;#LocalLoad(Ljava/lang/Object;,1)#2
soot.Scene.makeFieldRef(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)Lsoot/SootFieldRef;#LocalLoad(Ljava/lang/Object;,2)#3
soot.Scene.makeFieldRef(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)Lsoot/SootFieldRef;#LocalLoad(Ljava/lang/Object;,3)#4
soot.Scene.makeFieldRef(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)Lsoot/SootFieldRef;#LocalLoad(I,4)#5
soot.Scene.makeFieldRef(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)Lsoot/SootFieldRef;#Invoke(SPECIAL,Lsoot/AbstractSootFieldRef;,<init>,(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)V)#6
soot.AbstractSootFieldRef.<init>(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.AbstractSootFieldRef.<init>(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.AbstractSootFieldRef.<init>(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.AbstractSootFieldRef.<init>(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.AbstractSootFieldRef.<init>(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)V#Put(Lsoot/SootClass;,NONSTATIC,Lsoot/AbstractSootFieldRef;,declaringClass)#4
soot.AbstractSootFieldRef.<init>(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.AbstractSootFieldRef.<init>(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)V#LocalLoad(Ljava/lang/Object;,2)#6
soot.AbstractSootFieldRef.<init>(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/AbstractSootFieldRef;,name)#7
soot.AbstractSootFieldRef.<init>(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.AbstractSootFieldRef.<init>(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)V#LocalLoad(Ljava/lang/Object;,3)#9
soot.AbstractSootFieldRef.<init>(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)V#Put(Lsoot/Type;,NONSTATIC,Lsoot/AbstractSootFieldRef;,type)#10
soot.AbstractSootFieldRef.<init>(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.AbstractSootFieldRef.<init>(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)V#LocalLoad(I,4)#12
soot.AbstractSootFieldRef.<init>(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)V#Put(Z,NONSTATIC,Lsoot/AbstractSootFieldRef;,isStatic)#13
soot.AbstractSootFieldRef.<init>(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)V#LocalLoad(Ljava/lang/Object;,1)#14
soot.AbstractSootFieldRef.<init>(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)V#Constant(L;,null)#15
soot.AbstractSootFieldRef.<init>(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)V#ConditionalBranch(Ljava/lang/Object;,ne,22)#16
soot.AbstractSootFieldRef.<init>(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)V#LocalLoad(Ljava/lang/Object;,2)#22
soot.AbstractSootFieldRef.<init>(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)V#Constant(L;,null)#23
soot.AbstractSootFieldRef.<init>(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)V#ConditionalBranch(Ljava/lang/Object;,ne,30)#24
soot.AbstractSootFieldRef.<init>(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)V#LocalLoad(Ljava/lang/Object;,3)#30
soot.AbstractSootFieldRef.<init>(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)V#Constant(L;,null)#31
soot.AbstractSootFieldRef.<init>(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)V#ConditionalBranch(Ljava/lang/Object;,ne,38)#32
soot.AbstractSootFieldRef.<init>(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)V#Return(V)#38
soot.Scene.makeFieldRef(Lsoot/SootClass;Ljava/lang/String;Lsoot/Type;Z)Lsoot/SootFieldRef;#Return(Ljava/lang/Object;)#7
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,28)#3701
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/jimple/Jimple;,v,()Lsoot/jimple/Jimple;)#3702
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,28)#3703
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/jimple/Jimple;,newStaticFieldRef,(Lsoot/SootFieldRef;)Lsoot/jimple/StaticFieldRef;)#3704
soot.jimple.Jimple.newStaticFieldRef(Lsoot/SootFieldRef;)Lsoot/jimple/StaticFieldRef;#New(Lsoot/jimple/StaticFieldRef;,0)#0
soot.jimple.Jimple.newStaticFieldRef(Lsoot/SootFieldRef;)Lsoot/jimple/StaticFieldRef;#Dup(1,0)#1
soot.jimple.Jimple.newStaticFieldRef(Lsoot/SootFieldRef;)Lsoot/jimple/StaticFieldRef;#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.Jimple.newStaticFieldRef(Lsoot/SootFieldRef;)Lsoot/jimple/StaticFieldRef;#Invoke(SPECIAL,Lsoot/jimple/StaticFieldRef;,<init>,(Lsoot/SootFieldRef;)V)#3
soot.jimple.StaticFieldRef.<init>(Lsoot/SootFieldRef;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.StaticFieldRef.<init>(Lsoot/SootFieldRef;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.jimple.StaticFieldRef.<init>(Lsoot/SootFieldRef;)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.StaticFieldRef.<init>(Lsoot/SootFieldRef;)V#Invoke(INTERFACE,Lsoot/SootFieldRef;,isStatic,()Z)#3
soot.AbstractSootFieldRef.isStatic()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.AbstractSootFieldRef.isStatic()Z#Get(Z,NONSTATIC,Lsoot/AbstractSootFieldRef;,isStatic)#1
soot.AbstractSootFieldRef.isStatic()Z#Return(I)#2
soot.jimple.StaticFieldRef.<init>(Lsoot/SootFieldRef;)V#Constant(I,0)#4
soot.jimple.StaticFieldRef.<init>(Lsoot/SootFieldRef;)V#ConditionalBranch(I,ne,11)#5
soot.jimple.StaticFieldRef.<init>(Lsoot/SootFieldRef;)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.jimple.StaticFieldRef.<init>(Lsoot/SootFieldRef;)V#LocalLoad(Ljava/lang/Object;,1)#12
soot.jimple.StaticFieldRef.<init>(Lsoot/SootFieldRef;)V#Put(Lsoot/SootFieldRef;,NONSTATIC,Lsoot/jimple/StaticFieldRef;,fieldRef)#13
soot.jimple.StaticFieldRef.<init>(Lsoot/SootFieldRef;)V#Return(V)#14
soot.jimple.Jimple.newStaticFieldRef(Lsoot/SootFieldRef;)Lsoot/jimple/StaticFieldRef;#Return(Ljava/lang/Object;)#4
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,19)#3705
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/jimple/Jimple;,v,()Lsoot/jimple/Jimple;)#3706
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/coffi/Util;,v,()Lsoot/coffi/Util;)#3707
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#3708
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Get(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/coffi/CFG;,listBody)#3709
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,3)#3710
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,3)#3711
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,topIndex,()I)#3712
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/Util;,getLocalForStackOp,(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;)#3713
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,19)#3714
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/jimple/Jimple;,newAssignStmt,(Lsoot/Value;Lsoot/Value;)Lsoot/jimple/AssignStmt;)#3715
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,17)#3716
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Goto(4499)#3717
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#3944
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#CheckCast(Lsoot/coffi/Instruction_Invokevirtual;)#3945
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,19)#3946
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,4)#3947
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,19)#3948
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Get(I,NONSTATIC,Lsoot/coffi/Instruction_Invokevirtual;,arg_i)#3949
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/coffi/cp_info;,countParams,([Lsoot/coffi/cp_info;I)I)#3950
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(I,15)#3951
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,4)#3952
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,19)#3953
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Get(I,NONSTATIC,Lsoot/coffi/Instruction_Invokevirtual;,arg_i)#3954
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#ArrayLoad(Ljava/lang/Object;)#3955
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#CheckCast(Lsoot/coffi/CONSTANT_Methodref_info;)#3956
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,20)#3957
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#3958
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,4)#3959
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,20)#3960
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(I,0)#3961
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(SPECIAL,Lsoot/coffi/CFG;,createMethodRef,([Lsoot/coffi/cp_info;Lsoot/coffi/ICONSTANT_Methodref_info;Z)Lsoot/SootMethodRef;)#3962
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,21)#3963
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,21)#3964
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(INTERFACE,Lsoot/SootMethodRef;,returnType,()Lsoot/Type;)#3965
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,22)#3966
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(I,15)#3967
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#New([Lsoot/Value;,1)#3968
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,7)#3969
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(I,15)#3970
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(I,1)#3971
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#BinaryOp(I,sub)#3972
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(I,23)#3973
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Goto(4005)#3974
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(I,23)#4005
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(I,0)#4006
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#ConditionalBranch(I,ge,3975)#4007
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,7)#3975
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(I,23)#3976
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/coffi/Util;,v,()Lsoot/coffi/Util;)#3977
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#3978
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Get(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/coffi/CFG;,listBody)#3979
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,2)#3980
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,2)#3981
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,topIndex,()I)#3982
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/Util;,getLocalForStackOp,(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;)#3983
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#ArrayStore(Ljava/lang/Object;)#3984
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#3985
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,2)#3986
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,top,()Lsoot/Type;)#3987
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/CFG;,typeSize,(Lsoot/Type;)I)#3988
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(I,2)#3989
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#ConditionalBranch(I,ne,3998)#3990
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,2)#3998
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,pop,()Lsoot/coffi/TypeStack;)#3999
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,2)#4000
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(I,23)#4001
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(I,-1)#4002
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#BinaryOp(I,add)#4003
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(I,23)#4004
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/jimple/Jimple;,v,()Lsoot/jimple/Jimple;)#4008
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/coffi/Util;,v,()Lsoot/coffi/Util;)#4009
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#4010
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Get(Lsoot/jimple/JimpleBody;,NONSTATIC,Lsoot/coffi/CFG;,listBody)#4011
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,2)#4012
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,2)#4013
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/TypeStack;,topIndex,()I)#4014
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/coffi/Util;,getLocalForStackOp,(Lsoot/jimple/JimpleBody;Lsoot/coffi/TypeStack;I)Lsoot/Local;)#4015
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,21)#4016
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,7)#4017
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Ljava/util/Arrays;,asList,([Ljava/lang/Object;)Ljava/util/List;)#4018
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/jimple/Jimple;,newVirtualInvokeExpr,(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)Lsoot/jimple/VirtualInvokeExpr;)#4019
soot.jimple.Jimple.newVirtualInvokeExpr(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)Lsoot/jimple/VirtualInvokeExpr;#New(Lsoot/jimple/internal/JVirtualInvokeExpr;,0)#0
soot.jimple.Jimple.newVirtualInvokeExpr(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)Lsoot/jimple/VirtualInvokeExpr;#Dup(1,0)#1
soot.jimple.Jimple.newVirtualInvokeExpr(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)Lsoot/jimple/VirtualInvokeExpr;#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.Jimple.newVirtualInvokeExpr(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)Lsoot/jimple/VirtualInvokeExpr;#LocalLoad(Ljava/lang/Object;,2)#3
soot.jimple.Jimple.newVirtualInvokeExpr(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)Lsoot/jimple/VirtualInvokeExpr;#LocalLoad(Ljava/lang/Object;,3)#4
soot.jimple.Jimple.newVirtualInvokeExpr(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)Lsoot/jimple/VirtualInvokeExpr;#Invoke(SPECIAL,Lsoot/jimple/internal/JVirtualInvokeExpr;,<init>,(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V)#5
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#Invoke(STATIC,Lsoot/jimple/Jimple;,v,()Lsoot/jimple/Jimple;)#1
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/jimple/Jimple;,newLocalBox,(Lsoot/Value;)Lsoot/ValueBox;)#3
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#4
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#5
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#6
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#New([Lsoot/ValueBox;,1)#7
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#Invoke(SPECIAL,Lsoot/jimple/internal/AbstractVirtualInvokeExpr;,<init>,(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V)#8
soot.jimple.internal.AbstractVirtualInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.AbstractVirtualInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#Invoke(SPECIAL,Lsoot/jimple/internal/AbstractInstanceInvokeExpr;,<init>,()V)#1
soot.jimple.internal.AbstractVirtualInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,2)#2
soot.jimple.internal.AbstractVirtualInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#Invoke(INTERFACE,Lsoot/SootMethodRef;,isStatic,()Z)#3
soot.jimple.internal.AbstractVirtualInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#Constant(I,0)#4
soot.jimple.internal.AbstractVirtualInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#ConditionalBranch(I,eq,11)#5
soot.jimple.internal.AbstractVirtualInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.jimple.internal.AbstractVirtualInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,1)#12
soot.jimple.internal.AbstractVirtualInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#Put(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/AbstractVirtualInvokeExpr;,baseBox)#13
soot.jimple.internal.AbstractVirtualInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,0)#14
soot.jimple.internal.AbstractVirtualInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,2)#15
soot.jimple.internal.AbstractVirtualInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#Put(Lsoot/SootMethodRef;,NONSTATIC,Lsoot/jimple/internal/AbstractVirtualInvokeExpr;,methodRef)#16
soot.jimple.internal.AbstractVirtualInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,0)#17
soot.jimple.internal.AbstractVirtualInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,3)#18
soot.jimple.internal.AbstractVirtualInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#Put([Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/AbstractVirtualInvokeExpr;,argBoxes)#19
soot.jimple.internal.AbstractVirtualInvokeExpr.<init>(Lsoot/ValueBox;Lsoot/SootMethodRef;[Lsoot/ValueBox;)V#Return(V)#20
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#9
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#Invoke(INTERFACE,Lsoot/SootMethodRef;,declaringClass,()Lsoot/SootClass;)#10
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/SootClass;,isInterface,()Z)#11
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#Constant(I,0)#12
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#ConditionalBranch(I,eq,19)#13
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#Constant(I,0)#19
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalStore(I,4)#20
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#Goto(36)#21
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalLoad(I,4)#36
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#37
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#38
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#ConditionalBranch(I,lt,22)#39
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#22
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#Get([Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/JVirtualInvokeExpr;,argBoxes)#23
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalLoad(I,4)#24
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#Invoke(STATIC,Lsoot/jimple/Jimple;,v,()Lsoot/jimple/Jimple;)#25
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#26
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalLoad(I,4)#27
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#28
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#CheckCast(Lsoot/Value;)#29
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/jimple/Jimple;,newImmediateBox,(Lsoot/Value;)Lsoot/ValueBox;)#30
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#ArrayStore(Ljava/lang/Object;)#31
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalLoad(I,4)#32
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#Constant(I,1)#33
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#BinaryOp(I,add)#34
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#LocalStore(I,4)#35
soot.jimple.internal.JVirtualInvokeExpr.<init>(Lsoot/Value;Lsoot/SootMethodRef;Ljava/util/List;)V#Return(V)#40
soot.jimple.Jimple.newVirtualInvokeExpr(Lsoot/Local;Lsoot/SootMethodRef;Ljava/util/List;)Lsoot/jimple/VirtualInvokeExpr;#Return(Ljava/lang/Object;)#6
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,16)#4020
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,22)#4021
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/VoidType;,v,()Lsoot/VoidType;)#4022
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#4023
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Constant(I,0)#4024
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#ConditionalBranch(I,ne,4038)#4025
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(STATIC,Lsoot/jimple/Jimple;,v,()Lsoot/jimple/Jimple;)#4038
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,16)#4039
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Invoke(VIRTUAL,Lsoot/jimple/Jimple;,newInvokeStmt,(Lsoot/Value;)Lsoot/jimple/InvokeStmt;)#4040
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#LocalStore(Ljava/lang/Object;,17)#4041
soot.coffi.CFG.generateJimple(Lsoot/coffi/Instruction;Lsoot/coffi/TypeStack;Lsoot/coffi/TypeStack;[Lsoot/coffi/cp_info;Ljava/util/List;Lsoot/coffi/BasicBlock;)V#Goto(4499)#4042
soot.jimple.StaticFieldRef.getUseBoxes()Ljava/util/List;#Get(Ljava/util/List;,STATIC,Lsoot/AbstractUnit;,emptyList)#0
soot.jimple.StaticFieldRef.getUseBoxes()Ljava/util/List;#Return(Ljava/lang/Object;)#1
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,1)#158
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(I,18)#159
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,20)#160
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,23)#161
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#162
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Pop(1)#163
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,26)#222
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Instanceof(Lsoot/jimple/FieldRef;)#223
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#224
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(I,eq,257)#225
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,26)#257
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Instanceof(Lsoot/jimple/ArrayRef;)#258
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#259
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(I,eq,273)#260
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,24)#295
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Lsoot/jimple/Stmt;,getUseBoxes,()Ljava/util/List;)#296
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#297
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(Ljava/lang/Object;,25)#298
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Goto(332)#299
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,25)#332
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#333
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#334
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(I,ne,300)#335
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,25)#300
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#301
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#CheckCast(Lsoot/ValueBox;)#302
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(Ljava/lang/Object;,26)#303
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,24)#304
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,13)#305
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(Ljava/lang/Object;,ne,311)#306
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,26)#311
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#312
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalStore(Ljava/lang/Object;,27)#313
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,27)#314
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Instanceof(Lsoot/jimple/InvokeExpr;)#315
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#316
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(I,ne,329)#317
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(I,17)#318
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Constant(I,0)#319
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(I,eq,332)#320
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,26)#307
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#LocalLoad(Ljava/lang/Object;,14)#308
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#ConditionalBranch(Ljava/lang/Object;,ne,311)#309
soot.jimple.toolkits.base.Aggregator.internalAggregate(Lsoot/jimple/StmtBody;Ljava/util/Map;Z)Z#Goto(336)#310
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,1)#401
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#CheckCast(Lsoot/jimple/FieldRef;)#402
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Invoke(INTERFACE,Lsoot/jimple/FieldRef;,getField,()Lsoot/SootField;)#403
soot.jimple.StaticFieldRef.getField()Lsoot/SootField;#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.StaticFieldRef.getField()Lsoot/SootField;#Get(Lsoot/SootFieldRef;,NONSTATIC,Lsoot/jimple/StaticFieldRef;,fieldRef)#1
soot.jimple.StaticFieldRef.getField()Lsoot/SootField;#Invoke(INTERFACE,Lsoot/SootFieldRef;,resolve,()Lsoot/SootField;)#2
soot.AbstractSootFieldRef.resolve()Lsoot/SootField;#LocalLoad(Ljava/lang/Object;,0)#0
soot.AbstractSootFieldRef.resolve()Lsoot/SootField;#Constant(L;,null)#1
soot.AbstractSootFieldRef.resolve()Lsoot/SootField;#Invoke(SPECIAL,Lsoot/AbstractSootFieldRef;,resolve,(Ljava/lang/StringBuffer;)Lsoot/SootField;)#2
soot.AbstractSootFieldRef.resolve(Ljava/lang/StringBuffer;)Lsoot/SootField;#LocalLoad(Ljava/lang/Object;,0)#0
soot.AbstractSootFieldRef.resolve(Ljava/lang/StringBuffer;)Lsoot/SootField;#Get(Lsoot/SootClass;,NONSTATIC,Lsoot/AbstractSootFieldRef;,declaringClass)#1
soot.AbstractSootFieldRef.resolve(Ljava/lang/StringBuffer;)Lsoot/SootField;#LocalStore(Ljava/lang/Object;,2)#2
soot.AbstractSootFieldRef.resolve(Ljava/lang/StringBuffer;)Lsoot/SootField;#LocalLoad(Ljava/lang/Object;,1)#3
soot.AbstractSootFieldRef.resolve(Ljava/lang/StringBuffer;)Lsoot/SootField;#Constant(L;,null)#4
soot.AbstractSootFieldRef.resolve(Ljava/lang/StringBuffer;)Lsoot/SootField;#ConditionalBranch(Ljava/lang/Object;,eq,23)#5
soot.AbstractSootFieldRef.resolve(Ljava/lang/StringBuffer;)Lsoot/SootField;#LocalLoad(Ljava/lang/Object;,2)#23
soot.AbstractSootFieldRef.resolve(Ljava/lang/StringBuffer;)Lsoot/SootField;#LocalLoad(Ljava/lang/Object;,0)#24
soot.AbstractSootFieldRef.resolve(Ljava/lang/StringBuffer;)Lsoot/SootField;#Get(Ljava/lang/String;,NONSTATIC,Lsoot/AbstractSootFieldRef;,name)#25
soot.AbstractSootFieldRef.resolve(Ljava/lang/StringBuffer;)Lsoot/SootField;#LocalLoad(Ljava/lang/Object;,0)#26
soot.AbstractSootFieldRef.resolve(Ljava/lang/StringBuffer;)Lsoot/SootField;#Get(Lsoot/Type;,NONSTATIC,Lsoot/AbstractSootFieldRef;,type)#27
soot.AbstractSootFieldRef.resolve(Ljava/lang/StringBuffer;)Lsoot/SootField;#Invoke(VIRTUAL,Lsoot/SootClass;,declaresField,(Ljava/lang/String;Lsoot/Type;)Z)#28
soot.SootClass.declaresField(Ljava/lang/String;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.declaresField(Ljava/lang/String;Lsoot/Type;)Z#Constant(I,2)#1
soot.SootClass.declaresField(Ljava/lang/String;Lsoot/Type;)Z#Invoke(VIRTUAL,Lsoot/SootClass;,checkLevel,(I)V)#2
soot.SootClass.declaresField(Ljava/lang/String;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,0)#3
soot.SootClass.declaresField(Ljava/lang/String;Lsoot/Type;)Z#Invoke(VIRTUAL,Lsoot/SootClass;,getFields,()Lsoot/util/Chain;)#4
soot.SootClass.declaresField(Ljava/lang/String;Lsoot/Type;)Z#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#5
soot.SootClass.declaresField(Ljava/lang/String;Lsoot/Type;)Z#LocalStore(Ljava/lang/Object;,3)#6
soot.SootClass.declaresField(Ljava/lang/String;Lsoot/Type;)Z#Goto(26)#7
soot.SootClass.declaresField(Ljava/lang/String;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,3)#26
soot.SootClass.declaresField(Ljava/lang/String;Lsoot/Type;)Z#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#27
soot.SootClass.declaresField(Ljava/lang/String;Lsoot/Type;)Z#Constant(I,0)#28
soot.SootClass.declaresField(Ljava/lang/String;Lsoot/Type;)Z#ConditionalBranch(I,ne,8)#29
soot.SootClass.declaresField(Ljava/lang/String;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,3)#8
soot.SootClass.declaresField(Ljava/lang/String;Lsoot/Type;)Z#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#9
soot.SootClass.declaresField(Ljava/lang/String;Lsoot/Type;)Z#CheckCast(Lsoot/SootField;)#10
soot.SootClass.declaresField(Ljava/lang/String;Lsoot/Type;)Z#LocalStore(Ljava/lang/Object;,4)#11
soot.SootClass.declaresField(Ljava/lang/String;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,4)#12
soot.SootClass.declaresField(Ljava/lang/String;Lsoot/Type;)Z#Get(Ljava/lang/String;,NONSTATIC,Lsoot/SootField;,name)#13
soot.SootClass.declaresField(Ljava/lang/String;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,1)#14
soot.SootClass.declaresField(Ljava/lang/String;Lsoot/Type;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#15
soot.SootClass.declaresField(Ljava/lang/String;Lsoot/Type;)Z#Constant(I,0)#16
soot.SootClass.declaresField(Ljava/lang/String;Lsoot/Type;)Z#ConditionalBranch(I,eq,26)#17
soot.SootClass.declaresField(Ljava/lang/String;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,4)#18
soot.SootClass.declaresField(Ljava/lang/String;Lsoot/Type;)Z#Get(Lsoot/Type;,NONSTATIC,Lsoot/SootField;,type)#19
soot.SootClass.declaresField(Ljava/lang/String;Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,2)#20
soot.SootClass.declaresField(Ljava/lang/String;Lsoot/Type;)Z#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#21
soot.SootClass.declaresField(Ljava/lang/String;Lsoot/Type;)Z#Constant(I,0)#22
soot.SootClass.declaresField(Ljava/lang/String;Lsoot/Type;)Z#ConditionalBranch(I,eq,26)#23
soot.SootClass.declaresField(Ljava/lang/String;Lsoot/Type;)Z#Constant(I,1)#24
soot.SootClass.declaresField(Ljava/lang/String;Lsoot/Type;)Z#Return(I)#25
soot.AbstractSootFieldRef.resolve(Ljava/lang/StringBuffer;)Lsoot/SootField;#Constant(I,0)#29
soot.AbstractSootFieldRef.resolve(Ljava/lang/StringBuffer;)Lsoot/SootField;#ConditionalBranch(I,eq,40)#30
soot.AbstractSootFieldRef.resolve(Ljava/lang/StringBuffer;)Lsoot/SootField;#LocalLoad(Ljava/lang/Object;,0)#31
soot.AbstractSootFieldRef.resolve(Ljava/lang/StringBuffer;)Lsoot/SootField;#LocalLoad(Ljava/lang/Object;,2)#32
soot.AbstractSootFieldRef.resolve(Ljava/lang/StringBuffer;)Lsoot/SootField;#LocalLoad(Ljava/lang/Object;,0)#33
soot.AbstractSootFieldRef.resolve(Ljava/lang/StringBuffer;)Lsoot/SootField;#Get(Ljava/lang/String;,NONSTATIC,Lsoot/AbstractSootFieldRef;,name)#34
soot.AbstractSootFieldRef.resolve(Ljava/lang/StringBuffer;)Lsoot/SootField;#LocalLoad(Ljava/lang/Object;,0)#35
soot.AbstractSootFieldRef.resolve(Ljava/lang/StringBuffer;)Lsoot/SootField;#Get(Lsoot/Type;,NONSTATIC,Lsoot/AbstractSootFieldRef;,type)#36
soot.AbstractSootFieldRef.resolve(Ljava/lang/StringBuffer;)Lsoot/SootField;#Invoke(VIRTUAL,Lsoot/SootClass;,getField,(Ljava/lang/String;Lsoot/Type;)Lsoot/SootField;)#37
soot.SootClass.getField(Ljava/lang/String;Lsoot/Type;)Lsoot/SootField;#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.getField(Ljava/lang/String;Lsoot/Type;)Lsoot/SootField;#Constant(I,2)#1
soot.SootClass.getField(Ljava/lang/String;Lsoot/Type;)Lsoot/SootField;#Invoke(VIRTUAL,Lsoot/SootClass;,checkLevel,(I)V)#2
soot.SootClass.getField(Ljava/lang/String;Lsoot/Type;)Lsoot/SootField;#LocalLoad(Ljava/lang/Object;,0)#3
soot.SootClass.getField(Ljava/lang/String;Lsoot/Type;)Lsoot/SootField;#Invoke(VIRTUAL,Lsoot/SootClass;,getFields,()Lsoot/util/Chain;)#4
soot.SootClass.getField(Ljava/lang/String;Lsoot/Type;)Lsoot/SootField;#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#5
soot.SootClass.getField(Ljava/lang/String;Lsoot/Type;)Lsoot/SootField;#LocalStore(Ljava/lang/Object;,3)#6
soot.SootClass.getField(Ljava/lang/String;Lsoot/Type;)Lsoot/SootField;#Goto(26)#7
soot.SootClass.getField(Ljava/lang/String;Lsoot/Type;)Lsoot/SootField;#LocalLoad(Ljava/lang/Object;,3)#26
soot.SootClass.getField(Ljava/lang/String;Lsoot/Type;)Lsoot/SootField;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#27
soot.SootClass.getField(Ljava/lang/String;Lsoot/Type;)Lsoot/SootField;#Constant(I,0)#28
soot.SootClass.getField(Ljava/lang/String;Lsoot/Type;)Lsoot/SootField;#ConditionalBranch(I,ne,8)#29
soot.SootClass.getField(Ljava/lang/String;Lsoot/Type;)Lsoot/SootField;#LocalLoad(Ljava/lang/Object;,3)#8
soot.SootClass.getField(Ljava/lang/String;Lsoot/Type;)Lsoot/SootField;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#9
soot.SootClass.getField(Ljava/lang/String;Lsoot/Type;)Lsoot/SootField;#CheckCast(Lsoot/SootField;)#10
soot.SootClass.getField(Ljava/lang/String;Lsoot/Type;)Lsoot/SootField;#LocalStore(Ljava/lang/Object;,4)#11
soot.SootClass.getField(Ljava/lang/String;Lsoot/Type;)Lsoot/SootField;#LocalLoad(Ljava/lang/Object;,4)#12
soot.SootClass.getField(Ljava/lang/String;Lsoot/Type;)Lsoot/SootField;#Get(Ljava/lang/String;,NONSTATIC,Lsoot/SootField;,name)#13
soot.SootClass.getField(Ljava/lang/String;Lsoot/Type;)Lsoot/SootField;#LocalLoad(Ljava/lang/Object;,1)#14
soot.SootClass.getField(Ljava/lang/String;Lsoot/Type;)Lsoot/SootField;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#15
soot.SootClass.getField(Ljava/lang/String;Lsoot/Type;)Lsoot/SootField;#Constant(I,0)#16
soot.SootClass.getField(Ljava/lang/String;Lsoot/Type;)Lsoot/SootField;#ConditionalBranch(I,eq,26)#17
soot.SootClass.getField(Ljava/lang/String;Lsoot/Type;)Lsoot/SootField;#LocalLoad(Ljava/lang/Object;,4)#18
soot.SootClass.getField(Ljava/lang/String;Lsoot/Type;)Lsoot/SootField;#Get(Lsoot/Type;,NONSTATIC,Lsoot/SootField;,type)#19
soot.SootClass.getField(Ljava/lang/String;Lsoot/Type;)Lsoot/SootField;#LocalLoad(Ljava/lang/Object;,2)#20
soot.SootClass.getField(Ljava/lang/String;Lsoot/Type;)Lsoot/SootField;#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#21
soot.SootClass.getField(Ljava/lang/String;Lsoot/Type;)Lsoot/SootField;#Constant(I,0)#22
soot.SootClass.getField(Ljava/lang/String;Lsoot/Type;)Lsoot/SootField;#ConditionalBranch(I,eq,26)#23
soot.SootClass.getField(Ljava/lang/String;Lsoot/Type;)Lsoot/SootField;#LocalLoad(Ljava/lang/Object;,4)#24
soot.SootClass.getField(Ljava/lang/String;Lsoot/Type;)Lsoot/SootField;#Return(Ljava/lang/Object;)#25
soot.AbstractSootFieldRef.resolve(Ljava/lang/StringBuffer;)Lsoot/SootField;#Invoke(SPECIAL,Lsoot/AbstractSootFieldRef;,checkStatic,(Lsoot/SootField;)Lsoot/SootField;)#38
soot.AbstractSootFieldRef.checkStatic(Lsoot/SootField;)Lsoot/SootField;#LocalLoad(Ljava/lang/Object;,1)#0
soot.AbstractSootFieldRef.checkStatic(Lsoot/SootField;)Lsoot/SootField;#Invoke(VIRTUAL,Lsoot/SootField;,isStatic,()Z)#1
soot.SootField.isStatic()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootField.isStatic()Z#Invoke(VIRTUAL,Lsoot/SootField;,getModifiers,()I)#1
soot.SootField.getModifiers()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootField.getModifiers()I#Get(I,NONSTATIC,Lsoot/SootField;,modifiers)#1
soot.SootField.getModifiers()I#Return(I)#2
soot.SootField.isStatic()Z#Invoke(STATIC,Lsoot/Modifier;,isStatic,(I)Z)#2
soot.SootField.isStatic()Z#Return(I)#3
soot.AbstractSootFieldRef.checkStatic(Lsoot/SootField;)Lsoot/SootField;#LocalLoad(Ljava/lang/Object;,0)#2
soot.AbstractSootFieldRef.checkStatic(Lsoot/SootField;)Lsoot/SootField;#Invoke(VIRTUAL,Lsoot/AbstractSootFieldRef;,isStatic,()Z)#3
soot.AbstractSootFieldRef.checkStatic(Lsoot/SootField;)Lsoot/SootField;#ConditionalBranch(I,eq,30)#4
soot.AbstractSootFieldRef.checkStatic(Lsoot/SootField;)Lsoot/SootField;#LocalLoad(Ljava/lang/Object;,1)#30
soot.AbstractSootFieldRef.checkStatic(Lsoot/SootField;)Lsoot/SootField;#Return(Ljava/lang/Object;)#31
soot.AbstractSootFieldRef.resolve(Ljava/lang/StringBuffer;)Lsoot/SootField;#Return(Ljava/lang/Object;)#39
soot.AbstractSootFieldRef.resolve()Lsoot/SootField;#Return(Ljava/lang/Object;)#3
soot.jimple.StaticFieldRef.getField()Lsoot/SootField;#Return(Ljava/lang/Object;)#3
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Invoke(VIRTUAL,Lsoot/SootField;,getType,()Lsoot/Type;)#404
soot.jimple.toolkits.typing.fast.AugEvalFunction.eval_(Lsoot/jimple/toolkits/typing/fast/Typing;Lsoot/Value;Lsoot/jimple/Stmt;Lsoot/jimple/JimpleBody;)Lsoot/Type;#Return(Ljava/lang/Object;)#405
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#176
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Instanceof(Lsoot/jimple/FieldRef;)#177
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#178
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,186)#179
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#180
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Instanceof(Lsoot/jimple/InstanceFieldRef;)#181
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#182
soot.jimple.toolkits.scalar.DeadAssignmentEliminator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,186)#183
soot.Modifier.isAbstract(I)Z#Constant(I,1)#5
soot.Modifier.isAbstract(I)Z#Return(I)#6
soot.SootMethod.isConcrete()Z#Constant(I,0)#14
soot.SootMethod.isConcrete()Z#Return(I)#15
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Goto(65)#26
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Goto(140)#82
soot.jimple.toolkits.annotation.LineNumberAdder.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Return(V)#148
soot.PackManager.runPacks()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#14
soot.PackManager.runPacks()V#Invoke(VIRTUAL,Lsoot/options/Options;,whole_program,()Z)#15
soot.PackManager.runPacks()V#Constant(I,0)#16
soot.PackManager.runPacks()V#ConditionalBranch(I,ne,22)#17
soot.PackManager.runPacks()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#18
soot.PackManager.runPacks()V#Invoke(VIRTUAL,Lsoot/options/Options;,whole_shimple,()Z)#19
soot.PackManager.runPacks()V#Constant(I,0)#20
soot.PackManager.runPacks()V#ConditionalBranch(I,eq,24)#21
soot.PackManager.runPacks()V#LocalLoad(Ljava/lang/Object;,0)#24
soot.PackManager.runPacks()V#Invoke(SPECIAL,Lsoot/PackManager;,retrieveAllBodies,()V)#25
soot.PackManager.retrieveAllBodies()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.PackManager.retrieveAllBodies()V#Invoke(SPECIAL,Lsoot/PackManager;,reachableClasses,()Ljava/util/Iterator;)#1
soot.PackManager.reachableClasses()Ljava/util/Iterator;#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#0
soot.PackManager.reachableClasses()Ljava/util/Iterator;#Invoke(VIRTUAL,Lsoot/Scene;,getApplicationClasses,()Lsoot/util/Chain;)#1
soot.PackManager.reachableClasses()Ljava/util/Iterator;#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#2
soot.PackManager.reachableClasses()Ljava/util/Iterator;#Return(Ljava/lang/Object;)#3
soot.PackManager.retrieveAllBodies()V#LocalStore(Ljava/lang/Object;,1)#2
soot.PackManager.retrieveAllBodies()V#Goto(68)#3
soot.PackManager.retrieveAllBodies()V#LocalLoad(Ljava/lang/Object;,1)#68
soot.PackManager.retrieveAllBodies()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#69
soot.PackManager.retrieveAllBodies()V#Constant(I,0)#70
soot.PackManager.retrieveAllBodies()V#ConditionalBranch(I,ne,4)#71
soot.PackManager.retrieveAllBodies()V#LocalLoad(Ljava/lang/Object;,1)#4
soot.PackManager.retrieveAllBodies()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#5
soot.PackManager.retrieveAllBodies()V#CheckCast(Lsoot/SootClass;)#6
soot.PackManager.retrieveAllBodies()V#LocalStore(Ljava/lang/Object;,2)#7
soot.PackManager.retrieveAllBodies()V#LocalLoad(Ljava/lang/Object;,2)#8
soot.PackManager.retrieveAllBodies()V#Invoke(VIRTUAL,Lsoot/SootClass;,methodIterator,()Ljava/util/Iterator;)#9
soot.PackManager.retrieveAllBodies()V#LocalStore(Ljava/lang/Object;,3)#10
soot.PackManager.retrieveAllBodies()V#Goto(64)#11
soot.PackManager.retrieveAllBodies()V#LocalLoad(Ljava/lang/Object;,3)#64
soot.PackManager.retrieveAllBodies()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#65
soot.PackManager.retrieveAllBodies()V#Constant(I,0)#66
soot.PackManager.retrieveAllBodies()V#ConditionalBranch(I,ne,12)#67
soot.PackManager.retrieveAllBodies()V#LocalLoad(Ljava/lang/Object;,3)#12
soot.PackManager.retrieveAllBodies()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#13
soot.PackManager.retrieveAllBodies()V#CheckCast(Lsoot/SootMethod;)#14
soot.PackManager.retrieveAllBodies()V#LocalStore(Ljava/lang/Object;,4)#15
soot.PackManager.retrieveAllBodies()V#Get(Z,STATIC,Lsoot/PackManager;,DEBUG)#16
soot.PackManager.retrieveAllBodies()V#Constant(I,0)#17
soot.PackManager.retrieveAllBodies()V#ConditionalBranch(I,eq,57)#18
soot.PackManager.retrieveAllBodies()V#LocalLoad(Ljava/lang/Object;,4)#57
soot.PackManager.retrieveAllBodies()V#Invoke(VIRTUAL,Lsoot/SootMethod;,isConcrete,()Z)#58
soot.PackManager.retrieveAllBodies()V#Constant(I,0)#59
soot.PackManager.retrieveAllBodies()V#ConditionalBranch(I,eq,64)#60
soot.PackManager.retrieveAllBodies()V#LocalLoad(Ljava/lang/Object;,4)#61
soot.PackManager.retrieveAllBodies()V#Invoke(VIRTUAL,Lsoot/SootMethod;,retrieveActiveBody,()Lsoot/Body;)#62
soot.PackManager.retrieveAllBodies()V#Pop(1)#63
soot.PackManager.retrieveAllBodies()V#Return(V)#72
soot.PackManager.runPacks()V#Get(Z,STATIC,Lsoot/jbco/Main;,metrics)#26
soot.PackManager.runPacks()V#Constant(I,0)#27
soot.PackManager.runPacks()V#ConditionalBranch(I,eq,33)#28
soot.PackManager.runPacks()V#LocalLoad(Ljava/lang/Object;,0)#33
soot.PackManager.runPacks()V#Invoke(SPECIAL,Lsoot/PackManager;,preProcessDAVA,()V)#34
soot.PackManager.preProcessDAVA()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#0
soot.PackManager.preProcessDAVA()V#Invoke(VIRTUAL,Lsoot/options/Options;,output_format,()I)#1
soot.PackManager.preProcessDAVA()V#Constant(I,13)#2
soot.PackManager.preProcessDAVA()V#ConditionalBranch(I,ne,35)#3
soot.PackManager.preProcessDAVA()V#Return(V)#35
soot.PackManager.runPacks()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#35
soot.PackManager.runPacks()V#Invoke(VIRTUAL,Lsoot/options/Options;,interactive_mode,()Z)#36
soot.PackManager.runPacks()V#Constant(I,0)#37
soot.PackManager.runPacks()V#ConditionalBranch(I,eq,55)#38
soot.PackManager.runPacks()V#LocalLoad(Ljava/lang/Object;,0)#55
soot.PackManager.runPacks()V#Invoke(VIRTUAL,Lsoot/PackManager;,runBodyPacks,()V)#56
soot.PackManager.runBodyPacks()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.PackManager.runBodyPacks()V#LocalLoad(Ljava/lang/Object;,0)#1
soot.PackManager.runBodyPacks()V#Invoke(SPECIAL,Lsoot/PackManager;,reachableClasses,()Ljava/util/Iterator;)#2
soot.PackManager.runBodyPacks()V#Invoke(SPECIAL,Lsoot/PackManager;,runBodyPacks,(Ljava/util/Iterator;)V)#3
soot.PackManager.runBodyPacks(Ljava/util/Iterator;)V#Goto(8)#0
soot.PackManager.runBodyPacks(Ljava/util/Iterator;)V#LocalLoad(Ljava/lang/Object;,1)#8
soot.PackManager.runBodyPacks(Ljava/util/Iterator;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#9
soot.PackManager.runBodyPacks(Ljava/util/Iterator;)V#Constant(I,0)#10
soot.PackManager.runBodyPacks(Ljava/util/Iterator;)V#ConditionalBranch(I,ne,1)#11
soot.PackManager.runBodyPacks(Ljava/util/Iterator;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.PackManager.runBodyPacks(Ljava/util/Iterator;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#2
soot.PackManager.runBodyPacks(Ljava/util/Iterator;)V#CheckCast(Lsoot/SootClass;)#3
soot.PackManager.runBodyPacks(Ljava/util/Iterator;)V#LocalStore(Ljava/lang/Object;,2)#4
soot.PackManager.runBodyPacks(Ljava/util/Iterator;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.PackManager.runBodyPacks(Ljava/util/Iterator;)V#LocalLoad(Ljava/lang/Object;,2)#6
soot.PackManager.runBodyPacks(Ljava/util/Iterator;)V#Invoke(SPECIAL,Lsoot/PackManager;,runBodyPacks,(Lsoot/SootClass;)V)#7
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#0
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/options/Options;,output_format,()I)#1
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalStore(I,2)#2
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalLoad(I,2)#3
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Constant(I,13)#4
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#ConditionalBranch(I,ne,14)#5
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#14
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Get(Ljava/io/PrintStream;,NONSTATIC,Lsoot/G;,out)#15
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Constant(Ljava/lang/String;,"Transforming ")#16
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(VIRTUAL,Ljava/io/PrintStream;,print,(Ljava/lang/String;)V)#17
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#18
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Get(Ljava/io/PrintStream;,NONSTATIC,Lsoot/G;,out)#19
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#New(Ljava/lang/StringBuilder;,0)#20
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Dup(1,0)#21
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#22
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getName,()Ljava/lang/String;)#23
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#24
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#25
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Constant(Ljava/lang/String;,"... ")#26
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#27
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#28
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(VIRTUAL,Ljava/io/PrintStream;,println,(Ljava/lang/String;)V)#29
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Constant(I,0)#30
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalStore(I,3)#31
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Constant(I,0)#32
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalStore(I,4)#33
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Constant(I,0)#34
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalStore(I,5)#35
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Constant(I,1)#36
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalStore(I,6)#37
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Constant(I,0)#38
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalStore(I,7)#39
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalLoad(I,2)#40
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Switch(67,1,42,2,42,3,43,4,43,5,53,6,53,7,50,8,50,9,42,10,42,11,56,12,56,13,48,14,42)#41
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#56
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/options/Options;,via_grimp,()Z)#57
soot.options.Options.via_grimp()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.via_grimp()Z#Get(Z,NONSTATIC,Lsoot/options/Options;,via_grimp)#1
soot.options.Options.via_grimp()Z#Return(I)#2
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalStore(I,4)#58
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalLoad(I,4)#59
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Constant(I,0)#60
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#ConditionalBranch(I,eq,64)#61
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Constant(I,1)#64
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalStore(I,3)#65
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Goto(71)#66
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#New(Lsoot/xml/TagCollector;,0)#71
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Dup(1,0)#72
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(SPECIAL,Lsoot/xml/TagCollector;,<init>,()V)#73
soot.xml.TagCollector.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.xml.TagCollector.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.xml.TagCollector.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
soot.xml.TagCollector.<init>()V#New(Ljava/util/ArrayList;,0)#3
soot.xml.TagCollector.<init>()V#Dup(1,0)#4
soot.xml.TagCollector.<init>()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#5
soot.xml.TagCollector.<init>()V#Put(Ljava/util/ArrayList;,NONSTATIC,Lsoot/xml/TagCollector;,attributes)#6
soot.xml.TagCollector.<init>()V#LocalLoad(Ljava/lang/Object;,0)#7
soot.xml.TagCollector.<init>()V#New(Ljava/util/ArrayList;,0)#8
soot.xml.TagCollector.<init>()V#Dup(1,0)#9
soot.xml.TagCollector.<init>()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#10
soot.xml.TagCollector.<init>()V#Put(Ljava/util/ArrayList;,NONSTATIC,Lsoot/xml/TagCollector;,keys)#11
soot.xml.TagCollector.<init>()V#Return(V)#12
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,8)#74
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#75
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/options/Options;,whole_shimple,()Z)#76
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalStore(I,9)#77
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#78
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/options/Options;,via_shimple,()Z)#79
soot.options.Options.via_shimple()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.via_shimple()Z#Get(Z,NONSTATIC,Lsoot/options/Options;,via_shimple)#1
soot.options.Options.via_shimple()Z#Return(I)#2
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Constant(I,0)#80
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#ConditionalBranch(I,eq,84)#81
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#New(Ljava/util/LinkedList;,0)#84
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Dup(1,0)#85
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#86
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getMethods,()Ljava/util/List;)#87
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,(Ljava/util/Collection;)V)#88
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,10)#89
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,10)#90
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,iterator,()Ljava/util/Iterator;)#91
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,11)#92
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Goto(267)#93
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,11)#267
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#268
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Constant(I,0)#269
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#ConditionalBranch(I,ne,94)#270
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,11)#94
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#95
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#CheckCast(Lsoot/SootMethod;)#96
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,12)#97
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Get(Z,STATIC,Lsoot/PackManager;,DEBUG)#98
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Constant(I,0)#99
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#ConditionalBranch(I,eq,122)#100
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,12)#122
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,isConcrete,()Z)#123
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Constant(I,0)#124
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#ConditionalBranch(I,ne,127)#125
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalLoad(I,7)#127
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Constant(I,0)#128
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#ConditionalBranch(I,ne,133)#129
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalLoad(I,9)#130
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Constant(I,0)#131
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#ConditionalBranch(I,eq,182)#132
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalLoad(I,6)#182
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Constant(I,0)#183
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#ConditionalBranch(I,eq,221)#184
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,12)#185
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,retrieveActiveBody,()Lsoot/Body;)#186
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#CheckCast(Lsoot/jimple/JimpleBody;)#187
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,13)#188
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#189
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Constant(Ljava/lang/String;,"jtp")#190
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/PackManager;,getPack,(Ljava/lang/String;)Lsoot/Pack;)#191
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,13)#192
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/Pack;,apply,(Lsoot/Body;)V)#193
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#231
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"wstp")#232
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#233
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#234
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,238)#235
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#238
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"wsop")#239
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#240
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#241
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,245)#242
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#245
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"wjtp")#246
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#247
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#248
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,252)#249
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#252
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"wjtp.mhp")#253
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#254
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#255
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,259)#256
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#259
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"wjtp.tn")#260
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#261
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#262
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,266)#263
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#266
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"wjop")#267
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#268
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#269
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,273)#270
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#273
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"wjop.smb")#274
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#275
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#276
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,280)#277
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#280
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"wjop.si")#281
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#282
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#283
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,287)#284
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#287
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"wjap")#288
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#289
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#290
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,294)#291
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#294
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"wjap.ra")#295
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#296
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#297
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,301)#298
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#301
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"wjap.umt")#302
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#303
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#304
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,308)#305
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#308
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"wjap.uft")#309
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#310
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#311
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,315)#312
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#315
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"wjap.tqt")#316
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#317
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#318
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,322)#319
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#322
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"wjap.cgg")#323
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#324
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#325
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,329)#326
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#329
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"wjap.purity")#330
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#331
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#332
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,336)#333
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#336
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"shimple")#337
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#338
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#339
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,343)#340
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#343
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"stp")#344
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#345
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#346
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,350)#347
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#350
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"sop")#351
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#352
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#353
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,357)#354
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#357
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"sop.cpf")#358
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#359
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#360
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,364)#361
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#364
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jtp")#365
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#366
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#367
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,371)#368
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:true ")#369
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#370
soot.BodyPack.internalApply(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.BodyPack.internalApply(Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/BodyPack;,iterator,()Ljava/util/Iterator;)#1
soot.BodyPack.internalApply(Lsoot/Body;)V#LocalStore(Ljava/lang/Object;,2)#2
soot.BodyPack.internalApply(Lsoot/Body;)V#Goto(27)#3
soot.BodyPack.internalApply(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,2)#27
soot.BodyPack.internalApply(Lsoot/Body;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#28
soot.BodyPack.internalApply(Lsoot/Body;)V#Constant(I,0)#29
soot.BodyPack.internalApply(Lsoot/Body;)V#ConditionalBranch(I,ne,4)#30
soot.BodyPack.internalApply(Lsoot/Body;)V#Return(V)#31
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#194
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/options/Options;,validate,()Z)#195
soot.options.Options.validate()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.validate()Z#Get(Z,NONSTATIC,Lsoot/options/Options;,validate)#1
soot.options.Options.validate()Z#Return(I)#2
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Constant(I,0)#196
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#ConditionalBranch(I,eq,200)#197
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#200
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Constant(Ljava/lang/String;,"jop")#201
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/PackManager;,getPack,(Ljava/lang/String;)Lsoot/Pack;)#202
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,13)#203
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/Pack;,apply,(Lsoot/Body;)V)#204
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#371
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jop")#372
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#373
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#374
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,378)#375
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:false ")#376
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#377
soot.Pack.apply(Lsoot/Body;)V#Return(V)#9
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#205
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Constant(Ljava/lang/String;,"jap")#206
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/PackManager;,getPack,(Ljava/lang/String;)Lsoot/Pack;)#207
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,13)#208
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/Pack;,apply,(Lsoot/Body;)V)#209
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#378
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jop.cse")#379
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#380
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#381
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,385)#382
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#385
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jop.bcm")#386
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#387
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#388
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,392)#389
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#392
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jop.lcm")#393
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#394
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#395
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,399)#396
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#399
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jop.cp")#400
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#401
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#402
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,406)#403
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#406
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jop.cpf")#407
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#408
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#409
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,413)#410
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#413
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jop.cbf")#414
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#415
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#416
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,420)#417
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#420
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jop.dae")#421
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#422
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#423
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,427)#424
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#427
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jop.nce")#428
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#429
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#430
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,434)#431
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#434
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jop.uce1")#435
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#436
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#437
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,441)#438
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#441
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jop.ubf1")#442
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#443
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#444
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,448)#445
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#448
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jop.uce2")#449
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#450
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#451
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,455)#452
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#455
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jop.ubf2")#456
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#457
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#458
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,462)#459
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#462
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jop.ule")#463
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#464
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#465
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,469)#466
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#469
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jap")#470
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#471
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#472
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,476)#473
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:true ")#474
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#475
soot.BodyPack.internalApply(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,2)#4
soot.BodyPack.internalApply(Lsoot/Body;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#5
soot.BodyPack.internalApply(Lsoot/Body;)V#CheckCast(Lsoot/Transform;)#6
soot.BodyPack.internalApply(Lsoot/Body;)V#LocalStore(Ljava/lang/Object;,3)#7
soot.BodyPack.internalApply(Lsoot/Body;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#8
soot.BodyPack.internalApply(Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/options/Options;,interactive_mode,()Z)#9
soot.BodyPack.internalApply(Lsoot/Body;)V#Constant(I,0)#10
soot.BodyPack.internalApply(Lsoot/Body;)V#ConditionalBranch(I,eq,16)#11
soot.BodyPack.internalApply(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,3)#16
soot.BodyPack.internalApply(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,1)#17
soot.BodyPack.internalApply(Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/Transform;,apply,(Lsoot/Body;)V)#18
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#476
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jap.npc")#477
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#478
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#479
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,483)#480
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:false only-array-ref:false profiling:false ")#481
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#482
soot.BodyPack.internalApply(Lsoot/Body;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#19
soot.BodyPack.internalApply(Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/options/Options;,interactive_mode,()Z)#20
soot.BodyPack.internalApply(Lsoot/Body;)V#Constant(I,0)#21
soot.BodyPack.internalApply(Lsoot/Body;)V#ConditionalBranch(I,eq,27)#22
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#483
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jap.npcolorer")#484
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#485
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#486
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,490)#487
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:false ")#488
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#489
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#490
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jap.abc")#491
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#492
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#493
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,497)#494
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:false with-all:false with-cse:false with-arrayref:false with-fieldref:false with-classfield:false with-rectarray:false profiling:false add-color-tags:false ")#495
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#496
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#497
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jap.profiling")#498
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#499
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#500
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,504)#501
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:false notmainentry:false ")#502
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#503
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#504
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jap.sea")#505
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#506
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#507
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,511)#508
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:false naive:false ")#509
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#510
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#511
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jap.fieldrw")#512
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#513
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#514
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,518)#515
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:false threshold:100 ")#516
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#517
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#518
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jap.cgtagger")#519
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#520
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#521
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,525)#522
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:false ")#523
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#524
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#525
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jap.parity")#526
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#527
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#528
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,532)#529
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:false ")#530
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#531
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#532
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jap.pat")#533
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#534
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#535
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,539)#536
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:false ")#537
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#538
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#539
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jap.lvtagger")#540
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#541
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#542
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,546)#543
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#546
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jap.rdtagger")#547
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#548
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#549
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,553)#550
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:false ")#551
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#552
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:false ")#544
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#545
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#553
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jap.che")#554
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#555
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#556
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,560)#557
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:false ")#558
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#559
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#560
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jap.umt")#561
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#562
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#563
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,567)#564
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:false ")#565
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#566
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#567
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jap.lit")#568
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#569
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#570
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,574)#571
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:false ")#572
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#573
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#574
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jap.aet")#575
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#576
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#577
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,581)#578
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:false kind:optimistic ")#579
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#580
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#581
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"jap.dmt")#582
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#583
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#584
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,588)#585
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:false ")#586
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#587
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#210
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/options/Options;,xml_attributes,()Z)#211
soot.options.Options.xml_attributes()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.xml_attributes()Z#Get(Z,NONSTATIC,Lsoot/options/Options;,xml_attributes)#1
soot.options.Options.xml_attributes()Z#Return(I)#2
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Constant(I,0)#212
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#ConditionalBranch(I,eq,221)#213
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalLoad(I,4)#221
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Constant(I,0)#222
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#ConditionalBranch(I,eq,238)#223
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalLoad(I,3)#238
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Constant(I,0)#239
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#ConditionalBranch(I,eq,267)#240
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,12)#241
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/baf/Baf;,v,()Lsoot/baf/Baf;)#242
soot.baf.Baf.v()Lsoot/baf/Baf;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.baf.Baf.v()Lsoot/baf/Baf;#Invoke(VIRTUAL,Lsoot/G;,soot_baf_Baf,()Lsoot/baf/Baf;)#1
soot.Singletons.soot_baf_Baf()Lsoot/baf/Baf;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_baf_Baf()Lsoot/baf/Baf;#Get(Lsoot/baf/Baf;,NONSTATIC,Lsoot/Singletons;,instance_soot_baf_Baf)#1
soot.Singletons.soot_baf_Baf()Lsoot/baf/Baf;#Constant(L;,null)#2
soot.Singletons.soot_baf_Baf()Lsoot/baf/Baf;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_baf_Baf()Lsoot/baf/Baf;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_baf_Baf()Lsoot/baf/Baf;#New(Lsoot/baf/Baf;,0)#5
soot.Singletons.soot_baf_Baf()Lsoot/baf/Baf;#Dup(1,0)#6
soot.Singletons.soot_baf_Baf()Lsoot/baf/Baf;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_baf_Baf()Lsoot/baf/Baf;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_baf_Baf()Lsoot/baf/Baf;#Invoke(SPECIAL,Lsoot/baf/Baf;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.baf.Baf.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.Baf.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.baf.Baf.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_baf_Baf()Lsoot/baf/Baf;#Put(Lsoot/baf/Baf;,NONSTATIC,Lsoot/Singletons;,instance_soot_baf_Baf)#10
soot.Singletons.soot_baf_Baf()Lsoot/baf/Baf;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_baf_Baf()Lsoot/baf/Baf;#Get(Lsoot/baf/Baf;,NONSTATIC,Lsoot/Singletons;,instance_soot_baf_Baf)#12
soot.Singletons.soot_baf_Baf()Lsoot/baf/Baf;#Return(Ljava/lang/Object;)#13
soot.baf.Baf.v()Lsoot/baf/Baf;#Return(Ljava/lang/Object;)#2
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,12)#243
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,getActiveBody,()Lsoot/Body;)#244
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#CheckCast(Lsoot/jimple/JimpleBody;)#245
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/baf/Baf;,newBody,(Lsoot/Body;)Lsoot/baf/BafBody;)#246
soot.baf.Baf.newBody(Lsoot/Body;)Lsoot/baf/BafBody;#New(Lsoot/baf/BafBody;,0)#0
soot.baf.Baf.newBody(Lsoot/Body;)Lsoot/baf/BafBody;#Dup(1,0)#1
soot.baf.Baf.newBody(Lsoot/Body;)Lsoot/baf/BafBody;#LocalLoad(Ljava/lang/Object;,1)#2
soot.baf.Baf.newBody(Lsoot/Body;)Lsoot/baf/BafBody;#New(Ljava/util/HashMap;,0)#3
soot.baf.Baf.newBody(Lsoot/Body;)Lsoot/baf/BafBody;#Dup(1,0)#4
soot.baf.Baf.newBody(Lsoot/Body;)Lsoot/baf/BafBody;#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#5
soot.baf.Baf.newBody(Lsoot/Body;)Lsoot/baf/BafBody;#Invoke(SPECIAL,Lsoot/baf/BafBody;,<init>,(Lsoot/Body;Ljava/util/Map;)V)#6
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Body;,getMethod,()Lsoot/SootMethod;)#2
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(SPECIAL,Lsoot/Body;,<init>,(Lsoot/SootMethod;)V)#3
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#4
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/Options;,verbose,()Z)#5
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Constant(I,0)#6
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#ConditionalBranch(I,eq,22)#7
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#22
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Instanceof(Lsoot/jimple/JimpleBody;)#23
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Constant(I,0)#24
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#ConditionalBranch(I,eq,30)#25
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#26
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#CheckCast(Lsoot/jimple/JimpleBody;)#27
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,3)#28
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Goto(35)#29
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#35
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/jimple/JimpleBody;,validate,()V)#36
soot.jimple.JimpleBody.validate()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.JimpleBody.validate()V#Invoke(SPECIAL,Lsoot/jimple/StmtBody;,validate,()V)#1
soot.Body.validate()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Body.validate()V#Invoke(VIRTUAL,Lsoot/Body;,validateLocals,()V)#1
soot.Body.validateLocals()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Body.validateLocals()V#Invoke(VIRTUAL,Lsoot/Body;,getUseBoxes,()Ljava/util/List;)#1
soot.Body.getUseBoxes()Ljava/util/List;#New(Ljava/util/ArrayList;,0)#0
soot.Body.getUseBoxes()Ljava/util/List;#Dup(1,0)#1
soot.Body.getUseBoxes()Ljava/util/List;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#2
soot.Body.getUseBoxes()Ljava/util/List;#LocalStore(Ljava/lang/Object;,1)#3
soot.Body.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Body.getUseBoxes()Ljava/util/List;#Get(Lsoot/PatchingChain;,NONSTATIC,Lsoot/Body;,unitChain)#5
soot.Body.getUseBoxes()Ljava/util/List;#Invoke(VIRTUAL,Lsoot/PatchingChain;,iterator,()Ljava/util/Iterator;)#6
soot.Body.getUseBoxes()Ljava/util/List;#LocalStore(Ljava/lang/Object;,2)#7
soot.Body.getUseBoxes()Ljava/util/List;#Goto(18)#8
soot.Body.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#18
soot.Body.getUseBoxes()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#19
soot.Body.getUseBoxes()Ljava/util/List;#Constant(I,0)#20
soot.Body.getUseBoxes()Ljava/util/List;#ConditionalBranch(I,ne,9)#21
soot.Body.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#9
soot.Body.getUseBoxes()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#10
soot.Body.getUseBoxes()Ljava/util/List;#CheckCast(Lsoot/Unit;)#11
soot.Body.getUseBoxes()Ljava/util/List;#LocalStore(Ljava/lang/Object;,3)#12
soot.Body.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#13
soot.Body.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#14
soot.Body.getUseBoxes()Ljava/util/List;#Invoke(INTERFACE,Lsoot/Unit;,getUseBoxes,()Ljava/util/List;)#15
soot.Body.getUseBoxes()Ljava/util/List;#Invoke(VIRTUAL,Ljava/util/ArrayList;,addAll,(Ljava/util/Collection;)Z)#16
soot.Body.getUseBoxes()Ljava/util/List;#Pop(1)#17
soot.Body.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#22
soot.Body.getUseBoxes()Ljava/util/List;#Return(Ljava/lang/Object;)#23
soot.Body.validateLocals()V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#2
soot.Body.validateLocals()V#LocalStore(Ljava/lang/Object;,1)#3
soot.Body.validateLocals()V#Goto(10)#4
soot.Body.validateLocals()V#LocalLoad(Ljava/lang/Object;,1)#10
soot.Body.validateLocals()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#11
soot.Body.validateLocals()V#Constant(I,0)#12
soot.Body.validateLocals()V#ConditionalBranch(I,ne,5)#13
soot.Body.validateLocals()V#LocalLoad(Ljava/lang/Object;,0)#5
soot.Body.validateLocals()V#LocalLoad(Ljava/lang/Object;,1)#6
soot.Body.validateLocals()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#7
soot.Body.validateLocals()V#CheckCast(Lsoot/ValueBox;)#8
soot.Body.validateLocals()V#Invoke(SPECIAL,Lsoot/Body;,validateLocal,(Lsoot/ValueBox;)V)#9
soot.Body.validateLocal(Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.Body.validateLocal(Lsoot/ValueBox;)V#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#1
soot.Body.validateLocal(Lsoot/ValueBox;)V#Dup(1,0)#2
soot.Body.validateLocal(Lsoot/ValueBox;)V#LocalStore(Ljava/lang/Object;,2)#3
soot.Body.validateLocal(Lsoot/ValueBox;)V#Instanceof(Lsoot/Local;)#4
soot.Body.validateLocal(Lsoot/ValueBox;)V#Constant(I,0)#5
soot.Body.validateLocal(Lsoot/ValueBox;)V#ConditionalBranch(I,eq,29)#6
soot.Body.validateLocal(Lsoot/ValueBox;)V#Return(V)#29
soot.Body.validateLocal(Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,0)#7
soot.Body.validateLocal(Lsoot/ValueBox;)V#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/Body;,localChain)#8
soot.Body.validateLocal(Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,2)#9
soot.Body.validateLocal(Lsoot/ValueBox;)V#Invoke(INTERFACE,Lsoot/util/Chain;,contains,(Ljava/lang/Object;)Z)#10
soot.Body.validateLocal(Lsoot/ValueBox;)V#Constant(I,0)#11
soot.Body.validateLocal(Lsoot/ValueBox;)V#ConditionalBranch(I,ne,29)#12
soot.Body.validateLocals()V#LocalLoad(Ljava/lang/Object;,0)#14
soot.Body.validateLocals()V#Invoke(VIRTUAL,Lsoot/Body;,getDefBoxes,()Ljava/util/List;)#15
soot.Body.getDefBoxes()Ljava/util/List;#New(Ljava/util/ArrayList;,0)#0
soot.Body.getDefBoxes()Ljava/util/List;#Dup(1,0)#1
soot.Body.getDefBoxes()Ljava/util/List;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#2
soot.Body.getDefBoxes()Ljava/util/List;#LocalStore(Ljava/lang/Object;,1)#3
soot.Body.getDefBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Body.getDefBoxes()Ljava/util/List;#Get(Lsoot/PatchingChain;,NONSTATIC,Lsoot/Body;,unitChain)#5
soot.Body.getDefBoxes()Ljava/util/List;#Invoke(VIRTUAL,Lsoot/PatchingChain;,iterator,()Ljava/util/Iterator;)#6
soot.Body.getDefBoxes()Ljava/util/List;#LocalStore(Ljava/lang/Object;,2)#7
soot.Body.getDefBoxes()Ljava/util/List;#Goto(18)#8
soot.Body.getDefBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#18
soot.Body.getDefBoxes()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#19
soot.Body.getDefBoxes()Ljava/util/List;#Constant(I,0)#20
soot.Body.getDefBoxes()Ljava/util/List;#ConditionalBranch(I,ne,9)#21
soot.Body.getDefBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#9
soot.Body.getDefBoxes()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#10
soot.Body.getDefBoxes()Ljava/util/List;#CheckCast(Lsoot/Unit;)#11
soot.Body.getDefBoxes()Ljava/util/List;#LocalStore(Ljava/lang/Object;,3)#12
soot.Body.getDefBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#13
soot.Body.getDefBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#14
soot.Body.getDefBoxes()Ljava/util/List;#Invoke(INTERFACE,Lsoot/Unit;,getDefBoxes,()Ljava/util/List;)#15
soot.Body.getDefBoxes()Ljava/util/List;#Invoke(VIRTUAL,Ljava/util/ArrayList;,addAll,(Ljava/util/Collection;)Z)#16
soot.Body.getDefBoxes()Ljava/util/List;#Pop(1)#17
soot.Body.getDefBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#22
soot.Body.getDefBoxes()Ljava/util/List;#Return(Ljava/lang/Object;)#23
soot.Body.validateLocals()V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#16
soot.Body.validateLocals()V#LocalStore(Ljava/lang/Object;,1)#17
soot.Body.validateLocals()V#Goto(24)#18
soot.Body.validateLocals()V#LocalLoad(Ljava/lang/Object;,1)#24
soot.Body.validateLocals()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#25
soot.Body.validateLocals()V#Constant(I,0)#26
soot.Body.validateLocals()V#ConditionalBranch(I,ne,19)#27
soot.Body.validateLocals()V#LocalLoad(Ljava/lang/Object;,0)#19
soot.Body.validateLocals()V#LocalLoad(Ljava/lang/Object;,1)#20
soot.Body.validateLocals()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#21
soot.Body.validateLocals()V#CheckCast(Lsoot/ValueBox;)#22
soot.Body.validateLocals()V#Invoke(SPECIAL,Lsoot/Body;,validateLocal,(Lsoot/ValueBox;)V)#23
soot.Body.validateLocals()V#Return(V)#28
soot.Body.validate()V#LocalLoad(Ljava/lang/Object;,0)#2
soot.Body.validate()V#Invoke(VIRTUAL,Lsoot/Body;,validateTraps,()V)#3
soot.Body.validateTraps()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Body.validateTraps()V#Invoke(VIRTUAL,Lsoot/Body;,getTraps,()Lsoot/util/Chain;)#1
soot.Body.validateTraps()V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#2
soot.Body.validateTraps()V#LocalStore(Ljava/lang/Object;,1)#3
soot.Body.validateTraps()V#Goto(66)#4
soot.Body.validateTraps()V#LocalLoad(Ljava/lang/Object;,1)#66
soot.Body.validateTraps()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#67
soot.Body.validateTraps()V#Constant(I,0)#68
soot.Body.validateTraps()V#ConditionalBranch(I,ne,5)#69
soot.Body.validateTraps()V#Return(V)#70
soot.Body.validate()V#LocalLoad(Ljava/lang/Object;,0)#4
soot.Body.validate()V#Invoke(VIRTUAL,Lsoot/Body;,validateUnitBoxes,()V)#5
soot.Body.validateUnitBoxes()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.Body.validateUnitBoxes()V#Invoke(VIRTUAL,Lsoot/Body;,getAllUnitBoxes,()Ljava/util/List;)#1
soot.Body.getAllUnitBoxes()Ljava/util/List;#New(Ljava/util/ArrayList;,0)#0
soot.Body.getAllUnitBoxes()Ljava/util/List;#Dup(1,0)#1
soot.Body.getAllUnitBoxes()Ljava/util/List;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#2
soot.Body.getAllUnitBoxes()Ljava/util/List;#LocalStore(Ljava/lang/Object;,1)#3
soot.Body.getAllUnitBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Body.getAllUnitBoxes()Ljava/util/List;#Get(Lsoot/PatchingChain;,NONSTATIC,Lsoot/Body;,unitChain)#5
soot.Body.getAllUnitBoxes()Ljava/util/List;#Invoke(VIRTUAL,Lsoot/PatchingChain;,iterator,()Ljava/util/Iterator;)#6
soot.Body.getAllUnitBoxes()Ljava/util/List;#LocalStore(Ljava/lang/Object;,2)#7
soot.Body.getAllUnitBoxes()Ljava/util/List;#Goto(18)#8
soot.Body.getAllUnitBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#18
soot.Body.getAllUnitBoxes()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#19
soot.Body.getAllUnitBoxes()Ljava/util/List;#Constant(I,0)#20
soot.Body.getAllUnitBoxes()Ljava/util/List;#ConditionalBranch(I,ne,9)#21
soot.Body.getAllUnitBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#9
soot.Body.getAllUnitBoxes()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#10
soot.Body.getAllUnitBoxes()Ljava/util/List;#CheckCast(Lsoot/Unit;)#11
soot.Body.getAllUnitBoxes()Ljava/util/List;#LocalStore(Ljava/lang/Object;,3)#12
soot.Body.getAllUnitBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#13
soot.Body.getAllUnitBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#14
soot.Body.getAllUnitBoxes()Ljava/util/List;#Invoke(INTERFACE,Lsoot/Unit;,getUnitBoxes,()Ljava/util/List;)#15
soot.AbstractUnit.getUnitBoxes()Ljava/util/List;#Get(Ljava/util/List;,STATIC,Lsoot/AbstractUnit;,emptyList)#0
soot.AbstractUnit.getUnitBoxes()Ljava/util/List;#Return(Ljava/lang/Object;)#1
soot.Body.getAllUnitBoxes()Ljava/util/List;#Invoke(VIRTUAL,Ljava/util/ArrayList;,addAll,(Ljava/util/Collection;)Z)#16
soot.Body.getAllUnitBoxes()Ljava/util/List;#Pop(1)#17
soot.Body.getAllUnitBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#22
soot.Body.getAllUnitBoxes()Ljava/util/List;#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/Body;,trapChain)#23
soot.Body.getAllUnitBoxes()Ljava/util/List;#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#24
soot.Body.getAllUnitBoxes()Ljava/util/List;#LocalStore(Ljava/lang/Object;,2)#25
soot.Body.getAllUnitBoxes()Ljava/util/List;#Goto(36)#26
soot.Body.getAllUnitBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#36
soot.Body.getAllUnitBoxes()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#37
soot.Body.getAllUnitBoxes()Ljava/util/List;#Constant(I,0)#38
soot.Body.getAllUnitBoxes()Ljava/util/List;#ConditionalBranch(I,ne,27)#39
soot.Body.getAllUnitBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#40
soot.Body.getAllUnitBoxes()Ljava/util/List;#Invoke(VIRTUAL,Lsoot/Body;,getTags,()Ljava/util/List;)#41
soot.tagkit.AbstractHost.getTags()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.tagkit.AbstractHost.getTags()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lsoot/tagkit/AbstractHost;,mTagList)#1
soot.tagkit.AbstractHost.getTags()Ljava/util/List;#Return(Ljava/lang/Object;)#2
soot.Body.getAllUnitBoxes()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#42
soot.Body.getAllUnitBoxes()Ljava/util/List;#LocalStore(Ljava/lang/Object;,2)#43
soot.Body.getAllUnitBoxes()Ljava/util/List;#Goto(59)#44
soot.Body.getAllUnitBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#59
soot.Body.getAllUnitBoxes()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#60
soot.Body.getAllUnitBoxes()Ljava/util/List;#Constant(I,0)#61
soot.Body.getAllUnitBoxes()Ljava/util/List;#ConditionalBranch(I,ne,45)#62
soot.Body.getAllUnitBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#63
soot.Body.getAllUnitBoxes()Ljava/util/List;#Return(Ljava/lang/Object;)#64
soot.Body.validateUnitBoxes()V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#2
soot.Body.validateUnitBoxes()V#LocalStore(Ljava/lang/Object;,1)#3
soot.Body.validateUnitBoxes()V#Goto(33)#4
soot.Body.validateUnitBoxes()V#LocalLoad(Ljava/lang/Object;,1)#33
soot.Body.validateUnitBoxes()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#34
soot.Body.validateUnitBoxes()V#Constant(I,0)#35
soot.Body.validateUnitBoxes()V#ConditionalBranch(I,ne,5)#36
soot.Body.validateUnitBoxes()V#Return(V)#37
soot.Body.validate()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#6
soot.Body.validate()V#Invoke(VIRTUAL,Lsoot/options/Options;,debug,()Z)#7
soot.options.Options.debug()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.debug()Z#Get(Z,NONSTATIC,Lsoot/options/Options;,debug)#1
soot.options.Options.debug()Z#Return(I)#2
soot.Body.validate()V#Constant(I,0)#8
soot.Body.validate()V#ConditionalBranch(I,ne,14)#9
soot.Body.validate()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#10
soot.Body.validate()V#Invoke(VIRTUAL,Lsoot/options/Options;,validate,()Z)#11
soot.Body.validate()V#Constant(I,0)#12
soot.Body.validate()V#ConditionalBranch(I,eq,24)#13
soot.Body.validate()V#Return(V)#24
soot.jimple.JimpleBody.validate()V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.JimpleBody.validate()V#Invoke(VIRTUAL,Lsoot/jimple/JimpleBody;,validateIdentityStatements,()V)#3
soot.jimple.JimpleBody.validateIdentityStatements()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.JimpleBody.validateIdentityStatements()V#Get(Lsoot/SootMethod;,NONSTATIC,Lsoot/jimple/JimpleBody;,method)#1
soot.jimple.JimpleBody.validateIdentityStatements()V#Invoke(VIRTUAL,Lsoot/SootMethod;,isAbstract,()Z)#2
soot.jimple.JimpleBody.validateIdentityStatements()V#Constant(I,0)#3
soot.jimple.JimpleBody.validateIdentityStatements()V#ConditionalBranch(I,eq,6)#4
soot.jimple.JimpleBody.validateIdentityStatements()V#LocalLoad(Ljava/lang/Object;,0)#6
soot.jimple.JimpleBody.validateIdentityStatements()V#Get(Lsoot/SootMethod;,NONSTATIC,Lsoot/jimple/JimpleBody;,method)#7
soot.jimple.JimpleBody.validateIdentityStatements()V#Invoke(VIRTUAL,Lsoot/SootMethod;,getActiveBody,()Lsoot/Body;)#8
soot.jimple.JimpleBody.validateIdentityStatements()V#LocalStore(Ljava/lang/Object;,1)#9
soot.jimple.JimpleBody.validateIdentityStatements()V#LocalLoad(Ljava/lang/Object;,1)#10
soot.jimple.JimpleBody.validateIdentityStatements()V#Invoke(VIRTUAL,Lsoot/Body;,getUnits,()Lsoot/PatchingChain;)#11
soot.jimple.JimpleBody.validateIdentityStatements()V#Invoke(VIRTUAL,Lsoot/PatchingChain;,getNonPatchingChain,()Lsoot/util/Chain;)#12
soot.PatchingChain.getNonPatchingChain()Lsoot/util/Chain;#LocalLoad(Ljava/lang/Object;,0)#0
soot.PatchingChain.getNonPatchingChain()Lsoot/util/Chain;#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/PatchingChain;,innerChain)#1
soot.PatchingChain.getNonPatchingChain()Lsoot/util/Chain;#Return(Ljava/lang/Object;)#2
soot.jimple.JimpleBody.validateIdentityStatements()V#LocalStore(Ljava/lang/Object;,2)#13
soot.jimple.JimpleBody.validateIdentityStatements()V#Constant(I,0)#14
soot.jimple.JimpleBody.validateIdentityStatements()V#LocalStore(I,3)#15
soot.jimple.JimpleBody.validateIdentityStatements()V#Constant(I,1)#16
soot.jimple.JimpleBody.validateIdentityStatements()V#LocalStore(I,4)#17
soot.jimple.JimpleBody.validateIdentityStatements()V#LocalLoad(Ljava/lang/Object;,2)#18
soot.jimple.JimpleBody.validateIdentityStatements()V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#19
soot.jimple.JimpleBody.validateIdentityStatements()V#LocalStore(Ljava/lang/Object;,6)#20
soot.jimple.JimpleBody.validateIdentityStatements()V#Goto(76)#21
soot.jimple.JimpleBody.validateIdentityStatements()V#LocalLoad(Ljava/lang/Object;,6)#76
soot.jimple.JimpleBody.validateIdentityStatements()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#77
soot.jimple.JimpleBody.validateIdentityStatements()V#Constant(I,0)#78
soot.jimple.JimpleBody.validateIdentityStatements()V#ConditionalBranch(I,ne,22)#79
soot.jimple.JimpleBody.validateIdentityStatements()V#LocalLoad(Ljava/lang/Object;,6)#22
soot.jimple.JimpleBody.validateIdentityStatements()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#23
soot.jimple.JimpleBody.validateIdentityStatements()V#CheckCast(Lsoot/Unit;)#24
soot.jimple.JimpleBody.validateIdentityStatements()V#LocalStore(Ljava/lang/Object;,5)#25
soot.jimple.JimpleBody.validateIdentityStatements()V#LocalLoad(Ljava/lang/Object;,5)#26
soot.jimple.JimpleBody.validateIdentityStatements()V#Instanceof(Lsoot/jimple/IdentityStmt;)#27
soot.jimple.JimpleBody.validateIdentityStatements()V#Constant(I,0)#28
soot.jimple.JimpleBody.validateIdentityStatements()V#ConditionalBranch(I,eq,72)#29
soot.jimple.JimpleBody.validateIdentityStatements()V#LocalLoad(Ljava/lang/Object;,5)#30
soot.jimple.JimpleBody.validateIdentityStatements()V#CheckCast(Lsoot/jimple/IdentityStmt;)#31
soot.jimple.JimpleBody.validateIdentityStatements()V#LocalStore(Ljava/lang/Object;,7)#32
soot.jimple.JimpleBody.validateIdentityStatements()V#LocalLoad(Ljava/lang/Object;,7)#33
soot.jimple.JimpleBody.validateIdentityStatements()V#Invoke(INTERFACE,Lsoot/jimple/IdentityStmt;,getRightOp,()Lsoot/Value;)#34
soot.jimple.JimpleBody.validateIdentityStatements()V#Instanceof(Lsoot/jimple/ThisRef;)#35
soot.jimple.JimpleBody.validateIdentityStatements()V#Constant(I,0)#36
soot.jimple.JimpleBody.validateIdentityStatements()V#ConditionalBranch(I,eq,56)#37
soot.jimple.JimpleBody.validateIdentityStatements()V#LocalLoad(Ljava/lang/Object;,0)#38
soot.jimple.JimpleBody.validateIdentityStatements()V#Get(Lsoot/SootMethod;,NONSTATIC,Lsoot/jimple/JimpleBody;,method)#39
soot.jimple.JimpleBody.validateIdentityStatements()V#Invoke(VIRTUAL,Lsoot/SootMethod;,isStatic,()Z)#40
soot.SootMethod.isStatic()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethod.isStatic()Z#Invoke(VIRTUAL,Lsoot/SootMethod;,getModifiers,()I)#1
soot.SootMethod.isStatic()Z#Invoke(STATIC,Lsoot/Modifier;,isStatic,(I)Z)#2
soot.SootMethod.isStatic()Z#Return(I)#3
soot.jimple.JimpleBody.validateIdentityStatements()V#Constant(I,0)#41
soot.jimple.JimpleBody.validateIdentityStatements()V#ConditionalBranch(I,eq,48)#42
soot.jimple.JimpleBody.validateIdentityStatements()V#LocalLoad(I,4)#48
soot.jimple.JimpleBody.validateIdentityStatements()V#Constant(I,0)#49
soot.jimple.JimpleBody.validateIdentityStatements()V#ConditionalBranch(I,ne,74)#50
soot.jimple.JimpleBody.validateIdentityStatements()V#Constant(I,0)#74
soot.jimple.JimpleBody.validateIdentityStatements()V#LocalStore(I,4)#75
soot.jimple.JimpleBody.validateIdentityStatements()V#Constant(I,1)#72
soot.jimple.JimpleBody.validateIdentityStatements()V#LocalStore(I,3)#73
soot.jimple.JimpleBody.validateIdentityStatements()V#Return(V)#80
soot.jimple.JimpleBody.validate()V#Return(V)#4
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#New(Lsoot/jimple/JimpleToBafContext;,0)#37
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Dup(1,0)#38
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#39
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/jimple/JimpleBody;,getLocalCount,()I)#40
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(SPECIAL,Lsoot/jimple/JimpleToBafContext;,<init>,(I)V)#41
soot.jimple.JimpleToBafContext.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.JimpleToBafContext.<init>(I)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.jimple.JimpleToBafContext.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.JimpleToBafContext.<init>(I)V#New(Ljava/util/HashMap;,0)#3
soot.jimple.JimpleToBafContext.<init>(I)V#Dup(1,0)#4
soot.jimple.JimpleToBafContext.<init>(I)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#5
soot.jimple.JimpleToBafContext.<init>(I)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/jimple/JimpleToBafContext;,jimpleLocalToBafLocal)#6
soot.jimple.JimpleToBafContext.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#7
soot.jimple.JimpleToBafContext.<init>(I)V#New(Ljava/util/HashMap;,0)#8
soot.jimple.JimpleToBafContext.<init>(I)V#Dup(1,0)#9
soot.jimple.JimpleToBafContext.<init>(I)V#LocalLoad(I,1)#10
soot.jimple.JimpleToBafContext.<init>(I)V#Constant(I,2)#11
soot.jimple.JimpleToBafContext.<init>(I)V#BinaryOp(I,mul)#12
soot.jimple.JimpleToBafContext.<init>(I)V#Constant(I,1)#13
soot.jimple.JimpleToBafContext.<init>(I)V#BinaryOp(I,add)#14
soot.jimple.JimpleToBafContext.<init>(I)V#Constant(F,0.7)#15
soot.jimple.JimpleToBafContext.<init>(I)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(IF)V)#16
soot.jimple.JimpleToBafContext.<init>(I)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/jimple/JimpleToBafContext;,jimpleLocalToBafLocal)#17
soot.jimple.JimpleToBafContext.<init>(I)V#Return(V)#18
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,4)#42
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#43
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/jimple/JimpleBody;,getLocals,()Lsoot/util/Chain;)#44
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#45
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,5)#46
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Goto(87)#47
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#87
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#88
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Constant(I,0)#89
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#ConditionalBranch(I,ne,48)#90
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#48
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#49
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#CheckCast(Lsoot/Local;)#50
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,6)#51
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#52
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Local;,getType,()Lsoot/Type;)#53
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,7)#54
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/baf/Baf;,v,()Lsoot/baf/Baf;)#55
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#56
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Local;,getName,()Ljava/lang/String;)#57
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/UnknownType;,v,()Lsoot/UnknownType;)#58
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/baf/Baf;,newLocal,(Ljava/lang/String;Lsoot/Type;)Lsoot/Local;)#59
soot.baf.Baf.newLocal(Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#New(Lsoot/baf/internal/BafLocal;,0)#0
soot.baf.Baf.newLocal(Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#Dup(1,0)#1
soot.baf.Baf.newLocal(Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,1)#2
soot.baf.Baf.newLocal(Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,2)#3
soot.baf.Baf.newLocal(Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#Invoke(SPECIAL,Lsoot/baf/internal/BafLocal;,<init>,(Ljava/lang/String;Lsoot/Type;)V)#4
soot.baf.internal.BafLocal.<init>(Ljava/lang/String;Lsoot/Type;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BafLocal.<init>(Ljava/lang/String;Lsoot/Type;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.baf.internal.BafLocal.<init>(Ljava/lang/String;Lsoot/Type;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.baf.internal.BafLocal.<init>(Ljava/lang/String;Lsoot/Type;)V#Constant(I,0)#3
soot.baf.internal.BafLocal.<init>(Ljava/lang/String;Lsoot/Type;)V#Put(I,NONSTATIC,Lsoot/baf/internal/BafLocal;,number)#4
soot.baf.internal.BafLocal.<init>(Ljava/lang/String;Lsoot/Type;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.baf.internal.BafLocal.<init>(Ljava/lang/String;Lsoot/Type;)V#LocalLoad(Ljava/lang/Object;,1)#6
soot.baf.internal.BafLocal.<init>(Ljava/lang/String;Lsoot/Type;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/baf/internal/BafLocal;,name)#7
soot.baf.internal.BafLocal.<init>(Ljava/lang/String;Lsoot/Type;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.baf.internal.BafLocal.<init>(Ljava/lang/String;Lsoot/Type;)V#LocalLoad(Ljava/lang/Object;,2)#9
soot.baf.internal.BafLocal.<init>(Ljava/lang/String;Lsoot/Type;)V#Put(Lsoot/Type;,NONSTATIC,Lsoot/baf/internal/BafLocal;,type)#10
soot.baf.internal.BafLocal.<init>(Ljava/lang/String;Lsoot/Type;)V#Return(V)#11
soot.baf.Baf.newLocal(Ljava/lang/String;Lsoot/Type;)Lsoot/Local;#Return(Ljava/lang/Object;)#5
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,8)#60
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#61
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/DoubleType;,v,()Lsoot/DoubleType;)#62
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#63
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Constant(I,0)#64
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#ConditionalBranch(I,ne,71)#65
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#66
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/LongType;,v,()Lsoot/LongType;)#67
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#68
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Constant(I,0)#69
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#ConditionalBranch(I,eq,75)#70
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#75
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/baf/WordType;,v,()Lsoot/baf/WordType;)#76
soot.baf.WordType.v()Lsoot/baf/WordType;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.baf.WordType.v()Lsoot/baf/WordType;#Invoke(VIRTUAL,Lsoot/G;,soot_baf_WordType,()Lsoot/baf/WordType;)#1
soot.Singletons.soot_baf_WordType()Lsoot/baf/WordType;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_baf_WordType()Lsoot/baf/WordType;#Get(Lsoot/baf/WordType;,NONSTATIC,Lsoot/Singletons;,instance_soot_baf_WordType)#1
soot.Singletons.soot_baf_WordType()Lsoot/baf/WordType;#Constant(L;,null)#2
soot.Singletons.soot_baf_WordType()Lsoot/baf/WordType;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_baf_WordType()Lsoot/baf/WordType;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_baf_WordType()Lsoot/baf/WordType;#New(Lsoot/baf/WordType;,0)#5
soot.Singletons.soot_baf_WordType()Lsoot/baf/WordType;#Dup(1,0)#6
soot.Singletons.soot_baf_WordType()Lsoot/baf/WordType;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_baf_WordType()Lsoot/baf/WordType;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_baf_WordType()Lsoot/baf/WordType;#Invoke(SPECIAL,Lsoot/baf/WordType;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.baf.WordType.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.WordType.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/Type;,<init>,()V)#1
soot.baf.WordType.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_baf_WordType()Lsoot/baf/WordType;#Put(Lsoot/baf/WordType;,NONSTATIC,Lsoot/Singletons;,instance_soot_baf_WordType)#10
soot.Singletons.soot_baf_WordType()Lsoot/baf/WordType;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_baf_WordType()Lsoot/baf/WordType;#Get(Lsoot/baf/WordType;,NONSTATIC,Lsoot/Singletons;,instance_soot_baf_WordType)#12
soot.Singletons.soot_baf_WordType()Lsoot/baf/WordType;#Return(Ljava/lang/Object;)#13
soot.baf.WordType.v()Lsoot/baf/WordType;#Return(Ljava/lang/Object;)#2
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Local;,setType,(Lsoot/Type;)V)#77
soot.baf.internal.BafLocal.setType(Lsoot/Type;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BafLocal.setType(Lsoot/Type;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.baf.internal.BafLocal.setType(Lsoot/Type;)V#Put(Lsoot/Type;,NONSTATIC,Lsoot/baf/internal/BafLocal;,type)#2
soot.baf.internal.BafLocal.setType(Lsoot/Type;)V#Return(V)#3
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#78
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#79
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#80
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/jimple/JimpleToBafContext;,setBafLocalOfJimpleLocal,(Lsoot/Local;Lsoot/Local;)V)#81
soot.jimple.JimpleToBafContext.setBafLocalOfJimpleLocal(Lsoot/Local;Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.JimpleToBafContext.setBafLocalOfJimpleLocal(Lsoot/Local;Lsoot/Local;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/jimple/JimpleToBafContext;,jimpleLocalToBafLocal)#1
soot.jimple.JimpleToBafContext.setBafLocalOfJimpleLocal(Lsoot/Local;Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.JimpleToBafContext.setBafLocalOfJimpleLocal(Lsoot/Local;Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,2)#3
soot.jimple.JimpleToBafContext.setBafLocalOfJimpleLocal(Lsoot/Local;Lsoot/Local;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#4
soot.jimple.JimpleToBafContext.setBafLocalOfJimpleLocal(Lsoot/Local;Lsoot/Local;)V#Pop(1)#5
soot.jimple.JimpleToBafContext.setBafLocalOfJimpleLocal(Lsoot/Local;Lsoot/Local;)V#Return(V)#6
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#82
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/baf/BafBody;,getLocals,()Lsoot/util/Chain;)#83
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#84
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/util/Chain;,add,(Ljava/lang/Object;)Z)#85
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Pop(1)#86
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#New(Ljava/util/HashMap;,0)#91
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Dup(1,0)#92
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#93
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,5)#94
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#95
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/jimple/JimpleBody;,getUnits,()Lsoot/PatchingChain;)#96
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/PatchingChain;,iterator,()Ljava/util/Iterator;)#97
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,6)#98
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Goto(129)#99
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#129
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#130
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Constant(I,0)#131
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#ConditionalBranch(I,ne,100)#132
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#100
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#101
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#CheckCast(Lsoot/jimple/Stmt;)#102
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,7)#103
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#New(Ljava/util/ArrayList;,0)#104
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Dup(1,0)#105
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#106
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,8)#107
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#108
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#109
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/jimple/JimpleToBafContext;,setCurrentUnit,(Lsoot/Unit;)V)#110
soot.jimple.JimpleToBafContext.setCurrentUnit(Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.JimpleToBafContext.setCurrentUnit(Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.jimple.JimpleToBafContext.setCurrentUnit(Lsoot/Unit;)V#Put(Lsoot/Unit;,NONSTATIC,Lsoot/jimple/JimpleToBafContext;,mCurrentUnit)#2
soot.jimple.JimpleToBafContext.setCurrentUnit(Lsoot/Unit;)V#Return(V)#3
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#111
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#CheckCast(Lsoot/jimple/ConvertToBaf;)#112
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#113
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#114
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/jimple/ConvertToBaf;,convertToBaf,(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V)#115
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/jimple/internal/JIdentityStmt;,getRightOp,()Lsoot/Value;)#1
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,3)#2
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#3
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Instanceof(Lsoot/jimple/ThisRef;)#4
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Constant(I,0)#5
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#ConditionalBranch(I,eq,15)#6
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(STATIC,Lsoot/baf/Baf;,v,()Lsoot/baf/Baf;)#7
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#8
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#CheckCast(Lsoot/jimple/ThisRef;)#9
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/jimple/ThisRef;,getType,()Lsoot/Type;)#10
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#CheckCast(Lsoot/RefType;)#11
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/baf/Baf;,newThisRef,(Lsoot/RefType;)Lsoot/jimple/ThisRef;)#12
soot.baf.Baf.newThisRef(Lsoot/RefType;)Lsoot/jimple/ThisRef;#New(Lsoot/jimple/ThisRef;,0)#0
soot.baf.Baf.newThisRef(Lsoot/RefType;)Lsoot/jimple/ThisRef;#Dup(1,0)#1
soot.baf.Baf.newThisRef(Lsoot/RefType;)Lsoot/jimple/ThisRef;#LocalLoad(Ljava/lang/Object;,1)#2
soot.baf.Baf.newThisRef(Lsoot/RefType;)Lsoot/jimple/ThisRef;#Invoke(SPECIAL,Lsoot/jimple/ThisRef;,<init>,(Lsoot/RefType;)V)#3
soot.baf.Baf.newThisRef(Lsoot/RefType;)Lsoot/jimple/ThisRef;#Return(Ljava/lang/Object;)#4
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,4)#13
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Goto(66)#14
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(STATIC,Lsoot/baf/Baf;,v,()Lsoot/baf/Baf;)#66
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#67
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#68
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/jimple/internal/JIdentityStmt;,getLeftOp,()Lsoot/Value;)#69
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#CheckCast(Lsoot/Local;)#70
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/jimple/JimpleToBafContext;,getBafLocalOfJimpleLocal,(Lsoot/Local;)Lsoot/Local;)#71
soot.jimple.JimpleToBafContext.getBafLocalOfJimpleLocal(Lsoot/Local;)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.JimpleToBafContext.getBafLocalOfJimpleLocal(Lsoot/Local;)Lsoot/Local;#Get(Ljava/util/Map;,NONSTATIC,Lsoot/jimple/JimpleToBafContext;,jimpleLocalToBafLocal)#1
soot.jimple.JimpleToBafContext.getBafLocalOfJimpleLocal(Lsoot/Local;)Lsoot/Local;#LocalLoad(Ljava/lang/Object;,1)#2
soot.jimple.JimpleToBafContext.getBafLocalOfJimpleLocal(Lsoot/Local;)Lsoot/Local;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
soot.jimple.JimpleToBafContext.getBafLocalOfJimpleLocal(Lsoot/Local;)Lsoot/Local;#CheckCast(Lsoot/Local;)#4
soot.jimple.JimpleToBafContext.getBafLocalOfJimpleLocal(Lsoot/Local;)Lsoot/Local;#Return(Ljava/lang/Object;)#5
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,4)#72
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/baf/Baf;,newIdentityInst,(Lsoot/Value;Lsoot/Value;)Lsoot/baf/IdentityInst;)#73
soot.baf.Baf.newIdentityInst(Lsoot/Value;Lsoot/Value;)Lsoot/baf/IdentityInst;#New(Lsoot/baf/internal/BIdentityInst;,0)#0
soot.baf.Baf.newIdentityInst(Lsoot/Value;Lsoot/Value;)Lsoot/baf/IdentityInst;#Dup(1,0)#1
soot.baf.Baf.newIdentityInst(Lsoot/Value;Lsoot/Value;)Lsoot/baf/IdentityInst;#LocalLoad(Ljava/lang/Object;,1)#2
soot.baf.Baf.newIdentityInst(Lsoot/Value;Lsoot/Value;)Lsoot/baf/IdentityInst;#LocalLoad(Ljava/lang/Object;,2)#3
soot.baf.Baf.newIdentityInst(Lsoot/Value;Lsoot/Value;)Lsoot/baf/IdentityInst;#Invoke(SPECIAL,Lsoot/baf/internal/BIdentityInst;,<init>,(Lsoot/Value;Lsoot/Value;)V)#4
soot.baf.internal.BIdentityInst.<init>(Lsoot/Value;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BIdentityInst.<init>(Lsoot/Value;Lsoot/Value;)V#Invoke(STATIC,Lsoot/baf/Baf;,v,()Lsoot/baf/Baf;)#1
soot.baf.internal.BIdentityInst.<init>(Lsoot/Value;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.baf.internal.BIdentityInst.<init>(Lsoot/Value;Lsoot/Value;)V#Invoke(VIRTUAL,Lsoot/baf/Baf;,newLocalBox,(Lsoot/Value;)Lsoot/ValueBox;)#3
soot.baf.Baf.newLocalBox(Lsoot/Value;)Lsoot/ValueBox;#New(Lsoot/baf/internal/BafLocalBox;,0)#0
soot.baf.Baf.newLocalBox(Lsoot/Value;)Lsoot/ValueBox;#Dup(1,0)#1
soot.baf.Baf.newLocalBox(Lsoot/Value;)Lsoot/ValueBox;#LocalLoad(Ljava/lang/Object;,1)#2
soot.baf.Baf.newLocalBox(Lsoot/Value;)Lsoot/ValueBox;#Invoke(SPECIAL,Lsoot/baf/internal/BafLocalBox;,<init>,(Lsoot/Value;)V)#3
soot.baf.internal.BafLocalBox.<init>(Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BafLocalBox.<init>(Lsoot/Value;)V#Invoke(SPECIAL,Lsoot/AbstractValueBox;,<init>,()V)#1
soot.baf.internal.BafLocalBox.<init>(Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.baf.internal.BafLocalBox.<init>(Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.baf.internal.BafLocalBox.<init>(Lsoot/Value;)V#Invoke(VIRTUAL,Lsoot/baf/internal/BafLocalBox;,setValue,(Lsoot/Value;)V)#4
soot.baf.internal.BafLocalBox.canContainValue(Lsoot/Value;)Z#LocalLoad(Ljava/lang/Object;,1)#0
soot.baf.internal.BafLocalBox.canContainValue(Lsoot/Value;)Z#Instanceof(Lsoot/baf/internal/BafLocal;)#1
soot.baf.internal.BafLocalBox.canContainValue(Lsoot/Value;)Z#Return(I)#2
soot.baf.internal.BafLocalBox.<init>(Lsoot/Value;)V#Return(V)#5
soot.baf.Baf.newLocalBox(Lsoot/Value;)Lsoot/ValueBox;#Return(Ljava/lang/Object;)#4
soot.baf.internal.BIdentityInst.<init>(Lsoot/Value;Lsoot/Value;)V#Invoke(STATIC,Lsoot/baf/Baf;,v,()Lsoot/baf/Baf;)#4
soot.baf.internal.BIdentityInst.<init>(Lsoot/Value;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,2)#5
soot.baf.internal.BIdentityInst.<init>(Lsoot/Value;Lsoot/Value;)V#Invoke(VIRTUAL,Lsoot/baf/Baf;,newIdentityRefBox,(Lsoot/Value;)Lsoot/ValueBox;)#6
soot.baf.Baf.newIdentityRefBox(Lsoot/Value;)Lsoot/ValueBox;#New(Lsoot/jimple/internal/IdentityRefBox;,0)#0
soot.baf.Baf.newIdentityRefBox(Lsoot/Value;)Lsoot/ValueBox;#Dup(1,0)#1
soot.baf.Baf.newIdentityRefBox(Lsoot/Value;)Lsoot/ValueBox;#LocalLoad(Ljava/lang/Object;,1)#2
soot.baf.Baf.newIdentityRefBox(Lsoot/Value;)Lsoot/ValueBox;#Invoke(SPECIAL,Lsoot/jimple/internal/IdentityRefBox;,<init>,(Lsoot/Value;)V)#3
soot.baf.Baf.newIdentityRefBox(Lsoot/Value;)Lsoot/ValueBox;#Return(Ljava/lang/Object;)#4
soot.baf.internal.BIdentityInst.<init>(Lsoot/Value;Lsoot/Value;)V#Invoke(SPECIAL,Lsoot/baf/internal/BIdentityInst;,<init>,(Lsoot/ValueBox;Lsoot/ValueBox;)V)#7
soot.baf.internal.BIdentityInst.<init>(Lsoot/ValueBox;Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BIdentityInst.<init>(Lsoot/ValueBox;Lsoot/ValueBox;)V#Invoke(SPECIAL,Lsoot/baf/internal/AbstractInst;,<init>,()V)#1
soot.baf.internal.AbstractInst.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.AbstractInst.<init>()V#Invoke(SPECIAL,Lsoot/AbstractUnit;,<init>,()V)#1
soot.baf.internal.AbstractInst.<init>()V#Return(V)#2
soot.baf.internal.BIdentityInst.<init>(Lsoot/ValueBox;Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.baf.internal.BIdentityInst.<init>(Lsoot/ValueBox;Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.baf.internal.BIdentityInst.<init>(Lsoot/ValueBox;Lsoot/ValueBox;)V#Put(Lsoot/ValueBox;,NONSTATIC,Lsoot/baf/internal/BIdentityInst;,leftBox)#4
soot.baf.internal.BIdentityInst.<init>(Lsoot/ValueBox;Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.baf.internal.BIdentityInst.<init>(Lsoot/ValueBox;Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,2)#6
soot.baf.internal.BIdentityInst.<init>(Lsoot/ValueBox;Lsoot/ValueBox;)V#Put(Lsoot/ValueBox;,NONSTATIC,Lsoot/baf/internal/BIdentityInst;,rightBox)#7
soot.baf.internal.BIdentityInst.<init>(Lsoot/ValueBox;Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.baf.internal.BIdentityInst.<init>(Lsoot/ValueBox;Lsoot/ValueBox;)V#LocalLoad(Ljava/lang/Object;,0)#9
soot.baf.internal.BIdentityInst.<init>(Lsoot/ValueBox;Lsoot/ValueBox;)V#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/baf/internal/BIdentityInst;,leftBox)#10
soot.baf.internal.BIdentityInst.<init>(Lsoot/ValueBox;Lsoot/ValueBox;)V#Invoke(STATIC,Ljava/util/Collections;,singletonList,(Ljava/lang/Object;)Ljava/util/List;)#11
soot.baf.internal.BIdentityInst.<init>(Lsoot/ValueBox;Lsoot/ValueBox;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/baf/internal/BIdentityInst;,defBoxes)#12
soot.baf.internal.BIdentityInst.<init>(Lsoot/ValueBox;Lsoot/ValueBox;)V#Return(V)#13
soot.baf.internal.BIdentityInst.<init>(Lsoot/Value;Lsoot/Value;)V#Return(V)#8
soot.baf.Baf.newIdentityInst(Lsoot/Value;Lsoot/Value;)Lsoot/baf/IdentityInst;#Return(Ljava/lang/Object;)#5
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,5)#74
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#75
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,5)#76
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#77
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Pop(1)#78
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#79
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/jimple/internal/JIdentityStmt;,getTags,()Ljava/util/List;)#80
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#81
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,6)#82
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Goto(89)#83
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#89
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#90
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Constant(I,0)#91
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#ConditionalBranch(I,ne,84)#92
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,5)#84
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#85
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#86
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#CheckCast(Lsoot/tagkit/Tag;)#87
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Lsoot/Unit;,addTag,(Lsoot/tagkit/Tag;)V)#88
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Return(V)#93
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#116
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#117
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#118
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Constant(I,0)#119
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#120
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#CheckCast(Lsoot/Unit;)#121
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#122
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Pop(1)#123
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#124
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/baf/BafBody;,getUnits,()Lsoot/PatchingChain;)#125
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#126
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/PatchingChain;,addAll,(Ljava/util/Collection;)Z)#127
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Pop(1)#128
soot.jimple.internal.JInvokeStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JInvokeStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/jimple/internal/JInvokeStmt;,getInvokeExpr,()Lsoot/jimple/InvokeExpr;)#1
soot.jimple.internal.JInvokeStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,3)#2
soot.jimple.internal.JInvokeStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.jimple.internal.JInvokeStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#4
soot.jimple.internal.JInvokeStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/jimple/JimpleToBafContext;,setCurrentUnit,(Lsoot/Unit;)V)#5
soot.jimple.internal.JInvokeStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#6
soot.jimple.internal.JInvokeStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#CheckCast(Lsoot/jimple/ConvertToBaf;)#7
soot.jimple.internal.JInvokeStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#8
soot.jimple.internal.JInvokeStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#9
soot.jimple.internal.JInvokeStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Lsoot/jimple/ConvertToBaf;,convertToBaf,(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V)#10
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/jimple/internal/AbstractSpecialInvokeExpr;,getBase,()Lsoot/Value;)#1
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#CheckCast(Lsoot/jimple/ConvertToBaf;)#2
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#4
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Lsoot/jimple/ConvertToBaf;,convertToBaf,(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V)#5
soot.jimple.internal.JimpleLocal.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(STATIC,Lsoot/baf/Baf;,v,()Lsoot/baf/Baf;)#0
soot.jimple.internal.JimpleLocal.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#1
soot.jimple.internal.JimpleLocal.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/jimple/internal/JimpleLocal;,getType,()Lsoot/Type;)#2
soot.jimple.internal.JimpleLocal.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.jimple.internal.JimpleLocal.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#4
soot.jimple.internal.JimpleLocal.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/jimple/JimpleToBafContext;,getBafLocalOfJimpleLocal,(Lsoot/Local;)Lsoot/Local;)#5
soot.jimple.internal.JimpleLocal.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/baf/Baf;,newLoadInst,(Lsoot/Type;Lsoot/Local;)Lsoot/baf/LoadInst;)#6
soot.baf.Baf.newLoadInst(Lsoot/Type;Lsoot/Local;)Lsoot/baf/LoadInst;#New(Lsoot/baf/internal/BLoadInst;,0)#0
soot.baf.Baf.newLoadInst(Lsoot/Type;Lsoot/Local;)Lsoot/baf/LoadInst;#Dup(1,0)#1
soot.baf.Baf.newLoadInst(Lsoot/Type;Lsoot/Local;)Lsoot/baf/LoadInst;#LocalLoad(Ljava/lang/Object;,1)#2
soot.baf.Baf.newLoadInst(Lsoot/Type;Lsoot/Local;)Lsoot/baf/LoadInst;#LocalLoad(Ljava/lang/Object;,2)#3
soot.baf.Baf.newLoadInst(Lsoot/Type;Lsoot/Local;)Lsoot/baf/LoadInst;#Invoke(SPECIAL,Lsoot/baf/internal/BLoadInst;,<init>,(Lsoot/Type;Lsoot/Local;)V)#4
soot.baf.internal.BLoadInst.<init>(Lsoot/Type;Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BLoadInst.<init>(Lsoot/Type;Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.baf.internal.BLoadInst.<init>(Lsoot/Type;Lsoot/Local;)V#Invoke(SPECIAL,Lsoot/baf/internal/AbstractOpTypeInst;,<init>,(Lsoot/Type;)V)#2
soot.baf.internal.AbstractOpTypeInst.<init>(Lsoot/Type;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.AbstractOpTypeInst.<init>(Lsoot/Type;)V#Invoke(SPECIAL,Lsoot/baf/internal/AbstractInst;,<init>,()V)#1
soot.baf.internal.AbstractOpTypeInst.<init>(Lsoot/Type;)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.baf.internal.AbstractOpTypeInst.<init>(Lsoot/Type;)V#Instanceof(Lsoot/NullType;)#3
soot.baf.internal.AbstractOpTypeInst.<init>(Lsoot/Type;)V#Constant(I,0)#4
soot.baf.internal.AbstractOpTypeInst.<init>(Lsoot/Type;)V#ConditionalBranch(I,ne,14)#5
soot.baf.internal.AbstractOpTypeInst.<init>(Lsoot/Type;)V#LocalLoad(Ljava/lang/Object;,1)#6
soot.baf.internal.AbstractOpTypeInst.<init>(Lsoot/Type;)V#Instanceof(Lsoot/ArrayType;)#7
soot.baf.internal.AbstractOpTypeInst.<init>(Lsoot/Type;)V#Constant(I,0)#8
soot.baf.internal.AbstractOpTypeInst.<init>(Lsoot/Type;)V#ConditionalBranch(I,ne,14)#9
soot.baf.internal.AbstractOpTypeInst.<init>(Lsoot/Type;)V#LocalLoad(Ljava/lang/Object;,1)#10
soot.baf.internal.AbstractOpTypeInst.<init>(Lsoot/Type;)V#Instanceof(Lsoot/RefType;)#11
soot.baf.internal.AbstractOpTypeInst.<init>(Lsoot/Type;)V#Constant(I,0)#12
soot.baf.internal.AbstractOpTypeInst.<init>(Lsoot/Type;)V#ConditionalBranch(I,eq,16)#13
soot.baf.internal.AbstractOpTypeInst.<init>(Lsoot/Type;)V#Invoke(STATIC,Lsoot/RefType;,v,()Lsoot/RefType;)#14
soot.RefType.v()Lsoot/RefType;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.RefType.v()Lsoot/RefType;#Invoke(VIRTUAL,Lsoot/G;,soot_RefType,()Lsoot/RefType;)#1
soot.Singletons.soot_RefType()Lsoot/RefType;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_RefType()Lsoot/RefType;#Get(Lsoot/RefType;,NONSTATIC,Lsoot/Singletons;,instance_soot_RefType)#1
soot.Singletons.soot_RefType()Lsoot/RefType;#Constant(L;,null)#2
soot.Singletons.soot_RefType()Lsoot/RefType;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_RefType()Lsoot/RefType;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_RefType()Lsoot/RefType;#New(Lsoot/RefType;,0)#5
soot.Singletons.soot_RefType()Lsoot/RefType;#Dup(1,0)#6
soot.Singletons.soot_RefType()Lsoot/RefType;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_RefType()Lsoot/RefType;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_RefType()Lsoot/RefType;#Invoke(SPECIAL,Lsoot/RefType;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.RefType.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.RefType.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/RefLikeType;,<init>,()V)#1
soot.RefType.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.RefType.<init>(Lsoot/Singletons$Global;)V#Constant(Ljava/lang/String;,"")#3
soot.RefType.<init>(Lsoot/Singletons$Global;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/RefType;,className)#4
soot.RefType.<init>(Lsoot/Singletons$Global;)V#Return(V)#5
soot.Singletons.soot_RefType()Lsoot/RefType;#Put(Lsoot/RefType;,NONSTATIC,Lsoot/Singletons;,instance_soot_RefType)#10
soot.Singletons.soot_RefType()Lsoot/RefType;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_RefType()Lsoot/RefType;#Get(Lsoot/RefType;,NONSTATIC,Lsoot/Singletons;,instance_soot_RefType)#12
soot.Singletons.soot_RefType()Lsoot/RefType;#Return(Ljava/lang/Object;)#13
soot.RefType.v()Lsoot/RefType;#Return(Ljava/lang/Object;)#2
soot.baf.internal.AbstractOpTypeInst.<init>(Lsoot/Type;)V#LocalStore(Ljava/lang/Object;,1)#15
soot.baf.internal.AbstractOpTypeInst.<init>(Lsoot/Type;)V#LocalLoad(Ljava/lang/Object;,0)#16
soot.baf.internal.AbstractOpTypeInst.<init>(Lsoot/Type;)V#LocalLoad(Ljava/lang/Object;,1)#17
soot.baf.internal.AbstractOpTypeInst.<init>(Lsoot/Type;)V#Put(Lsoot/Type;,NONSTATIC,Lsoot/baf/internal/AbstractOpTypeInst;,opType)#18
soot.baf.internal.AbstractOpTypeInst.<init>(Lsoot/Type;)V#Return(V)#19
soot.baf.internal.BLoadInst.<init>(Lsoot/Type;Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.baf.internal.BLoadInst.<init>(Lsoot/Type;Lsoot/Local;)V#New(Lsoot/baf/internal/BafLocalBox;,0)#4
soot.baf.internal.BLoadInst.<init>(Lsoot/Type;Lsoot/Local;)V#Dup(1,0)#5
soot.baf.internal.BLoadInst.<init>(Lsoot/Type;Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,2)#6
soot.baf.internal.BLoadInst.<init>(Lsoot/Type;Lsoot/Local;)V#Invoke(SPECIAL,Lsoot/baf/internal/BafLocalBox;,<init>,(Lsoot/Value;)V)#7
soot.baf.internal.BLoadInst.<init>(Lsoot/Type;Lsoot/Local;)V#Put(Lsoot/ValueBox;,NONSTATIC,Lsoot/baf/internal/BLoadInst;,localBox)#8
soot.baf.internal.BLoadInst.<init>(Lsoot/Type;Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,0)#9
soot.baf.internal.BLoadInst.<init>(Lsoot/Type;Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,0)#10
soot.baf.internal.BLoadInst.<init>(Lsoot/Type;Lsoot/Local;)V#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/baf/internal/BLoadInst;,localBox)#11
soot.baf.internal.BLoadInst.<init>(Lsoot/Type;Lsoot/Local;)V#Invoke(STATIC,Ljava/util/Collections;,singletonList,(Ljava/lang/Object;)Ljava/util/List;)#12
soot.baf.internal.BLoadInst.<init>(Lsoot/Type;Lsoot/Local;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/baf/internal/BLoadInst;,useBoxes)#13
soot.baf.internal.BLoadInst.<init>(Lsoot/Type;Lsoot/Local;)V#Return(V)#14
soot.baf.Baf.newLoadInst(Lsoot/Type;Lsoot/Local;)Lsoot/baf/LoadInst;#Return(Ljava/lang/Object;)#5
soot.jimple.internal.JimpleLocal.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,3)#7
soot.jimple.internal.JimpleLocal.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#8
soot.jimple.internal.JimpleLocal.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#9
soot.jimple.internal.JimpleLocal.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#10
soot.jimple.internal.JimpleLocal.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Pop(1)#11
soot.jimple.internal.JimpleLocal.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#12
soot.jimple.internal.JimpleLocal.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/jimple/JimpleToBafContext;,getCurrentUnit,()Lsoot/Unit;)#13
soot.jimple.JimpleToBafContext.getCurrentUnit()Lsoot/Unit;#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.JimpleToBafContext.getCurrentUnit()Lsoot/Unit;#Get(Lsoot/Unit;,NONSTATIC,Lsoot/jimple/JimpleToBafContext;,mCurrentUnit)#1
soot.jimple.JimpleToBafContext.getCurrentUnit()Lsoot/Unit;#Return(Ljava/lang/Object;)#2
soot.jimple.internal.JimpleLocal.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Lsoot/Unit;,getTags,()Ljava/util/List;)#14
soot.jimple.internal.JimpleLocal.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#15
soot.jimple.internal.JimpleLocal.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,4)#16
soot.jimple.internal.JimpleLocal.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Goto(23)#17
soot.jimple.internal.JimpleLocal.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,4)#23
soot.jimple.internal.JimpleLocal.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#24
soot.jimple.internal.JimpleLocal.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Constant(I,0)#25
soot.jimple.internal.JimpleLocal.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#ConditionalBranch(I,ne,18)#26
soot.jimple.internal.JimpleLocal.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#18
soot.jimple.internal.JimpleLocal.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,4)#19
soot.jimple.internal.JimpleLocal.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#20
soot.jimple.internal.JimpleLocal.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#CheckCast(Lsoot/tagkit/Tag;)#21
soot.jimple.internal.JimpleLocal.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Lsoot/Unit;,addTag,(Lsoot/tagkit/Tag;)V)#22
soot.jimple.internal.JimpleLocal.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Return(V)#27
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#6
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Get([Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/AbstractSpecialInvokeExpr;,argBoxes)#7
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Dup(1,0)#8
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,6)#9
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#ArrayLength()#10
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(I,5)#11
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Constant(I,0)#12
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(I,4)#13
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Goto(29)#14
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(I,4)#29
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(I,5)#30
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#ConditionalBranch(I,lt,15)#31
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#32
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(STATIC,Lsoot/baf/Baf;,v,()Lsoot/baf/Baf;)#33
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#34
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Get(Lsoot/SootMethodRef;,NONSTATIC,Lsoot/jimple/internal/AbstractSpecialInvokeExpr;,methodRef)#35
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/baf/Baf;,newSpecialInvokeInst,(Lsoot/SootMethodRef;)Lsoot/baf/SpecialInvokeInst;)#36
soot.baf.Baf.newSpecialInvokeInst(Lsoot/SootMethodRef;)Lsoot/baf/SpecialInvokeInst;#New(Lsoot/baf/internal/BSpecialInvokeInst;,0)#0
soot.baf.Baf.newSpecialInvokeInst(Lsoot/SootMethodRef;)Lsoot/baf/SpecialInvokeInst;#Dup(1,0)#1
soot.baf.Baf.newSpecialInvokeInst(Lsoot/SootMethodRef;)Lsoot/baf/SpecialInvokeInst;#LocalLoad(Ljava/lang/Object;,1)#2
soot.baf.Baf.newSpecialInvokeInst(Lsoot/SootMethodRef;)Lsoot/baf/SpecialInvokeInst;#Invoke(SPECIAL,Lsoot/baf/internal/BSpecialInvokeInst;,<init>,(Lsoot/SootMethodRef;)V)#3
soot.baf.internal.BSpecialInvokeInst.<init>(Lsoot/SootMethodRef;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BSpecialInvokeInst.<init>(Lsoot/SootMethodRef;)V#Invoke(SPECIAL,Lsoot/baf/internal/AbstractInvokeInst;,<init>,()V)#1
soot.baf.internal.AbstractInvokeInst.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.AbstractInvokeInst.<init>()V#Invoke(SPECIAL,Lsoot/baf/internal/AbstractInst;,<init>,()V)#1
soot.baf.internal.AbstractInvokeInst.<init>()V#Return(V)#2
soot.baf.internal.BSpecialInvokeInst.<init>(Lsoot/SootMethodRef;)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.baf.internal.BSpecialInvokeInst.<init>(Lsoot/SootMethodRef;)V#Invoke(INTERFACE,Lsoot/SootMethodRef;,isStatic,()Z)#3
soot.baf.internal.BSpecialInvokeInst.<init>(Lsoot/SootMethodRef;)V#Constant(I,0)#4
soot.baf.internal.BSpecialInvokeInst.<init>(Lsoot/SootMethodRef;)V#ConditionalBranch(I,eq,11)#5
soot.baf.internal.BSpecialInvokeInst.<init>(Lsoot/SootMethodRef;)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.baf.internal.BSpecialInvokeInst.<init>(Lsoot/SootMethodRef;)V#LocalLoad(Ljava/lang/Object;,1)#12
soot.baf.internal.BSpecialInvokeInst.<init>(Lsoot/SootMethodRef;)V#Put(Lsoot/SootMethodRef;,NONSTATIC,Lsoot/baf/internal/BSpecialInvokeInst;,methodRef)#13
soot.baf.internal.BSpecialInvokeInst.<init>(Lsoot/SootMethodRef;)V#Return(V)#14
soot.baf.Baf.newSpecialInvokeInst(Lsoot/SootMethodRef;)Lsoot/baf/SpecialInvokeInst;#Return(Ljava/lang/Object;)#4
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Dup(1,0)#37
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,3)#38
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#39
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Pop(1)#40
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#41
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/jimple/JimpleToBafContext;,getCurrentUnit,()Lsoot/Unit;)#42
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,4)#43
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,4)#44
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Lsoot/Unit;,getTags,()Ljava/util/List;)#45
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#46
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,5)#47
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Goto(54)#48
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,5)#54
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#55
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Constant(I,0)#56
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#ConditionalBranch(I,ne,49)#57
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#49
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,5)#50
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#51
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#CheckCast(Lsoot/tagkit/Tag;)#52
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Lsoot/Unit;,addTag,(Lsoot/tagkit/Tag;)V)#53
soot.jimple.internal.AbstractSpecialInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Return(V)#58
soot.jimple.internal.JInvokeStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#11
soot.jimple.internal.JInvokeStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Lsoot/jimple/InvokeExpr;,getMethodRef,()Lsoot/SootMethodRef;)#12
soot.jimple.internal.JInvokeStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Lsoot/SootMethodRef;,returnType,()Lsoot/Type;)#13
soot.jimple.internal.JInvokeStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(STATIC,Lsoot/VoidType;,v,()Lsoot/VoidType;)#14
soot.jimple.internal.JInvokeStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#15
soot.jimple.internal.JInvokeStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Constant(I,0)#16
soot.jimple.internal.JInvokeStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#ConditionalBranch(I,ne,42)#17
soot.jimple.internal.JInvokeStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Return(V)#42
soot.jimple.internal.JReturnVoidStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#0
soot.jimple.internal.JReturnVoidStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(STATIC,Lsoot/baf/Baf;,v,()Lsoot/baf/Baf;)#1
soot.jimple.internal.JReturnVoidStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/baf/Baf;,newReturnVoidInst,()Lsoot/baf/ReturnVoidInst;)#2
soot.baf.Baf.newReturnVoidInst()Lsoot/baf/ReturnVoidInst;#New(Lsoot/baf/internal/BReturnVoidInst;,0)#0
soot.baf.Baf.newReturnVoidInst()Lsoot/baf/ReturnVoidInst;#Dup(1,0)#1
soot.baf.Baf.newReturnVoidInst()Lsoot/baf/ReturnVoidInst;#Invoke(SPECIAL,Lsoot/baf/internal/BReturnVoidInst;,<init>,()V)#2
soot.baf.internal.BReturnVoidInst.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BReturnVoidInst.<init>()V#Invoke(SPECIAL,Lsoot/baf/internal/AbstractInst;,<init>,()V)#1
soot.baf.internal.BReturnVoidInst.<init>()V#Return(V)#2
soot.baf.Baf.newReturnVoidInst()Lsoot/baf/ReturnVoidInst;#Return(Ljava/lang/Object;)#3
soot.jimple.internal.JReturnVoidStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Dup(1,0)#3
soot.jimple.internal.JReturnVoidStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,3)#4
soot.jimple.internal.JReturnVoidStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#5
soot.jimple.internal.JReturnVoidStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Pop(1)#6
soot.jimple.internal.JReturnVoidStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#7
soot.jimple.internal.JReturnVoidStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,4)#8
soot.jimple.internal.JReturnVoidStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,4)#9
soot.jimple.internal.JReturnVoidStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Lsoot/Unit;,getTags,()Ljava/util/List;)#10
soot.jimple.internal.JReturnVoidStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#11
soot.jimple.internal.JReturnVoidStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,5)#12
soot.jimple.internal.JReturnVoidStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Goto(19)#13
soot.jimple.internal.JReturnVoidStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,5)#19
soot.jimple.internal.JReturnVoidStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#20
soot.jimple.internal.JReturnVoidStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Constant(I,0)#21
soot.jimple.internal.JReturnVoidStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#ConditionalBranch(I,ne,14)#22
soot.jimple.internal.JReturnVoidStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#14
soot.jimple.internal.JReturnVoidStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,5)#15
soot.jimple.internal.JReturnVoidStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#16
soot.jimple.internal.JReturnVoidStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#CheckCast(Lsoot/tagkit/Tag;)#17
soot.jimple.internal.JReturnVoidStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Lsoot/Unit;,addTag,(Lsoot/tagkit/Tag;)V)#18
soot.jimple.internal.JReturnVoidStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Return(V)#23
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#133
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/baf/BafBody;,getAllUnitBoxes,()Ljava/util/List;)#134
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#135
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,6)#136
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Goto(158)#137
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#158
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#159
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Constant(I,0)#160
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#ConditionalBranch(I,ne,138)#161
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#162
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/jimple/JimpleBody;,getTraps,()Lsoot/util/Chain;)#163
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#164
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,6)#165
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Goto(194)#166
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#194
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#195
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Constant(I,0)#196
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#ConditionalBranch(I,ne,167)#197
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#198
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"bb")#199
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/PackManager;,getPack,(Ljava/lang/String;)Lsoot/Pack;)#200
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#201
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Pack;,apply,(Lsoot/Body;)V)#202
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#588
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"gb")#589
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#590
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#591
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,595)#592
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#595
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"gb.a1")#596
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#597
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#598
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,602)#599
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#602
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"gb.cf")#603
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#604
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#605
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,609)#606
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#609
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"gb.a2")#610
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#611
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#612
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,616)#613
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#616
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"gb.ule")#617
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#618
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#619
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,623)#620
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#623
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"gop")#624
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#625
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#626
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,630)#627
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#630
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"bb")#631
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#632
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#633
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,637)#634
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:true ")#635
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#636
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#637
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"bb.lso")#638
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#639
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#640
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,644)#641
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:true debug:false inter:false sl:true sl2:false sll:true sll2:false ")#642
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#643
soot.baf.toolkits.base.LoadStoreOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.toolkits.base.LoadStoreOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#1
soot.baf.toolkits.base.LoadStoreOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer;,gOptions)#2
soot.baf.toolkits.base.LoadStoreOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,0)#3
soot.baf.toolkits.base.LoadStoreOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#4
soot.baf.toolkits.base.LoadStoreOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.baf.toolkits.base.LoadStoreOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,<init>,(Lsoot/baf/toolkits/base/LoadStoreOptimizer;)V)#6
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.<init>(Lsoot/baf/toolkits/base/LoadStoreOptimizer;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.<init>(Lsoot/baf/toolkits/base/LoadStoreOptimizer;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.<init>(Lsoot/baf/toolkits/base/LoadStoreOptimizer;)V#Put(Lsoot/baf/toolkits/base/LoadStoreOptimizer;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,this$0)#2
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.<init>(Lsoot/baf/toolkits/base/LoadStoreOptimizer;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.<init>(Lsoot/baf/toolkits/base/LoadStoreOptimizer;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#4
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.<init>(Lsoot/baf/toolkits/base/LoadStoreOptimizer;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.<init>(Lsoot/baf/toolkits/base/LoadStoreOptimizer;)V#Constant(I,0)#6
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.<init>(Lsoot/baf/toolkits/base/LoadStoreOptimizer;)V#Put(Z,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,mPass2)#7
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.<init>(Lsoot/baf/toolkits/base/LoadStoreOptimizer;)V#Return(V)#8
soot.baf.toolkits.base.LoadStoreOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,4)#7
soot.baf.toolkits.base.LoadStoreOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#8
soot.baf.toolkits.base.LoadStoreOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#9
soot.baf.toolkits.base.LoadStoreOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,access$0,(Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;Lsoot/Body;)V)#10
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.access$0(Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.access$0(Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.access$0(Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;Lsoot/Body;)V#Put(Lsoot/Body;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,mBody)#2
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.access$0(Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;Lsoot/Body;)V#Return(V)#3
soot.baf.toolkits.base.LoadStoreOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#11
soot.baf.toolkits.base.LoadStoreOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#12
soot.baf.toolkits.base.LoadStoreOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Body;,getUnits,()Lsoot/PatchingChain;)#13
soot.baf.toolkits.base.LoadStoreOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,access$1,(Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;Lsoot/util/Chain;)V)#14
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.access$1(Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;Lsoot/util/Chain;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.access$1(Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;Lsoot/util/Chain;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.access$1(Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;Lsoot/util/Chain;)V#Put(Lsoot/util/Chain;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,mUnits)#2
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.access$1(Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;Lsoot/util/Chain;)V#Return(V)#3
soot.baf.toolkits.base.LoadStoreOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#15
soot.baf.toolkits.base.LoadStoreOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#16
soot.baf.toolkits.base.LoadStoreOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer;,gOptions)#17
soot.baf.toolkits.base.LoadStoreOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"debug")#18
soot.baf.toolkits.base.LoadStoreOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/PhaseOptions;,getBoolean,(Ljava/util/Map;Ljava/lang/String;)Z)#19
soot.baf.toolkits.base.LoadStoreOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Put(Z,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer;,debug)#20
soot.baf.toolkits.base.LoadStoreOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#21
soot.baf.toolkits.base.LoadStoreOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/Options;,verbose,()Z)#22
soot.baf.toolkits.base.LoadStoreOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#23
soot.baf.toolkits.base.LoadStoreOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,39)#24
soot.baf.toolkits.base.LoadStoreOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#39
soot.baf.toolkits.base.LoadStoreOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Get(Z,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer;,debug)#40
soot.baf.toolkits.base.LoadStoreOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#41
soot.baf.toolkits.base.LoadStoreOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,55)#42
soot.baf.toolkits.base.LoadStoreOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#55
soot.baf.toolkits.base.LoadStoreOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,go,()V)#56
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,mUnits)#1
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#Invoke(INTERFACE,Lsoot/util/Chain;,isEmpty,()Z)#2
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#Constant(I,0)#3
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#ConditionalBranch(I,ne,66)#4
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#LocalLoad(Ljava/lang/Object;,0)#5
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#Invoke(SPECIAL,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,buildUnitToBlockMap,()V)#6
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#New(Lsoot/toolkits/graph/ZonedBlockGraph;,0)#0
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#Dup(1,0)#1
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#LocalLoad(Ljava/lang/Object;,0)#2
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#Get(Lsoot/Body;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,mBody)#3
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#Invoke(SPECIAL,Lsoot/toolkits/graph/ZonedBlockGraph;,<init>,(Lsoot/Body;)V)#4
soot.toolkits.graph.ZonedBlockGraph.<init>(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.ZonedBlockGraph.<init>(Lsoot/Body;)V#New(Lsoot/toolkits/graph/BriefUnitGraph;,0)#1
soot.toolkits.graph.ZonedBlockGraph.<init>(Lsoot/Body;)V#Dup(1,0)#2
soot.toolkits.graph.ZonedBlockGraph.<init>(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.toolkits.graph.ZonedBlockGraph.<init>(Lsoot/Body;)V#Invoke(SPECIAL,Lsoot/toolkits/graph/BriefUnitGraph;,<init>,(Lsoot/Body;)V)#4
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#Invoke(SPECIAL,Lsoot/toolkits/graph/UnitGraph;,<init>,(Lsoot/Body;)V)#2
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/toolkits/graph/BriefUnitGraph;,unitChain)#4
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#Invoke(INTERFACE,Lsoot/util/Chain;,size,()I)#5
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#LocalStore(I,2)#6
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#7
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#8
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#Constant(I,0)#9
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#ConditionalBranch(I,eq,14)#10
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#14
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#New(Ljava/util/HashMap;,0)#15
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#Dup(1,0)#16
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#LocalLoad(I,2)#17
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#Constant(I,2)#18
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#BinaryOp(I,mul)#19
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#Constant(I,1)#20
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#BinaryOp(I,add)#21
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#Constant(F,0.7)#22
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(IF)V)#23
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/graph/BriefUnitGraph;,unitToSuccs)#24
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#25
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#New(Ljava/util/HashMap;,0)#26
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#Dup(1,0)#27
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#LocalLoad(I,2)#28
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#Constant(I,2)#29
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#BinaryOp(I,mul)#30
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#Constant(I,1)#31
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#BinaryOp(I,add)#32
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#Constant(F,0.7)#33
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(IF)V)#34
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/graph/BriefUnitGraph;,unitToPreds)#35
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#36
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#37
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/graph/BriefUnitGraph;,unitToSuccs)#38
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#39
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/graph/BriefUnitGraph;,unitToPreds)#40
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/toolkits/graph/BriefUnitGraph;,buildUnexceptionalEdges,(Ljava/util/Map;Ljava/util/Map;)V)#41
soot.baf.internal.AbstractInst.fallsThrough()Z#Constant(I,1)#0
soot.baf.internal.AbstractInst.fallsThrough()Z#Return(I)#1
soot.baf.internal.AbstractInst.branches()Z#Constant(I,0)#0
soot.baf.internal.AbstractInst.branches()Z#Return(I)#1
soot.baf.internal.BReturnVoidInst.fallsThrough()Z#Constant(I,0)#0
soot.baf.internal.BReturnVoidInst.fallsThrough()Z#Return(I)#1
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#42
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/graph/BriefUnitGraph;,unitToSuccs)#43
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#Invoke(STATIC,Lsoot/toolkits/graph/BriefUnitGraph;,makeMappedListsUnmodifiable,(Ljava/util/Map;)V)#44
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#45
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/graph/BriefUnitGraph;,unitToPreds)#46
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#Invoke(STATIC,Lsoot/toolkits/graph/BriefUnitGraph;,makeMappedListsUnmodifiable,(Ljava/util/Map;)V)#47
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#48
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/toolkits/graph/BriefUnitGraph;,buildHeadsAndTails,()V)#49
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#New(Ljava/util/ArrayList;,0)#0
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#Dup(1,0)#1
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#2
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#LocalStore(Ljava/lang/Object;,1)#3
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#New(Ljava/util/ArrayList;,0)#4
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#Dup(1,0)#5
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#6
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#LocalStore(Ljava/lang/Object;,2)#7
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#LocalLoad(Ljava/lang/Object;,0)#8
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/toolkits/graph/UnitGraph;,unitChain)#9
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#10
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#LocalStore(Ljava/lang/Object;,3)#11
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#Goto(45)#12
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#LocalLoad(Ljava/lang/Object;,3)#45
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#46
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#Constant(I,0)#47
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#ConditionalBranch(I,ne,13)#48
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#LocalLoad(Ljava/lang/Object;,3)#13
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#14
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#CheckCast(Lsoot/Unit;)#15
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#LocalStore(Ljava/lang/Object;,4)#16
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#LocalLoad(Ljava/lang/Object;,0)#17
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/graph/UnitGraph;,unitToSuccs)#18
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#LocalLoad(Ljava/lang/Object;,4)#19
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#20
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#CheckCast(Ljava/util/List;)#21
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#LocalStore(Ljava/lang/Object;,5)#22
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#LocalLoad(Ljava/lang/Object;,5)#23
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#24
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#Constant(I,0)#25
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#ConditionalBranch(I,ne,31)#26
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#LocalLoad(Ljava/lang/Object;,0)#31
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/graph/UnitGraph;,unitToPreds)#32
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#LocalLoad(Ljava/lang/Object;,4)#33
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#34
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#CheckCast(Ljava/util/List;)#35
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#LocalStore(Ljava/lang/Object;,6)#36
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#LocalLoad(Ljava/lang/Object;,6)#37
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#38
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#Constant(I,0)#39
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#ConditionalBranch(I,ne,45)#40
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#LocalLoad(Ljava/lang/Object;,2)#41
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#LocalLoad(Ljava/lang/Object;,4)#42
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#43
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#Pop(1)#44
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#LocalLoad(Ljava/lang/Object;,1)#27
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#LocalLoad(Ljava/lang/Object;,4)#28
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#29
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#Pop(1)#30
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#LocalLoad(Ljava/lang/Object;,0)#49
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/toolkits/graph/UnitGraph;,unitChain)#50
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#Invoke(INTERFACE,Lsoot/util/Chain;,getFirst,()Ljava/lang/Object;)#51
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#CheckCast(Lsoot/Unit;)#52
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#LocalStore(Ljava/lang/Object;,3)#53
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#LocalLoad(Ljava/lang/Object;,2)#54
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#LocalLoad(Ljava/lang/Object;,3)#55
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#Invoke(INTERFACE,Ljava/util/List;,contains,(Ljava/lang/Object;)Z)#56
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#Constant(I,0)#57
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#ConditionalBranch(I,ne,63)#58
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#LocalLoad(Ljava/lang/Object;,0)#63
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#LocalLoad(Ljava/lang/Object;,1)#64
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#Invoke(STATIC,Ljava/util/Collections;,unmodifiableList,(Ljava/util/List;)Ljava/util/List;)#65
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#Put(Ljava/util/List;,NONSTATIC,Lsoot/toolkits/graph/UnitGraph;,tails)#66
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#LocalLoad(Ljava/lang/Object;,0)#67
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#LocalLoad(Ljava/lang/Object;,2)#68
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#Invoke(STATIC,Ljava/util/Collections;,unmodifiableList,(Ljava/util/List;)Ljava/util/List;)#69
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#Put(Ljava/util/List;,NONSTATIC,Lsoot/toolkits/graph/UnitGraph;,heads)#70
soot.toolkits.graph.UnitGraph.buildHeadsAndTails()V#Return(V)#71
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#50
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#51
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#Constant(I,0)#52
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#ConditionalBranch(I,eq,57)#53
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#Invoke(STATIC,Lsoot/util/PhaseDumper;,v,()Lsoot/util/PhaseDumper;)#57
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#58
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,1)#59
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/util/PhaseDumper;,dumpGraph,(Lsoot/toolkits/graph/DirectedGraph;Lsoot/Body;)V)#60
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/DirectedGraph;Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/DirectedGraph;Lsoot/Body;)V#Get(Z,NONSTATIC,Lsoot/util/PhaseDumper;,alreadyDumping)#1
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/DirectedGraph;Lsoot/Body;)V#Constant(I,0)#2
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/DirectedGraph;Lsoot/Body;)V#ConditionalBranch(I,eq,5)#3
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/DirectedGraph;Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/DirectedGraph;Lsoot/Body;)V#Constant(I,1)#6
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/DirectedGraph;Lsoot/Body;)V#Put(Z,NONSTATIC,Lsoot/util/PhaseDumper;,alreadyDumping)#7
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/DirectedGraph;Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/DirectedGraph;Lsoot/Body;)V#Get(Lsoot/util/PhaseDumper$PhaseStack;,NONSTATIC,Lsoot/util/PhaseDumper;,phaseStack)#9
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/DirectedGraph;Lsoot/Body;)V#Invoke(VIRTUAL,Lsoot/util/PhaseDumper$PhaseStack;,currentPhase,()Ljava/lang/String;)#10
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/DirectedGraph;Lsoot/Body;)V#LocalStore(Ljava/lang/Object;,3)#11
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/DirectedGraph;Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#12
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/DirectedGraph;Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,3)#13
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/DirectedGraph;Lsoot/Body;)V#Invoke(SPECIAL,Lsoot/util/PhaseDumper;,isCFGDumpingPhase,(Ljava/lang/String;)Z)#14
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/DirectedGraph;Lsoot/Body;)V#Constant(I,0)#15
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/DirectedGraph;Lsoot/Body;)V#ConditionalBranch(I,eq,68)#16
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/DirectedGraph;Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#68
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/DirectedGraph;Lsoot/Body;)V#Constant(I,0)#69
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/DirectedGraph;Lsoot/Body;)V#Put(Z,NONSTATIC,Lsoot/util/PhaseDumper;,alreadyDumping)#70
soot.util.PhaseDumper.dumpGraph(Lsoot/toolkits/graph/DirectedGraph;Lsoot/Body;)V#Return(V)#71
soot.toolkits.graph.BriefUnitGraph.<init>(Lsoot/Body;)V#Return(V)#61
soot.toolkits.graph.ZonedBlockGraph.<init>(Lsoot/Body;)V#Invoke(SPECIAL,Lsoot/toolkits/graph/ZonedBlockGraph;,<init>,(Lsoot/toolkits/graph/BriefUnitGraph;)V)#5
soot.toolkits.graph.ZonedBlockGraph.<init>(Lsoot/toolkits/graph/BriefUnitGraph;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.ZonedBlockGraph.<init>(Lsoot/toolkits/graph/BriefUnitGraph;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.toolkits.graph.ZonedBlockGraph.<init>(Lsoot/toolkits/graph/BriefUnitGraph;)V#Invoke(SPECIAL,Lsoot/toolkits/graph/BlockGraph;,<init>,(Lsoot/toolkits/graph/UnitGraph;)V)#2
soot.toolkits.graph.BlockGraph.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.BlockGraph.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.toolkits.graph.BlockGraph.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.toolkits.graph.BlockGraph.<init>(Lsoot/toolkits/graph/UnitGraph;)V#New(Ljava/util/ArrayList;,0)#3
soot.toolkits.graph.BlockGraph.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Dup(1,0)#4
soot.toolkits.graph.BlockGraph.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#5
soot.toolkits.graph.BlockGraph.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/toolkits/graph/BlockGraph;,mHeads)#6
soot.toolkits.graph.BlockGraph.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,0)#7
soot.toolkits.graph.BlockGraph.<init>(Lsoot/toolkits/graph/UnitGraph;)V#New(Ljava/util/ArrayList;,0)#8
soot.toolkits.graph.BlockGraph.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Dup(1,0)#9
soot.toolkits.graph.BlockGraph.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#10
soot.toolkits.graph.BlockGraph.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/toolkits/graph/BlockGraph;,mTails)#11
soot.toolkits.graph.BlockGraph.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,0)#12
soot.toolkits.graph.BlockGraph.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,1)#13
soot.toolkits.graph.BlockGraph.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(VIRTUAL,Lsoot/toolkits/graph/UnitGraph;,getBody,()Lsoot/Body;)#14
soot.toolkits.graph.BlockGraph.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Put(Lsoot/Body;,NONSTATIC,Lsoot/toolkits/graph/BlockGraph;,mBody)#15
soot.toolkits.graph.BlockGraph.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,0)#16
soot.toolkits.graph.BlockGraph.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,0)#17
soot.toolkits.graph.BlockGraph.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Get(Lsoot/Body;,NONSTATIC,Lsoot/toolkits/graph/BlockGraph;,mBody)#18
soot.toolkits.graph.BlockGraph.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(VIRTUAL,Lsoot/Body;,getUnits,()Lsoot/PatchingChain;)#19
soot.toolkits.graph.BlockGraph.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Put(Lsoot/util/Chain;,NONSTATIC,Lsoot/toolkits/graph/BlockGraph;,mUnits)#20
soot.toolkits.graph.BlockGraph.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,0)#21
soot.toolkits.graph.BlockGraph.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,1)#22
soot.toolkits.graph.BlockGraph.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(VIRTUAL,Lsoot/toolkits/graph/BlockGraph;,computeLeaders,(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;)#23
soot.toolkits.graph.ZonedBlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#0
soot.toolkits.graph.ZonedBlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Invoke(VIRTUAL,Lsoot/toolkits/graph/UnitGraph;,getBody,()Lsoot/Body;)#1
soot.toolkits.graph.ZonedBlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,2)#2
soot.toolkits.graph.ZonedBlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,2)#3
soot.toolkits.graph.ZonedBlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#4
soot.toolkits.graph.ZonedBlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Get(Lsoot/Body;,NONSTATIC,Lsoot/toolkits/graph/ZonedBlockGraph;,mBody)#5
soot.toolkits.graph.ZonedBlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#ConditionalBranch(Ljava/lang/Object;,eq,12)#6
soot.toolkits.graph.ZonedBlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#12
soot.toolkits.graph.ZonedBlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#13
soot.toolkits.graph.ZonedBlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Invoke(SPECIAL,Lsoot/toolkits/graph/BlockGraph;,computeLeaders,(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;)#14
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#0
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Invoke(VIRTUAL,Lsoot/toolkits/graph/UnitGraph;,getBody,()Lsoot/Body;)#1
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,2)#2
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,2)#3
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#4
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Get(Lsoot/Body;,NONSTATIC,Lsoot/toolkits/graph/BlockGraph;,mBody)#5
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#ConditionalBranch(Ljava/lang/Object;,eq,12)#6
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#New(Ljava/util/HashSet;,0)#12
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Dup(1,0)#13
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#14
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,3)#15
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,2)#16
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Invoke(VIRTUAL,Lsoot/Body;,getTraps,()Lsoot/util/Chain;)#17
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,4)#18
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,4)#19
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#20
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,5)#21
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Goto(32)#22
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,5)#32
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#33
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Constant(I,0)#34
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#ConditionalBranch(I,ne,23)#35
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,2)#36
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Invoke(VIRTUAL,Lsoot/Body;,getUnits,()Lsoot/PatchingChain;)#37
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Invoke(VIRTUAL,Lsoot/PatchingChain;,iterator,()Ljava/util/Iterator;)#38
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,5)#39
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Goto(87)#40
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,5)#87
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#88
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Constant(I,0)#89
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#ConditionalBranch(I,ne,41)#90
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,5)#41
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#42
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#CheckCast(Lsoot/Unit;)#43
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,6)#44
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#45
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,6)#46
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Invoke(VIRTUAL,Lsoot/toolkits/graph/UnitGraph;,getPredsOf,(Lsoot/Unit;)Ljava/util/List;)#47
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,7)#48
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,7)#49
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/List;,size,()I)#50
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalStore(I,8)#51
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#52
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,6)#53
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Invoke(VIRTUAL,Lsoot/toolkits/graph/UnitGraph;,getSuccsOf,(Lsoot/Unit;)Ljava/util/List;)#54
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,9)#55
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,9)#56
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/List;,size,()I)#57
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalStore(I,10)#58
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalLoad(I,8)#59
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Constant(I,1)#60
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#ConditionalBranch(I,eq,66)#61
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,3)#62
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,6)#63
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#64
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Pop(1)#65
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalLoad(I,10)#66
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Constant(I,1)#67
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#ConditionalBranch(I,gt,73)#68
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,6)#69
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Invoke(INTERFACE,Lsoot/Unit;,branches,()Z)#70
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Constant(I,0)#71
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#ConditionalBranch(I,eq,87)#72
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,3)#91
soot.toolkits.graph.BlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Return(Ljava/lang/Object;)#92
soot.toolkits.graph.ZonedBlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,3)#15
soot.toolkits.graph.ZonedBlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,2)#16
soot.toolkits.graph.ZonedBlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Invoke(VIRTUAL,Lsoot/Body;,getTraps,()Lsoot/util/Chain;)#17
soot.toolkits.graph.ZonedBlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#18
soot.toolkits.graph.ZonedBlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,4)#19
soot.toolkits.graph.ZonedBlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Goto(35)#20
soot.toolkits.graph.ZonedBlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,4)#35
soot.toolkits.graph.ZonedBlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#36
soot.toolkits.graph.ZonedBlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Constant(I,0)#37
soot.toolkits.graph.ZonedBlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#ConditionalBranch(I,ne,21)#38
soot.toolkits.graph.ZonedBlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,3)#39
soot.toolkits.graph.ZonedBlockGraph.computeLeaders(Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Set;#Return(Ljava/lang/Object;)#40
soot.toolkits.graph.BlockGraph.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalStore(Ljava/lang/Object;,2)#24
soot.toolkits.graph.BlockGraph.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,0)#25
soot.toolkits.graph.BlockGraph.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,2)#26
soot.toolkits.graph.BlockGraph.<init>(Lsoot/toolkits/graph/UnitGraph;)V#LocalLoad(Ljava/lang/Object;,1)#27
soot.toolkits.graph.BlockGraph.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Invoke(VIRTUAL,Lsoot/toolkits/graph/BlockGraph;,buildBlocks,(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;)#28
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#New(Ljava/util/ArrayList;,0)#0
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Dup(1,0)#1
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,1)#2
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Set;,size,()I)#3
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,(I)V)#4
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,3)#5
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#New(Ljava/util/HashMap;,0)#6
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Dup(1,0)#7
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#8
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,4)#9
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Constant(L;,null)#10
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,5)#11
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Constant(I,0)#12
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalStore(I,6)#13
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#14
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/toolkits/graph/BlockGraph;,mUnits)#15
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#16
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,7)#17
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,7)#18
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#19
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Constant(I,0)#20
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#ConditionalBranch(I,eq,40)#21
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,7)#22
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#23
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#CheckCast(Lsoot/Unit;)#24
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,5)#25
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,1)#26
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,5)#27
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Set;,contains,(Ljava/lang/Object;)Z)#28
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Constant(I,0)#29
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#ConditionalBranch(I,ne,36)#30
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(I,6)#36
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Constant(I,1)#37
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#BinaryOp(I,add)#38
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalStore(I,6)#39
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,5)#40
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,8)#41
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Constant(I,0)#42
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalStore(I,9)#43
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Goto(76)#44
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,7)#76
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#77
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Constant(I,0)#78
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#ConditionalBranch(I,ne,45)#79
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,7)#45
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#46
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#CheckCast(Lsoot/Unit;)#47
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,10)#48
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,1)#49
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,10)#50
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Set;,contains,(Ljava/lang/Object;)Z)#51
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Constant(I,0)#52
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#ConditionalBranch(I,eq,70)#53
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,10)#70
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,8)#71
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(I,6)#72
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Constant(I,1)#73
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#BinaryOp(I,add)#74
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalStore(I,6)#75
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(I,6)#80
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Constant(I,0)#81
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#ConditionalBranch(I,le,91)#82
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#83
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,5)#84
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,8)#85
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(I,9)#86
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(I,6)#87
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,3)#88
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,4)#89
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(SPECIAL,Lsoot/toolkits/graph/BlockGraph;,addBlock,(Lsoot/Unit;Lsoot/Unit;IILjava/util/List;Ljava/util/Map;)V)#90
soot.toolkits.graph.BlockGraph.addBlock(Lsoot/Unit;Lsoot/Unit;IILjava/util/List;Ljava/util/Map;)V#New(Lsoot/toolkits/graph/Block;,0)#0
soot.toolkits.graph.BlockGraph.addBlock(Lsoot/Unit;Lsoot/Unit;IILjava/util/List;Ljava/util/Map;)V#Dup(1,0)#1
soot.toolkits.graph.BlockGraph.addBlock(Lsoot/Unit;Lsoot/Unit;IILjava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.toolkits.graph.BlockGraph.addBlock(Lsoot/Unit;Lsoot/Unit;IILjava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,2)#3
soot.toolkits.graph.BlockGraph.addBlock(Lsoot/Unit;Lsoot/Unit;IILjava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#4
soot.toolkits.graph.BlockGraph.addBlock(Lsoot/Unit;Lsoot/Unit;IILjava/util/List;Ljava/util/Map;)V#Get(Lsoot/Body;,NONSTATIC,Lsoot/toolkits/graph/BlockGraph;,mBody)#5
soot.toolkits.graph.BlockGraph.addBlock(Lsoot/Unit;Lsoot/Unit;IILjava/util/List;Ljava/util/Map;)V#LocalLoad(I,3)#6
soot.toolkits.graph.BlockGraph.addBlock(Lsoot/Unit;Lsoot/Unit;IILjava/util/List;Ljava/util/Map;)V#LocalLoad(I,4)#7
soot.toolkits.graph.BlockGraph.addBlock(Lsoot/Unit;Lsoot/Unit;IILjava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.toolkits.graph.BlockGraph.addBlock(Lsoot/Unit;Lsoot/Unit;IILjava/util/List;Ljava/util/Map;)V#Invoke(SPECIAL,Lsoot/toolkits/graph/Block;,<init>,(Lsoot/Unit;Lsoot/Unit;Lsoot/Body;IILsoot/toolkits/graph/BlockGraph;)V)#9
soot.toolkits.graph.Block.<init>(Lsoot/Unit;Lsoot/Unit;Lsoot/Body;IILsoot/toolkits/graph/BlockGraph;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.Block.<init>(Lsoot/Unit;Lsoot/Unit;Lsoot/Body;IILsoot/toolkits/graph/BlockGraph;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.toolkits.graph.Block.<init>(Lsoot/Unit;Lsoot/Unit;Lsoot/Body;IILsoot/toolkits/graph/BlockGraph;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.toolkits.graph.Block.<init>(Lsoot/Unit;Lsoot/Unit;Lsoot/Body;IILsoot/toolkits/graph/BlockGraph;)V#Constant(I,0)#3
soot.toolkits.graph.Block.<init>(Lsoot/Unit;Lsoot/Unit;Lsoot/Body;IILsoot/toolkits/graph/BlockGraph;)V#Put(I,NONSTATIC,Lsoot/toolkits/graph/Block;,mBlockLength)#4
soot.toolkits.graph.Block.<init>(Lsoot/Unit;Lsoot/Unit;Lsoot/Body;IILsoot/toolkits/graph/BlockGraph;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.toolkits.graph.Block.<init>(Lsoot/Unit;Lsoot/Unit;Lsoot/Body;IILsoot/toolkits/graph/BlockGraph;)V#Constant(I,0)#6
soot.toolkits.graph.Block.<init>(Lsoot/Unit;Lsoot/Unit;Lsoot/Body;IILsoot/toolkits/graph/BlockGraph;)V#Put(I,NONSTATIC,Lsoot/toolkits/graph/Block;,mIndexInMethod)#7
soot.toolkits.graph.Block.<init>(Lsoot/Unit;Lsoot/Unit;Lsoot/Body;IILsoot/toolkits/graph/BlockGraph;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.toolkits.graph.Block.<init>(Lsoot/Unit;Lsoot/Unit;Lsoot/Body;IILsoot/toolkits/graph/BlockGraph;)V#LocalLoad(Ljava/lang/Object;,1)#9
soot.toolkits.graph.Block.<init>(Lsoot/Unit;Lsoot/Unit;Lsoot/Body;IILsoot/toolkits/graph/BlockGraph;)V#Put(Lsoot/Unit;,NONSTATIC,Lsoot/toolkits/graph/Block;,mHead)#10
soot.toolkits.graph.Block.<init>(Lsoot/Unit;Lsoot/Unit;Lsoot/Body;IILsoot/toolkits/graph/BlockGraph;)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.toolkits.graph.Block.<init>(Lsoot/Unit;Lsoot/Unit;Lsoot/Body;IILsoot/toolkits/graph/BlockGraph;)V#LocalLoad(Ljava/lang/Object;,2)#12
soot.toolkits.graph.Block.<init>(Lsoot/Unit;Lsoot/Unit;Lsoot/Body;IILsoot/toolkits/graph/BlockGraph;)V#Put(Lsoot/Unit;,NONSTATIC,Lsoot/toolkits/graph/Block;,mTail)#13
soot.toolkits.graph.Block.<init>(Lsoot/Unit;Lsoot/Unit;Lsoot/Body;IILsoot/toolkits/graph/BlockGraph;)V#LocalLoad(Ljava/lang/Object;,0)#14
soot.toolkits.graph.Block.<init>(Lsoot/Unit;Lsoot/Unit;Lsoot/Body;IILsoot/toolkits/graph/BlockGraph;)V#LocalLoad(Ljava/lang/Object;,3)#15
soot.toolkits.graph.Block.<init>(Lsoot/Unit;Lsoot/Unit;Lsoot/Body;IILsoot/toolkits/graph/BlockGraph;)V#Put(Lsoot/Body;,NONSTATIC,Lsoot/toolkits/graph/Block;,mBody)#16
soot.toolkits.graph.Block.<init>(Lsoot/Unit;Lsoot/Unit;Lsoot/Body;IILsoot/toolkits/graph/BlockGraph;)V#LocalLoad(Ljava/lang/Object;,0)#17
soot.toolkits.graph.Block.<init>(Lsoot/Unit;Lsoot/Unit;Lsoot/Body;IILsoot/toolkits/graph/BlockGraph;)V#LocalLoad(I,4)#18
soot.toolkits.graph.Block.<init>(Lsoot/Unit;Lsoot/Unit;Lsoot/Body;IILsoot/toolkits/graph/BlockGraph;)V#Put(I,NONSTATIC,Lsoot/toolkits/graph/Block;,mIndexInMethod)#19
soot.toolkits.graph.Block.<init>(Lsoot/Unit;Lsoot/Unit;Lsoot/Body;IILsoot/toolkits/graph/BlockGraph;)V#LocalLoad(Ljava/lang/Object;,0)#20
soot.toolkits.graph.Block.<init>(Lsoot/Unit;Lsoot/Unit;Lsoot/Body;IILsoot/toolkits/graph/BlockGraph;)V#LocalLoad(I,5)#21
soot.toolkits.graph.Block.<init>(Lsoot/Unit;Lsoot/Unit;Lsoot/Body;IILsoot/toolkits/graph/BlockGraph;)V#Put(I,NONSTATIC,Lsoot/toolkits/graph/Block;,mBlockLength)#22
soot.toolkits.graph.Block.<init>(Lsoot/Unit;Lsoot/Unit;Lsoot/Body;IILsoot/toolkits/graph/BlockGraph;)V#Return(V)#23
soot.toolkits.graph.BlockGraph.addBlock(Lsoot/Unit;Lsoot/Unit;IILjava/util/List;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,7)#10
soot.toolkits.graph.BlockGraph.addBlock(Lsoot/Unit;Lsoot/Unit;IILjava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#11
soot.toolkits.graph.BlockGraph.addBlock(Lsoot/Unit;Lsoot/Unit;IILjava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#12
soot.toolkits.graph.BlockGraph.addBlock(Lsoot/Unit;Lsoot/Unit;IILjava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#13
soot.toolkits.graph.BlockGraph.addBlock(Lsoot/Unit;Lsoot/Unit;IILjava/util/List;Ljava/util/Map;)V#Pop(1)#14
soot.toolkits.graph.BlockGraph.addBlock(Lsoot/Unit;Lsoot/Unit;IILjava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#15
soot.toolkits.graph.BlockGraph.addBlock(Lsoot/Unit;Lsoot/Unit;IILjava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,2)#16
soot.toolkits.graph.BlockGraph.addBlock(Lsoot/Unit;Lsoot/Unit;IILjava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#17
soot.toolkits.graph.BlockGraph.addBlock(Lsoot/Unit;Lsoot/Unit;IILjava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#18
soot.toolkits.graph.BlockGraph.addBlock(Lsoot/Unit;Lsoot/Unit;IILjava/util/List;Ljava/util/Map;)V#Pop(1)#19
soot.toolkits.graph.BlockGraph.addBlock(Lsoot/Unit;Lsoot/Unit;IILjava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#20
soot.toolkits.graph.BlockGraph.addBlock(Lsoot/Unit;Lsoot/Unit;IILjava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#21
soot.toolkits.graph.BlockGraph.addBlock(Lsoot/Unit;Lsoot/Unit;IILjava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#22
soot.toolkits.graph.BlockGraph.addBlock(Lsoot/Unit;Lsoot/Unit;IILjava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#23
soot.toolkits.graph.BlockGraph.addBlock(Lsoot/Unit;Lsoot/Unit;IILjava/util/List;Ljava/util/Map;)V#Pop(1)#24
soot.toolkits.graph.BlockGraph.addBlock(Lsoot/Unit;Lsoot/Unit;IILjava/util/List;Ljava/util/Map;)V#Return(V)#25
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,2)#91
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(VIRTUAL,Lsoot/toolkits/graph/UnitGraph;,getHeads,()Ljava/util/List;)#92
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#93
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,10)#94
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Goto(120)#95
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,10)#120
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#121
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Constant(I,0)#122
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#ConditionalBranch(I,ne,96)#123
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,10)#96
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#97
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#CheckCast(Lsoot/Unit;)#98
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,11)#99
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,4)#100
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,11)#101
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#102
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#CheckCast(Lsoot/toolkits/graph/Block;)#103
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,12)#104
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,12)#105
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(VIRTUAL,Lsoot/toolkits/graph/Block;,getHead,()Lsoot/Unit;)#106
soot.toolkits.graph.Block.getHead()Lsoot/Unit;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.Block.getHead()Lsoot/Unit;#Get(Lsoot/Unit;,NONSTATIC,Lsoot/toolkits/graph/Block;,mHead)#1
soot.toolkits.graph.Block.getHead()Lsoot/Unit;#Return(Ljava/lang/Object;)#2
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,11)#107
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#ConditionalBranch(Ljava/lang/Object;,ne,115)#108
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#109
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Get(Ljava/util/List;,NONSTATIC,Lsoot/toolkits/graph/BlockGraph;,mHeads)#110
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,12)#111
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#112
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Pop(1)#113
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Goto(120)#114
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,2)#124
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(VIRTUAL,Lsoot/toolkits/graph/UnitGraph;,getTails,()Ljava/util/List;)#125
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#126
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,10)#127
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Goto(153)#128
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,10)#153
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#154
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Constant(I,0)#155
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#ConditionalBranch(I,ne,129)#156
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,10)#129
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#130
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#CheckCast(Lsoot/Unit;)#131
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,11)#132
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,4)#133
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,11)#134
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#135
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#CheckCast(Lsoot/toolkits/graph/Block;)#136
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,12)#137
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,12)#138
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(VIRTUAL,Lsoot/toolkits/graph/Block;,getTail,()Lsoot/Unit;)#139
soot.toolkits.graph.Block.getTail()Lsoot/Unit;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.Block.getTail()Lsoot/Unit;#Get(Lsoot/Unit;,NONSTATIC,Lsoot/toolkits/graph/Block;,mTail)#1
soot.toolkits.graph.Block.getTail()Lsoot/Unit;#Return(Ljava/lang/Object;)#2
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,11)#140
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#ConditionalBranch(Ljava/lang/Object;,ne,148)#141
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#142
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Get(Ljava/util/List;,NONSTATIC,Lsoot/toolkits/graph/BlockGraph;,mTails)#143
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,12)#144
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#145
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Pop(1)#146
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Goto(153)#147
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,3)#157
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#158
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,10)#159
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Goto(297)#160
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,10)#297
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#298
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Constant(I,0)#299
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#ConditionalBranch(I,ne,161)#300
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,10)#161
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#162
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#CheckCast(Lsoot/toolkits/graph/Block;)#163
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,11)#164
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,2)#165
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,11)#166
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(VIRTUAL,Lsoot/toolkits/graph/Block;,getHead,()Lsoot/Unit;)#167
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(VIRTUAL,Lsoot/toolkits/graph/UnitGraph;,getPredsOf,(Lsoot/Unit;)Ljava/util/List;)#168
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,12)#169
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#New(Ljava/util/ArrayList;,0)#170
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Dup(1,0)#171
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,12)#172
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/List;,size,()I)#173
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,(I)V)#174
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,13)#175
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,12)#176
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#177
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,14)#178
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Goto(201)#179
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,14)#201
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#202
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Constant(I,0)#203
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#ConditionalBranch(I,ne,180)#204
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,13)#205
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/List;,size,()I)#206
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Constant(I,0)#207
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#ConditionalBranch(I,ne,213)#208
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,11)#209
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(STATIC,Ljava/util/Collections;,emptyList,()Ljava/util/List;)#210
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(VIRTUAL,Lsoot/toolkits/graph/Block;,setPreds,(Ljava/util/List;)V)#211
soot.toolkits.graph.Block.setPreds(Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.Block.setPreds(Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.toolkits.graph.Block.setPreds(Ljava/util/List;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/toolkits/graph/Block;,mPreds)#2
soot.toolkits.graph.Block.setPreds(Ljava/util/List;)V#Return(V)#3
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Goto(228)#212
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,2)#228
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,11)#229
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(VIRTUAL,Lsoot/toolkits/graph/Block;,getTail,()Lsoot/Unit;)#230
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(VIRTUAL,Lsoot/toolkits/graph/UnitGraph;,getSuccsOf,(Lsoot/Unit;)Ljava/util/List;)#231
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,14)#232
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#New(Ljava/util/ArrayList;,0)#233
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Dup(1,0)#234
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,14)#235
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/List;,size,()I)#236
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,(I)V)#237
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,15)#238
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,14)#239
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#240
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,16)#241
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Goto(264)#242
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,16)#264
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#265
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Constant(I,0)#266
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#ConditionalBranch(I,ne,243)#267
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,15)#268
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/List;,size,()I)#269
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Constant(I,0)#270
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#ConditionalBranch(I,ne,293)#271
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,11)#272
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(STATIC,Ljava/util/Collections;,emptyList,()Ljava/util/List;)#273
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(VIRTUAL,Lsoot/toolkits/graph/Block;,setSuccs,(Ljava/util/List;)V)#274
soot.toolkits.graph.Block.setSuccs(Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.Block.setSuccs(Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.toolkits.graph.Block.setSuccs(Ljava/util/List;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/toolkits/graph/Block;,mSuccessors)#2
soot.toolkits.graph.Block.setSuccs(Ljava/util/List;)V#Return(V)#3
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#275
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Get(Ljava/util/List;,NONSTATIC,Lsoot/toolkits/graph/BlockGraph;,mTails)#276
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,11)#277
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/List;,contains,(Ljava/lang/Object;)Z)#278
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Constant(I,0)#279
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#ConditionalBranch(I,ne,297)#280
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#301
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,3)#302
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(STATIC,Ljava/util/Collections;,unmodifiableList,(Ljava/util/List;)Ljava/util/List;)#303
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Put(Ljava/util/List;,NONSTATIC,Lsoot/toolkits/graph/BlockGraph;,mBlocks)#304
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#305
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#306
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Get(Ljava/util/List;,NONSTATIC,Lsoot/toolkits/graph/BlockGraph;,mHeads)#307
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(STATIC,Ljava/util/Collections;,unmodifiableList,(Ljava/util/List;)Ljava/util/List;)#308
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Put(Ljava/util/List;,NONSTATIC,Lsoot/toolkits/graph/BlockGraph;,mHeads)#309
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#310
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Get(Ljava/util/List;,NONSTATIC,Lsoot/toolkits/graph/BlockGraph;,mTails)#311
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/List;,size,()I)#312
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Constant(I,0)#313
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#ConditionalBranch(I,ne,319)#314
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#319
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#320
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Get(Ljava/util/List;,NONSTATIC,Lsoot/toolkits/graph/BlockGraph;,mTails)#321
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Invoke(STATIC,Ljava/util/Collections;,unmodifiableList,(Ljava/util/List;)Ljava/util/List;)#322
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Put(Ljava/util/List;,NONSTATIC,Lsoot/toolkits/graph/BlockGraph;,mTails)#323
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,4)#324
soot.toolkits.graph.BlockGraph.buildBlocks(Ljava/util/Set;Lsoot/toolkits/graph/UnitGraph;)Ljava/util/Map;#Return(Ljava/lang/Object;)#325
soot.toolkits.graph.BlockGraph.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Pop(1)#29
soot.toolkits.graph.BlockGraph.<init>(Lsoot/toolkits/graph/UnitGraph;)V#Return(V)#30
soot.toolkits.graph.ZonedBlockGraph.<init>(Lsoot/toolkits/graph/BriefUnitGraph;)V#Invoke(STATIC,Lsoot/util/PhaseDumper;,v,()Lsoot/util/PhaseDumper;)#3
soot.toolkits.graph.ZonedBlockGraph.<init>(Lsoot/toolkits/graph/BriefUnitGraph;)V#LocalLoad(Ljava/lang/Object;,0)#4
soot.toolkits.graph.ZonedBlockGraph.<init>(Lsoot/toolkits/graph/BriefUnitGraph;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.toolkits.graph.ZonedBlockGraph.<init>(Lsoot/toolkits/graph/BriefUnitGraph;)V#Get(Lsoot/Body;,NONSTATIC,Lsoot/toolkits/graph/ZonedBlockGraph;,mBody)#6
soot.toolkits.graph.ZonedBlockGraph.<init>(Lsoot/toolkits/graph/BriefUnitGraph;)V#Invoke(VIRTUAL,Lsoot/util/PhaseDumper;,dumpGraph,(Lsoot/toolkits/graph/DirectedGraph;Lsoot/Body;)V)#7
soot.toolkits.graph.ZonedBlockGraph.<init>(Lsoot/toolkits/graph/BriefUnitGraph;)V#Return(V)#8
soot.toolkits.graph.ZonedBlockGraph.<init>(Lsoot/Body;)V#Return(V)#6
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#LocalStore(Ljava/lang/Object;,1)#5
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#LocalLoad(Ljava/lang/Object;,0)#6
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#Get(Lsoot/baf/toolkits/base/LoadStoreOptimizer;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,this$0)#7
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#Get(Z,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer;,debug)#8
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#Constant(I,0)#9
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#ConditionalBranch(I,eq,30)#10
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#LocalLoad(Ljava/lang/Object;,1)#30
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#Invoke(VIRTUAL,Lsoot/toolkits/graph/BlockGraph;,getBlocks,()Ljava/util/List;)#31
soot.toolkits.graph.BlockGraph.getBlocks()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.BlockGraph.getBlocks()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lsoot/toolkits/graph/BlockGraph;,mBlocks)#1
soot.toolkits.graph.BlockGraph.getBlocks()Ljava/util/List;#Return(Ljava/lang/Object;)#2
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#LocalStore(Ljava/lang/Object;,2)#32
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#LocalLoad(Ljava/lang/Object;,0)#33
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#New(Ljava/util/HashMap;,0)#34
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#Dup(1,0)#35
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#36
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,mUnitToBlockMap)#37
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#LocalLoad(Ljava/lang/Object;,2)#38
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#39
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#LocalStore(Ljava/lang/Object;,3)#40
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#Goto(64)#41
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#LocalLoad(Ljava/lang/Object;,3)#64
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#65
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#Constant(I,0)#66
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#ConditionalBranch(I,ne,42)#67
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#LocalLoad(Ljava/lang/Object;,3)#42
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#43
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#CheckCast(Lsoot/toolkits/graph/Block;)#44
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#LocalStore(Ljava/lang/Object;,4)#45
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#LocalLoad(Ljava/lang/Object;,4)#46
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#Invoke(VIRTUAL,Lsoot/toolkits/graph/Block;,iterator,()Ljava/util/Iterator;)#47
soot.toolkits.graph.Block.iterator()Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.Block.iterator()Ljava/util/Iterator;#Get(Lsoot/Body;,NONSTATIC,Lsoot/toolkits/graph/Block;,mBody)#1
soot.toolkits.graph.Block.iterator()Ljava/util/Iterator;#Constant(L;,null)#2
soot.toolkits.graph.Block.iterator()Ljava/util/Iterator;#ConditionalBranch(Ljava/lang/Object;,eq,15)#3
soot.toolkits.graph.Block.iterator()Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#4
soot.toolkits.graph.Block.iterator()Ljava/util/Iterator;#Get(Lsoot/Body;,NONSTATIC,Lsoot/toolkits/graph/Block;,mBody)#5
soot.toolkits.graph.Block.iterator()Ljava/util/Iterator;#Invoke(VIRTUAL,Lsoot/Body;,getUnits,()Lsoot/PatchingChain;)#6
soot.toolkits.graph.Block.iterator()Ljava/util/Iterator;#LocalStore(Ljava/lang/Object;,1)#7
soot.toolkits.graph.Block.iterator()Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,1)#8
soot.toolkits.graph.Block.iterator()Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#9
soot.toolkits.graph.Block.iterator()Ljava/util/Iterator;#Get(Lsoot/Unit;,NONSTATIC,Lsoot/toolkits/graph/Block;,mHead)#10
soot.toolkits.graph.Block.iterator()Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#11
soot.toolkits.graph.Block.iterator()Ljava/util/Iterator;#Get(Lsoot/Unit;,NONSTATIC,Lsoot/toolkits/graph/Block;,mTail)#12
soot.toolkits.graph.Block.iterator()Ljava/util/Iterator;#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Iterator;)#13
soot.PatchingChain.iterator(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#0
soot.PatchingChain.iterator(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,1)#1
soot.PatchingChain.iterator(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Iterator;#CheckCast(Lsoot/Unit;)#2
soot.PatchingChain.iterator(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,2)#3
soot.PatchingChain.iterator(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Iterator;#CheckCast(Lsoot/Unit;)#4
soot.PatchingChain.iterator(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Iterator;#Invoke(VIRTUAL,Lsoot/PatchingChain;,iterator,(Lsoot/Unit;Lsoot/Unit;)Ljava/util/Iterator;)#5
soot.PatchingChain.iterator(Lsoot/Unit;Lsoot/Unit;)Ljava/util/Iterator;#New(Lsoot/PatchingChain$PatchingIterator;,0)#0
soot.PatchingChain.iterator(Lsoot/Unit;Lsoot/Unit;)Ljava/util/Iterator;#Dup(1,0)#1
soot.PatchingChain.iterator(Lsoot/Unit;Lsoot/Unit;)Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#2
soot.PatchingChain.iterator(Lsoot/Unit;Lsoot/Unit;)Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#3
soot.PatchingChain.iterator(Lsoot/Unit;Lsoot/Unit;)Ljava/util/Iterator;#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/PatchingChain;,innerChain)#4
soot.PatchingChain.iterator(Lsoot/Unit;Lsoot/Unit;)Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,1)#5
soot.PatchingChain.iterator(Lsoot/Unit;Lsoot/Unit;)Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,2)#6
soot.PatchingChain.iterator(Lsoot/Unit;Lsoot/Unit;)Ljava/util/Iterator;#Invoke(SPECIAL,Lsoot/PatchingChain$PatchingIterator;,<init>,(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;Lsoot/Unit;)V)#7
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;Lsoot/Unit;)V#Put(Lsoot/PatchingChain;,NONSTATIC,Lsoot/PatchingChain$PatchingIterator;,this$0)#2
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;Lsoot/Unit;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#4
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;Lsoot/Unit;)V#Constant(L;,null)#6
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;Lsoot/Unit;)V#Put(Ljava/util/Iterator;,NONSTATIC,Lsoot/PatchingChain$PatchingIterator;,innerIterator)#7
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;Lsoot/Unit;)V#Constant(I,0)#9
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;Lsoot/Unit;)V#Put(Z,NONSTATIC,Lsoot/PatchingChain$PatchingIterator;,state)#10
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,2)#12
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,3)#13
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,4)#14
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;Lsoot/Unit;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Iterator;)#15
soot.util.HashChain.iterator(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,1)#0
soot.util.HashChain.iterator(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Iterator;#Constant(L;,null)#1
soot.util.HashChain.iterator(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Iterator;#ConditionalBranch(Ljava/lang/Object;,eq,15)#2
soot.util.HashChain.iterator(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#3
soot.util.HashChain.iterator(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,1)#4
soot.util.HashChain.iterator(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Iterator;#Invoke(VIRTUAL,Lsoot/util/HashChain;,getPredOf,(Ljava/lang/Object;)Ljava/lang/Object;)#5
soot.util.HashChain.iterator(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,2)#6
soot.util.HashChain.iterator(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Iterator;#ConditionalBranch(Ljava/lang/Object;,ne,15)#7
soot.util.HashChain.iterator(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Iterator;#New(Lsoot/util/HashChain$LinkIterator;,0)#15
soot.util.HashChain.iterator(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Iterator;#Dup(1,0)#16
soot.util.HashChain.iterator(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#17
soot.util.HashChain.iterator(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,1)#18
soot.util.HashChain.iterator(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,2)#19
soot.util.HashChain.iterator(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Iterator;#Invoke(SPECIAL,Lsoot/util/HashChain$LinkIterator;,<init>,(Lsoot/util/HashChain;Ljava/lang/Object;Ljava/lang/Object;)V)#20
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,2)#2
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(SPECIAL,Lsoot/util/HashChain$LinkIterator;,<init>,(Lsoot/util/HashChain;Ljava/lang/Object;)V)#3
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#4
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,3)#5
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;Ljava/lang/Object;)V#Put(Ljava/lang/Object;,NONSTATIC,Lsoot/util/HashChain$LinkIterator;,destination)#6
soot.util.HashChain$LinkIterator.<init>(Lsoot/util/HashChain;Ljava/lang/Object;Ljava/lang/Object;)V#Return(V)#7
soot.util.HashChain.iterator(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Iterator;#Return(Ljava/lang/Object;)#21
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;Lsoot/Unit;)V#Put(Ljava/util/Iterator;,NONSTATIC,Lsoot/PatchingChain$PatchingIterator;,innerIterator)#16
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;Lsoot/Unit;)V#Return(V)#17
soot.PatchingChain.iterator(Lsoot/Unit;Lsoot/Unit;)Ljava/util/Iterator;#Return(Ljava/lang/Object;)#8
soot.PatchingChain.iterator(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Iterator;#Return(Ljava/lang/Object;)#6
soot.toolkits.graph.Block.iterator()Ljava/util/Iterator;#Return(Ljava/lang/Object;)#14
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#LocalStore(Ljava/lang/Object;,5)#48
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#Goto(60)#49
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#LocalLoad(Ljava/lang/Object;,5)#60
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#61
soot.util.HashChain$LinkIterator.hasNext()Z#LocalLoad(Ljava/lang/Object;,0)#25
soot.util.HashChain$LinkIterator.hasNext()Z#Get(Ljava/lang/Object;,NONSTATIC,Lsoot/util/HashChain$LinkIterator;,destination)#26
soot.util.HashChain$LinkIterator.hasNext()Z#LocalLoad(Ljava/lang/Object;,0)#27
soot.util.HashChain$LinkIterator.hasNext()Z#Get(Lsoot/util/HashChain$Link;,NONSTATIC,Lsoot/util/HashChain$LinkIterator;,currentLink)#28
soot.util.HashChain$LinkIterator.hasNext()Z#Invoke(VIRTUAL,Lsoot/util/HashChain$Link;,getItem,()Ljava/lang/Object;)#29
soot.util.HashChain$LinkIterator.hasNext()Z#ConditionalBranch(Ljava/lang/Object;,eq,33)#30
soot.util.HashChain$LinkIterator.hasNext()Z#Constant(I,1)#31
soot.util.HashChain$LinkIterator.hasNext()Z#Return(I)#32
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#Constant(I,0)#62
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#ConditionalBranch(I,ne,50)#63
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#LocalLoad(Ljava/lang/Object;,5)#50
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#51
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#CheckCast(Lsoot/Unit;)#52
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#LocalStore(Ljava/lang/Object;,6)#53
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#LocalLoad(Ljava/lang/Object;,0)#54
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,mUnitToBlockMap)#55
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#LocalLoad(Ljava/lang/Object;,6)#56
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#LocalLoad(Ljava/lang/Object;,4)#57
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#58
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#Pop(1)#59
soot.util.HashChain$LinkIterator.hasNext()Z#Constant(I,0)#33
soot.util.HashChain$LinkIterator.hasNext()Z#Return(I)#34
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildUnitToBlockMap()V#Return(V)#68
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#LocalLoad(Ljava/lang/Object;,0)#7
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#Invoke(SPECIAL,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,computeLocalDefsAndLocalUsesInfo,()V)#8
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.computeLocalDefsAndLocalUsesInfo()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.computeLocalDefsAndLocalUsesInfo()V#New(Lsoot/toolkits/graph/ExceptionalUnitGraph;,0)#1
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.computeLocalDefsAndLocalUsesInfo()V#Dup(1,0)#2
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.computeLocalDefsAndLocalUsesInfo()V#LocalLoad(Ljava/lang/Object;,0)#3
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.computeLocalDefsAndLocalUsesInfo()V#Get(Lsoot/Body;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,mBody)#4
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.computeLocalDefsAndLocalUsesInfo()V#Invoke(SPECIAL,Lsoot/toolkits/graph/ExceptionalUnitGraph;,<init>,(Lsoot/Body;)V)#5
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.computeLocalDefsAndLocalUsesInfo()V#Put(Lsoot/toolkits/graph/ExceptionalUnitGraph;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,mExceptionalUnitGraph)#6
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.computeLocalDefsAndLocalUsesInfo()V#LocalLoad(Ljava/lang/Object;,0)#7
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.computeLocalDefsAndLocalUsesInfo()V#New(Lsoot/toolkits/scalar/SmartLocalDefs;,0)#8
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.computeLocalDefsAndLocalUsesInfo()V#Dup(1,0)#9
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.computeLocalDefsAndLocalUsesInfo()V#LocalLoad(Ljava/lang/Object;,0)#10
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.computeLocalDefsAndLocalUsesInfo()V#Get(Lsoot/toolkits/graph/ExceptionalUnitGraph;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,mExceptionalUnitGraph)#11
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.computeLocalDefsAndLocalUsesInfo()V#New(Lsoot/toolkits/scalar/SimpleLiveLocals;,0)#12
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.computeLocalDefsAndLocalUsesInfo()V#Dup(1,0)#13
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.computeLocalDefsAndLocalUsesInfo()V#LocalLoad(Ljava/lang/Object;,0)#14
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.computeLocalDefsAndLocalUsesInfo()V#Get(Lsoot/toolkits/graph/ExceptionalUnitGraph;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,mExceptionalUnitGraph)#15
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.computeLocalDefsAndLocalUsesInfo()V#Invoke(SPECIAL,Lsoot/toolkits/scalar/SimpleLiveLocals;,<init>,(Lsoot/toolkits/graph/UnitGraph;)V)#16
soot.baf.internal.BIdentityInst.getDefBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BIdentityInst.getDefBoxes()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lsoot/baf/internal/BIdentityInst;,defBoxes)#1
soot.baf.internal.BIdentityInst.getDefBoxes()Ljava/util/List;#Return(Ljava/lang/Object;)#2
soot.baf.internal.BIdentityInst.getUseBoxes()Ljava/util/List;#New(Ljava/util/ArrayList;,0)#0
soot.baf.internal.BIdentityInst.getUseBoxes()Ljava/util/List;#Dup(1,0)#1
soot.baf.internal.BIdentityInst.getUseBoxes()Ljava/util/List;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#2
soot.baf.internal.BIdentityInst.getUseBoxes()Ljava/util/List;#LocalStore(Ljava/lang/Object;,1)#3
soot.baf.internal.BIdentityInst.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#4
soot.baf.internal.BIdentityInst.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#5
soot.baf.internal.BIdentityInst.getUseBoxes()Ljava/util/List;#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/baf/internal/BIdentityInst;,rightBox)#6
soot.baf.internal.BIdentityInst.getUseBoxes()Ljava/util/List;#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#7
soot.baf.internal.BIdentityInst.getUseBoxes()Ljava/util/List;#Invoke(INTERFACE,Lsoot/Value;,getUseBoxes,()Ljava/util/List;)#8
soot.baf.internal.BIdentityInst.getUseBoxes()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,addAll,(Ljava/util/Collection;)Z)#9
soot.baf.internal.BIdentityInst.getUseBoxes()Ljava/util/List;#Pop(1)#10
soot.baf.internal.BIdentityInst.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#11
soot.baf.internal.BIdentityInst.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#12
soot.baf.internal.BIdentityInst.getUseBoxes()Ljava/util/List;#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/baf/internal/BIdentityInst;,rightBox)#13
soot.baf.internal.BIdentityInst.getUseBoxes()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#14
soot.baf.internal.BIdentityInst.getUseBoxes()Ljava/util/List;#Pop(1)#15
soot.baf.internal.BIdentityInst.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#16
soot.baf.internal.BIdentityInst.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#17
soot.baf.internal.BIdentityInst.getUseBoxes()Ljava/util/List;#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/baf/internal/BIdentityInst;,leftBox)#18
soot.baf.internal.BIdentityInst.getUseBoxes()Ljava/util/List;#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#19
soot.baf.internal.BIdentityInst.getUseBoxes()Ljava/util/List;#Invoke(INTERFACE,Lsoot/Value;,getUseBoxes,()Ljava/util/List;)#20
soot.baf.internal.BafLocal.getUseBoxes()Ljava/util/List;#Get(Ljava/util/List;,STATIC,Lsoot/AbstractUnit;,emptyList)#0
soot.baf.internal.BafLocal.getUseBoxes()Ljava/util/List;#Return(Ljava/lang/Object;)#1
soot.baf.internal.BIdentityInst.getUseBoxes()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,addAll,(Ljava/util/Collection;)Z)#21
soot.baf.internal.BIdentityInst.getUseBoxes()Ljava/util/List;#Pop(1)#22
soot.baf.internal.BIdentityInst.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#23
soot.baf.internal.BIdentityInst.getUseBoxes()Ljava/util/List;#Return(Ljava/lang/Object;)#24
soot.baf.internal.BLoadInst.getUseBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BLoadInst.getUseBoxes()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lsoot/baf/internal/BLoadInst;,useBoxes)#1
soot.baf.internal.BLoadInst.getUseBoxes()Ljava/util/List;#Return(Ljava/lang/Object;)#2
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.computeLocalDefsAndLocalUsesInfo()V#Invoke(SPECIAL,Lsoot/toolkits/scalar/SmartLocalDefs;,<init>,(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LiveLocals;)V)#17
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.computeLocalDefsAndLocalUsesInfo()V#Put(Lsoot/toolkits/scalar/LocalDefs;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,mLocalDefs)#18
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.computeLocalDefsAndLocalUsesInfo()V#LocalLoad(Ljava/lang/Object;,0)#19
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.computeLocalDefsAndLocalUsesInfo()V#New(Lsoot/toolkits/scalar/SimpleLocalUses;,0)#20
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.computeLocalDefsAndLocalUsesInfo()V#Dup(1,0)#21
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.computeLocalDefsAndLocalUsesInfo()V#LocalLoad(Ljava/lang/Object;,0)#22
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.computeLocalDefsAndLocalUsesInfo()V#Get(Lsoot/toolkits/graph/ExceptionalUnitGraph;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,mExceptionalUnitGraph)#23
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.computeLocalDefsAndLocalUsesInfo()V#LocalLoad(Ljava/lang/Object;,0)#24
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.computeLocalDefsAndLocalUsesInfo()V#Get(Lsoot/toolkits/scalar/LocalDefs;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,mLocalDefs)#25
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.computeLocalDefsAndLocalUsesInfo()V#Invoke(SPECIAL,Lsoot/toolkits/scalar/SimpleLocalUses;,<init>,(Lsoot/toolkits/graph/UnitGraph;Lsoot/toolkits/scalar/LocalDefs;)V)#26
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.computeLocalDefsAndLocalUsesInfo()V#Put(Lsoot/toolkits/scalar/LocalUses;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,mLocalUses)#27
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.computeLocalDefsAndLocalUsesInfo()V#Return(V)#28
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#LocalLoad(Ljava/lang/Object;,0)#9
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#Get(Lsoot/baf/toolkits/base/LoadStoreOptimizer;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,this$0)#10
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#Get(Z,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer;,debug)#11
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#Constant(I,0)#12
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#ConditionalBranch(I,eq,18)#13
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#LocalLoad(Ljava/lang/Object;,0)#18
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#Invoke(SPECIAL,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,optimizeLoadStores,()V)#19
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(SPECIAL,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,buildStoreList,()Ljava/util/List;)#1
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildStoreList()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildStoreList()Ljava/util/List;#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,mUnits)#1
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildStoreList()Ljava/util/List;#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#2
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildStoreList()Ljava/util/List;#LocalStore(Ljava/lang/Object;,1)#3
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildStoreList()Ljava/util/List;#New(Ljava/util/ArrayList;,0)#4
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildStoreList()Ljava/util/List;#Dup(1,0)#5
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildStoreList()Ljava/util/List;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#6
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildStoreList()Ljava/util/List;#LocalStore(Ljava/lang/Object;,2)#7
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildStoreList()Ljava/util/List;#Goto(21)#8
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildStoreList()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#21
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildStoreList()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#22
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildStoreList()Ljava/util/List;#Constant(I,0)#23
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildStoreList()Ljava/util/List;#ConditionalBranch(I,ne,9)#24
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildStoreList()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#9
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildStoreList()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#10
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildStoreList()Ljava/util/List;#CheckCast(Lsoot/Unit;)#11
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildStoreList()Ljava/util/List;#LocalStore(Ljava/lang/Object;,3)#12
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildStoreList()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#13
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildStoreList()Ljava/util/List;#Instanceof(Lsoot/baf/StoreInst;)#14
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildStoreList()Ljava/util/List;#Constant(I,0)#15
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildStoreList()Ljava/util/List;#ConditionalBranch(I,eq,21)#16
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildStoreList()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#25
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildStoreList()Ljava/util/List;#Return(Ljava/lang/Object;)#26
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalStore(Ljava/lang/Object;,1)#2
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Constant(I,1)#3
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalStore(I,2)#4
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Constant(I,0)#5
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalStore(I,3)#6
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Goto(292)#7
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(I,2)#292
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Constant(I,0)#293
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#ConditionalBranch(I,ne,8)#294
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Constant(I,0)#8
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalStore(I,2)#9
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,1)#10
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#11
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalStore(Ljava/lang/Object;,4)#12
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Goto(288)#13
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,4)#288
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#289
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Constant(I,0)#290
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#ConditionalBranch(I,ne,14)#291
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Return(V)#295
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#LocalLoad(Ljava/lang/Object;,0)#20
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#Get(Lsoot/baf/toolkits/base/LoadStoreOptimizer;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,this$0)#21
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#Invoke(STATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer;,access$0,(Lsoot/baf/toolkits/base/LoadStoreOptimizer;)Ljava/util/Map;)#22
soot.baf.toolkits.base.LoadStoreOptimizer.access$0(Lsoot/baf/toolkits/base/LoadStoreOptimizer;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.toolkits.base.LoadStoreOptimizer.access$0(Lsoot/baf/toolkits/base/LoadStoreOptimizer;)Ljava/util/Map;#Get(Ljava/util/Map;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer;,gOptions)#1
soot.baf.toolkits.base.LoadStoreOptimizer.access$0(Lsoot/baf/toolkits/base/LoadStoreOptimizer;)Ljava/util/Map;#Return(Ljava/lang/Object;)#2
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#Constant(Ljava/lang/String;,"inter")#23
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#Invoke(STATIC,Lsoot/PhaseOptions;,getBoolean,(Ljava/util/Map;Ljava/lang/String;)Z)#24
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#Constant(I,0)#25
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#ConditionalBranch(I,eq,38)#26
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#LocalLoad(Ljava/lang/Object;,0)#38
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#Get(Lsoot/baf/toolkits/base/LoadStoreOptimizer;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,this$0)#39
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#Invoke(STATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer;,access$0,(Lsoot/baf/toolkits/base/LoadStoreOptimizer;)Ljava/util/Map;)#40
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#Constant(Ljava/lang/String;,"sl2")#41
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#Invoke(STATIC,Lsoot/PhaseOptions;,getBoolean,(Ljava/util/Map;Ljava/lang/String;)Z)#42
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#Constant(I,0)#43
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#ConditionalBranch(I,ne,52)#44
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#LocalLoad(Ljava/lang/Object;,0)#45
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#Get(Lsoot/baf/toolkits/base/LoadStoreOptimizer;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,this$0)#46
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#Invoke(STATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer;,access$0,(Lsoot/baf/toolkits/base/LoadStoreOptimizer;)Ljava/util/Map;)#47
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#Constant(Ljava/lang/String;,"sll2")#48
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#Invoke(STATIC,Lsoot/PhaseOptions;,getBoolean,(Ljava/util/Map;Ljava/lang/String;)Z)#49
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#Constant(I,0)#50
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#ConditionalBranch(I,eq,66)#51
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.go()V#Return(V)#66
soot.baf.toolkits.base.LoadStoreOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Return(V)#57
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#644
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"bb.pho")#645
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#646
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#647
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,651)#648
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:true ")#649
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#650
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,1)#0
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(I,4)#1
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(L;,null)#2
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,5)#3
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#4
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@bf7ce853)#5
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"peephole.dat")#6
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/Class;,getResourceAsStream,(Ljava/lang/String;)Ljava/io/InputStream;)#7
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Put(Ljava/io/InputStream;,NONSTATIC,Lsoot/baf/toolkits/base/PeepholeOptimizer;,peepholeListingStream)#8
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#9
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Get(Ljava/io/InputStream;,NONSTATIC,Lsoot/baf/toolkits/base/PeepholeOptimizer;,peepholeListingStream)#10
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(L;,null)#11
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(Ljava/lang/Object;,ne,18)#12
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/io/BufferedReader;,0)#18
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#19
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/io/InputStreamReader;,0)#20
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#21
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#22
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Get(Ljava/io/InputStream;,NONSTATIC,Lsoot/baf/toolkits/base/PeepholeOptimizer;,peepholeListingStream)#23
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/io/InputStreamReader;,<init>,(Ljava/io/InputStream;)V)#24
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/io/BufferedReader;,<init>,(Ljava/io/Reader;)V)#25
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,5)#26
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(L;,null)#27
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,6)#28
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/util/LinkedList;,0)#29
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#30
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#31
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,7)#32
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#33
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/io/BufferedReader;,readLine,()Ljava/lang/String;)#34
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,6)#35
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(53)#36
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#53
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(L;,null)#54
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(Ljava/lang/Object;,ne,37)#55
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#37
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#38
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#39
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,le,50)#40
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#41
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#42
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#43
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,35)#44
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,50)#45
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#50
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/io/BufferedReader;,readLine,()Ljava/lang/String;)#51
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,6)#52
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(158)#56
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(I,4)#158
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#159
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,74)#160
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#74
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(I,4)#75
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#76
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#77
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,8)#78
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(154)#79
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#154
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#155
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#156
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,80)#157
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#161
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Get(Ljava/io/InputStream;,NONSTATIC,Lsoot/baf/toolkits/base/PeepholeOptimizer;,peepholeListingStream)#162
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/io/InputStream;,close,()V)#163
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(166)#164
soot.baf.toolkits.base.PeepholeOptimizer.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Return(V)#166
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#651
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"bb.ule")#652
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#653
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#654
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,658)#655
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:true ")#656
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#657
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#658
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"bb.lp")#659
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#660
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#661
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,665)#662
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:true unsplit-original-locals:false ")#663
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#664
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#0
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"unsplit-original-locals")#1
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/PhaseOptions;,getBoolean,(Ljava/util/Map;Ljava/lang/String;)Z)#2
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(I,4)#3
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#4
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/options/Options;,verbose,()Z)#5
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#6
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,22)#7
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Lsoot/util/DeterministicHashMap;,0)#22
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#23
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#24
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Body;,getLocalCount,()I)#25
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,2)#26
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#BinaryOp(I,mul)#27
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,1)#28
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#BinaryOp(I,add)#29
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(F,0.7)#30
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Lsoot/util/DeterministicHashMap;,<init>,(IF)V)#31
soot.util.DeterministicHashMap.<init>(IF)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.DeterministicHashMap.<init>(IF)V#LocalLoad(I,1)#1
soot.util.DeterministicHashMap.<init>(IF)V#LocalLoad(F,2)#2
soot.util.DeterministicHashMap.<init>(IF)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(IF)V)#3
soot.util.DeterministicHashMap.<init>(IF)V#LocalLoad(Ljava/lang/Object;,0)#4
soot.util.DeterministicHashMap.<init>(IF)V#New(Lsoot/util/TrustingMonotonicArraySet;,0)#5
soot.util.DeterministicHashMap.<init>(IF)V#Dup(1,0)#6
soot.util.DeterministicHashMap.<init>(IF)V#Invoke(SPECIAL,Lsoot/util/TrustingMonotonicArraySet;,<init>,()V)#7
soot.util.TrustingMonotonicArraySet.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.TrustingMonotonicArraySet.<init>()V#Invoke(SPECIAL,Ljava/util/AbstractSet;,<init>,()V)#1
soot.util.TrustingMonotonicArraySet.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
soot.util.TrustingMonotonicArraySet.<init>()V#Constant(I,8)#3
soot.util.TrustingMonotonicArraySet.<init>()V#Put(I,NONSTATIC,Lsoot/util/TrustingMonotonicArraySet;,maxElements)#4
soot.util.TrustingMonotonicArraySet.<init>()V#LocalLoad(Ljava/lang/Object;,0)#5
soot.util.TrustingMonotonicArraySet.<init>()V#Constant(I,8)#6
soot.util.TrustingMonotonicArraySet.<init>()V#New([Ljava/lang/Object;,1)#7
soot.util.TrustingMonotonicArraySet.<init>()V#Put([Ljava/lang/Object;,NONSTATIC,Lsoot/util/TrustingMonotonicArraySet;,elements)#8
soot.util.TrustingMonotonicArraySet.<init>()V#LocalLoad(Ljava/lang/Object;,0)#9
soot.util.TrustingMonotonicArraySet.<init>()V#Constant(I,0)#10
soot.util.TrustingMonotonicArraySet.<init>()V#Put(I,NONSTATIC,Lsoot/util/TrustingMonotonicArraySet;,numElements)#11
soot.util.TrustingMonotonicArraySet.<init>()V#Return(V)#12
soot.util.DeterministicHashMap.<init>(IF)V#Put(Ljava/util/Set;,NONSTATIC,Lsoot/util/DeterministicHashMap;,keys)#8
soot.util.DeterministicHashMap.<init>(IF)V#Return(V)#9
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,5)#32
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/util/HashMap;,0)#33
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#34
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#35
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Body;,getLocalCount,()I)#36
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,2)#37
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#BinaryOp(I,mul)#38
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,1)#39
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#BinaryOp(I,add)#40
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(F,0.7)#41
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(IF)V)#42
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,6)#43
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/util/HashMap;,0)#44
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#45
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#46
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Body;,getLocalCount,()I)#47
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,2)#48
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#BinaryOp(I,mul)#49
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,1)#50
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#BinaryOp(I,add)#51
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(F,0.7)#52
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(IF)V)#53
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,7)#54
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#55
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Body;,getLocals,()Lsoot/util/Chain;)#56
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#57
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,9)#58
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(85)#59
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#85
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#86
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#87
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,60)#88
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#60
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#61
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/Local;)#62
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,10)#63
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#64
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Local;,getType,()Lsoot/Type;)#65
soot.baf.internal.BafLocal.getType()Lsoot/Type;#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BafLocal.getType()Lsoot/Type;#Get(Lsoot/Type;,NONSTATIC,Lsoot/baf/internal/BafLocal;,type)#1
soot.baf.internal.BafLocal.getType()Lsoot/Type;#Return(Ljava/lang/Object;)#2
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,11)#66
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#67
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#68
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#69
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#70
soot.util.DeterministicHashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.DeterministicHashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,1)#1
soot.util.DeterministicHashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;#Invoke(VIRTUAL,Lsoot/util/DeterministicHashMap;,containsKey,(Ljava/lang/Object;)Z)#2
soot.util.DeterministicHashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;#Constant(I,0)#3
soot.util.DeterministicHashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;#ConditionalBranch(I,ne,10)#4
soot.util.DeterministicHashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#5
soot.util.DeterministicHashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;#Get(Ljava/util/Set;,NONSTATIC,Lsoot/util/DeterministicHashMap;,keys)#6
soot.util.DeterministicHashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,1)#7
soot.util.DeterministicHashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#8
soot.util.TrustingMonotonicArraySet.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.TrustingMonotonicArraySet.add(Ljava/lang/Object;)Z#Get(I,NONSTATIC,Lsoot/util/TrustingMonotonicArraySet;,numElements)#1
soot.util.TrustingMonotonicArraySet.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#2
soot.util.TrustingMonotonicArraySet.add(Ljava/lang/Object;)Z#Get(I,NONSTATIC,Lsoot/util/TrustingMonotonicArraySet;,maxElements)#3
soot.util.TrustingMonotonicArraySet.add(Ljava/lang/Object;)Z#ConditionalBranch(I,ne,7)#4
soot.util.TrustingMonotonicArraySet.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#7
soot.util.TrustingMonotonicArraySet.add(Ljava/lang/Object;)Z#Get([Ljava/lang/Object;,NONSTATIC,Lsoot/util/TrustingMonotonicArraySet;,elements)#8
soot.util.TrustingMonotonicArraySet.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#9
soot.util.TrustingMonotonicArraySet.add(Ljava/lang/Object;)Z#Dup(1,0)#10
soot.util.TrustingMonotonicArraySet.add(Ljava/lang/Object;)Z#Get(I,NONSTATIC,Lsoot/util/TrustingMonotonicArraySet;,numElements)#11
soot.util.TrustingMonotonicArraySet.add(Ljava/lang/Object;)Z#Dup(1,1)#12
soot.util.TrustingMonotonicArraySet.add(Ljava/lang/Object;)Z#Constant(I,1)#13
soot.util.TrustingMonotonicArraySet.add(Ljava/lang/Object;)Z#BinaryOp(I,add)#14
soot.util.TrustingMonotonicArraySet.add(Ljava/lang/Object;)Z#Put(I,NONSTATIC,Lsoot/util/TrustingMonotonicArraySet;,numElements)#15
soot.util.TrustingMonotonicArraySet.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#16
soot.util.TrustingMonotonicArraySet.add(Ljava/lang/Object;)Z#ArrayStore(Ljava/lang/Object;)#17
soot.util.TrustingMonotonicArraySet.add(Ljava/lang/Object;)Z#Constant(I,1)#18
soot.util.TrustingMonotonicArraySet.add(Ljava/lang/Object;)Z#Return(I)#19
soot.util.DeterministicHashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;#Pop(1)#9
soot.util.DeterministicHashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#10
soot.util.DeterministicHashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,1)#11
soot.util.DeterministicHashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,2)#12
soot.util.DeterministicHashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;#Invoke(SPECIAL,Ljava/util/HashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#13
soot.util.DeterministicHashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;#Return(Ljava/lang/Object;)#14
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Pop(1)#71
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#72
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#73
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#74
soot.baf.WordType.hashCode()I#Constant(I,-1220074593)#0
soot.baf.WordType.hashCode()I#Return(I)#1
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#75
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,85)#76
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#77
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#78
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/lang/Integer;,0)#79
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#80
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#81
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/lang/Integer;,<init>,(I)V)#82
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#83
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Pop(1)#84
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#89
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Body;,getUnits,()Lsoot/PatchingChain;)#90
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/PatchingChain;,iterator,()Ljava/util/Iterator;)#91
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,9)#92
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(143)#93
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#143
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#144
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#145
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,94)#146
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#94
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#95
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/Unit;)#96
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,10)#97
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#98
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Instanceof(Lsoot/IdentityUnit;)#99
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#100
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,143)#101
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#102
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/IdentityUnit;)#103
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/IdentityUnit;,getLeftOp,()Lsoot/Value;)#104
soot.baf.internal.BIdentityInst.getLeftOp()Lsoot/Value;#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BIdentityInst.getLeftOp()Lsoot/Value;#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/baf/internal/BIdentityInst;,leftBox)#1
soot.baf.internal.BIdentityInst.getLeftOp()Lsoot/Value;#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#2
soot.baf.internal.BIdentityInst.getLeftOp()Lsoot/Value;#Return(Ljava/lang/Object;)#3
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Instanceof(Lsoot/Local;)#105
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#106
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,143)#107
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#108
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/IdentityUnit;)#109
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/IdentityUnit;,getLeftOp,()Lsoot/Value;)#110
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/Local;)#111
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,11)#112
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#113
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#114
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#115
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,12)#116
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#117
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#118
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#119
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Ljava/lang/Integer;)#120
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#121
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(I,13)#122
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#123
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#124
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/lang/Integer;,0)#125
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#126
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(I,13)#127
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/lang/Integer;,<init>,(I)V)#128
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#129
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Pop(1)#130
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(I,13)#131
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,1)#132
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#BinaryOp(I,add)#133
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(I,13)#134
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#135
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#136
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/lang/Integer;,0)#137
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#138
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(I,13)#139
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/lang/Integer;,<init>,(I)V)#140
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#141
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Pop(1)#142
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(I,4)#147
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#148
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,156)#149
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#156
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#157
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#158
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#159
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/toolkits/scalar/FastColorer;,assignColorsToLocals,(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V)#160
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#New(Lsoot/toolkits/graph/ExceptionalUnitGraph;,0)#0
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#Dup(1,0)#1
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#Invoke(SPECIAL,Lsoot/toolkits/graph/ExceptionalUnitGraph;,<init>,(Lsoot/Body;)V)#3
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,4)#4
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#New(Lsoot/toolkits/scalar/SimpleLiveLocals;,0)#5
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#Dup(1,0)#6
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#7
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#Invoke(SPECIAL,Lsoot/toolkits/scalar/SimpleLiveLocals;,<init>,(Lsoot/toolkits/graph/UnitGraph;)V)#8
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,5)#9
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#New(Lsoot/toolkits/scalar/FastColorer$UnitInterferenceGraph;,0)#10
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#Dup(1,0)#11
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#12
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#13
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#14
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#Invoke(SPECIAL,Lsoot/toolkits/scalar/FastColorer$UnitInterferenceGraph;,<init>,(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V)#15
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#New(Ljava/util/ArrayList;,0)#3
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Dup(1,0)#4
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#5
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/toolkits/scalar/FastColorer$UnitInterferenceGraph;,locals)#6
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,0)#7
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Get(Ljava/util/List;,NONSTATIC,Lsoot/toolkits/scalar/FastColorer$UnitInterferenceGraph;,locals)#8
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,1)#9
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(VIRTUAL,Lsoot/Body;,getLocals,()Lsoot/util/Chain;)#10
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Ljava/util/List;,addAll,(Ljava/util/Collection;)Z)#11
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Pop(1)#12
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,0)#13
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#New(Ljava/util/HashMap;,0)#14
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Dup(1,0)#15
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,1)#16
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(VIRTUAL,Lsoot/Body;,getLocalCount,()I)#17
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Constant(I,2)#18
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#BinaryOp(I,mul)#19
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Constant(I,1)#20
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#BinaryOp(I,add)#21
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Constant(F,0.7)#22
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(IF)V)#23
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/FastColorer$UnitInterferenceGraph;,localToLocals)#24
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,1)#25
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(VIRTUAL,Lsoot/Body;,getLocals,()Lsoot/util/Chain;)#26
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#27
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalStore(Ljava/lang/Object;,4)#28
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Goto(42)#29
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,4)#42
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#43
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Constant(I,0)#44
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#ConditionalBranch(I,ne,30)#45
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,4)#30
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#31
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#CheckCast(Lsoot/Local;)#32
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalStore(Ljava/lang/Object;,5)#33
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,0)#34
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/FastColorer$UnitInterferenceGraph;,localToLocals)#35
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,5)#36
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#New(Lsoot/util/ArraySet;,0)#37
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Dup(1,0)#38
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(SPECIAL,Lsoot/util/ArraySet;,<init>,()V)#39
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#40
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Pop(1)#41
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,1)#46
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(VIRTUAL,Lsoot/Body;,getUnits,()Lsoot/PatchingChain;)#47
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(VIRTUAL,Lsoot/PatchingChain;,iterator,()Ljava/util/Iterator;)#48
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalStore(Ljava/lang/Object;,4)#49
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Goto(115)#50
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,4)#115
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#116
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Constant(I,0)#117
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#ConditionalBranch(I,ne,51)#118
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,4)#51
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#52
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#CheckCast(Lsoot/Unit;)#53
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalStore(Ljava/lang/Object;,5)#54
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,3)#55
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,5)#56
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Lsoot/toolkits/scalar/LiveLocals;,getLiveLocalsAfter,(Lsoot/Unit;)Ljava/util/List;)#57
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalStore(Ljava/lang/Object;,6)#58
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,5)#59
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Lsoot/Unit;,getDefBoxes,()Ljava/util/List;)#60
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalStore(Ljava/lang/Object;,7)#61
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,7)#62
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Ljava/util/List;,isEmpty,()Z)#63
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Constant(I,0)#64
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#ConditionalBranch(I,ne,115)#65
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,7)#66
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#67
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Constant(I,1)#68
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#ConditionalBranch(I,eq,75)#69
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,7)#75
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Constant(I,0)#76
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#77
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#CheckCast(Lsoot/ValueBox;)#78
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#79
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Instanceof(Lsoot/Local;)#80
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Constant(I,0)#81
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#ConditionalBranch(I,eq,115)#82
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,7)#83
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Constant(I,0)#84
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#85
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#CheckCast(Lsoot/ValueBox;)#86
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#87
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#CheckCast(Lsoot/Local;)#88
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalStore(Ljava/lang/Object;,8)#89
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,6)#90
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#91
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalStore(Ljava/lang/Object;,9)#92
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Goto(111)#93
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,9)#111
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#112
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Constant(I,0)#113
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#ConditionalBranch(I,ne,94)#114
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,9)#94
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#95
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#CheckCast(Lsoot/Local;)#96
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalStore(Ljava/lang/Object;,10)#97
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,2)#98
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,10)#99
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#100
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,2)#101
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,8)#102
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#103
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#104
soot.baf.WordType.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.WordType.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#1
soot.baf.WordType.equals(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,5)#2
soot.baf.WordType.equals(Ljava/lang/Object;)Z#Constant(I,1)#3
soot.baf.WordType.equals(Ljava/lang/Object;)Z#Return(I)#4
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Constant(I,0)#105
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#ConditionalBranch(I,eq,111)#106
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,0)#107
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,8)#108
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#LocalLoad(Ljava/lang/Object;,10)#109
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/FastColorer$UnitInterferenceGraph;,setInterference,(Lsoot/Local;Lsoot/Local;)V)#110
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.setInterference(Lsoot/Local;Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.setInterference(Lsoot/Local;Lsoot/Local;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/FastColorer$UnitInterferenceGraph;,localToLocals)#1
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.setInterference(Lsoot/Local;Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.setInterference(Lsoot/Local;Lsoot/Local;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.setInterference(Lsoot/Local;Lsoot/Local;)V#CheckCast(Lsoot/util/ArraySet;)#4
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.setInterference(Lsoot/Local;Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,2)#5
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.setInterference(Lsoot/Local;Lsoot/Local;)V#Invoke(VIRTUAL,Lsoot/util/ArraySet;,add,(Ljava/lang/Object;)Z)#6
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.setInterference(Lsoot/Local;Lsoot/Local;)V#Pop(1)#7
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.setInterference(Lsoot/Local;Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.setInterference(Lsoot/Local;Lsoot/Local;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/toolkits/scalar/FastColorer$UnitInterferenceGraph;,localToLocals)#9
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.setInterference(Lsoot/Local;Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,2)#10
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.setInterference(Lsoot/Local;Lsoot/Local;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#11
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.setInterference(Lsoot/Local;Lsoot/Local;)V#CheckCast(Lsoot/util/ArraySet;)#12
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.setInterference(Lsoot/Local;Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,1)#13
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.setInterference(Lsoot/Local;Lsoot/Local;)V#Invoke(VIRTUAL,Lsoot/util/ArraySet;,add,(Ljava/lang/Object;)Z)#14
soot.util.ArraySet.contains(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#3
soot.util.ArraySet.contains(Ljava/lang/Object;)Z#Get([Ljava/lang/Object;,NONSTATIC,Lsoot/util/ArraySet;,elements)#4
soot.util.ArraySet.contains(Ljava/lang/Object;)Z#LocalLoad(I,2)#5
soot.util.ArraySet.contains(Ljava/lang/Object;)Z#ArrayLoad(Ljava/lang/Object;)#6
soot.util.ArraySet.contains(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#7
soot.util.ArraySet.contains(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#8
soot.util.ArraySet.contains(Ljava/lang/Object;)Z#Constant(I,0)#9
soot.util.ArraySet.contains(Ljava/lang/Object;)Z#ConditionalBranch(I,eq,13)#10
soot.util.ArraySet.contains(Ljava/lang/Object;)Z#Constant(I,1)#11
soot.util.ArraySet.contains(Ljava/lang/Object;)Z#Return(I)#12
soot.util.ArraySet.add(Ljava/lang/Object;)Z#Constant(I,0)#13
soot.util.ArraySet.add(Ljava/lang/Object;)Z#Return(I)#14
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.setInterference(Lsoot/Local;Lsoot/Local;)V#Pop(1)#15
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.setInterference(Lsoot/Local;Lsoot/Local;)V#Return(V)#16
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.<init>(Lsoot/Body;Ljava/util/Map;Lsoot/toolkits/scalar/LiveLocals;)V#Return(V)#119
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,6)#16
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#Constant(I,10)#17
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#New([I,1)#18
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,7)#19
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#20
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/FastColorer$UnitInterferenceGraph;,getLocals,()Ljava/util/List;)#21
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.getLocals()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.getLocals()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lsoot/toolkits/scalar/FastColorer$UnitInterferenceGraph;,locals)#1
soot.toolkits.scalar.FastColorer$UnitInterferenceGraph.getLocals()Ljava/util/List;#Return(Ljava/lang/Object;)#2
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#22
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,8)#23
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#Goto(157)#24
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#157
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#158
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#Constant(I,0)#159
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#ConditionalBranch(I,ne,25)#160
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#25
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#26
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#CheckCast(Lsoot/Local;)#27
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,9)#28
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,2)#29
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#30
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#31
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#Constant(I,0)#32
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#ConditionalBranch(I,eq,35)#33
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#Goto(157)#34
soot.toolkits.scalar.FastColorer.assignColorsToLocals(Lsoot/Body;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V#Return(V)#161
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/util/ArrayList;,0)#161
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#162
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#163
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,9)#164
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/util/HashMap;,0)#165
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#166
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#167
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Body;,getLocalCount,()I)#168
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,2)#169
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#BinaryOp(I,mul)#170
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,1)#171
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#BinaryOp(I,add)#172
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(F,0.7)#173
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(IF)V)#174
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,8)#175
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/util/HashMap;,0)#176
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#177
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#178
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Body;,getLocalCount,()I)#179
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,2)#180
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#BinaryOp(I,mul)#181
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,1)#182
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#BinaryOp(I,add)#183
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(F,0.7)#184
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(IF)V)#185
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,10)#186
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#187
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#188
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Body;,getLocals,()Lsoot/util/Chain;)#189
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,addAll,(Ljava/util/Collection;)Z)#190
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Pop(1)#191
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#192
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Body;,getLocals,()Lsoot/util/Chain;)#193
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/util/Chain;,clear,()V)#194
soot.util.HashChain.clear()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.HashChain.clear()V#Dup(1,0)#1
soot.util.HashChain.clear()V#Get(J,NONSTATIC,Lsoot/util/HashChain;,stateCount)#2
soot.util.HashChain.clear()V#Constant(J,1)#3
soot.util.HashChain.clear()V#BinaryOp(J,add)#4
soot.util.HashChain.clear()V#Put(J,NONSTATIC,Lsoot/util/HashChain;,stateCount)#5
soot.util.HashChain.clear()V#LocalLoad(Ljava/lang/Object;,0)#6
soot.util.HashChain.clear()V#LocalLoad(Ljava/lang/Object;,0)#7
soot.util.HashChain.clear()V#Constant(L;,null)#8
soot.util.HashChain.clear()V#Dup(1,1)#9
soot.util.HashChain.clear()V#Put(Ljava/lang/Object;,NONSTATIC,Lsoot/util/HashChain;,lastItem)#10
soot.util.HashChain.clear()V#Put(Ljava/lang/Object;,NONSTATIC,Lsoot/util/HashChain;,firstItem)#11
soot.util.HashChain.clear()V#LocalLoad(Ljava/lang/Object;,0)#12
soot.util.HashChain.clear()V#Get(Ljava/util/HashMap;,NONSTATIC,Lsoot/util/HashChain;,map)#13
soot.util.HashChain.clear()V#Invoke(VIRTUAL,Ljava/util/HashMap;,clear,()V)#14
soot.util.HashChain.clear()V#Return(V)#15
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#195
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#196
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,11)#197
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(268)#198
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#268
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#269
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#270
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,199)#271
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#199
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#200
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/Local;)#201
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,12)#202
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#203
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#204
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#205
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,13)#206
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#207
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#208
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#209
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Ljava/lang/Integer;)#210
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#211
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(I,14)#212
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Lsoot/jimple/GroupIntPair;,0)#213
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#214
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,13)#215
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(I,14)#216
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Lsoot/jimple/GroupIntPair;,<init>,(Ljava/lang/Object;I)V)#217
soot.jimple.GroupIntPair.<init>(Ljava/lang/Object;I)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.GroupIntPair.<init>(Ljava/lang/Object;I)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.jimple.GroupIntPair.<init>(Ljava/lang/Object;I)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.GroupIntPair.<init>(Ljava/lang/Object;I)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.jimple.GroupIntPair.<init>(Ljava/lang/Object;I)V#Put(Ljava/lang/Object;,NONSTATIC,Lsoot/jimple/GroupIntPair;,group)#4
soot.jimple.GroupIntPair.<init>(Ljava/lang/Object;I)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.jimple.GroupIntPair.<init>(Ljava/lang/Object;I)V#LocalLoad(I,2)#6
soot.jimple.GroupIntPair.<init>(Ljava/lang/Object;I)V#Put(I,NONSTATIC,Lsoot/jimple/GroupIntPair;,x)#7
soot.jimple.GroupIntPair.<init>(Ljava/lang/Object;I)V#Return(V)#8
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,15)#218
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#219
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,15)#220
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#221
soot.jimple.GroupIntPair.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.GroupIntPair.hashCode()I#Get(Ljava/lang/Object;,NONSTATIC,Lsoot/jimple/GroupIntPair;,group)#1
soot.jimple.GroupIntPair.hashCode()I#Invoke(VIRTUAL,Ljava/lang/Object;,hashCode,()I)#2
soot.jimple.GroupIntPair.hashCode()I#Constant(I,1013)#3
soot.jimple.GroupIntPair.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#4
soot.jimple.GroupIntPair.hashCode()I#Get(I,NONSTATIC,Lsoot/jimple/GroupIntPair;,x)#5
soot.jimple.GroupIntPair.hashCode()I#BinaryOp(I,mul)#6
soot.jimple.GroupIntPair.hashCode()I#BinaryOp(I,add)#7
soot.jimple.GroupIntPair.hashCode()I#Return(I)#8
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#222
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,230)#223
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#230
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Local;,clone,()Ljava/lang/Object;)#231
soot.baf.internal.BafLocal.clone()Ljava/lang/Object;#New(Lsoot/baf/internal/BafLocal;,0)#0
soot.baf.internal.BafLocal.clone()Ljava/lang/Object;#Dup(1,0)#1
soot.baf.internal.BafLocal.clone()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#2
soot.baf.internal.BafLocal.clone()Ljava/lang/Object;#Get(Ljava/lang/String;,NONSTATIC,Lsoot/baf/internal/BafLocal;,name)#3
soot.baf.internal.BafLocal.clone()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#4
soot.baf.internal.BafLocal.clone()Ljava/lang/Object;#Get(Lsoot/Type;,NONSTATIC,Lsoot/baf/internal/BafLocal;,type)#5
soot.baf.internal.BafLocal.clone()Ljava/lang/Object;#Invoke(SPECIAL,Lsoot/baf/internal/BafLocal;,<init>,(Ljava/lang/String;Lsoot/Type;)V)#6
soot.baf.internal.BafLocal.clone()Ljava/lang/Object;#Return(Ljava/lang/Object;)#7
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/Local;)#232
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,16)#233
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,16)#234
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,13)#235
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/Type;)#236
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Local;,setType,(Lsoot/Type;)V)#237
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,16)#238
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Local;,getName,()Ljava/lang/String;)#239
soot.baf.internal.BafLocal.getName()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BafLocal.getName()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsoot/baf/internal/BafLocal;,name)#1
soot.baf.internal.BafLocal.getName()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(Ljava/lang/String;,"#")#240
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/String;,indexOf,(Ljava/lang/String;)I)#241
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(I,17)#242
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(I,17)#243
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,-1)#244
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,253)#245
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#253
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,15)#254
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,16)#255
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#256
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Pop(1)#257
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#258
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Body;,getLocals,()Lsoot/util/Chain;)#259
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,16)#260
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/util/Chain;,add,(Ljava/lang/Object;)Z)#261
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Pop(1)#262
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#263
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#264
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,16)#265
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#266
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Pop(1)#267
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#272
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Body;,getUnits,()Lsoot/PatchingChain;)#273
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/PatchingChain;,iterator,()Ljava/util/Iterator;)#274
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,9)#275
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(337)#276
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#337
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#338
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#339
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,277)#340
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#277
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#278
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/Unit;)#279
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,10)#280
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#281
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Unit;,getUseBoxes,()Ljava/util/List;)#282
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#283
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,11)#284
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(305)#285
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#305
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#306
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#307
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,286)#308
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#286
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#287
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/ValueBox;)#288
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,12)#289
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#290
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#291
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Instanceof(Lsoot/Local;)#292
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#293
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,305)#294
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#309
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Unit;,getDefBoxes,()Ljava/util/List;)#310
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#311
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,11)#312
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(333)#313
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#333
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#334
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#335
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,314)#336
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#314
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#315
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/ValueBox;)#316
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,12)#317
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#318
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#319
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Instanceof(Lsoot/Local;)#320
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#321
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,333)#322
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#323
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#324
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/Local;)#325
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,13)#326
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#327
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#328
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,13)#329
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#330
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/Local;)#331
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/ValueBox;,setValue,(Lsoot/Value;)V)#332
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#295
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#296
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/Local;)#297
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,13)#298
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#299
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#300
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,13)#301
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#302
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/Local;)#303
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/ValueBox;,setValue,(Lsoot/Value;)V)#304
soot.toolkits.scalar.LocalPacker.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Return(V)#341
soot.baf.BafBody.<init>(Lsoot/Body;Ljava/util/Map;)V#Return(V)#203
soot.baf.Baf.newBody(Lsoot/Body;)Lsoot/baf/BafBody;#Return(Ljava/lang/Object;)#7
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,setActiveBody,(Lsoot/Body;)V)#247
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#248
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Constant(Ljava/lang/String;,"bop")#249
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/PackManager;,getPack,(Ljava/lang/String;)Lsoot/Pack;)#250
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,12)#251
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,getActiveBody,()Lsoot/Body;)#252
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/Pack;,apply,(Lsoot/Body;)V)#253
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#665
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"bop")#666
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#667
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#668
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,672)#669
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:false ")#670
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#671
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#254
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Constant(Ljava/lang/String;,"tag")#255
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/PackManager;,getPack,(Ljava/lang/String;)Lsoot/Pack;)#256
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,12)#257
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,getActiveBody,()Lsoot/Body;)#258
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/Pack;,apply,(Lsoot/Body;)V)#259
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#672
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"tag")#673
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#674
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#675
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,679)#676
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:true ")#677
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#678
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#679
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"tag.ln")#680
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#681
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#682
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,686)#683
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:true ")#684
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#685
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/baf/BafBody;)#1
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,4)#2
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/tagkit/TagAggregator;,tags)#4
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,clear,()V)#5
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#6
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/tagkit/TagAggregator;,units)#7
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,clear,()V)#8
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#9
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/baf/BafBody;,getUnits,()Lsoot/PatchingChain;)#10
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/PatchingChain;,iterator,()Ljava/util/Iterator;)#11
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,5)#12
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(40)#13
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#40
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#41
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#42
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,14)#43
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#14
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#15
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/Unit;)#16
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,6)#17
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#18
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/Unit;,getTags,()Ljava/util/List;)#19
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#20
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,7)#21
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Goto(36)#22
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#36
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#37
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#38
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,23)#39
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#23
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#24
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/tagkit/Tag;)#25
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,8)#26
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#27
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#28
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/tagkit/TagAggregator;,wantTag,(Lsoot/tagkit/Tag;)Z)#29
soot.tagkit.LineNumberTagAggregator.wantTag(Lsoot/tagkit/Tag;)Z#LocalLoad(Ljava/lang/Object;,1)#0
soot.tagkit.LineNumberTagAggregator.wantTag(Lsoot/tagkit/Tag;)Z#Instanceof(Lsoot/tagkit/LineNumberTag;)#1
soot.tagkit.LineNumberTagAggregator.wantTag(Lsoot/tagkit/Tag;)Z#Constant(I,0)#2
soot.tagkit.LineNumberTagAggregator.wantTag(Lsoot/tagkit/Tag;)Z#ConditionalBranch(I,ne,10)#3
soot.tagkit.LineNumberTagAggregator.wantTag(Lsoot/tagkit/Tag;)Z#Constant(I,1)#10
soot.tagkit.LineNumberTagAggregator.wantTag(Lsoot/tagkit/Tag;)Z#Return(I)#11
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#30
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,36)#31
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#32
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#33
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#34
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/tagkit/TagAggregator;,considerTag,(Lsoot/tagkit/Tag;Lsoot/Unit;)V)#35
soot.tagkit.LineNumberTagAggregator.considerTag(Lsoot/tagkit/Tag;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,2)#0
soot.tagkit.LineNumberTagAggregator.considerTag(Lsoot/tagkit/Tag;Lsoot/Unit;)V#Instanceof(Lsoot/IdentityUnit;)#1
soot.tagkit.LineNumberTagAggregator.considerTag(Lsoot/tagkit/Tag;Lsoot/Unit;)V#Constant(I,0)#2
soot.tagkit.LineNumberTagAggregator.considerTag(Lsoot/tagkit/Tag;Lsoot/Unit;)V#ConditionalBranch(I,ne,8)#3
soot.tagkit.LineNumberTagAggregator.considerTag(Lsoot/tagkit/Tag;Lsoot/Unit;)V#Return(V)#8
soot.tagkit.LineNumberTagAggregator.considerTag(Lsoot/tagkit/Tag;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,0)#4
soot.tagkit.LineNumberTagAggregator.considerTag(Lsoot/tagkit/Tag;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,1)#5
soot.tagkit.LineNumberTagAggregator.considerTag(Lsoot/tagkit/Tag;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,2)#6
soot.tagkit.LineNumberTagAggregator.considerTag(Lsoot/tagkit/Tag;Lsoot/Unit;)V#Invoke(SPECIAL,Lsoot/tagkit/FirstTagAggregator;,considerTag,(Lsoot/tagkit/Tag;Lsoot/Unit;)V)#7
soot.tagkit.FirstTagAggregator.considerTag(Lsoot/tagkit/Tag;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.tagkit.FirstTagAggregator.considerTag(Lsoot/tagkit/Tag;Lsoot/Unit;)V#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/tagkit/FirstTagAggregator;,units)#1
soot.tagkit.FirstTagAggregator.considerTag(Lsoot/tagkit/Tag;Lsoot/Unit;)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,size,()I)#2
soot.tagkit.FirstTagAggregator.considerTag(Lsoot/tagkit/Tag;Lsoot/Unit;)V#Constant(I,0)#3
soot.tagkit.FirstTagAggregator.considerTag(Lsoot/tagkit/Tag;Lsoot/Unit;)V#ConditionalBranch(I,le,11)#4
soot.tagkit.FirstTagAggregator.considerTag(Lsoot/tagkit/Tag;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.tagkit.FirstTagAggregator.considerTag(Lsoot/tagkit/Tag;Lsoot/Unit;)V#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/tagkit/FirstTagAggregator;,units)#12
soot.tagkit.FirstTagAggregator.considerTag(Lsoot/tagkit/Tag;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,2)#13
soot.tagkit.FirstTagAggregator.considerTag(Lsoot/tagkit/Tag;Lsoot/Unit;)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,add,(Ljava/lang/Object;)Z)#14
soot.tagkit.FirstTagAggregator.considerTag(Lsoot/tagkit/Tag;Lsoot/Unit;)V#Pop(1)#15
soot.tagkit.FirstTagAggregator.considerTag(Lsoot/tagkit/Tag;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,0)#16
soot.tagkit.FirstTagAggregator.considerTag(Lsoot/tagkit/Tag;Lsoot/Unit;)V#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/tagkit/FirstTagAggregator;,tags)#17
soot.tagkit.FirstTagAggregator.considerTag(Lsoot/tagkit/Tag;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,1)#18
soot.tagkit.FirstTagAggregator.considerTag(Lsoot/tagkit/Tag;Lsoot/Unit;)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,add,(Ljava/lang/Object;)Z)#19
soot.tagkit.FirstTagAggregator.considerTag(Lsoot/tagkit/Tag;Lsoot/Unit;)V#Pop(1)#20
soot.tagkit.FirstTagAggregator.considerTag(Lsoot/tagkit/Tag;Lsoot/Unit;)V#Return(V)#21
soot.tagkit.FirstTagAggregator.considerTag(Lsoot/tagkit/Tag;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.tagkit.FirstTagAggregator.considerTag(Lsoot/tagkit/Tag;Lsoot/Unit;)V#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/tagkit/FirstTagAggregator;,units)#6
soot.tagkit.FirstTagAggregator.considerTag(Lsoot/tagkit/Tag;Lsoot/Unit;)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,getLast,()Ljava/lang/Object;)#7
soot.tagkit.FirstTagAggregator.considerTag(Lsoot/tagkit/Tag;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,2)#8
soot.tagkit.FirstTagAggregator.considerTag(Lsoot/tagkit/Tag;Lsoot/Unit;)V#ConditionalBranch(Ljava/lang/Object;,ne,11)#9
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#44
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/tagkit/TagAggregator;,units)#45
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,size,()I)#46
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#47
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,le,66)#48
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#49
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Lsoot/tagkit/CodeAttribute;,0)#50
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#51
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#52
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/tagkit/TagAggregator;,aggregatedName,()Ljava/lang/String;)#53
soot.tagkit.LineNumberTagAggregator.aggregatedName()Ljava/lang/String;#Constant(Ljava/lang/String;,"LineNumberTable")#0
soot.tagkit.LineNumberTagAggregator.aggregatedName()Ljava/lang/String;#Return(Ljava/lang/Object;)#1
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/util/LinkedList;,0)#54
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#55
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#56
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/tagkit/TagAggregator;,units)#57
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,(Ljava/util/Collection;)V)#58
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/util/LinkedList;,0)#59
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#60
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#61
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Get(Ljava/util/LinkedList;,NONSTATIC,Lsoot/tagkit/TagAggregator;,tags)#62
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,(Ljava/util/Collection;)V)#63
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Lsoot/tagkit/CodeAttribute;,<init>,(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V)#64
soot.tagkit.CodeAttribute.<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.tagkit.CodeAttribute.<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V#Invoke(SPECIAL,Lsoot/tagkit/JasminAttribute;,<init>,()V)#1
soot.tagkit.JasminAttribute.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.tagkit.JasminAttribute.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.tagkit.JasminAttribute.<init>()V#Return(V)#2
soot.tagkit.CodeAttribute.<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.tagkit.CodeAttribute.<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V#Constant(Ljava/lang/String;,"CodeAtribute")#3
soot.tagkit.CodeAttribute.<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/tagkit/CodeAttribute;,name)#4
soot.tagkit.CodeAttribute.<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.tagkit.CodeAttribute.<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#6
soot.tagkit.CodeAttribute.<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V#Put(Ljava/lang/String;,NONSTATIC,Lsoot/tagkit/CodeAttribute;,name)#7
soot.tagkit.CodeAttribute.<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.tagkit.CodeAttribute.<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#9
soot.tagkit.CodeAttribute.<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/tagkit/CodeAttribute;,mUnits)#10
soot.tagkit.CodeAttribute.<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.tagkit.CodeAttribute.<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#12
soot.tagkit.CodeAttribute.<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/tagkit/CodeAttribute;,mTags)#13
soot.tagkit.CodeAttribute.<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V#Return(V)#14
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Body;,addTag,(Lsoot/tagkit/Tag;)V)#65
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#66
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/tagkit/TagAggregator;,fini,()V)#67
soot.tagkit.TagAggregator.fini()V#Return(V)#0
soot.tagkit.TagAggregator.internalTransform(Lsoot/Body;Ljava/lang/String;Ljava/util/Map;)V#Return(V)#68
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#686
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"tag.an")#687
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#688
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#689
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,693)#690
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:false ")#691
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#692
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#693
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"tag.dep")#694
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#695
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#696
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,700)#697
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:false ")#698
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#699
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#700
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"tag.fieldrw")#701
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#702
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#703
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,707)#704
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"enabled:false ")#705
soot.options.Options.getDefaultOptionsForPhase(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#706
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#260
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/options/Options;,validate,()Z)#261
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Constant(I,0)#262
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#ConditionalBranch(I,eq,267)#263
soot.jimple.internal.JAssignStmt.getUnitBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JAssignStmt.getUnitBoxes()Ljava/util/List;#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt;,rightBox)#1
soot.jimple.internal.JAssignStmt.getUnitBoxes()Ljava/util/List;#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#2
soot.jimple.internal.JAssignStmt.getUnitBoxes()Ljava/util/List;#LocalStore(Ljava/lang/Object;,1)#3
soot.jimple.internal.JAssignStmt.getUnitBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#4
soot.jimple.internal.JAssignStmt.getUnitBoxes()Ljava/util/List;#Instanceof(Lsoot/UnitBoxOwner;)#5
soot.jimple.internal.JAssignStmt.getUnitBoxes()Ljava/util/List;#Constant(I,0)#6
soot.jimple.internal.JAssignStmt.getUnitBoxes()Ljava/util/List;#ConditionalBranch(I,eq,12)#7
soot.jimple.internal.JAssignStmt.getUnitBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#12
soot.jimple.internal.JAssignStmt.getUnitBoxes()Ljava/util/List;#Invoke(SPECIAL,Lsoot/jimple/internal/AbstractDefinitionStmt;,getUnitBoxes,()Ljava/util/List;)#13
soot.jimple.internal.JAssignStmt.getUnitBoxes()Ljava/util/List;#Return(Ljava/lang/Object;)#14
soot.jimple.JimpleBody.validateIdentityStatements()V#LocalLoad(Ljava/lang/Object;,7)#56
soot.jimple.JimpleBody.validateIdentityStatements()V#Invoke(INTERFACE,Lsoot/jimple/IdentityStmt;,getRightOp,()Lsoot/Value;)#57
soot.jimple.JimpleBody.validateIdentityStatements()V#Instanceof(Lsoot/jimple/ParameterRef;)#58
soot.jimple.JimpleBody.validateIdentityStatements()V#Constant(I,0)#59
soot.jimple.JimpleBody.validateIdentityStatements()V#ConditionalBranch(I,eq,69)#60
soot.jimple.JimpleBody.validateIdentityStatements()V#LocalLoad(I,3)#61
soot.jimple.JimpleBody.validateIdentityStatements()V#Constant(I,0)#62
soot.jimple.JimpleBody.validateIdentityStatements()V#ConditionalBranch(I,eq,74)#63
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#15
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Instanceof(Lsoot/jimple/ParameterRef;)#16
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Constant(I,0)#17
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#ConditionalBranch(I,eq,29)#18
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(STATIC,Lsoot/baf/Baf;,v,()Lsoot/baf/Baf;)#19
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#20
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#CheckCast(Lsoot/jimple/ParameterRef;)#21
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/jimple/ParameterRef;,getType,()Lsoot/Type;)#22
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#23
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#CheckCast(Lsoot/jimple/ParameterRef;)#24
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/jimple/ParameterRef;,getIndex,()I)#25
soot.jimple.ParameterRef.getIndex()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.ParameterRef.getIndex()I#Get(I,NONSTATIC,Lsoot/jimple/ParameterRef;,n)#1
soot.jimple.ParameterRef.getIndex()I#Return(I)#2
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/baf/Baf;,newParameterRef,(Lsoot/Type;I)Lsoot/jimple/ParameterRef;)#26
soot.baf.Baf.newParameterRef(Lsoot/Type;I)Lsoot/jimple/ParameterRef;#New(Lsoot/jimple/ParameterRef;,0)#0
soot.baf.Baf.newParameterRef(Lsoot/Type;I)Lsoot/jimple/ParameterRef;#Dup(1,0)#1
soot.baf.Baf.newParameterRef(Lsoot/Type;I)Lsoot/jimple/ParameterRef;#LocalLoad(Ljava/lang/Object;,1)#2
soot.baf.Baf.newParameterRef(Lsoot/Type;I)Lsoot/jimple/ParameterRef;#LocalLoad(I,2)#3
soot.baf.Baf.newParameterRef(Lsoot/Type;I)Lsoot/jimple/ParameterRef;#Invoke(SPECIAL,Lsoot/jimple/ParameterRef;,<init>,(Lsoot/Type;I)V)#4
soot.baf.Baf.newParameterRef(Lsoot/Type;I)Lsoot/jimple/ParameterRef;#Return(Ljava/lang/Object;)#5
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,4)#27
soot.jimple.internal.JIdentityStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Goto(66)#28
soot.jimple.internal.JAssignStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JAssignStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/jimple/internal/JAssignStmt;,getLeftOp,()Lsoot/Value;)#1
soot.jimple.internal.JAssignStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,3)#2
soot.jimple.internal.JAssignStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.jimple.internal.JAssignStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/jimple/internal/JAssignStmt;,getRightOp,()Lsoot/Value;)#4
soot.jimple.internal.JAssignStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,4)#5
soot.jimple.internal.JAssignStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#6
soot.jimple.internal.JAssignStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Instanceof(Lsoot/Local;)#7
soot.jimple.internal.JAssignStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Constant(I,0)#8
soot.jimple.internal.JAssignStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#ConditionalBranch(I,eq,114)#9
soot.jimple.internal.JAssignStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,4)#10
soot.jimple.internal.JAssignStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Instanceof(Lsoot/jimple/AddExpr;)#11
soot.jimple.internal.JAssignStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Constant(I,0)#12
soot.jimple.internal.JAssignStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#ConditionalBranch(I,ne,18)#13
soot.jimple.internal.JAssignStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,4)#14
soot.jimple.internal.JAssignStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Instanceof(Lsoot/jimple/SubExpr;)#15
soot.jimple.internal.JAssignStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Constant(I,0)#16
soot.jimple.internal.JAssignStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#ConditionalBranch(I,eq,114)#17
soot.jimple.internal.JAssignStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#114
soot.jimple.internal.JAssignStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#115
soot.jimple.internal.JAssignStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/jimple/JimpleToBafContext;,setCurrentUnit,(Lsoot/Unit;)V)#116
soot.jimple.internal.JAssignStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#117
soot.jimple.internal.JAssignStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#New(Lsoot/jimple/internal/JAssignStmt$1;,0)#118
soot.jimple.internal.JAssignStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Dup(1,0)#119
soot.jimple.internal.JAssignStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#120
soot.jimple.internal.JAssignStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#121
soot.jimple.internal.JAssignStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#122
soot.jimple.internal.JAssignStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,4)#123
soot.jimple.internal.JAssignStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(SPECIAL,Lsoot/jimple/internal/JAssignStmt$1;,<init>,(Lsoot/jimple/internal/JAssignStmt;Lsoot/jimple/JimpleToBafContext;Ljava/util/List;Lsoot/Value;)V)#124
soot.jimple.internal.JAssignStmt$1.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/jimple/JimpleToBafContext;Ljava/util/List;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JAssignStmt$1.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/jimple/JimpleToBafContext;Ljava/util/List;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.jimple.internal.JAssignStmt$1.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/jimple/JimpleToBafContext;Ljava/util/List;Lsoot/Value;)V#Put(Lsoot/jimple/internal/JAssignStmt;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt$1;,this$0)#2
soot.jimple.internal.JAssignStmt$1.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/jimple/JimpleToBafContext;Ljava/util/List;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.jimple.internal.JAssignStmt$1.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/jimple/JimpleToBafContext;Ljava/util/List;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,2)#4
soot.jimple.internal.JAssignStmt$1.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/jimple/JimpleToBafContext;Ljava/util/List;Lsoot/Value;)V#Put(Lsoot/jimple/JimpleToBafContext;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt$1;,val$context)#5
soot.jimple.internal.JAssignStmt$1.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/jimple/JimpleToBafContext;Ljava/util/List;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#6
soot.jimple.internal.JAssignStmt$1.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/jimple/JimpleToBafContext;Ljava/util/List;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,3)#7
soot.jimple.internal.JAssignStmt$1.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/jimple/JimpleToBafContext;Ljava/util/List;Lsoot/Value;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt$1;,val$out)#8
soot.jimple.internal.JAssignStmt$1.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/jimple/JimpleToBafContext;Ljava/util/List;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#9
soot.jimple.internal.JAssignStmt$1.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/jimple/JimpleToBafContext;Ljava/util/List;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,4)#10
soot.jimple.internal.JAssignStmt$1.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/jimple/JimpleToBafContext;Ljava/util/List;Lsoot/Value;)V#Put(Lsoot/Value;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt$1;,val$rvalue)#11
soot.jimple.internal.JAssignStmt$1.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/jimple/JimpleToBafContext;Ljava/util/List;Lsoot/Value;)V#LocalLoad(Ljava/lang/Object;,0)#12
soot.jimple.internal.JAssignStmt$1.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/jimple/JimpleToBafContext;Ljava/util/List;Lsoot/Value;)V#Invoke(SPECIAL,Lsoot/jimple/AbstractJimpleValueSwitch;,<init>,()V)#13
soot.jimple.AbstractJimpleValueSwitch.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.AbstractJimpleValueSwitch.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.jimple.AbstractJimpleValueSwitch.<init>()V#Return(V)#2
soot.jimple.internal.JAssignStmt$1.<init>(Lsoot/jimple/internal/JAssignStmt;Lsoot/jimple/JimpleToBafContext;Ljava/util/List;Lsoot/Value;)V#Return(V)#14
soot.jimple.internal.JAssignStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Lsoot/Value;,apply,(Lsoot/util/Switch;)V)#125
soot.jimple.internal.JimpleLocal.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.jimple.internal.JimpleLocal.apply(Lsoot/util/Switch;)V#CheckCast(Lsoot/jimple/JimpleValueSwitch;)#1
soot.jimple.internal.JimpleLocal.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.internal.JimpleLocal.apply(Lsoot/util/Switch;)V#Invoke(INTERFACE,Lsoot/jimple/JimpleValueSwitch;,caseLocal,(Lsoot/Local;)V)#3
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#Get(Lsoot/Value;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt$1;,val$rvalue)#1
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#CheckCast(Lsoot/jimple/ConvertToBaf;)#2
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#Get(Lsoot/jimple/JimpleToBafContext;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt$1;,val$context)#4
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#Get(Ljava/util/List;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt$1;,val$out)#6
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#Invoke(INTERFACE,Lsoot/jimple/ConvertToBaf;,convertToBaf,(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V)#7
soot.jimple.internal.JNewExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#0
soot.jimple.internal.JNewExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(STATIC,Lsoot/baf/Baf;,v,()Lsoot/baf/Baf;)#1
soot.jimple.internal.JNewExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.internal.JNewExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/jimple/internal/JNewExpr;,getBaseType,()Lsoot/RefType;)#3
soot.jimple.internal.JNewExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/baf/Baf;,newNewInst,(Lsoot/RefType;)Lsoot/baf/NewInst;)#4
soot.baf.Baf.newNewInst(Lsoot/RefType;)Lsoot/baf/NewInst;#New(Lsoot/baf/internal/BNewInst;,0)#0
soot.baf.Baf.newNewInst(Lsoot/RefType;)Lsoot/baf/NewInst;#Dup(1,0)#1
soot.baf.Baf.newNewInst(Lsoot/RefType;)Lsoot/baf/NewInst;#LocalLoad(Ljava/lang/Object;,1)#2
soot.baf.Baf.newNewInst(Lsoot/RefType;)Lsoot/baf/NewInst;#Invoke(SPECIAL,Lsoot/baf/internal/BNewInst;,<init>,(Lsoot/RefType;)V)#3
soot.baf.internal.BNewInst.<init>(Lsoot/RefType;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BNewInst.<init>(Lsoot/RefType;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.baf.internal.BNewInst.<init>(Lsoot/RefType;)V#Invoke(SPECIAL,Lsoot/baf/internal/AbstractRefTypeInst;,<init>,(Lsoot/RefType;)V)#2
soot.baf.internal.AbstractRefTypeInst.<init>(Lsoot/RefType;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.AbstractRefTypeInst.<init>(Lsoot/RefType;)V#Invoke(SPECIAL,Lsoot/baf/internal/AbstractInst;,<init>,()V)#1
soot.baf.internal.AbstractRefTypeInst.<init>(Lsoot/RefType;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.baf.internal.AbstractRefTypeInst.<init>(Lsoot/RefType;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.baf.internal.AbstractRefTypeInst.<init>(Lsoot/RefType;)V#Put(Lsoot/Type;,NONSTATIC,Lsoot/baf/internal/AbstractRefTypeInst;,opType)#4
soot.baf.internal.AbstractRefTypeInst.<init>(Lsoot/RefType;)V#Return(V)#5
soot.baf.internal.BNewInst.<init>(Lsoot/RefType;)V#Return(V)#3
soot.baf.Baf.newNewInst(Lsoot/RefType;)Lsoot/baf/NewInst;#Return(Ljava/lang/Object;)#4
soot.jimple.internal.JNewExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Dup(1,0)#5
soot.jimple.internal.JNewExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,3)#6
soot.jimple.internal.JNewExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#7
soot.jimple.internal.JNewExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Pop(1)#8
soot.jimple.internal.JNewExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#9
soot.jimple.internal.JNewExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/jimple/JimpleToBafContext;,getCurrentUnit,()Lsoot/Unit;)#10
soot.jimple.internal.JNewExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,4)#11
soot.jimple.internal.JNewExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,4)#12
soot.jimple.internal.JNewExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Lsoot/Unit;,getTags,()Ljava/util/List;)#13
soot.jimple.internal.JNewExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#14
soot.jimple.internal.JNewExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,5)#15
soot.jimple.internal.JNewExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Goto(22)#16
soot.jimple.internal.JNewExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,5)#22
soot.jimple.internal.JNewExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#23
soot.jimple.internal.JNewExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Constant(I,0)#24
soot.jimple.internal.JNewExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#ConditionalBranch(I,ne,17)#25
soot.jimple.internal.JNewExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#17
soot.jimple.internal.JNewExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,5)#18
soot.jimple.internal.JNewExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#19
soot.jimple.internal.JNewExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#CheckCast(Lsoot/tagkit/Tag;)#20
soot.jimple.internal.JNewExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Lsoot/Unit;,addTag,(Lsoot/tagkit/Tag;)V)#21
soot.jimple.internal.JNewExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Return(V)#26
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#Invoke(STATIC,Lsoot/baf/Baf;,v,()Lsoot/baf/Baf;)#8
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,1)#9
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#Invoke(INTERFACE,Lsoot/Local;,getType,()Lsoot/Type;)#10
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#Get(Lsoot/jimple/JimpleToBafContext;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt$1;,val$context)#12
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,1)#13
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#Invoke(VIRTUAL,Lsoot/jimple/JimpleToBafContext;,getBafLocalOfJimpleLocal,(Lsoot/Local;)Lsoot/Local;)#14
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#Invoke(VIRTUAL,Lsoot/baf/Baf;,newStoreInst,(Lsoot/Type;Lsoot/Local;)Lsoot/baf/StoreInst;)#15
soot.baf.Baf.newStoreInst(Lsoot/Type;Lsoot/Local;)Lsoot/baf/StoreInst;#New(Lsoot/baf/internal/BStoreInst;,0)#0
soot.baf.Baf.newStoreInst(Lsoot/Type;Lsoot/Local;)Lsoot/baf/StoreInst;#Dup(1,0)#1
soot.baf.Baf.newStoreInst(Lsoot/Type;Lsoot/Local;)Lsoot/baf/StoreInst;#LocalLoad(Ljava/lang/Object;,1)#2
soot.baf.Baf.newStoreInst(Lsoot/Type;Lsoot/Local;)Lsoot/baf/StoreInst;#LocalLoad(Ljava/lang/Object;,2)#3
soot.baf.Baf.newStoreInst(Lsoot/Type;Lsoot/Local;)Lsoot/baf/StoreInst;#Invoke(SPECIAL,Lsoot/baf/internal/BStoreInst;,<init>,(Lsoot/Type;Lsoot/Local;)V)#4
soot.baf.internal.BStoreInst.<init>(Lsoot/Type;Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BStoreInst.<init>(Lsoot/Type;Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.baf.internal.BStoreInst.<init>(Lsoot/Type;Lsoot/Local;)V#Invoke(SPECIAL,Lsoot/baf/internal/AbstractOpTypeInst;,<init>,(Lsoot/Type;)V)#2
soot.baf.internal.BStoreInst.<init>(Lsoot/Type;Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.baf.internal.BStoreInst.<init>(Lsoot/Type;Lsoot/Local;)V#New(Lsoot/baf/internal/BafLocalBox;,0)#4
soot.baf.internal.BStoreInst.<init>(Lsoot/Type;Lsoot/Local;)V#Dup(1,0)#5
soot.baf.internal.BStoreInst.<init>(Lsoot/Type;Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,2)#6
soot.baf.internal.BStoreInst.<init>(Lsoot/Type;Lsoot/Local;)V#Invoke(SPECIAL,Lsoot/baf/internal/BafLocalBox;,<init>,(Lsoot/Value;)V)#7
soot.baf.internal.BStoreInst.<init>(Lsoot/Type;Lsoot/Local;)V#Put(Lsoot/ValueBox;,NONSTATIC,Lsoot/baf/internal/BStoreInst;,localBox)#8
soot.baf.internal.BStoreInst.<init>(Lsoot/Type;Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,0)#9
soot.baf.internal.BStoreInst.<init>(Lsoot/Type;Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,0)#10
soot.baf.internal.BStoreInst.<init>(Lsoot/Type;Lsoot/Local;)V#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/baf/internal/BStoreInst;,localBox)#11
soot.baf.internal.BStoreInst.<init>(Lsoot/Type;Lsoot/Local;)V#Invoke(STATIC,Ljava/util/Collections;,singletonList,(Ljava/lang/Object;)Ljava/util/List;)#12
soot.baf.internal.BStoreInst.<init>(Lsoot/Type;Lsoot/Local;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/baf/internal/BStoreInst;,defBoxes)#13
soot.baf.internal.BStoreInst.<init>(Lsoot/Type;Lsoot/Local;)V#Return(V)#14
soot.baf.Baf.newStoreInst(Lsoot/Type;Lsoot/Local;)Lsoot/baf/StoreInst;#Return(Ljava/lang/Object;)#5
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#LocalStore(Ljava/lang/Object;,2)#16
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,0)#17
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#Get(Lsoot/jimple/internal/JAssignStmt;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt$1;,this$0)#18
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#Invoke(VIRTUAL,Lsoot/jimple/internal/JAssignStmt;,getTags,()Ljava/util/List;)#19
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#20
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#LocalStore(Ljava/lang/Object;,3)#21
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#Goto(28)#22
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,3)#28
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#29
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#Constant(I,0)#30
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#ConditionalBranch(I,ne,23)#31
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,2)#23
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,3)#24
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#25
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#CheckCast(Lsoot/tagkit/Tag;)#26
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#Invoke(INTERFACE,Lsoot/Unit;,addTag,(Lsoot/tagkit/Tag;)V)#27
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,0)#32
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#Get(Ljava/util/List;,NONSTATIC,Lsoot/jimple/internal/JAssignStmt$1;,val$out)#33
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#LocalLoad(Ljava/lang/Object;,2)#34
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#35
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#Pop(1)#36
soot.jimple.internal.JAssignStmt$1.caseLocal(Lsoot/Local;)V#Return(V)#37
soot.jimple.internal.JimpleLocal.apply(Lsoot/util/Switch;)V#Return(V)#4
soot.jimple.internal.JAssignStmt.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Return(V)#126
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/jimple/internal/AbstractInterfaceInvokeExpr;,getBase,()Lsoot/Value;)#1
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#CheckCast(Lsoot/jimple/ConvertToBaf;)#2
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#4
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Lsoot/jimple/ConvertToBaf;,convertToBaf,(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V)#5
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#6
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Get([Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/AbstractInterfaceInvokeExpr;,argBoxes)#7
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Dup(1,0)#8
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,6)#9
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#ArrayLength()#10
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(I,5)#11
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Constant(I,0)#12
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(I,4)#13
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Goto(29)#14
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(I,4)#29
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(I,5)#30
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#ConditionalBranch(I,lt,15)#31
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#15
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(I,4)#16
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#17
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,3)#18
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#19
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#20
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#CheckCast(Lsoot/jimple/ConvertToBaf;)#21
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#22
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#23
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Lsoot/jimple/ConvertToBaf;,convertToBaf,(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V)#24
soot.jimple.Constant.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(STATIC,Lsoot/baf/Baf;,v,()Lsoot/baf/Baf;)#0
soot.jimple.Constant.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#1
soot.jimple.Constant.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/baf/Baf;,newPushInst,(Lsoot/jimple/Constant;)Lsoot/baf/PushInst;)#2
soot.baf.Baf.newPushInst(Lsoot/jimple/Constant;)Lsoot/baf/PushInst;#New(Lsoot/baf/internal/BPushInst;,0)#0
soot.baf.Baf.newPushInst(Lsoot/jimple/Constant;)Lsoot/baf/PushInst;#Dup(1,0)#1
soot.baf.Baf.newPushInst(Lsoot/jimple/Constant;)Lsoot/baf/PushInst;#LocalLoad(Ljava/lang/Object;,1)#2
soot.baf.Baf.newPushInst(Lsoot/jimple/Constant;)Lsoot/baf/PushInst;#Invoke(SPECIAL,Lsoot/baf/internal/BPushInst;,<init>,(Lsoot/jimple/Constant;)V)#3
soot.baf.internal.BPushInst.<init>(Lsoot/jimple/Constant;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BPushInst.<init>(Lsoot/jimple/Constant;)V#Invoke(SPECIAL,Lsoot/baf/internal/AbstractInst;,<init>,()V)#1
soot.baf.internal.BPushInst.<init>(Lsoot/jimple/Constant;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.baf.internal.BPushInst.<init>(Lsoot/jimple/Constant;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.baf.internal.BPushInst.<init>(Lsoot/jimple/Constant;)V#Put(Lsoot/jimple/Constant;,NONSTATIC,Lsoot/baf/internal/BPushInst;,constant)#4
soot.baf.internal.BPushInst.<init>(Lsoot/jimple/Constant;)V#Return(V)#5
soot.baf.Baf.newPushInst(Lsoot/jimple/Constant;)Lsoot/baf/PushInst;#Return(Ljava/lang/Object;)#4
soot.jimple.Constant.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,3)#3
soot.jimple.Constant.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#4
soot.jimple.Constant.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#5
soot.jimple.Constant.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#6
soot.jimple.Constant.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Pop(1)#7
soot.jimple.Constant.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#8
soot.jimple.Constant.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/jimple/JimpleToBafContext;,getCurrentUnit,()Lsoot/Unit;)#9
soot.jimple.Constant.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Lsoot/Unit;,getTags,()Ljava/util/List;)#10
soot.jimple.Constant.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#11
soot.jimple.Constant.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,4)#12
soot.jimple.Constant.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Goto(19)#13
soot.jimple.Constant.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,4)#19
soot.jimple.Constant.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#20
soot.jimple.Constant.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Constant(I,0)#21
soot.jimple.Constant.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#ConditionalBranch(I,ne,14)#22
soot.jimple.Constant.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#14
soot.jimple.Constant.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,4)#15
soot.jimple.Constant.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#16
soot.jimple.Constant.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#CheckCast(Lsoot/tagkit/Tag;)#17
soot.jimple.Constant.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Lsoot/Unit;,addTag,(Lsoot/tagkit/Tag;)V)#18
soot.jimple.Constant.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Return(V)#23
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(I,4)#25
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Constant(I,1)#26
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#BinaryOp(I,add)#27
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(I,4)#28
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#32
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(STATIC,Lsoot/baf/Baf;,v,()Lsoot/baf/Baf;)#33
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#34
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Get(Lsoot/SootMethodRef;,NONSTATIC,Lsoot/jimple/internal/AbstractInterfaceInvokeExpr;,methodRef)#35
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#36
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Get(Lsoot/SootMethodRef;,NONSTATIC,Lsoot/jimple/internal/AbstractInterfaceInvokeExpr;,methodRef)#37
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(STATIC,Lsoot/jimple/internal/AbstractInterfaceInvokeExpr;,argCountOf,(Lsoot/SootMethodRef;)I)#38
soot.jimple.internal.AbstractInterfaceInvokeExpr.argCountOf(Lsoot/SootMethodRef;)I#Constant(I,0)#0
soot.jimple.internal.AbstractInterfaceInvokeExpr.argCountOf(Lsoot/SootMethodRef;)I#LocalStore(I,1)#1
soot.jimple.internal.AbstractInterfaceInvokeExpr.argCountOf(Lsoot/SootMethodRef;)I#LocalLoad(Ljava/lang/Object;,0)#2
soot.jimple.internal.AbstractInterfaceInvokeExpr.argCountOf(Lsoot/SootMethodRef;)I#Invoke(INTERFACE,Lsoot/SootMethodRef;,parameterTypes,()Ljava/util/List;)#3
soot.SootMethodRefImpl.parameterTypes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethodRefImpl.parameterTypes()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lsoot/SootMethodRefImpl;,parameterTypes)#1
soot.SootMethodRefImpl.parameterTypes()Ljava/util/List;#Return(Ljava/lang/Object;)#2
soot.jimple.internal.AbstractInterfaceInvokeExpr.argCountOf(Lsoot/SootMethodRef;)I#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#4
soot.jimple.internal.AbstractInterfaceInvokeExpr.argCountOf(Lsoot/SootMethodRef;)I#LocalStore(Ljava/lang/Object;,2)#5
soot.jimple.internal.AbstractInterfaceInvokeExpr.argCountOf(Lsoot/SootMethodRef;)I#Goto(16)#6
soot.jimple.internal.AbstractInterfaceInvokeExpr.argCountOf(Lsoot/SootMethodRef;)I#LocalLoad(Ljava/lang/Object;,2)#16
soot.jimple.internal.AbstractInterfaceInvokeExpr.argCountOf(Lsoot/SootMethodRef;)I#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#17
soot.jimple.internal.AbstractInterfaceInvokeExpr.argCountOf(Lsoot/SootMethodRef;)I#Constant(I,0)#18
soot.jimple.internal.AbstractInterfaceInvokeExpr.argCountOf(Lsoot/SootMethodRef;)I#ConditionalBranch(I,ne,7)#19
soot.jimple.internal.AbstractInterfaceInvokeExpr.argCountOf(Lsoot/SootMethodRef;)I#LocalLoad(Ljava/lang/Object;,2)#7
soot.jimple.internal.AbstractInterfaceInvokeExpr.argCountOf(Lsoot/SootMethodRef;)I#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#8
soot.jimple.internal.AbstractInterfaceInvokeExpr.argCountOf(Lsoot/SootMethodRef;)I#CheckCast(Lsoot/Type;)#9
soot.jimple.internal.AbstractInterfaceInvokeExpr.argCountOf(Lsoot/SootMethodRef;)I#LocalStore(Ljava/lang/Object;,3)#10
soot.jimple.internal.AbstractInterfaceInvokeExpr.argCountOf(Lsoot/SootMethodRef;)I#LocalLoad(I,1)#11
soot.jimple.internal.AbstractInterfaceInvokeExpr.argCountOf(Lsoot/SootMethodRef;)I#LocalLoad(Ljava/lang/Object;,3)#12
soot.jimple.internal.AbstractInterfaceInvokeExpr.argCountOf(Lsoot/SootMethodRef;)I#Invoke(STATIC,Lsoot/jimple/internal/AbstractInterfaceInvokeExpr;,sizeOfType,(Lsoot/Type;)I)#13
soot.jimple.internal.AbstractInterfaceInvokeExpr.sizeOfType(Lsoot/Type;)I#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.AbstractInterfaceInvokeExpr.sizeOfType(Lsoot/Type;)I#Instanceof(Lsoot/DoubleType;)#1
soot.jimple.internal.AbstractInterfaceInvokeExpr.sizeOfType(Lsoot/Type;)I#Constant(I,0)#2
soot.jimple.internal.AbstractInterfaceInvokeExpr.sizeOfType(Lsoot/Type;)I#ConditionalBranch(I,ne,8)#3
soot.jimple.internal.AbstractInterfaceInvokeExpr.sizeOfType(Lsoot/Type;)I#LocalLoad(Ljava/lang/Object;,0)#4
soot.jimple.internal.AbstractInterfaceInvokeExpr.sizeOfType(Lsoot/Type;)I#Instanceof(Lsoot/LongType;)#5
soot.jimple.internal.AbstractInterfaceInvokeExpr.sizeOfType(Lsoot/Type;)I#Constant(I,0)#6
soot.jimple.internal.AbstractInterfaceInvokeExpr.sizeOfType(Lsoot/Type;)I#ConditionalBranch(I,eq,10)#7
soot.jimple.internal.AbstractInterfaceInvokeExpr.sizeOfType(Lsoot/Type;)I#LocalLoad(Ljava/lang/Object;,0)#10
soot.jimple.internal.AbstractInterfaceInvokeExpr.sizeOfType(Lsoot/Type;)I#Instanceof(Lsoot/VoidType;)#11
soot.jimple.internal.AbstractInterfaceInvokeExpr.sizeOfType(Lsoot/Type;)I#Constant(I,0)#12
soot.jimple.internal.AbstractInterfaceInvokeExpr.sizeOfType(Lsoot/Type;)I#ConditionalBranch(I,eq,16)#13
soot.jimple.internal.AbstractInterfaceInvokeExpr.sizeOfType(Lsoot/Type;)I#Constant(I,1)#16
soot.jimple.internal.AbstractInterfaceInvokeExpr.sizeOfType(Lsoot/Type;)I#Return(I)#17
soot.jimple.internal.AbstractInterfaceInvokeExpr.argCountOf(Lsoot/SootMethodRef;)I#BinaryOp(I,add)#14
soot.jimple.internal.AbstractInterfaceInvokeExpr.argCountOf(Lsoot/SootMethodRef;)I#LocalStore(I,1)#15
soot.jimple.internal.AbstractInterfaceInvokeExpr.argCountOf(Lsoot/SootMethodRef;)I#LocalLoad(I,1)#20
soot.jimple.internal.AbstractInterfaceInvokeExpr.argCountOf(Lsoot/SootMethodRef;)I#Return(I)#21
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/baf/Baf;,newInterfaceInvokeInst,(Lsoot/SootMethodRef;I)Lsoot/baf/InterfaceInvokeInst;)#39
soot.baf.Baf.newInterfaceInvokeInst(Lsoot/SootMethodRef;I)Lsoot/baf/InterfaceInvokeInst;#New(Lsoot/baf/internal/BInterfaceInvokeInst;,0)#0
soot.baf.Baf.newInterfaceInvokeInst(Lsoot/SootMethodRef;I)Lsoot/baf/InterfaceInvokeInst;#Dup(1,0)#1
soot.baf.Baf.newInterfaceInvokeInst(Lsoot/SootMethodRef;I)Lsoot/baf/InterfaceInvokeInst;#LocalLoad(Ljava/lang/Object;,1)#2
soot.baf.Baf.newInterfaceInvokeInst(Lsoot/SootMethodRef;I)Lsoot/baf/InterfaceInvokeInst;#LocalLoad(I,2)#3
soot.baf.Baf.newInterfaceInvokeInst(Lsoot/SootMethodRef;I)Lsoot/baf/InterfaceInvokeInst;#Invoke(SPECIAL,Lsoot/baf/internal/BInterfaceInvokeInst;,<init>,(Lsoot/SootMethodRef;I)V)#4
soot.baf.internal.BInterfaceInvokeInst.<init>(Lsoot/SootMethodRef;I)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BInterfaceInvokeInst.<init>(Lsoot/SootMethodRef;I)V#Invoke(SPECIAL,Lsoot/baf/internal/AbstractInvokeInst;,<init>,()V)#1
soot.baf.internal.BInterfaceInvokeInst.<init>(Lsoot/SootMethodRef;I)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.baf.internal.BInterfaceInvokeInst.<init>(Lsoot/SootMethodRef;I)V#Invoke(INTERFACE,Lsoot/SootMethodRef;,isStatic,()Z)#3
soot.baf.internal.BInterfaceInvokeInst.<init>(Lsoot/SootMethodRef;I)V#Constant(I,0)#4
soot.baf.internal.BInterfaceInvokeInst.<init>(Lsoot/SootMethodRef;I)V#ConditionalBranch(I,eq,11)#5
soot.baf.internal.BInterfaceInvokeInst.<init>(Lsoot/SootMethodRef;I)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.baf.internal.BInterfaceInvokeInst.<init>(Lsoot/SootMethodRef;I)V#LocalLoad(Ljava/lang/Object;,1)#12
soot.baf.internal.BInterfaceInvokeInst.<init>(Lsoot/SootMethodRef;I)V#Put(Lsoot/SootMethodRef;,NONSTATIC,Lsoot/baf/internal/BInterfaceInvokeInst;,methodRef)#13
soot.baf.internal.BInterfaceInvokeInst.<init>(Lsoot/SootMethodRef;I)V#LocalLoad(Ljava/lang/Object;,0)#14
soot.baf.internal.BInterfaceInvokeInst.<init>(Lsoot/SootMethodRef;I)V#LocalLoad(I,2)#15
soot.baf.internal.BInterfaceInvokeInst.<init>(Lsoot/SootMethodRef;I)V#Put(I,NONSTATIC,Lsoot/baf/internal/BInterfaceInvokeInst;,argCount)#16
soot.baf.internal.BInterfaceInvokeInst.<init>(Lsoot/SootMethodRef;I)V#Return(V)#17
soot.baf.Baf.newInterfaceInvokeInst(Lsoot/SootMethodRef;I)Lsoot/baf/InterfaceInvokeInst;#Return(Ljava/lang/Object;)#5
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Dup(1,0)#40
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,3)#41
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#42
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Pop(1)#43
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#44
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/jimple/JimpleToBafContext;,getCurrentUnit,()Lsoot/Unit;)#45
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,4)#46
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,4)#47
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Lsoot/Unit;,getTags,()Ljava/util/List;)#48
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#49
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,5)#50
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Goto(57)#51
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,5)#57
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#58
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Constant(I,0)#59
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#ConditionalBranch(I,ne,52)#60
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#52
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,5)#53
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#54
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#CheckCast(Lsoot/tagkit/Tag;)#55
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Lsoot/Unit;,addTag,(Lsoot/tagkit/Tag;)V)#56
soot.jimple.internal.AbstractInterfaceInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Return(V)#61
soot.baf.internal.BStoreInst.getDefBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BStoreInst.getDefBoxes()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lsoot/baf/internal/BStoreInst;,defBoxes)#1
soot.baf.internal.BStoreInst.getDefBoxes()Ljava/util/List;#Return(Ljava/lang/Object;)#2
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildStoreList()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#17
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildStoreList()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#18
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildStoreList()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#19
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.buildStoreList()Ljava/util/List;#Pop(1)#20
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,4)#14
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#15
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#CheckCast(Lsoot/Unit;)#16
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalStore(Ljava/lang/Object;,5)#17
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,0)#18
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Get(Lsoot/toolkits/scalar/LocalUses;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,mLocalUses)#19
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,5)#20
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(INTERFACE,Lsoot/toolkits/scalar/LocalUses;,getUsesOf,(Lsoot/Unit;)Ljava/util/List;)#21
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalStore(Ljava/lang/Object;,6)#22
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,6)#23
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#24
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Constant(I,3)#25
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#ConditionalBranch(I,ge,288)#26
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,6)#27
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#28
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalStore(Ljava/lang/Object;,7)#29
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Goto(63)#30
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,7)#63
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#64
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Constant(I,0)#65
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#ConditionalBranch(I,ne,31)#66
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,7)#31
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#32
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#CheckCast(Lsoot/toolkits/scalar/UnitValueBoxPair;)#33
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalStore(Ljava/lang/Object;,8)#34
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,8)#35
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/UnitValueBoxPair;,getUnit,()Lsoot/Unit;)#36
soot.toolkits.scalar.UnitValueBoxPair.getUnit()Lsoot/Unit;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.UnitValueBoxPair.getUnit()Lsoot/Unit;#Get(Lsoot/Unit;,NONSTATIC,Lsoot/toolkits/scalar/UnitValueBoxPair;,unit)#1
soot.toolkits.scalar.UnitValueBoxPair.getUnit()Lsoot/Unit;#Return(Ljava/lang/Object;)#2
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalStore(Ljava/lang/Object;,9)#37
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,9)#38
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Instanceof(Lsoot/baf/LoadInst;)#39
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Constant(I,0)#40
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#ConditionalBranch(I,ne,43)#41
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,0)#43
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Get(Lsoot/toolkits/scalar/LocalDefs;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,mLocalDefs)#44
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,8)#45
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/UnitValueBoxPair;,getValueBox,()Lsoot/ValueBox;)#46
soot.toolkits.scalar.UnitValueBoxPair.getValueBox()Lsoot/ValueBox;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.scalar.UnitValueBoxPair.getValueBox()Lsoot/ValueBox;#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/toolkits/scalar/UnitValueBoxPair;,valueBox)#1
soot.toolkits.scalar.UnitValueBoxPair.getValueBox()Lsoot/ValueBox;#Return(Ljava/lang/Object;)#2
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#47
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#CheckCast(Lsoot/Local;)#48
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,9)#49
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(INTERFACE,Lsoot/toolkits/scalar/LocalDefs;,getDefsOfAt,(Lsoot/Local;Lsoot/Unit;)Ljava/util/List;)#50
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalStore(Ljava/lang/Object;,10)#51
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,10)#52
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#53
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Constant(I,1)#54
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#ConditionalBranch(I,le,57)#55
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,10)#57
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Constant(I,0)#58
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#59
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,5)#60
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#ConditionalBranch(Ljava/lang/Object;,eq,63)#61
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,0)#67
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,mUnitToBlockMap)#68
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,5)#69
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#70
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#CheckCast(Lsoot/toolkits/graph/Block;)#71
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalStore(Ljava/lang/Object;,7)#72
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,6)#73
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#74
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalStore(Ljava/lang/Object;,8)#75
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Goto(92)#76
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,8)#92
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#93
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Constant(I,0)#94
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#ConditionalBranch(I,ne,77)#95
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,8)#77
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#78
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#CheckCast(Lsoot/toolkits/scalar/UnitValueBoxPair;)#79
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalStore(Ljava/lang/Object;,9)#80
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,0)#81
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,mUnitToBlockMap)#82
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,9)#83
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/UnitValueBoxPair;,getUnit,()Lsoot/Unit;)#84
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#85
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#CheckCast(Lsoot/toolkits/graph/Block;)#86
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalStore(Ljava/lang/Object;,10)#87
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,10)#88
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,7)#89
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#ConditionalBranch(Ljava/lang/Object;,eq,92)#90
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,6)#96
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#97
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Switch(288,0,99,1,100,2,167)#98
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,0)#167
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Get(Lsoot/baf/toolkits/base/LoadStoreOptimizer;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,this$0)#168
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(STATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer;,access$0,(Lsoot/baf/toolkits/base/LoadStoreOptimizer;)Ljava/util/Map;)#169
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Constant(Ljava/lang/String;,"sll")#170
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(STATIC,Lsoot/PhaseOptions;,getBoolean,(Ljava/util/Map;Ljava/lang/String;)Z)#171
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Constant(I,0)#172
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#ConditionalBranch(I,eq,288)#173
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,0)#174
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Get(Z,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,mPass2)#175
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Constant(I,0)#176
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#ConditionalBranch(I,eq,185)#177
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,6)#185
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Constant(I,0)#186
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#187
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#CheckCast(Lsoot/toolkits/scalar/UnitValueBoxPair;)#188
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/UnitValueBoxPair;,getUnit,()Lsoot/Unit;)#189
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalStore(Ljava/lang/Object;,8)#190
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,6)#191
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Constant(I,1)#192
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#193
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#CheckCast(Lsoot/toolkits/scalar/UnitValueBoxPair;)#194
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/UnitValueBoxPair;,getUnit,()Lsoot/Unit;)#195
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalStore(Ljava/lang/Object;,9)#196
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,0)#197
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,mUnitToBlockMap)#198
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,5)#199
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#200
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#CheckCast(Lsoot/toolkits/graph/Block;)#201
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalStore(Ljava/lang/Object;,7)#202
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,0)#203
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,mUnits)#204
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,8)#205
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,9)#206
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(INTERFACE,Lsoot/util/Chain;,follows,(Ljava/lang/Object;Ljava/lang/Object;)Z)#207
soot.PatchingChain.follows(Ljava/lang/Object;Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.PatchingChain.follows(Ljava/lang/Object;Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#1
soot.PatchingChain.follows(Ljava/lang/Object;Ljava/lang/Object;)Z#CheckCast(Lsoot/Unit;)#2
soot.PatchingChain.follows(Ljava/lang/Object;Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,2)#3
soot.PatchingChain.follows(Ljava/lang/Object;Ljava/lang/Object;)Z#CheckCast(Lsoot/Unit;)#4
soot.PatchingChain.follows(Ljava/lang/Object;Ljava/lang/Object;)Z#Invoke(VIRTUAL,Lsoot/PatchingChain;,follows,(Lsoot/Unit;Lsoot/Unit;)Z)#5
soot.PatchingChain.follows(Lsoot/Unit;Lsoot/Unit;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.PatchingChain.follows(Lsoot/Unit;Lsoot/Unit;)Z#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/PatchingChain;,innerChain)#1
soot.PatchingChain.follows(Lsoot/Unit;Lsoot/Unit;)Z#LocalLoad(Ljava/lang/Object;,1)#2
soot.PatchingChain.follows(Lsoot/Unit;Lsoot/Unit;)Z#LocalLoad(Ljava/lang/Object;,2)#3
soot.PatchingChain.follows(Lsoot/Unit;Lsoot/Unit;)Z#Invoke(INTERFACE,Lsoot/util/Chain;,follows,(Ljava/lang/Object;Ljava/lang/Object;)Z)#4
soot.util.HashChain.follows(Ljava/lang/Object;Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.HashChain.follows(Ljava/lang/Object;Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#1
soot.util.HashChain.follows(Ljava/lang/Object;Ljava/lang/Object;)Z#Invoke(VIRTUAL,Lsoot/util/HashChain;,iterator,(Ljava/lang/Object;)Ljava/util/Iterator;)#2
soot.util.HashChain.iterator(Ljava/lang/Object;)Ljava/util/Iterator;#New(Lsoot/util/HashChain$LinkIterator;,0)#0
soot.util.HashChain.iterator(Ljava/lang/Object;)Ljava/util/Iterator;#Dup(1,0)#1
soot.util.HashChain.iterator(Ljava/lang/Object;)Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#2
soot.util.HashChain.iterator(Ljava/lang/Object;)Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,1)#3
soot.util.HashChain.iterator(Ljava/lang/Object;)Ljava/util/Iterator;#Invoke(SPECIAL,Lsoot/util/HashChain$LinkIterator;,<init>,(Lsoot/util/HashChain;Ljava/lang/Object;)V)#4
soot.util.HashChain.iterator(Ljava/lang/Object;)Ljava/util/Iterator;#Return(Ljava/lang/Object;)#5
soot.util.HashChain.follows(Ljava/lang/Object;Ljava/lang/Object;)Z#LocalStore(Ljava/lang/Object;,3)#3
soot.util.HashChain.follows(Ljava/lang/Object;Ljava/lang/Object;)Z#Goto(11)#4
soot.util.HashChain.follows(Ljava/lang/Object;Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,3)#11
soot.util.HashChain.follows(Ljava/lang/Object;Ljava/lang/Object;)Z#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#12
soot.util.HashChain.follows(Ljava/lang/Object;Ljava/lang/Object;)Z#Constant(I,0)#13
soot.util.HashChain.follows(Ljava/lang/Object;Ljava/lang/Object;)Z#ConditionalBranch(I,ne,5)#14
soot.util.HashChain.follows(Ljava/lang/Object;Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,3)#5
soot.util.HashChain.follows(Ljava/lang/Object;Ljava/lang/Object;)Z#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#6
soot.util.HashChain.follows(Ljava/lang/Object;Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,2)#7
soot.util.HashChain.follows(Ljava/lang/Object;Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,11)#8
soot.util.HashChain.follows(Ljava/lang/Object;Ljava/lang/Object;)Z#Constant(I,0)#9
soot.util.HashChain.follows(Ljava/lang/Object;Ljava/lang/Object;)Z#Return(I)#10
soot.PatchingChain.follows(Lsoot/Unit;Lsoot/Unit;)Z#Return(I)#5
soot.PatchingChain.follows(Ljava/lang/Object;Ljava/lang/Object;)Z#Return(I)#6
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Constant(I,0)#208
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#ConditionalBranch(I,eq,216)#209
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,0)#216
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,5)#217
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,8)#218
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,7)#219
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Constant(I,0)#220
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(SPECIAL,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,stackIndependent,(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I)#221
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Get(Lsoot/baf/toolkits/base/LoadStoreOptimizer;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,this$0)#1
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Get(Z,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer;,debug)#2
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Constant(I,0)#3
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#ConditionalBranch(I,eq,41)#4
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Constant(I,0)#41
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalStore(I,5)#42
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Constant(I,0)#43
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalStore(I,6)#44
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalLoad(Ljava/lang/Object;,0)#45
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,mUnits)#46
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalLoad(Ljava/lang/Object;,0)#47
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,mUnits)#48
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalLoad(Ljava/lang/Object;,1)#49
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Invoke(INTERFACE,Lsoot/util/Chain;,getSuccOf,(Ljava/lang/Object;)Ljava/lang/Object;)#50
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,(Ljava/lang/Object;)Ljava/util/Iterator;)#51
soot.PatchingChain.iterator(Ljava/lang/Object;)Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#0
soot.PatchingChain.iterator(Ljava/lang/Object;)Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,1)#1
soot.PatchingChain.iterator(Ljava/lang/Object;)Ljava/util/Iterator;#CheckCast(Lsoot/Unit;)#2
soot.PatchingChain.iterator(Ljava/lang/Object;)Ljava/util/Iterator;#Invoke(VIRTUAL,Lsoot/PatchingChain;,iterator,(Lsoot/Unit;)Ljava/util/Iterator;)#3
soot.PatchingChain.iterator(Lsoot/Unit;)Ljava/util/Iterator;#New(Lsoot/PatchingChain$PatchingIterator;,0)#0
soot.PatchingChain.iterator(Lsoot/Unit;)Ljava/util/Iterator;#Dup(1,0)#1
soot.PatchingChain.iterator(Lsoot/Unit;)Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#2
soot.PatchingChain.iterator(Lsoot/Unit;)Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#3
soot.PatchingChain.iterator(Lsoot/Unit;)Ljava/util/Iterator;#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/PatchingChain;,innerChain)#4
soot.PatchingChain.iterator(Lsoot/Unit;)Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,1)#5
soot.PatchingChain.iterator(Lsoot/Unit;)Ljava/util/Iterator;#Invoke(SPECIAL,Lsoot/PatchingChain$PatchingIterator;,<init>,(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;)V)#6
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;)V#Put(Lsoot/PatchingChain;,NONSTATIC,Lsoot/PatchingChain$PatchingIterator;,this$0)#2
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#4
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;)V#Constant(L;,null)#6
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;)V#Put(Ljava/util/Iterator;,NONSTATIC,Lsoot/PatchingChain$PatchingIterator;,innerIterator)#7
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;)V#Constant(I,0)#9
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;)V#Put(Z,NONSTATIC,Lsoot/PatchingChain$PatchingIterator;,state)#10
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,2)#12
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,3)#13
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,(Ljava/lang/Object;)Ljava/util/Iterator;)#14
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;)V#Put(Ljava/util/Iterator;,NONSTATIC,Lsoot/PatchingChain$PatchingIterator;,innerIterator)#15
soot.PatchingChain$PatchingIterator.<init>(Lsoot/PatchingChain;Lsoot/util/Chain;Lsoot/Unit;)V#Return(V)#16
soot.PatchingChain.iterator(Lsoot/Unit;)Ljava/util/Iterator;#Return(Ljava/lang/Object;)#7
soot.PatchingChain.iterator(Ljava/lang/Object;)Ljava/util/Iterator;#Return(Ljava/lang/Object;)#4
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalStore(Ljava/lang/Object;,7)#52
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Constant(I,0)#53
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalStore(I,8)#54
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalLoad(Ljava/lang/Object;,7)#55
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#56
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#CheckCast(Lsoot/Unit;)#57
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalStore(Ljava/lang/Object;,9)#58
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalLoad(I,4)#59
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Constant(I,-1)#60
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#ConditionalBranch(I,ne,88)#61
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalLoad(Ljava/lang/Object;,9)#88
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalLoad(Ljava/lang/Object;,2)#89
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#ConditionalBranch(Ljava/lang/Object;,ne,67)#90
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalLoad(Ljava/lang/Object;,0)#91
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Get(Lsoot/baf/toolkits/base/LoadStoreOptimizer;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,this$0)#92
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Get(Z,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer;,debug)#93
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Constant(I,0)#94
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#ConditionalBranch(I,eq,116)#95
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Constant(I,1)#116
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalStore(I,10)#117
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Goto(341)#118
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalLoad(I,10)#341
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Constant(I,0)#342
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#ConditionalBranch(I,ne,119)#343
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Constant(I,0)#119
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalStore(I,10)#120
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalLoad(I,4)#121
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Constant(I,-1)#122
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#ConditionalBranch(I,ne,189)#123
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalLoad(I,4)#189
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Constant(I,0)#190
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#ConditionalBranch(I,ne,218)#191
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalLoad(I,6)#192
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Constant(I,0)#193
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#ConditionalBranch(I,ne,209)#194
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalLoad(I,5)#195
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Constant(I,0)#196
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#ConditionalBranch(I,ne,209)#197
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalLoad(Ljava/lang/Object;,0)#198
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Get(Lsoot/baf/toolkits/base/LoadStoreOptimizer;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,this$0)#199
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Get(Z,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer;,debug)#200
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Constant(I,0)#201
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#ConditionalBranch(I,eq,207)#202
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Constant(I,1)#207
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Return(I)#208
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalStore(I,11)#222
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(I,11)#223
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Constant(I,1)#224
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#ConditionalBranch(I,ne,272)#225
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,7)#226
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,8)#227
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(VIRTUAL,Lsoot/toolkits/graph/Block;,remove,(Lsoot/Unit;)Z)#228
soot.toolkits.graph.Block.remove(Lsoot/Unit;)Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.Block.remove(Lsoot/Unit;)Z#Get(Lsoot/Body;,NONSTATIC,Lsoot/toolkits/graph/Block;,mBody)#1
soot.toolkits.graph.Block.remove(Lsoot/Unit;)Z#Invoke(VIRTUAL,Lsoot/Body;,getUnits,()Lsoot/PatchingChain;)#2
soot.toolkits.graph.Block.remove(Lsoot/Unit;)Z#LocalStore(Ljava/lang/Object;,2)#3
soot.toolkits.graph.Block.remove(Lsoot/Unit;)Z#LocalLoad(Ljava/lang/Object;,1)#4
soot.toolkits.graph.Block.remove(Lsoot/Unit;)Z#LocalLoad(Ljava/lang/Object;,0)#5
soot.toolkits.graph.Block.remove(Lsoot/Unit;)Z#Get(Lsoot/Unit;,NONSTATIC,Lsoot/toolkits/graph/Block;,mHead)#6
soot.toolkits.graph.Block.remove(Lsoot/Unit;)Z#ConditionalBranch(Ljava/lang/Object;,ne,15)#7
soot.toolkits.graph.Block.remove(Lsoot/Unit;)Z#LocalLoad(Ljava/lang/Object;,1)#15
soot.toolkits.graph.Block.remove(Lsoot/Unit;)Z#LocalLoad(Ljava/lang/Object;,0)#16
soot.toolkits.graph.Block.remove(Lsoot/Unit;)Z#Get(Lsoot/Unit;,NONSTATIC,Lsoot/toolkits/graph/Block;,mTail)#17
soot.toolkits.graph.Block.remove(Lsoot/Unit;)Z#ConditionalBranch(Ljava/lang/Object;,ne,25)#18
soot.toolkits.graph.Block.remove(Lsoot/Unit;)Z#LocalLoad(Ljava/lang/Object;,2)#25
soot.toolkits.graph.Block.remove(Lsoot/Unit;)Z#LocalLoad(Ljava/lang/Object;,1)#26
soot.toolkits.graph.Block.remove(Lsoot/Unit;)Z#Invoke(INTERFACE,Lsoot/util/Chain;,remove,(Ljava/lang/Object;)Z)#27
soot.toolkits.graph.Block.remove(Lsoot/Unit;)Z#Return(I)#28
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Pop(1)#229
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,7)#230
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,8)#231
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,5)#232
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(VIRTUAL,Lsoot/toolkits/graph/Block;,insertAfter,(Lsoot/Unit;Lsoot/Unit;)V)#233
soot.toolkits.graph.Block.insertAfter(Lsoot/Unit;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,2)#0
soot.toolkits.graph.Block.insertAfter(Lsoot/Unit;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,0)#1
soot.toolkits.graph.Block.insertAfter(Lsoot/Unit;Lsoot/Unit;)V#Get(Lsoot/Unit;,NONSTATIC,Lsoot/toolkits/graph/Block;,mTail)#2
soot.toolkits.graph.Block.insertAfter(Lsoot/Unit;Lsoot/Unit;)V#ConditionalBranch(Ljava/lang/Object;,ne,7)#3
soot.toolkits.graph.Block.insertAfter(Lsoot/Unit;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,0)#7
soot.toolkits.graph.Block.insertAfter(Lsoot/Unit;Lsoot/Unit;)V#Get(Lsoot/Body;,NONSTATIC,Lsoot/toolkits/graph/Block;,mBody)#8
soot.toolkits.graph.Block.insertAfter(Lsoot/Unit;Lsoot/Unit;)V#Invoke(VIRTUAL,Lsoot/Body;,getUnits,()Lsoot/PatchingChain;)#9
soot.toolkits.graph.Block.insertAfter(Lsoot/Unit;Lsoot/Unit;)V#LocalStore(Ljava/lang/Object;,3)#10
soot.toolkits.graph.Block.insertAfter(Lsoot/Unit;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,3)#11
soot.toolkits.graph.Block.insertAfter(Lsoot/Unit;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,1)#12
soot.toolkits.graph.Block.insertAfter(Lsoot/Unit;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,2)#13
soot.toolkits.graph.Block.insertAfter(Lsoot/Unit;Lsoot/Unit;)V#Invoke(INTERFACE,Lsoot/util/Chain;,insertAfter,(Ljava/lang/Object;Ljava/lang/Object;)V)#14
soot.PatchingChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.PatchingChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.PatchingChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#CheckCast(Lsoot/Unit;)#2
soot.PatchingChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,2)#3
soot.PatchingChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#CheckCast(Lsoot/Unit;)#4
soot.PatchingChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(VIRTUAL,Lsoot/PatchingChain;,insertAfter,(Lsoot/Unit;Lsoot/Unit;)V)#5
soot.PatchingChain.insertAfter(Lsoot/Unit;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.PatchingChain.insertAfter(Lsoot/Unit;Lsoot/Unit;)V#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/PatchingChain;,innerChain)#1
soot.PatchingChain.insertAfter(Lsoot/Unit;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.PatchingChain.insertAfter(Lsoot/Unit;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,2)#3
soot.PatchingChain.insertAfter(Lsoot/Unit;Lsoot/Unit;)V#Invoke(INTERFACE,Lsoot/util/Chain;,insertAfter,(Ljava/lang/Object;Ljava/lang/Object;)V)#4
soot.util.HashChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.util.HashChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#Constant(L;,null)#1
soot.util.HashChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#ConditionalBranch(Ljava/lang/Object;,ne,8)#2
soot.util.HashChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.util.HashChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#Get(Ljava/util/HashMap;,NONSTATIC,Lsoot/util/HashChain;,map)#9
soot.util.HashChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#10
soot.util.HashChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(VIRTUAL,Ljava/util/HashMap;,containsKey,(Ljava/lang/Object;)Z)#11
soot.util.HashChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#Constant(I,0)#12
soot.util.HashChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#ConditionalBranch(I,eq,19)#13
soot.util.HashChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#19
soot.util.HashChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#Dup(1,0)#20
soot.util.HashChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#Get(J,NONSTATIC,Lsoot/util/HashChain;,stateCount)#21
soot.util.HashChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#Constant(J,1)#22
soot.util.HashChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#BinaryOp(J,add)#23
soot.util.HashChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#Put(J,NONSTATIC,Lsoot/util/HashChain;,stateCount)#24
soot.util.HashChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#25
soot.util.HashChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#Get(Ljava/util/HashMap;,NONSTATIC,Lsoot/util/HashChain;,map)#26
soot.util.HashChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,2)#27
soot.util.HashChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(VIRTUAL,Ljava/util/HashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#28
soot.util.HashChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#CheckCast(Lsoot/util/HashChain$Link;)#29
soot.util.HashChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,3)#30
soot.util.HashChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,3)#31
soot.util.HashChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#32
soot.util.HashChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(VIRTUAL,Lsoot/util/HashChain$Link;,insertAfter,(Ljava/lang/Object;)Lsoot/util/HashChain$Link;)#33
soot.util.HashChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,4)#34
soot.util.HashChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#35
soot.util.HashChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#Get(Ljava/util/HashMap;,NONSTATIC,Lsoot/util/HashChain;,map)#36
soot.util.HashChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#37
soot.util.HashChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,4)#38
soot.util.HashChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(VIRTUAL,Ljava/util/HashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#39
soot.util.HashChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#Pop(1)#40
soot.util.HashChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#Return(V)#41
soot.PatchingChain.insertAfter(Lsoot/Unit;Lsoot/Unit;)V#Return(V)#5
soot.PatchingChain.insertAfter(Ljava/lang/Object;Ljava/lang/Object;)V#Return(V)#6
soot.toolkits.graph.Block.insertAfter(Lsoot/Unit;Lsoot/Unit;)V#Return(V)#15
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,0)#234
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,5)#235
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,9)#236
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,7)#237
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Constant(I,-1)#238
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(SPECIAL,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,stackIndependent,(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I)#239
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalLoad(Ljava/lang/Object;,7)#62
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#63
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#CheckCast(Lsoot/Unit;)#64
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalStore(Ljava/lang/Object;,9)#65
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Goto(88)#66
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalLoad(I,6)#67
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalLoad(Ljava/lang/Object;,9)#68
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#CheckCast(Lsoot/baf/Inst;)#69
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Invoke(INTERFACE,Lsoot/baf/Inst;,getInCount,()I)#70
soot.baf.internal.BSpecialInvokeInst.getInCount()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BSpecialInvokeInst.getInCount()I#Invoke(SPECIAL,Lsoot/baf/internal/AbstractInvokeInst;,getInCount,()I)#1
soot.baf.internal.AbstractInvokeInst.getInCount()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.AbstractInvokeInst.getInCount()I#Invoke(VIRTUAL,Lsoot/baf/internal/AbstractInvokeInst;,getMethodRef,()Lsoot/SootMethodRef;)#1
soot.baf.internal.BSpecialInvokeInst.getMethodRef()Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BSpecialInvokeInst.getMethodRef()Lsoot/SootMethodRef;#Invoke(SPECIAL,Lsoot/baf/internal/AbstractInvokeInst;,getMethodRef,()Lsoot/SootMethodRef;)#1
soot.baf.internal.AbstractInvokeInst.getMethodRef()Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.AbstractInvokeInst.getMethodRef()Lsoot/SootMethodRef;#Get(Lsoot/SootMethodRef;,NONSTATIC,Lsoot/baf/internal/AbstractInvokeInst;,methodRef)#1
soot.baf.internal.AbstractInvokeInst.getMethodRef()Lsoot/SootMethodRef;#Return(Ljava/lang/Object;)#2
soot.baf.internal.BSpecialInvokeInst.getMethodRef()Lsoot/SootMethodRef;#Return(Ljava/lang/Object;)#2
soot.baf.internal.AbstractInvokeInst.getInCount()I#Invoke(INTERFACE,Lsoot/SootMethodRef;,parameterTypes,()Ljava/util/List;)#2
soot.baf.internal.AbstractInvokeInst.getInCount()I#Invoke(INTERFACE,Ljava/util/List;,size,()I)#3
soot.baf.internal.AbstractInvokeInst.getInCount()I#Return(I)#4
soot.baf.internal.BSpecialInvokeInst.getInCount()I#Constant(I,1)#2
soot.baf.internal.BSpecialInvokeInst.getInCount()I#BinaryOp(I,add)#3
soot.baf.internal.BSpecialInvokeInst.getInCount()I#Return(I)#4
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#BinaryOp(I,sub)#71
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalStore(I,6)#72
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalLoad(I,6)#73
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalLoad(I,5)#74
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#ConditionalBranch(I,ge,78)#75
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalLoad(I,6)#76
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalStore(I,5)#77
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalLoad(I,6)#78
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalLoad(Ljava/lang/Object;,9)#79
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#CheckCast(Lsoot/baf/Inst;)#80
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Invoke(INTERFACE,Lsoot/baf/Inst;,getOutCount,()I)#81
soot.baf.internal.BSpecialInvokeInst.getOutCount()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BSpecialInvokeInst.getOutCount()I#Invoke(SPECIAL,Lsoot/baf/internal/AbstractInvokeInst;,getOutCount,()I)#1
soot.baf.internal.AbstractInvokeInst.getOutCount()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.AbstractInvokeInst.getOutCount()I#Invoke(VIRTUAL,Lsoot/baf/internal/AbstractInvokeInst;,getMethodRef,()Lsoot/SootMethodRef;)#1
soot.baf.internal.AbstractInvokeInst.getOutCount()I#Invoke(INTERFACE,Lsoot/SootMethodRef;,returnType,()Lsoot/Type;)#2
soot.baf.internal.AbstractInvokeInst.getOutCount()I#Instanceof(Lsoot/VoidType;)#3
soot.baf.internal.AbstractInvokeInst.getOutCount()I#Constant(I,0)#4
soot.baf.internal.AbstractInvokeInst.getOutCount()I#ConditionalBranch(I,eq,8)#5
soot.baf.internal.AbstractInvokeInst.getOutCount()I#Constant(I,0)#6
soot.baf.internal.AbstractInvokeInst.getOutCount()I#Return(I)#7
soot.baf.internal.BSpecialInvokeInst.getOutCount()I#Return(I)#2
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#BinaryOp(I,add)#82
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalStore(I,6)#83
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalLoad(Ljava/lang/Object;,7)#84
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#85
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#CheckCast(Lsoot/Unit;)#86
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalStore(Ljava/lang/Object;,9)#87
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalLoad(I,6)#124
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Constant(I,0)#125
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#ConditionalBranch(I,ne,141)#126
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalLoad(I,6)#141
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Constant(I,-1)#142
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#ConditionalBranch(I,ne,158)#143
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalLoad(I,5)#144
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Constant(I,-1)#145
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#ConditionalBranch(I,ne,158)#146
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#LocalLoad(Ljava/lang/Object;,0)#147
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Get(Lsoot/baf/toolkits/base/LoadStoreOptimizer;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,this$0)#148
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Get(Z,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer;,debug)#149
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Constant(I,0)#150
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#ConditionalBranch(I,eq,156)#151
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Constant(I,2)#156
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.stackIndependent(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I#Return(I)#157
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalStore(I,12)#240
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(I,12)#241
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Constant(I,2)#242
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#ConditionalBranch(I,ne,288)#243
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(STATIC,Lsoot/baf/Baf;,v,()Lsoot/baf/Baf;)#244
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,9)#245
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#CheckCast(Lsoot/baf/LoadInst;)#246
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(INTERFACE,Lsoot/baf/LoadInst;,getOpType,()Lsoot/Type;)#247
soot.baf.internal.AbstractOpTypeInst.getOpType()Lsoot/Type;#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.AbstractOpTypeInst.getOpType()Lsoot/Type;#Get(Lsoot/Type;,NONSTATIC,Lsoot/baf/internal/AbstractOpTypeInst;,opType)#1
soot.baf.internal.AbstractOpTypeInst.getOpType()Lsoot/Type;#Return(Ljava/lang/Object;)#2
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(VIRTUAL,Lsoot/baf/Baf;,newDup1Inst,(Lsoot/Type;)Lsoot/baf/Dup1Inst;)#248
soot.baf.Baf.newDup1Inst(Lsoot/Type;)Lsoot/baf/Dup1Inst;#New(Lsoot/baf/internal/BDup1Inst;,0)#0
soot.baf.Baf.newDup1Inst(Lsoot/Type;)Lsoot/baf/Dup1Inst;#Dup(1,0)#1
soot.baf.Baf.newDup1Inst(Lsoot/Type;)Lsoot/baf/Dup1Inst;#LocalLoad(Ljava/lang/Object;,1)#2
soot.baf.Baf.newDup1Inst(Lsoot/Type;)Lsoot/baf/Dup1Inst;#Invoke(SPECIAL,Lsoot/baf/internal/BDup1Inst;,<init>,(Lsoot/Type;)V)#3
soot.baf.internal.BDup1Inst.<init>(Lsoot/Type;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BDup1Inst.<init>(Lsoot/Type;)V#Invoke(SPECIAL,Lsoot/baf/internal/BDupInst;,<init>,()V)#1
soot.baf.internal.BDupInst.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BDupInst.<init>()V#Invoke(SPECIAL,Lsoot/baf/internal/AbstractInst;,<init>,()V)#1
soot.baf.internal.BDupInst.<init>()V#Return(V)#2
soot.baf.internal.BDup1Inst.<init>(Lsoot/Type;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.baf.internal.BDup1Inst.<init>(Lsoot/Type;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.baf.internal.BDup1Inst.<init>(Lsoot/Type;)V#Invoke(STATIC,Lsoot/baf/Baf;,getDescriptorTypeOf,(Lsoot/Type;)Lsoot/Type;)#4
soot.baf.Baf.getDescriptorTypeOf(Lsoot/Type;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.Baf.getDescriptorTypeOf(Lsoot/Type;)Lsoot/Type;#Instanceof(Lsoot/NullType;)#1
soot.baf.Baf.getDescriptorTypeOf(Lsoot/Type;)Lsoot/Type;#Constant(I,0)#2
soot.baf.Baf.getDescriptorTypeOf(Lsoot/Type;)Lsoot/Type;#ConditionalBranch(I,ne,12)#3
soot.baf.Baf.getDescriptorTypeOf(Lsoot/Type;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,0)#4
soot.baf.Baf.getDescriptorTypeOf(Lsoot/Type;)Lsoot/Type;#Instanceof(Lsoot/ArrayType;)#5
soot.baf.Baf.getDescriptorTypeOf(Lsoot/Type;)Lsoot/Type;#Constant(I,0)#6
soot.baf.Baf.getDescriptorTypeOf(Lsoot/Type;)Lsoot/Type;#ConditionalBranch(I,ne,12)#7
soot.baf.Baf.getDescriptorTypeOf(Lsoot/Type;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,0)#8
soot.baf.Baf.getDescriptorTypeOf(Lsoot/Type;)Lsoot/Type;#Instanceof(Lsoot/RefType;)#9
soot.baf.Baf.getDescriptorTypeOf(Lsoot/Type;)Lsoot/Type;#Constant(I,0)#10
soot.baf.Baf.getDescriptorTypeOf(Lsoot/Type;)Lsoot/Type;#ConditionalBranch(I,eq,14)#11
soot.baf.Baf.getDescriptorTypeOf(Lsoot/Type;)Lsoot/Type;#Invoke(STATIC,Lsoot/RefType;,v,()Lsoot/RefType;)#12
soot.baf.Baf.getDescriptorTypeOf(Lsoot/Type;)Lsoot/Type;#LocalStore(Ljava/lang/Object;,0)#13
soot.baf.Baf.getDescriptorTypeOf(Lsoot/Type;)Lsoot/Type;#LocalLoad(Ljava/lang/Object;,0)#14
soot.baf.Baf.getDescriptorTypeOf(Lsoot/Type;)Lsoot/Type;#Return(Ljava/lang/Object;)#15
soot.baf.internal.BDup1Inst.<init>(Lsoot/Type;)V#Put(Lsoot/Type;,NONSTATIC,Lsoot/baf/internal/BDup1Inst;,mOpType)#5
soot.baf.internal.BDup1Inst.<init>(Lsoot/Type;)V#Return(V)#6
soot.baf.Baf.newDup1Inst(Lsoot/Type;)Lsoot/baf/Dup1Inst;#Return(Ljava/lang/Object;)#4
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalStore(Ljava/lang/Object;,13)#249
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,13)#250
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,5)#251
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(INTERFACE,Lsoot/baf/Dup1Inst;,addAllTagsOf,(Lsoot/tagkit/Host;)V)#252
soot.tagkit.AbstractHost.addAllTagsOf(Lsoot/tagkit/Host;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.tagkit.AbstractHost.addAllTagsOf(Lsoot/tagkit/Host;)V#Invoke(INTERFACE,Lsoot/tagkit/Host;,getTags,()Ljava/util/List;)#1
soot.tagkit.AbstractHost.addAllTagsOf(Lsoot/tagkit/Host;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#2
soot.tagkit.AbstractHost.addAllTagsOf(Lsoot/tagkit/Host;)V#LocalStore(Ljava/lang/Object;,2)#3
soot.tagkit.AbstractHost.addAllTagsOf(Lsoot/tagkit/Host;)V#Goto(12)#4
soot.tagkit.AbstractHost.addAllTagsOf(Lsoot/tagkit/Host;)V#LocalLoad(Ljava/lang/Object;,2)#12
soot.tagkit.AbstractHost.addAllTagsOf(Lsoot/tagkit/Host;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#13
soot.tagkit.AbstractHost.addAllTagsOf(Lsoot/tagkit/Host;)V#Constant(I,0)#14
soot.tagkit.AbstractHost.addAllTagsOf(Lsoot/tagkit/Host;)V#ConditionalBranch(I,ne,5)#15
soot.tagkit.AbstractHost.addAllTagsOf(Lsoot/tagkit/Host;)V#LocalLoad(Ljava/lang/Object;,2)#5
soot.tagkit.AbstractHost.addAllTagsOf(Lsoot/tagkit/Host;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#6
soot.tagkit.AbstractHost.addAllTagsOf(Lsoot/tagkit/Host;)V#CheckCast(Lsoot/tagkit/Tag;)#7
soot.tagkit.AbstractHost.addAllTagsOf(Lsoot/tagkit/Host;)V#LocalStore(Ljava/lang/Object;,3)#8
soot.tagkit.AbstractHost.addAllTagsOf(Lsoot/tagkit/Host;)V#LocalLoad(Ljava/lang/Object;,0)#9
soot.tagkit.AbstractHost.addAllTagsOf(Lsoot/tagkit/Host;)V#LocalLoad(Ljava/lang/Object;,3)#10
soot.tagkit.AbstractHost.addAllTagsOf(Lsoot/tagkit/Host;)V#Invoke(VIRTUAL,Lsoot/tagkit/AbstractHost;,addTag,(Lsoot/tagkit/Tag;)V)#11
soot.tagkit.AbstractHost.addAllTagsOf(Lsoot/tagkit/Host;)V#Return(V)#16
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,0)#253
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,5)#254
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,13)#255
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(SPECIAL,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,replaceUnit,(Lsoot/Unit;Lsoot/Unit;)V)#256
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.replaceUnit(Lsoot/Unit;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.replaceUnit(Lsoot/Unit;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.replaceUnit(Lsoot/Unit;Lsoot/Unit;)V#Constant(L;,null)#2
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.replaceUnit(Lsoot/Unit;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,2)#3
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.replaceUnit(Lsoot/Unit;Lsoot/Unit;)V#Invoke(SPECIAL,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,replaceUnit,(Lsoot/Unit;Lsoot/Unit;Lsoot/Unit;)V)#4
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.replaceUnit(Lsoot/Unit;Lsoot/Unit;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.replaceUnit(Lsoot/Unit;Lsoot/Unit;Lsoot/Unit;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,mUnitToBlockMap)#1
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.replaceUnit(Lsoot/Unit;Lsoot/Unit;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.replaceUnit(Lsoot/Unit;Lsoot/Unit;Lsoot/Unit;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.replaceUnit(Lsoot/Unit;Lsoot/Unit;Lsoot/Unit;)V#CheckCast(Lsoot/toolkits/graph/Block;)#4
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.replaceUnit(Lsoot/Unit;Lsoot/Unit;Lsoot/Unit;)V#LocalStore(Ljava/lang/Object;,4)#5
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.replaceUnit(Lsoot/Unit;Lsoot/Unit;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,2)#6
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.replaceUnit(Lsoot/Unit;Lsoot/Unit;Lsoot/Unit;)V#Constant(L;,null)#7
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.replaceUnit(Lsoot/Unit;Lsoot/Unit;Lsoot/Unit;)V#ConditionalBranch(Ljava/lang/Object;,eq,18)#8
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.replaceUnit(Lsoot/Unit;Lsoot/Unit;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,4)#18
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.replaceUnit(Lsoot/Unit;Lsoot/Unit;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,3)#19
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.replaceUnit(Lsoot/Unit;Lsoot/Unit;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,1)#20
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.replaceUnit(Lsoot/Unit;Lsoot/Unit;Lsoot/Unit;)V#Invoke(VIRTUAL,Lsoot/toolkits/graph/Block;,insertAfter,(Lsoot/Unit;Lsoot/Unit;)V)#21
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.replaceUnit(Lsoot/Unit;Lsoot/Unit;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,4)#22
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.replaceUnit(Lsoot/Unit;Lsoot/Unit;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,1)#23
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.replaceUnit(Lsoot/Unit;Lsoot/Unit;Lsoot/Unit;)V#Invoke(VIRTUAL,Lsoot/toolkits/graph/Block;,remove,(Lsoot/Unit;)Z)#24
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.replaceUnit(Lsoot/Unit;Lsoot/Unit;Lsoot/Unit;)V#Pop(1)#25
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.replaceUnit(Lsoot/Unit;Lsoot/Unit;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,0)#26
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.replaceUnit(Lsoot/Unit;Lsoot/Unit;Lsoot/Unit;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,mUnitToBlockMap)#27
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.replaceUnit(Lsoot/Unit;Lsoot/Unit;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,3)#28
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.replaceUnit(Lsoot/Unit;Lsoot/Unit;Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,4)#29
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.replaceUnit(Lsoot/Unit;Lsoot/Unit;Lsoot/Unit;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#30
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.replaceUnit(Lsoot/Unit;Lsoot/Unit;Lsoot/Unit;)V#Pop(1)#31
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.replaceUnit(Lsoot/Unit;Lsoot/Unit;Lsoot/Unit;)V#Return(V)#32
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.replaceUnit(Lsoot/Unit;Lsoot/Unit;)V#Return(V)#5
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,4)#257
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(INTERFACE,Ljava/util/Iterator;,remove,()V)#258
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,7)#259
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,8)#260
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(VIRTUAL,Lsoot/toolkits/graph/Block;,remove,(Lsoot/Unit;)Z)#261
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Pop(1)#262
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,7)#263
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,9)#264
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(VIRTUAL,Lsoot/toolkits/graph/Block;,remove,(Lsoot/Unit;)Z)#265
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Pop(1)#266
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Constant(I,1)#267
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalStore(I,2)#268
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Constant(I,0)#269
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalStore(I,3)#270
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Goto(288)#271
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,0)#100
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Get(Lsoot/baf/toolkits/base/LoadStoreOptimizer;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,this$0)#101
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(STATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer;,access$0,(Lsoot/baf/toolkits/base/LoadStoreOptimizer;)Ljava/util/Map;)#102
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Constant(Ljava/lang/String;,"sl")#103
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(STATIC,Lsoot/PhaseOptions;,getBoolean,(Ljava/util/Map;Ljava/lang/String;)Z)#104
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Constant(I,0)#105
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#ConditionalBranch(I,eq,288)#106
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,0)#107
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Get(Z,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,mPass2)#108
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Constant(I,0)#109
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#ConditionalBranch(I,eq,118)#110
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,6)#118
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Constant(I,0)#119
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#120
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#CheckCast(Lsoot/toolkits/scalar/UnitValueBoxPair;)#121
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(VIRTUAL,Lsoot/toolkits/scalar/UnitValueBoxPair;,getUnit,()Lsoot/Unit;)#122
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalStore(Ljava/lang/Object;,8)#123
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,0)#124
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,mUnitToBlockMap)#125
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,5)#126
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#127
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#CheckCast(Lsoot/toolkits/graph/Block;)#128
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalStore(Ljava/lang/Object;,7)#129
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,0)#130
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,5)#131
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,8)#132
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,7)#133
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Constant(I,0)#134
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(SPECIAL,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,stackIndependent,(Lsoot/Unit;Lsoot/Unit;Lsoot/toolkits/graph/Block;I)I)#135
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalStore(I,9)#136
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(I,9)#137
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Constant(I,1)#138
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#ConditionalBranch(I,eq,143)#139
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,7)#143
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,5)#144
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(VIRTUAL,Lsoot/toolkits/graph/Block;,remove,(Lsoot/Unit;)Z)#145
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Pop(1)#146
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,7)#147
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,8)#148
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(VIRTUAL,Lsoot/toolkits/graph/Block;,remove,(Lsoot/Unit;)Z)#149
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Pop(1)#150
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,4)#151
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Invoke(INTERFACE,Ljava/util/Iterator;,remove,()V)#152
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Constant(I,1)#153
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalStore(I,2)#154
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Constant(I,0)#155
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalStore(I,3)#156
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#LocalLoad(Ljava/lang/Object;,0)#157
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Get(Lsoot/baf/toolkits/base/LoadStoreOptimizer;,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer$Instance;,this$0)#158
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Get(Z,NONSTATIC,Lsoot/baf/toolkits/base/LoadStoreOptimizer;,debug)#159
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#Constant(I,0)#160
soot.baf.toolkits.base.LoadStoreOptimizer$Instance.optimizeLoadStores()V#ConditionalBranch(I,eq,288)#161
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#271
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/options/Options;,xml_attributes,()Z)#272
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Constant(I,0)#273
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#ConditionalBranch(I,eq,283)#274
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#LocalLoad(I,5)#283
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Constant(I,0)#284
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#ConditionalBranch(I,eq,337)#285
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Return(V)#337
soot.jimple.StaticFieldRef.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(STATIC,Lsoot/baf/Baf;,v,()Lsoot/baf/Baf;)#0
soot.jimple.StaticFieldRef.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#1
soot.jimple.StaticFieldRef.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Get(Lsoot/SootFieldRef;,NONSTATIC,Lsoot/jimple/StaticFieldRef;,fieldRef)#2
soot.jimple.StaticFieldRef.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/baf/Baf;,newStaticGetInst,(Lsoot/SootFieldRef;)Lsoot/baf/StaticGetInst;)#3
soot.baf.Baf.newStaticGetInst(Lsoot/SootFieldRef;)Lsoot/baf/StaticGetInst;#New(Lsoot/baf/internal/BStaticGetInst;,0)#0
soot.baf.Baf.newStaticGetInst(Lsoot/SootFieldRef;)Lsoot/baf/StaticGetInst;#Dup(1,0)#1
soot.baf.Baf.newStaticGetInst(Lsoot/SootFieldRef;)Lsoot/baf/StaticGetInst;#LocalLoad(Ljava/lang/Object;,1)#2
soot.baf.Baf.newStaticGetInst(Lsoot/SootFieldRef;)Lsoot/baf/StaticGetInst;#Invoke(SPECIAL,Lsoot/baf/internal/BStaticGetInst;,<init>,(Lsoot/SootFieldRef;)V)#3
soot.baf.internal.BStaticGetInst.<init>(Lsoot/SootFieldRef;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BStaticGetInst.<init>(Lsoot/SootFieldRef;)V#Invoke(SPECIAL,Lsoot/baf/internal/AbstractInst;,<init>,()V)#1
soot.baf.internal.BStaticGetInst.<init>(Lsoot/SootFieldRef;)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.baf.internal.BStaticGetInst.<init>(Lsoot/SootFieldRef;)V#Invoke(INTERFACE,Lsoot/SootFieldRef;,isStatic,()Z)#3
soot.baf.internal.BStaticGetInst.<init>(Lsoot/SootFieldRef;)V#Constant(I,0)#4
soot.baf.internal.BStaticGetInst.<init>(Lsoot/SootFieldRef;)V#ConditionalBranch(I,ne,11)#5
soot.baf.internal.BStaticGetInst.<init>(Lsoot/SootFieldRef;)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.baf.internal.BStaticGetInst.<init>(Lsoot/SootFieldRef;)V#LocalLoad(Ljava/lang/Object;,1)#12
soot.baf.internal.BStaticGetInst.<init>(Lsoot/SootFieldRef;)V#Put(Lsoot/SootFieldRef;,NONSTATIC,Lsoot/baf/internal/BStaticGetInst;,fieldRef)#13
soot.baf.internal.BStaticGetInst.<init>(Lsoot/SootFieldRef;)V#Return(V)#14
soot.baf.Baf.newStaticGetInst(Lsoot/SootFieldRef;)Lsoot/baf/StaticGetInst;#Return(Ljava/lang/Object;)#4
soot.jimple.StaticFieldRef.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,3)#4
soot.jimple.StaticFieldRef.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#5
soot.jimple.StaticFieldRef.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#6
soot.jimple.StaticFieldRef.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#7
soot.jimple.StaticFieldRef.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Pop(1)#8
soot.jimple.StaticFieldRef.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#9
soot.jimple.StaticFieldRef.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/jimple/JimpleToBafContext;,getCurrentUnit,()Lsoot/Unit;)#10
soot.jimple.StaticFieldRef.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Lsoot/Unit;,getTags,()Ljava/util/List;)#11
soot.jimple.StaticFieldRef.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#12
soot.jimple.StaticFieldRef.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,4)#13
soot.jimple.StaticFieldRef.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Goto(20)#14
soot.jimple.StaticFieldRef.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,4)#20
soot.jimple.StaticFieldRef.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#21
soot.jimple.StaticFieldRef.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Constant(I,0)#22
soot.jimple.StaticFieldRef.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#ConditionalBranch(I,ne,15)#23
soot.jimple.StaticFieldRef.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#15
soot.jimple.StaticFieldRef.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,4)#16
soot.jimple.StaticFieldRef.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#17
soot.jimple.StaticFieldRef.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#CheckCast(Lsoot/tagkit/Tag;)#18
soot.jimple.StaticFieldRef.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Lsoot/Unit;,addTag,(Lsoot/tagkit/Tag;)V)#19
soot.jimple.StaticFieldRef.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Return(V)#24
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/jimple/internal/AbstractVirtualInvokeExpr;,getBase,()Lsoot/Value;)#1
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#CheckCast(Lsoot/jimple/ConvertToBaf;)#2
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#4
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Lsoot/jimple/ConvertToBaf;,convertToBaf,(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V)#5
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#6
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Get([Lsoot/ValueBox;,NONSTATIC,Lsoot/jimple/internal/AbstractVirtualInvokeExpr;,argBoxes)#7
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Dup(1,0)#8
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,6)#9
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#ArrayLength()#10
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(I,5)#11
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Constant(I,0)#12
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(I,4)#13
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Goto(29)#14
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(I,4)#29
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(I,5)#30
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#ConditionalBranch(I,lt,15)#31
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,6)#15
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(I,4)#16
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#ArrayLoad(Ljava/lang/Object;)#17
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,3)#18
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#19
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#20
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#CheckCast(Lsoot/jimple/ConvertToBaf;)#21
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#22
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#23
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Lsoot/jimple/ConvertToBaf;,convertToBaf,(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V)#24
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(I,4)#25
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Constant(I,1)#26
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#BinaryOp(I,add)#27
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(I,4)#28
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#32
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(STATIC,Lsoot/baf/Baf;,v,()Lsoot/baf/Baf;)#33
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#34
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Get(Lsoot/SootMethodRef;,NONSTATIC,Lsoot/jimple/internal/AbstractVirtualInvokeExpr;,methodRef)#35
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/baf/Baf;,newVirtualInvokeInst,(Lsoot/SootMethodRef;)Lsoot/baf/VirtualInvokeInst;)#36
soot.baf.Baf.newVirtualInvokeInst(Lsoot/SootMethodRef;)Lsoot/baf/VirtualInvokeInst;#New(Lsoot/baf/internal/BVirtualInvokeInst;,0)#0
soot.baf.Baf.newVirtualInvokeInst(Lsoot/SootMethodRef;)Lsoot/baf/VirtualInvokeInst;#Dup(1,0)#1
soot.baf.Baf.newVirtualInvokeInst(Lsoot/SootMethodRef;)Lsoot/baf/VirtualInvokeInst;#LocalLoad(Ljava/lang/Object;,1)#2
soot.baf.Baf.newVirtualInvokeInst(Lsoot/SootMethodRef;)Lsoot/baf/VirtualInvokeInst;#Invoke(SPECIAL,Lsoot/baf/internal/BVirtualInvokeInst;,<init>,(Lsoot/SootMethodRef;)V)#3
soot.baf.internal.BVirtualInvokeInst.<init>(Lsoot/SootMethodRef;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BVirtualInvokeInst.<init>(Lsoot/SootMethodRef;)V#Invoke(SPECIAL,Lsoot/baf/internal/AbstractInvokeInst;,<init>,()V)#1
soot.baf.internal.BVirtualInvokeInst.<init>(Lsoot/SootMethodRef;)V#LocalLoad(Ljava/lang/Object;,1)#2
soot.baf.internal.BVirtualInvokeInst.<init>(Lsoot/SootMethodRef;)V#Invoke(INTERFACE,Lsoot/SootMethodRef;,isStatic,()Z)#3
soot.baf.internal.BVirtualInvokeInst.<init>(Lsoot/SootMethodRef;)V#Constant(I,0)#4
soot.baf.internal.BVirtualInvokeInst.<init>(Lsoot/SootMethodRef;)V#ConditionalBranch(I,eq,11)#5
soot.baf.internal.BVirtualInvokeInst.<init>(Lsoot/SootMethodRef;)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.baf.internal.BVirtualInvokeInst.<init>(Lsoot/SootMethodRef;)V#LocalLoad(Ljava/lang/Object;,1)#12
soot.baf.internal.BVirtualInvokeInst.<init>(Lsoot/SootMethodRef;)V#Put(Lsoot/SootMethodRef;,NONSTATIC,Lsoot/baf/internal/BVirtualInvokeInst;,methodRef)#13
soot.baf.internal.BVirtualInvokeInst.<init>(Lsoot/SootMethodRef;)V#Return(V)#14
soot.baf.Baf.newVirtualInvokeInst(Lsoot/SootMethodRef;)Lsoot/baf/VirtualInvokeInst;#Return(Ljava/lang/Object;)#4
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Dup(1,0)#37
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,3)#38
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#39
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Pop(1)#40
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#41
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(VIRTUAL,Lsoot/jimple/JimpleToBafContext;,getCurrentUnit,()Lsoot/Unit;)#42
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,4)#43
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,4)#44
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Lsoot/Unit;,getTags,()Ljava/util/List;)#45
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#46
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,5)#47
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Goto(54)#48
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,5)#54
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#55
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Constant(I,0)#56
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#ConditionalBranch(I,ne,49)#57
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#49
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,5)#50
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#51
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#CheckCast(Lsoot/tagkit/Tag;)#52
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Invoke(INTERFACE,Lsoot/Unit;,addTag,(Lsoot/tagkit/Tag;)V)#53
soot.jimple.internal.AbstractVirtualInvokeExpr.convertToBaf(Lsoot/jimple/JimpleToBafContext;Ljava/util/List;)V#Return(V)#58
soot.PackManager.runBodyPacks(Lsoot/SootClass;)V#Goto(267)#126
soot.PackManager.runBodyPacks(Ljava/util/Iterator;)V#Return(V)#12
soot.PackManager.runBodyPacks()V#Return(V)#4
soot.PackManager.runPacks()V#LocalLoad(Ljava/lang/Object;,0)#57
soot.PackManager.runPacks()V#Invoke(SPECIAL,Lsoot/PackManager;,handleInnerClasses,()V)#58
soot.PackManager.handleInnerClasses()V#Invoke(STATIC,Lsoot/tagkit/InnerClassTagAggregator;,v,()Lsoot/tagkit/InnerClassTagAggregator;)#0
soot.tagkit.InnerClassTagAggregator.v()Lsoot/tagkit/InnerClassTagAggregator;#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#0
soot.tagkit.InnerClassTagAggregator.v()Lsoot/tagkit/InnerClassTagAggregator;#Invoke(VIRTUAL,Lsoot/G;,soot_tagkit_InnerClassTagAggregator,()Lsoot/tagkit/InnerClassTagAggregator;)#1
soot.Singletons.soot_tagkit_InnerClassTagAggregator()Lsoot/tagkit/InnerClassTagAggregator;#LocalLoad(Ljava/lang/Object;,0)#0
soot.Singletons.soot_tagkit_InnerClassTagAggregator()Lsoot/tagkit/InnerClassTagAggregator;#Get(Lsoot/tagkit/InnerClassTagAggregator;,NONSTATIC,Lsoot/Singletons;,instance_soot_tagkit_InnerClassTagAggregator)#1
soot.Singletons.soot_tagkit_InnerClassTagAggregator()Lsoot/tagkit/InnerClassTagAggregator;#Constant(L;,null)#2
soot.Singletons.soot_tagkit_InnerClassTagAggregator()Lsoot/tagkit/InnerClassTagAggregator;#ConditionalBranch(Ljava/lang/Object;,ne,11)#3
soot.Singletons.soot_tagkit_InnerClassTagAggregator()Lsoot/tagkit/InnerClassTagAggregator;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Singletons.soot_tagkit_InnerClassTagAggregator()Lsoot/tagkit/InnerClassTagAggregator;#New(Lsoot/tagkit/InnerClassTagAggregator;,0)#5
soot.Singletons.soot_tagkit_InnerClassTagAggregator()Lsoot/tagkit/InnerClassTagAggregator;#Dup(1,0)#6
soot.Singletons.soot_tagkit_InnerClassTagAggregator()Lsoot/tagkit/InnerClassTagAggregator;#LocalLoad(Ljava/lang/Object;,0)#7
soot.Singletons.soot_tagkit_InnerClassTagAggregator()Lsoot/tagkit/InnerClassTagAggregator;#Get(Lsoot/Singletons$Global;,NONSTATIC,Lsoot/Singletons;,g)#8
soot.Singletons.soot_tagkit_InnerClassTagAggregator()Lsoot/tagkit/InnerClassTagAggregator;#Invoke(SPECIAL,Lsoot/tagkit/InnerClassTagAggregator;,<init>,(Lsoot/Singletons$Global;)V)#9
soot.tagkit.InnerClassTagAggregator.<init>(Lsoot/Singletons$Global;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.tagkit.InnerClassTagAggregator.<init>(Lsoot/Singletons$Global;)V#Invoke(SPECIAL,Lsoot/SceneTransformer;,<init>,()V)#1
soot.tagkit.InnerClassTagAggregator.<init>(Lsoot/Singletons$Global;)V#Return(V)#2
soot.Singletons.soot_tagkit_InnerClassTagAggregator()Lsoot/tagkit/InnerClassTagAggregator;#Put(Lsoot/tagkit/InnerClassTagAggregator;,NONSTATIC,Lsoot/Singletons;,instance_soot_tagkit_InnerClassTagAggregator)#10
soot.Singletons.soot_tagkit_InnerClassTagAggregator()Lsoot/tagkit/InnerClassTagAggregator;#LocalLoad(Ljava/lang/Object;,0)#11
soot.Singletons.soot_tagkit_InnerClassTagAggregator()Lsoot/tagkit/InnerClassTagAggregator;#Get(Lsoot/tagkit/InnerClassTagAggregator;,NONSTATIC,Lsoot/Singletons;,instance_soot_tagkit_InnerClassTagAggregator)#12
soot.Singletons.soot_tagkit_InnerClassTagAggregator()Lsoot/tagkit/InnerClassTagAggregator;#Return(Ljava/lang/Object;)#13
soot.tagkit.InnerClassTagAggregator.v()Lsoot/tagkit/InnerClassTagAggregator;#Return(Ljava/lang/Object;)#2
soot.PackManager.handleInnerClasses()V#LocalStore(Ljava/lang/Object;,1)#1
soot.PackManager.handleInnerClasses()V#LocalLoad(Ljava/lang/Object;,1)#2
soot.PackManager.handleInnerClasses()V#Constant(Ljava/lang/String;,"")#3
soot.PackManager.handleInnerClasses()V#Constant(L;,null)#4
soot.PackManager.handleInnerClasses()V#Invoke(VIRTUAL,Lsoot/tagkit/InnerClassTagAggregator;,internalTransform,(Ljava/lang/String;Ljava/util/Map;)V)#5
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#0
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/Scene;,getApplicationClasses,()Lsoot/util/Chain;)#1
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#2
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,3)#3
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Goto(44)#4
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#44
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#45
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#46
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,5)#47
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#New(Ljava/util/ArrayList;,0)#5
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#6
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#7
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,4)#8
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#9
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#10
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/SootClass;)#11
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,5)#12
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#13
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getTags,()Ljava/util/List;)#14
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#15
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,6)#16
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Goto(30)#17
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#30
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#31
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#32
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,18)#33
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#18
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#19
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#CheckCast(Lsoot/tagkit/Tag;)#20
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,7)#21
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#22
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Instanceof(Lsoot/tagkit/InnerClassTag;)#23
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#24
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,eq,30)#25
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#34
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/util/ArrayList;,isEmpty,()Z)#35
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#36
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,44)#37
soot.tagkit.InnerClassTagAggregator.internalTransform(Ljava/lang/String;Ljava/util/Map;)V#Return(V)#48
soot.PackManager.handleInnerClasses()V#Return(V)#6
soot.PackManager.runPacks()V#Return(V)#59
soot.Main.run([Ljava/lang/String;)V#Invoke(STATIC,Lsoot/PackManager;,v,()Lsoot/PackManager;)#88
soot.Main.run([Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/PackManager;,writeOutput,()V)#89
soot.PackManager.writeOutput()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#0
soot.PackManager.writeOutput()V#Invoke(VIRTUAL,Lsoot/options/Options;,output_jar,()Z)#1
soot.options.Options.output_jar()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.output_jar()Z#Get(Z,NONSTATIC,Lsoot/options/Options;,output_jar)#1
soot.options.Options.output_jar()Z#Return(I)#2
soot.PackManager.writeOutput()V#Constant(I,0)#2
soot.PackManager.writeOutput()V#ConditionalBranch(I,eq,29)#3
soot.PackManager.writeOutput()V#LocalLoad(Ljava/lang/Object;,0)#29
soot.PackManager.writeOutput()V#Constant(L;,null)#30
soot.PackManager.writeOutput()V#Put(Ljava/util/zip/ZipOutputStream;,NONSTATIC,Lsoot/PackManager;,jarFile)#31
soot.PackManager.writeOutput()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#32
soot.PackManager.writeOutput()V#Invoke(VIRTUAL,Lsoot/options/Options;,verbose,()Z)#33
soot.PackManager.writeOutput()V#Constant(I,0)#34
soot.PackManager.writeOutput()V#ConditionalBranch(I,eq,39)#35
soot.PackManager.writeOutput()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#39
soot.PackManager.writeOutput()V#Invoke(VIRTUAL,Lsoot/options/Options;,output_format,()I)#40
soot.PackManager.writeOutput()V#Constant(I,13)#41
soot.PackManager.writeOutput()V#ConditionalBranch(I,ne,46)#42
soot.PackManager.writeOutput()V#LocalLoad(Ljava/lang/Object;,0)#46
soot.PackManager.writeOutput()V#LocalLoad(Ljava/lang/Object;,0)#47
soot.PackManager.writeOutput()V#Invoke(SPECIAL,Lsoot/PackManager;,reachableClasses,()Ljava/util/Iterator;)#48
soot.PackManager.writeOutput()V#Invoke(SPECIAL,Lsoot/PackManager;,writeOutput,(Ljava/util/Iterator;)V)#49
soot.PackManager.writeOutput(Ljava/util/Iterator;)V#Goto(8)#0
soot.PackManager.writeOutput(Ljava/util/Iterator;)V#LocalLoad(Ljava/lang/Object;,1)#8
soot.PackManager.writeOutput(Ljava/util/Iterator;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#9
soot.PackManager.writeOutput(Ljava/util/Iterator;)V#Constant(I,0)#10
soot.PackManager.writeOutput(Ljava/util/Iterator;)V#ConditionalBranch(I,ne,1)#11
soot.PackManager.writeOutput(Ljava/util/Iterator;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.PackManager.writeOutput(Ljava/util/Iterator;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#2
soot.PackManager.writeOutput(Ljava/util/Iterator;)V#CheckCast(Lsoot/SootClass;)#3
soot.PackManager.writeOutput(Ljava/util/Iterator;)V#LocalStore(Ljava/lang/Object;,2)#4
soot.PackManager.writeOutput(Ljava/util/Iterator;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.PackManager.writeOutput(Ljava/util/Iterator;)V#LocalLoad(Ljava/lang/Object;,2)#6
soot.PackManager.writeOutput(Ljava/util/Iterator;)V#Invoke(VIRTUAL,Lsoot/PackManager;,writeClass,(Lsoot/SootClass;)V)#7
soot.PackManager.writeClass(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#0
soot.PackManager.writeClass(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/options/Options;,output_format,()I)#1
soot.PackManager.writeClass(Lsoot/SootClass;)V#LocalStore(I,2)#2
soot.PackManager.writeClass(Lsoot/SootClass;)V#LocalLoad(I,2)#3
soot.PackManager.writeClass(Lsoot/SootClass;)V#Constant(I,10)#4
soot.PackManager.writeClass(Lsoot/SootClass;)V#ConditionalBranch(I,ne,7)#5
soot.PackManager.writeClass(Lsoot/SootClass;)V#LocalLoad(I,2)#7
soot.PackManager.writeClass(Lsoot/SootClass;)V#Constant(I,13)#8
soot.PackManager.writeClass(Lsoot/SootClass;)V#ConditionalBranch(I,ne,11)#9
soot.PackManager.writeClass(Lsoot/SootClass;)V#Constant(L;,null)#11
soot.PackManager.writeClass(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,3)#12
soot.PackManager.writeClass(Lsoot/SootClass;)V#Constant(L;,null)#13
soot.PackManager.writeClass(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,4)#14
soot.PackManager.writeClass(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/SourceLocator;,v,()Lsoot/SourceLocator;)#15
soot.PackManager.writeClass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#16
soot.PackManager.writeClass(Lsoot/SootClass;)V#LocalLoad(I,2)#17
soot.PackManager.writeClass(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SourceLocator;,getFileNameFor,(Lsoot/SootClass;I)Ljava/lang/String;)#18
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#LocalLoad(I,2)#0
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#Constant(I,10)#1
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#ConditionalBranch(I,ne,5)#2
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#New(Ljava/lang/StringBuffer;,0)#5
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#Dup(1,0)#6
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuffer;,<init>,()V)#7
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,3)#8
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#9
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#Invoke(VIRTUAL,Lsoot/options/Options;,output_jar,()Z)#10
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#Constant(I,0)#11
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#ConditionalBranch(I,ne,18)#12
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#13
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#14
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#Invoke(VIRTUAL,Lsoot/SourceLocator;,getOutputDir,()Ljava/lang/String;)#15
soot.SourceLocator.getOutputDir()Ljava/lang/String;#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#0
soot.SourceLocator.getOutputDir()Ljava/lang/String;#Invoke(VIRTUAL,Lsoot/options/Options;,output_dir,()Ljava/lang/String;)#1
soot.options.Options.output_dir()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.output_dir()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsoot/options/Options;,output_dir)#1
soot.options.Options.output_dir()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
soot.SourceLocator.getOutputDir()Ljava/lang/String;#LocalStore(Ljava/lang/Object;,1)#2
soot.SourceLocator.getOutputDir()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#3
soot.SourceLocator.getOutputDir()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#4
soot.SourceLocator.getOutputDir()Ljava/lang/String;#Constant(I,0)#5
soot.SourceLocator.getOutputDir()Ljava/lang/String;#ConditionalBranch(I,ne,9)#6
soot.SourceLocator.getOutputDir()Ljava/lang/String;#Constant(Ljava/lang/String;,"sootOutput")#7
soot.SourceLocator.getOutputDir()Ljava/lang/String;#LocalStore(Ljava/lang/Object;,1)#8
soot.SourceLocator.getOutputDir()Ljava/lang/String;#New(Ljava/io/File;,0)#9
soot.SourceLocator.getOutputDir()Ljava/lang/String;#Dup(1,0)#10
soot.SourceLocator.getOutputDir()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#11
soot.SourceLocator.getOutputDir()Ljava/lang/String;#Invoke(SPECIAL,Ljava/io/File;,<init>,(Ljava/lang/String;)V)#12
soot.SourceLocator.getOutputDir()Ljava/lang/String;#LocalStore(Ljava/lang/Object;,2)#13
soot.SourceLocator.getOutputDir()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#14
soot.SourceLocator.getOutputDir()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/io/File;,exists,()Z)#15
soot.SourceLocator.getOutputDir()Ljava/lang/String;#Constant(I,0)#16
soot.SourceLocator.getOutputDir()Ljava/lang/String;#ConditionalBranch(I,ne,42)#17
soot.SourceLocator.getOutputDir()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#42
soot.SourceLocator.getOutputDir()Ljava/lang/String;#Return(Ljava/lang/Object;)#43
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(Ljava/lang/String;)Ljava/lang/StringBuffer;)#16
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#Pop(1)#17
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#18
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,length,()I)#19
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#Constant(I,0)#20
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#ConditionalBranch(I,le,34)#21
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#22
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#23
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,length,()I)#24
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#Constant(I,1)#25
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#BinaryOp(I,sub)#26
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,charAt,(I)C)#27
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#Get(C,STATIC,Ljava/io/File;,separatorChar)#28
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#ConditionalBranch(I,eq,34)#29
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#30
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#Get(C,STATIC,Ljava/io/File;,separatorChar)#31
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(C)Ljava/lang/StringBuffer;)#32
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#Pop(1)#33
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#LocalLoad(I,2)#34
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#Constant(I,13)#35
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#ConditionalBranch(I,eq,79)#36
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#LocalLoad(I,2)#37
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#Constant(I,12)#38
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#ConditionalBranch(I,ne,49)#39
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#40
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#41
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#Invoke(VIRTUAL,Lsoot/SootClass;,getName,()Ljava/lang/String;)#42
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#Constant(I,46)#43
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#Get(C,STATIC,Ljava/io/File;,separatorChar)#44
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,replace,(CC)Ljava/lang/String;)#45
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(Ljava/lang/String;)Ljava/lang/StringBuffer;)#46
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#Pop(1)#47
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#Goto(70)#48
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#70
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#71
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#LocalLoad(I,2)#72
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#Invoke(VIRTUAL,Lsoot/SourceLocator;,getExtensionFor,(I)Ljava/lang/String;)#73
soot.SourceLocator.getExtensionFor(I)Ljava/lang/String;#LocalLoad(I,1)#0
soot.SourceLocator.getExtensionFor(I)Ljava/lang/String;#Switch(28,1,6,2,8,3,10,4,12,5,2,6,4,7,16,8,14,9,24,10,28,11,22,12,18,13,20,14,26)#1
soot.SourceLocator.getExtensionFor(I)Ljava/lang/String;#Constant(Ljava/lang/String;,".class")#18
soot.SourceLocator.getExtensionFor(I)Ljava/lang/String;#Return(Ljava/lang/Object;)#19
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(Ljava/lang/String;)Ljava/lang/StringBuffer;)#74
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#Pop(1)#75
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#76
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,toString,()Ljava/lang/String;)#77
soot.SourceLocator.getFileNameFor(Lsoot/SootClass;I)Ljava/lang/String;#Return(Ljava/lang/Object;)#78
soot.PackManager.writeClass(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,5)#19
soot.PackManager.writeClass(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#20
soot.PackManager.writeClass(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/options/Options;,gzip,()Z)#21
soot.options.Options.gzip()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.gzip()Z#Get(Z,NONSTATIC,Lsoot/options/Options;,gzip)#1
soot.options.Options.gzip()Z#Return(I)#2
soot.PackManager.writeClass(Lsoot/SootClass;)V#Constant(I,0)#22
soot.PackManager.writeClass(Lsoot/SootClass;)V#ConditionalBranch(I,eq,33)#23
soot.PackManager.writeClass(Lsoot/SootClass;)V#Constant(L;,null)#33
soot.PackManager.writeClass(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,6)#34
soot.PackManager.writeClass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#35
soot.PackManager.writeClass(Lsoot/SootClass;)V#Get(Ljava/util/zip/ZipOutputStream;,NONSTATIC,Lsoot/PackManager;,jarFile)#36
soot.PackManager.writeClass(Lsoot/SootClass;)V#Constant(L;,null)#37
soot.PackManager.writeClass(Lsoot/SootClass;)V#ConditionalBranch(Ljava/lang/Object;,eq,52)#38
soot.PackManager.writeClass(Lsoot/SootClass;)V#New(Ljava/io/File;,0)#52
soot.PackManager.writeClass(Lsoot/SootClass;)V#Dup(1,0)#53
soot.PackManager.writeClass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,5)#54
soot.PackManager.writeClass(Lsoot/SootClass;)V#Invoke(SPECIAL,Ljava/io/File;,<init>,(Ljava/lang/String;)V)#55
soot.PackManager.writeClass(Lsoot/SootClass;)V#Invoke(VIRTUAL,Ljava/io/File;,getParentFile,()Ljava/io/File;)#56
soot.PackManager.writeClass(Lsoot/SootClass;)V#Invoke(VIRTUAL,Ljava/io/File;,mkdirs,()Z)#57
soot.PackManager.writeClass(Lsoot/SootClass;)V#Pop(1)#58
soot.PackManager.writeClass(Lsoot/SootClass;)V#New(Ljava/io/FileOutputStream;,0)#59
soot.PackManager.writeClass(Lsoot/SootClass;)V#Dup(1,0)#60
soot.PackManager.writeClass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,5)#61
soot.PackManager.writeClass(Lsoot/SootClass;)V#Invoke(SPECIAL,Ljava/io/FileOutputStream;,<init>,(Ljava/lang/String;)V)#62
soot.PackManager.writeClass(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,3)#63
soot.PackManager.writeClass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,3)#64
soot.PackManager.writeClass(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,6)#65
soot.PackManager.writeClass(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#66
soot.PackManager.writeClass(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/options/Options;,gzip,()Z)#67
soot.PackManager.writeClass(Lsoot/SootClass;)V#Constant(I,0)#68
soot.PackManager.writeClass(Lsoot/SootClass;)V#ConditionalBranch(I,eq,75)#69
soot.PackManager.writeClass(Lsoot/SootClass;)V#LocalLoad(I,2)#75
soot.PackManager.writeClass(Lsoot/SootClass;)V#Constant(I,12)#76
soot.PackManager.writeClass(Lsoot/SootClass;)V#ConditionalBranch(I,ne,83)#77
soot.PackManager.writeClass(Lsoot/SootClass;)V#New(Lsoot/util/JasminOutputStream;,0)#78
soot.PackManager.writeClass(Lsoot/SootClass;)V#Dup(1,0)#79
soot.PackManager.writeClass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,3)#80
soot.PackManager.writeClass(Lsoot/SootClass;)V#Invoke(SPECIAL,Lsoot/util/JasminOutputStream;,<init>,(Ljava/io/OutputStream;)V)#81
soot.util.JasminOutputStream.<init>(Ljava/io/OutputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.util.JasminOutputStream.<init>(Ljava/io/OutputStream;)V#Invoke(SPECIAL,Ljava/io/ByteArrayOutputStream;,<init>,()V)#1
soot.util.JasminOutputStream.<init>(Ljava/io/OutputStream;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.util.JasminOutputStream.<init>(Ljava/io/OutputStream;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.util.JasminOutputStream.<init>(Ljava/io/OutputStream;)V#Put(Ljava/io/OutputStream;,NONSTATIC,Lsoot/util/JasminOutputStream;,out)#4
soot.util.JasminOutputStream.<init>(Ljava/io/OutputStream;)V#Return(V)#5
soot.PackManager.writeClass(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,3)#82
soot.PackManager.writeClass(Lsoot/SootClass;)V#New(Ljava/io/PrintWriter;,0)#83
soot.PackManager.writeClass(Lsoot/SootClass;)V#Dup(1,0)#84
soot.PackManager.writeClass(Lsoot/SootClass;)V#New(Ljava/io/OutputStreamWriter;,0)#85
soot.PackManager.writeClass(Lsoot/SootClass;)V#Dup(1,0)#86
soot.PackManager.writeClass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,3)#87
soot.PackManager.writeClass(Lsoot/SootClass;)V#Invoke(SPECIAL,Ljava/io/OutputStreamWriter;,<init>,(Ljava/io/OutputStream;)V)#88
soot.PackManager.writeClass(Lsoot/SootClass;)V#Invoke(SPECIAL,Ljava/io/PrintWriter;,<init>,(Ljava/io/Writer;)V)#89
soot.PackManager.writeClass(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,4)#90
soot.PackManager.writeClass(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#91
soot.PackManager.writeClass(Lsoot/SootClass;)V#Get(Ljava/io/PrintStream;,NONSTATIC,Lsoot/G;,out)#92
soot.PackManager.writeClass(Lsoot/SootClass;)V#New(Ljava/lang/StringBuilder;,0)#93
soot.PackManager.writeClass(Lsoot/SootClass;)V#Dup(1,0)#94
soot.PackManager.writeClass(Lsoot/SootClass;)V#Constant(Ljava/lang/String;,"Writing to ")#95
soot.PackManager.writeClass(Lsoot/SootClass;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#96
soot.PackManager.writeClass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,5)#97
soot.PackManager.writeClass(Lsoot/SootClass;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#98
soot.PackManager.writeClass(Lsoot/SootClass;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#99
soot.PackManager.writeClass(Lsoot/SootClass;)V#Invoke(VIRTUAL,Ljava/io/PrintStream;,println,(Ljava/lang/String;)V)#100
soot.PackManager.writeClass(Lsoot/SootClass;)V#Goto(115)#101
soot.PackManager.writeClass(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#115
soot.PackManager.writeClass(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/options/Options;,xml_attributes,()Z)#116
soot.PackManager.writeClass(Lsoot/SootClass;)V#Constant(I,0)#117
soot.PackManager.writeClass(Lsoot/SootClass;)V#ConditionalBranch(I,eq,122)#118
soot.PackManager.writeClass(Lsoot/SootClass;)V#LocalLoad(I,2)#122
soot.PackManager.writeClass(Lsoot/SootClass;)V#Switch(195,1,150,2,142,3,150,4,142,5,150,6,142,7,150,8,142,9,166,10,195,11,124,12,124,13,195,14,182)#123
soot.PackManager.writeClass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#124
soot.PackManager.writeClass(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,containsBafBody,()Z)#125
soot.SootClass.containsBafBody()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.containsBafBody()Z#Invoke(VIRTUAL,Lsoot/SootClass;,methodIterator,()Ljava/util/Iterator;)#1
soot.SootClass.containsBafBody()Z#LocalStore(Ljava/lang/Object;,1)#2
soot.SootClass.containsBafBody()Z#Goto(19)#3
soot.SootClass.containsBafBody()Z#LocalLoad(Ljava/lang/Object;,1)#19
soot.SootClass.containsBafBody()Z#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#20
soot.SootClass.containsBafBody()Z#Constant(I,0)#21
soot.SootClass.containsBafBody()Z#ConditionalBranch(I,ne,4)#22
soot.SootClass.containsBafBody()Z#LocalLoad(Ljava/lang/Object;,1)#4
soot.SootClass.containsBafBody()Z#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#5
soot.SootClass.containsBafBody()Z#CheckCast(Lsoot/SootMethod;)#6
soot.SootClass.containsBafBody()Z#LocalStore(Ljava/lang/Object;,2)#7
soot.SootClass.containsBafBody()Z#LocalLoad(Ljava/lang/Object;,2)#8
soot.SootClass.containsBafBody()Z#Invoke(VIRTUAL,Lsoot/SootMethod;,hasActiveBody,()Z)#9
soot.SootClass.containsBafBody()Z#Constant(I,0)#10
soot.SootClass.containsBafBody()Z#ConditionalBranch(I,eq,19)#11
soot.SootClass.containsBafBody()Z#LocalLoad(Ljava/lang/Object;,2)#12
soot.SootClass.containsBafBody()Z#Invoke(VIRTUAL,Lsoot/SootMethod;,getActiveBody,()Lsoot/Body;)#13
soot.SootClass.containsBafBody()Z#Instanceof(Lsoot/baf/BafBody;)#14
soot.SootClass.containsBafBody()Z#Constant(I,0)#15
soot.SootClass.containsBafBody()Z#ConditionalBranch(I,eq,19)#16
soot.SootClass.containsBafBody()Z#Constant(I,1)#17
soot.SootClass.containsBafBody()Z#Return(I)#18
soot.PackManager.writeClass(Lsoot/SootClass;)V#Constant(I,0)#126
soot.PackManager.writeClass(Lsoot/SootClass;)V#ConditionalBranch(I,eq,135)#127
soot.PackManager.writeClass(Lsoot/SootClass;)V#New(Lsoot/baf/JasminClass;,0)#128
soot.PackManager.writeClass(Lsoot/SootClass;)V#Dup(1,0)#129
soot.PackManager.writeClass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#130
soot.PackManager.writeClass(Lsoot/SootClass;)V#Invoke(SPECIAL,Lsoot/baf/JasminClass;,<init>,(Lsoot/SootClass;)V)#131
soot.baf.JasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.JasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.baf.JasminClass.<init>(Lsoot/SootClass;)V#Invoke(SPECIAL,Lsoot/AbstractJasminClass;,<init>,(Lsoot/SootClass;)V)#2
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(I,0)#3
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Put(I,NONSTATIC,Lsoot/AbstractJasminClass;,currentStackHeight)#4
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(I,0)#6
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Put(I,NONSTATIC,Lsoot/AbstractJasminClass;,maxStackHeight)#7
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#New(Ljava/util/HashMap;,0)#9
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Dup(1,0)#10
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#11
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/AbstractJasminClass;,blockToStackHeight)#12
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#13
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#New(Ljava/util/HashMap;,0)#14
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Dup(1,0)#15
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#16
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/AbstractJasminClass;,blockToLogicalStackHeight)#17
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#18
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#19
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(I,0)#20
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#ConditionalBranch(I,eq,25)#21
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#25
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/options/Options;,verbose,()Z)#26
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(I,0)#27
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#ConditionalBranch(I,eq,42)#28
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#42
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#New(Ljava/util/LinkedList;,0)#43
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Dup(1,0)#44
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#45
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/AbstractJasminClass;,code)#46
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#47
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getModifiers,()I)#48
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalStore(I,2)#49
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#50
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(Ljava/lang/String;,"SourceFileTag")#51
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getTag,(Ljava/lang/String;)Lsoot/tagkit/Tag;)#52
soot.tagkit.SourceFileTag.getName()Ljava/lang/String;#Constant(Ljava/lang/String;,"SourceFileTag")#0
soot.tagkit.SourceFileTag.getName()Ljava/lang/String;#Return(Ljava/lang/Object;)#1
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(L;,null)#53
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#ConditionalBranch(Ljava/lang/Object;,eq,75)#54
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#55
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/options/Options;,no_output_source_file_attribute,()Z)#56
soot.options.Options.no_output_source_file_attribute()Z#LocalLoad(Ljava/lang/Object;,0)#0
soot.options.Options.no_output_source_file_attribute()Z#Get(Z,NONSTATIC,Lsoot/options/Options;,no_output_source_file_attribute)#1
soot.options.Options.no_output_source_file_attribute()Z#Return(I)#2
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(I,0)#57
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#ConditionalBranch(I,ne,75)#58
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#59
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(Ljava/lang/String;,"SourceFileTag")#60
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getTag,(Ljava/lang/String;)Lsoot/tagkit/Tag;)#61
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#CheckCast(Lsoot/tagkit/SourceFileTag;)#62
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/tagkit/SourceFileTag;,getSourceFile,()Ljava/lang/String;)#63
soot.tagkit.SourceFileTag.getSourceFile()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.tagkit.SourceFileTag.getSourceFile()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsoot/tagkit/SourceFileTag;,sourceFile)#1
soot.tagkit.SourceFileTag.getSourceFile()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,3)#64
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#65
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#New(Ljava/lang/StringBuilder;,0)#66
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Dup(1,0)#67
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(Ljava/lang/String;,".source ")#68
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#69
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,3)#70
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/util/StringTools;,getEscapedStringOf,(Ljava/lang/String;)Ljava/lang/String;)#71
soot.util.StringTools.<clinit>()V#Constant(Ljava/lang/String;,"line.separator")#0
soot.util.StringTools.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#1
soot.util.StringTools.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lsoot/util/StringTools;,lineSeparator)#2
soot.util.StringTools.<clinit>()V#Return(V)#3
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#New(Ljava/lang/StringBuffer;,0)#0
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#Dup(1,0)#1
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuffer;,<init>,()V)#2
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,5)#3
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#New(Ljava/lang/StringBuffer;,0)#4
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#Dup(1,0)#5
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuffer;,<init>,()V)#6
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,6)#7
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#8
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,toCharArray,()[C)#9
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,1)#10
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#Get(Ljava/lang/String;,STATIC,Lsoot/util/StringTools;,lineSeparator)#11
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#12
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#13
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,2)#14
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#Constant(I,-1)#15
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,3)#16
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#Get(Ljava/lang/String;,STATIC,Lsoot/util/StringTools;,lineSeparator)#17
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#18
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#Constant(I,2)#19
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ne,25)#20
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#Get(Ljava/lang/String;,STATIC,Lsoot/util/StringTools;,lineSeparator)#21
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#Constant(I,1)#22
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#23
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,3)#24
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#25
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#Dup(1,0)#26
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,10)#27
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#ArrayLength()#28
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,9)#29
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#30
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,8)#31
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#Goto(92)#32
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,8)#92
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,9)#93
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,lt,33)#94
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,10)#33
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,8)#34
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#ArrayLoad(C)#35
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,7)#36
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,7)#37
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,4)#38
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,4)#39
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#Constant(I,32)#40
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,lt,45)#41
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,4)#42
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#Constant(I,126)#43
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,le,51)#44
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,4)#51
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#Constant(I,92)#52
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,60)#53
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,5)#54
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,4)#55
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#Conversion(I,C)#56
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(C)Ljava/lang/StringBuffer;)#57
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#Pop(1)#58
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#Goto(88)#59
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,8)#88
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#Constant(I,1)#89
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#BinaryOp(I,add)#90
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,8)#91
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,5)#95
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,toString,()Ljava/lang/String;)#96
soot.util.StringTools.getEscapedStringOf(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#97
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#72
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#73
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/AbstractJasminClass;,emit,(Ljava/lang/String;)V)#74
soot.AbstractJasminClass.emit(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.AbstractJasminClass.emit(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.AbstractJasminClass.emit(Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/AbstractJasminClass;,okayEmit,(Ljava/lang/String;)V)#2
soot.AbstractJasminClass.okayEmit(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.AbstractJasminClass.okayEmit(Ljava/lang/String;)V#Get(Z,NONSTATIC,Lsoot/AbstractJasminClass;,isEmittingMethodCode)#1
soot.AbstractJasminClass.okayEmit(Ljava/lang/String;)V#Constant(I,0)#2
soot.AbstractJasminClass.okayEmit(Ljava/lang/String;)V#ConditionalBranch(I,eq,21)#3
soot.AbstractJasminClass.okayEmit(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#21
soot.AbstractJasminClass.okayEmit(Ljava/lang/String;)V#Get(Ljava/util/List;,NONSTATIC,Lsoot/AbstractJasminClass;,code)#22
soot.AbstractJasminClass.okayEmit(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#23
soot.AbstractJasminClass.okayEmit(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#24
soot.AbstractJasminClass.okayEmit(Ljava/lang/String;)V#Pop(1)#25
soot.AbstractJasminClass.okayEmit(Ljava/lang/String;)V#Return(V)#26
soot.AbstractJasminClass.emit(Ljava/lang/String;)V#Return(V)#3
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(I,2)#75
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/Modifier;,isInterface,(I)Z)#76
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(I,0)#77
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#ConditionalBranch(I,eq,100)#78
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#100
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#New(Ljava/lang/StringBuilder;,0)#101
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Dup(1,0)#102
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(Ljava/lang/String;,".class ")#103
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#104
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(I,2)#105
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/Modifier;,toString,(I)Ljava/lang/String;)#106
soot.Modifier.toString(I)Ljava/lang/String;#New(Ljava/lang/StringBuffer;,0)#0
soot.Modifier.toString(I)Ljava/lang/String;#Dup(1,0)#1
soot.Modifier.toString(I)Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuffer;,<init>,()V)#2
soot.Modifier.toString(I)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,1)#3
soot.Modifier.toString(I)Ljava/lang/String;#LocalLoad(I,0)#4
soot.Modifier.toString(I)Ljava/lang/String;#Invoke(STATIC,Lsoot/Modifier;,isPublic,(I)Z)#5
soot.Modifier.isPublic(I)Z#LocalLoad(I,0)#0
soot.Modifier.isPublic(I)Z#Constant(I,1)#1
soot.Modifier.isPublic(I)Z#BinaryOp(I,and)#2
soot.Modifier.isPublic(I)Z#Constant(I,0)#3
soot.Modifier.isPublic(I)Z#ConditionalBranch(I,eq,7)#4
soot.Modifier.isPublic(I)Z#Constant(I,1)#5
soot.Modifier.isPublic(I)Z#Return(I)#6
soot.Modifier.toString(I)Ljava/lang/String;#Constant(I,0)#6
soot.Modifier.toString(I)Ljava/lang/String;#ConditionalBranch(I,eq,13)#7
soot.Modifier.toString(I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#8
soot.Modifier.toString(I)Ljava/lang/String;#Constant(Ljava/lang/String;,"public ")#9
soot.Modifier.toString(I)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(Ljava/lang/String;)Ljava/lang/StringBuffer;)#10
soot.Modifier.toString(I)Ljava/lang/String;#Pop(1)#11
soot.Modifier.toString(I)Ljava/lang/String;#Goto(30)#12
soot.Modifier.toString(I)Ljava/lang/String;#LocalLoad(I,0)#30
soot.Modifier.toString(I)Ljava/lang/String;#Invoke(STATIC,Lsoot/Modifier;,isAbstract,(I)Z)#31
soot.Modifier.toString(I)Ljava/lang/String;#Constant(I,0)#32
soot.Modifier.toString(I)Ljava/lang/String;#ConditionalBranch(I,eq,38)#33
soot.Modifier.toString(I)Ljava/lang/String;#LocalLoad(I,0)#38
soot.Modifier.toString(I)Ljava/lang/String;#Invoke(STATIC,Lsoot/Modifier;,isStatic,(I)Z)#39
soot.Modifier.toString(I)Ljava/lang/String;#Constant(I,0)#40
soot.Modifier.toString(I)Ljava/lang/String;#ConditionalBranch(I,eq,46)#41
soot.Modifier.toString(I)Ljava/lang/String;#LocalLoad(I,0)#46
soot.Modifier.toString(I)Ljava/lang/String;#Invoke(STATIC,Lsoot/Modifier;,isFinal,(I)Z)#47
soot.Modifier.isFinal(I)Z#LocalLoad(I,0)#0
soot.Modifier.isFinal(I)Z#Constant(I,16)#1
soot.Modifier.isFinal(I)Z#BinaryOp(I,and)#2
soot.Modifier.isFinal(I)Z#Constant(I,0)#3
soot.Modifier.isFinal(I)Z#ConditionalBranch(I,eq,7)#4
soot.Modifier.isFinal(I)Z#Constant(I,0)#7
soot.Modifier.isFinal(I)Z#Return(I)#8
soot.Modifier.toString(I)Ljava/lang/String;#Constant(I,0)#48
soot.Modifier.toString(I)Ljava/lang/String;#ConditionalBranch(I,eq,54)#49
soot.Modifier.toString(I)Ljava/lang/String;#LocalLoad(I,0)#54
soot.Modifier.toString(I)Ljava/lang/String;#Invoke(STATIC,Lsoot/Modifier;,isSynchronized,(I)Z)#55
soot.Modifier.isSynchronized(I)Z#LocalLoad(I,0)#0
soot.Modifier.isSynchronized(I)Z#Constant(I,32)#1
soot.Modifier.isSynchronized(I)Z#BinaryOp(I,and)#2
soot.Modifier.isSynchronized(I)Z#Constant(I,0)#3
soot.Modifier.isSynchronized(I)Z#ConditionalBranch(I,eq,7)#4
soot.Modifier.isSynchronized(I)Z#Constant(I,0)#7
soot.Modifier.isSynchronized(I)Z#Return(I)#8
soot.Modifier.toString(I)Ljava/lang/String;#Constant(I,0)#56
soot.Modifier.toString(I)Ljava/lang/String;#ConditionalBranch(I,eq,62)#57
soot.Modifier.toString(I)Ljava/lang/String;#LocalLoad(I,0)#62
soot.Modifier.toString(I)Ljava/lang/String;#Invoke(STATIC,Lsoot/Modifier;,isNative,(I)Z)#63
soot.Modifier.toString(I)Ljava/lang/String;#Constant(I,0)#64
soot.Modifier.toString(I)Ljava/lang/String;#ConditionalBranch(I,eq,70)#65
soot.Modifier.toString(I)Ljava/lang/String;#LocalLoad(I,0)#70
soot.Modifier.toString(I)Ljava/lang/String;#Invoke(STATIC,Lsoot/Modifier;,isTransient,(I)Z)#71
soot.Modifier.isTransient(I)Z#LocalLoad(I,0)#0
soot.Modifier.isTransient(I)Z#Constant(I,128)#1
soot.Modifier.isTransient(I)Z#BinaryOp(I,and)#2
soot.Modifier.isTransient(I)Z#Constant(I,0)#3
soot.Modifier.isTransient(I)Z#ConditionalBranch(I,eq,7)#4
soot.Modifier.isTransient(I)Z#Constant(I,0)#7
soot.Modifier.isTransient(I)Z#Return(I)#8
soot.Modifier.toString(I)Ljava/lang/String;#Constant(I,0)#72
soot.Modifier.toString(I)Ljava/lang/String;#ConditionalBranch(I,eq,78)#73
soot.Modifier.toString(I)Ljava/lang/String;#LocalLoad(I,0)#78
soot.Modifier.toString(I)Ljava/lang/String;#Invoke(STATIC,Lsoot/Modifier;,isVolatile,(I)Z)#79
soot.Modifier.isVolatile(I)Z#LocalLoad(I,0)#0
soot.Modifier.isVolatile(I)Z#Constant(I,64)#1
soot.Modifier.isVolatile(I)Z#BinaryOp(I,and)#2
soot.Modifier.isVolatile(I)Z#Constant(I,0)#3
soot.Modifier.isVolatile(I)Z#ConditionalBranch(I,eq,7)#4
soot.Modifier.isVolatile(I)Z#Constant(I,0)#7
soot.Modifier.isVolatile(I)Z#Return(I)#8
soot.Modifier.toString(I)Ljava/lang/String;#Constant(I,0)#80
soot.Modifier.toString(I)Ljava/lang/String;#ConditionalBranch(I,eq,86)#81
soot.Modifier.toString(I)Ljava/lang/String;#LocalLoad(I,0)#86
soot.Modifier.toString(I)Ljava/lang/String;#Invoke(STATIC,Lsoot/Modifier;,isStrictFP,(I)Z)#87
soot.Modifier.isStrictFP(I)Z#LocalLoad(I,0)#0
soot.Modifier.isStrictFP(I)Z#Constant(I,2048)#1
soot.Modifier.isStrictFP(I)Z#BinaryOp(I,and)#2
soot.Modifier.isStrictFP(I)Z#Constant(I,0)#3
soot.Modifier.isStrictFP(I)Z#ConditionalBranch(I,eq,7)#4
soot.Modifier.isStrictFP(I)Z#Constant(I,0)#7
soot.Modifier.isStrictFP(I)Z#Return(I)#8
soot.Modifier.toString(I)Ljava/lang/String;#Constant(I,0)#88
soot.Modifier.toString(I)Ljava/lang/String;#ConditionalBranch(I,eq,94)#89
soot.Modifier.toString(I)Ljava/lang/String;#LocalLoad(I,0)#94
soot.Modifier.toString(I)Ljava/lang/String;#Invoke(STATIC,Lsoot/Modifier;,isAnnotation,(I)Z)#95
soot.Modifier.isAnnotation(I)Z#LocalLoad(I,0)#0
soot.Modifier.isAnnotation(I)Z#Constant(I,8192)#1
soot.Modifier.isAnnotation(I)Z#BinaryOp(I,and)#2
soot.Modifier.isAnnotation(I)Z#Constant(I,0)#3
soot.Modifier.isAnnotation(I)Z#ConditionalBranch(I,eq,7)#4
soot.Modifier.isAnnotation(I)Z#Constant(I,0)#7
soot.Modifier.isAnnotation(I)Z#Return(I)#8
soot.Modifier.toString(I)Ljava/lang/String;#Constant(I,0)#96
soot.Modifier.toString(I)Ljava/lang/String;#ConditionalBranch(I,eq,102)#97
soot.Modifier.toString(I)Ljava/lang/String;#LocalLoad(I,0)#102
soot.Modifier.toString(I)Ljava/lang/String;#Invoke(STATIC,Lsoot/Modifier;,isEnum,(I)Z)#103
soot.Modifier.isEnum(I)Z#LocalLoad(I,0)#0
soot.Modifier.isEnum(I)Z#Constant(I,16384)#1
soot.Modifier.isEnum(I)Z#BinaryOp(I,and)#2
soot.Modifier.isEnum(I)Z#Constant(I,0)#3
soot.Modifier.isEnum(I)Z#ConditionalBranch(I,eq,7)#4
soot.Modifier.isEnum(I)Z#Constant(I,0)#7
soot.Modifier.isEnum(I)Z#Return(I)#8
soot.Modifier.toString(I)Ljava/lang/String;#Constant(I,0)#104
soot.Modifier.toString(I)Ljava/lang/String;#ConditionalBranch(I,eq,110)#105
soot.Modifier.toString(I)Ljava/lang/String;#LocalLoad(I,0)#110
soot.Modifier.toString(I)Ljava/lang/String;#Invoke(STATIC,Lsoot/Modifier;,isInterface,(I)Z)#111
soot.Modifier.toString(I)Ljava/lang/String;#Constant(I,0)#112
soot.Modifier.toString(I)Ljava/lang/String;#ConditionalBranch(I,eq,118)#113
soot.Modifier.toString(I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#118
soot.Modifier.toString(I)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,toString,()Ljava/lang/String;)#119
soot.Modifier.toString(I)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,trim,()Ljava/lang/String;)#120
soot.Modifier.toString(I)Ljava/lang/String;#Return(Ljava/lang/Object;)#121
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#107
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(Ljava/lang/String;," ")#108
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#109
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#110
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getName,()Ljava/lang/String;)#111
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/AbstractJasminClass;,slashify,(Ljava/lang/String;)Ljava/lang/String;)#112
soot.AbstractJasminClass.slashify(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.AbstractJasminClass.slashify(Ljava/lang/String;)Ljava/lang/String;#Constant(I,46)#1
soot.AbstractJasminClass.slashify(Ljava/lang/String;)Ljava/lang/String;#Constant(I,47)#2
soot.AbstractJasminClass.slashify(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,replace,(CC)Ljava/lang/String;)#3
soot.AbstractJasminClass.slashify(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#4
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#113
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#114
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/AbstractJasminClass;,emit,(Ljava/lang/String;)V)#115
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#116
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,hasSuperclass,()Z)#117
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(I,0)#118
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#ConditionalBranch(I,eq,133)#119
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#120
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#New(Ljava/lang/StringBuilder;,0)#121
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Dup(1,0)#122
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(Ljava/lang/String;,".super ")#123
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#124
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#125
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getSuperclass,()Lsoot/SootClass;)#126
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getName,()Ljava/lang/String;)#127
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/AbstractJasminClass;,slashify,(Ljava/lang/String;)Ljava/lang/String;)#128
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#129
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#130
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/AbstractJasminClass;,emit,(Ljava/lang/String;)V)#131
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Goto(136)#132
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#136
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(Ljava/lang/String;,"")#137
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/AbstractJasminClass;,emit,(Ljava/lang/String;)V)#138
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#139
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getInterfaces,()Lsoot/util/Chain;)#140
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#141
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,2)#142
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Goto(159)#143
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,2)#159
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#160
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(I,0)#161
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#ConditionalBranch(I,ne,144)#162
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#163
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getTags,()Ljava/util/List;)#164
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#165
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,2)#166
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Goto(198)#167
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,2)#198
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#199
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(I,0)#200
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#ConditionalBranch(I,ne,168)#201
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,2)#168
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#169
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#CheckCast(Lsoot/tagkit/Tag;)#170
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,3)#171
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,3)#172
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Instanceof(Lsoot/tagkit/Attribute;)#173
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(I,0)#174
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#ConditionalBranch(I,eq,198)#175
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#202
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(Ljava/lang/String;,"SyntheticTag")#203
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,hasTag,(Ljava/lang/String;)Z)#204
soot.tagkit.AbstractHost.searchForTag(Ljava/lang/String;)I#LocalLoad(I,2)#19
soot.tagkit.AbstractHost.searchForTag(Ljava/lang/String;)I#Constant(I,1)#20
soot.tagkit.AbstractHost.searchForTag(Ljava/lang/String;)I#BinaryOp(I,add)#21
soot.tagkit.AbstractHost.searchForTag(Ljava/lang/String;)I#LocalStore(I,2)#22
soot.tagkit.AbstractHost.searchForTag(Ljava/lang/String;)I#Constant(I,-1)#27
soot.tagkit.AbstractHost.searchForTag(Ljava/lang/String;)I#Return(I)#28
soot.tagkit.AbstractHost.hasTag(Ljava/lang/String;)Z#Constant(I,0)#7
soot.tagkit.AbstractHost.hasTag(Ljava/lang/String;)Z#Return(I)#8
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(I,0)#205
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#ConditionalBranch(I,eq,210)#206
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#210
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(Ljava/lang/String;,"InnerClassAttribute")#211
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,hasTag,(Ljava/lang/String;)Z)#212
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(I,0)#213
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#ConditionalBranch(I,eq,275)#214
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#275
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(Ljava/lang/String;,"EnclosingMethodTag")#276
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,hasTag,(Ljava/lang/String;)Z)#277
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(I,0)#278
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#ConditionalBranch(I,eq,332)#279
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#332
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(Ljava/lang/String;,"DeprecatedTag")#333
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,hasTag,(Ljava/lang/String;)Z)#334
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(I,0)#335
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#ConditionalBranch(I,eq,340)#336
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#340
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(Ljava/lang/String;,"SignatureTag")#341
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,hasTag,(Ljava/lang/String;)Z)#342
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(I,0)#343
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#ConditionalBranch(I,eq,369)#344
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#369
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getTags,()Ljava/util/List;)#370
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#371
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,3)#372
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Goto(390)#373
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,3)#390
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#391
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(I,0)#392
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#ConditionalBranch(I,ne,374)#393
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,3)#374
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#375
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#CheckCast(Lsoot/tagkit/Tag;)#376
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,4)#377
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,4)#378
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(INTERFACE,Lsoot/tagkit/Tag;,getName,()Ljava/lang/String;)#379
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(Ljava/lang/String;,"VisibilityAnnotationTag")#380
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#381
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(I,0)#382
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#ConditionalBranch(I,eq,390)#383
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#394
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getFields,()Lsoot/util/Chain;)#395
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#396
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,4)#397
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Goto(717)#398
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,4)#717
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#718
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(I,0)#719
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#ConditionalBranch(I,ne,399)#720
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#721
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getFieldCount,()I)#722
soot.SootClass.getFieldCount()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootClass.getFieldCount()I#Constant(I,2)#1
soot.SootClass.getFieldCount()I#Invoke(VIRTUAL,Lsoot/SootClass;,checkLevel,(I)V)#2
soot.SootClass.getFieldCount()I#LocalLoad(Ljava/lang/Object;,0)#3
soot.SootClass.getFieldCount()I#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/SootClass;,fields)#4
soot.SootClass.getFieldCount()I#Invoke(INTERFACE,Lsoot/util/Chain;,size,()I)#5
soot.SootClass.getFieldCount()I#Return(I)#6
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(I,0)#723
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#ConditionalBranch(I,eq,728)#724
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#728
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,methodIterator,()Ljava/util/Iterator;)#729
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,4)#730
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Goto(740)#731
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,4)#740
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#741
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(I,0)#742
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#ConditionalBranch(I,ne,732)#743
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#732
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,4)#733
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#734
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#CheckCast(Lsoot/SootMethod;)#735
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/AbstractJasminClass;,emitMethod,(Lsoot/SootMethod;)V)#736
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,isPhantom,()Z)#1
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Constant(I,0)#2
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#ConditionalBranch(I,eq,5)#3
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#New(Ljava/lang/StringBuilder;,0)#6
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Dup(1,0)#7
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Constant(Ljava/lang/String;,".method ")#8
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#9
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#10
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,getModifiers,()I)#11
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(STATIC,Lsoot/Modifier;,toString,(I)Ljava/lang/String;)#12
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#13
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Constant(Ljava/lang/String;," ")#14
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#15
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#16
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,getName,()Ljava/lang/String;)#17
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#18
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#19
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,makeRef,()Lsoot/SootMethodRef;)#20
soot.SootMethod.makeRef()Lsoot/SootMethodRef;#Invoke(STATIC,Lsoot/Scene;,v,()Lsoot/Scene;)#0
soot.SootMethod.makeRef()Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,0)#1
soot.SootMethod.makeRef()Lsoot/SootMethodRef;#Get(Lsoot/SootClass;,NONSTATIC,Lsoot/SootMethod;,declaringClass)#2
soot.SootMethod.makeRef()Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,0)#3
soot.SootMethod.makeRef()Lsoot/SootMethodRef;#Get(Ljava/lang/String;,NONSTATIC,Lsoot/SootMethod;,name)#4
soot.SootMethod.makeRef()Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,0)#5
soot.SootMethod.makeRef()Lsoot/SootMethodRef;#Get(Ljava/util/List;,NONSTATIC,Lsoot/SootMethod;,parameterTypes)#6
soot.SootMethod.makeRef()Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,0)#7
soot.SootMethod.makeRef()Lsoot/SootMethodRef;#Get(Lsoot/Type;,NONSTATIC,Lsoot/SootMethod;,returnType)#8
soot.SootMethod.makeRef()Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,0)#9
soot.SootMethod.makeRef()Lsoot/SootMethodRef;#Invoke(VIRTUAL,Lsoot/SootMethod;,isStatic,()Z)#10
soot.SootMethod.makeRef()Lsoot/SootMethodRef;#Invoke(VIRTUAL,Lsoot/Scene;,makeMethodRef,(Lsoot/SootClass;Ljava/lang/String;Ljava/util/List;Lsoot/Type;Z)Lsoot/SootMethodRef;)#11
soot.SootMethod.makeRef()Lsoot/SootMethodRef;#Return(Ljava/lang/Object;)#12
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(STATIC,Lsoot/AbstractJasminClass;,jasminDescriptorOf,(Lsoot/SootMethodRef;)Ljava/lang/String;)#21
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#New(Ljava/lang/StringBuffer;,0)#0
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#Dup(1,0)#1
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuffer;,<init>,()V)#2
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,1)#3
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#4
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#Constant(Ljava/lang/String;,"(")#5
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(Ljava/lang/String;)Ljava/lang/StringBuffer;)#6
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#Pop(1)#7
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#8
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#Invoke(INTERFACE,Lsoot/SootMethodRef;,parameterTypes,()Ljava/util/List;)#9
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#10
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,2)#11
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#Goto(22)#12
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#22
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#23
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#Constant(I,0)#24
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#ConditionalBranch(I,ne,13)#25
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#26
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#Constant(Ljava/lang/String;,")")#27
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(Ljava/lang/String;)Ljava/lang/StringBuffer;)#28
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#Pop(1)#29
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#30
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#31
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#Invoke(INTERFACE,Lsoot/SootMethodRef;,returnType,()Lsoot/Type;)#32
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#Invoke(STATIC,Lsoot/AbstractJasminClass;,jasminDescriptorOf,(Lsoot/Type;)Ljava/lang/String;)#33
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/Type;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/Type;)Ljava/lang/String;#New(Lsoot/AbstractJasminClass$1;,0)#1
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/Type;)Ljava/lang/String;#Dup(1,0)#2
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/Type;)Ljava/lang/String;#Invoke(SPECIAL,Lsoot/AbstractJasminClass$1;,<init>,()V)#3
soot.AbstractJasminClass$1.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.AbstractJasminClass$1.<init>()V#Invoke(SPECIAL,Lsoot/TypeSwitch;,<init>,()V)#1
soot.TypeSwitch.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.TypeSwitch.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.TypeSwitch.<init>()V#Return(V)#2
soot.AbstractJasminClass$1.<init>()V#Return(V)#2
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/Type;)Ljava/lang/String;#Dup(1,0)#4
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/Type;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,1)#5
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/Type;)Ljava/lang/String;#Invoke(VIRTUAL,Lsoot/Type;,apply,(Lsoot/util/Switch;)V)#6
soot.VoidType.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.VoidType.apply(Lsoot/util/Switch;)V#CheckCast(Lsoot/TypeSwitch;)#1
soot.VoidType.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.VoidType.apply(Lsoot/util/Switch;)V#Invoke(VIRTUAL,Lsoot/TypeSwitch;,caseVoidType,(Lsoot/VoidType;)V)#3
soot.AbstractJasminClass$1.caseVoidType(Lsoot/VoidType;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.AbstractJasminClass$1.caseVoidType(Lsoot/VoidType;)V#Constant(Ljava/lang/String;,"V")#1
soot.AbstractJasminClass$1.caseVoidType(Lsoot/VoidType;)V#Invoke(VIRTUAL,Lsoot/AbstractJasminClass$1;,setResult,(Ljava/lang/Object;)V)#2
soot.TypeSwitch.setResult(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.TypeSwitch.setResult(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.TypeSwitch.setResult(Ljava/lang/Object;)V#Put(Ljava/lang/Object;,NONSTATIC,Lsoot/TypeSwitch;,result)#2
soot.TypeSwitch.setResult(Ljava/lang/Object;)V#Return(V)#3
soot.AbstractJasminClass$1.caseVoidType(Lsoot/VoidType;)V#Return(V)#3
soot.VoidType.apply(Lsoot/util/Switch;)V#Return(V)#4
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/Type;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#7
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/Type;)Ljava/lang/String;#Invoke(VIRTUAL,Lsoot/TypeSwitch;,getResult,()Ljava/lang/Object;)#8
soot.TypeSwitch.getResult()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#0
soot.TypeSwitch.getResult()Ljava/lang/Object;#Get(Ljava/lang/Object;,NONSTATIC,Lsoot/TypeSwitch;,result)#1
soot.TypeSwitch.getResult()Ljava/lang/Object;#Return(Ljava/lang/Object;)#2
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/Type;)Ljava/lang/String;#CheckCast(Ljava/lang/String;)#9
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/Type;)Ljava/lang/String;#Return(Ljava/lang/Object;)#10
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(Ljava/lang/String;)Ljava/lang/StringBuffer;)#34
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#Pop(1)#35
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#36
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,toString,()Ljava/lang/String;)#37
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#Return(Ljava/lang/Object;)#38
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#22
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#23
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/AbstractJasminClass;,emit,(Ljava/lang/String;)V)#24
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#25
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,getExceptions,()Ljava/util/List;)#26
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#27
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,2)#28
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Goto(44)#29
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,2)#44
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#45
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Constant(I,0)#46
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#ConditionalBranch(I,ne,30)#47
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#48
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Constant(Ljava/lang/String;,"SyntheticTag")#49
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,hasTag,(Ljava/lang/String;)Z)#50
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Constant(I,0)#51
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#ConditionalBranch(I,eq,56)#52
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#56
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Constant(Ljava/lang/String;,"DeprecatedTag")#57
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,hasTag,(Ljava/lang/String;)Z)#58
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Constant(I,0)#59
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#ConditionalBranch(I,eq,64)#60
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#64
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Constant(Ljava/lang/String;,"SignatureTag")#65
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,hasTag,(Ljava/lang/String;)Z)#66
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Constant(I,0)#67
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#ConditionalBranch(I,eq,93)#68
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#93
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Constant(Ljava/lang/String;,"AnnotationDefaultTag")#94
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,hasTag,(Ljava/lang/String;)Z)#95
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Constant(I,0)#96
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#ConditionalBranch(I,eq,129)#97
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#129
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,getTags,()Ljava/util/List;)#130
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#131
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,3)#132
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Goto(162)#133
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,3)#162
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#163
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Constant(I,0)#164
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#ConditionalBranch(I,ne,134)#165
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,3)#134
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#135
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#CheckCast(Lsoot/tagkit/Tag;)#136
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,4)#137
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,4)#138
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(INTERFACE,Lsoot/tagkit/Tag;,getName,()Ljava/lang/String;)#139
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Constant(Ljava/lang/String;,"VisibilityAnnotationTag")#140
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#141
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Constant(I,0)#142
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#ConditionalBranch(I,eq,150)#143
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,4)#150
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(INTERFACE,Lsoot/tagkit/Tag;,getName,()Ljava/lang/String;)#151
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Constant(Ljava/lang/String;,"VisibilityParameterAnnotationTag")#152
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#153
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Constant(I,0)#154
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#ConditionalBranch(I,eq,162)#155
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#166
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,isConcrete,()Z)#167
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Constant(I,0)#168
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#ConditionalBranch(I,eq,191)#169
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#170
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,hasActiveBody,()Z)#171
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Constant(I,0)#172
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#ConditionalBranch(I,ne,188)#173
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#188
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#189
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/AbstractJasminClass;,emitMethodBody,(Lsoot/SootMethod;)V)#190
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#0
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#1
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#2
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ConditionalBranch(I,eq,7)#3
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#7
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,getActiveBody,()Lsoot/Body;)#8
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,2)#9
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,2)#10
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Instanceof(Lsoot/baf/BafBody;)#11
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#12
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ConditionalBranch(I,ne,28)#13
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,2)#28
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#CheckCast(Lsoot/baf/BafBody;)#29
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,3)#30
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,3)#31
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(L;,null)#32
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ConditionalBranch(Ljava/lang/Object;,ne,34)#33
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#34
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#35
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#36
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ConditionalBranch(I,eq,41)#37
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,3)#41
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/baf/BafBody;,getUnits,()Lsoot/PatchingChain;)#42
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,4)#43
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,-1)#44
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(I,5)#45
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#46
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#New(Ljava/util/HashMap;,0)#47
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Dup(1,0)#48
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,10)#49
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(F,0.7)#50
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(IF)V)#51
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/baf/JasminClass;,subroutineToReturnAddressSlot)#52
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,3)#53
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,1)#54
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/baf/BafBody;,getUnitBoxes,(Z)Ljava/util/List;)#55
soot.Body.getUnitBoxes(Z)Ljava/util/List;#New(Ljava/util/ArrayList;,0)#0
soot.Body.getUnitBoxes(Z)Ljava/util/List;#Dup(1,0)#1
soot.Body.getUnitBoxes(Z)Ljava/util/List;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#2
soot.Body.getUnitBoxes(Z)Ljava/util/List;#LocalStore(Ljava/lang/Object;,2)#3
soot.Body.getUnitBoxes(Z)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#4
soot.Body.getUnitBoxes(Z)Ljava/util/List;#Get(Lsoot/PatchingChain;,NONSTATIC,Lsoot/Body;,unitChain)#5
soot.Body.getUnitBoxes(Z)Ljava/util/List;#Invoke(VIRTUAL,Lsoot/PatchingChain;,iterator,()Ljava/util/Iterator;)#6
soot.Body.getUnitBoxes(Z)Ljava/util/List;#LocalStore(Ljava/lang/Object;,3)#7
soot.Body.getUnitBoxes(Z)Ljava/util/List;#Goto(35)#8
soot.Body.getUnitBoxes(Z)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#35
soot.Body.getUnitBoxes(Z)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#36
soot.Body.getUnitBoxes(Z)Ljava/util/List;#Constant(I,0)#37
soot.Body.getUnitBoxes(Z)Ljava/util/List;#ConditionalBranch(I,ne,9)#38
soot.Body.getUnitBoxes(Z)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#9
soot.Body.getUnitBoxes(Z)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#10
soot.Body.getUnitBoxes(Z)Ljava/util/List;#CheckCast(Lsoot/Unit;)#11
soot.Body.getUnitBoxes(Z)Ljava/util/List;#LocalStore(Ljava/lang/Object;,4)#12
soot.Body.getUnitBoxes(Z)Ljava/util/List;#LocalLoad(I,1)#13
soot.Body.getUnitBoxes(Z)Ljava/util/List;#Constant(I,0)#14
soot.Body.getUnitBoxes(Z)Ljava/util/List;#ConditionalBranch(I,eq,26)#15
soot.Body.getUnitBoxes(Z)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,4)#16
soot.Body.getUnitBoxes(Z)Ljava/util/List;#Invoke(INTERFACE,Lsoot/Unit;,branches,()Z)#17
soot.Body.getUnitBoxes(Z)Ljava/util/List;#Constant(I,0)#18
soot.Body.getUnitBoxes(Z)Ljava/util/List;#ConditionalBranch(I,eq,35)#19
soot.Body.getUnitBoxes(Z)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#39
soot.Body.getUnitBoxes(Z)Ljava/util/List;#Get(Lsoot/util/Chain;,NONSTATIC,Lsoot/Body;,trapChain)#40
soot.Body.getUnitBoxes(Z)Ljava/util/List;#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#41
soot.Body.getUnitBoxes(Z)Ljava/util/List;#LocalStore(Ljava/lang/Object;,3)#42
soot.Body.getUnitBoxes(Z)Ljava/util/List;#Goto(53)#43
soot.Body.getUnitBoxes(Z)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#53
soot.Body.getUnitBoxes(Z)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#54
soot.Body.getUnitBoxes(Z)Ljava/util/List;#Constant(I,0)#55
soot.Body.getUnitBoxes(Z)Ljava/util/List;#ConditionalBranch(I,ne,44)#56
soot.Body.getUnitBoxes(Z)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#57
soot.Body.getUnitBoxes(Z)Ljava/util/List;#Invoke(VIRTUAL,Lsoot/Body;,getTags,()Ljava/util/List;)#58
soot.Body.getUnitBoxes(Z)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#59
soot.Body.getUnitBoxes(Z)Ljava/util/List;#LocalStore(Ljava/lang/Object;,3)#60
soot.Body.getUnitBoxes(Z)Ljava/util/List;#Goto(76)#61
soot.Body.getUnitBoxes(Z)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#76
soot.Body.getUnitBoxes(Z)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#77
soot.Body.getUnitBoxes(Z)Ljava/util/List;#Constant(I,0)#78
soot.Body.getUnitBoxes(Z)Ljava/util/List;#ConditionalBranch(I,ne,62)#79
soot.Body.getUnitBoxes(Z)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#62
soot.Body.getUnitBoxes(Z)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#63
soot.Body.getUnitBoxes(Z)Ljava/util/List;#CheckCast(Lsoot/tagkit/Tag;)#64
soot.Body.getUnitBoxes(Z)Ljava/util/List;#LocalStore(Ljava/lang/Object;,4)#65
soot.Body.getUnitBoxes(Z)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,4)#66
soot.Body.getUnitBoxes(Z)Ljava/util/List;#Instanceof(Lsoot/tagkit/CodeAttribute;)#67
soot.Body.getUnitBoxes(Z)Ljava/util/List;#Constant(I,0)#68
soot.Body.getUnitBoxes(Z)Ljava/util/List;#ConditionalBranch(I,eq,76)#69
soot.Body.getUnitBoxes(Z)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#70
soot.Body.getUnitBoxes(Z)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,4)#71
soot.Body.getUnitBoxes(Z)Ljava/util/List;#CheckCast(Lsoot/tagkit/CodeAttribute;)#72
soot.Body.getUnitBoxes(Z)Ljava/util/List;#Invoke(VIRTUAL,Lsoot/tagkit/CodeAttribute;,getUnitBoxes,()Ljava/util/List;)#73
soot.tagkit.CodeAttribute.getUnitBoxes()Ljava/util/List;#New(Ljava/util/ArrayList;,0)#0
soot.tagkit.CodeAttribute.getUnitBoxes()Ljava/util/List;#Dup(1,0)#1
soot.tagkit.CodeAttribute.getUnitBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#2
soot.tagkit.CodeAttribute.getUnitBoxes()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lsoot/tagkit/CodeAttribute;,mUnits)#3
soot.tagkit.CodeAttribute.getUnitBoxes()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,size,()I)#4
soot.tagkit.CodeAttribute.getUnitBoxes()Ljava/util/List;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,(I)V)#5
soot.tagkit.CodeAttribute.getUnitBoxes()Ljava/util/List;#LocalStore(Ljava/lang/Object;,1)#6
soot.tagkit.CodeAttribute.getUnitBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#7
soot.tagkit.CodeAttribute.getUnitBoxes()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lsoot/tagkit/CodeAttribute;,mUnits)#8
soot.tagkit.CodeAttribute.getUnitBoxes()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#9
soot.tagkit.CodeAttribute.getUnitBoxes()Ljava/util/List;#LocalStore(Ljava/lang/Object;,2)#10
soot.tagkit.CodeAttribute.getUnitBoxes()Ljava/util/List;#Goto(20)#11
soot.tagkit.CodeAttribute.getUnitBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#20
soot.tagkit.CodeAttribute.getUnitBoxes()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#21
soot.tagkit.CodeAttribute.getUnitBoxes()Ljava/util/List;#Constant(I,0)#22
soot.tagkit.CodeAttribute.getUnitBoxes()Ljava/util/List;#ConditionalBranch(I,ne,12)#23
soot.tagkit.CodeAttribute.getUnitBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#12
soot.tagkit.CodeAttribute.getUnitBoxes()Ljava/util/List;#Invoke(STATIC,Lsoot/baf/Baf;,v,()Lsoot/baf/Baf;)#13
soot.tagkit.CodeAttribute.getUnitBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#14
soot.tagkit.CodeAttribute.getUnitBoxes()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#15
soot.tagkit.CodeAttribute.getUnitBoxes()Ljava/util/List;#CheckCast(Lsoot/Unit;)#16
soot.tagkit.CodeAttribute.getUnitBoxes()Ljava/util/List;#Invoke(VIRTUAL,Lsoot/baf/Baf;,newInstBox,(Lsoot/Unit;)Lsoot/UnitBox;)#17
soot.baf.Baf.newInstBox(Lsoot/Unit;)Lsoot/UnitBox;#New(Lsoot/baf/InstBox;,0)#0
soot.baf.Baf.newInstBox(Lsoot/Unit;)Lsoot/UnitBox;#Dup(1,0)#1
soot.baf.Baf.newInstBox(Lsoot/Unit;)Lsoot/UnitBox;#LocalLoad(Ljava/lang/Object;,1)#2
soot.baf.Baf.newInstBox(Lsoot/Unit;)Lsoot/UnitBox;#CheckCast(Lsoot/baf/Inst;)#3
soot.baf.Baf.newInstBox(Lsoot/Unit;)Lsoot/UnitBox;#Invoke(SPECIAL,Lsoot/baf/InstBox;,<init>,(Lsoot/baf/Inst;)V)#4
soot.baf.InstBox.<init>(Lsoot/baf/Inst;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.InstBox.<init>(Lsoot/baf/Inst;)V#Invoke(SPECIAL,Lsoot/AbstractUnitBox;,<init>,()V)#1
soot.AbstractUnitBox.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.AbstractUnitBox.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
soot.AbstractUnitBox.<init>()V#Return(V)#2
soot.baf.InstBox.<init>(Lsoot/baf/Inst;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.baf.InstBox.<init>(Lsoot/baf/Inst;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.baf.InstBox.<init>(Lsoot/baf/Inst;)V#Invoke(VIRTUAL,Lsoot/baf/InstBox;,setUnit,(Lsoot/Unit;)V)#4
soot.AbstractUnitBox.setUnit(Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.AbstractUnitBox.setUnit(Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.AbstractUnitBox.setUnit(Lsoot/Unit;)V#Invoke(VIRTUAL,Lsoot/AbstractUnitBox;,canContainUnit,(Lsoot/Unit;)Z)#2
soot.baf.InstBox.canContainUnit(Lsoot/Unit;)Z#LocalLoad(Ljava/lang/Object;,1)#0
soot.baf.InstBox.canContainUnit(Lsoot/Unit;)Z#Instanceof(Lsoot/baf/Inst;)#1
soot.baf.InstBox.canContainUnit(Lsoot/Unit;)Z#Constant(I,0)#2
soot.baf.InstBox.canContainUnit(Lsoot/Unit;)Z#ConditionalBranch(I,ne,9)#3
soot.baf.InstBox.canContainUnit(Lsoot/Unit;)Z#Constant(I,1)#9
soot.baf.InstBox.canContainUnit(Lsoot/Unit;)Z#Return(I)#10
soot.AbstractUnitBox.setUnit(Lsoot/Unit;)V#Constant(I,0)#3
soot.AbstractUnitBox.setUnit(Lsoot/Unit;)V#ConditionalBranch(I,ne,10)#4
soot.AbstractUnitBox.setUnit(Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,0)#10
soot.AbstractUnitBox.setUnit(Lsoot/Unit;)V#Get(Lsoot/Unit;,NONSTATIC,Lsoot/AbstractUnitBox;,unit)#11
soot.AbstractUnitBox.setUnit(Lsoot/Unit;)V#Constant(L;,null)#12
soot.AbstractUnitBox.setUnit(Lsoot/Unit;)V#ConditionalBranch(Ljava/lang/Object;,eq,18)#13
soot.AbstractUnitBox.setUnit(Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,0)#18
soot.AbstractUnitBox.setUnit(Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,1)#19
soot.AbstractUnitBox.setUnit(Lsoot/Unit;)V#Put(Lsoot/Unit;,NONSTATIC,Lsoot/AbstractUnitBox;,unit)#20
soot.AbstractUnitBox.setUnit(Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,0)#21
soot.AbstractUnitBox.setUnit(Lsoot/Unit;)V#Get(Lsoot/Unit;,NONSTATIC,Lsoot/AbstractUnitBox;,unit)#22
soot.AbstractUnitBox.setUnit(Lsoot/Unit;)V#Constant(L;,null)#23
soot.AbstractUnitBox.setUnit(Lsoot/Unit;)V#ConditionalBranch(Ljava/lang/Object;,eq,29)#24
soot.AbstractUnitBox.setUnit(Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,0)#25
soot.AbstractUnitBox.setUnit(Lsoot/Unit;)V#Get(Lsoot/Unit;,NONSTATIC,Lsoot/AbstractUnitBox;,unit)#26
soot.AbstractUnitBox.setUnit(Lsoot/Unit;)V#LocalLoad(Ljava/lang/Object;,0)#27
soot.AbstractUnitBox.setUnit(Lsoot/Unit;)V#Invoke(INTERFACE,Lsoot/Unit;,addBoxPointingToThis,(Lsoot/UnitBox;)V)#28
soot.AbstractUnit.addBoxPointingToThis(Lsoot/UnitBox;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.AbstractUnit.addBoxPointingToThis(Lsoot/UnitBox;)V#Get(Ljava/util/List;,NONSTATIC,Lsoot/AbstractUnit;,boxesPointingToThis)#1
soot.AbstractUnit.addBoxPointingToThis(Lsoot/UnitBox;)V#Constant(L;,null)#2
soot.AbstractUnit.addBoxPointingToThis(Lsoot/UnitBox;)V#ConditionalBranch(Ljava/lang/Object;,ne,9)#3
soot.AbstractUnit.addBoxPointingToThis(Lsoot/UnitBox;)V#LocalLoad(Ljava/lang/Object;,0)#4
soot.AbstractUnit.addBoxPointingToThis(Lsoot/UnitBox;)V#New(Ljava/util/ArrayList;,0)#5
soot.AbstractUnit.addBoxPointingToThis(Lsoot/UnitBox;)V#Dup(1,0)#6
soot.AbstractUnit.addBoxPointingToThis(Lsoot/UnitBox;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#7
soot.AbstractUnit.addBoxPointingToThis(Lsoot/UnitBox;)V#Put(Ljava/util/List;,NONSTATIC,Lsoot/AbstractUnit;,boxesPointingToThis)#8
soot.AbstractUnit.addBoxPointingToThis(Lsoot/UnitBox;)V#LocalLoad(Ljava/lang/Object;,0)#9
soot.AbstractUnit.addBoxPointingToThis(Lsoot/UnitBox;)V#Get(Ljava/util/List;,NONSTATIC,Lsoot/AbstractUnit;,boxesPointingToThis)#10
soot.AbstractUnit.addBoxPointingToThis(Lsoot/UnitBox;)V#LocalLoad(Ljava/lang/Object;,1)#11
soot.AbstractUnit.addBoxPointingToThis(Lsoot/UnitBox;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#12
soot.AbstractUnit.addBoxPointingToThis(Lsoot/UnitBox;)V#Pop(1)#13
soot.AbstractUnit.addBoxPointingToThis(Lsoot/UnitBox;)V#Return(V)#14
soot.AbstractUnitBox.setUnit(Lsoot/Unit;)V#Return(V)#29
soot.baf.InstBox.<init>(Lsoot/baf/Inst;)V#Return(V)#5
soot.baf.Baf.newInstBox(Lsoot/Unit;)Lsoot/UnitBox;#Return(Ljava/lang/Object;)#5
soot.tagkit.CodeAttribute.getUnitBoxes()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#18
soot.tagkit.CodeAttribute.getUnitBoxes()Ljava/util/List;#Pop(1)#19
soot.tagkit.CodeAttribute.getUnitBoxes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#24
soot.tagkit.CodeAttribute.getUnitBoxes()Ljava/util/List;#Return(Ljava/lang/Object;)#25
soot.Body.getUnitBoxes(Z)Ljava/util/List;#Invoke(VIRTUAL,Ljava/util/ArrayList;,addAll,(Ljava/util/Collection;)Z)#74
soot.Body.getUnitBoxes(Z)Ljava/util/List;#Pop(1)#75
soot.Body.getUnitBoxes(Z)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#80
soot.Body.getUnitBoxes(Z)Ljava/util/List;#Return(Ljava/lang/Object;)#81
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#56
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,6)#57
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#58
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#New(Ljava/util/HashMap;,0)#59
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Dup(1,0)#60
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,4)#61
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Lsoot/util/Chain;,size,()I)#62
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,2)#63
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#BinaryOp(I,mul)#64
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,1)#65
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#BinaryOp(I,add)#66
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(F,0.7)#67
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(IF)V)#68
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/baf/JasminClass;,unitToLabel)#69
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#70
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#71
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Put(I,NONSTATIC,Lsoot/baf/JasminClass;,labelCount)#72
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Goto(104)#73
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,6)#104
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#105
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#106
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ConditionalBranch(I,ne,74)#107
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,6)#74
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#75
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#CheckCast(Lsoot/baf/InstBox;)#76
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,7)#77
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#78
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/baf/JasminClass;,unitToLabel)#79
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,7)#80
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/baf/InstBox;,getUnit,()Lsoot/Unit;)#81
soot.AbstractUnitBox.getUnit()Lsoot/Unit;#LocalLoad(Ljava/lang/Object;,0)#0
soot.AbstractUnitBox.getUnit()Lsoot/Unit;#Get(Lsoot/Unit;,NONSTATIC,Lsoot/AbstractUnitBox;,unit)#1
soot.AbstractUnitBox.getUnit()Lsoot/Unit;#Return(Ljava/lang/Object;)#2
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#82
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#83
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ConditionalBranch(I,ne,104)#84
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#85
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/baf/JasminClass;,unitToLabel)#86
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,7)#87
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/baf/InstBox;,getUnit,()Lsoot/Unit;)#88
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#New(Ljava/lang/StringBuilder;,0)#89
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Dup(1,0)#90
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(Ljava/lang/String;,"label")#91
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#92
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#93
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Dup(1,0)#94
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Get(I,NONSTATIC,Lsoot/baf/JasminClass;,labelCount)#95
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Dup(1,1)#96
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,1)#97
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#BinaryOp(I,add)#98
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Put(I,NONSTATIC,Lsoot/baf/JasminClass;,labelCount)#99
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#100
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#101
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#102
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Pop(1)#103
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#New(Lsoot/util/ArraySet;,0)#108
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Dup(1,0)#109
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,3)#110
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/baf/BafBody;,getTraps,()Lsoot/util/Chain;)#111
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Lsoot/util/Chain;,size,()I)#112
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(SPECIAL,Lsoot/util/ArraySet;,<init>,(I)V)#113
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,6)#114
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,3)#115
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/baf/BafBody;,getTraps,()Lsoot/util/Chain;)#116
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#117
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,7)#118
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Goto(170)#119
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,7)#170
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#171
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#172
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ConditionalBranch(I,ne,120)#173
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#174
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(I,7)#175
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#176
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,getParameterCount,()I)#177
soot.SootMethod.getParameterCount()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethod.getParameterCount()I#Get(Ljava/util/List;,NONSTATIC,Lsoot/SootMethod;,parameterTypes)#1
soot.SootMethod.getParameterCount()I#Invoke(INTERFACE,Ljava/util/List;,size,()I)#2
soot.SootMethod.getParameterCount()I#Return(I)#3
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#New([I,1)#178
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,8)#179
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#180
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(I,9)#181
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#New(Ljava/util/HashSet;,0)#182
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Dup(1,0)#183
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#184
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,10)#185
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#New(Ljava/util/HashMap;,0)#186
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Dup(1,0)#187
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,3)#188
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/baf/BafBody;,getLocalCount,()I)#189
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,2)#190
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#BinaryOp(I,mul)#191
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,1)#192
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#BinaryOp(I,add)#193
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(F,0.7)#194
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(IF)V)#195
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,11)#196
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#197
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#New(Ljava/util/HashMap;,0)#198
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Dup(1,0)#199
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,3)#200
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/baf/BafBody;,getLocalCount,()I)#201
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,2)#202
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#BinaryOp(I,mul)#203
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,1)#204
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#BinaryOp(I,add)#205
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(F,0.7)#206
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(IF)V)#207
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Put(Ljava/util/Map;,NONSTATIC,Lsoot/baf/JasminClass;,localToSlot)#208
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#209
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,getParameterTypes,()Ljava/util/List;)#210
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,12)#211
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#212
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,isStatic,()Z)#213
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#214
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ConditionalBranch(I,ne,222)#215
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#216
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(I,9)#217
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(I,7)#218
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,1)#219
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#BinaryOp(I,add)#220
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(I,7)#221
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#222
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(I,13)#223
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Goto(241)#224
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(I,13)#241
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,12)#242
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#243
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ConditionalBranch(I,lt,225)#244
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,4)#245
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#246
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,12)#247
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Goto(314)#248
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,12)#314
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#315
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#316
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ConditionalBranch(I,ne,249)#317
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,12)#249
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#250
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#CheckCast(Lsoot/baf/Inst;)#251
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,13)#252
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,13)#253
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Instanceof(Lsoot/baf/IdentityInst;)#254
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#255
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ConditionalBranch(I,eq,314)#256
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,13)#257
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#CheckCast(Lsoot/baf/IdentityInst;)#258
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Lsoot/baf/IdentityInst;,getLeftOp,()Lsoot/Value;)#259
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Instanceof(Lsoot/Local;)#260
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#261
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ConditionalBranch(I,eq,314)#262
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,13)#263
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#CheckCast(Lsoot/baf/IdentityInst;)#264
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Lsoot/baf/IdentityInst;,getLeftOp,()Lsoot/Value;)#265
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#CheckCast(Lsoot/Local;)#266
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,14)#267
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,13)#268
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#CheckCast(Lsoot/baf/IdentityInst;)#269
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Lsoot/baf/IdentityInst;,getRightOp,()Lsoot/Value;)#270
soot.baf.internal.BIdentityInst.getRightOp()Lsoot/Value;#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BIdentityInst.getRightOp()Lsoot/Value;#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/baf/internal/BIdentityInst;,rightBox)#1
soot.baf.internal.BIdentityInst.getRightOp()Lsoot/Value;#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#2
soot.baf.internal.BIdentityInst.getRightOp()Lsoot/Value;#Return(Ljava/lang/Object;)#3
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#CheckCast(Lsoot/jimple/IdentityRef;)#271
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,15)#272
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#273
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(I,16)#274
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,15)#275
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Instanceof(Lsoot/jimple/ThisRef;)#276
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#277
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ConditionalBranch(I,eq,291)#278
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#279
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,isStatic,()Z)#280
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#281
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ConditionalBranch(I,eq,288)#282
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(I,9)#288
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(I,16)#289
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Goto(301)#290
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#301
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/baf/JasminClass;,localToSlot)#302
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,14)#303
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#New(Ljava/lang/Integer;,0)#304
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Dup(1,0)#305
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(I,16)#306
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(SPECIAL,Ljava/lang/Integer;,<init>,(I)V)#307
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#308
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Pop(1)#309
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,10)#310
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,14)#311
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#312
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Pop(1)#313
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,3)#318
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/baf/BafBody;,getLocals,()Lsoot/util/Chain;)#319
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#320
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,12)#321
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Goto(351)#322
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,12)#351
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#352
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#353
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ConditionalBranch(I,ne,323)#354
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,12)#323
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#324
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#CheckCast(Lsoot/Local;)#325
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,13)#326
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,10)#327
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,13)#328
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/Set;,contains,(Ljava/lang/Object;)Z)#329
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#330
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ConditionalBranch(I,ne,351)#331
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#355
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,getModifiers,()I)#356
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(STATIC,Lsoot/Modifier;,isNative,(I)Z)#357
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#358
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ConditionalBranch(I,ne,383)#359
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#360
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,getModifiers,()I)#361
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(STATIC,Lsoot/Modifier;,isAbstract,(I)Z)#362
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#363
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ConditionalBranch(I,ne,383)#364
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#365
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(Ljava/lang/String;,"    .limit stack ?")#366
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/baf/JasminClass;,emit,(Ljava/lang/String;)V)#367
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#368
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Get(Ljava/util/List;,NONSTATIC,Lsoot/baf/JasminClass;,code)#369
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#370
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,1)#371
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#BinaryOp(I,sub)#372
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(I,5)#373
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#374
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#New(Ljava/lang/StringBuilder;,0)#375
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Dup(1,0)#376
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(Ljava/lang/String;,"    .limit locals ")#377
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#378
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(I,7)#379
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#380
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#381
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/baf/JasminClass;,emit,(Ljava/lang/String;)V)#382
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,4)#383
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Lsoot/util/Chain;,iterator,()Ljava/util/Iterator;)#384
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,7)#385
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#386
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,1)#387
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Put(Z,NONSTATIC,Lsoot/baf/JasminClass;,isEmittingMethodCode)#388
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#389
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#390
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Put(I,NONSTATIC,Lsoot/baf/JasminClass;,maxStackHeight)#391
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#392
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#393
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Put(Z,NONSTATIC,Lsoot/baf/JasminClass;,isNextGotoAJsr)#394
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Goto(422)#395
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,7)#422
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#423
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#424
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ConditionalBranch(I,ne,396)#425
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,7)#396
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#397
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#CheckCast(Lsoot/baf/Inst;)#398
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,8)#399
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#400
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/baf/JasminClass;,unitToLabel)#401
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,8)#402
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#403
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#404
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ConditionalBranch(I,eq,419)#405
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#419
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,8)#420
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/baf/JasminClass;,emitInst,(Lsoot/baf/Inst;)V)#421
soot.baf.JasminClass.emitInst(Lsoot/baf/Inst;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.baf.JasminClass.emitInst(Lsoot/baf/Inst;)V#Constant(Ljava/lang/String;,"LineNumberTag")#1
soot.baf.JasminClass.emitInst(Lsoot/baf/Inst;)V#Invoke(INTERFACE,Lsoot/baf/Inst;,getTag,(Ljava/lang/String;)Lsoot/tagkit/Tag;)#2
soot.baf.JasminClass.emitInst(Lsoot/baf/Inst;)V#CheckCast(Lsoot/tagkit/LineNumberTag;)#3
soot.baf.JasminClass.emitInst(Lsoot/baf/Inst;)V#LocalStore(Ljava/lang/Object;,2)#4
soot.baf.JasminClass.emitInst(Lsoot/baf/Inst;)V#LocalLoad(Ljava/lang/Object;,2)#5
soot.baf.JasminClass.emitInst(Lsoot/baf/Inst;)V#Constant(L;,null)#6
soot.baf.JasminClass.emitInst(Lsoot/baf/Inst;)V#ConditionalBranch(Ljava/lang/Object;,eq,18)#7
soot.baf.JasminClass.emitInst(Lsoot/baf/Inst;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.baf.JasminClass.emitInst(Lsoot/baf/Inst;)V#New(Ljava/lang/StringBuilder;,0)#9
soot.baf.JasminClass.emitInst(Lsoot/baf/Inst;)V#Dup(1,0)#10
soot.baf.JasminClass.emitInst(Lsoot/baf/Inst;)V#Constant(Ljava/lang/String;,".line ")#11
soot.baf.JasminClass.emitInst(Lsoot/baf/Inst;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#12
soot.baf.JasminClass.emitInst(Lsoot/baf/Inst;)V#LocalLoad(Ljava/lang/Object;,2)#13
soot.baf.JasminClass.emitInst(Lsoot/baf/Inst;)V#Invoke(VIRTUAL,Lsoot/tagkit/LineNumberTag;,getLineNumber,()I)#14
soot.baf.JasminClass.emitInst(Lsoot/baf/Inst;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#15
soot.baf.JasminClass.emitInst(Lsoot/baf/Inst;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#16
soot.baf.JasminClass.emitInst(Lsoot/baf/Inst;)V#Invoke(VIRTUAL,Lsoot/baf/JasminClass;,emit,(Ljava/lang/String;)V)#17
soot.AbstractJasminClass.okayEmit(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#4
soot.AbstractJasminClass.okayEmit(Ljava/lang/String;)V#Constant(Ljava/lang/String;,":")#5
soot.AbstractJasminClass.okayEmit(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,endsWith,(Ljava/lang/String;)Z)#6
soot.AbstractJasminClass.okayEmit(Ljava/lang/String;)V#Constant(I,0)#7
soot.AbstractJasminClass.okayEmit(Ljava/lang/String;)V#ConditionalBranch(I,ne,21)#8
soot.AbstractJasminClass.okayEmit(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#9
soot.AbstractJasminClass.okayEmit(Ljava/lang/String;)V#Get(Ljava/util/List;,NONSTATIC,Lsoot/AbstractJasminClass;,code)#10
soot.AbstractJasminClass.okayEmit(Ljava/lang/String;)V#New(Ljava/lang/StringBuilder;,0)#11
soot.AbstractJasminClass.okayEmit(Ljava/lang/String;)V#Dup(1,0)#12
soot.AbstractJasminClass.okayEmit(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"    ")#13
soot.AbstractJasminClass.okayEmit(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#14
soot.AbstractJasminClass.okayEmit(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#15
soot.AbstractJasminClass.okayEmit(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#16
soot.AbstractJasminClass.okayEmit(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#17
soot.AbstractJasminClass.okayEmit(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#18
soot.AbstractJasminClass.okayEmit(Ljava/lang/String;)V#Pop(1)#19
soot.AbstractJasminClass.okayEmit(Ljava/lang/String;)V#Goto(26)#20
soot.baf.JasminClass.emitInst(Lsoot/baf/Inst;)V#LocalLoad(Ljava/lang/Object;,1)#18
soot.baf.JasminClass.emitInst(Lsoot/baf/Inst;)V#New(Lsoot/baf/JasminClass$1;,0)#19
soot.baf.JasminClass.emitInst(Lsoot/baf/Inst;)V#Dup(1,0)#20
soot.baf.JasminClass.emitInst(Lsoot/baf/Inst;)V#LocalLoad(Ljava/lang/Object;,0)#21
soot.baf.JasminClass.emitInst(Lsoot/baf/Inst;)V#Invoke(SPECIAL,Lsoot/baf/JasminClass$1;,<init>,(Lsoot/baf/JasminClass;)V)#22
soot.baf.JasminClass$1.<init>(Lsoot/baf/JasminClass;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.JasminClass$1.<init>(Lsoot/baf/JasminClass;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.baf.JasminClass$1.<init>(Lsoot/baf/JasminClass;)V#Put(Lsoot/baf/JasminClass;,NONSTATIC,Lsoot/baf/JasminClass$1;,this$0)#2
soot.baf.JasminClass$1.<init>(Lsoot/baf/JasminClass;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.baf.JasminClass$1.<init>(Lsoot/baf/JasminClass;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#4
soot.baf.JasminClass$1.<init>(Lsoot/baf/JasminClass;)V#Return(V)#5
soot.baf.JasminClass.emitInst(Lsoot/baf/Inst;)V#Invoke(INTERFACE,Lsoot/baf/Inst;,apply,(Lsoot/util/Switch;)V)#23
soot.baf.internal.BIdentityInst.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.baf.internal.BIdentityInst.apply(Lsoot/util/Switch;)V#CheckCast(Lsoot/baf/InstSwitch;)#1
soot.baf.internal.BIdentityInst.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.baf.internal.BIdentityInst.apply(Lsoot/util/Switch;)V#Invoke(INTERFACE,Lsoot/baf/InstSwitch;,caseIdentityInst,(Lsoot/baf/IdentityInst;)V)#3
soot.baf.JasminClass$1.caseIdentityInst(Lsoot/baf/IdentityInst;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.baf.JasminClass$1.caseIdentityInst(Lsoot/baf/IdentityInst;)V#Invoke(INTERFACE,Lsoot/baf/IdentityInst;,getRightOp,()Lsoot/Value;)#1
soot.baf.JasminClass$1.caseIdentityInst(Lsoot/baf/IdentityInst;)V#Instanceof(Lsoot/jimple/CaughtExceptionRef;)#2
soot.baf.JasminClass$1.caseIdentityInst(Lsoot/baf/IdentityInst;)V#Constant(I,0)#3
soot.baf.JasminClass$1.caseIdentityInst(Lsoot/baf/IdentityInst;)V#ConditionalBranch(I,eq,46)#4
soot.baf.JasminClass$1.caseIdentityInst(Lsoot/baf/IdentityInst;)V#Return(V)#46
soot.baf.internal.BIdentityInst.apply(Lsoot/util/Switch;)V#Return(V)#4
soot.baf.JasminClass.emitInst(Lsoot/baf/Inst;)V#Return(V)#24
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#406
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#New(Ljava/lang/StringBuilder;,0)#407
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Dup(1,0)#408
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#409
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#410
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/baf/JasminClass;,unitToLabel)#411
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,8)#412
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#413
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#414
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(Ljava/lang/String;,":")#415
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#416
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#417
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/baf/JasminClass;,emit,(Ljava/lang/String;)V)#418
soot.baf.internal.BLoadInst.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.baf.internal.BLoadInst.apply(Lsoot/util/Switch;)V#CheckCast(Lsoot/baf/InstSwitch;)#1
soot.baf.internal.BLoadInst.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.baf.internal.BLoadInst.apply(Lsoot/util/Switch;)V#Invoke(INTERFACE,Lsoot/baf/InstSwitch;,caseLoadInst,(Lsoot/baf/LoadInst;)V)#3
soot.baf.JasminClass$1.caseLoadInst(Lsoot/baf/LoadInst;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.JasminClass$1.caseLoadInst(Lsoot/baf/LoadInst;)V#Get(Lsoot/baf/JasminClass;,NONSTATIC,Lsoot/baf/JasminClass$1;,this$0)#1
soot.baf.JasminClass$1.caseLoadInst(Lsoot/baf/LoadInst;)V#Invoke(STATIC,Lsoot/baf/JasminClass;,access$2,(Lsoot/baf/JasminClass;)Ljava/util/Map;)#2
soot.baf.JasminClass.access$2(Lsoot/baf/JasminClass;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.JasminClass.access$2(Lsoot/baf/JasminClass;)Ljava/util/Map;#Get(Ljava/util/Map;,NONSTATIC,Lsoot/baf/JasminClass;,localToSlot)#1
soot.baf.JasminClass.access$2(Lsoot/baf/JasminClass;)Ljava/util/Map;#Return(Ljava/lang/Object;)#2
soot.baf.JasminClass$1.caseLoadInst(Lsoot/baf/LoadInst;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.baf.JasminClass$1.caseLoadInst(Lsoot/baf/LoadInst;)V#Invoke(INTERFACE,Lsoot/baf/LoadInst;,getLocal,()Lsoot/Local;)#4
soot.baf.internal.BLoadInst.getLocal()Lsoot/Local;#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BLoadInst.getLocal()Lsoot/Local;#Get(Lsoot/ValueBox;,NONSTATIC,Lsoot/baf/internal/BLoadInst;,localBox)#1
soot.baf.internal.BLoadInst.getLocal()Lsoot/Local;#Invoke(INTERFACE,Lsoot/ValueBox;,getValue,()Lsoot/Value;)#2
soot.baf.internal.BLoadInst.getLocal()Lsoot/Local;#CheckCast(Lsoot/Local;)#3
soot.baf.internal.BLoadInst.getLocal()Lsoot/Local;#Return(Ljava/lang/Object;)#4
soot.baf.JasminClass$1.caseLoadInst(Lsoot/baf/LoadInst;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#5
soot.baf.JasminClass$1.caseLoadInst(Lsoot/baf/LoadInst;)V#CheckCast(Ljava/lang/Integer;)#6
soot.baf.JasminClass$1.caseLoadInst(Lsoot/baf/LoadInst;)V#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#7
soot.baf.JasminClass$1.caseLoadInst(Lsoot/baf/LoadInst;)V#LocalStore(I,2)#8
soot.baf.JasminClass$1.caseLoadInst(Lsoot/baf/LoadInst;)V#LocalLoad(Ljava/lang/Object;,1)#9
soot.baf.JasminClass$1.caseLoadInst(Lsoot/baf/LoadInst;)V#Invoke(INTERFACE,Lsoot/baf/LoadInst;,getOpType,()Lsoot/Type;)#10
soot.baf.JasminClass$1.caseLoadInst(Lsoot/baf/LoadInst;)V#New(Lsoot/baf/JasminClass$1$3;,0)#11
soot.baf.JasminClass$1.caseLoadInst(Lsoot/baf/LoadInst;)V#Dup(1,0)#12
soot.baf.JasminClass$1.caseLoadInst(Lsoot/baf/LoadInst;)V#LocalLoad(Ljava/lang/Object;,0)#13
soot.baf.JasminClass$1.caseLoadInst(Lsoot/baf/LoadInst;)V#LocalLoad(I,2)#14
soot.baf.JasminClass$1.caseLoadInst(Lsoot/baf/LoadInst;)V#Invoke(SPECIAL,Lsoot/baf/JasminClass$1$3;,<init>,(Lsoot/baf/JasminClass$1;I)V)#15
soot.baf.JasminClass$1$3.<init>(Lsoot/baf/JasminClass$1;I)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.JasminClass$1$3.<init>(Lsoot/baf/JasminClass$1;I)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.baf.JasminClass$1$3.<init>(Lsoot/baf/JasminClass$1;I)V#Put(Lsoot/baf/JasminClass$1;,NONSTATIC,Lsoot/baf/JasminClass$1$3;,this$1)#2
soot.baf.JasminClass$1$3.<init>(Lsoot/baf/JasminClass$1;I)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.baf.JasminClass$1$3.<init>(Lsoot/baf/JasminClass$1;I)V#LocalLoad(I,2)#4
soot.baf.JasminClass$1$3.<init>(Lsoot/baf/JasminClass$1;I)V#Put(I,NONSTATIC,Lsoot/baf/JasminClass$1$3;,val$slot)#5
soot.baf.JasminClass$1$3.<init>(Lsoot/baf/JasminClass$1;I)V#LocalLoad(Ljava/lang/Object;,0)#6
soot.baf.JasminClass$1$3.<init>(Lsoot/baf/JasminClass$1;I)V#Invoke(SPECIAL,Lsoot/TypeSwitch;,<init>,()V)#7
soot.baf.JasminClass$1$3.<init>(Lsoot/baf/JasminClass$1;I)V#Return(V)#8
soot.baf.JasminClass$1.caseLoadInst(Lsoot/baf/LoadInst;)V#Invoke(VIRTUAL,Lsoot/Type;,apply,(Lsoot/util/Switch;)V)#16
soot.RefType.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.RefType.apply(Lsoot/util/Switch;)V#CheckCast(Lsoot/TypeSwitch;)#1
soot.RefType.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.RefType.apply(Lsoot/util/Switch;)V#Invoke(VIRTUAL,Lsoot/TypeSwitch;,caseRefType,(Lsoot/RefType;)V)#3
soot.baf.JasminClass$1$3.caseRefType(Lsoot/RefType;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.JasminClass$1$3.caseRefType(Lsoot/RefType;)V#Get(I,NONSTATIC,Lsoot/baf/JasminClass$1$3;,val$slot)#1
soot.baf.JasminClass$1$3.caseRefType(Lsoot/RefType;)V#Constant(I,0)#2
soot.baf.JasminClass$1$3.caseRefType(Lsoot/RefType;)V#ConditionalBranch(I,lt,21)#3
soot.baf.JasminClass$1$3.caseRefType(Lsoot/RefType;)V#LocalLoad(Ljava/lang/Object;,0)#4
soot.baf.JasminClass$1$3.caseRefType(Lsoot/RefType;)V#Get(I,NONSTATIC,Lsoot/baf/JasminClass$1$3;,val$slot)#5
soot.baf.JasminClass$1$3.caseRefType(Lsoot/RefType;)V#Constant(I,3)#6
soot.baf.JasminClass$1$3.caseRefType(Lsoot/RefType;)V#ConditionalBranch(I,gt,21)#7
soot.baf.JasminClass$1$3.caseRefType(Lsoot/RefType;)V#LocalLoad(Ljava/lang/Object;,0)#8
soot.baf.JasminClass$1$3.caseRefType(Lsoot/RefType;)V#Get(Lsoot/baf/JasminClass$1;,NONSTATIC,Lsoot/baf/JasminClass$1$3;,this$1)#9
soot.baf.JasminClass$1$3.caseRefType(Lsoot/RefType;)V#Invoke(STATIC,Lsoot/baf/JasminClass$1;,access$0,(Lsoot/baf/JasminClass$1;)Lsoot/baf/JasminClass;)#10
soot.baf.JasminClass$1.access$0(Lsoot/baf/JasminClass$1;)Lsoot/baf/JasminClass;#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.JasminClass$1.access$0(Lsoot/baf/JasminClass$1;)Lsoot/baf/JasminClass;#Get(Lsoot/baf/JasminClass;,NONSTATIC,Lsoot/baf/JasminClass$1;,this$0)#1
soot.baf.JasminClass$1.access$0(Lsoot/baf/JasminClass$1;)Lsoot/baf/JasminClass;#Return(Ljava/lang/Object;)#2
soot.baf.JasminClass$1$3.caseRefType(Lsoot/RefType;)V#New(Ljava/lang/StringBuilder;,0)#11
soot.baf.JasminClass$1$3.caseRefType(Lsoot/RefType;)V#Dup(1,0)#12
soot.baf.JasminClass$1$3.caseRefType(Lsoot/RefType;)V#Constant(Ljava/lang/String;,"aload_")#13
soot.baf.JasminClass$1$3.caseRefType(Lsoot/RefType;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#14
soot.baf.JasminClass$1$3.caseRefType(Lsoot/RefType;)V#LocalLoad(Ljava/lang/Object;,0)#15
soot.baf.JasminClass$1$3.caseRefType(Lsoot/RefType;)V#Get(I,NONSTATIC,Lsoot/baf/JasminClass$1$3;,val$slot)#16
soot.baf.JasminClass$1$3.caseRefType(Lsoot/RefType;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#17
soot.baf.JasminClass$1$3.caseRefType(Lsoot/RefType;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#18
soot.baf.JasminClass$1$3.caseRefType(Lsoot/RefType;)V#Invoke(STATIC,Lsoot/baf/JasminClass;,access$0,(Lsoot/baf/JasminClass;Ljava/lang/String;)V)#19
soot.baf.JasminClass.access$0(Lsoot/baf/JasminClass;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.JasminClass.access$0(Lsoot/baf/JasminClass;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.baf.JasminClass.access$0(Lsoot/baf/JasminClass;Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/baf/JasminClass;,emit,(Ljava/lang/String;)V)#2
soot.baf.JasminClass.access$0(Lsoot/baf/JasminClass;Ljava/lang/String;)V#Return(V)#3
soot.baf.JasminClass$1$3.caseRefType(Lsoot/RefType;)V#Goto(33)#20
soot.baf.JasminClass$1$3.caseRefType(Lsoot/RefType;)V#Return(V)#33
soot.RefType.apply(Lsoot/util/Switch;)V#Return(V)#4
soot.baf.JasminClass$1.caseLoadInst(Lsoot/baf/LoadInst;)V#Return(V)#17
soot.baf.internal.BLoadInst.apply(Lsoot/util/Switch;)V#Return(V)#4
soot.baf.internal.BSpecialInvokeInst.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.baf.internal.BSpecialInvokeInst.apply(Lsoot/util/Switch;)V#CheckCast(Lsoot/baf/InstSwitch;)#1
soot.baf.internal.BSpecialInvokeInst.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.baf.internal.BSpecialInvokeInst.apply(Lsoot/util/Switch;)V#Invoke(INTERFACE,Lsoot/baf/InstSwitch;,caseSpecialInvokeInst,(Lsoot/baf/SpecialInvokeInst;)V)#3
soot.baf.JasminClass$1.caseSpecialInvokeInst(Lsoot/baf/SpecialInvokeInst;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.baf.JasminClass$1.caseSpecialInvokeInst(Lsoot/baf/SpecialInvokeInst;)V#Invoke(INTERFACE,Lsoot/baf/SpecialInvokeInst;,getMethodRef,()Lsoot/SootMethodRef;)#1
soot.baf.JasminClass$1.caseSpecialInvokeInst(Lsoot/baf/SpecialInvokeInst;)V#LocalStore(Ljava/lang/Object;,2)#2
soot.baf.JasminClass$1.caseSpecialInvokeInst(Lsoot/baf/SpecialInvokeInst;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.baf.JasminClass$1.caseSpecialInvokeInst(Lsoot/baf/SpecialInvokeInst;)V#Get(Lsoot/baf/JasminClass;,NONSTATIC,Lsoot/baf/JasminClass$1;,this$0)#4
soot.baf.JasminClass$1.caseSpecialInvokeInst(Lsoot/baf/SpecialInvokeInst;)V#New(Ljava/lang/StringBuilder;,0)#5
soot.baf.JasminClass$1.caseSpecialInvokeInst(Lsoot/baf/SpecialInvokeInst;)V#Dup(1,0)#6
soot.baf.JasminClass$1.caseSpecialInvokeInst(Lsoot/baf/SpecialInvokeInst;)V#Constant(Ljava/lang/String;,"invokespecial ")#7
soot.baf.JasminClass$1.caseSpecialInvokeInst(Lsoot/baf/SpecialInvokeInst;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#8
soot.baf.JasminClass$1.caseSpecialInvokeInst(Lsoot/baf/SpecialInvokeInst;)V#LocalLoad(Ljava/lang/Object;,2)#9
soot.baf.JasminClass$1.caseSpecialInvokeInst(Lsoot/baf/SpecialInvokeInst;)V#Invoke(INTERFACE,Lsoot/SootMethodRef;,declaringClass,()Lsoot/SootClass;)#10
soot.baf.JasminClass$1.caseSpecialInvokeInst(Lsoot/baf/SpecialInvokeInst;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getName,()Ljava/lang/String;)#11
soot.baf.JasminClass$1.caseSpecialInvokeInst(Lsoot/baf/SpecialInvokeInst;)V#Invoke(STATIC,Lsoot/baf/JasminClass;,slashify,(Ljava/lang/String;)Ljava/lang/String;)#12
soot.baf.JasminClass$1.caseSpecialInvokeInst(Lsoot/baf/SpecialInvokeInst;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#13
soot.baf.JasminClass$1.caseSpecialInvokeInst(Lsoot/baf/SpecialInvokeInst;)V#Constant(Ljava/lang/String;,"/")#14
soot.baf.JasminClass$1.caseSpecialInvokeInst(Lsoot/baf/SpecialInvokeInst;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#15
soot.baf.JasminClass$1.caseSpecialInvokeInst(Lsoot/baf/SpecialInvokeInst;)V#LocalLoad(Ljava/lang/Object;,2)#16
soot.baf.JasminClass$1.caseSpecialInvokeInst(Lsoot/baf/SpecialInvokeInst;)V#Invoke(INTERFACE,Lsoot/SootMethodRef;,name,()Ljava/lang/String;)#17
soot.SootMethodRefImpl.name()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethodRefImpl.name()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsoot/SootMethodRefImpl;,name)#1
soot.SootMethodRefImpl.name()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
soot.baf.JasminClass$1.caseSpecialInvokeInst(Lsoot/baf/SpecialInvokeInst;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#18
soot.baf.JasminClass$1.caseSpecialInvokeInst(Lsoot/baf/SpecialInvokeInst;)V#LocalLoad(Ljava/lang/Object;,2)#19
soot.baf.JasminClass$1.caseSpecialInvokeInst(Lsoot/baf/SpecialInvokeInst;)V#Invoke(STATIC,Lsoot/baf/JasminClass;,jasminDescriptorOf,(Lsoot/SootMethodRef;)Ljava/lang/String;)#20
soot.baf.JasminClass$1.caseSpecialInvokeInst(Lsoot/baf/SpecialInvokeInst;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#21
soot.baf.JasminClass$1.caseSpecialInvokeInst(Lsoot/baf/SpecialInvokeInst;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#22
soot.baf.JasminClass$1.caseSpecialInvokeInst(Lsoot/baf/SpecialInvokeInst;)V#Invoke(STATIC,Lsoot/baf/JasminClass;,access$0,(Lsoot/baf/JasminClass;Ljava/lang/String;)V)#23
soot.baf.JasminClass$1.caseSpecialInvokeInst(Lsoot/baf/SpecialInvokeInst;)V#Return(V)#24
soot.baf.internal.BSpecialInvokeInst.apply(Lsoot/util/Switch;)V#Return(V)#4
soot.baf.internal.BReturnVoidInst.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.baf.internal.BReturnVoidInst.apply(Lsoot/util/Switch;)V#CheckCast(Lsoot/baf/InstSwitch;)#1
soot.baf.internal.BReturnVoidInst.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.baf.internal.BReturnVoidInst.apply(Lsoot/util/Switch;)V#Invoke(INTERFACE,Lsoot/baf/InstSwitch;,caseReturnVoidInst,(Lsoot/baf/ReturnVoidInst;)V)#3
soot.baf.JasminClass$1.caseReturnVoidInst(Lsoot/baf/ReturnVoidInst;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.JasminClass$1.caseReturnVoidInst(Lsoot/baf/ReturnVoidInst;)V#Get(Lsoot/baf/JasminClass;,NONSTATIC,Lsoot/baf/JasminClass$1;,this$0)#1
soot.baf.JasminClass$1.caseReturnVoidInst(Lsoot/baf/ReturnVoidInst;)V#Constant(Ljava/lang/String;,"return")#2
soot.baf.JasminClass$1.caseReturnVoidInst(Lsoot/baf/ReturnVoidInst;)V#Invoke(STATIC,Lsoot/baf/JasminClass;,access$0,(Lsoot/baf/JasminClass;Ljava/lang/String;)V)#3
soot.baf.JasminClass$1.caseReturnVoidInst(Lsoot/baf/ReturnVoidInst;)V#Return(V)#4
soot.baf.internal.BReturnVoidInst.apply(Lsoot/util/Switch;)V#Return(V)#4
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#426
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#427
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Put(Z,NONSTATIC,Lsoot/baf/JasminClass;,isEmittingMethodCode)#428
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#429
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#430
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Put(I,NONSTATIC,Lsoot/baf/JasminClass;,maxStackHeight)#431
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,2)#432
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/Body;,getUnits,()Lsoot/PatchingChain;)#433
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/PatchingChain;,size,()I)#434
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#435
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ConditionalBranch(I,eq,529)#436
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#New(Lsoot/toolkits/graph/BriefBlockGraph;,0)#437
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Dup(1,0)#438
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,2)#439
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(SPECIAL,Lsoot/toolkits/graph/BriefBlockGraph;,<init>,(Lsoot/Body;)V)#440
soot.toolkits.graph.BriefBlockGraph.<init>(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.BriefBlockGraph.<init>(Lsoot/Body;)V#New(Lsoot/toolkits/graph/BriefUnitGraph;,0)#1
soot.toolkits.graph.BriefBlockGraph.<init>(Lsoot/Body;)V#Dup(1,0)#2
soot.toolkits.graph.BriefBlockGraph.<init>(Lsoot/Body;)V#LocalLoad(Ljava/lang/Object;,1)#3
soot.toolkits.graph.BriefBlockGraph.<init>(Lsoot/Body;)V#Invoke(SPECIAL,Lsoot/toolkits/graph/BriefUnitGraph;,<init>,(Lsoot/Body;)V)#4
soot.util.PhaseDumper$PhaseStack.currentPhase()Ljava/lang/String;#Constant(Ljava/lang/String;,"NOPHASE")#4
soot.util.PhaseDumper$PhaseStack.currentPhase()Ljava/lang/String;#Return(Ljava/lang/Object;)#5
soot.toolkits.graph.BriefBlockGraph.<init>(Lsoot/Body;)V#Invoke(SPECIAL,Lsoot/toolkits/graph/BriefBlockGraph;,<init>,(Lsoot/toolkits/graph/BriefUnitGraph;)V)#5
soot.toolkits.graph.BriefBlockGraph.<init>(Lsoot/toolkits/graph/BriefUnitGraph;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.BriefBlockGraph.<init>(Lsoot/toolkits/graph/BriefUnitGraph;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.toolkits.graph.BriefBlockGraph.<init>(Lsoot/toolkits/graph/BriefUnitGraph;)V#Invoke(SPECIAL,Lsoot/toolkits/graph/BlockGraph;,<init>,(Lsoot/toolkits/graph/UnitGraph;)V)#2
soot.toolkits.graph.BriefBlockGraph.<init>(Lsoot/toolkits/graph/BriefUnitGraph;)V#Invoke(STATIC,Lsoot/util/PhaseDumper;,v,()Lsoot/util/PhaseDumper;)#3
soot.toolkits.graph.BriefBlockGraph.<init>(Lsoot/toolkits/graph/BriefUnitGraph;)V#LocalLoad(Ljava/lang/Object;,0)#4
soot.toolkits.graph.BriefBlockGraph.<init>(Lsoot/toolkits/graph/BriefUnitGraph;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.toolkits.graph.BriefBlockGraph.<init>(Lsoot/toolkits/graph/BriefUnitGraph;)V#Get(Lsoot/Body;,NONSTATIC,Lsoot/toolkits/graph/BriefBlockGraph;,mBody)#6
soot.toolkits.graph.BriefBlockGraph.<init>(Lsoot/toolkits/graph/BriefUnitGraph;)V#Invoke(VIRTUAL,Lsoot/util/PhaseDumper;,dumpGraph,(Lsoot/toolkits/graph/DirectedGraph;Lsoot/Body;)V)#7
soot.toolkits.graph.BriefBlockGraph.<init>(Lsoot/toolkits/graph/BriefUnitGraph;)V#Return(V)#8
soot.toolkits.graph.BriefBlockGraph.<init>(Lsoot/Body;)V#Return(V)#6
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,8)#441
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,8)#442
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/toolkits/graph/BlockGraph;,getBlocks,()Ljava/util/List;)#443
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,9)#444
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,9)#445
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#446
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#447
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ConditionalBranch(I,eq,529)#448
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,8)#449
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Lsoot/toolkits/graph/DirectedGraph;,getHeads,()Ljava/util/List;)#450
soot.toolkits.graph.BlockGraph.getHeads()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.BlockGraph.getHeads()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lsoot/toolkits/graph/BlockGraph;,mHeads)#1
soot.toolkits.graph.BlockGraph.getHeads()Ljava/util/List;#Return(Ljava/lang/Object;)#2
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,10)#451
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,10)#452
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#453
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,11)#454
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Goto(507)#455
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,11)#507
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#508
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#509
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ConditionalBranch(I,ne,456)#510
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,11)#456
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#457
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#CheckCast(Lsoot/toolkits/graph/Block;)#458
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,12)#459
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,6)#460
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,12)#461
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/toolkits/graph/Block;,getHead,()Lsoot/Unit;)#462
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/Set;,contains,(Ljava/lang/Object;)Z)#463
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#464
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ConditionalBranch(I,eq,472)#465
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#New(Ljava/lang/Integer;,0)#472
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Dup(1,0)#473
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#474
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(SPECIAL,Ljava/lang/Integer;,<init>,(I)V)#475
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,13)#476
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#477
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/baf/JasminClass;,blockToStackHeight)#478
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(L;,null)#479
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ConditionalBranch(Ljava/lang/Object;,ne,486)#480
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#486
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/baf/JasminClass;,blockToStackHeight)#487
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,12)#488
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,13)#489
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#490
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Pop(1)#491
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#492
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/baf/JasminClass;,blockToLogicalStackHeight)#493
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(L;,null)#494
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ConditionalBranch(Ljava/lang/Object;,ne,501)#495
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#501
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/baf/JasminClass;,blockToLogicalStackHeight)#502
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,12)#503
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,13)#504
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#505
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Pop(1)#506
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,10)#511
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#512
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,11)#513
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Goto(525)#514
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,11)#525
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#526
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#527
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ConditionalBranch(I,ne,515)#528
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,11)#515
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#516
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#CheckCast(Lsoot/toolkits/graph/Block;)#517
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,12)#518
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#519
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,12)#520
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(SPECIAL,Lsoot/baf/JasminClass;,calculateStackHeight,(Lsoot/toolkits/graph/Block;)V)#521
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#Invoke(VIRTUAL,Lsoot/toolkits/graph/Block;,iterator,()Ljava/util/Iterator;)#1
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#LocalStore(Ljava/lang/Object;,2)#2
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/baf/JasminClass;,blockToStackHeight)#4
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#LocalLoad(Ljava/lang/Object;,1)#5
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#6
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#CheckCast(Ljava/lang/Integer;)#7
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#8
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#LocalStore(I,3)#9
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#LocalLoad(I,3)#10
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#LocalLoad(Ljava/lang/Object;,0)#11
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#Get(I,NONSTATIC,Lsoot/baf/JasminClass;,maxStackHeight)#12
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#ConditionalBranch(I,le,87)#13
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#LocalLoad(Ljava/lang/Object;,2)#87
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#88
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#Constant(I,0)#89
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#ConditionalBranch(I,ne,18)#90
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#LocalLoad(Ljava/lang/Object;,2)#18
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#19
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#CheckCast(Lsoot/baf/Inst;)#20
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#LocalStore(Ljava/lang/Object;,4)#21
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#LocalLoad(I,3)#22
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#LocalLoad(Ljava/lang/Object;,4)#23
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#Invoke(INTERFACE,Lsoot/baf/Inst;,getInMachineCount,()I)#24
soot.baf.internal.BIdentityInst.getInMachineCount()I#Constant(I,0)#0
soot.baf.internal.BIdentityInst.getInMachineCount()I#Return(I)#1
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#BinaryOp(I,sub)#25
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#LocalStore(I,3)#26
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#LocalLoad(I,3)#27
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#Constant(I,0)#28
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#ConditionalBranch(I,ge,75)#29
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#LocalLoad(I,3)#75
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#LocalLoad(Ljava/lang/Object;,4)#76
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#Invoke(INTERFACE,Lsoot/baf/Inst;,getOutMachineCount,()I)#77
soot.baf.internal.BIdentityInst.getOutMachineCount()I#Constant(I,0)#0
soot.baf.internal.BIdentityInst.getOutMachineCount()I#Return(I)#1
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#BinaryOp(I,add)#78
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#LocalStore(I,3)#79
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#LocalLoad(I,3)#80
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#LocalLoad(Ljava/lang/Object;,0)#81
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#Get(I,NONSTATIC,Lsoot/baf/JasminClass;,maxStackHeight)#82
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#ConditionalBranch(I,le,87)#83
soot.baf.internal.BLoadInst.getInMachineCount()I#Constant(I,0)#0
soot.baf.internal.BLoadInst.getInMachineCount()I#Return(I)#1
soot.baf.internal.AbstractOpTypeInst.getOutMachineCount()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.AbstractOpTypeInst.getOutMachineCount()I#Invoke(VIRTUAL,Lsoot/baf/internal/AbstractOpTypeInst;,getOpType,()Lsoot/Type;)#1
soot.baf.internal.AbstractOpTypeInst.getOutMachineCount()I#Invoke(STATIC,Lsoot/AbstractJasminClass;,sizeOfType,(Lsoot/Type;)I)#2
soot.AbstractJasminClass.sizeOfType(Lsoot/Type;)I#LocalLoad(Ljava/lang/Object;,0)#0
soot.AbstractJasminClass.sizeOfType(Lsoot/Type;)I#Instanceof(Lsoot/baf/DoubleWordType;)#1
soot.AbstractJasminClass.sizeOfType(Lsoot/Type;)I#Constant(I,0)#2
soot.AbstractJasminClass.sizeOfType(Lsoot/Type;)I#ConditionalBranch(I,ne,12)#3
soot.AbstractJasminClass.sizeOfType(Lsoot/Type;)I#LocalLoad(Ljava/lang/Object;,0)#4
soot.AbstractJasminClass.sizeOfType(Lsoot/Type;)I#Instanceof(Lsoot/LongType;)#5
soot.AbstractJasminClass.sizeOfType(Lsoot/Type;)I#Constant(I,0)#6
soot.AbstractJasminClass.sizeOfType(Lsoot/Type;)I#ConditionalBranch(I,ne,12)#7
soot.AbstractJasminClass.sizeOfType(Lsoot/Type;)I#LocalLoad(Ljava/lang/Object;,0)#8
soot.AbstractJasminClass.sizeOfType(Lsoot/Type;)I#Instanceof(Lsoot/DoubleType;)#9
soot.AbstractJasminClass.sizeOfType(Lsoot/Type;)I#Constant(I,0)#10
soot.AbstractJasminClass.sizeOfType(Lsoot/Type;)I#ConditionalBranch(I,eq,14)#11
soot.AbstractJasminClass.sizeOfType(Lsoot/Type;)I#LocalLoad(Ljava/lang/Object;,0)#14
soot.AbstractJasminClass.sizeOfType(Lsoot/Type;)I#Instanceof(Lsoot/VoidType;)#15
soot.AbstractJasminClass.sizeOfType(Lsoot/Type;)I#Constant(I,0)#16
soot.AbstractJasminClass.sizeOfType(Lsoot/Type;)I#ConditionalBranch(I,eq,20)#17
soot.AbstractJasminClass.sizeOfType(Lsoot/Type;)I#Constant(I,1)#20
soot.AbstractJasminClass.sizeOfType(Lsoot/Type;)I#Return(I)#21
soot.baf.internal.AbstractOpTypeInst.getOutMachineCount()I#Return(I)#3
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#LocalLoad(Ljava/lang/Object;,0)#84
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#LocalLoad(I,3)#85
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#Put(I,NONSTATIC,Lsoot/baf/JasminClass;,maxStackHeight)#86
soot.baf.internal.BSpecialInvokeInst.getInMachineCount()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BSpecialInvokeInst.getInMachineCount()I#Invoke(SPECIAL,Lsoot/baf/internal/AbstractInvokeInst;,getInMachineCount,()I)#1
soot.baf.internal.AbstractInvokeInst.getInMachineCount()I#Constant(I,0)#0
soot.baf.internal.AbstractInvokeInst.getInMachineCount()I#LocalStore(I,1)#1
soot.baf.internal.AbstractInvokeInst.getInMachineCount()I#LocalLoad(Ljava/lang/Object;,0)#2
soot.baf.internal.AbstractInvokeInst.getInMachineCount()I#Invoke(VIRTUAL,Lsoot/baf/internal/AbstractInvokeInst;,getMethodRef,()Lsoot/SootMethodRef;)#3
soot.baf.internal.AbstractInvokeInst.getInMachineCount()I#Invoke(INTERFACE,Lsoot/SootMethodRef;,parameterTypes,()Ljava/util/List;)#4
soot.baf.internal.AbstractInvokeInst.getInMachineCount()I#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#5
soot.baf.internal.AbstractInvokeInst.getInMachineCount()I#LocalStore(Ljava/lang/Object;,2)#6
soot.baf.internal.AbstractInvokeInst.getInMachineCount()I#Goto(15)#7
soot.baf.internal.AbstractInvokeInst.getInMachineCount()I#LocalLoad(Ljava/lang/Object;,2)#15
soot.baf.internal.AbstractInvokeInst.getInMachineCount()I#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#16
soot.baf.internal.AbstractInvokeInst.getInMachineCount()I#Constant(I,0)#17
soot.baf.internal.AbstractInvokeInst.getInMachineCount()I#ConditionalBranch(I,ne,8)#18
soot.baf.internal.AbstractInvokeInst.getInMachineCount()I#LocalLoad(I,1)#19
soot.baf.internal.AbstractInvokeInst.getInMachineCount()I#Return(I)#20
soot.baf.internal.BSpecialInvokeInst.getInMachineCount()I#Constant(I,1)#2
soot.baf.internal.BSpecialInvokeInst.getInMachineCount()I#BinaryOp(I,add)#3
soot.baf.internal.BSpecialInvokeInst.getInMachineCount()I#Return(I)#4
soot.baf.internal.BSpecialInvokeInst.getOutMachineCount()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BSpecialInvokeInst.getOutMachineCount()I#Invoke(SPECIAL,Lsoot/baf/internal/AbstractInvokeInst;,getOutMachineCount,()I)#1
soot.baf.internal.AbstractInvokeInst.getOutMachineCount()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.AbstractInvokeInst.getOutMachineCount()I#Invoke(VIRTUAL,Lsoot/baf/internal/AbstractInvokeInst;,getMethodRef,()Lsoot/SootMethodRef;)#1
soot.baf.internal.AbstractInvokeInst.getOutMachineCount()I#Invoke(INTERFACE,Lsoot/SootMethodRef;,returnType,()Lsoot/Type;)#2
soot.baf.internal.AbstractInvokeInst.getOutMachineCount()I#Instanceof(Lsoot/VoidType;)#3
soot.baf.internal.AbstractInvokeInst.getOutMachineCount()I#Constant(I,0)#4
soot.baf.internal.AbstractInvokeInst.getOutMachineCount()I#ConditionalBranch(I,eq,8)#5
soot.baf.internal.AbstractInvokeInst.getOutMachineCount()I#Constant(I,0)#6
soot.baf.internal.AbstractInvokeInst.getOutMachineCount()I#Return(I)#7
soot.baf.internal.BSpecialInvokeInst.getOutMachineCount()I#Return(I)#2
soot.baf.internal.BReturnVoidInst.getInMachineCount()I#Constant(I,0)#0
soot.baf.internal.BReturnVoidInst.getInMachineCount()I#Return(I)#1
soot.baf.internal.BReturnVoidInst.getOutMachineCount()I#Constant(I,0)#0
soot.baf.internal.BReturnVoidInst.getOutMachineCount()I#Return(I)#1
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#LocalLoad(Ljava/lang/Object;,1)#91
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#Invoke(VIRTUAL,Lsoot/toolkits/graph/Block;,getSuccs,()Ljava/util/List;)#92
soot.toolkits.graph.Block.getSuccs()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
soot.toolkits.graph.Block.getSuccs()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lsoot/toolkits/graph/Block;,mSuccessors)#1
soot.toolkits.graph.Block.getSuccs()Ljava/util/List;#Return(Ljava/lang/Object;)#2
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#93
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#LocalStore(Ljava/lang/Object;,4)#94
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#Goto(153)#95
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#LocalLoad(Ljava/lang/Object;,4)#153
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#154
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#Constant(I,0)#155
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#ConditionalBranch(I,ne,96)#156
soot.baf.JasminClass.calculateStackHeight(Lsoot/toolkits/graph/Block;)V#Return(V)#157
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#522
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,12)#523
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(SPECIAL,Lsoot/baf/JasminClass;,calculateLogicalStackHeightCheck,(Lsoot/toolkits/graph/Block;)V)#524
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#Invoke(VIRTUAL,Lsoot/toolkits/graph/Block;,iterator,()Ljava/util/Iterator;)#1
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#LocalStore(Ljava/lang/Object;,2)#2
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/baf/JasminClass;,blockToLogicalStackHeight)#4
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#LocalLoad(Ljava/lang/Object;,1)#5
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#6
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#CheckCast(Ljava/lang/Integer;)#7
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#8
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#LocalStore(I,3)#9
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#Goto(60)#10
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#LocalLoad(Ljava/lang/Object;,2)#60
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#61
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#Constant(I,0)#62
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#ConditionalBranch(I,ne,11)#63
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#LocalLoad(Ljava/lang/Object;,2)#11
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#12
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#CheckCast(Lsoot/baf/Inst;)#13
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#LocalStore(Ljava/lang/Object;,4)#14
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#LocalLoad(I,3)#15
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#LocalLoad(Ljava/lang/Object;,4)#16
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#Invoke(INTERFACE,Lsoot/baf/Inst;,getInCount,()I)#17
soot.baf.internal.BIdentityInst.getInCount()I#Constant(I,0)#0
soot.baf.internal.BIdentityInst.getInCount()I#Return(I)#1
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#BinaryOp(I,sub)#18
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#LocalStore(I,3)#19
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#LocalLoad(I,3)#20
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#Constant(I,0)#21
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#ConditionalBranch(I,ge,55)#22
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#LocalLoad(I,3)#55
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#LocalLoad(Ljava/lang/Object;,4)#56
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#Invoke(INTERFACE,Lsoot/baf/Inst;,getOutCount,()I)#57
soot.baf.internal.BIdentityInst.getOutCount()I#Constant(I,0)#0
soot.baf.internal.BIdentityInst.getOutCount()I#Return(I)#1
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#BinaryOp(I,add)#58
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#LocalStore(I,3)#59
soot.baf.internal.BLoadInst.getInCount()I#Constant(I,0)#0
soot.baf.internal.BLoadInst.getInCount()I#Return(I)#1
soot.baf.internal.BLoadInst.getOutCount()I#Constant(I,1)#0
soot.baf.internal.BLoadInst.getOutCount()I#Return(I)#1
soot.baf.internal.BReturnVoidInst.getInCount()I#Constant(I,0)#0
soot.baf.internal.BReturnVoidInst.getInCount()I#Return(I)#1
soot.baf.internal.BReturnVoidInst.getOutCount()I#Constant(I,0)#0
soot.baf.internal.BReturnVoidInst.getOutCount()I#Return(I)#1
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#LocalLoad(Ljava/lang/Object;,1)#64
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#Invoke(VIRTUAL,Lsoot/toolkits/graph/Block;,getSuccs,()Ljava/util/List;)#65
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#66
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#LocalStore(Ljava/lang/Object;,4)#67
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#Goto(111)#68
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#LocalLoad(Ljava/lang/Object;,4)#111
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#112
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#Constant(I,0)#113
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#ConditionalBranch(I,ne,69)#114
soot.baf.JasminClass.calculateLogicalStackHeightCheck(Lsoot/toolkits/graph/Block;)V#Return(V)#115
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#529
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,getModifiers,()I)#530
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(STATIC,Lsoot/Modifier;,isNative,(I)Z)#531
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#532
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ConditionalBranch(I,ne,552)#533
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#534
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,getModifiers,()I)#535
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(STATIC,Lsoot/Modifier;,isAbstract,(I)Z)#536
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#537
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ConditionalBranch(I,ne,552)#538
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#539
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Get(Ljava/util/List;,NONSTATIC,Lsoot/baf/JasminClass;,code)#540
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(I,5)#541
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#New(Ljava/lang/StringBuilder;,0)#542
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Dup(1,0)#543
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(Ljava/lang/String;,"    .limit stack ")#544
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#545
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#546
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Get(I,NONSTATIC,Lsoot/baf/JasminClass;,maxStackHeight)#547
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#548
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#549
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/List;,set,(ILjava/lang/Object;)Ljava/lang/Object;)#550
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Pop(1)#551
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,3)#552
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/baf/BafBody;,getTags,()Ljava/util/List;)#553
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#554
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,7)#555
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Goto(585)#556
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,7)#585
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#586
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#587
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ConditionalBranch(I,ne,557)#588
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,7)#557
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#558
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#CheckCast(Lsoot/tagkit/Tag;)#559
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,8)#560
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,8)#561
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Instanceof(Lsoot/tagkit/JasminAttribute;)#562
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#563
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ConditionalBranch(I,eq,585)#564
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#565
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#New(Ljava/lang/StringBuilder;,0)#566
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Dup(1,0)#567
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(Ljava/lang/String;,".code_attribute ")#568
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#569
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,8)#570
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Lsoot/tagkit/Tag;,getName,()Ljava/lang/String;)#571
soot.tagkit.CodeAttribute.getName()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.tagkit.CodeAttribute.getName()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsoot/tagkit/CodeAttribute;,name)#1
soot.tagkit.CodeAttribute.getName()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#572
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(Ljava/lang/String;," \"")#573
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#574
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,8)#575
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#CheckCast(Lsoot/tagkit/JasminAttribute;)#576
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#577
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Get(Ljava/util/Map;,NONSTATIC,Lsoot/baf/JasminClass;,unitToLabel)#578
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/tagkit/JasminAttribute;,getJasminValue,(Ljava/util/Map;)Ljava/lang/String;)#579
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#New(Ljava/lang/StringBuffer;,0)#0
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#Dup(1,0)#1
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuffer;,<init>,()V)#2
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,2)#3
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#4
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#Get(Ljava/util/List;,NONSTATIC,Lsoot/tagkit/CodeAttribute;,mTags)#5
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/List;,size,()I)#6
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#7
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#Get(Ljava/util/List;,NONSTATIC,Lsoot/tagkit/CodeAttribute;,mUnits)#8
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/List;,size,()I)#9
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#ConditionalBranch(I,eq,16)#10
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#16
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#Get(Ljava/util/List;,NONSTATIC,Lsoot/tagkit/CodeAttribute;,mTags)#17
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#18
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,3)#19
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#20
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#Get(Ljava/util/List;,NONSTATIC,Lsoot/tagkit/CodeAttribute;,mUnits)#21
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#22
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,4)#23
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#Goto(53)#24
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#53
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#54
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#Constant(I,0)#55
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#ConditionalBranch(I,ne,25)#56
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,4)#25
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#26
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,5)#27
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#28
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#29
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,6)#30
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#31
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#New(Ljava/lang/StringBuilder;,0)#32
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#Dup(1,0)#33
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#Constant(Ljava/lang/String;,"%")#34
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#35
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#36
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,5)#37
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#38
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#39
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#Constant(Ljava/lang/String;,"%")#40
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#41
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#New(Ljava/lang/String;,0)#42
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#Dup(1,0)#43
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,6)#44
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#CheckCast(Lsoot/tagkit/Tag;)#45
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#Invoke(INTERFACE,Lsoot/tagkit/Tag;,getValue,()[B)#46
soot.tagkit.LineNumberTag.getValue()[B#Constant(I,2)#0
soot.tagkit.LineNumberTag.getValue()[B#New([B,1)#1
soot.tagkit.LineNumberTag.getValue()[B#LocalStore(Ljava/lang/Object;,1)#2
soot.tagkit.LineNumberTag.getValue()[B#LocalLoad(Ljava/lang/Object;,1)#3
soot.tagkit.LineNumberTag.getValue()[B#Constant(I,0)#4
soot.tagkit.LineNumberTag.getValue()[B#LocalLoad(Ljava/lang/Object;,0)#5
soot.tagkit.LineNumberTag.getValue()[B#Get(I,NONSTATIC,Lsoot/tagkit/LineNumberTag;,line_number)#6
soot.tagkit.LineNumberTag.getValue()[B#Constant(I,256)#7
soot.tagkit.LineNumberTag.getValue()[B#BinaryOp(I,div)#8
soot.tagkit.LineNumberTag.getValue()[B#Conversion(I,B)#9
soot.tagkit.LineNumberTag.getValue()[B#ArrayStore(B)#10
soot.tagkit.LineNumberTag.getValue()[B#LocalLoad(Ljava/lang/Object;,1)#11
soot.tagkit.LineNumberTag.getValue()[B#Constant(I,1)#12
soot.tagkit.LineNumberTag.getValue()[B#LocalLoad(Ljava/lang/Object;,0)#13
soot.tagkit.LineNumberTag.getValue()[B#Get(I,NONSTATIC,Lsoot/tagkit/LineNumberTag;,line_number)#14
soot.tagkit.LineNumberTag.getValue()[B#Constant(I,256)#15
soot.tagkit.LineNumberTag.getValue()[B#BinaryOp(I,rem)#16
soot.tagkit.LineNumberTag.getValue()[B#Conversion(I,B)#17
soot.tagkit.LineNumberTag.getValue()[B#ArrayStore(B)#18
soot.tagkit.LineNumberTag.getValue()[B#LocalLoad(Ljava/lang/Object;,1)#19
soot.tagkit.LineNumberTag.getValue()[B#Return(Ljava/lang/Object;)#20
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#Invoke(STATIC,Lsoot/tagkit/Base64;,encode,([B)[C)#47
soot.tagkit.Base64.<clinit>()V#Constant(Ljava/lang/String;,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=")#0
soot.tagkit.Base64.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/String;,toCharArray,()[C)#1
soot.tagkit.Base64.<clinit>()V#Put([C,STATIC,Lsoot/tagkit/Base64;,alphabet)#2
soot.tagkit.Base64.<clinit>()V#Constant(I,256)#3
soot.tagkit.Base64.<clinit>()V#New([B,1)#4
soot.tagkit.Base64.<clinit>()V#Put([B,STATIC,Lsoot/tagkit/Base64;,codes)#5
soot.tagkit.Base64.<clinit>()V#Constant(I,0)#6
soot.tagkit.Base64.<clinit>()V#LocalStore(I,0)#7
soot.tagkit.Base64.<clinit>()V#Goto(17)#8
soot.tagkit.Base64.<clinit>()V#LocalLoad(I,0)#17
soot.tagkit.Base64.<clinit>()V#Constant(I,256)#18
soot.tagkit.Base64.<clinit>()V#ConditionalBranch(I,lt,9)#19
soot.tagkit.Base64.<clinit>()V#Get([B,STATIC,Lsoot/tagkit/Base64;,codes)#9
soot.tagkit.Base64.<clinit>()V#LocalLoad(I,0)#10
soot.tagkit.Base64.<clinit>()V#Constant(I,-1)#11
soot.tagkit.Base64.<clinit>()V#ArrayStore(B)#12
soot.tagkit.Base64.<clinit>()V#LocalLoad(I,0)#13
soot.tagkit.Base64.<clinit>()V#Constant(I,1)#14
soot.tagkit.Base64.<clinit>()V#BinaryOp(I,add)#15
soot.tagkit.Base64.<clinit>()V#LocalStore(I,0)#16
soot.tagkit.Base64.<clinit>()V#Constant(I,65)#20
soot.tagkit.Base64.<clinit>()V#LocalStore(I,0)#21
soot.tagkit.Base64.<clinit>()V#Goto(34)#22
soot.tagkit.Base64.<clinit>()V#LocalLoad(I,0)#34
soot.tagkit.Base64.<clinit>()V#Constant(I,90)#35
soot.tagkit.Base64.<clinit>()V#ConditionalBranch(I,le,23)#36
soot.tagkit.Base64.<clinit>()V#Get([B,STATIC,Lsoot/tagkit/Base64;,codes)#23
soot.tagkit.Base64.<clinit>()V#LocalLoad(I,0)#24
soot.tagkit.Base64.<clinit>()V#LocalLoad(I,0)#25
soot.tagkit.Base64.<clinit>()V#Constant(I,65)#26
soot.tagkit.Base64.<clinit>()V#BinaryOp(I,sub)#27
soot.tagkit.Base64.<clinit>()V#Conversion(I,B)#28
soot.tagkit.Base64.<clinit>()V#ArrayStore(B)#29
soot.tagkit.Base64.<clinit>()V#LocalLoad(I,0)#30
soot.tagkit.Base64.<clinit>()V#Constant(I,1)#31
soot.tagkit.Base64.<clinit>()V#BinaryOp(I,add)#32
soot.tagkit.Base64.<clinit>()V#LocalStore(I,0)#33
soot.tagkit.Base64.<clinit>()V#Constant(I,97)#37
soot.tagkit.Base64.<clinit>()V#LocalStore(I,0)#38
soot.tagkit.Base64.<clinit>()V#Goto(53)#39
soot.tagkit.Base64.<clinit>()V#LocalLoad(I,0)#53
soot.tagkit.Base64.<clinit>()V#Constant(I,122)#54
soot.tagkit.Base64.<clinit>()V#ConditionalBranch(I,le,40)#55
soot.tagkit.Base64.<clinit>()V#Get([B,STATIC,Lsoot/tagkit/Base64;,codes)#40
soot.tagkit.Base64.<clinit>()V#LocalLoad(I,0)#41
soot.tagkit.Base64.<clinit>()V#Constant(I,26)#42
soot.tagkit.Base64.<clinit>()V#LocalLoad(I,0)#43
soot.tagkit.Base64.<clinit>()V#BinaryOp(I,add)#44
soot.tagkit.Base64.<clinit>()V#Constant(I,97)#45
soot.tagkit.Base64.<clinit>()V#BinaryOp(I,sub)#46
soot.tagkit.Base64.<clinit>()V#Conversion(I,B)#47
soot.tagkit.Base64.<clinit>()V#ArrayStore(B)#48
soot.tagkit.Base64.<clinit>()V#LocalLoad(I,0)#49
soot.tagkit.Base64.<clinit>()V#Constant(I,1)#50
soot.tagkit.Base64.<clinit>()V#BinaryOp(I,add)#51
soot.tagkit.Base64.<clinit>()V#LocalStore(I,0)#52
soot.tagkit.Base64.<clinit>()V#Constant(I,48)#56
soot.tagkit.Base64.<clinit>()V#LocalStore(I,0)#57
soot.tagkit.Base64.<clinit>()V#Goto(72)#58
soot.tagkit.Base64.<clinit>()V#LocalLoad(I,0)#72
soot.tagkit.Base64.<clinit>()V#Constant(I,57)#73
soot.tagkit.Base64.<clinit>()V#ConditionalBranch(I,le,59)#74
soot.tagkit.Base64.<clinit>()V#Get([B,STATIC,Lsoot/tagkit/Base64;,codes)#59
soot.tagkit.Base64.<clinit>()V#LocalLoad(I,0)#60
soot.tagkit.Base64.<clinit>()V#Constant(I,52)#61
soot.tagkit.Base64.<clinit>()V#LocalLoad(I,0)#62
soot.tagkit.Base64.<clinit>()V#BinaryOp(I,add)#63
soot.tagkit.Base64.<clinit>()V#Constant(I,48)#64
soot.tagkit.Base64.<clinit>()V#BinaryOp(I,sub)#65
soot.tagkit.Base64.<clinit>()V#Conversion(I,B)#66
soot.tagkit.Base64.<clinit>()V#ArrayStore(B)#67
soot.tagkit.Base64.<clinit>()V#LocalLoad(I,0)#68
soot.tagkit.Base64.<clinit>()V#Constant(I,1)#69
soot.tagkit.Base64.<clinit>()V#BinaryOp(I,add)#70
soot.tagkit.Base64.<clinit>()V#LocalStore(I,0)#71
soot.tagkit.Base64.<clinit>()V#Get([B,STATIC,Lsoot/tagkit/Base64;,codes)#75
soot.tagkit.Base64.<clinit>()V#Constant(I,43)#76
soot.tagkit.Base64.<clinit>()V#Constant(I,62)#77
soot.tagkit.Base64.<clinit>()V#ArrayStore(B)#78
soot.tagkit.Base64.<clinit>()V#Get([B,STATIC,Lsoot/tagkit/Base64;,codes)#79
soot.tagkit.Base64.<clinit>()V#Constant(I,47)#80
soot.tagkit.Base64.<clinit>()V#Constant(I,63)#81
soot.tagkit.Base64.<clinit>()V#ArrayStore(B)#82
soot.tagkit.Base64.<clinit>()V#Return(V)#83
soot.tagkit.Base64.encode([B)[C#LocalLoad(Ljava/lang/Object;,0)#0
soot.tagkit.Base64.encode([B)[C#ArrayLength()#1
soot.tagkit.Base64.encode([B)[C#Constant(I,2)#2
soot.tagkit.Base64.encode([B)[C#BinaryOp(I,add)#3
soot.tagkit.Base64.encode([B)[C#Constant(I,3)#4
soot.tagkit.Base64.encode([B)[C#BinaryOp(I,div)#5
soot.tagkit.Base64.encode([B)[C#Constant(I,4)#6
soot.tagkit.Base64.encode([B)[C#BinaryOp(I,mul)#7
soot.tagkit.Base64.encode([B)[C#New([C,1)#8
soot.tagkit.Base64.encode([B)[C#LocalStore(Ljava/lang/Object;,1)#9
soot.tagkit.Base64.encode([B)[C#Constant(I,0)#10
soot.tagkit.Base64.encode([B)[C#LocalStore(I,2)#11
soot.tagkit.Base64.encode([B)[C#Constant(I,0)#12
soot.tagkit.Base64.encode([B)[C#LocalStore(I,3)#13
soot.tagkit.Base64.encode([B)[C#Goto(139)#14
soot.tagkit.Base64.encode([B)[C#LocalLoad(I,2)#139
soot.tagkit.Base64.encode([B)[C#LocalLoad(Ljava/lang/Object;,0)#140
soot.tagkit.Base64.encode([B)[C#ArrayLength()#141
soot.tagkit.Base64.encode([B)[C#ConditionalBranch(I,lt,15)#142
soot.tagkit.Base64.encode([B)[C#Constant(I,0)#15
soot.tagkit.Base64.encode([B)[C#LocalStore(I,4)#16
soot.tagkit.Base64.encode([B)[C#Constant(I,0)#17
soot.tagkit.Base64.encode([B)[C#LocalStore(I,5)#18
soot.tagkit.Base64.encode([B)[C#Constant(I,255)#19
soot.tagkit.Base64.encode([B)[C#LocalLoad(Ljava/lang/Object;,0)#20
soot.tagkit.Base64.encode([B)[C#LocalLoad(I,2)#21
soot.tagkit.Base64.encode([B)[C#ArrayLoad(B)#22
soot.tagkit.Base64.encode([B)[C#BinaryOp(I,and)#23
soot.tagkit.Base64.encode([B)[C#LocalStore(I,6)#24
soot.tagkit.Base64.encode([B)[C#LocalLoad(I,6)#25
soot.tagkit.Base64.encode([B)[C#Constant(I,8)#26
soot.tagkit.Base64.encode([B)[C#Shift(I,SHL)#27
soot.tagkit.Base64.encode([B)[C#LocalStore(I,6)#28
soot.tagkit.Base64.encode([B)[C#LocalLoad(I,2)#29
soot.tagkit.Base64.encode([B)[C#Constant(I,1)#30
soot.tagkit.Base64.encode([B)[C#BinaryOp(I,add)#31
soot.tagkit.Base64.encode([B)[C#LocalLoad(Ljava/lang/Object;,0)#32
soot.tagkit.Base64.encode([B)[C#ArrayLength()#33
soot.tagkit.Base64.encode([B)[C#ConditionalBranch(I,ge,47)#34
soot.tagkit.Base64.encode([B)[C#LocalLoad(I,6)#35
soot.tagkit.Base64.encode([B)[C#Constant(I,255)#36
soot.tagkit.Base64.encode([B)[C#LocalLoad(Ljava/lang/Object;,0)#37
soot.tagkit.Base64.encode([B)[C#LocalLoad(I,2)#38
soot.tagkit.Base64.encode([B)[C#Constant(I,1)#39
soot.tagkit.Base64.encode([B)[C#BinaryOp(I,add)#40
soot.tagkit.Base64.encode([B)[C#ArrayLoad(B)#41
soot.tagkit.Base64.encode([B)[C#BinaryOp(I,and)#42
soot.tagkit.Base64.encode([B)[C#BinaryOp(I,or)#43
soot.tagkit.Base64.encode([B)[C#LocalStore(I,6)#44
soot.tagkit.Base64.encode([B)[C#Constant(I,1)#45
soot.tagkit.Base64.encode([B)[C#LocalStore(I,5)#46
soot.tagkit.Base64.encode([B)[C#LocalLoad(I,6)#47
soot.tagkit.Base64.encode([B)[C#Constant(I,8)#48
soot.tagkit.Base64.encode([B)[C#Shift(I,SHL)#49
soot.tagkit.Base64.encode([B)[C#LocalStore(I,6)#50
soot.tagkit.Base64.encode([B)[C#LocalLoad(I,2)#51
soot.tagkit.Base64.encode([B)[C#Constant(I,2)#52
soot.tagkit.Base64.encode([B)[C#BinaryOp(I,add)#53
soot.tagkit.Base64.encode([B)[C#LocalLoad(Ljava/lang/Object;,0)#54
soot.tagkit.Base64.encode([B)[C#ArrayLength()#55
soot.tagkit.Base64.encode([B)[C#ConditionalBranch(I,ge,69)#56
soot.tagkit.Base64.encode([B)[C#LocalLoad(Ljava/lang/Object;,1)#69
soot.tagkit.Base64.encode([B)[C#LocalLoad(I,3)#70
soot.tagkit.Base64.encode([B)[C#Constant(I,3)#71
soot.tagkit.Base64.encode([B)[C#BinaryOp(I,add)#72
soot.tagkit.Base64.encode([B)[C#Get([C,STATIC,Lsoot/tagkit/Base64;,alphabet)#73
soot.tagkit.Base64.encode([B)[C#LocalLoad(I,4)#74
soot.tagkit.Base64.encode([B)[C#Constant(I,0)#75
soot.tagkit.Base64.encode([B)[C#ConditionalBranch(I,eq,81)#76
soot.tagkit.Base64.encode([B)[C#Constant(I,64)#81
soot.tagkit.Base64.encode([B)[C#ArrayLoad(C)#82
soot.tagkit.Base64.encode([B)[C#ArrayStore(C)#83
soot.tagkit.Base64.encode([B)[C#LocalLoad(I,6)#84
soot.tagkit.Base64.encode([B)[C#Constant(I,6)#85
soot.tagkit.Base64.encode([B)[C#Shift(I,SHR)#86
soot.tagkit.Base64.encode([B)[C#LocalStore(I,6)#87
soot.tagkit.Base64.encode([B)[C#LocalLoad(Ljava/lang/Object;,1)#88
soot.tagkit.Base64.encode([B)[C#LocalLoad(I,3)#89
soot.tagkit.Base64.encode([B)[C#Constant(I,2)#90
soot.tagkit.Base64.encode([B)[C#BinaryOp(I,add)#91
soot.tagkit.Base64.encode([B)[C#Get([C,STATIC,Lsoot/tagkit/Base64;,alphabet)#92
soot.tagkit.Base64.encode([B)[C#LocalLoad(I,5)#93
soot.tagkit.Base64.encode([B)[C#Constant(I,0)#94
soot.tagkit.Base64.encode([B)[C#ConditionalBranch(I,eq,100)#95
soot.tagkit.Base64.encode([B)[C#LocalLoad(I,6)#96
soot.tagkit.Base64.encode([B)[C#Constant(I,63)#97
soot.tagkit.Base64.encode([B)[C#BinaryOp(I,and)#98
soot.tagkit.Base64.encode([B)[C#Goto(101)#99
soot.tagkit.Base64.encode([B)[C#ArrayLoad(C)#101
soot.tagkit.Base64.encode([B)[C#ArrayStore(C)#102
soot.tagkit.Base64.encode([B)[C#LocalLoad(I,6)#103
soot.tagkit.Base64.encode([B)[C#Constant(I,6)#104
soot.tagkit.Base64.encode([B)[C#Shift(I,SHR)#105
soot.tagkit.Base64.encode([B)[C#LocalStore(I,6)#106
soot.tagkit.Base64.encode([B)[C#LocalLoad(Ljava/lang/Object;,1)#107
soot.tagkit.Base64.encode([B)[C#LocalLoad(I,3)#108
soot.tagkit.Base64.encode([B)[C#Constant(I,1)#109
soot.tagkit.Base64.encode([B)[C#BinaryOp(I,add)#110
soot.tagkit.Base64.encode([B)[C#Get([C,STATIC,Lsoot/tagkit/Base64;,alphabet)#111
soot.tagkit.Base64.encode([B)[C#LocalLoad(I,6)#112
soot.tagkit.Base64.encode([B)[C#Constant(I,63)#113
soot.tagkit.Base64.encode([B)[C#BinaryOp(I,and)#114
soot.tagkit.Base64.encode([B)[C#ArrayLoad(C)#115
soot.tagkit.Base64.encode([B)[C#ArrayStore(C)#116
soot.tagkit.Base64.encode([B)[C#LocalLoad(I,6)#117
soot.tagkit.Base64.encode([B)[C#Constant(I,6)#118
soot.tagkit.Base64.encode([B)[C#Shift(I,SHR)#119
soot.tagkit.Base64.encode([B)[C#LocalStore(I,6)#120
soot.tagkit.Base64.encode([B)[C#LocalLoad(Ljava/lang/Object;,1)#121
soot.tagkit.Base64.encode([B)[C#LocalLoad(I,3)#122
soot.tagkit.Base64.encode([B)[C#Constant(I,0)#123
soot.tagkit.Base64.encode([B)[C#BinaryOp(I,add)#124
soot.tagkit.Base64.encode([B)[C#Get([C,STATIC,Lsoot/tagkit/Base64;,alphabet)#125
soot.tagkit.Base64.encode([B)[C#LocalLoad(I,6)#126
soot.tagkit.Base64.encode([B)[C#Constant(I,63)#127
soot.tagkit.Base64.encode([B)[C#BinaryOp(I,and)#128
soot.tagkit.Base64.encode([B)[C#ArrayLoad(C)#129
soot.tagkit.Base64.encode([B)[C#ArrayStore(C)#130
soot.tagkit.Base64.encode([B)[C#LocalLoad(I,2)#131
soot.tagkit.Base64.encode([B)[C#Constant(I,3)#132
soot.tagkit.Base64.encode([B)[C#BinaryOp(I,add)#133
soot.tagkit.Base64.encode([B)[C#LocalStore(I,2)#134
soot.tagkit.Base64.encode([B)[C#LocalLoad(I,3)#135
soot.tagkit.Base64.encode([B)[C#Constant(I,4)#136
soot.tagkit.Base64.encode([B)[C#BinaryOp(I,add)#137
soot.tagkit.Base64.encode([B)[C#LocalStore(I,3)#138
soot.tagkit.Base64.encode([B)[C#LocalLoad(Ljava/lang/Object;,1)#143
soot.tagkit.Base64.encode([B)[C#Return(Ljava/lang/Object;)#144
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/String;,<init>,([C)V)#48
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#49
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#50
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(Ljava/lang/String;)Ljava/lang/StringBuffer;)#51
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#Pop(1)#52
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#57
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,toString,()Ljava/lang/String;)#58
soot.tagkit.CodeAttribute.getJasminValue(Ljava/util/Map;)Ljava/lang/String;#Return(Ljava/lang/Object;)#59
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#580
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(Ljava/lang/String;,"\"")#581
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#582
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#583
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/baf/JasminClass;,emit,(Ljava/lang/String;)V)#584
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Return(V)#589
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,0)#191
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Constant(Ljava/lang/String;,".end method")#192
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/AbstractJasminClass;,emit,(Ljava/lang/String;)V)#193
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,1)#194
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,getTags,()Ljava/util/List;)#195
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#196
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,4)#197
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Goto(228)#198
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,4)#228
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#229
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Constant(I,0)#230
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#ConditionalBranch(I,ne,199)#231
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,4)#199
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#200
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#CheckCast(Lsoot/tagkit/Tag;)#201
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#LocalStore(Ljava/lang/Object;,5)#202
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,5)#203
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Instanceof(Lsoot/tagkit/Attribute;)#204
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Constant(I,0)#205
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#ConditionalBranch(I,eq,228)#206
soot.AbstractJasminClass.emitMethod(Lsoot/SootMethod;)V#Return(V)#232
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#737
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(Ljava/lang/String;,"")#738
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/AbstractJasminClass;,emit,(Ljava/lang/String;)V)#739
soot.Modifier.toString(I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#42
soot.Modifier.toString(I)Ljava/lang/String;#Constant(Ljava/lang/String;,"static ")#43
soot.Modifier.toString(I)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(Ljava/lang/String;)Ljava/lang/StringBuffer;)#44
soot.Modifier.toString(I)Ljava/lang/String;#Pop(1)#45
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#13
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#14
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#CheckCast(Lsoot/Type;)#15
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,3)#16
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#17
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#18
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#Invoke(STATIC,Lsoot/AbstractJasminClass;,jasminDescriptorOf,(Lsoot/Type;)Ljava/lang/String;)#19
soot.ArrayType.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.ArrayType.apply(Lsoot/util/Switch;)V#CheckCast(Lsoot/TypeSwitch;)#1
soot.ArrayType.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.ArrayType.apply(Lsoot/util/Switch;)V#Invoke(VIRTUAL,Lsoot/TypeSwitch;,caseArrayType,(Lsoot/ArrayType;)V)#3
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#New(Ljava/lang/StringBuffer;,0)#0
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#Dup(1,0)#1
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#Invoke(SPECIAL,Ljava/lang/StringBuffer;,<init>,()V)#2
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#LocalStore(Ljava/lang/Object;,2)#3
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#Constant(I,0)#4
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#LocalStore(I,3)#5
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#Goto(15)#6
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#LocalLoad(I,3)#15
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#LocalLoad(Ljava/lang/Object;,1)#16
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#Get(I,NONSTATIC,Lsoot/ArrayType;,numDimensions)#17
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#ConditionalBranch(I,lt,7)#18
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#LocalLoad(Ljava/lang/Object;,2)#7
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#Constant(Ljava/lang/String;,"[")#8
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(Ljava/lang/String;)Ljava/lang/StringBuffer;)#9
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#Pop(1)#10
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#LocalLoad(I,3)#11
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#Constant(I,1)#12
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#BinaryOp(I,add)#13
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#LocalStore(I,3)#14
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#LocalLoad(Ljava/lang/Object;,0)#19
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#New(Ljava/lang/StringBuilder;,0)#20
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#Dup(1,0)#21
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#LocalLoad(Ljava/lang/Object;,2)#22
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,toString,()Ljava/lang/String;)#23
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#24
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#25
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#LocalLoad(Ljava/lang/Object;,1)#26
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#Get(Lsoot/Type;,NONSTATIC,Lsoot/ArrayType;,baseType)#27
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#Invoke(STATIC,Lsoot/AbstractJasminClass;,jasminDescriptorOf,(Lsoot/Type;)Ljava/lang/String;)#28
soot.AbstractJasminClass$1.caseRefType(Lsoot/RefType;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.AbstractJasminClass$1.caseRefType(Lsoot/RefType;)V#New(Ljava/lang/StringBuilder;,0)#1
soot.AbstractJasminClass$1.caseRefType(Lsoot/RefType;)V#Dup(1,0)#2
soot.AbstractJasminClass$1.caseRefType(Lsoot/RefType;)V#Constant(Ljava/lang/String;,"L")#3
soot.AbstractJasminClass$1.caseRefType(Lsoot/RefType;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#4
soot.AbstractJasminClass$1.caseRefType(Lsoot/RefType;)V#LocalLoad(Ljava/lang/Object;,1)#5
soot.AbstractJasminClass$1.caseRefType(Lsoot/RefType;)V#Invoke(VIRTUAL,Lsoot/RefType;,getClassName,()Ljava/lang/String;)#6
soot.AbstractJasminClass$1.caseRefType(Lsoot/RefType;)V#Constant(I,46)#7
soot.AbstractJasminClass$1.caseRefType(Lsoot/RefType;)V#Constant(I,47)#8
soot.AbstractJasminClass$1.caseRefType(Lsoot/RefType;)V#Invoke(VIRTUAL,Ljava/lang/String;,replace,(CC)Ljava/lang/String;)#9
soot.AbstractJasminClass$1.caseRefType(Lsoot/RefType;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#10
soot.AbstractJasminClass$1.caseRefType(Lsoot/RefType;)V#Constant(Ljava/lang/String;,";")#11
soot.AbstractJasminClass$1.caseRefType(Lsoot/RefType;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#12
soot.AbstractJasminClass$1.caseRefType(Lsoot/RefType;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#13
soot.AbstractJasminClass$1.caseRefType(Lsoot/RefType;)V#Invoke(VIRTUAL,Lsoot/AbstractJasminClass$1;,setResult,(Ljava/lang/Object;)V)#14
soot.AbstractJasminClass$1.caseRefType(Lsoot/RefType;)V#Return(V)#15
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#29
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#30
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#Invoke(VIRTUAL,Lsoot/AbstractJasminClass$1;,setResult,(Ljava/lang/Object;)V)#31
soot.AbstractJasminClass$1.caseArrayType(Lsoot/ArrayType;)V#Return(V)#32
soot.ArrayType.apply(Lsoot/util/Switch;)V#Return(V)#4
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(Ljava/lang/String;)Ljava/lang/StringBuffer;)#20
soot.AbstractJasminClass.jasminDescriptorOf(Lsoot/SootMethodRef;)Ljava/lang/String;#Pop(1)#21
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,8)#225
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(I,13)#226
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(I,7)#227
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ArrayStore(I)#228
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(I,7)#229
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,12)#230
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(I,13)#231
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#232
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#CheckCast(Lsoot/Type;)#233
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(STATIC,Lsoot/baf/JasminClass;,sizeOfType,(Lsoot/Type;)I)#234
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#BinaryOp(I,add)#235
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(I,7)#236
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(I,13)#237
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,1)#238
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#BinaryOp(I,add)#239
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(I,13)#240
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,15)#291
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Instanceof(Lsoot/jimple/ParameterRef;)#292
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Constant(I,0)#293
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ConditionalBranch(I,eq,314)#294
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,8)#295
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalLoad(Ljava/lang/Object;,15)#296
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#CheckCast(Lsoot/jimple/ParameterRef;)#297
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#Invoke(VIRTUAL,Lsoot/jimple/ParameterRef;,getIndex,()I)#298
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#ArrayLoad(I)#299
soot.baf.JasminClass.emitMethodBody(Lsoot/SootMethod;)V#LocalStore(I,16)#300
soot.baf.internal.BNewInst.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.baf.internal.BNewInst.apply(Lsoot/util/Switch;)V#CheckCast(Lsoot/baf/InstSwitch;)#1
soot.baf.internal.BNewInst.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.baf.internal.BNewInst.apply(Lsoot/util/Switch;)V#Invoke(INTERFACE,Lsoot/baf/InstSwitch;,caseNewInst,(Lsoot/baf/NewInst;)V)#3
soot.baf.JasminClass$1.caseNewInst(Lsoot/baf/NewInst;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.JasminClass$1.caseNewInst(Lsoot/baf/NewInst;)V#Get(Lsoot/baf/JasminClass;,NONSTATIC,Lsoot/baf/JasminClass$1;,this$0)#1
soot.baf.JasminClass$1.caseNewInst(Lsoot/baf/NewInst;)V#New(Ljava/lang/StringBuilder;,0)#2
soot.baf.JasminClass$1.caseNewInst(Lsoot/baf/NewInst;)V#Dup(1,0)#3
soot.baf.JasminClass$1.caseNewInst(Lsoot/baf/NewInst;)V#Constant(Ljava/lang/String;,"new ")#4
soot.baf.JasminClass$1.caseNewInst(Lsoot/baf/NewInst;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#5
soot.baf.JasminClass$1.caseNewInst(Lsoot/baf/NewInst;)V#LocalLoad(Ljava/lang/Object;,1)#6
soot.baf.JasminClass$1.caseNewInst(Lsoot/baf/NewInst;)V#Invoke(INTERFACE,Lsoot/baf/NewInst;,getBaseType,()Lsoot/RefType;)#7
soot.baf.internal.AbstractRefTypeInst.getBaseType()Lsoot/RefType;#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.AbstractRefTypeInst.getBaseType()Lsoot/RefType;#Get(Lsoot/Type;,NONSTATIC,Lsoot/baf/internal/AbstractRefTypeInst;,opType)#1
soot.baf.internal.AbstractRefTypeInst.getBaseType()Lsoot/RefType;#CheckCast(Lsoot/RefType;)#2
soot.baf.internal.AbstractRefTypeInst.getBaseType()Lsoot/RefType;#Return(Ljava/lang/Object;)#3
soot.baf.JasminClass$1.caseNewInst(Lsoot/baf/NewInst;)V#Invoke(VIRTUAL,Lsoot/RefType;,toString,()Ljava/lang/String;)#8
soot.baf.JasminClass$1.caseNewInst(Lsoot/baf/NewInst;)V#Invoke(STATIC,Lsoot/baf/JasminClass;,slashify,(Ljava/lang/String;)Ljava/lang/String;)#9
soot.baf.JasminClass$1.caseNewInst(Lsoot/baf/NewInst;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#10
soot.baf.JasminClass$1.caseNewInst(Lsoot/baf/NewInst;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#11
soot.baf.JasminClass$1.caseNewInst(Lsoot/baf/NewInst;)V#Invoke(STATIC,Lsoot/baf/JasminClass;,access$0,(Lsoot/baf/JasminClass;Ljava/lang/String;)V)#12
soot.baf.JasminClass$1.caseNewInst(Lsoot/baf/NewInst;)V#Return(V)#13
soot.baf.internal.BNewInst.apply(Lsoot/util/Switch;)V#Return(V)#4
soot.baf.internal.BDup1Inst.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.baf.internal.BDup1Inst.apply(Lsoot/util/Switch;)V#CheckCast(Lsoot/baf/InstSwitch;)#1
soot.baf.internal.BDup1Inst.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.baf.internal.BDup1Inst.apply(Lsoot/util/Switch;)V#Invoke(INTERFACE,Lsoot/baf/InstSwitch;,caseDup1Inst,(Lsoot/baf/Dup1Inst;)V)#3
soot.baf.JasminClass$1.caseDup1Inst(Lsoot/baf/Dup1Inst;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.baf.JasminClass$1.caseDup1Inst(Lsoot/baf/Dup1Inst;)V#Invoke(INTERFACE,Lsoot/baf/Dup1Inst;,getOp1Type,()Lsoot/Type;)#1
soot.baf.internal.BDup1Inst.getOp1Type()Lsoot/Type;#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BDup1Inst.getOp1Type()Lsoot/Type;#Get(Lsoot/Type;,NONSTATIC,Lsoot/baf/internal/BDup1Inst;,mOpType)#1
soot.baf.internal.BDup1Inst.getOp1Type()Lsoot/Type;#Return(Ljava/lang/Object;)#2
soot.baf.JasminClass$1.caseDup1Inst(Lsoot/baf/Dup1Inst;)V#LocalStore(Ljava/lang/Object;,2)#2
soot.baf.JasminClass$1.caseDup1Inst(Lsoot/baf/Dup1Inst;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.baf.JasminClass$1.caseDup1Inst(Lsoot/baf/Dup1Inst;)V#LocalLoad(Ljava/lang/Object;,2)#4
soot.baf.JasminClass$1.caseDup1Inst(Lsoot/baf/Dup1Inst;)V#Invoke(SPECIAL,Lsoot/baf/JasminClass$1;,isDwordType,(Lsoot/Type;)Z)#5
soot.baf.JasminClass$1.isDwordType(Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,1)#0
soot.baf.JasminClass$1.isDwordType(Lsoot/Type;)Z#Instanceof(Lsoot/LongType;)#1
soot.baf.JasminClass$1.isDwordType(Lsoot/Type;)Z#Constant(I,0)#2
soot.baf.JasminClass$1.isDwordType(Lsoot/Type;)Z#ConditionalBranch(I,ne,14)#3
soot.baf.JasminClass$1.isDwordType(Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,1)#4
soot.baf.JasminClass$1.isDwordType(Lsoot/Type;)Z#Instanceof(Lsoot/DoubleType;)#5
soot.baf.JasminClass$1.isDwordType(Lsoot/Type;)Z#Constant(I,0)#6
soot.baf.JasminClass$1.isDwordType(Lsoot/Type;)Z#ConditionalBranch(I,ne,14)#7
soot.baf.JasminClass$1.isDwordType(Lsoot/Type;)Z#LocalLoad(Ljava/lang/Object;,1)#8
soot.baf.JasminClass$1.isDwordType(Lsoot/Type;)Z#Instanceof(Lsoot/baf/DoubleWordType;)#9
soot.baf.JasminClass$1.isDwordType(Lsoot/Type;)Z#Constant(I,0)#10
soot.baf.JasminClass$1.isDwordType(Lsoot/Type;)Z#ConditionalBranch(I,ne,14)#11
soot.baf.JasminClass$1.isDwordType(Lsoot/Type;)Z#Constant(I,0)#12
soot.baf.JasminClass$1.isDwordType(Lsoot/Type;)Z#Return(I)#13
soot.baf.JasminClass$1.caseDup1Inst(Lsoot/baf/Dup1Inst;)V#Constant(I,0)#6
soot.baf.JasminClass$1.caseDup1Inst(Lsoot/baf/Dup1Inst;)V#ConditionalBranch(I,eq,13)#7
soot.baf.JasminClass$1.caseDup1Inst(Lsoot/baf/Dup1Inst;)V#LocalLoad(Ljava/lang/Object;,0)#13
soot.baf.JasminClass$1.caseDup1Inst(Lsoot/baf/Dup1Inst;)V#Get(Lsoot/baf/JasminClass;,NONSTATIC,Lsoot/baf/JasminClass$1;,this$0)#14
soot.baf.JasminClass$1.caseDup1Inst(Lsoot/baf/Dup1Inst;)V#Constant(Ljava/lang/String;,"dup")#15
soot.baf.JasminClass$1.caseDup1Inst(Lsoot/baf/Dup1Inst;)V#Invoke(STATIC,Lsoot/baf/JasminClass;,access$0,(Lsoot/baf/JasminClass;Ljava/lang/String;)V)#16
soot.baf.JasminClass$1.caseDup1Inst(Lsoot/baf/Dup1Inst;)V#Return(V)#17
soot.baf.internal.BDup1Inst.apply(Lsoot/util/Switch;)V#Return(V)#4
soot.baf.internal.BPushInst.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.baf.internal.BPushInst.apply(Lsoot/util/Switch;)V#CheckCast(Lsoot/baf/InstSwitch;)#1
soot.baf.internal.BPushInst.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.baf.internal.BPushInst.apply(Lsoot/util/Switch;)V#Invoke(INTERFACE,Lsoot/baf/InstSwitch;,casePushInst,(Lsoot/baf/PushInst;)V)#3
soot.baf.JasminClass$1.casePushInst(Lsoot/baf/PushInst;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.baf.JasminClass$1.casePushInst(Lsoot/baf/PushInst;)V#Invoke(INTERFACE,Lsoot/baf/PushInst;,getConstant,()Lsoot/jimple/Constant;)#1
soot.baf.internal.BPushInst.getConstant()Lsoot/jimple/Constant;#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BPushInst.getConstant()Lsoot/jimple/Constant;#Get(Lsoot/jimple/Constant;,NONSTATIC,Lsoot/baf/internal/BPushInst;,constant)#1
soot.baf.internal.BPushInst.getConstant()Lsoot/jimple/Constant;#Return(Ljava/lang/Object;)#2
soot.baf.JasminClass$1.casePushInst(Lsoot/baf/PushInst;)V#Instanceof(Lsoot/jimple/IntConstant;)#2
soot.baf.JasminClass$1.casePushInst(Lsoot/baf/PushInst;)V#Constant(I,0)#3
soot.baf.JasminClass$1.casePushInst(Lsoot/baf/PushInst;)V#ConditionalBranch(I,eq,90)#4
soot.baf.JasminClass$1.casePushInst(Lsoot/baf/PushInst;)V#LocalLoad(Ljava/lang/Object;,1)#90
soot.baf.JasminClass$1.casePushInst(Lsoot/baf/PushInst;)V#Invoke(INTERFACE,Lsoot/baf/PushInst;,getConstant,()Lsoot/jimple/Constant;)#91
soot.baf.JasminClass$1.casePushInst(Lsoot/baf/PushInst;)V#Instanceof(Lsoot/jimple/StringConstant;)#92
soot.baf.JasminClass$1.casePushInst(Lsoot/baf/PushInst;)V#Constant(I,0)#93
soot.baf.JasminClass$1.casePushInst(Lsoot/baf/PushInst;)V#ConditionalBranch(I,eq,108)#94
soot.baf.JasminClass$1.casePushInst(Lsoot/baf/PushInst;)V#LocalLoad(Ljava/lang/Object;,0)#95
soot.baf.JasminClass$1.casePushInst(Lsoot/baf/PushInst;)V#Get(Lsoot/baf/JasminClass;,NONSTATIC,Lsoot/baf/JasminClass$1;,this$0)#96
soot.baf.JasminClass$1.casePushInst(Lsoot/baf/PushInst;)V#New(Ljava/lang/StringBuilder;,0)#97
soot.baf.JasminClass$1.casePushInst(Lsoot/baf/PushInst;)V#Dup(1,0)#98
soot.baf.JasminClass$1.casePushInst(Lsoot/baf/PushInst;)V#Constant(Ljava/lang/String;,"ldc ")#99
soot.baf.JasminClass$1.casePushInst(Lsoot/baf/PushInst;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#100
soot.baf.JasminClass$1.casePushInst(Lsoot/baf/PushInst;)V#LocalLoad(Ljava/lang/Object;,1)#101
soot.baf.JasminClass$1.casePushInst(Lsoot/baf/PushInst;)V#Invoke(INTERFACE,Lsoot/baf/PushInst;,getConstant,()Lsoot/jimple/Constant;)#102
soot.baf.JasminClass$1.casePushInst(Lsoot/baf/PushInst;)V#Invoke(VIRTUAL,Ljava/lang/Object;,toString,()Ljava/lang/String;)#103
soot.jimple.StringConstant.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.StringConstant.toString()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsoot/jimple/StringConstant;,value)#1
soot.jimple.StringConstant.toString()Ljava/lang/String;#Invoke(STATIC,Lsoot/util/StringTools;,getQuotedStringOf,(Ljava/lang/String;)Ljava/lang/String;)#2
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#New(Ljava/lang/StringBuffer;,0)#0
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#Dup(1,0)#1
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuffer;,<init>,()V)#2
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,1)#3
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#4
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,toCharArray,()[C)#5
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,2)#6
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#7
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"\"")#8
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(Ljava/lang/String;)Ljava/lang/StringBuffer;)#9
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#Pop(1)#10
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#11
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#Dup(1,0)#12
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,6)#13
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#ArrayLength()#14
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,5)#15
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#16
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,4)#17
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#Goto(99)#18
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,4)#99
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,5)#100
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,lt,19)#101
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,6)#19
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,4)#20
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#ArrayLoad(C)#21
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,3)#22
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,3)#23
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#Constant(I,92)#24
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ne,31)#25
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,3)#31
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#Constant(I,39)#32
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ne,39)#33
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,3)#39
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#Constant(I,34)#40
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ne,47)#41
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,3)#47
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#Constant(I,10)#48
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ne,55)#49
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,3)#55
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#Constant(I,9)#56
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ne,63)#57
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,3)#63
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#Constant(I,13)#64
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ne,71)#65
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,3)#71
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#Constant(I,12)#72
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ne,79)#73
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,3)#79
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#Constant(I,32)#80
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,lt,90)#81
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,3)#82
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#Constant(I,126)#83
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,gt,90)#84
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#85
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,3)#86
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(C)Ljava/lang/StringBuffer;)#87
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#Pop(1)#88
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#Goto(95)#89
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,4)#95
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#Constant(I,1)#96
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#BinaryOp(I,add)#97
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,4)#98
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#102
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"\"")#103
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(Ljava/lang/String;)Ljava/lang/StringBuffer;)#104
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#Pop(1)#105
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#106
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,toString,()Ljava/lang/String;)#107
soot.util.StringTools.getQuotedStringOf(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#108
soot.jimple.StringConstant.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#3
soot.baf.JasminClass$1.casePushInst(Lsoot/baf/PushInst;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#104
soot.baf.JasminClass$1.casePushInst(Lsoot/baf/PushInst;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#105
soot.baf.JasminClass$1.casePushInst(Lsoot/baf/PushInst;)V#Invoke(STATIC,Lsoot/baf/JasminClass;,access$0,(Lsoot/baf/JasminClass;Ljava/lang/String;)V)#106
soot.baf.JasminClass$1.casePushInst(Lsoot/baf/PushInst;)V#Goto(344)#107
soot.baf.JasminClass$1.casePushInst(Lsoot/baf/PushInst;)V#Return(V)#344
soot.baf.internal.BPushInst.apply(Lsoot/util/Switch;)V#Return(V)#4
soot.baf.internal.BInterfaceInvokeInst.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.baf.internal.BInterfaceInvokeInst.apply(Lsoot/util/Switch;)V#CheckCast(Lsoot/baf/InstSwitch;)#1
soot.baf.internal.BInterfaceInvokeInst.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.baf.internal.BInterfaceInvokeInst.apply(Lsoot/util/Switch;)V#Invoke(INTERFACE,Lsoot/baf/InstSwitch;,caseInterfaceInvokeInst,(Lsoot/baf/InterfaceInvokeInst;)V)#3
soot.baf.JasminClass$1.caseInterfaceInvokeInst(Lsoot/baf/InterfaceInvokeInst;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.baf.JasminClass$1.caseInterfaceInvokeInst(Lsoot/baf/InterfaceInvokeInst;)V#Invoke(INTERFACE,Lsoot/baf/InterfaceInvokeInst;,getMethodRef,()Lsoot/SootMethodRef;)#1
soot.baf.internal.BInterfaceInvokeInst.getMethodRef()Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BInterfaceInvokeInst.getMethodRef()Lsoot/SootMethodRef;#Invoke(SPECIAL,Lsoot/baf/internal/AbstractInvokeInst;,getMethodRef,()Lsoot/SootMethodRef;)#1
soot.baf.internal.BInterfaceInvokeInst.getMethodRef()Lsoot/SootMethodRef;#Return(Ljava/lang/Object;)#2
soot.baf.JasminClass$1.caseInterfaceInvokeInst(Lsoot/baf/InterfaceInvokeInst;)V#LocalStore(Ljava/lang/Object;,2)#2
soot.baf.JasminClass$1.caseInterfaceInvokeInst(Lsoot/baf/InterfaceInvokeInst;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.baf.JasminClass$1.caseInterfaceInvokeInst(Lsoot/baf/InterfaceInvokeInst;)V#Get(Lsoot/baf/JasminClass;,NONSTATIC,Lsoot/baf/JasminClass$1;,this$0)#4
soot.baf.JasminClass$1.caseInterfaceInvokeInst(Lsoot/baf/InterfaceInvokeInst;)V#New(Ljava/lang/StringBuilder;,0)#5
soot.baf.JasminClass$1.caseInterfaceInvokeInst(Lsoot/baf/InterfaceInvokeInst;)V#Dup(1,0)#6
soot.baf.JasminClass$1.caseInterfaceInvokeInst(Lsoot/baf/InterfaceInvokeInst;)V#Constant(Ljava/lang/String;,"invokeinterface ")#7
soot.baf.JasminClass$1.caseInterfaceInvokeInst(Lsoot/baf/InterfaceInvokeInst;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#8
soot.baf.JasminClass$1.caseInterfaceInvokeInst(Lsoot/baf/InterfaceInvokeInst;)V#LocalLoad(Ljava/lang/Object;,2)#9
soot.baf.JasminClass$1.caseInterfaceInvokeInst(Lsoot/baf/InterfaceInvokeInst;)V#Invoke(INTERFACE,Lsoot/SootMethodRef;,declaringClass,()Lsoot/SootClass;)#10
soot.baf.JasminClass$1.caseInterfaceInvokeInst(Lsoot/baf/InterfaceInvokeInst;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getName,()Ljava/lang/String;)#11
soot.baf.JasminClass$1.caseInterfaceInvokeInst(Lsoot/baf/InterfaceInvokeInst;)V#Invoke(STATIC,Lsoot/baf/JasminClass;,slashify,(Ljava/lang/String;)Ljava/lang/String;)#12
soot.baf.JasminClass$1.caseInterfaceInvokeInst(Lsoot/baf/InterfaceInvokeInst;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#13
soot.baf.JasminClass$1.caseInterfaceInvokeInst(Lsoot/baf/InterfaceInvokeInst;)V#Constant(Ljava/lang/String;,"/")#14
soot.baf.JasminClass$1.caseInterfaceInvokeInst(Lsoot/baf/InterfaceInvokeInst;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#15
soot.baf.JasminClass$1.caseInterfaceInvokeInst(Lsoot/baf/InterfaceInvokeInst;)V#LocalLoad(Ljava/lang/Object;,2)#16
soot.baf.JasminClass$1.caseInterfaceInvokeInst(Lsoot/baf/InterfaceInvokeInst;)V#Invoke(INTERFACE,Lsoot/SootMethodRef;,name,()Ljava/lang/String;)#17
soot.baf.JasminClass$1.caseInterfaceInvokeInst(Lsoot/baf/InterfaceInvokeInst;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#18
soot.baf.JasminClass$1.caseInterfaceInvokeInst(Lsoot/baf/InterfaceInvokeInst;)V#LocalLoad(Ljava/lang/Object;,2)#19
soot.baf.JasminClass$1.caseInterfaceInvokeInst(Lsoot/baf/InterfaceInvokeInst;)V#Invoke(STATIC,Lsoot/baf/JasminClass;,jasminDescriptorOf,(Lsoot/SootMethodRef;)Ljava/lang/String;)#20
soot.baf.JasminClass$1.caseInterfaceInvokeInst(Lsoot/baf/InterfaceInvokeInst;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#21
soot.baf.JasminClass$1.caseInterfaceInvokeInst(Lsoot/baf/InterfaceInvokeInst;)V#Constant(Ljava/lang/String;," ")#22
soot.baf.JasminClass$1.caseInterfaceInvokeInst(Lsoot/baf/InterfaceInvokeInst;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#23
soot.baf.JasminClass$1.caseInterfaceInvokeInst(Lsoot/baf/InterfaceInvokeInst;)V#LocalLoad(Ljava/lang/Object;,2)#24
soot.baf.JasminClass$1.caseInterfaceInvokeInst(Lsoot/baf/InterfaceInvokeInst;)V#Invoke(STATIC,Lsoot/baf/JasminClass;,argCountOf,(Lsoot/SootMethodRef;)I)#25
soot.AbstractJasminClass.argCountOf(Lsoot/SootMethodRef;)I#Constant(I,0)#0
soot.AbstractJasminClass.argCountOf(Lsoot/SootMethodRef;)I#LocalStore(I,1)#1
soot.AbstractJasminClass.argCountOf(Lsoot/SootMethodRef;)I#LocalLoad(Ljava/lang/Object;,0)#2
soot.AbstractJasminClass.argCountOf(Lsoot/SootMethodRef;)I#Invoke(INTERFACE,Lsoot/SootMethodRef;,parameterTypes,()Ljava/util/List;)#3
soot.AbstractJasminClass.argCountOf(Lsoot/SootMethodRef;)I#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#4
soot.AbstractJasminClass.argCountOf(Lsoot/SootMethodRef;)I#LocalStore(Ljava/lang/Object;,2)#5
soot.AbstractJasminClass.argCountOf(Lsoot/SootMethodRef;)I#Goto(16)#6
soot.AbstractJasminClass.argCountOf(Lsoot/SootMethodRef;)I#LocalLoad(Ljava/lang/Object;,2)#16
soot.AbstractJasminClass.argCountOf(Lsoot/SootMethodRef;)I#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#17
soot.AbstractJasminClass.argCountOf(Lsoot/SootMethodRef;)I#Constant(I,0)#18
soot.AbstractJasminClass.argCountOf(Lsoot/SootMethodRef;)I#ConditionalBranch(I,ne,7)#19
soot.AbstractJasminClass.argCountOf(Lsoot/SootMethodRef;)I#LocalLoad(Ljava/lang/Object;,2)#7
soot.AbstractJasminClass.argCountOf(Lsoot/SootMethodRef;)I#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#8
soot.AbstractJasminClass.argCountOf(Lsoot/SootMethodRef;)I#CheckCast(Lsoot/Type;)#9
soot.AbstractJasminClass.argCountOf(Lsoot/SootMethodRef;)I#LocalStore(Ljava/lang/Object;,3)#10
soot.AbstractJasminClass.argCountOf(Lsoot/SootMethodRef;)I#LocalLoad(I,1)#11
soot.AbstractJasminClass.argCountOf(Lsoot/SootMethodRef;)I#LocalLoad(Ljava/lang/Object;,3)#12
soot.AbstractJasminClass.argCountOf(Lsoot/SootMethodRef;)I#Invoke(STATIC,Lsoot/AbstractJasminClass;,sizeOfType,(Lsoot/Type;)I)#13
soot.AbstractJasminClass.argCountOf(Lsoot/SootMethodRef;)I#BinaryOp(I,add)#14
soot.AbstractJasminClass.argCountOf(Lsoot/SootMethodRef;)I#LocalStore(I,1)#15
soot.AbstractJasminClass.argCountOf(Lsoot/SootMethodRef;)I#LocalLoad(I,1)#20
soot.AbstractJasminClass.argCountOf(Lsoot/SootMethodRef;)I#Return(I)#21
soot.baf.JasminClass$1.caseInterfaceInvokeInst(Lsoot/baf/InterfaceInvokeInst;)V#Constant(I,1)#26
soot.baf.JasminClass$1.caseInterfaceInvokeInst(Lsoot/baf/InterfaceInvokeInst;)V#BinaryOp(I,add)#27
soot.baf.JasminClass$1.caseInterfaceInvokeInst(Lsoot/baf/InterfaceInvokeInst;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#28
soot.baf.JasminClass$1.caseInterfaceInvokeInst(Lsoot/baf/InterfaceInvokeInst;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#29
soot.baf.JasminClass$1.caseInterfaceInvokeInst(Lsoot/baf/InterfaceInvokeInst;)V#Invoke(STATIC,Lsoot/baf/JasminClass;,access$0,(Lsoot/baf/JasminClass;Ljava/lang/String;)V)#30
soot.baf.JasminClass$1.caseInterfaceInvokeInst(Lsoot/baf/InterfaceInvokeInst;)V#Return(V)#31
soot.baf.internal.BInterfaceInvokeInst.apply(Lsoot/util/Switch;)V#Return(V)#4
soot.baf.internal.BNewInst.getInMachineCount()I#Constant(I,0)#0
soot.baf.internal.BNewInst.getInMachineCount()I#Return(I)#1
soot.baf.internal.BNewInst.getOutMachineCount()I#Constant(I,1)#0
soot.baf.internal.BNewInst.getOutMachineCount()I#Return(I)#1
soot.baf.internal.BDupInst.getInMachineCount()I#Constant(I,0)#0
soot.baf.internal.BDupInst.getInMachineCount()I#LocalStore(I,1)#1
soot.baf.internal.BDupInst.getInMachineCount()I#LocalLoad(Ljava/lang/Object;,0)#2
soot.baf.internal.BDupInst.getInMachineCount()I#Invoke(VIRTUAL,Lsoot/baf/internal/BDupInst;,getUnderTypes,()Ljava/util/List;)#3
soot.baf.internal.BDup1Inst.getUnderTypes()Ljava/util/List;#New(Ljava/util/ArrayList;,0)#0
soot.baf.internal.BDup1Inst.getUnderTypes()Ljava/util/List;#Dup(1,0)#1
soot.baf.internal.BDup1Inst.getUnderTypes()Ljava/util/List;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#2
soot.baf.internal.BDup1Inst.getUnderTypes()Ljava/util/List;#Return(Ljava/lang/Object;)#3
soot.baf.internal.BDupInst.getInMachineCount()I#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#4
soot.baf.internal.BDupInst.getInMachineCount()I#LocalStore(Ljava/lang/Object;,2)#5
soot.baf.internal.BDupInst.getInMachineCount()I#Goto(14)#6
soot.baf.internal.BDupInst.getInMachineCount()I#LocalLoad(Ljava/lang/Object;,2)#14
soot.baf.internal.BDupInst.getInMachineCount()I#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#15
soot.baf.internal.BDupInst.getInMachineCount()I#Constant(I,0)#16
soot.baf.internal.BDupInst.getInMachineCount()I#ConditionalBranch(I,ne,7)#17
soot.baf.internal.BDupInst.getInMachineCount()I#LocalLoad(Ljava/lang/Object;,0)#18
soot.baf.internal.BDupInst.getInMachineCount()I#Invoke(VIRTUAL,Lsoot/baf/internal/BDupInst;,getOpTypes,()Ljava/util/List;)#19
soot.baf.internal.BDup1Inst.getOpTypes()Ljava/util/List;#New(Ljava/util/ArrayList;,0)#0
soot.baf.internal.BDup1Inst.getOpTypes()Ljava/util/List;#Dup(1,0)#1
soot.baf.internal.BDup1Inst.getOpTypes()Ljava/util/List;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#2
soot.baf.internal.BDup1Inst.getOpTypes()Ljava/util/List;#LocalStore(Ljava/lang/Object;,1)#3
soot.baf.internal.BDup1Inst.getOpTypes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#4
soot.baf.internal.BDup1Inst.getOpTypes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#5
soot.baf.internal.BDup1Inst.getOpTypes()Ljava/util/List;#Get(Lsoot/Type;,NONSTATIC,Lsoot/baf/internal/BDup1Inst;,mOpType)#6
soot.baf.internal.BDup1Inst.getOpTypes()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#7
soot.baf.internal.BDup1Inst.getOpTypes()Ljava/util/List;#Pop(1)#8
soot.baf.internal.BDup1Inst.getOpTypes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#9
soot.baf.internal.BDup1Inst.getOpTypes()Ljava/util/List;#Return(Ljava/lang/Object;)#10
soot.baf.internal.BDupInst.getInMachineCount()I#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#20
soot.baf.internal.BDupInst.getInMachineCount()I#LocalStore(Ljava/lang/Object;,3)#21
soot.baf.internal.BDupInst.getInMachineCount()I#Goto(30)#22
soot.baf.internal.BDupInst.getInMachineCount()I#LocalLoad(Ljava/lang/Object;,3)#30
soot.baf.internal.BDupInst.getInMachineCount()I#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#31
soot.baf.internal.BDupInst.getInMachineCount()I#Constant(I,0)#32
soot.baf.internal.BDupInst.getInMachineCount()I#ConditionalBranch(I,ne,23)#33
soot.baf.internal.BDupInst.getInMachineCount()I#LocalLoad(I,1)#23
soot.baf.internal.BDupInst.getInMachineCount()I#LocalLoad(Ljava/lang/Object;,3)#24
soot.baf.internal.BDupInst.getInMachineCount()I#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#25
soot.baf.internal.BDupInst.getInMachineCount()I#CheckCast(Lsoot/Type;)#26
soot.baf.internal.BDupInst.getInMachineCount()I#Invoke(STATIC,Lsoot/AbstractJasminClass;,sizeOfType,(Lsoot/Type;)I)#27
soot.baf.internal.BDupInst.getInMachineCount()I#BinaryOp(I,add)#28
soot.baf.internal.BDupInst.getInMachineCount()I#LocalStore(I,1)#29
soot.baf.internal.BDupInst.getInMachineCount()I#LocalLoad(I,1)#34
soot.baf.internal.BDupInst.getInMachineCount()I#Return(I)#35
soot.baf.internal.BDupInst.getOutMachineCount()I#Constant(I,0)#0
soot.baf.internal.BDupInst.getOutMachineCount()I#LocalStore(I,1)#1
soot.baf.internal.BDupInst.getOutMachineCount()I#LocalLoad(Ljava/lang/Object;,0)#2
soot.baf.internal.BDupInst.getOutMachineCount()I#Invoke(VIRTUAL,Lsoot/baf/internal/BDupInst;,getUnderTypes,()Ljava/util/List;)#3
soot.baf.internal.BDupInst.getOutMachineCount()I#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#4
soot.baf.internal.BDupInst.getOutMachineCount()I#LocalStore(Ljava/lang/Object;,2)#5
soot.baf.internal.BDupInst.getOutMachineCount()I#Goto(14)#6
soot.baf.internal.BDupInst.getOutMachineCount()I#LocalLoad(Ljava/lang/Object;,2)#14
soot.baf.internal.BDupInst.getOutMachineCount()I#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#15
soot.baf.internal.BDupInst.getOutMachineCount()I#Constant(I,0)#16
soot.baf.internal.BDupInst.getOutMachineCount()I#ConditionalBranch(I,ne,7)#17
soot.baf.internal.BDupInst.getOutMachineCount()I#LocalLoad(Ljava/lang/Object;,0)#18
soot.baf.internal.BDupInst.getOutMachineCount()I#Invoke(VIRTUAL,Lsoot/baf/internal/BDupInst;,getOpTypes,()Ljava/util/List;)#19
soot.baf.internal.BDupInst.getOutMachineCount()I#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#20
soot.baf.internal.BDupInst.getOutMachineCount()I#LocalStore(Ljava/lang/Object;,3)#21
soot.baf.internal.BDupInst.getOutMachineCount()I#Goto(32)#22
soot.baf.internal.BDupInst.getOutMachineCount()I#LocalLoad(Ljava/lang/Object;,3)#32
soot.baf.internal.BDupInst.getOutMachineCount()I#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#33
soot.baf.internal.BDupInst.getOutMachineCount()I#Constant(I,0)#34
soot.baf.internal.BDupInst.getOutMachineCount()I#ConditionalBranch(I,ne,23)#35
soot.baf.internal.BDupInst.getOutMachineCount()I#LocalLoad(I,1)#23
soot.baf.internal.BDupInst.getOutMachineCount()I#Constant(I,2)#24
soot.baf.internal.BDupInst.getOutMachineCount()I#LocalLoad(Ljava/lang/Object;,3)#25
soot.baf.internal.BDupInst.getOutMachineCount()I#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#26
soot.baf.internal.BDupInst.getOutMachineCount()I#CheckCast(Lsoot/Type;)#27
soot.baf.internal.BDupInst.getOutMachineCount()I#Invoke(STATIC,Lsoot/AbstractJasminClass;,sizeOfType,(Lsoot/Type;)I)#28
soot.baf.internal.BDupInst.getOutMachineCount()I#BinaryOp(I,mul)#29
soot.baf.internal.BDupInst.getOutMachineCount()I#BinaryOp(I,add)#30
soot.baf.internal.BDupInst.getOutMachineCount()I#LocalStore(I,1)#31
soot.baf.internal.BDupInst.getOutMachineCount()I#LocalLoad(I,1)#36
soot.baf.internal.BDupInst.getOutMachineCount()I#Return(I)#37
soot.baf.internal.BPushInst.getInMachineCount()I#Constant(I,0)#0
soot.baf.internal.BPushInst.getInMachineCount()I#Return(I)#1
soot.baf.internal.BPushInst.getOutMachineCount()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BPushInst.getOutMachineCount()I#Get(Lsoot/jimple/Constant;,NONSTATIC,Lsoot/baf/internal/BPushInst;,constant)#1
soot.baf.internal.BPushInst.getOutMachineCount()I#Instanceof(Lsoot/jimple/LongConstant;)#2
soot.baf.internal.BPushInst.getOutMachineCount()I#Constant(I,0)#3
soot.baf.internal.BPushInst.getOutMachineCount()I#ConditionalBranch(I,ne,10)#4
soot.baf.internal.BPushInst.getOutMachineCount()I#LocalLoad(Ljava/lang/Object;,0)#5
soot.baf.internal.BPushInst.getOutMachineCount()I#Get(Lsoot/jimple/Constant;,NONSTATIC,Lsoot/baf/internal/BPushInst;,constant)#6
soot.baf.internal.BPushInst.getOutMachineCount()I#Instanceof(Lsoot/jimple/DoubleConstant;)#7
soot.baf.internal.BPushInst.getOutMachineCount()I#Constant(I,0)#8
soot.baf.internal.BPushInst.getOutMachineCount()I#ConditionalBranch(I,eq,12)#9
soot.baf.internal.BPushInst.getOutMachineCount()I#Constant(I,1)#12
soot.baf.internal.BPushInst.getOutMachineCount()I#Return(I)#13
soot.baf.internal.BInterfaceInvokeInst.getInMachineCount()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BInterfaceInvokeInst.getInMachineCount()I#Invoke(SPECIAL,Lsoot/baf/internal/AbstractInvokeInst;,getInMachineCount,()I)#1
soot.baf.internal.AbstractInvokeInst.getInMachineCount()I#LocalLoad(I,1)#8
soot.baf.internal.AbstractInvokeInst.getInMachineCount()I#LocalLoad(Ljava/lang/Object;,2)#9
soot.baf.internal.AbstractInvokeInst.getInMachineCount()I#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#10
soot.baf.internal.AbstractInvokeInst.getInMachineCount()I#CheckCast(Lsoot/Type;)#11
soot.baf.internal.AbstractInvokeInst.getInMachineCount()I#Invoke(STATIC,Lsoot/AbstractJasminClass;,sizeOfType,(Lsoot/Type;)I)#12
soot.baf.internal.AbstractInvokeInst.getInMachineCount()I#BinaryOp(I,add)#13
soot.baf.internal.AbstractInvokeInst.getInMachineCount()I#LocalStore(I,1)#14
soot.baf.internal.BInterfaceInvokeInst.getInMachineCount()I#Constant(I,1)#2
soot.baf.internal.BInterfaceInvokeInst.getInMachineCount()I#BinaryOp(I,add)#3
soot.baf.internal.BInterfaceInvokeInst.getInMachineCount()I#Return(I)#4
soot.baf.internal.BInterfaceInvokeInst.getOutMachineCount()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BInterfaceInvokeInst.getOutMachineCount()I#Invoke(SPECIAL,Lsoot/baf/internal/AbstractInvokeInst;,getOutMachineCount,()I)#1
soot.baf.internal.BInterfaceInvokeInst.getOutMachineCount()I#Return(I)#2
soot.baf.internal.BNewInst.getInCount()I#Constant(I,0)#0
soot.baf.internal.BNewInst.getInCount()I#Return(I)#1
soot.baf.internal.BNewInst.getOutCount()I#Constant(I,1)#0
soot.baf.internal.BNewInst.getOutCount()I#Return(I)#1
soot.baf.internal.BDupInst.getInCount()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BDupInst.getInCount()I#Invoke(VIRTUAL,Lsoot/baf/internal/BDupInst;,getUnderTypes,()Ljava/util/List;)#1
soot.baf.internal.BDupInst.getInCount()I#Invoke(INTERFACE,Ljava/util/List;,size,()I)#2
soot.baf.internal.BDupInst.getInCount()I#LocalLoad(Ljava/lang/Object;,0)#3
soot.baf.internal.BDupInst.getInCount()I#Invoke(VIRTUAL,Lsoot/baf/internal/BDupInst;,getOpTypes,()Ljava/util/List;)#4
soot.baf.internal.BDupInst.getInCount()I#Invoke(INTERFACE,Ljava/util/List;,size,()I)#5
soot.baf.internal.BDupInst.getInCount()I#BinaryOp(I,add)#6
soot.baf.internal.BDupInst.getInCount()I#Return(I)#7
soot.baf.internal.BDupInst.getOutCount()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BDupInst.getOutCount()I#Invoke(VIRTUAL,Lsoot/baf/internal/BDupInst;,getUnderTypes,()Ljava/util/List;)#1
soot.baf.internal.BDupInst.getOutCount()I#Invoke(INTERFACE,Ljava/util/List;,size,()I)#2
soot.baf.internal.BDupInst.getOutCount()I#Constant(I,2)#3
soot.baf.internal.BDupInst.getOutCount()I#LocalLoad(Ljava/lang/Object;,0)#4
soot.baf.internal.BDupInst.getOutCount()I#Invoke(VIRTUAL,Lsoot/baf/internal/BDupInst;,getOpTypes,()Ljava/util/List;)#5
soot.baf.internal.BDupInst.getOutCount()I#Invoke(INTERFACE,Ljava/util/List;,size,()I)#6
soot.baf.internal.BDupInst.getOutCount()I#BinaryOp(I,mul)#7
soot.baf.internal.BDupInst.getOutCount()I#BinaryOp(I,add)#8
soot.baf.internal.BDupInst.getOutCount()I#Return(I)#9
soot.baf.internal.BPushInst.getInCount()I#Constant(I,0)#0
soot.baf.internal.BPushInst.getInCount()I#Return(I)#1
soot.baf.internal.BPushInst.getOutCount()I#Constant(I,1)#0
soot.baf.internal.BPushInst.getOutCount()I#Return(I)#1
soot.baf.internal.BInterfaceInvokeInst.getInCount()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BInterfaceInvokeInst.getInCount()I#Get(Lsoot/SootMethodRef;,NONSTATIC,Lsoot/baf/internal/BInterfaceInvokeInst;,methodRef)#1
soot.baf.internal.BInterfaceInvokeInst.getInCount()I#Invoke(INTERFACE,Lsoot/SootMethodRef;,parameterTypes,()Ljava/util/List;)#2
soot.baf.internal.BInterfaceInvokeInst.getInCount()I#Invoke(INTERFACE,Ljava/util/List;,size,()I)#3
soot.baf.internal.BInterfaceInvokeInst.getInCount()I#Constant(I,1)#4
soot.baf.internal.BInterfaceInvokeInst.getInCount()I#BinaryOp(I,add)#5
soot.baf.internal.BInterfaceInvokeInst.getInCount()I#Return(I)#6
soot.baf.internal.BInterfaceInvokeInst.getOutCount()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BInterfaceInvokeInst.getOutCount()I#Invoke(SPECIAL,Lsoot/baf/internal/AbstractInvokeInst;,getOutCount,()I)#1
soot.baf.internal.BInterfaceInvokeInst.getOutCount()I#Return(I)#2
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#744
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#745
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(I,0)#746
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#ConditionalBranch(I,eq,751)#747
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Return(V)#751
soot.baf.JasminClass.<init>(Lsoot/SootClass;)V#Return(V)#3
soot.PackManager.writeClass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,4)#132
soot.PackManager.writeClass(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/baf/JasminClass;,print,(Ljava/io/PrintWriter;)V)#133
soot.AbstractJasminClass.print(Ljava/io/PrintWriter;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.AbstractJasminClass.print(Ljava/io/PrintWriter;)V#Get(Ljava/util/List;,NONSTATIC,Lsoot/AbstractJasminClass;,code)#1
soot.AbstractJasminClass.print(Ljava/io/PrintWriter;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#2
soot.AbstractJasminClass.print(Ljava/io/PrintWriter;)V#LocalStore(Ljava/lang/Object;,2)#3
soot.AbstractJasminClass.print(Ljava/io/PrintWriter;)V#Goto(10)#4
soot.AbstractJasminClass.print(Ljava/io/PrintWriter;)V#LocalLoad(Ljava/lang/Object;,2)#10
soot.AbstractJasminClass.print(Ljava/io/PrintWriter;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#11
soot.AbstractJasminClass.print(Ljava/io/PrintWriter;)V#Constant(I,0)#12
soot.AbstractJasminClass.print(Ljava/io/PrintWriter;)V#ConditionalBranch(I,ne,5)#13
soot.AbstractJasminClass.print(Ljava/io/PrintWriter;)V#LocalLoad(Ljava/lang/Object;,1)#5
soot.AbstractJasminClass.print(Ljava/io/PrintWriter;)V#LocalLoad(Ljava/lang/Object;,2)#6
soot.AbstractJasminClass.print(Ljava/io/PrintWriter;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#7
soot.AbstractJasminClass.print(Ljava/io/PrintWriter;)V#CheckCast(Ljava/lang/String;)#8
soot.AbstractJasminClass.print(Ljava/io/PrintWriter;)V#Invoke(VIRTUAL,Ljava/io/PrintWriter;,println,(Ljava/lang/String;)V)#9
soot.AbstractJasminClass.print(Ljava/io/PrintWriter;)V#Return(V)#14
soot.PackManager.writeClass(Lsoot/SootClass;)V#Goto(199)#134
soot.PackManager.writeClass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,4)#199
soot.PackManager.writeClass(Lsoot/SootClass;)V#Invoke(VIRTUAL,Ljava/io/PrintWriter;,flush,()V)#200
soot.util.JasminOutputStream.flush()V#New(Ljava/io/ByteArrayInputStream;,0)#0
soot.util.JasminOutputStream.flush()V#Dup(1,0)#1
soot.util.JasminOutputStream.flush()V#LocalLoad(Ljava/lang/Object;,0)#2
soot.util.JasminOutputStream.flush()V#Invoke(VIRTUAL,Lsoot/util/JasminOutputStream;,toByteArray,()[B)#3
soot.util.JasminOutputStream.flush()V#Invoke(SPECIAL,Ljava/io/ByteArrayInputStream;,<init>,([B)V)#4
soot.util.JasminOutputStream.flush()V#LocalStore(Ljava/lang/Object;,1)#5
soot.util.JasminOutputStream.flush()V#LocalLoad(Ljava/lang/Object;,1)#6
soot.util.JasminOutputStream.flush()V#LocalLoad(Ljava/lang/Object;,0)#7
soot.util.JasminOutputStream.flush()V#Get(Ljava/io/OutputStream;,NONSTATIC,Lsoot/util/JasminOutputStream;,out)#8
soot.util.JasminOutputStream.flush()V#Constant(I,0)#9
soot.util.JasminOutputStream.flush()V#Invoke(STATIC,Ljasmin/Main;,assemble,(Ljava/io/InputStream;Ljava/io/OutputStream;Z)V)#10
soot.util.JasminOutputStream.flush()V#Return(V)#11
soot.PackManager.writeClass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,3)#201
soot.PackManager.writeClass(Lsoot/SootClass;)V#Invoke(VIRTUAL,Ljava/io/OutputStream;,close,()V)#202
soot.PackManager.writeClass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,6)#203
soot.PackManager.writeClass(Lsoot/SootClass;)V#Constant(L;,null)#204
soot.PackManager.writeClass(Lsoot/SootClass;)V#ConditionalBranch(Ljava/lang/Object;,eq,221)#205
soot.PackManager.writeClass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,6)#206
soot.PackManager.writeClass(Lsoot/SootClass;)V#Invoke(VIRTUAL,Ljava/io/OutputStream;,close,()V)#207
soot.PackManager.writeClass(Lsoot/SootClass;)V#Goto(221)#208
soot.PackManager.writeClass(Lsoot/SootClass;)V#Return(V)#221
soot.Modifier.isPublic(I)Z#Constant(I,0)#7
soot.Modifier.isPublic(I)Z#Return(I)#8
soot.Modifier.toString(I)Ljava/lang/String;#LocalLoad(I,0)#13
soot.Modifier.toString(I)Ljava/lang/String;#Invoke(STATIC,Lsoot/Modifier;,isPrivate,(I)Z)#14
soot.Modifier.isPrivate(I)Z#LocalLoad(I,0)#0
soot.Modifier.isPrivate(I)Z#Constant(I,2)#1
soot.Modifier.isPrivate(I)Z#BinaryOp(I,and)#2
soot.Modifier.isPrivate(I)Z#Constant(I,0)#3
soot.Modifier.isPrivate(I)Z#ConditionalBranch(I,eq,7)#4
soot.Modifier.isPrivate(I)Z#Constant(I,0)#7
soot.Modifier.isPrivate(I)Z#Return(I)#8
soot.Modifier.toString(I)Ljava/lang/String;#Constant(I,0)#15
soot.Modifier.toString(I)Ljava/lang/String;#ConditionalBranch(I,eq,22)#16
soot.Modifier.toString(I)Ljava/lang/String;#LocalLoad(I,0)#22
soot.Modifier.toString(I)Ljava/lang/String;#Invoke(STATIC,Lsoot/Modifier;,isProtected,(I)Z)#23
soot.Modifier.isProtected(I)Z#LocalLoad(I,0)#0
soot.Modifier.isProtected(I)Z#Constant(I,4)#1
soot.Modifier.isProtected(I)Z#BinaryOp(I,and)#2
soot.Modifier.isProtected(I)Z#Constant(I,0)#3
soot.Modifier.isProtected(I)Z#ConditionalBranch(I,eq,7)#4
soot.Modifier.isProtected(I)Z#Constant(I,0)#7
soot.Modifier.isProtected(I)Z#Return(I)#8
soot.Modifier.toString(I)Ljava/lang/String;#Constant(I,0)#24
soot.Modifier.toString(I)Ljava/lang/String;#ConditionalBranch(I,eq,30)#25
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,2)#144
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#145
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#CheckCast(Lsoot/SootClass;)#146
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,3)#147
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#148
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#New(Ljava/lang/StringBuilder;,0)#149
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Dup(1,0)#150
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(Ljava/lang/String;,".implements ")#151
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#152
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,3)#153
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getName,()Ljava/lang/String;)#154
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/AbstractJasminClass;,slashify,(Ljava/lang/String;)Ljava/lang/String;)#155
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#156
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#157
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/AbstractJasminClass;,emit,(Ljava/lang/String;)V)#158
soot.baf.internal.BStaticGetInst.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.baf.internal.BStaticGetInst.apply(Lsoot/util/Switch;)V#CheckCast(Lsoot/baf/InstSwitch;)#1
soot.baf.internal.BStaticGetInst.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.baf.internal.BStaticGetInst.apply(Lsoot/util/Switch;)V#Invoke(INTERFACE,Lsoot/baf/InstSwitch;,caseStaticGetInst,(Lsoot/baf/StaticGetInst;)V)#3
soot.baf.JasminClass$1.caseStaticGetInst(Lsoot/baf/StaticGetInst;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.baf.JasminClass$1.caseStaticGetInst(Lsoot/baf/StaticGetInst;)V#Invoke(INTERFACE,Lsoot/baf/StaticGetInst;,getFieldRef,()Lsoot/SootFieldRef;)#1
soot.baf.internal.BStaticGetInst.getFieldRef()Lsoot/SootFieldRef;#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BStaticGetInst.getFieldRef()Lsoot/SootFieldRef;#Get(Lsoot/SootFieldRef;,NONSTATIC,Lsoot/baf/internal/BStaticGetInst;,fieldRef)#1
soot.baf.internal.BStaticGetInst.getFieldRef()Lsoot/SootFieldRef;#Return(Ljava/lang/Object;)#2
soot.baf.JasminClass$1.caseStaticGetInst(Lsoot/baf/StaticGetInst;)V#LocalStore(Ljava/lang/Object;,2)#2
soot.baf.JasminClass$1.caseStaticGetInst(Lsoot/baf/StaticGetInst;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.baf.JasminClass$1.caseStaticGetInst(Lsoot/baf/StaticGetInst;)V#Get(Lsoot/baf/JasminClass;,NONSTATIC,Lsoot/baf/JasminClass$1;,this$0)#4
soot.baf.JasminClass$1.caseStaticGetInst(Lsoot/baf/StaticGetInst;)V#New(Ljava/lang/StringBuilder;,0)#5
soot.baf.JasminClass$1.caseStaticGetInst(Lsoot/baf/StaticGetInst;)V#Dup(1,0)#6
soot.baf.JasminClass$1.caseStaticGetInst(Lsoot/baf/StaticGetInst;)V#Constant(Ljava/lang/String;,"getstatic ")#7
soot.baf.JasminClass$1.caseStaticGetInst(Lsoot/baf/StaticGetInst;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#8
soot.baf.JasminClass$1.caseStaticGetInst(Lsoot/baf/StaticGetInst;)V#LocalLoad(Ljava/lang/Object;,2)#9
soot.baf.JasminClass$1.caseStaticGetInst(Lsoot/baf/StaticGetInst;)V#Invoke(INTERFACE,Lsoot/SootFieldRef;,declaringClass,()Lsoot/SootClass;)#10
soot.AbstractSootFieldRef.declaringClass()Lsoot/SootClass;#LocalLoad(Ljava/lang/Object;,0)#0
soot.AbstractSootFieldRef.declaringClass()Lsoot/SootClass;#Get(Lsoot/SootClass;,NONSTATIC,Lsoot/AbstractSootFieldRef;,declaringClass)#1
soot.AbstractSootFieldRef.declaringClass()Lsoot/SootClass;#Return(Ljava/lang/Object;)#2
soot.baf.JasminClass$1.caseStaticGetInst(Lsoot/baf/StaticGetInst;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getName,()Ljava/lang/String;)#11
soot.baf.JasminClass$1.caseStaticGetInst(Lsoot/baf/StaticGetInst;)V#Invoke(STATIC,Lsoot/baf/JasminClass;,slashify,(Ljava/lang/String;)Ljava/lang/String;)#12
soot.baf.JasminClass$1.caseStaticGetInst(Lsoot/baf/StaticGetInst;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#13
soot.baf.JasminClass$1.caseStaticGetInst(Lsoot/baf/StaticGetInst;)V#Constant(Ljava/lang/String;,"/")#14
soot.baf.JasminClass$1.caseStaticGetInst(Lsoot/baf/StaticGetInst;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#15
soot.baf.JasminClass$1.caseStaticGetInst(Lsoot/baf/StaticGetInst;)V#LocalLoad(Ljava/lang/Object;,2)#16
soot.baf.JasminClass$1.caseStaticGetInst(Lsoot/baf/StaticGetInst;)V#Invoke(INTERFACE,Lsoot/SootFieldRef;,name,()Ljava/lang/String;)#17
soot.AbstractSootFieldRef.name()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
soot.AbstractSootFieldRef.name()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsoot/AbstractSootFieldRef;,name)#1
soot.AbstractSootFieldRef.name()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
soot.baf.JasminClass$1.caseStaticGetInst(Lsoot/baf/StaticGetInst;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#18
soot.baf.JasminClass$1.caseStaticGetInst(Lsoot/baf/StaticGetInst;)V#Constant(Ljava/lang/String;," ")#19
soot.baf.JasminClass$1.caseStaticGetInst(Lsoot/baf/StaticGetInst;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#20
soot.baf.JasminClass$1.caseStaticGetInst(Lsoot/baf/StaticGetInst;)V#LocalLoad(Ljava/lang/Object;,2)#21
soot.baf.JasminClass$1.caseStaticGetInst(Lsoot/baf/StaticGetInst;)V#Invoke(INTERFACE,Lsoot/SootFieldRef;,type,()Lsoot/Type;)#22
soot.AbstractSootFieldRef.type()Lsoot/Type;#LocalLoad(Ljava/lang/Object;,0)#0
soot.AbstractSootFieldRef.type()Lsoot/Type;#Get(Lsoot/Type;,NONSTATIC,Lsoot/AbstractSootFieldRef;,type)#1
soot.AbstractSootFieldRef.type()Lsoot/Type;#Return(Ljava/lang/Object;)#2
soot.baf.JasminClass$1.caseStaticGetInst(Lsoot/baf/StaticGetInst;)V#Invoke(STATIC,Lsoot/baf/JasminClass;,jasminDescriptorOf,(Lsoot/Type;)Ljava/lang/String;)#23
soot.baf.JasminClass$1.caseStaticGetInst(Lsoot/baf/StaticGetInst;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#24
soot.baf.JasminClass$1.caseStaticGetInst(Lsoot/baf/StaticGetInst;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#25
soot.baf.JasminClass$1.caseStaticGetInst(Lsoot/baf/StaticGetInst;)V#Invoke(STATIC,Lsoot/baf/JasminClass;,access$0,(Lsoot/baf/JasminClass;Ljava/lang/String;)V)#26
soot.baf.JasminClass$1.caseStaticGetInst(Lsoot/baf/StaticGetInst;)V#Return(V)#27
soot.baf.internal.BStaticGetInst.apply(Lsoot/util/Switch;)V#Return(V)#4
soot.baf.internal.BVirtualInvokeInst.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.baf.internal.BVirtualInvokeInst.apply(Lsoot/util/Switch;)V#CheckCast(Lsoot/baf/InstSwitch;)#1
soot.baf.internal.BVirtualInvokeInst.apply(Lsoot/util/Switch;)V#LocalLoad(Ljava/lang/Object;,0)#2
soot.baf.internal.BVirtualInvokeInst.apply(Lsoot/util/Switch;)V#Invoke(INTERFACE,Lsoot/baf/InstSwitch;,caseVirtualInvokeInst,(Lsoot/baf/VirtualInvokeInst;)V)#3
soot.baf.JasminClass$1.caseVirtualInvokeInst(Lsoot/baf/VirtualInvokeInst;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.baf.JasminClass$1.caseVirtualInvokeInst(Lsoot/baf/VirtualInvokeInst;)V#Invoke(INTERFACE,Lsoot/baf/VirtualInvokeInst;,getMethodRef,()Lsoot/SootMethodRef;)#1
soot.baf.internal.BVirtualInvokeInst.getMethodRef()Lsoot/SootMethodRef;#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BVirtualInvokeInst.getMethodRef()Lsoot/SootMethodRef;#Invoke(SPECIAL,Lsoot/baf/internal/AbstractInvokeInst;,getMethodRef,()Lsoot/SootMethodRef;)#1
soot.baf.internal.BVirtualInvokeInst.getMethodRef()Lsoot/SootMethodRef;#Return(Ljava/lang/Object;)#2
soot.baf.JasminClass$1.caseVirtualInvokeInst(Lsoot/baf/VirtualInvokeInst;)V#LocalStore(Ljava/lang/Object;,2)#2
soot.baf.JasminClass$1.caseVirtualInvokeInst(Lsoot/baf/VirtualInvokeInst;)V#LocalLoad(Ljava/lang/Object;,0)#3
soot.baf.JasminClass$1.caseVirtualInvokeInst(Lsoot/baf/VirtualInvokeInst;)V#Get(Lsoot/baf/JasminClass;,NONSTATIC,Lsoot/baf/JasminClass$1;,this$0)#4
soot.baf.JasminClass$1.caseVirtualInvokeInst(Lsoot/baf/VirtualInvokeInst;)V#New(Ljava/lang/StringBuilder;,0)#5
soot.baf.JasminClass$1.caseVirtualInvokeInst(Lsoot/baf/VirtualInvokeInst;)V#Dup(1,0)#6
soot.baf.JasminClass$1.caseVirtualInvokeInst(Lsoot/baf/VirtualInvokeInst;)V#Constant(Ljava/lang/String;,"invokevirtual ")#7
soot.baf.JasminClass$1.caseVirtualInvokeInst(Lsoot/baf/VirtualInvokeInst;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#8
soot.baf.JasminClass$1.caseVirtualInvokeInst(Lsoot/baf/VirtualInvokeInst;)V#LocalLoad(Ljava/lang/Object;,2)#9
soot.baf.JasminClass$1.caseVirtualInvokeInst(Lsoot/baf/VirtualInvokeInst;)V#Invoke(INTERFACE,Lsoot/SootMethodRef;,declaringClass,()Lsoot/SootClass;)#10
soot.baf.JasminClass$1.caseVirtualInvokeInst(Lsoot/baf/VirtualInvokeInst;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getName,()Ljava/lang/String;)#11
soot.baf.JasminClass$1.caseVirtualInvokeInst(Lsoot/baf/VirtualInvokeInst;)V#Invoke(STATIC,Lsoot/baf/JasminClass;,slashify,(Ljava/lang/String;)Ljava/lang/String;)#12
soot.baf.JasminClass$1.caseVirtualInvokeInst(Lsoot/baf/VirtualInvokeInst;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#13
soot.baf.JasminClass$1.caseVirtualInvokeInst(Lsoot/baf/VirtualInvokeInst;)V#Constant(Ljava/lang/String;,"/")#14
soot.baf.JasminClass$1.caseVirtualInvokeInst(Lsoot/baf/VirtualInvokeInst;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#15
soot.baf.JasminClass$1.caseVirtualInvokeInst(Lsoot/baf/VirtualInvokeInst;)V#LocalLoad(Ljava/lang/Object;,2)#16
soot.baf.JasminClass$1.caseVirtualInvokeInst(Lsoot/baf/VirtualInvokeInst;)V#Invoke(INTERFACE,Lsoot/SootMethodRef;,name,()Ljava/lang/String;)#17
soot.baf.JasminClass$1.caseVirtualInvokeInst(Lsoot/baf/VirtualInvokeInst;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#18
soot.baf.JasminClass$1.caseVirtualInvokeInst(Lsoot/baf/VirtualInvokeInst;)V#LocalLoad(Ljava/lang/Object;,2)#19
soot.baf.JasminClass$1.caseVirtualInvokeInst(Lsoot/baf/VirtualInvokeInst;)V#Invoke(STATIC,Lsoot/baf/JasminClass;,jasminDescriptorOf,(Lsoot/SootMethodRef;)Ljava/lang/String;)#20
soot.baf.JasminClass$1.caseVirtualInvokeInst(Lsoot/baf/VirtualInvokeInst;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#21
soot.baf.JasminClass$1.caseVirtualInvokeInst(Lsoot/baf/VirtualInvokeInst;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#22
soot.baf.JasminClass$1.caseVirtualInvokeInst(Lsoot/baf/VirtualInvokeInst;)V#Invoke(STATIC,Lsoot/baf/JasminClass;,access$0,(Lsoot/baf/JasminClass;Ljava/lang/String;)V)#23
soot.baf.JasminClass$1.caseVirtualInvokeInst(Lsoot/baf/VirtualInvokeInst;)V#Return(V)#24
soot.baf.internal.BVirtualInvokeInst.apply(Lsoot/util/Switch;)V#Return(V)#4
soot.baf.internal.BStaticGetInst.getInMachineCount()I#Constant(I,0)#0
soot.baf.internal.BStaticGetInst.getInMachineCount()I#Return(I)#1
soot.baf.internal.BStaticGetInst.getOutMachineCount()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BStaticGetInst.getOutMachineCount()I#Get(Lsoot/SootFieldRef;,NONSTATIC,Lsoot/baf/internal/BStaticGetInst;,fieldRef)#1
soot.baf.internal.BStaticGetInst.getOutMachineCount()I#Invoke(INTERFACE,Lsoot/SootFieldRef;,type,()Lsoot/Type;)#2
soot.baf.internal.BStaticGetInst.getOutMachineCount()I#Invoke(STATIC,Lsoot/AbstractJasminClass;,sizeOfType,(Lsoot/Type;)I)#3
soot.baf.internal.BStaticGetInst.getOutMachineCount()I#Return(I)#4
soot.baf.internal.BVirtualInvokeInst.getInMachineCount()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BVirtualInvokeInst.getInMachineCount()I#Invoke(SPECIAL,Lsoot/baf/internal/AbstractInvokeInst;,getInMachineCount,()I)#1
soot.baf.internal.BVirtualInvokeInst.getInMachineCount()I#Constant(I,1)#2
soot.baf.internal.BVirtualInvokeInst.getInMachineCount()I#BinaryOp(I,add)#3
soot.baf.internal.BVirtualInvokeInst.getInMachineCount()I#Return(I)#4
soot.baf.internal.BVirtualInvokeInst.getOutMachineCount()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BVirtualInvokeInst.getOutMachineCount()I#Invoke(SPECIAL,Lsoot/baf/internal/AbstractInvokeInst;,getOutMachineCount,()I)#1
soot.baf.internal.BVirtualInvokeInst.getOutMachineCount()I#Return(I)#2
soot.baf.internal.BStaticGetInst.getInCount()I#Constant(I,0)#0
soot.baf.internal.BStaticGetInst.getInCount()I#Return(I)#1
soot.baf.internal.BStaticGetInst.getOutCount()I#Constant(I,1)#0
soot.baf.internal.BStaticGetInst.getOutCount()I#Return(I)#1
soot.baf.internal.BVirtualInvokeInst.getInCount()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BVirtualInvokeInst.getInCount()I#Invoke(SPECIAL,Lsoot/baf/internal/AbstractInvokeInst;,getInCount,()I)#1
soot.baf.internal.BVirtualInvokeInst.getInCount()I#Constant(I,1)#2
soot.baf.internal.BVirtualInvokeInst.getInCount()I#BinaryOp(I,add)#3
soot.baf.internal.BVirtualInvokeInst.getInCount()I#Return(I)#4
soot.baf.internal.BVirtualInvokeInst.getOutCount()I#LocalLoad(Ljava/lang/Object;,0)#0
soot.baf.internal.BVirtualInvokeInst.getOutCount()I#Invoke(SPECIAL,Lsoot/baf/internal/AbstractInvokeInst;,getOutCount,()I)#1
soot.baf.internal.BVirtualInvokeInst.getOutCount()I#Return(I)#2
soot.SootClass.containsBafBody()Z#Constant(I,0)#23
soot.SootClass.containsBafBody()Z#Return(I)#24
soot.PackManager.writeClass(Lsoot/SootClass;)V#New(Lsoot/jimple/JasminClass;,0)#135
soot.PackManager.writeClass(Lsoot/SootClass;)V#Dup(1,0)#136
soot.PackManager.writeClass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#137
soot.PackManager.writeClass(Lsoot/SootClass;)V#Invoke(SPECIAL,Lsoot/jimple/JasminClass;,<init>,(Lsoot/SootClass;)V)#138
soot.jimple.JasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#0
soot.jimple.JasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.jimple.JasminClass.<init>(Lsoot/SootClass;)V#Invoke(SPECIAL,Lsoot/AbstractJasminClass;,<init>,(Lsoot/SootClass;)V)#2
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(I,2)#79
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(I,-512)#80
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#BinaryOp(I,add)#81
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalStore(I,2)#82
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,0)#83
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#New(Ljava/lang/StringBuilder;,0)#84
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Dup(1,0)#85
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(Ljava/lang/String;,".interface ")#86
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#87
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(I,2)#88
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/Modifier;,toString,(I)Ljava/lang/String;)#89
soot.Modifier.toString(I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#34
soot.Modifier.toString(I)Ljava/lang/String;#Constant(Ljava/lang/String;,"abstract ")#35
soot.Modifier.toString(I)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(Ljava/lang/String;)Ljava/lang/StringBuffer;)#36
soot.Modifier.toString(I)Ljava/lang/String;#Pop(1)#37
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#90
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Constant(Ljava/lang/String;," ")#91
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#92
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#93
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,getName,()Ljava/lang/String;)#94
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(STATIC,Lsoot/AbstractJasminClass;,slashify,(Ljava/lang/String;)Ljava/lang/String;)#95
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#96
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#97
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/AbstractJasminClass;,emit,(Ljava/lang/String;)V)#98
soot.AbstractJasminClass.<init>(Lsoot/SootClass;)V#Goto(116)#99
soot.jimple.JasminClass.<init>(Lsoot/SootClass;)V#Return(V)#3
soot.PackManager.writeClass(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,4)#139
soot.PackManager.writeClass(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/jimple/JasminClass;,print,(Ljava/io/PrintWriter;)V)#140
soot.PackManager.writeClass(Lsoot/SootClass;)V#Goto(199)#141
soot.PackManager.writeOutput(Ljava/util/Iterator;)V#LocalLoad(Ljava/lang/Object;,0)#12
soot.PackManager.writeOutput(Ljava/util/Iterator;)V#Get(Ljava/util/zip/ZipOutputStream;,NONSTATIC,Lsoot/PackManager;,jarFile)#13
soot.PackManager.writeOutput(Ljava/util/Iterator;)V#Constant(L;,null)#14
soot.PackManager.writeOutput(Ljava/util/Iterator;)V#ConditionalBranch(Ljava/lang/Object;,eq,32)#15
soot.PackManager.writeOutput(Ljava/util/Iterator;)V#Return(V)#32
soot.PackManager.writeOutput()V#LocalLoad(Ljava/lang/Object;,0)#50
soot.PackManager.writeOutput()V#LocalLoad(Ljava/lang/Object;,0)#51
soot.PackManager.writeOutput()V#Invoke(SPECIAL,Lsoot/PackManager;,reachableClasses,()Ljava/util/Iterator;)#52
soot.PackManager.writeOutput()V#Invoke(SPECIAL,Lsoot/PackManager;,postProcessXML,(Ljava/util/Iterator;)V)#53
soot.PackManager.postProcessXML(Ljava/util/Iterator;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#0
soot.PackManager.postProcessXML(Ljava/util/Iterator;)V#Invoke(VIRTUAL,Lsoot/options/Options;,xml_attributes,()Z)#1
soot.PackManager.postProcessXML(Ljava/util/Iterator;)V#Constant(I,0)#2
soot.PackManager.postProcessXML(Ljava/util/Iterator;)V#ConditionalBranch(I,ne,5)#3
soot.PackManager.postProcessXML(Ljava/util/Iterator;)V#Return(V)#4
soot.PackManager.writeOutput()V#LocalLoad(Ljava/lang/Object;,0)#54
soot.PackManager.writeOutput()V#LocalLoad(Ljava/lang/Object;,0)#55
soot.PackManager.writeOutput()V#Invoke(SPECIAL,Lsoot/PackManager;,reachableClasses,()Ljava/util/Iterator;)#56
soot.PackManager.writeOutput()V#Invoke(SPECIAL,Lsoot/PackManager;,releaseBodies,(Ljava/util/Iterator;)V)#57
soot.PackManager.releaseBodies(Ljava/util/Iterator;)V#Goto(8)#0
soot.PackManager.releaseBodies(Ljava/util/Iterator;)V#LocalLoad(Ljava/lang/Object;,1)#8
soot.PackManager.releaseBodies(Ljava/util/Iterator;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#9
soot.PackManager.releaseBodies(Ljava/util/Iterator;)V#Constant(I,0)#10
soot.PackManager.releaseBodies(Ljava/util/Iterator;)V#ConditionalBranch(I,ne,1)#11
soot.PackManager.releaseBodies(Ljava/util/Iterator;)V#LocalLoad(Ljava/lang/Object;,1)#1
soot.PackManager.releaseBodies(Ljava/util/Iterator;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#2
soot.PackManager.releaseBodies(Ljava/util/Iterator;)V#CheckCast(Lsoot/SootClass;)#3
soot.PackManager.releaseBodies(Ljava/util/Iterator;)V#LocalStore(Ljava/lang/Object;,2)#4
soot.PackManager.releaseBodies(Ljava/util/Iterator;)V#LocalLoad(Ljava/lang/Object;,0)#5
soot.PackManager.releaseBodies(Ljava/util/Iterator;)V#LocalLoad(Ljava/lang/Object;,2)#6
soot.PackManager.releaseBodies(Ljava/util/Iterator;)V#Invoke(SPECIAL,Lsoot/PackManager;,releaseBodies,(Lsoot/SootClass;)V)#7
soot.PackManager.releaseBodies(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,1)#0
soot.PackManager.releaseBodies(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootClass;,methodIterator,()Ljava/util/Iterator;)#1
soot.PackManager.releaseBodies(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,2)#2
soot.PackManager.releaseBodies(Lsoot/SootClass;)V#Goto(14)#3
soot.PackManager.releaseBodies(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,2)#14
soot.PackManager.releaseBodies(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#15
soot.PackManager.releaseBodies(Lsoot/SootClass;)V#Constant(I,0)#16
soot.PackManager.releaseBodies(Lsoot/SootClass;)V#ConditionalBranch(I,ne,4)#17
soot.PackManager.releaseBodies(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,2)#4
soot.PackManager.releaseBodies(Lsoot/SootClass;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#5
soot.PackManager.releaseBodies(Lsoot/SootClass;)V#CheckCast(Lsoot/SootMethod;)#6
soot.PackManager.releaseBodies(Lsoot/SootClass;)V#LocalStore(Ljava/lang/Object;,3)#7
soot.PackManager.releaseBodies(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,3)#8
soot.PackManager.releaseBodies(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,hasActiveBody,()Z)#9
soot.PackManager.releaseBodies(Lsoot/SootClass;)V#Constant(I,0)#10
soot.PackManager.releaseBodies(Lsoot/SootClass;)V#ConditionalBranch(I,eq,14)#11
soot.PackManager.releaseBodies(Lsoot/SootClass;)V#LocalLoad(Ljava/lang/Object;,3)#12
soot.PackManager.releaseBodies(Lsoot/SootClass;)V#Invoke(VIRTUAL,Lsoot/SootMethod;,releaseActiveBody,()V)#13
soot.SootMethod.releaseActiveBody()V#LocalLoad(Ljava/lang/Object;,0)#0
soot.SootMethod.releaseActiveBody()V#Constant(L;,null)#1
soot.SootMethod.releaseActiveBody()V#Put(Lsoot/Body;,NONSTATIC,Lsoot/SootMethod;,activeBody)#2
soot.SootMethod.releaseActiveBody()V#Return(V)#3
soot.PackManager.releaseBodies(Lsoot/SootClass;)V#Return(V)#18
soot.PackManager.releaseBodies(Ljava/util/Iterator;)V#Return(V)#12
soot.PackManager.writeOutput()V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#58
soot.PackManager.writeOutput()V#Invoke(VIRTUAL,Lsoot/options/Options;,verbose,()Z)#59
soot.PackManager.writeOutput()V#Constant(I,0)#60
soot.PackManager.writeOutput()V#ConditionalBranch(I,eq,65)#61
soot.PackManager.writeOutput()V#Return(V)#65
soot.Main.run([Ljava/lang/String;)V#Invoke(STATIC,Lsoot/Timers;,v,()Lsoot/Timers;)#90
soot.Main.run([Ljava/lang/String;)V#Get(Lsoot/Timer;,NONSTATIC,Lsoot/Timers;,totalTimer)#91
soot.Main.run([Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/Timer;,end,()V)#92
soot.Main.run([Ljava/lang/String;)V#Invoke(STATIC,Lsoot/options/Options;,v,()Lsoot/options/Options;)#93
soot.Main.run([Ljava/lang/String;)V#Invoke(VIRTUAL,Lsoot/options/Options;,time,()Z)#94
soot.Main.run([Ljava/lang/String;)V#Constant(I,0)#95
soot.Main.run([Ljava/lang/String;)V#ConditionalBranch(I,eq,111)#96
soot.Main.run([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#111
soot.Main.run([Ljava/lang/String;)V#New(Ljava/util/Date;,0)#112
soot.Main.run([Ljava/lang/String;)V#Dup(1,0)#113
soot.Main.run([Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/util/Date;,<init>,()V)#114
soot.Main.run([Ljava/lang/String;)V#Put(Ljava/util/Date;,NONSTATIC,Lsoot/Main;,finish)#115
soot.Main.run([Ljava/lang/String;)V#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#116
soot.Main.run([Ljava/lang/String;)V#Get(Ljava/io/PrintStream;,NONSTATIC,Lsoot/G;,out)#117
soot.Main.run([Ljava/lang/String;)V#New(Ljava/lang/StringBuilder;,0)#118
soot.Main.run([Ljava/lang/String;)V#Dup(1,0)#119
soot.Main.run([Ljava/lang/String;)V#Constant(Ljava/lang/String;,"Soot finished on ")#120
soot.Main.run([Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#121
soot.Main.run([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#122
soot.Main.run([Ljava/lang/String;)V#Get(Ljava/util/Date;,NONSTATIC,Lsoot/Main;,finish)#123
soot.Main.run([Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#124
soot.Main.run([Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#125
soot.Main.run([Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/io/PrintStream;,println,(Ljava/lang/String;)V)#126
soot.Main.run([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#127
soot.Main.run([Ljava/lang/String;)V#Get(Ljava/util/Date;,NONSTATIC,Lsoot/Main;,finish)#128
soot.Main.run([Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/Date;,getTime,()J)#129
soot.Main.run([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#130
soot.Main.run([Ljava/lang/String;)V#Get(Ljava/util/Date;,NONSTATIC,Lsoot/Main;,start)#131
soot.Main.run([Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/Date;,getTime,()J)#132
soot.Main.run([Ljava/lang/String;)V#BinaryOp(J,sub)#133
soot.Main.run([Ljava/lang/String;)V#LocalStore(J,2)#134
soot.Main.run([Ljava/lang/String;)V#Invoke(STATIC,Lsoot/G;,v,()Lsoot/G;)#135
soot.Main.run([Ljava/lang/String;)V#Get(Ljava/io/PrintStream;,NONSTATIC,Lsoot/G;,out)#136
soot.Main.run([Ljava/lang/String;)V#New(Ljava/lang/StringBuilder;,0)#137
soot.Main.run([Ljava/lang/String;)V#Dup(1,0)#138
soot.Main.run([Ljava/lang/String;)V#Constant(Ljava/lang/String;,"Soot has run for ")#139
soot.Main.run([Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#140
soot.Main.run([Ljava/lang/String;)V#LocalLoad(J,2)#141
soot.Main.run([Ljava/lang/String;)V#Constant(J,60000)#142
soot.Main.run([Ljava/lang/String;)V#BinaryOp(J,div)#143
soot.Main.run([Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(J)Ljava/lang/StringBuilder;)#144
soot.Main.run([Ljava/lang/String;)V#Constant(Ljava/lang/String;," min. ")#145
soot.Main.run([Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#146
soot.Main.run([Ljava/lang/String;)V#LocalLoad(J,2)#147
soot.Main.run([Ljava/lang/String;)V#Constant(J,60000)#148
soot.Main.run([Ljava/lang/String;)V#BinaryOp(J,rem)#149
soot.Main.run([Ljava/lang/String;)V#Constant(J,1000)#150
soot.Main.run([Ljava/lang/String;)V#BinaryOp(J,div)#151
soot.Main.run([Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(J)Ljava/lang/StringBuilder;)#152
soot.Main.run([Ljava/lang/String;)V#Constant(Ljava/lang/String;," sec.")#153
soot.Main.run([Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#154
soot.Main.run([Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#155
soot.Main.run([Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/io/PrintStream;,println,(Ljava/lang/String;)V)#156
soot.Main.run([Ljava/lang/String;)V#Return(V)#157
soot.Main.main([Ljava/lang/String;)V#Goto(19)#3
soot.Main.main([Ljava/lang/String;)V#Return(V)#19
