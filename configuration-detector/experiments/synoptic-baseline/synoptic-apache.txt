synoptic.main.Main.<clinit>()V#Constant(L;,null)#0
synoptic.main.Main.<clinit>()V#Put(Ljava/util/logging/Logger;,STATIC,Lsynoptic/main/Main;,logger)#1
synoptic.main.Main.<clinit>()V#Constant(L;,null)#2
synoptic.main.Main.<clinit>()V#Put(Lsynoptic/model/export/GraphExportFormatter;,STATIC,Lsynoptic/main/Main;,graphExportFormatter)#3
synoptic.main.Main.<clinit>()V#Constant(L;,null)#4
synoptic.main.Main.<clinit>()V#Put(Lsynoptic/main/SynopticOptions;,STATIC,Lsynoptic/main/Main;,options)#5
synoptic.main.Main.<clinit>()V#Return(V)#6
synoptic.main.Main.main([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.main.Main.main([Ljava/lang/String;)V#Invoke(STATIC,Lsynoptic/main/Main;,processArgs,([Ljava/lang/String;)Lsynoptic/main/Main;)#1
synoptic.main.Main.processArgs([Ljava/lang/String;)Lsynoptic/main/Main;#New(Lsynoptic/main/SynopticOptions;,0)#0
synoptic.main.Main.processArgs([Ljava/lang/String;)Lsynoptic/main/Main;#Dup(1,0)#1
synoptic.main.Main.processArgs([Ljava/lang/String;)Lsynoptic/main/Main;#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.main.Main.processArgs([Ljava/lang/String;)Lsynoptic/main/Main;#Invoke(SPECIAL,Lsynoptic/main/SynopticOptions;,<init>,([Ljava/lang/String;)V)#3
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Invoke(SPECIAL,Lsynoptic/main/Options;,<init>,()V)#1
synoptic.main.Options.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.main.Options.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
synoptic.main.Options.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.main.Options.<init>()V#Constant(L;,null)#3
synoptic.main.Options.<init>()V#Put(Ljava/util/List;,NONSTATIC,Lsynoptic/main/Options;,logFilenames)#4
synoptic.main.Options.<init>()V#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.main.Options.<init>()V#Constant(L;,null)#6
synoptic.main.Options.<init>()V#Put(Lplume/Options;,NONSTATIC,Lsynoptic/main/Options;,plumeOptions)#7
synoptic.main.Options.<init>()V#Return(V)#8
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,0)#3
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,help)#4
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,0)#6
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,allHelp)#7
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#8
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,0)#9
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,version)#10
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#11
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,0)#12
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,logLvlQuiet)#13
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#14
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,0)#15
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,logLvlVerbose)#16
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#17
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,1)#18
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,useFSMChecker)#19
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#20
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(L;,null)#21
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Ljava/lang/Long;,NONSTATIC,Lsynoptic/main/SynopticOptions;,randomSeed)#22
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#23
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(L;,null)#24
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/SynopticOptions;,separateVTimeIndexSets)#25
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#26
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(L;,null)#27
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/SynopticOptions;,separatorRegExp)#28
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#29
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(L;,null)#30
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Ljava/util/List;,NONSTATIC,Lsynoptic/main/SynopticOptions;,regExps)#31
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#32
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(Ljava/lang/String;,"\k<FILE>")#33
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/SynopticOptions;,partitionRegExp)#34
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#35
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,1)#36
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,partitionViaFile)#37
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#38
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,0)#39
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,ignoreNonMatchingLines)#40
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#41
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,0)#42
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,recoverFromParseErrors)#43
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#44
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,0)#45
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,debugParse)#46
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#47
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(L;,null)#48
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/SynopticOptions;,argsFilename)#49
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#50
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(L;,null)#51
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/SynopticOptions;,outputPathPrefix)#52
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#53
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,0)#54
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,outputInvariantsToFile)#55
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#56
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,0)#57
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,exportAsGML)#58
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#59
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(L;,null)#60
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/SynopticOptions;,dotExecutablePath)#61
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#62
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,1)#63
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,outputEdgeLabels)#64
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#65
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,1)#66
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,showTerminalNode)#67
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#68
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,1)#69
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,showInitialNode)#70
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#71
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,0)#72
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,dumpInvariants)#73
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#74
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,0)#75
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,dumpInitialGraphDotFile)#76
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#77
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,0)#78
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,dumpInitialGraphPngFile)#79
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#80
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,0)#81
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,dumpInitialPartitionGraph)#82
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#83
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,0)#84
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,dumpIntermediateStages)#85
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#86
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,0)#87
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,logLvlExtraVerbose)#88
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#89
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,0)#90
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,useTransitiveClosureMining)#91
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#92
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,1)#93
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,mineNeverConcurrentWithInv)#94
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#95
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,0)#96
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,onlyMineInvariants)#97
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#98
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,0)#99
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,noCoarsening)#100
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#101
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,0)#102
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,doBenchmarking)#103
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#104
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,1)#105
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,internCommonStrings)#106
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#107
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,0)#108
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,runTests)#109
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#110
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,0)#111
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,runAllTests)#112
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#113
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,0)#114
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,performExtraChecks)#115
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#116
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,0)#117
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,noRefinement)#118
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#119
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#New(Lplume/Options;,0)#120
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Dup(1,0)#121
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#122
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Invoke(VIRTUAL,Lsynoptic/main/SynopticOptions;,getUsageString,()Ljava/lang/String;)#123
synoptic.main.SynopticOptions.getUsageString()Ljava/lang/String;#Constant(Ljava/lang/String;,"synoptic [options] <logfiles-to-analyze>")#0
synoptic.main.SynopticOptions.getUsageString()Ljava/lang/String;#Return(Ljava/lang/Object;)#1
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,1)#124
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#New([Ljava/lang/Object;,1)#125
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Dup(1,0)#126
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(I,0)#127
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#128
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#ArrayStore(Ljava/lang/Object;)#129
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Invoke(SPECIAL,Lplume/Options;,<init>,(Ljava/lang/String;[Ljava/lang/Object;)V)#130
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Lplume/Options;,NONSTATIC,Lsynoptic/main/SynopticOptions;,plumeOptions)#131
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#132
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#133
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Invoke(VIRTUAL,Lsynoptic/main/SynopticOptions;,setOptions,([Ljava/lang/String;)V)#134
synoptic.main.Options.setOptions([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.main.Options.setOptions([Ljava/lang/String;)V#New(Lplume/Options;,0)#1
synoptic.main.Options.setOptions([Ljava/lang/String;)V#Dup(1,0)#2
synoptic.main.Options.setOptions([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#3
synoptic.main.Options.setOptions([Ljava/lang/String;)V#Invoke(VIRTUAL,Lsynoptic/main/Options;,getUsageString,()Ljava/lang/String;)#4
synoptic.main.Options.setOptions([Ljava/lang/String;)V#Constant(I,1)#5
synoptic.main.Options.setOptions([Ljava/lang/String;)V#New([Ljava/lang/Object;,1)#6
synoptic.main.Options.setOptions([Ljava/lang/String;)V#Dup(1,0)#7
synoptic.main.Options.setOptions([Ljava/lang/String;)V#Constant(I,0)#8
synoptic.main.Options.setOptions([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#9
synoptic.main.Options.setOptions([Ljava/lang/String;)V#ArrayStore(Ljava/lang/Object;)#10
synoptic.main.Options.setOptions([Ljava/lang/String;)V#Invoke(SPECIAL,Lplume/Options;,<init>,(Ljava/lang/String;[Ljava/lang/Object;)V)#11
synoptic.main.Options.setOptions([Ljava/lang/String;)V#Put(Lplume/Options;,NONSTATIC,Lsynoptic/main/Options;,plumeOptions)#12
synoptic.main.Options.setOptions([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#13
synoptic.main.Options.setOptions([Ljava/lang/String;)V#Get(Lplume/Options;,NONSTATIC,Lsynoptic/main/Options;,plumeOptions)#14
synoptic.main.Options.setOptions([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#15
synoptic.main.Options.setOptions([Ljava/lang/String;)V#Invoke(VIRTUAL,Lplume/Options;,parse_or_usage,([Ljava/lang/String;)[Ljava/lang/String;)#16
synoptic.main.Options.setOptions([Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,2)#17
synoptic.main.Options.setOptions([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#18
synoptic.main.Options.setOptions([Ljava/lang/String;)V#Invoke(VIRTUAL,Lsynoptic/main/Options;,getArgsFilename,()Ljava/lang/String;)#19
synoptic.main.SynopticOptions.getArgsFilename()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.main.SynopticOptions.getArgsFilename()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/SynopticOptions;,argsFilename)#1
synoptic.main.SynopticOptions.getArgsFilename()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
synoptic.main.Options.setOptions([Ljava/lang/String;)V#Constant(L;,null)#20
synoptic.main.Options.setOptions([Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,eq,43)#21
synoptic.main.Options.setOptions([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#43
synoptic.main.Options.setOptions([Ljava/lang/String;)V#Get(Lplume/Options;,NONSTATIC,Lsynoptic/main/Options;,plumeOptions)#44
synoptic.main.Options.setOptions([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#45
synoptic.main.Options.setOptions([Ljava/lang/String;)V#Invoke(VIRTUAL,Lplume/Options;,parse_or_usage,([Ljava/lang/String;)[Ljava/lang/String;)#46
synoptic.main.Options.setOptions([Ljava/lang/String;)V#Pop(1)#47
synoptic.main.Options.setOptions([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#48
synoptic.main.Options.setOptions([Ljava/lang/String;)V#New(Ljava/util/LinkedList;,0)#49
synoptic.main.Options.setOptions([Ljava/lang/String;)V#Dup(1,0)#50
synoptic.main.Options.setOptions([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#51
synoptic.main.Options.setOptions([Ljava/lang/String;)V#Invoke(STATIC,Ljava/util/Arrays;,asList,([Ljava/lang/Object;)Ljava/util/List;)#52
synoptic.main.Options.setOptions([Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,(Ljava/util/Collection;)V)#53
synoptic.main.Options.setOptions([Ljava/lang/String;)V#Put(Ljava/util/List;,NONSTATIC,Lsynoptic/main/Options;,logFilenames)#54
synoptic.main.Options.setOptions([Ljava/lang/String;)V#Goto(61)#55
synoptic.main.Options.setOptions([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#61
synoptic.main.Options.setOptions([Ljava/lang/String;)V#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/main/Options;,logFilenames)#62
synoptic.main.Options.setOptions([Ljava/lang/String;)V#Constant(Ljava/lang/String;,"")#63
synoptic.main.Options.setOptions([Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,contains,(Ljava/lang/Object;)Z)#64
synoptic.main.Options.setOptions([Ljava/lang/String;)V#Constant(I,0)#65
synoptic.main.Options.setOptions([Ljava/lang/String;)V#ConditionalBranch(I,ne,56)#66
synoptic.main.Options.setOptions([Ljava/lang/String;)V#Return(V)#67
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#135
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Get(Ljava/lang/Long;,NONSTATIC,Lsynoptic/main/SynopticOptions;,randomSeed)#136
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Constant(L;,null)#137
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,ne,143)#138
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#139
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Invoke(STATIC,Ljava/lang/System;,currentTimeMillis,()J)#140
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Invoke(STATIC,Ljava/lang/Long;,valueOf,(J)Ljava/lang/Long;)#141
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Ljava/lang/Long;,NONSTATIC,Lsynoptic/main/SynopticOptions;,randomSeed)#142
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Return(V)#143
synoptic.main.Main.processArgs([Ljava/lang/String;)Lsynoptic/main/Main;#LocalStore(Ljava/lang/Object;,1)#4
synoptic.main.Main.processArgs([Ljava/lang/String;)Lsynoptic/main/Main;#LocalLoad(Ljava/lang/Object;,1)#5
synoptic.main.Main.processArgs([Ljava/lang/String;)Lsynoptic/main/Main;#Invoke(STATIC,Lsynoptic/main/Main;,processArgs,(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;)#6
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Put(Lsynoptic/main/SynopticOptions;,STATIC,Lsynoptic/main/Main;,options)#1
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Invoke(STATIC,Lsynoptic/main/Main;,setUpLogging,()V)#2
synoptic.main.Main.setUpLogging()V#Constant(Ljava/lang/String;,"")#0
synoptic.main.Main.setUpLogging()V#Invoke(STATIC,Ljava/util/logging/Logger;,getLogger,(Ljava/lang/String;)Ljava/util/logging/Logger;)#1
synoptic.main.Main.setUpLogging()V#Put(Ljava/util/logging/Logger;,STATIC,Lsynoptic/main/Main;,logger)#2
synoptic.main.Main.setUpLogging()V#Constant(L;,null)#3
synoptic.main.Main.setUpLogging()V#LocalStore(Ljava/lang/Object;,0)#4
synoptic.main.Main.setUpLogging()V#Get(Ljava/util/logging/Logger;,STATIC,Lsynoptic/main/Main;,logger)#5
synoptic.main.Main.setUpLogging()V#Invoke(VIRTUAL,Ljava/util/logging/Logger;,getHandlers,()[Ljava/util/logging/Handler;)#6
synoptic.main.Main.setUpLogging()V#Dup(1,0)#7
synoptic.main.Main.setUpLogging()V#LocalStore(Ljava/lang/Object;,4)#8
synoptic.main.Main.setUpLogging()V#ArrayLength()#9
synoptic.main.Main.setUpLogging()V#LocalStore(I,3)#10
synoptic.main.Main.setUpLogging()V#Constant(I,0)#11
synoptic.main.Main.setUpLogging()V#LocalStore(I,2)#12
synoptic.main.Main.setUpLogging()V#Goto(29)#13
synoptic.main.Main.setUpLogging()V#LocalLoad(I,2)#29
synoptic.main.Main.setUpLogging()V#LocalLoad(I,3)#30
synoptic.main.Main.setUpLogging()V#ConditionalBranch(I,lt,14)#31
synoptic.main.Main.setUpLogging()V#LocalLoad(Ljava/lang/Object;,4)#14
synoptic.main.Main.setUpLogging()V#LocalLoad(I,2)#15
synoptic.main.Main.setUpLogging()V#ArrayLoad(Ljava/lang/Object;)#16
synoptic.main.Main.setUpLogging()V#LocalStore(Ljava/lang/Object;,1)#17
synoptic.main.Main.setUpLogging()V#LocalLoad(Ljava/lang/Object;,1)#18
synoptic.main.Main.setUpLogging()V#Instanceof(Ljava/util/logging/ConsoleHandler;)#19
synoptic.main.Main.setUpLogging()V#Constant(I,0)#20
synoptic.main.Main.setUpLogging()V#ConditionalBranch(I,eq,25)#21
synoptic.main.Main.setUpLogging()V#LocalLoad(Ljava/lang/Object;,1)#22
synoptic.main.Main.setUpLogging()V#LocalStore(Ljava/lang/Object;,0)#23
synoptic.main.Main.setUpLogging()V#Goto(32)#24
synoptic.main.Main.setUpLogging()V#LocalLoad(Ljava/lang/Object;,0)#32
synoptic.main.Main.setUpLogging()V#Constant(L;,null)#33
synoptic.main.Main.setUpLogging()V#ConditionalBranch(Ljava/lang/Object;,ne,42)#34
synoptic.main.Main.setUpLogging()V#LocalLoad(Ljava/lang/Object;,0)#42
synoptic.main.Main.setUpLogging()V#Get(Ljava/util/logging/Level;,STATIC,Ljava/util/logging/Level;,ALL)#43
synoptic.main.Main.setUpLogging()V#Invoke(VIRTUAL,Ljava/util/logging/Handler;,setLevel,(Ljava/util/logging/Level;)V)#44
synoptic.main.Main.setUpLogging()V#Get(Lsynoptic/main/SynopticOptions;,STATIC,Lsynoptic/main/Main;,options)#45
synoptic.main.Main.setUpLogging()V#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,logLvlQuiet)#46
synoptic.main.Main.setUpLogging()V#Constant(I,0)#47
synoptic.main.Main.setUpLogging()V#ConditionalBranch(I,eq,53)#48
synoptic.main.Main.setUpLogging()V#Get(Lsynoptic/main/SynopticOptions;,STATIC,Lsynoptic/main/Main;,options)#53
synoptic.main.Main.setUpLogging()V#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,logLvlVerbose)#54
synoptic.main.Main.setUpLogging()V#Constant(I,0)#55
synoptic.main.Main.setUpLogging()V#ConditionalBranch(I,eq,61)#56
synoptic.main.Main.setUpLogging()V#Get(Lsynoptic/main/SynopticOptions;,STATIC,Lsynoptic/main/Main;,options)#61
synoptic.main.Main.setUpLogging()V#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,logLvlExtraVerbose)#62
synoptic.main.Main.setUpLogging()V#Constant(I,0)#63
synoptic.main.Main.setUpLogging()V#ConditionalBranch(I,eq,69)#64
synoptic.main.Main.setUpLogging()V#Get(Ljava/util/logging/Logger;,STATIC,Lsynoptic/main/Main;,logger)#69
synoptic.main.Main.setUpLogging()V#Get(Ljava/util/logging/Level;,STATIC,Ljava/util/logging/Level;,INFO)#70
synoptic.main.Main.setUpLogging()V#Invoke(VIRTUAL,Ljava/util/logging/Logger;,setLevel,(Ljava/util/logging/Level;)V)#71
synoptic.main.Main.setUpLogging()V#LocalLoad(Ljava/lang/Object;,0)#72
synoptic.main.Main.setUpLogging()V#New(Lsynoptic/util/BriefLogFormatter;,0)#73
synoptic.util.BriefLogFormatter.<clinit>()V#Constant(Ljava/lang/String;,"line.separator")#0
synoptic.util.BriefLogFormatter.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#1
synoptic.util.BriefLogFormatter.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lsynoptic/util/BriefLogFormatter;,lineSep)#2
synoptic.util.BriefLogFormatter.<clinit>()V#Return(V)#3
synoptic.main.Main.setUpLogging()V#Dup(1,0)#74
synoptic.main.Main.setUpLogging()V#Invoke(SPECIAL,Lsynoptic/util/BriefLogFormatter;,<init>,()V)#75
synoptic.util.BriefLogFormatter.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.util.BriefLogFormatter.<init>()V#Invoke(SPECIAL,Ljava/util/logging/Formatter;,<init>,()V)#1
synoptic.util.BriefLogFormatter.<init>()V#Return(V)#2
synoptic.main.Main.setUpLogging()V#Invoke(VIRTUAL,Ljava/util/logging/Handler;,setFormatter,(Ljava/util/logging/Formatter;)V)#76
synoptic.main.Main.setUpLogging()V#Return(V)#77
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#LocalLoad(Ljava/lang/Object;,0)#3
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,allHelp)#4
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Constant(I,0)#5
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#ConditionalBranch(I,eq,11)#6
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#LocalLoad(Ljava/lang/Object;,0)#11
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,help)#12
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Constant(I,0)#13
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#ConditionalBranch(I,eq,19)#14
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#LocalLoad(Ljava/lang/Object;,0)#19
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,version)#20
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Constant(I,0)#21
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#ConditionalBranch(I,eq,42)#22
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#LocalLoad(Ljava/lang/Object;,0)#42
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,exportAsGML)#43
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Constant(I,0)#44
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#ConditionalBranch(I,eq,51)#45
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#New(Lsynoptic/model/export/DotExportFormatter;,0)#51
synoptic.model.export.GraphExportFormatter.<clinit>()V#Constant(Ljava/lang/String;,"GraphExportFormatter")#0
synoptic.model.export.GraphExportFormatter.<clinit>()V#Invoke(STATIC,Ljava/util/logging/Logger;,getLogger,(Ljava/lang/String;)Ljava/util/logging/Logger;)#1
synoptic.model.export.GraphExportFormatter.<clinit>()V#Put(Ljava/util/logging/Logger;,STATIC,Lsynoptic/model/export/GraphExportFormatter;,logger)#2
synoptic.model.export.GraphExportFormatter.<clinit>()V#Return(V)#3
synoptic.model.export.DotExportFormatter.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@4b4f4776)#0
synoptic.model.export.DotExportFormatter.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
synoptic.model.export.DotExportFormatter.<clinit>()V#Constant(I,0)#2
synoptic.model.export.DotExportFormatter.<clinit>()V#ConditionalBranch(I,ne,6)#3
synoptic.model.export.DotExportFormatter.<clinit>()V#Constant(I,1)#4
synoptic.model.export.DotExportFormatter.<clinit>()V#Goto(7)#5
synoptic.model.export.DotExportFormatter.<clinit>()V#Put(Z,STATIC,Lsynoptic/model/export/DotExportFormatter;,$assertionsDisabled)#7
synoptic.model.export.DotExportFormatter.<clinit>()V#Return(V)#8
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Dup(1,0)#52
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Invoke(SPECIAL,Lsynoptic/model/export/DotExportFormatter;,<init>,()V)#53
synoptic.model.export.DotExportFormatter.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.export.DotExportFormatter.<init>()V#Invoke(SPECIAL,Lsynoptic/model/export/GraphExportFormatter;,<init>,()V)#1
synoptic.model.export.GraphExportFormatter.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.export.GraphExportFormatter.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
synoptic.model.export.GraphExportFormatter.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.model.export.GraphExportFormatter.<init>()V#Constant(I,0)#3
synoptic.model.export.GraphExportFormatter.<init>()V#Put(Z,NONSTATIC,Lsynoptic/model/export/GraphExportFormatter;,reportedColorsDeficiency)#4
synoptic.model.export.GraphExportFormatter.<init>()V#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.model.export.GraphExportFormatter.<init>()V#New(Ljava/util/LinkedList;,0)#6
synoptic.model.export.GraphExportFormatter.<init>()V#Dup(1,0)#7
synoptic.model.export.GraphExportFormatter.<init>()V#Constant(I,9)#8
synoptic.model.export.GraphExportFormatter.<init>()V#New([Ljava/lang/String;,1)#9
synoptic.model.export.GraphExportFormatter.<init>()V#Dup(1,0)#10
synoptic.model.export.GraphExportFormatter.<init>()V#Constant(I,0)#11
synoptic.model.export.GraphExportFormatter.<init>()V#Constant(Ljava/lang/String;,"darkorange1")#12
synoptic.model.export.GraphExportFormatter.<init>()V#ArrayStore(Ljava/lang/Object;)#13
synoptic.model.export.GraphExportFormatter.<init>()V#Dup(1,0)#14
synoptic.model.export.GraphExportFormatter.<init>()V#Constant(I,1)#15
synoptic.model.export.GraphExportFormatter.<init>()V#Constant(Ljava/lang/String;,"goldenrod")#16
synoptic.model.export.GraphExportFormatter.<init>()V#ArrayStore(Ljava/lang/Object;)#17
synoptic.model.export.GraphExportFormatter.<init>()V#Dup(1,0)#18
synoptic.model.export.GraphExportFormatter.<init>()V#Constant(I,2)#19
synoptic.model.export.GraphExportFormatter.<init>()V#Constant(Ljava/lang/String;,"darkseagreen")#20
synoptic.model.export.GraphExportFormatter.<init>()V#ArrayStore(Ljava/lang/Object;)#21
synoptic.model.export.GraphExportFormatter.<init>()V#Dup(1,0)#22
synoptic.model.export.GraphExportFormatter.<init>()V#Constant(I,3)#23
synoptic.model.export.GraphExportFormatter.<init>()V#Constant(Ljava/lang/String;,"green3")#24
synoptic.model.export.GraphExportFormatter.<init>()V#ArrayStore(Ljava/lang/Object;)#25
synoptic.model.export.GraphExportFormatter.<init>()V#Dup(1,0)#26
synoptic.model.export.GraphExportFormatter.<init>()V#Constant(I,4)#27
synoptic.model.export.GraphExportFormatter.<init>()V#Constant(Ljava/lang/String;,"gray66")#28
synoptic.model.export.GraphExportFormatter.<init>()V#ArrayStore(Ljava/lang/Object;)#29
synoptic.model.export.GraphExportFormatter.<init>()V#Dup(1,0)#30
synoptic.model.export.GraphExportFormatter.<init>()V#Constant(I,5)#31
synoptic.model.export.GraphExportFormatter.<init>()V#Constant(Ljava/lang/String;,"indianred")#32
synoptic.model.export.GraphExportFormatter.<init>()V#ArrayStore(Ljava/lang/Object;)#33
synoptic.model.export.GraphExportFormatter.<init>()V#Dup(1,0)#34
synoptic.model.export.GraphExportFormatter.<init>()V#Constant(I,6)#35
synoptic.model.export.GraphExportFormatter.<init>()V#Constant(Ljava/lang/String;,"indigo")#36
synoptic.model.export.GraphExportFormatter.<init>()V#ArrayStore(Ljava/lang/Object;)#37
synoptic.model.export.GraphExportFormatter.<init>()V#Dup(1,0)#38
synoptic.model.export.GraphExportFormatter.<init>()V#Constant(I,7)#39
synoptic.model.export.GraphExportFormatter.<init>()V#Constant(Ljava/lang/String;,"yellow1")#40
synoptic.model.export.GraphExportFormatter.<init>()V#ArrayStore(Ljava/lang/Object;)#41
synoptic.model.export.GraphExportFormatter.<init>()V#Dup(1,0)#42
synoptic.model.export.GraphExportFormatter.<init>()V#Constant(I,8)#43
synoptic.model.export.GraphExportFormatter.<init>()V#Constant(Ljava/lang/String;,"thistle")#44
synoptic.model.export.GraphExportFormatter.<init>()V#ArrayStore(Ljava/lang/Object;)#45
synoptic.model.export.GraphExportFormatter.<init>()V#Invoke(STATIC,Ljava/util/Arrays;,asList,([Ljava/lang/Object;)Ljava/util/List;)#46
synoptic.model.export.GraphExportFormatter.<init>()V#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,(Ljava/util/Collection;)V)#47
synoptic.model.export.GraphExportFormatter.<init>()V#Put(Ljava/util/List;,NONSTATIC,Lsynoptic/model/export/GraphExportFormatter;,possibleColors)#48
synoptic.model.export.GraphExportFormatter.<init>()V#LocalLoad(Ljava/lang/Object;,0)#49
synoptic.model.export.GraphExportFormatter.<init>()V#New(Ljava/util/LinkedHashMap;,0)#50
synoptic.model.export.GraphExportFormatter.<init>()V#Dup(1,0)#51
synoptic.model.export.GraphExportFormatter.<init>()V#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#52
synoptic.model.export.GraphExportFormatter.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/export/GraphExportFormatter;,relationColors)#53
synoptic.model.export.GraphExportFormatter.<init>()V#LocalLoad(Ljava/lang/Object;,0)#54
synoptic.model.export.GraphExportFormatter.<init>()V#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/export/GraphExportFormatter;,relationColors)#55
synoptic.model.export.GraphExportFormatter.<init>()V#Constant(Ljava/lang/String;,"t")#56
synoptic.model.export.GraphExportFormatter.<init>()V#Constant(Ljava/lang/String;,"black")#57
synoptic.model.export.GraphExportFormatter.<init>()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#58
synoptic.model.export.GraphExportFormatter.<init>()V#Pop(1)#59
synoptic.model.export.GraphExportFormatter.<init>()V#Return(V)#60
synoptic.model.export.DotExportFormatter.<init>()V#Return(V)#2
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Put(Lsynoptic/model/export/GraphExportFormatter;,STATIC,Lsynoptic/main/Main;,graphExportFormatter)#54
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#LocalLoad(Ljava/lang/Object;,0)#55
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,runAllTests)#56
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Constant(I,0)#57
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#ConditionalBranch(I,eq,70)#58
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#LocalLoad(Ljava/lang/Object;,0)#70
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,runTests)#71
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Constant(I,0)#72
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#ConditionalBranch(I,eq,79)#73
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#LocalLoad(Ljava/lang/Object;,0)#79
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/main/SynopticOptions;,logFilenames)#80
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Invoke(INTERFACE,Ljava/util/List;,size,()I)#81
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Constant(I,0)#82
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#ConditionalBranch(I,ne,96)#83
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#LocalLoad(Ljava/lang/Object;,0)#96
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,dumpIntermediateStages)#97
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Constant(I,0)#98
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#ConditionalBranch(I,eq,116)#99
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#LocalLoad(Ljava/lang/Object;,0)#116
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,logLvlVerbose)#117
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Constant(I,0)#118
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#ConditionalBranch(I,ne,124)#119
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#LocalLoad(Ljava/lang/Object;,0)#120
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,logLvlExtraVerbose)#121
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Constant(I,0)#122
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#ConditionalBranch(I,eq,126)#123
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#New(Ljava/util/Random;,0)#126
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Dup(1,0)#127
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#LocalLoad(Ljava/lang/Object;,0)#128
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Get(Ljava/lang/Long;,NONSTATIC,Lsynoptic/main/SynopticOptions;,randomSeed)#129
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Invoke(VIRTUAL,Ljava/lang/Long;,longValue,()J)#130
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Invoke(SPECIAL,Ljava/util/Random;,<init>,(J)V)#131
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Put(Ljava/util/Random;,STATIC,Lsynoptic/main/Main;,random)#132
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Get(Ljava/util/logging/Logger;,STATIC,Lsynoptic/main/Main;,logger)#133
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#New(Ljava/lang/StringBuilder;,0)#134
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Dup(1,0)#135
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Constant(Ljava/lang/String;,"Using random seed: ")#136
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#137
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#LocalLoad(Ljava/lang/Object;,0)#138
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Get(Ljava/lang/Long;,NONSTATIC,Lsynoptic/main/SynopticOptions;,randomSeed)#139
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#140
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#141
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Invoke(VIRTUAL,Ljava/util/logging/Logger;,info,(Ljava/lang/String;)V)#142
synoptic.util.BriefLogFormatter.format(Ljava/util/logging/LogRecord;)Ljava/lang/String;#New(Ljava/lang/StringBuilder;,0)#0
synoptic.util.BriefLogFormatter.format(Ljava/util/logging/LogRecord;)Ljava/lang/String;#Dup(1,0)#1
synoptic.util.BriefLogFormatter.format(Ljava/util/logging/LogRecord;)Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#2
synoptic.util.BriefLogFormatter.format(Ljava/util/logging/LogRecord;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#3
synoptic.util.BriefLogFormatter.format(Ljava/util/logging/LogRecord;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/util/logging/LogRecord;,getLevel,()Ljava/util/logging/Level;)#4
synoptic.util.BriefLogFormatter.format(Ljava/util/logging/LogRecord;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#5
synoptic.util.BriefLogFormatter.format(Ljava/util/logging/LogRecord;)Ljava/lang/String;#Constant(Ljava/lang/String;,": ")#6
synoptic.util.BriefLogFormatter.format(Ljava/util/logging/LogRecord;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#7
synoptic.util.BriefLogFormatter.format(Ljava/util/logging/LogRecord;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#8
synoptic.util.BriefLogFormatter.format(Ljava/util/logging/LogRecord;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/util/logging/LogRecord;,getMessage,()Ljava/lang/String;)#9
synoptic.util.BriefLogFormatter.format(Ljava/util/logging/LogRecord;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#10
synoptic.util.BriefLogFormatter.format(Ljava/util/logging/LogRecord;)Ljava/lang/String;#Constant(I,32)#11
synoptic.util.BriefLogFormatter.format(Ljava/util/logging/LogRecord;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(C)Ljava/lang/StringBuilder;)#12
synoptic.util.BriefLogFormatter.format(Ljava/util/logging/LogRecord;)Ljava/lang/String;#Get(Ljava/lang/String;,STATIC,Lsynoptic/util/BriefLogFormatter;,lineSep)#13
synoptic.util.BriefLogFormatter.format(Ljava/util/logging/LogRecord;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#14
synoptic.util.BriefLogFormatter.format(Ljava/util/logging/LogRecord;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,2)#15
synoptic.util.BriefLogFormatter.format(Ljava/util/logging/LogRecord;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#16
synoptic.util.BriefLogFormatter.format(Ljava/util/logging/LogRecord;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#17
synoptic.util.BriefLogFormatter.format(Ljava/util/logging/LogRecord;)Ljava/lang/String;#Return(Ljava/lang/Object;)#18
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#New(Lsynoptic/main/Main;,0)#143
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Dup(1,0)#144
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Invoke(SPECIAL,Lsynoptic/main/Main;,<init>,()V)#145
synoptic.main.Main.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.main.Main.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
synoptic.main.Main.<init>()V#Return(V)#2
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#LocalStore(Ljava/lang/Object;,1)#146
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#LocalLoad(Ljava/lang/Object;,1)#147
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Return(Ljava/lang/Object;)#148
synoptic.main.Main.processArgs([Ljava/lang/String;)Lsynoptic/main/Main;#Return(Ljava/lang/Object;)#7
synoptic.main.Main.main([Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,1)#2
synoptic.main.Main.main([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#3
synoptic.main.Main.main([Ljava/lang/String;)V#Constant(L;,null)#4
synoptic.main.Main.main([Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,ne,7)#5
synoptic.main.Main.main([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#7
synoptic.main.Main.main([Ljava/lang/String;)V#Invoke(VIRTUAL,Lsynoptic/main/Main;,call,()Ljava/lang/Integer;)#8
synoptic.main.Main.call()Ljava/lang/Integer;#Get(Ljava/util/Locale;,STATIC,Ljava/util/Locale;,US)#0
synoptic.main.Main.call()Ljava/lang/Integer;#Invoke(STATIC,Ljava/util/Locale;,setDefault,(Ljava/util/Locale;)V)#1
synoptic.main.Main.call()Ljava/lang/Integer;#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.main.Main.call()Ljava/lang/Integer;#Invoke(VIRTUAL,Lsynoptic/main/Main;,createInitialPartitionGraph,()Lsynoptic/model/PartitionGraph;)#3
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#New(Lsynoptic/main/TraceParser;,0)#0
synoptic.main.TraceParser.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@65baeace)#0
synoptic.main.TraceParser.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
synoptic.main.TraceParser.<clinit>()V#Constant(I,0)#2
synoptic.main.TraceParser.<clinit>()V#ConditionalBranch(I,ne,6)#3
synoptic.main.TraceParser.<clinit>()V#Constant(I,1)#4
synoptic.main.TraceParser.<clinit>()V#Goto(7)#5
synoptic.main.TraceParser.<clinit>()V#Put(Z,STATIC,Lsynoptic/main/TraceParser;,$assertionsDisabled)#7
synoptic.main.TraceParser.<clinit>()V#Constant(Ljava/lang/String;,"Parser Logger")#8
synoptic.main.TraceParser.<clinit>()V#Invoke(STATIC,Ljava/util/logging/Logger;,getLogger,(Ljava/lang/String;)Ljava/util/logging/Logger;)#9
synoptic.main.TraceParser.<clinit>()V#Put(Ljava/util/logging/Logger;,STATIC,Lsynoptic/main/TraceParser;,logger)#10
synoptic.main.TraceParser.<clinit>()V#Constant(Ljava/lang/String;,"\\;\\;")#11
synoptic.main.TraceParser.<clinit>()V#Invoke(STATIC,Ljava/util/regex/Pattern;,compile,(Ljava/lang/String;)Ljava/util/regex/Pattern;)#12
synoptic.main.TraceParser.<clinit>()V#Put(Ljava/util/regex/Pattern;,STATIC,Lsynoptic/main/TraceParser;,matchEscapedSeparator)#13
synoptic.main.TraceParser.<clinit>()V#Constant(Ljava/lang/String;,"\(\?<(\w*)=>([^\)]*)\)")#14
synoptic.main.TraceParser.<clinit>()V#Invoke(STATIC,Ljava/util/regex/Pattern;,compile,(Ljava/lang/String;)Ljava/util/regex/Pattern;)#15
synoptic.main.TraceParser.<clinit>()V#Put(Ljava/util/regex/Pattern;,STATIC,Lsynoptic/main/TraceParser;,matchAssign)#16
synoptic.main.TraceParser.<clinit>()V#Constant(Ljava/lang/String;,"\(\?<\+\+(\w*)>\)")#17
synoptic.main.TraceParser.<clinit>()V#Invoke(STATIC,Ljava/util/regex/Pattern;,compile,(Ljava/lang/String;)Ljava/util/regex/Pattern;)#18
synoptic.main.TraceParser.<clinit>()V#Put(Ljava/util/regex/Pattern;,STATIC,Lsynoptic/main/TraceParser;,matchPreIncrement)#19
synoptic.main.TraceParser.<clinit>()V#Constant(Ljava/lang/String;,"\(\?<(\w*)\+\+>\)")#20
synoptic.main.TraceParser.<clinit>()V#Invoke(STATIC,Ljava/util/regex/Pattern;,compile,(Ljava/lang/String;)Ljava/util/regex/Pattern;)#21
synoptic.main.TraceParser.<clinit>()V#Put(Ljava/util/regex/Pattern;,STATIC,Lsynoptic/main/TraceParser;,matchPostIncrement)#22
synoptic.main.TraceParser.<clinit>()V#Constant(Ljava/lang/String;,"\(\?<((\w|\*|\-)*)>\)")#23
synoptic.main.TraceParser.<clinit>()V#Invoke(STATIC,Ljava/util/regex/Pattern;,compile,(Ljava/lang/String;)Ljava/util/regex/Pattern;)#24
synoptic.main.TraceParser.<clinit>()V#Put(Ljava/util/regex/Pattern;,STATIC,Lsynoptic/main/TraceParser;,matchDefault)#25
synoptic.main.TraceParser.<clinit>()V#Constant(I,1)#26
synoptic.main.TraceParser.<clinit>()V#New([Ljava/lang/String;,1)#27
synoptic.main.TraceParser.<clinit>()V#Dup(1,0)#28
synoptic.main.TraceParser.<clinit>()V#Constant(I,0)#29
synoptic.main.TraceParser.<clinit>()V#Constant(Ljava/lang/String;,"TYPE")#30
synoptic.main.TraceParser.<clinit>()V#ArrayStore(Ljava/lang/Object;)#31
synoptic.main.TraceParser.<clinit>()V#Invoke(STATIC,Ljava/util/Arrays;,asList,([Ljava/lang/Object;)Ljava/util/List;)#32
synoptic.main.TraceParser.<clinit>()V#Put(Ljava/util/List;,STATIC,Lsynoptic/main/TraceParser;,requiredGroups)#33
synoptic.main.TraceParser.<clinit>()V#Constant(I,4)#34
synoptic.main.TraceParser.<clinit>()V#New([Ljava/lang/String;,1)#35
synoptic.main.TraceParser.<clinit>()V#Dup(1,0)#36
synoptic.main.TraceParser.<clinit>()V#Constant(I,0)#37
synoptic.main.TraceParser.<clinit>()V#Constant(Ljava/lang/String;,"TIME")#38
synoptic.main.TraceParser.<clinit>()V#ArrayStore(Ljava/lang/Object;)#39
synoptic.main.TraceParser.<clinit>()V#Dup(1,0)#40
synoptic.main.TraceParser.<clinit>()V#Constant(I,1)#41
synoptic.main.TraceParser.<clinit>()V#Constant(Ljava/lang/String;,"VTIME")#42
synoptic.main.TraceParser.<clinit>()V#ArrayStore(Ljava/lang/Object;)#43
synoptic.main.TraceParser.<clinit>()V#Dup(1,0)#44
synoptic.main.TraceParser.<clinit>()V#Constant(I,2)#45
synoptic.main.TraceParser.<clinit>()V#Constant(Ljava/lang/String;,"FTIME")#46
synoptic.main.TraceParser.<clinit>()V#ArrayStore(Ljava/lang/Object;)#47
synoptic.main.TraceParser.<clinit>()V#Dup(1,0)#48
synoptic.main.TraceParser.<clinit>()V#Constant(I,3)#49
synoptic.main.TraceParser.<clinit>()V#Constant(Ljava/lang/String;,"DTIME")#50
synoptic.main.TraceParser.<clinit>()V#ArrayStore(Ljava/lang/Object;)#51
synoptic.main.TraceParser.<clinit>()V#Invoke(STATIC,Ljava/util/Arrays;,asList,([Ljava/lang/Object;)Ljava/util/List;)#52
synoptic.main.TraceParser.<clinit>()V#Put(Ljava/util/List;,STATIC,Lsynoptic/main/TraceParser;,validTimeGroups)#53
synoptic.main.TraceParser.<clinit>()V#Constant(I,4)#54
synoptic.main.TraceParser.<clinit>()V#New([Ljava/lang/String;,1)#55
synoptic.main.TraceParser.<clinit>()V#Dup(1,0)#56
synoptic.main.TraceParser.<clinit>()V#Constant(I,0)#57
synoptic.main.TraceParser.<clinit>()V#Constant(Ljava/lang/String;,"LTIME")#58
synoptic.main.TraceParser.<clinit>()V#ArrayStore(Ljava/lang/Object;)#59
synoptic.main.TraceParser.<clinit>()V#Dup(1,0)#60
synoptic.main.TraceParser.<clinit>()V#Constant(I,1)#61
synoptic.main.TraceParser.<clinit>()V#Constant(Ljava/lang/String;,"TIME")#62
synoptic.main.TraceParser.<clinit>()V#ArrayStore(Ljava/lang/Object;)#63
synoptic.main.TraceParser.<clinit>()V#Dup(1,0)#64
synoptic.main.TraceParser.<clinit>()V#Constant(I,2)#65
synoptic.main.TraceParser.<clinit>()V#Constant(Ljava/lang/String;,"FTIME")#66
synoptic.main.TraceParser.<clinit>()V#ArrayStore(Ljava/lang/Object;)#67
synoptic.main.TraceParser.<clinit>()V#Dup(1,0)#68
synoptic.main.TraceParser.<clinit>()V#Constant(I,3)#69
synoptic.main.TraceParser.<clinit>()V#Constant(Ljava/lang/String;,"DTIME")#70
synoptic.main.TraceParser.<clinit>()V#ArrayStore(Ljava/lang/Object;)#71
synoptic.main.TraceParser.<clinit>()V#Invoke(STATIC,Ljava/util/Arrays;,asList,([Ljava/lang/Object;)Ljava/util/List;)#72
synoptic.main.TraceParser.<clinit>()V#Put(Ljava/util/List;,STATIC,Lsynoptic/main/TraceParser;,totallyOrderedTimeGroups)#73
synoptic.main.TraceParser.<clinit>()V#Return(V)#74
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Dup(1,0)#1
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Lsynoptic/main/SynopticOptions;,STATIC,Lsynoptic/main/Main;,options)#2
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/main/SynopticOptions;,regExps)#3
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Lsynoptic/main/SynopticOptions;,STATIC,Lsynoptic/main/Main;,options)#4
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/SynopticOptions;,partitionRegExp)#5
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Lsynoptic/main/SynopticOptions;,STATIC,Lsynoptic/main/Main;,options)#6
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/SynopticOptions;,separatorRegExp)#7
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Invoke(SPECIAL,Lsynoptic/main/TraceParser;,<init>,(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V)#8
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Invoke(SPECIAL,Lsynoptic/main/TraceParser;,<init>,()V)#1
synoptic.main.TraceParser.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.main.TraceParser.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
synoptic.main.TraceParser.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.main.TraceParser.<init>()V#New(Ljava/util/LinkedHashMap;,0)#3
synoptic.main.TraceParser.<init>()V#Dup(1,0)#4
synoptic.main.TraceParser.<init>()V#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#5
synoptic.main.TraceParser.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lsynoptic/main/TraceParser;,partitions)#6
synoptic.main.TraceParser.<init>()V#LocalLoad(Ljava/lang/Object;,0)#7
synoptic.main.TraceParser.<init>()V#New(Ljava/util/HashMap;,0)#8
synoptic.main.TraceParser.<init>()V#Dup(1,0)#9
synoptic.main.TraceParser.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#10
synoptic.main.TraceParser.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lsynoptic/main/TraceParser;,AllEventRelations)#11
synoptic.main.TraceParser.<init>()V#LocalLoad(Ljava/lang/Object;,0)#12
synoptic.main.TraceParser.<init>()V#Constant(I,0)#13
synoptic.main.TraceParser.<init>()V#Put(Z,NONSTATIC,Lsynoptic/main/TraceParser;,parsePIDs)#14
synoptic.main.TraceParser.<init>()V#LocalLoad(Ljava/lang/Object;,0)#15
synoptic.main.TraceParser.<init>()V#Constant(L;,null)#16
synoptic.main.TraceParser.<init>()V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/TraceParser;,selectedTimeGroup)#17
synoptic.main.TraceParser.<init>()V#LocalLoad(Ljava/lang/Object;,0)#18
synoptic.main.TraceParser.<init>()V#New(Ljava/util/ArrayList;,0)#19
synoptic.main.TraceParser.<init>()V#Dup(1,0)#20
synoptic.main.TraceParser.<init>()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#21
synoptic.main.TraceParser.<init>()V#Put(Ljava/util/List;,NONSTATIC,Lsynoptic/main/TraceParser;,parsers)#22
synoptic.main.TraceParser.<init>()V#LocalLoad(Ljava/lang/Object;,0)#23
synoptic.main.TraceParser.<init>()V#New(Ljava/util/ArrayList;,0)#24
synoptic.main.TraceParser.<init>()V#Dup(1,0)#25
synoptic.main.TraceParser.<init>()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#26
synoptic.main.TraceParser.<init>()V#Put(Ljava/util/List;,NONSTATIC,Lsynoptic/main/TraceParser;,constantFields)#27
synoptic.main.TraceParser.<init>()V#LocalLoad(Ljava/lang/Object;,0)#28
synoptic.main.TraceParser.<init>()V#New(Ljava/util/ArrayList;,0)#29
synoptic.main.TraceParser.<init>()V#Dup(1,0)#30
synoptic.main.TraceParser.<init>()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#31
synoptic.main.TraceParser.<init>()V#Put(Ljava/util/List;,NONSTATIC,Lsynoptic/main/TraceParser;,incrementors)#32
synoptic.main.TraceParser.<init>()V#LocalLoad(Ljava/lang/Object;,0)#33
synoptic.main.TraceParser.<init>()V#New(Lsynoptic/util/NamedSubstitution;,0)#34
synoptic.util.NamedSubstitution.<clinit>()V#Constant(Ljava/lang/String;,"\\k<(\w*)>")#0
synoptic.util.NamedSubstitution.<clinit>()V#Invoke(STATIC,Ljava/util/regex/Pattern;,compile,(Ljava/lang/String;)Ljava/util/regex/Pattern;)#1
synoptic.util.NamedSubstitution.<clinit>()V#Put(Ljava/util/regex/Pattern;,STATIC,Lsynoptic/util/NamedSubstitution;,matchReference)#2
synoptic.util.NamedSubstitution.<clinit>()V#Return(V)#3
synoptic.main.TraceParser.<init>()V#Dup(1,0)#35
synoptic.main.TraceParser.<init>()V#Constant(Ljava/lang/String;,"")#36
synoptic.main.TraceParser.<init>()V#Invoke(SPECIAL,Lsynoptic/util/NamedSubstitution;,<init>,(Ljava/lang/String;)V)#37
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#New(Ljava/util/ArrayList;,0)#3
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Dup(1,0)#4
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#5
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Put(Ljava/util/List;,NONSTATIC,Lsynoptic/util/NamedSubstitution;,contents)#6
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Get(Ljava/util/regex/Pattern;,STATIC,Lsynoptic/util/NamedSubstitution;,matchReference)#7
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#8
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/regex/Pattern;,matcher,(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;)#9
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,2)#10
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Constant(I,0)#11
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#LocalStore(I,3)#12
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Goto(35)#13
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#35
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/regex/Matcher;,find,()Z)#36
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Constant(I,0)#37
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#ConditionalBranch(I,ne,14)#38
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#39
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/util/NamedSubstitution;,contents)#40
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#41
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#LocalLoad(I,3)#42
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#43
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#44
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,substring,(II)Ljava/lang/String;)#45
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#46
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Pop(1)#47
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Return(V)#48
synoptic.main.TraceParser.<init>()V#Put(Lsynoptic/util/NamedSubstitution;,NONSTATIC,Lsynoptic/main/TraceParser;,filter)#38
synoptic.main.TraceParser.<init>()V#Constant(I,0)#39
synoptic.main.TraceParser.<init>()V#Put(I,STATIC,Lsynoptic/main/TraceParser;,nextTraceID)#40
synoptic.main.TraceParser.<init>()V#LocalLoad(Ljava/lang/Object;,0)#41
synoptic.main.TraceParser.<init>()V#New(Ljava/util/LinkedHashMap;,0)#42
synoptic.main.TraceParser.<init>()V#Dup(1,0)#43
synoptic.main.TraceParser.<init>()V#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#44
synoptic.main.TraceParser.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lsynoptic/main/TraceParser;,partitionNameToTraceID)#45
synoptic.main.TraceParser.<init>()V#Return(V)#46
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Get(Z,STATIC,Lsynoptic/main/TraceParser;,$assertionsDisabled)#2
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Constant(I,0)#3
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#ConditionalBranch(I,ne,12)#4
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Get(Z,STATIC,Lsynoptic/main/TraceParser;,$assertionsDisabled)#12
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Constant(I,0)#13
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#ConditionalBranch(I,ne,22)#14
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Get(Ljava/util/logging/Logger;,STATIC,Lsynoptic/main/TraceParser;,logger)#22
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Constant(Ljava/lang/String;,"Setting up the log file parser.")#23
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/logging/Logger;,fine,(Ljava/lang/String;)V)#24
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#25
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Constant(Ljava/lang/String;,"\k<FILE>")#26
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#27
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Constant(I,0)#28
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#ConditionalBranch(I,eq,33)#29
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#33
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,isEmpty,()Z)#34
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Constant(I,0)#35
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#ConditionalBranch(I,ne,65)#36
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#37
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#38
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,5)#39
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Goto(57)#40
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,5)#57
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#58
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Constant(I,0)#59
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#ConditionalBranch(I,ne,41)#60
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,5)#41
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#42
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#CheckCast(Ljava/lang/String;)#43
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,4)#44
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Get(Ljava/util/logging/Logger;,STATIC,Lsynoptic/main/TraceParser;,logger)#45
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#New(Ljava/lang/StringBuilder;,0)#46
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Dup(1,0)#47
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Constant(Ljava/lang/String;,"\	addRegex with exp:")#48
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#49
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,4)#50
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#51
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#52
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/logging/Logger;,fine,(Ljava/lang/String;)V)#53
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#54
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,4)#55
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Invoke(VIRTUAL,Lsynoptic/main/TraceParser;,addRegex,(Ljava/lang/String;)V)#56
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#0
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(L;,null)#1
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,ne,8)#2
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Get(Ljava/util/logging/Logger;,STATIC,Lsynoptic/main/TraceParser;,logger)#8
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#New(Ljava/lang/StringBuilder;,0)#9
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Dup(1,0)#10
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"entering addRegex with: ")#11
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#12
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#13
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#14
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#15
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/logging/Logger;,fine,(Ljava/lang/String;)V)#16
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Get(Ljava/util/regex/Pattern;,STATIC,Lsynoptic/main/TraceParser;,matchEscapedSeparator)#17
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#18
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/regex/Pattern;,matcher,(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;)#19
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(Ljava/lang/String;,";;")#20
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/regex/Matcher;,replaceAll,(Ljava/lang/String;)Ljava/lang/String;)#21
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,2)#22
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Get(Ljava/util/regex/Pattern;,STATIC,Lsynoptic/main/TraceParser;,matchAssign)#23
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#24
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/regex/Pattern;,matcher,(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;)#25
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,3)#26
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#New(Ljava/util/LinkedHashMap;,0)#27
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Dup(1,0)#28
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#29
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,4)#30
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#New(Ljava/util/LinkedList;,0)#31
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Dup(1,0)#32
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#33
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,5)#34
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(I,0)#35
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalStore(I,6)#36
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Goto(155)#37
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#155
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/regex/Matcher;,find,()Z)#156
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(I,0)#157
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#ConditionalBranch(I,ne,38)#158
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,5)#159
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#160
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(STATIC,Lsynoptic/main/TraceParser;,detectListDuplicates,(Ljava/util/List;Ljava/lang/String;)V)#161
synoptic.main.TraceParser.detectListDuplicates(Ljava/util/List;Ljava/lang/String;)V#New(Ljava/util/LinkedHashSet;,0)#0
synoptic.main.TraceParser.detectListDuplicates(Ljava/util/List;Ljava/lang/String;)V#Dup(1,0)#1
synoptic.main.TraceParser.detectListDuplicates(Ljava/util/List;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.main.TraceParser.detectListDuplicates(Ljava/util/List;Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/util/LinkedHashSet;,<init>,(Ljava/util/Collection;)V)#3
synoptic.main.TraceParser.detectListDuplicates(Ljava/util/List;Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,2)#4
synoptic.main.TraceParser.detectListDuplicates(Ljava/util/List;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#5
synoptic.main.TraceParser.detectListDuplicates(Ljava/util/List;Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Set;,size,()I)#6
synoptic.main.TraceParser.detectListDuplicates(Ljava/util/List;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#7
synoptic.main.TraceParser.detectListDuplicates(Ljava/util/List;Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#8
synoptic.main.TraceParser.detectListDuplicates(Ljava/util/List;Ljava/lang/String;)V#ConditionalBranch(I,ne,11)#9
synoptic.main.TraceParser.detectListDuplicates(Ljava/util/List;Ljava/lang/String;)V#Return(V)#10
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#162
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/main/TraceParser;,constantFields)#163
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#164
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/main/TraceParser;,parsers)#165
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#166
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,4)#167
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,add,(ILjava/lang/Object;)V)#168
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#169
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"")#170
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/regex/Matcher;,replaceAll,(Ljava/lang/String;)Ljava/lang/String;)#171
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,2)#172
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Get(Ljava/util/regex/Pattern;,STATIC,Lsynoptic/main/TraceParser;,matchPreIncrement)#173
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#174
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/regex/Pattern;,matcher,(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;)#175
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,3)#176
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#New(Ljava/util/LinkedHashMap;,0)#177
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Dup(1,0)#178
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#179
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,7)#180
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Goto(190)#181
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#190
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/regex/Matcher;,find,()Z)#191
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(I,0)#192
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#ConditionalBranch(I,ne,182)#193
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#194
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"")#195
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/regex/Matcher;,replaceAll,(Ljava/lang/String;)Ljava/lang/String;)#196
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,2)#197
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Get(Ljava/util/regex/Pattern;,STATIC,Lsynoptic/main/TraceParser;,matchPostIncrement)#198
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#199
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/regex/Pattern;,matcher,(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;)#200
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,3)#201
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Goto(211)#202
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#211
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/regex/Matcher;,find,()Z)#212
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(I,0)#213
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#ConditionalBranch(I,ne,203)#214
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#215
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"")#216
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/regex/Matcher;,replaceAll,(Ljava/lang/String;)Ljava/lang/String;)#217
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,2)#218
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#219
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/main/TraceParser;,incrementors)#220
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,7)#221
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#222
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Pop(1)#223
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Get(Ljava/util/regex/Pattern;,STATIC,Lsynoptic/main/TraceParser;,matchDefault)#224
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#225
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/regex/Pattern;,matcher,(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;)#226
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,3)#227
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#New(Ljava/lang/StringBuffer;,0)#228
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Dup(1,0)#229
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/StringBuffer;,<init>,()V)#230
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,8)#231
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(I,1)#232
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalStore(I,9)#233
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Goto(251)#234
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#251
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/regex/Matcher;,find,()Z)#252
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(I,0)#253
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#ConditionalBranch(I,ne,235)#254
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(I,9)#235
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(I,0)#236
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#ConditionalBranch(I,eq,246)#237
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#238
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,8)#239
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"(?:\\s*(?<$1>\\S+)\\s*)")#240
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/regex/Matcher;,appendReplacement,(Ljava/lang/StringBuffer;Ljava/lang/String;)Ljava/util/regex/Matcher;)#241
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Pop(1)#242
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(I,0)#243
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalStore(I,9)#244
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Goto(251)#245
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#255
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,8)#256
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/regex/Matcher;,appendTail,(Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;)#257
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Pop(1)#258
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,8)#259
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,toString,()Ljava/lang/String;)#260
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,2)#261
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(L;,null)#262
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,10)#263
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#264
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(STATIC,Lsynoptic/util/NamedPattern;,compile,(Ljava/lang/String;)Lsynoptic/util/NamedPattern;)#265
synoptic.util.NamedPattern.<clinit>()V#Constant(Ljava/lang/String;,"\(\?<((\w|\*|\-)+)>")#0
synoptic.util.NamedPattern.<clinit>()V#Invoke(STATIC,Ljava/util/regex/Pattern;,compile,(Ljava/lang/String;)Ljava/util/regex/Pattern;)#1
synoptic.util.NamedPattern.<clinit>()V#Put(Ljava/util/regex/Pattern;,STATIC,Lsynoptic/util/NamedPattern;,NAMED_GROUP_PATTERN)#2
synoptic.util.NamedPattern.<clinit>()V#Constant(Ljava/lang/String;,"\(\?<")#3
synoptic.util.NamedPattern.<clinit>()V#Invoke(STATIC,Ljava/util/regex/Pattern;,compile,(Ljava/lang/String;)Ljava/util/regex/Pattern;)#4
synoptic.util.NamedPattern.<clinit>()V#Put(Ljava/util/regex/Pattern;,STATIC,Lsynoptic/util/NamedPattern;,NAMED_GROUP_PREFIX)#5
synoptic.util.NamedPattern.<clinit>()V#Return(V)#6
synoptic.util.NamedPattern.compile(Ljava/lang/String;)Lsynoptic/util/NamedPattern;#New(Lsynoptic/util/NamedPattern;,0)#0
synoptic.util.NamedPattern.compile(Ljava/lang/String;)Lsynoptic/util/NamedPattern;#Dup(1,0)#1
synoptic.util.NamedPattern.compile(Ljava/lang/String;)Lsynoptic/util/NamedPattern;#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.util.NamedPattern.compile(Ljava/lang/String;)Lsynoptic/util/NamedPattern;#Constant(I,0)#3
synoptic.util.NamedPattern.compile(Ljava/lang/String;)Lsynoptic/util/NamedPattern;#Invoke(SPECIAL,Lsynoptic/util/NamedPattern;,<init>,(Ljava/lang/String;I)V)#4
synoptic.util.NamedPattern.<init>(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.util.NamedPattern.<init>(Ljava/lang/String;I)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
synoptic.util.NamedPattern.<init>(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.util.NamedPattern.<init>(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,1)#3
synoptic.util.NamedPattern.<init>(Ljava/lang/String;I)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/util/NamedPattern;,namedPattern)#4
synoptic.util.NamedPattern.<init>(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.util.NamedPattern.<init>(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,1)#6
synoptic.util.NamedPattern.<init>(Ljava/lang/String;I)V#Invoke(STATIC,Lsynoptic/util/NamedPattern;,buildStandardPattern,(Ljava/lang/String;)Ljava/util/regex/Pattern;)#7
synoptic.util.NamedPattern.buildStandardPattern(Ljava/lang/String;)Ljava/util/regex/Pattern;#Get(Ljava/util/regex/Pattern;,STATIC,Lsynoptic/util/NamedPattern;,NAMED_GROUP_PATTERN)#0
synoptic.util.NamedPattern.buildStandardPattern(Ljava/lang/String;)Ljava/util/regex/Pattern;#LocalLoad(Ljava/lang/Object;,0)#1
synoptic.util.NamedPattern.buildStandardPattern(Ljava/lang/String;)Ljava/util/regex/Pattern;#Invoke(VIRTUAL,Ljava/util/regex/Pattern;,matcher,(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;)#2
synoptic.util.NamedPattern.buildStandardPattern(Ljava/lang/String;)Ljava/util/regex/Pattern;#Constant(Ljava/lang/String;,"(")#3
synoptic.util.NamedPattern.buildStandardPattern(Ljava/lang/String;)Ljava/util/regex/Pattern;#Invoke(VIRTUAL,Ljava/util/regex/Matcher;,replaceAll,(Ljava/lang/String;)Ljava/lang/String;)#4
synoptic.util.NamedPattern.buildStandardPattern(Ljava/lang/String;)Ljava/util/regex/Pattern;#LocalStore(Ljava/lang/Object;,1)#5
synoptic.util.NamedPattern.buildStandardPattern(Ljava/lang/String;)Ljava/util/regex/Pattern;#Get(Ljava/util/regex/Pattern;,STATIC,Lsynoptic/util/NamedPattern;,NAMED_GROUP_PREFIX)#6
synoptic.util.NamedPattern.buildStandardPattern(Ljava/lang/String;)Ljava/util/regex/Pattern;#LocalLoad(Ljava/lang/Object;,1)#7
synoptic.util.NamedPattern.buildStandardPattern(Ljava/lang/String;)Ljava/util/regex/Pattern;#Invoke(VIRTUAL,Ljava/util/regex/Pattern;,matcher,(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;)#8
synoptic.util.NamedPattern.buildStandardPattern(Ljava/lang/String;)Ljava/util/regex/Pattern;#LocalStore(Ljava/lang/Object;,2)#9
synoptic.util.NamedPattern.buildStandardPattern(Ljava/lang/String;)Ljava/util/regex/Pattern;#LocalLoad(Ljava/lang/Object;,2)#10
synoptic.util.NamedPattern.buildStandardPattern(Ljava/lang/String;)Ljava/util/regex/Pattern;#Invoke(VIRTUAL,Ljava/util/regex/Matcher;,find,()Z)#11
synoptic.util.NamedPattern.buildStandardPattern(Ljava/lang/String;)Ljava/util/regex/Pattern;#Constant(I,0)#12
synoptic.util.NamedPattern.buildStandardPattern(Ljava/lang/String;)Ljava/util/regex/Pattern;#ConditionalBranch(I,eq,58)#13
synoptic.util.NamedPattern.buildStandardPattern(Ljava/lang/String;)Ljava/util/regex/Pattern;#LocalLoad(Ljava/lang/Object;,1)#58
synoptic.util.NamedPattern.buildStandardPattern(Ljava/lang/String;)Ljava/util/regex/Pattern;#Invoke(STATIC,Ljava/util/regex/Pattern;,compile,(Ljava/lang/String;)Ljava/util/regex/Pattern;)#59
synoptic.util.NamedPattern.buildStandardPattern(Ljava/lang/String;)Ljava/util/regex/Pattern;#Return(Ljava/lang/Object;)#60
synoptic.util.NamedPattern.<init>(Ljava/lang/String;I)V#Put(Ljava/util/regex/Pattern;,NONSTATIC,Lsynoptic/util/NamedPattern;,pattern)#8
synoptic.util.NamedPattern.<init>(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#9
synoptic.util.NamedPattern.<init>(Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,1)#10
synoptic.util.NamedPattern.<init>(Ljava/lang/String;I)V#Invoke(STATIC,Lsynoptic/util/NamedPattern;,extractGroupNames,(Ljava/lang/String;)Ljava/util/List;)#11
synoptic.util.NamedPattern.extractGroupNames(Ljava/lang/String;)Ljava/util/List;#New(Ljava/util/ArrayList;,0)#0
synoptic.util.NamedPattern.extractGroupNames(Ljava/lang/String;)Ljava/util/List;#Dup(1,0)#1
synoptic.util.NamedPattern.extractGroupNames(Ljava/lang/String;)Ljava/util/List;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#2
synoptic.util.NamedPattern.extractGroupNames(Ljava/lang/String;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,1)#3
synoptic.util.NamedPattern.extractGroupNames(Ljava/lang/String;)Ljava/util/List;#Get(Ljava/util/regex/Pattern;,STATIC,Lsynoptic/util/NamedPattern;,NAMED_GROUP_PATTERN)#4
synoptic.util.NamedPattern.extractGroupNames(Ljava/lang/String;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.util.NamedPattern.extractGroupNames(Ljava/lang/String;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/util/regex/Pattern;,matcher,(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;)#6
synoptic.util.NamedPattern.extractGroupNames(Ljava/lang/String;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,2)#7
synoptic.util.NamedPattern.extractGroupNames(Ljava/lang/String;)Ljava/util/List;#Goto(15)#8
synoptic.util.NamedPattern.extractGroupNames(Ljava/lang/String;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#15
synoptic.util.NamedPattern.extractGroupNames(Ljava/lang/String;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/util/regex/Matcher;,find,()Z)#16
synoptic.util.NamedPattern.extractGroupNames(Ljava/lang/String;)Ljava/util/List;#Constant(I,0)#17
synoptic.util.NamedPattern.extractGroupNames(Ljava/lang/String;)Ljava/util/List;#ConditionalBranch(I,ne,9)#18
synoptic.util.NamedPattern.extractGroupNames(Ljava/lang/String;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#9
synoptic.util.NamedPattern.extractGroupNames(Ljava/lang/String;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#10
synoptic.util.NamedPattern.extractGroupNames(Ljava/lang/String;)Ljava/util/List;#Constant(I,1)#11
synoptic.util.NamedPattern.extractGroupNames(Ljava/lang/String;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/util/regex/Matcher;,group,(I)Ljava/lang/String;)#12
synoptic.util.NamedPattern.extractGroupNames(Ljava/lang/String;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#13
synoptic.util.NamedPattern.extractGroupNames(Ljava/lang/String;)Ljava/util/List;#Pop(1)#14
synoptic.util.NamedPattern.extractGroupNames(Ljava/lang/String;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#19
synoptic.util.NamedPattern.extractGroupNames(Ljava/lang/String;)Ljava/util/List;#Return(Ljava/lang/Object;)#20
synoptic.util.NamedPattern.<init>(Ljava/lang/String;I)V#Put(Ljava/util/List;,NONSTATIC,Lsynoptic/util/NamedPattern;,groupNames)#12
synoptic.util.NamedPattern.<init>(Ljava/lang/String;I)V#Return(V)#13
synoptic.util.NamedPattern.compile(Ljava/lang/String;)Lsynoptic/util/NamedPattern;#Return(Ljava/lang/Object;)#5
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,10)#266
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Goto(306)#267
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#306
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/main/TraceParser;,parsers)#307
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,10)#308
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#309
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Pop(1)#310
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,10)#311
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Lsynoptic/util/NamedPattern;,groupNames,()Ljava/util/List;)#312
synoptic.util.NamedPattern.groupNames()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.util.NamedPattern.groupNames()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/util/NamedPattern;,groupNames)#1
synoptic.util.NamedPattern.groupNames()Ljava/util/List;#Return(Ljava/lang/Object;)#2
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,11)#313
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,11)#314
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#315
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(STATIC,Lsynoptic/main/TraceParser;,detectListDuplicates,(Ljava/util/List;Ljava/lang/String;)V)#316
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,11)#317
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#318
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,13)#319
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Goto(340)#320
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,13)#340
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#341
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(I,0)#342
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#ConditionalBranch(I,ne,321)#343
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,13)#321
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#322
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#CheckCast(Ljava/lang/String;)#323
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,12)#324
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"LTIME")#325
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,12)#326
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#327
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(I,0)#328
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#ConditionalBranch(I,eq,340)#329
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(I,6)#344
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(I,0)#345
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#ConditionalBranch(I,ne,610)#346
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Get(Ljava/util/List;,STATIC,Lsynoptic/main/TraceParser;,requiredGroups)#347
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#348
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,13)#349
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Goto(390)#350
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,13)#390
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#391
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(I,0)#392
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#ConditionalBranch(I,ne,351)#393
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,13)#351
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#352
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#CheckCast(Ljava/lang/String;)#353
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,12)#354
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,11)#355
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,12)#356
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,contains,(Ljava/lang/Object;)Z)#357
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(I,0)#358
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#ConditionalBranch(I,ne,390)#359
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(I,0)#394
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalStore(I,12)#395
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(L;,null)#396
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,13)#397
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,11)#398
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#399
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,15)#400
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Goto(452)#401
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,15)#452
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#453
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(I,0)#454
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#ConditionalBranch(I,ne,402)#455
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,15)#402
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#403
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#CheckCast(Ljava/lang/String;)#404
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,14)#405
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"PID")#406
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,14)#407
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#408
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(I,0)#409
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#ConditionalBranch(I,eq,413)#410
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Get(Ljava/util/List;,STATIC,Lsynoptic/main/TraceParser;,validTimeGroups)#413
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,14)#414
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,contains,(Ljava/lang/Object;)Z)#415
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(I,0)#416
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#ConditionalBranch(I,eq,452)#417
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,13)#456
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(L;,null)#457
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,ne,461)#458
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"LTIME")#459
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,13)#460
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#461
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/TraceParser;,selectedTimeGroup)#462
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(L;,null)#463
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,ne,491)#464
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#465
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,13)#466
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/TraceParser;,selectedTimeGroup)#467
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#468
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/TraceParser;,selectedTimeGroup)#469
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"VTIME")#470
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#471
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(I,0)#472
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#ConditionalBranch(I,eq,478)#473
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(I,12)#478
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(I,0)#479
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#ConditionalBranch(I,eq,546)#480
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,11)#546
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#547
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,15)#548
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Goto(606)#549
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,15)#606
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#607
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(I,0)#608
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#ConditionalBranch(I,ne,550)#609
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,15)#550
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#551
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#CheckCast(Ljava/lang/String;)#552
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,14)#553
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,14)#554
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"RELATION")#555
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,startsWith,(Ljava/lang/String;)Z)#556
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(I,0)#557
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#ConditionalBranch(I,eq,606)#558
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Get(Lsynoptic/main/SynopticOptions;,STATIC,Lsynoptic/main/Main;,options)#610
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,debugParse)#611
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(I,0)#612
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#ConditionalBranch(I,eq,684)#613
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Return(V)#684
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#491
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/TraceParser;,selectedTimeGroup)#492
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,13)#493
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#494
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(I,0)#495
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#ConditionalBranch(I,ne,527)#496
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,13)#527
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"VTIME")#528
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#529
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Constant(I,0)#530
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#ConditionalBranch(I,eq,546)#531
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#61
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#62
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Invoke(VIRTUAL,Lsynoptic/main/TraceParser;,setPartitionsMap,(Ljava/lang/String;)V)#63
synoptic.main.TraceParser.setPartitionsMap(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.main.TraceParser.setPartitionsMap(Ljava/lang/String;)V#New(Lsynoptic/util/NamedSubstitution;,0)#1
synoptic.main.TraceParser.setPartitionsMap(Ljava/lang/String;)V#Dup(1,0)#2
synoptic.main.TraceParser.setPartitionsMap(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#3
synoptic.main.TraceParser.setPartitionsMap(Ljava/lang/String;)V#Invoke(SPECIAL,Lsynoptic/util/NamedSubstitution;,<init>,(Ljava/lang/String;)V)#4
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#14
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/regex/Matcher;,start,()I)#15
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#LocalStore(I,4)#16
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#17
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/util/NamedSubstitution;,contents)#18
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#19
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#LocalLoad(I,3)#20
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#LocalLoad(I,4)#21
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,substring,(II)Ljava/lang/String;)#22
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#23
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Pop(1)#24
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#25
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/util/NamedSubstitution;,contents)#26
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#27
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Constant(I,1)#28
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/regex/Matcher;,group,(I)Ljava/lang/String;)#29
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#30
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Pop(1)#31
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#32
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/regex/Matcher;,end,()I)#33
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#LocalStore(I,3)#34
synoptic.main.TraceParser.setPartitionsMap(Ljava/lang/String;)V#Put(Lsynoptic/util/NamedSubstitution;,NONSTATIC,Lsynoptic/main/TraceParser;,filter)#5
synoptic.main.TraceParser.setPartitionsMap(Ljava/lang/String;)V#Return(V)#6
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Goto(83)#64
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#83
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Constant(L;,null)#84
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,eq,97)#85
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Return(V)#97
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#LocalStore(Ljava/lang/Object;,1)#9
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#LocalLoad(Ljava/lang/Object;,1)#10
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Lsynoptic/main/SynopticOptions;,STATIC,Lsynoptic/main/Main;,options)#11
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/main/SynopticOptions;,logFilenames)#12
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Invoke(STATIC,Lsynoptic/main/Main;,parseEvents,(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;)#13
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Constant(Ljava/lang/String;,"Parsing input files..")#0
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Invoke(STATIC,Lsynoptic/main/Main;,loggerInfoStart,(Ljava/lang/String;)J)#1
synoptic.main.Main.loggerInfoStart(Ljava/lang/String;)J#Get(Ljava/util/logging/Logger;,STATIC,Lsynoptic/main/Main;,logger)#0
synoptic.main.Main.loggerInfoStart(Ljava/lang/String;)J#LocalLoad(Ljava/lang/Object;,0)#1
synoptic.main.Main.loggerInfoStart(Ljava/lang/String;)J#Invoke(VIRTUAL,Ljava/util/logging/Logger;,info,(Ljava/lang/String;)V)#2
synoptic.main.Main.loggerInfoStart(Ljava/lang/String;)J#Invoke(STATIC,Ljava/lang/System;,currentTimeMillis,()J)#3
synoptic.main.Main.loggerInfoStart(Ljava/lang/String;)J#Return(J)#4
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#LocalStore(J,2)#2
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#New(Ljava/util/ArrayList;,0)#3
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Dup(1,0)#4
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#5
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,4)#6
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#7
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#8
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,6)#9
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Goto(72)#10
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,6)#72
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#73
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Constant(I,0)#74
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#ConditionalBranch(I,ne,11)#75
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,6)#11
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#12
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#CheckCast(Ljava/lang/String;)#13
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,5)#14
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Get(Ljava/util/logging/Logger;,STATIC,Lsynoptic/main/Main;,logger)#15
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#New(Ljava/lang/StringBuilder;,0)#16
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Dup(1,0)#17
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Constant(Ljava/lang/String;,"\	processing fileArg: ")#18
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#19
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,5)#20
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#21
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#22
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/util/logging/Logger;,fine,(Ljava/lang/String;)V)#23
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,5)#24
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Invoke(STATIC,Lsynoptic/main/Main;,getFiles,(Ljava/lang/String;)[Ljava/io/File;)#25
synoptic.main.Main.getFiles(Ljava/lang/String;)[Ljava/io/File;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.main.Main.getFiles(Ljava/lang/String;)[Ljava/io/File;#Constant(Ljava/lang/String;,"*")#1
synoptic.main.Main.getFiles(Ljava/lang/String;)[Ljava/io/File;#Invoke(VIRTUAL,Ljava/lang/String;,indexOf,(Ljava/lang/String;)I)#2
synoptic.main.Main.getFiles(Ljava/lang/String;)[Ljava/io/File;#LocalStore(I,1)#3
synoptic.main.Main.getFiles(Ljava/lang/String;)[Ljava/io/File;#LocalLoad(I,1)#4
synoptic.main.Main.getFiles(Ljava/lang/String;)[Ljava/io/File;#Constant(I,-1)#5
synoptic.main.Main.getFiles(Ljava/lang/String;)[Ljava/io/File;#ConditionalBranch(I,ne,17)#6
synoptic.main.Main.getFiles(Ljava/lang/String;)[Ljava/io/File;#Constant(I,1)#7
synoptic.main.Main.getFiles(Ljava/lang/String;)[Ljava/io/File;#New([Ljava/io/File;,1)#8
synoptic.main.Main.getFiles(Ljava/lang/String;)[Ljava/io/File;#Dup(1,0)#9
synoptic.main.Main.getFiles(Ljava/lang/String;)[Ljava/io/File;#Constant(I,0)#10
synoptic.main.Main.getFiles(Ljava/lang/String;)[Ljava/io/File;#New(Ljava/io/File;,0)#11
synoptic.main.Main.getFiles(Ljava/lang/String;)[Ljava/io/File;#Dup(1,0)#12
synoptic.main.Main.getFiles(Ljava/lang/String;)[Ljava/io/File;#LocalLoad(Ljava/lang/Object;,0)#13
synoptic.main.Main.getFiles(Ljava/lang/String;)[Ljava/io/File;#Invoke(SPECIAL,Ljava/io/File;,<init>,(Ljava/lang/String;)V)#14
synoptic.main.Main.getFiles(Ljava/lang/String;)[Ljava/io/File;#ArrayStore(Ljava/lang/Object;)#15
synoptic.main.Main.getFiles(Ljava/lang/String;)[Ljava/io/File;#Return(Ljava/lang/Object;)#16
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,7)#26
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,7)#27
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#ArrayLength()#28
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Constant(I,0)#29
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#ConditionalBranch(I,ne,36)#30
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,7)#36
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Dup(1,0)#37
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,11)#38
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#ArrayLength()#39
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#LocalStore(I,10)#40
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Constant(I,0)#41
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#LocalStore(I,9)#42
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Goto(69)#43
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#LocalLoad(I,9)#69
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#LocalLoad(I,10)#70
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#ConditionalBranch(I,lt,44)#71
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,11)#44
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#LocalLoad(I,9)#45
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#ArrayLoad(Ljava/lang/Object;)#46
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,8)#47
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Get(Ljava/util/logging/Logger;,STATIC,Lsynoptic/main/Main;,logger)#48
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#New(Ljava/lang/StringBuilder;,0)#49
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Dup(1,0)#50
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Constant(Ljava/lang/String;,"\	calling parseTraceFile with file: ")#51
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#52
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,8)#53
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/io/File;,getAbsolutePath,()Ljava/lang/String;)#54
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#55
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#56
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/util/logging/Logger;,fine,(Ljava/lang/String;)V)#57
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,4)#58
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#59
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,8)#60
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Constant(I,-1)#61
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/main/TraceParser;,parseTraceFile,(Ljava/io/File;I)Ljava/util/ArrayList;)#62
synoptic.main.TraceParser.parseTraceFile(Ljava/io/File;I)Ljava/util/ArrayList;#Constant(Ljava/lang/String;,"")#0
synoptic.main.TraceParser.parseTraceFile(Ljava/io/File;I)Ljava/util/ArrayList;#LocalStore(Ljava/lang/Object;,3)#1
synoptic.main.TraceParser.parseTraceFile(Ljava/io/File;I)Ljava/util/ArrayList;#LocalLoad(Ljava/lang/Object;,1)#2
synoptic.main.TraceParser.parseTraceFile(Ljava/io/File;I)Ljava/util/ArrayList;#Invoke(VIRTUAL,Ljava/io/File;,getAbsolutePath,()Ljava/lang/String;)#3
synoptic.main.TraceParser.parseTraceFile(Ljava/io/File;I)Ljava/util/ArrayList;#LocalStore(Ljava/lang/Object;,3)#4
synoptic.main.TraceParser.parseTraceFile(Ljava/io/File;I)Ljava/util/ArrayList;#New(Ljava/io/FileInputStream;,0)#5
synoptic.main.TraceParser.parseTraceFile(Ljava/io/File;I)Ljava/util/ArrayList;#Dup(1,0)#6
synoptic.main.TraceParser.parseTraceFile(Ljava/io/File;I)Ljava/util/ArrayList;#LocalLoad(Ljava/lang/Object;,1)#7
synoptic.main.TraceParser.parseTraceFile(Ljava/io/File;I)Ljava/util/ArrayList;#Invoke(SPECIAL,Ljava/io/FileInputStream;,<init>,(Ljava/io/File;)V)#8
synoptic.main.TraceParser.parseTraceFile(Ljava/io/File;I)Ljava/util/ArrayList;#LocalStore(Ljava/lang/Object;,4)#9
synoptic.main.TraceParser.parseTraceFile(Ljava/io/File;I)Ljava/util/ArrayList;#New(Ljava/io/InputStreamReader;,0)#10
synoptic.main.TraceParser.parseTraceFile(Ljava/io/File;I)Ljava/util/ArrayList;#Dup(1,0)#11
synoptic.main.TraceParser.parseTraceFile(Ljava/io/File;I)Ljava/util/ArrayList;#LocalLoad(Ljava/lang/Object;,4)#12
synoptic.main.TraceParser.parseTraceFile(Ljava/io/File;I)Ljava/util/ArrayList;#Invoke(SPECIAL,Ljava/io/InputStreamReader;,<init>,(Ljava/io/InputStream;)V)#13
synoptic.main.TraceParser.parseTraceFile(Ljava/io/File;I)Ljava/util/ArrayList;#LocalStore(Ljava/lang/Object;,5)#14
synoptic.main.TraceParser.parseTraceFile(Ljava/io/File;I)Ljava/util/ArrayList;#LocalLoad(Ljava/lang/Object;,0)#15
synoptic.main.TraceParser.parseTraceFile(Ljava/io/File;I)Ljava/util/ArrayList;#LocalLoad(Ljava/lang/Object;,5)#16
synoptic.main.TraceParser.parseTraceFile(Ljava/io/File;I)Ljava/util/ArrayList;#LocalLoad(Ljava/lang/Object;,3)#17
synoptic.main.TraceParser.parseTraceFile(Ljava/io/File;I)Ljava/util/ArrayList;#LocalLoad(I,2)#18
synoptic.main.TraceParser.parseTraceFile(Ljava/io/File;I)Ljava/util/ArrayList;#Invoke(SPECIAL,Lsynoptic/main/TraceParser;,parseTrace,(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;)#19
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#New(Ljava/io/BufferedReader;,0)#0
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Dup(1,0)#1
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalLoad(Ljava/lang/Object;,1)#2
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Invoke(SPECIAL,Ljava/io/BufferedReader;,<init>,(Ljava/io/Reader;)V)#3
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalStore(Ljava/lang/Object;,4)#4
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#New(Ljava/util/LinkedHashMap;,0)#5
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Dup(1,0)#6
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#7
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalStore(Ljava/lang/Object;,5)#8
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalLoad(Ljava/lang/Object;,0)#9
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/main/TraceParser;,incrementors)#10
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#11
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalStore(Ljava/lang/Object;,7)#12
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Goto(37)#13
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalLoad(Ljava/lang/Object;,7)#37
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#38
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Constant(I,0)#39
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#ConditionalBranch(I,ne,14)#40
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalLoad(Ljava/lang/Object;,7)#14
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#15
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#CheckCast(Ljava/util/Map;)#16
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalStore(Ljava/lang/Object;,6)#17
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalLoad(Ljava/lang/Object;,6)#18
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Invoke(INTERFACE,Ljava/util/Map;,keySet,()Ljava/util/Set;)#19
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#20
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalStore(Ljava/lang/Object;,9)#21
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Goto(33)#22
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalLoad(Ljava/lang/Object;,9)#33
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#34
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Constant(I,0)#35
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#ConditionalBranch(I,ne,23)#36
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#New(Ljava/util/ArrayList;,0)#41
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Dup(1,0)#42
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#43
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalStore(Ljava/lang/Object;,6)#44
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Constant(L;,null)#45
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalStore(Ljava/lang/Object;,7)#46
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalLoad(Ljava/lang/Object;,2)#47
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalStore(Ljava/lang/Object;,8)#48
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Get(Lsynoptic/main/SynopticOptions;,STATIC,Lsynoptic/main/Main;,options)#49
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,internCommonStrings)#50
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Constant(I,0)#51
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#ConditionalBranch(I,eq,56)#52
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalLoad(Ljava/lang/Object;,8)#53
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Invoke(VIRTUAL,Ljava/lang/String;,intern,()Ljava/lang/String;)#54
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalStore(Ljava/lang/Object;,8)#55
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Constant(I,0)#56
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalStore(I,9)#57
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Goto(83)#58
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalLoad(Ljava/lang/Object;,4)#83
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Invoke(VIRTUAL,Ljava/io/BufferedReader;,readLine,()Ljava/lang/String;)#84
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Dup(1,0)#85
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalStore(Ljava/lang/Object;,7)#86
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Constant(L;,null)#87
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#ConditionalBranch(Ljava/lang/Object;,ne,59)#88
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalLoad(Ljava/lang/Object;,6)#59
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Invoke(VIRTUAL,Ljava/util/ArrayList;,size,()I)#60
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalLoad(I,3)#61
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#ConditionalBranch(I,ne,64)#62
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalLoad(I,9)#64
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Constant(I,1)#65
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#BinaryOp(I,add)#66
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalStore(I,9)#67
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalLoad(Ljava/lang/Object;,0)#68
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalLoad(Ljava/lang/Object;,7)#69
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalLoad(Ljava/lang/Object;,8)#70
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalLoad(Ljava/lang/Object;,5)#71
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalLoad(I,9)#72
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Invoke(SPECIAL,Lsynoptic/main/TraceParser;,parseLine,(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;)#73
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Constant(L;,null)#0
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalStore(Ljava/lang/Object;,5)#1
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Constant(L;,null)#2
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalStore(Ljava/lang/Object;,6)#3
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Constant(I,0)#4
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalStore(I,7)#5
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Goto(763)#6
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(I,7)#763
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,0)#764
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/main/TraceParser;,parsers)#765
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/List;,size,()I)#766
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#ConditionalBranch(I,lt,7)#767
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,0)#7
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/main/TraceParser;,parsers)#8
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(I,7)#9
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#10
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#CheckCast(Lsynoptic/util/NamedPattern;)#11
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,1)#12
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(VIRTUAL,Lsynoptic/util/NamedPattern;,matcher,(Ljava/lang/CharSequence;)Lsynoptic/util/NamedMatcher;)#13
synoptic.util.NamedPattern.matcher(Ljava/lang/CharSequence;)Lsynoptic/util/NamedMatcher;#New(Lsynoptic/util/NamedMatcher;,0)#0
synoptic.util.NamedPattern.matcher(Ljava/lang/CharSequence;)Lsynoptic/util/NamedMatcher;#Dup(1,0)#1
synoptic.util.NamedPattern.matcher(Ljava/lang/CharSequence;)Lsynoptic/util/NamedMatcher;#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.util.NamedPattern.matcher(Ljava/lang/CharSequence;)Lsynoptic/util/NamedMatcher;#LocalLoad(Ljava/lang/Object;,1)#3
synoptic.util.NamedPattern.matcher(Ljava/lang/CharSequence;)Lsynoptic/util/NamedMatcher;#Invoke(SPECIAL,Lsynoptic/util/NamedMatcher;,<init>,(Lsynoptic/util/NamedPattern;Ljava/lang/CharSequence;)V)#4
synoptic.util.NamedMatcher.<init>(Lsynoptic/util/NamedPattern;Ljava/lang/CharSequence;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.util.NamedMatcher.<init>(Lsynoptic/util/NamedPattern;Ljava/lang/CharSequence;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
synoptic.util.NamedMatcher.<init>(Lsynoptic/util/NamedPattern;Ljava/lang/CharSequence;)V#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.util.NamedMatcher.<init>(Lsynoptic/util/NamedPattern;Ljava/lang/CharSequence;)V#LocalLoad(Ljava/lang/Object;,1)#3
synoptic.util.NamedMatcher.<init>(Lsynoptic/util/NamedPattern;Ljava/lang/CharSequence;)V#Put(Lsynoptic/util/NamedPattern;,NONSTATIC,Lsynoptic/util/NamedMatcher;,parentPattern)#4
synoptic.util.NamedMatcher.<init>(Lsynoptic/util/NamedPattern;Ljava/lang/CharSequence;)V#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.util.NamedMatcher.<init>(Lsynoptic/util/NamedPattern;Ljava/lang/CharSequence;)V#LocalLoad(Ljava/lang/Object;,1)#6
synoptic.util.NamedMatcher.<init>(Lsynoptic/util/NamedPattern;Ljava/lang/CharSequence;)V#Invoke(VIRTUAL,Lsynoptic/util/NamedPattern;,pattern,()Ljava/util/regex/Pattern;)#7
synoptic.util.NamedPattern.pattern()Ljava/util/regex/Pattern;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.util.NamedPattern.pattern()Ljava/util/regex/Pattern;#Get(Ljava/util/regex/Pattern;,NONSTATIC,Lsynoptic/util/NamedPattern;,pattern)#1
synoptic.util.NamedPattern.pattern()Ljava/util/regex/Pattern;#Return(Ljava/lang/Object;)#2
synoptic.util.NamedMatcher.<init>(Lsynoptic/util/NamedPattern;Ljava/lang/CharSequence;)V#LocalLoad(Ljava/lang/Object;,2)#8
synoptic.util.NamedMatcher.<init>(Lsynoptic/util/NamedPattern;Ljava/lang/CharSequence;)V#Invoke(VIRTUAL,Ljava/util/regex/Pattern;,matcher,(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;)#9
synoptic.util.NamedMatcher.<init>(Lsynoptic/util/NamedPattern;Ljava/lang/CharSequence;)V#Put(Ljava/util/regex/Matcher;,NONSTATIC,Lsynoptic/util/NamedMatcher;,matcher)#10
synoptic.util.NamedMatcher.<init>(Lsynoptic/util/NamedPattern;Ljava/lang/CharSequence;)V#Return(V)#11
synoptic.util.NamedPattern.matcher(Ljava/lang/CharSequence;)Lsynoptic/util/NamedMatcher;#Return(Ljava/lang/Object;)#5
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalStore(Ljava/lang/Object;,8)#14
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,8)#15
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(VIRTUAL,Lsynoptic/util/NamedMatcher;,matches,()Z)#16
synoptic.util.NamedMatcher.matches()Z#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.util.NamedMatcher.matches()Z#Get(Ljava/util/regex/Matcher;,NONSTATIC,Lsynoptic/util/NamedMatcher;,matcher)#1
synoptic.util.NamedMatcher.matches()Z#Invoke(VIRTUAL,Ljava/util/regex/Matcher;,matches,()Z)#2
synoptic.util.NamedMatcher.matches()Z#Return(I)#3
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Constant(I,0)#17
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#ConditionalBranch(I,ne,20)#18
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,0)#20
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/main/TraceParser;,constantFields)#21
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(I,7)#22
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#23
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#CheckCast(Ljava/util/LinkedHashMap;)#24
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,clone,()Ljava/lang/Object;)#25
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#CheckCast(Ljava/util/Map;)#26
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalStore(Ljava/lang/Object;,9)#27
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,8)#28
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(VIRTUAL,Lsynoptic/util/NamedMatcher;,toMatchResult,()Lsynoptic/util/INamedMatchResult;)#29
synoptic.util.NamedMatcher.toMatchResult()Lsynoptic/util/INamedMatchResult;#New(Lsynoptic/util/NamedMatcher;,0)#0
synoptic.util.NamedMatcher.toMatchResult()Lsynoptic/util/INamedMatchResult;#Dup(1,0)#1
synoptic.util.NamedMatcher.toMatchResult()Lsynoptic/util/INamedMatchResult;#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.util.NamedMatcher.toMatchResult()Lsynoptic/util/INamedMatchResult;#Get(Lsynoptic/util/NamedPattern;,NONSTATIC,Lsynoptic/util/NamedMatcher;,parentPattern)#3
synoptic.util.NamedMatcher.toMatchResult()Lsynoptic/util/INamedMatchResult;#LocalLoad(Ljava/lang/Object;,0)#4
synoptic.util.NamedMatcher.toMatchResult()Lsynoptic/util/INamedMatchResult;#Get(Ljava/util/regex/Matcher;,NONSTATIC,Lsynoptic/util/NamedMatcher;,matcher)#5
synoptic.util.NamedMatcher.toMatchResult()Lsynoptic/util/INamedMatchResult;#Invoke(VIRTUAL,Ljava/util/regex/Matcher;,toMatchResult,()Ljava/util/regex/MatchResult;)#6
synoptic.util.NamedMatcher.toMatchResult()Lsynoptic/util/INamedMatchResult;#Invoke(SPECIAL,Lsynoptic/util/NamedMatcher;,<init>,(Lsynoptic/util/NamedPattern;Ljava/util/regex/MatchResult;)V)#7
synoptic.util.NamedMatcher.<init>(Lsynoptic/util/NamedPattern;Ljava/util/regex/MatchResult;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.util.NamedMatcher.<init>(Lsynoptic/util/NamedPattern;Ljava/util/regex/MatchResult;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
synoptic.util.NamedMatcher.<init>(Lsynoptic/util/NamedPattern;Ljava/util/regex/MatchResult;)V#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.util.NamedMatcher.<init>(Lsynoptic/util/NamedPattern;Ljava/util/regex/MatchResult;)V#LocalLoad(Ljava/lang/Object;,1)#3
synoptic.util.NamedMatcher.<init>(Lsynoptic/util/NamedPattern;Ljava/util/regex/MatchResult;)V#Put(Lsynoptic/util/NamedPattern;,NONSTATIC,Lsynoptic/util/NamedMatcher;,parentPattern)#4
synoptic.util.NamedMatcher.<init>(Lsynoptic/util/NamedPattern;Ljava/util/regex/MatchResult;)V#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.util.NamedMatcher.<init>(Lsynoptic/util/NamedPattern;Ljava/util/regex/MatchResult;)V#LocalLoad(Ljava/lang/Object;,2)#6
synoptic.util.NamedMatcher.<init>(Lsynoptic/util/NamedPattern;Ljava/util/regex/MatchResult;)V#CheckCast(Ljava/util/regex/Matcher;)#7
synoptic.util.NamedMatcher.<init>(Lsynoptic/util/NamedPattern;Ljava/util/regex/MatchResult;)V#Put(Ljava/util/regex/Matcher;,NONSTATIC,Lsynoptic/util/NamedMatcher;,matcher)#8
synoptic.util.NamedMatcher.<init>(Lsynoptic/util/NamedPattern;Ljava/util/regex/MatchResult;)V#Return(V)#9
synoptic.util.NamedMatcher.toMatchResult()Lsynoptic/util/INamedMatchResult;#Return(Ljava/lang/Object;)#8
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Lsynoptic/util/INamedMatchResult;,namedGroups,()Ljava/util/Map;)#30
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#New(Ljava/util/LinkedHashMap;,0)#0
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#Dup(1,0)#1
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#2
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#LocalStore(Ljava/lang/Object;,1)#3
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#Constant(I,1)#4
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#LocalStore(I,2)#5
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#Goto(30)#6
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#LocalLoad(I,2)#30
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#31
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#Invoke(VIRTUAL,Lsynoptic/util/NamedMatcher;,groupCount,()I)#32
synoptic.util.NamedMatcher.groupCount()I#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.util.NamedMatcher.groupCount()I#Get(Ljava/util/regex/Matcher;,NONSTATIC,Lsynoptic/util/NamedMatcher;,matcher)#1
synoptic.util.NamedMatcher.groupCount()I#Invoke(VIRTUAL,Ljava/util/regex/Matcher;,groupCount,()I)#2
synoptic.util.NamedMatcher.groupCount()I#Return(I)#3
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#ConditionalBranch(I,le,7)#33
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#7
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#Get(Lsynoptic/util/NamedPattern;,NONSTATIC,Lsynoptic/util/NamedMatcher;,parentPattern)#8
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#Invoke(VIRTUAL,Lsynoptic/util/NamedPattern;,groupNames,()Ljava/util/List;)#9
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#LocalLoad(I,2)#10
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#Constant(I,1)#11
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#BinaryOp(I,sub)#12
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#13
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#CheckCast(Ljava/lang/String;)#14
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#LocalStore(Ljava/lang/Object;,3)#15
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#16
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#Get(Ljava/util/regex/Matcher;,NONSTATIC,Lsynoptic/util/NamedMatcher;,matcher)#17
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#LocalLoad(I,2)#18
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#Invoke(VIRTUAL,Ljava/util/regex/Matcher;,group,(I)Ljava/lang/String;)#19
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#LocalStore(Ljava/lang/Object;,4)#20
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,1)#21
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,3)#22
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,4)#23
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#24
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#Pop(1)#25
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#LocalLoad(I,2)#26
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#Constant(I,1)#27
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#BinaryOp(I,add)#28
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#LocalStore(I,2)#29
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,1)#34
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#Return(Ljava/lang/Object;)#35
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalStore(Ljava/lang/Object;,10)#31
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,0)#32
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/main/TraceParser;,incrementors)#33
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(I,7)#34
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#35
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#CheckCast(Ljava/util/Map;)#36
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map;,entrySet,()Ljava/util/Set;)#37
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#38
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalStore(Ljava/lang/Object;,12)#39
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Goto(66)#40
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,12)#66
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#67
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Constant(I,0)#68
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#ConditionalBranch(I,ne,41)#69
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,3)#70
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map;,entrySet,()Ljava/util/Set;)#71
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#72
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalStore(Ljava/lang/Object;,12)#73
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Goto(89)#74
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,12)#89
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#90
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Constant(I,0)#91
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#ConditionalBranch(I,ne,75)#92
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,9)#93
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map;,entrySet,()Ljava/util/Set;)#94
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#95
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalStore(Ljava/lang/Object;,12)#96
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Goto(136)#97
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,12)#136
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#137
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Constant(I,0)#138
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#ConditionalBranch(I,ne,98)#139
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,10)#140
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Constant(Ljava/lang/String;,"HIDE")#141
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#142
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Constant(L;,null)#143
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#ConditionalBranch(Ljava/lang/Object;,eq,185)#144
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Get(Lsynoptic/main/SynopticOptions;,STATIC,Lsynoptic/main/Main;,options)#185
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,internCommonStrings)#186
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Constant(I,0)#187
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#ConditionalBranch(I,eq,196)#188
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,10)#189
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Constant(Ljava/lang/String;,"TYPE")#190
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#191
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#CheckCast(Ljava/lang/String;)#192
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(VIRTUAL,Ljava/lang/String;,intern,()Ljava/lang/String;)#193
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalStore(Ljava/lang/Object;,11)#194
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Goto(201)#195
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,11)#201
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Constant(L;,null)#202
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#ConditionalBranch(Ljava/lang/Object;,ne,206)#203
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,0)#206
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/TraceParser;,selectedTimeGroup)#207
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Constant(Ljava/lang/String;,"VTIME")#208
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#209
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Constant(I,0)#210
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#ConditionalBranch(I,eq,240)#211
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#New(Lsynoptic/model/StringEventType;,0)#240
synoptic.model.EventType.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@82633d6a)#0
synoptic.model.EventType.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
synoptic.model.EventType.<clinit>()V#Constant(I,0)#2
synoptic.model.EventType.<clinit>()V#ConditionalBranch(I,ne,6)#3
synoptic.model.EventType.<clinit>()V#Constant(I,1)#4
synoptic.model.EventType.<clinit>()V#Goto(7)#5
synoptic.model.EventType.<clinit>()V#Put(Z,STATIC,Lsynoptic/model/EventType;,$assertionsDisabled)#7
synoptic.model.EventType.<clinit>()V#Return(V)#8
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Dup(1,0)#241
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,11)#242
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(SPECIAL,Lsynoptic/model/StringEventType;,<init>,(Ljava/lang/String;)V)#243
synoptic.model.StringEventType.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.StringEventType.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.model.StringEventType.<init>(Ljava/lang/String;)V#Constant(I,0)#2
synoptic.model.StringEventType.<init>(Ljava/lang/String;)V#Constant(I,0)#3
synoptic.model.StringEventType.<init>(Ljava/lang/String;)V#Invoke(SPECIAL,Lsynoptic/model/StringEventType;,<init>,(Ljava/lang/String;ZZ)V)#4
synoptic.model.StringEventType.<init>(Ljava/lang/String;ZZ)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.StringEventType.<init>(Ljava/lang/String;ZZ)V#LocalLoad(I,2)#1
synoptic.model.StringEventType.<init>(Ljava/lang/String;ZZ)V#LocalLoad(I,3)#2
synoptic.model.StringEventType.<init>(Ljava/lang/String;ZZ)V#Invoke(SPECIAL,Lsynoptic/model/EventType;,<init>,(ZZ)V)#3
synoptic.model.EventType.<init>(ZZ)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.EventType.<init>(ZZ)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
synoptic.model.EventType.<init>(ZZ)V#Get(Z,STATIC,Lsynoptic/model/EventType;,$assertionsDisabled)#2
synoptic.model.EventType.<init>(ZZ)V#Constant(I,0)#3
synoptic.model.EventType.<init>(ZZ)V#ConditionalBranch(I,ne,15)#4
synoptic.model.EventType.<init>(ZZ)V#LocalLoad(Ljava/lang/Object;,0)#15
synoptic.model.EventType.<init>(ZZ)V#LocalLoad(I,1)#16
synoptic.model.EventType.<init>(ZZ)V#Put(Z,NONSTATIC,Lsynoptic/model/EventType;,isInitialEventType)#17
synoptic.model.EventType.<init>(ZZ)V#LocalLoad(Ljava/lang/Object;,0)#18
synoptic.model.EventType.<init>(ZZ)V#LocalLoad(I,2)#19
synoptic.model.EventType.<init>(ZZ)V#Put(Z,NONSTATIC,Lsynoptic/model/EventType;,isTerminalEventType)#20
synoptic.model.EventType.<init>(ZZ)V#Return(V)#21
synoptic.model.StringEventType.<init>(Ljava/lang/String;ZZ)V#LocalLoad(Ljava/lang/Object;,0)#4
synoptic.model.StringEventType.<init>(Ljava/lang/String;ZZ)V#LocalLoad(Ljava/lang/Object;,1)#5
synoptic.model.StringEventType.<init>(Ljava/lang/String;ZZ)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/StringEventType;,eType)#6
synoptic.model.StringEventType.<init>(Ljava/lang/String;ZZ)V#Return(V)#7
synoptic.model.StringEventType.<init>(Ljava/lang/String;)V#Return(V)#5
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalStore(Ljava/lang/Object;,12)#244
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#New(Lsynoptic/model/Event;,0)#245
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Dup(1,0)#246
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,12)#247
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,1)#248
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,2)#249
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(I,4)#250
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(SPECIAL,Lsynoptic/model/Event;,<init>,(Lsynoptic/model/EventType;Ljava/lang/String;Ljava/lang/String;I)V)#251
synoptic.model.Event.<init>(Lsynoptic/model/EventType;Ljava/lang/String;Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.Event.<init>(Lsynoptic/model/EventType;Ljava/lang/String;Ljava/lang/String;I)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
synoptic.model.Event.<init>(Lsynoptic/model/EventType;Ljava/lang/String;Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.model.Event.<init>(Lsynoptic/model/EventType;Ljava/lang/String;Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,1)#3
synoptic.model.Event.<init>(Lsynoptic/model/EventType;Ljava/lang/String;Ljava/lang/String;I)V#Put(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/model/Event;,eType)#4
synoptic.model.Event.<init>(Lsynoptic/model/EventType;Ljava/lang/String;Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.model.Event.<init>(Lsynoptic/model/EventType;Ljava/lang/String;Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,2)#6
synoptic.model.Event.<init>(Lsynoptic/model/EventType;Ljava/lang/String;Ljava/lang/String;I)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/Event;,logLine)#7
synoptic.model.Event.<init>(Lsynoptic/model/EventType;Ljava/lang/String;Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#8
synoptic.model.Event.<init>(Lsynoptic/model/EventType;Ljava/lang/String;Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,3)#9
synoptic.model.Event.<init>(Lsynoptic/model/EventType;Ljava/lang/String;Ljava/lang/String;I)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/Event;,fileName)#10
synoptic.model.Event.<init>(Lsynoptic/model/EventType;Ljava/lang/String;Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#11
synoptic.model.Event.<init>(Lsynoptic/model/EventType;Ljava/lang/String;Ljava/lang/String;I)V#LocalLoad(I,4)#12
synoptic.model.Event.<init>(Lsynoptic/model/EventType;Ljava/lang/String;Ljava/lang/String;I)V#Put(I,NONSTATIC,Lsynoptic/model/Event;,lineNum)#13
synoptic.model.Event.<init>(Lsynoptic/model/EventType;Ljava/lang/String;Ljava/lang/String;I)V#Return(V)#14
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalStore(Ljava/lang/Object;,5)#252
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#New(Ljava/util/HashSet;,0)#253
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Dup(1,0)#254
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#255
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalStore(Ljava/lang/Object;,13)#256
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#New(Ljava/util/HashSet;,0)#257
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Dup(1,0)#258
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#259
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalStore(Ljava/lang/Object;,14)#260
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,10)#261
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map;,keySet,()Ljava/util/Set;)#262
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#263
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalStore(Ljava/lang/Object;,16)#264
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Goto(343)#265
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,16)#343
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#344
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Constant(I,0)#345
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#ConditionalBranch(I,ne,266)#346
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,16)#266
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#267
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#CheckCast(Ljava/lang/String;)#268
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalStore(Ljava/lang/Object;,15)#269
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,15)#270
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Constant(Ljava/lang/String;,"RELATION")#271
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(VIRTUAL,Ljava/lang/String;,startsWith,(Ljava/lang/String;)Z)#272
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Constant(I,0)#273
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#ConditionalBranch(I,eq,343)#274
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,0)#347
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/TraceParser;,selectedTimeGroup)#348
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Constant(Ljava/lang/String;,"LTIME")#349
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#ConditionalBranch(Ljava/lang/Object;,ne,357)#350
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#New(Lsynoptic/util/time/ITotalTime;,0)#351
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Dup(1,0)#352
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(I,4)#353
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(SPECIAL,Lsynoptic/util/time/ITotalTime;,<init>,(I)V)#354
synoptic.util.time.ITotalTime.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.util.time.ITotalTime.<init>(I)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
synoptic.util.time.ITotalTime.<init>(I)V#LocalLoad(I,1)#2
synoptic.util.time.ITotalTime.<init>(I)V#Constant(I,0)#3
synoptic.util.time.ITotalTime.<init>(I)V#ConditionalBranch(I,ge,9)#4
synoptic.util.time.ITotalTime.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#9
synoptic.util.time.ITotalTime.<init>(I)V#LocalLoad(I,1)#10
synoptic.util.time.ITotalTime.<init>(I)V#Put(I,NONSTATIC,Lsynoptic/util/time/ITotalTime;,time)#11
synoptic.util.time.ITotalTime.<init>(I)V#Return(V)#12
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalStore(Ljava/lang/Object;,6)#355
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Goto(543)#356
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#New(Ljava/util/LinkedHashMap;,0)#543
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Dup(1,0)#544
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#545
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalStore(Ljava/lang/Object;,15)#546
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,10)#547
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map;,entrySet,()Ljava/util/Set;)#548
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#549
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalStore(Ljava/lang/Object;,17)#550
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Goto(577)#551
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,17)#577
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#578
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Constant(I,0)#579
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#ConditionalBranch(I,ne,552)#580
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,17)#552
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#553
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#CheckCast(Ljava/util/Map$Entry;)#554
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalStore(Ljava/lang/Object;,16)#555
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,16)#556
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map$Entry;,getKey,()Ljava/lang/Object;)#557
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#CheckCast(Ljava/lang/String;)#558
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalStore(Ljava/lang/Object;,18)#559
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,18)#560
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Constant(Ljava/lang/String;,"TYPE")#561
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#562
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Constant(I,0)#563
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#ConditionalBranch(I,ne,577)#564
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,18)#565
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Constant(Ljava/lang/String;,"TIME")#566
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#567
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Constant(I,0)#568
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#ConditionalBranch(I,ne,577)#569
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,15)#570
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,18)#571
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,16)#572
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map$Entry;,getValue,()Ljava/lang/Object;)#573
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#CheckCast(Ljava/lang/String;)#574
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#575
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Pop(1)#576
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Get(Lsynoptic/main/SynopticOptions;,STATIC,Lsynoptic/main/Main;,options)#581
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/SynopticOptions;,partitionRegExp)#582
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Constant(Ljava/lang/String;,"\k<FILE>")#583
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#584
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Constant(I,0)#585
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#ConditionalBranch(I,eq,592)#586
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,0)#592
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/main/TraceParser;,incrementors)#593
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(I,7)#594
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#595
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#CheckCast(Ljava/util/Map;)#596
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map;,entrySet,()Ljava/util/Set;)#597
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#598
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalStore(Ljava/lang/Object;,17)#599
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Goto(626)#600
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,17)#626
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#627
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Constant(I,0)#628
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#ConditionalBranch(I,ne,601)#629
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Get(Lsynoptic/main/SynopticOptions;,STATIC,Lsynoptic/main/Main;,options)#630
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,debugParse)#631
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Constant(I,0)#632
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#ConditionalBranch(I,eq,707)#633
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,5)#707
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,6)#708
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(VIRTUAL,Lsynoptic/model/Event;,setTime,(Lsynoptic/util/time/ITime;)V)#709
synoptic.model.Event.setTime(Lsynoptic/util/time/ITime;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.Event.setTime(Lsynoptic/util/time/ITime;)V#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.model.Event.setTime(Lsynoptic/util/time/ITime;)V#Put(Lsynoptic/util/time/ITime;,NONSTATIC,Lsynoptic/model/Event;,time)#2
synoptic.model.Event.setTime(Lsynoptic/util/time/ITime;)V#Return(V)#3
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#New(Lsynoptic/model/Relation;,0)#710
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Dup(1,0)#711
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Constant(Ljava/lang/String;,"time-relation")#712
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Constant(Ljava/lang/String;,"t")#713
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Constant(I,0)#714
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(SPECIAL,Lsynoptic/model/Relation;,<init>,(Ljava/lang/String;Ljava/lang/String;Z)V)#715
synoptic.model.Relation.<init>(Ljava/lang/String;Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.Relation.<init>(Ljava/lang/String;Ljava/lang/String;Z)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
synoptic.model.Relation.<init>(Ljava/lang/String;Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.model.Relation.<init>(Ljava/lang/String;Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,1)#3
synoptic.model.Relation.<init>(Ljava/lang/String;Ljava/lang/String;Z)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/Relation;,name)#4
synoptic.model.Relation.<init>(Ljava/lang/String;Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.model.Relation.<init>(Ljava/lang/String;Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,2)#6
synoptic.model.Relation.<init>(Ljava/lang/String;Ljava/lang/String;Z)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/Relation;,relation)#7
synoptic.model.Relation.<init>(Ljava/lang/String;Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,0)#8
synoptic.model.Relation.<init>(Ljava/lang/String;Ljava/lang/String;Z)V#LocalLoad(I,3)#9
synoptic.model.Relation.<init>(Ljava/lang/String;Ljava/lang/String;Z)V#Put(Z,NONSTATIC,Lsynoptic/model/Relation;,isClosure)#10
synoptic.model.Relation.<init>(Ljava/lang/String;Ljava/lang/String;Z)V#Return(V)#11
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalStore(Ljava/lang/Object;,16)#716
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,14)#717
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,16)#718
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#719
synoptic.model.Relation.hashCode()I#Constant(I,31)#0
synoptic.model.Relation.hashCode()I#LocalStore(I,1)#1
synoptic.model.Relation.hashCode()I#Constant(I,1)#2
synoptic.model.Relation.hashCode()I#LocalStore(I,2)#3
synoptic.model.Relation.hashCode()I#Constant(I,31)#4
synoptic.model.Relation.hashCode()I#LocalLoad(I,2)#5
synoptic.model.Relation.hashCode()I#BinaryOp(I,mul)#6
synoptic.model.Relation.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#7
synoptic.model.Relation.hashCode()I#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/Relation;,relation)#8
synoptic.model.Relation.hashCode()I#Invoke(VIRTUAL,Ljava/lang/String;,hashCode,()I)#9
synoptic.model.Relation.hashCode()I#BinaryOp(I,add)#10
synoptic.model.Relation.hashCode()I#LocalStore(I,2)#11
synoptic.model.Relation.hashCode()I#Constant(I,31)#12
synoptic.model.Relation.hashCode()I#LocalLoad(I,2)#13
synoptic.model.Relation.hashCode()I#BinaryOp(I,mul)#14
synoptic.model.Relation.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#15
synoptic.model.Relation.hashCode()I#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/Relation;,name)#16
synoptic.model.Relation.hashCode()I#Invoke(VIRTUAL,Ljava/lang/String;,hashCode,()I)#17
synoptic.model.Relation.hashCode()I#BinaryOp(I,add)#18
synoptic.model.Relation.hashCode()I#LocalStore(I,2)#19
synoptic.model.Relation.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#20
synoptic.model.Relation.hashCode()I#Get(Z,NONSTATIC,Lsynoptic/model/Relation;,isClosure)#21
synoptic.model.Relation.hashCode()I#Constant(I,0)#22
synoptic.model.Relation.hashCode()I#ConditionalBranch(I,eq,30)#23
synoptic.model.Relation.hashCode()I#LocalLoad(I,2)#30
synoptic.model.Relation.hashCode()I#Return(I)#31
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Pop(1)#720
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,0)#721
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Get(Lsynoptic/util/NamedSubstitution;,NONSTATIC,Lsynoptic/main/TraceParser;,filter)#722
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,15)#723
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(VIRTUAL,Lsynoptic/util/NamedSubstitution;,substitute,(Ljava/util/Map;)Ljava/lang/String;)#724
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#New(Ljava/lang/StringBuilder;,0)#0
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Dup(1,0)#1
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#2
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,2)#3
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Constant(I,1)#4
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#LocalStore(I,3)#5
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Goto(31)#6
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#LocalLoad(I,3)#31
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#32
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/util/NamedSubstitution;,contents)#33
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/List;,size,()I)#34
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#ConditionalBranch(I,lt,7)#35
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#7
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#8
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/util/NamedSubstitution;,contents)#9
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#LocalLoad(I,3)#10
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Constant(I,1)#11
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#BinaryOp(I,sub)#12
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#13
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#CheckCast(Ljava/lang/String;)#14
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#15
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Pop(1)#16
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#17
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#18
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#19
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/util/NamedSubstitution;,contents)#20
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#LocalLoad(I,3)#21
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#22
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#23
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#CheckCast(Ljava/lang/String;)#24
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#25
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Pop(1)#26
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#LocalLoad(I,3)#27
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Constant(I,2)#28
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#BinaryOp(I,add)#29
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#LocalStore(I,3)#30
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#36
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#37
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/util/NamedSubstitution;,contents)#38
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#39
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/util/NamedSubstitution;,contents)#40
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/List;,size,()I)#41
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Constant(I,1)#42
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#BinaryOp(I,sub)#43
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#44
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#CheckCast(Ljava/lang/String;)#45
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#46
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Pop(1)#47
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#48
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#49
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Return(Ljava/lang/Object;)#50
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalStore(Ljava/lang/Object;,17)#725
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,0)#726
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,5)#727
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,17)#728
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(SPECIAL,Lsynoptic/main/TraceParser;,addEventNodeToPartition,(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;)#729
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#New(Lsynoptic/model/EventNode;,0)#0
synoptic.model.EventNode.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@8209f7a2)#0
synoptic.model.EventNode.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
synoptic.model.EventNode.<clinit>()V#Constant(I,0)#2
synoptic.model.EventNode.<clinit>()V#ConditionalBranch(I,ne,6)#3
synoptic.model.EventNode.<clinit>()V#Constant(I,1)#4
synoptic.model.EventNode.<clinit>()V#Goto(7)#5
synoptic.model.EventNode.<clinit>()V#Put(Z,STATIC,Lsynoptic/model/EventNode;,$assertionsDisabled)#7
synoptic.model.EventNode.<clinit>()V#Return(V)#8
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Dup(1,0)#1
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,1)#2
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Invoke(SPECIAL,Lsynoptic/model/EventNode;,<init>,(Lsynoptic/model/Event;)V)#3
synoptic.model.EventNode.<init>(Lsynoptic/model/Event;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.EventNode.<init>(Lsynoptic/model/Event;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
synoptic.model.EventNode.<init>(Lsynoptic/model/Event;)V#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.model.EventNode.<init>(Lsynoptic/model/Event;)V#Constant(I,0)#3
synoptic.model.EventNode.<init>(Lsynoptic/model/Event;)V#Put(I,NONSTATIC,Lsynoptic/model/EventNode;,traceID)#4
synoptic.model.EventNode.<init>(Lsynoptic/model/Event;)V#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.model.EventNode.<init>(Lsynoptic/model/Event;)V#New(Ljava/util/ArrayList;,0)#6
synoptic.model.EventNode.<init>(Lsynoptic/model/Event;)V#Dup(1,0)#7
synoptic.model.EventNode.<init>(Lsynoptic/model/Event;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#8
synoptic.model.EventNode.<init>(Lsynoptic/model/Event;)V#Put(Ljava/util/List;,NONSTATIC,Lsynoptic/model/EventNode;,transitions)#9
synoptic.model.EventNode.<init>(Lsynoptic/model/Event;)V#LocalLoad(Ljava/lang/Object;,0)#10
synoptic.model.EventNode.<init>(Lsynoptic/model/Event;)V#New(Ljava/util/LinkedHashMap;,0)#11
synoptic.model.EventNode.<init>(Lsynoptic/model/Event;)V#Dup(1,0)#12
synoptic.model.EventNode.<init>(Lsynoptic/model/Event;)V#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#13
synoptic.model.EventNode.<init>(Lsynoptic/model/Event;)V#Put(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/model/EventNode;,transitionsByRelation)#14
synoptic.model.EventNode.<init>(Lsynoptic/model/Event;)V#Get(Z,STATIC,Lsynoptic/model/EventNode;,$assertionsDisabled)#15
synoptic.model.EventNode.<init>(Lsynoptic/model/Event;)V#Constant(I,0)#16
synoptic.model.EventNode.<init>(Lsynoptic/model/Event;)V#ConditionalBranch(I,ne,25)#17
synoptic.model.EventNode.<init>(Lsynoptic/model/Event;)V#LocalLoad(Ljava/lang/Object;,0)#25
synoptic.model.EventNode.<init>(Lsynoptic/model/Event;)V#LocalLoad(Ljava/lang/Object;,1)#26
synoptic.model.EventNode.<init>(Lsynoptic/model/Event;)V#Put(Lsynoptic/model/Event;,NONSTATIC,Lsynoptic/model/EventNode;,event)#27
synoptic.model.EventNode.<init>(Lsynoptic/model/Event;)V#LocalLoad(Ljava/lang/Object;,0)#28
synoptic.model.EventNode.<init>(Lsynoptic/model/Event;)V#Constant(L;,null)#29
synoptic.model.EventNode.<init>(Lsynoptic/model/Event;)V#Put(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/model/EventNode;,parent)#30
synoptic.model.EventNode.<init>(Lsynoptic/model/Event;)V#Return(V)#31
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#LocalStore(Ljava/lang/Object;,3)#4
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/main/TraceParser;,partitions)#6
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,2)#7
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#8
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#CheckCast(Ljava/util/ArrayList;)#9
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#LocalStore(Ljava/lang/Object;,4)#10
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,4)#11
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Constant(L;,null)#12
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#ConditionalBranch(Ljava/lang/Object;,ne,46)#13
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#New(Ljava/util/ArrayList;,0)#14
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Dup(1,0)#15
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#16
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#LocalStore(Ljava/lang/Object;,4)#17
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,0)#18
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/main/TraceParser;,partitions)#19
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,2)#20
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,4)#21
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#22
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Pop(1)#23
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Get(Ljava/util/logging/Logger;,STATIC,Lsynoptic/main/TraceParser;,logger)#24
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#New(Ljava/lang/StringBuilder;,0)#25
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Dup(1,0)#26
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Constant(Ljava/lang/String;,"Created partition '")#27
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#28
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,2)#29
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#30
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Constant(Ljava/lang/String;,"'")#31
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#32
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#33
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Invoke(VIRTUAL,Ljava/util/logging/Logger;,fine,(Ljava/lang/String;)V)#34
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,0)#35
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/main/TraceParser;,partitionNameToTraceID)#36
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,2)#37
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Get(I,STATIC,Lsynoptic/main/TraceParser;,nextTraceID)#38
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Invoke(STATIC,Ljava/lang/Integer;,valueOf,(I)Ljava/lang/Integer;)#39
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#40
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Pop(1)#41
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Get(I,STATIC,Lsynoptic/main/TraceParser;,nextTraceID)#42
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Constant(I,1)#43
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#BinaryOp(I,add)#44
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Put(I,STATIC,Lsynoptic/main/TraceParser;,nextTraceID)#45
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,3)#46
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,0)#47
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/main/TraceParser;,partitionNameToTraceID)#48
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,2)#49
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#50
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#CheckCast(Ljava/lang/Integer;)#51
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#52
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,setTraceID,(I)V)#53
synoptic.model.EventNode.setTraceID(I)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.EventNode.setTraceID(I)V#LocalLoad(I,1)#1
synoptic.model.EventNode.setTraceID(I)V#Put(I,NONSTATIC,Lsynoptic/model/EventNode;,traceID)#2
synoptic.model.EventNode.setTraceID(I)V#Return(V)#3
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,4)#54
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,3)#55
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#56
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Pop(1)#57
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,3)#58
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Return(Ljava/lang/Object;)#59
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalStore(Ljava/lang/Object;,18)#730
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,0)#731
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/main/TraceParser;,AllEventRelations)#732
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,18)#733
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#734
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Constant(I,0)#735
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#ConditionalBranch(I,ne,745)#736
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,0)#737
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/main/TraceParser;,AllEventRelations)#738
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,18)#739
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#New(Ljava/util/HashSet;,0)#740
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Dup(1,0)#741
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#742
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#743
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Pop(1)#744
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,0)#745
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/main/TraceParser;,AllEventRelations)#746
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,18)#747
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#748
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#CheckCast(Ljava/util/Set;)#749
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalStore(Ljava/lang/Object;,19)#750
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,19)#751
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,14)#752
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Set;,addAll,(Ljava/util/Collection;)Z)#753
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Pop(1)#754
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Constant(L;,null)#755
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalStore(Ljava/lang/Object;,15)#756
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,18)#757
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Return(Ljava/lang/Object;)#758
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalStore(Ljava/lang/Object;,10)#74
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalLoad(Ljava/lang/Object;,10)#75
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Constant(L;,null)#76
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#ConditionalBranch(Ljava/lang/Object;,ne,79)#77
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalLoad(Ljava/lang/Object;,6)#79
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalLoad(Ljava/lang/Object;,10)#80
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#81
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Pop(1)#82
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalLoad(Ljava/lang/Object;,4)#89
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Invoke(VIRTUAL,Ljava/io/BufferedReader;,close,()V)#90
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalLoad(Ljava/lang/Object;,0)#91
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/TraceParser;,selectedTimeGroup)#92
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Constant(Ljava/lang/String;,"VTIME")#93
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#94
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Constant(I,0)#95
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#ConditionalBranch(I,eq,183)#96
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalLoad(Ljava/lang/Object;,0)#183
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/TraceParser;,selectedTimeGroup)#184
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Constant(Ljava/lang/String;,"VTIME")#185
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#186
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Constant(I,0)#187
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#ConditionalBranch(I,eq,372)#188
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Get(Ljava/util/logging/Logger;,STATIC,Lsynoptic/main/TraceParser;,logger)#372
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#New(Ljava/lang/StringBuilder;,0)#373
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Dup(1,0)#374
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Constant(Ljava/lang/String;,"Successfully parsed ")#375
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#376
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalLoad(Ljava/lang/Object;,0)#377
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/main/TraceParser;,partitions)#378
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Invoke(INTERFACE,Ljava/util/Map;,size,()I)#379
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#380
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Constant(Ljava/lang/String;," traces, containing a total of ")#381
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#382
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalLoad(Ljava/lang/Object;,6)#383
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Invoke(VIRTUAL,Ljava/util/ArrayList;,size,()I)#384
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#385
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Constant(Ljava/lang/String;," events from [")#386
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#387
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalLoad(Ljava/lang/Object;,8)#388
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#389
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Constant(Ljava/lang/String;,"]")#390
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#391
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#392
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Invoke(VIRTUAL,Ljava/util/logging/Logger;,info,(Ljava/lang/String;)V)#393
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#LocalLoad(Ljava/lang/Object;,6)#394
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Return(Ljava/lang/Object;)#395
synoptic.main.TraceParser.parseTraceFile(Ljava/io/File;I)Ljava/util/ArrayList;#Return(Ljava/lang/Object;)#20
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,addAll,(Ljava/util/Collection;)Z)#63
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Pop(1)#64
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#LocalLoad(I,9)#65
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Constant(I,1)#66
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#BinaryOp(I,add)#67
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#LocalStore(I,9)#68
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Constant(Ljava/lang/String;,"Parsing took ")#76
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#LocalLoad(J,2)#77
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Invoke(STATIC,Lsynoptic/main/Main;,loggerInfoEnd,(Ljava/lang/String;J)V)#78
synoptic.main.Main.loggerInfoEnd(Ljava/lang/String;J)V#Get(Ljava/util/logging/Logger;,STATIC,Lsynoptic/main/Main;,logger)#0
synoptic.main.Main.loggerInfoEnd(Ljava/lang/String;J)V#New(Ljava/lang/StringBuilder;,0)#1
synoptic.main.Main.loggerInfoEnd(Ljava/lang/String;J)V#Dup(1,0)#2
synoptic.main.Main.loggerInfoEnd(Ljava/lang/String;J)V#LocalLoad(Ljava/lang/Object;,0)#3
synoptic.main.Main.loggerInfoEnd(Ljava/lang/String;J)V#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#4
synoptic.main.Main.loggerInfoEnd(Ljava/lang/String;J)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#5
synoptic.main.Main.loggerInfoEnd(Ljava/lang/String;J)V#Invoke(STATIC,Ljava/lang/System;,currentTimeMillis,()J)#6
synoptic.main.Main.loggerInfoEnd(Ljava/lang/String;J)V#LocalLoad(J,1)#7
synoptic.main.Main.loggerInfoEnd(Ljava/lang/String;J)V#BinaryOp(J,sub)#8
synoptic.main.Main.loggerInfoEnd(Ljava/lang/String;J)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(J)Ljava/lang/StringBuilder;)#9
synoptic.main.Main.loggerInfoEnd(Ljava/lang/String;J)V#Constant(Ljava/lang/String;,"ms")#10
synoptic.main.Main.loggerInfoEnd(Ljava/lang/String;J)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#11
synoptic.main.Main.loggerInfoEnd(Ljava/lang/String;J)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#12
synoptic.main.Main.loggerInfoEnd(Ljava/lang/String;J)V#Invoke(VIRTUAL,Ljava/util/logging/Logger;,info,(Ljava/lang/String;)V)#13
synoptic.main.Main.loggerInfoEnd(Ljava/lang/String;J)V#Return(V)#14
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,4)#79
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Return(Ljava/lang/Object;)#80
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#LocalStore(Ljava/lang/Object;,2)#14
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Goto(33)#15
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Lsynoptic/main/SynopticOptions;,STATIC,Lsynoptic/main/Main;,options)#33
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,debugParse)#34
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Constant(I,0)#35
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#ConditionalBranch(I,eq,42)#36
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#LocalLoad(Ljava/lang/Object;,1)#42
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Invoke(VIRTUAL,Lsynoptic/main/TraceParser;,logTimeTypeIsTotallyOrdered,()Z)#43
synoptic.main.TraceParser.logTimeTypeIsTotallyOrdered()Z#Get(Ljava/util/List;,STATIC,Lsynoptic/main/TraceParser;,totallyOrderedTimeGroups)#0
synoptic.main.TraceParser.logTimeTypeIsTotallyOrdered()Z#LocalLoad(Ljava/lang/Object;,0)#1
synoptic.main.TraceParser.logTimeTypeIsTotallyOrdered()Z#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/TraceParser;,selectedTimeGroup)#2
synoptic.main.TraceParser.logTimeTypeIsTotallyOrdered()Z#Invoke(INTERFACE,Ljava/util/List;,contains,(Ljava/lang/Object;)Z)#3
synoptic.main.TraceParser.logTimeTypeIsTotallyOrdered()Z#Return(I)#4
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Constant(I,0)#44
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#ConditionalBranch(I,ne,55)#45
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#LocalLoad(Ljava/lang/Object;,2)#55
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Invoke(INTERFACE,Ljava/util/List;,size,()I)#56
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Constant(I,0)#57
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#ConditionalBranch(I,ne,64)#58
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#LocalLoad(Ljava/lang/Object;,1)#64
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#LocalLoad(Ljava/lang/Object;,2)#65
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Invoke(STATIC,Lsynoptic/main/Main;,genChainsTraceGraph,(Lsynoptic/main/TraceParser;Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;)#66
synoptic.main.Main.genChainsTraceGraph(Lsynoptic/main/TraceParser;Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#Constant(Ljava/lang/String;,"Generating inter-event temporal relation...")#0
synoptic.main.Main.genChainsTraceGraph(Lsynoptic/main/TraceParser;Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#Invoke(STATIC,Lsynoptic/main/Main;,loggerInfoStart,(Ljava/lang/String;)J)#1
synoptic.main.Main.genChainsTraceGraph(Lsynoptic/main/TraceParser;Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#LocalStore(J,2)#2
synoptic.main.Main.genChainsTraceGraph(Lsynoptic/main/TraceParser;Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#LocalLoad(Ljava/lang/Object;,0)#3
synoptic.main.Main.genChainsTraceGraph(Lsynoptic/main/TraceParser;Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#LocalLoad(Ljava/lang/Object;,1)#4
synoptic.main.Main.genChainsTraceGraph(Lsynoptic/main/TraceParser;Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#Invoke(VIRTUAL,Lsynoptic/main/TraceParser;,generateDirectTORelation,(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;)#5
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#Get(Z,STATIC,Lsynoptic/main/TraceParser;,$assertionsDisabled)#0
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#Constant(I,0)#1
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#ConditionalBranch(I,ne,11)#2
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#New(Lsynoptic/model/ChainsTraceGraph;,0)#11
synoptic.model.TraceGraph.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@ba70b76d)#0
synoptic.model.TraceGraph.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
synoptic.model.TraceGraph.<clinit>()V#Constant(I,0)#2
synoptic.model.TraceGraph.<clinit>()V#ConditionalBranch(I,ne,6)#3
synoptic.model.TraceGraph.<clinit>()V#Constant(I,1)#4
synoptic.model.TraceGraph.<clinit>()V#Goto(7)#5
synoptic.model.TraceGraph.<clinit>()V#Put(Z,STATIC,Lsynoptic/model/TraceGraph;,$assertionsDisabled)#7
synoptic.model.TraceGraph.<clinit>()V#Constant(Ljava/lang/String;,"TransitiveClosure Logger")#8
synoptic.model.TraceGraph.<clinit>()V#Invoke(STATIC,Ljava/util/logging/Logger;,getLogger,(Ljava/lang/String;)Ljava/util/logging/Logger;)#9
synoptic.model.TraceGraph.<clinit>()V#Put(Ljava/util/logging/Logger;,STATIC,Lsynoptic/model/TraceGraph;,logger)#10
synoptic.model.TraceGraph.<clinit>()V#Return(V)#11
synoptic.model.ChainsTraceGraph.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@ea5ab93b)#0
synoptic.model.ChainsTraceGraph.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
synoptic.model.ChainsTraceGraph.<clinit>()V#Constant(I,0)#2
synoptic.model.ChainsTraceGraph.<clinit>()V#ConditionalBranch(I,ne,6)#3
synoptic.model.ChainsTraceGraph.<clinit>()V#Constant(I,1)#4
synoptic.model.ChainsTraceGraph.<clinit>()V#Goto(7)#5
synoptic.model.ChainsTraceGraph.<clinit>()V#Put(Z,STATIC,Lsynoptic/model/ChainsTraceGraph;,$assertionsDisabled)#7
synoptic.model.ChainsTraceGraph.<clinit>()V#Invoke(STATIC,Lsynoptic/model/Event;,newInitialStringEvent,()Lsynoptic/model/Event;)#8
synoptic.model.Event.newInitialStringEvent()Lsynoptic/model/Event;#New(Lsynoptic/model/Event;,0)#0
synoptic.model.Event.newInitialStringEvent()Lsynoptic/model/Event;#Dup(1,0)#1
synoptic.model.Event.newInitialStringEvent()Lsynoptic/model/Event;#Invoke(STATIC,Lsynoptic/model/StringEventType;,newInitialStringEventType,()Lsynoptic/model/StringEventType;)#2
synoptic.model.StringEventType.newInitialStringEventType()Lsynoptic/model/StringEventType;#New(Lsynoptic/model/StringEventType;,0)#0
synoptic.model.StringEventType.newInitialStringEventType()Lsynoptic/model/StringEventType;#Dup(1,0)#1
synoptic.model.StringEventType.newInitialStringEventType()Lsynoptic/model/StringEventType;#Constant(Ljava/lang/String;,"INITIAL")#2
synoptic.model.StringEventType.newInitialStringEventType()Lsynoptic/model/StringEventType;#Constant(I,1)#3
synoptic.model.StringEventType.newInitialStringEventType()Lsynoptic/model/StringEventType;#Constant(I,0)#4
synoptic.model.StringEventType.newInitialStringEventType()Lsynoptic/model/StringEventType;#Invoke(SPECIAL,Lsynoptic/model/StringEventType;,<init>,(Ljava/lang/String;ZZ)V)#5
synoptic.model.StringEventType.newInitialStringEventType()Lsynoptic/model/StringEventType;#Return(Ljava/lang/Object;)#6
synoptic.model.Event.newInitialStringEvent()Lsynoptic/model/Event;#Constant(L;,null)#3
synoptic.model.Event.newInitialStringEvent()Lsynoptic/model/Event;#Constant(L;,null)#4
synoptic.model.Event.newInitialStringEvent()Lsynoptic/model/Event;#Constant(I,0)#5
synoptic.model.Event.newInitialStringEvent()Lsynoptic/model/Event;#Invoke(SPECIAL,Lsynoptic/model/Event;,<init>,(Lsynoptic/model/EventType;Ljava/lang/String;Ljava/lang/String;I)V)#6
synoptic.model.Event.newInitialStringEvent()Lsynoptic/model/Event;#Return(Ljava/lang/Object;)#7
synoptic.model.ChainsTraceGraph.<clinit>()V#Put(Lsynoptic/model/Event;,STATIC,Lsynoptic/model/ChainsTraceGraph;,initEvent)#9
synoptic.model.ChainsTraceGraph.<clinit>()V#Invoke(STATIC,Lsynoptic/model/Event;,newTerminalStringEvent,()Lsynoptic/model/Event;)#10
synoptic.model.Event.newTerminalStringEvent()Lsynoptic/model/Event;#New(Lsynoptic/model/Event;,0)#0
synoptic.model.Event.newTerminalStringEvent()Lsynoptic/model/Event;#Dup(1,0)#1
synoptic.model.Event.newTerminalStringEvent()Lsynoptic/model/Event;#Invoke(STATIC,Lsynoptic/model/StringEventType;,newTerminalStringEventType,()Lsynoptic/model/StringEventType;)#2
synoptic.model.StringEventType.newTerminalStringEventType()Lsynoptic/model/StringEventType;#New(Lsynoptic/model/StringEventType;,0)#0
synoptic.model.StringEventType.newTerminalStringEventType()Lsynoptic/model/StringEventType;#Dup(1,0)#1
synoptic.model.StringEventType.newTerminalStringEventType()Lsynoptic/model/StringEventType;#Constant(Ljava/lang/String;,"TERMINAL")#2
synoptic.model.StringEventType.newTerminalStringEventType()Lsynoptic/model/StringEventType;#Constant(I,0)#3
synoptic.model.StringEventType.newTerminalStringEventType()Lsynoptic/model/StringEventType;#Constant(I,1)#4
synoptic.model.StringEventType.newTerminalStringEventType()Lsynoptic/model/StringEventType;#Invoke(SPECIAL,Lsynoptic/model/StringEventType;,<init>,(Ljava/lang/String;ZZ)V)#5
synoptic.model.StringEventType.newTerminalStringEventType()Lsynoptic/model/StringEventType;#Return(Ljava/lang/Object;)#6
synoptic.model.Event.newTerminalStringEvent()Lsynoptic/model/Event;#Constant(L;,null)#3
synoptic.model.Event.newTerminalStringEvent()Lsynoptic/model/Event;#Constant(L;,null)#4
synoptic.model.Event.newTerminalStringEvent()Lsynoptic/model/Event;#Constant(I,0)#5
synoptic.model.Event.newTerminalStringEvent()Lsynoptic/model/Event;#Invoke(SPECIAL,Lsynoptic/model/Event;,<init>,(Lsynoptic/model/EventType;Ljava/lang/String;Ljava/lang/String;I)V)#6
synoptic.model.Event.newTerminalStringEvent()Lsynoptic/model/Event;#Return(Ljava/lang/Object;)#7
synoptic.model.ChainsTraceGraph.<clinit>()V#Put(Lsynoptic/model/Event;,STATIC,Lsynoptic/model/ChainsTraceGraph;,termEvent)#11
synoptic.model.ChainsTraceGraph.<clinit>()V#Return(V)#12
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#Dup(1,0)#12
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#LocalLoad(Ljava/lang/Object;,1)#13
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#Invoke(SPECIAL,Lsynoptic/model/ChainsTraceGraph;,<init>,(Ljava/util/Collection;)V)#14
synoptic.model.ChainsTraceGraph.<init>(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.ChainsTraceGraph.<init>(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.model.ChainsTraceGraph.<init>(Ljava/util/Collection;)V#Invoke(SPECIAL,Lsynoptic/model/TraceGraph;,<init>,(Ljava/util/Collection;)V)#2
synoptic.model.TraceGraph.<init>(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.TraceGraph.<init>(Ljava/util/Collection;)V#Invoke(SPECIAL,Lsynoptic/model/TraceGraph;,<init>,()V)#1
synoptic.model.TraceGraph.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.TraceGraph.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
synoptic.model.TraceGraph.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.model.TraceGraph.<init>()V#New(Ljava/util/LinkedHashSet;,0)#3
synoptic.model.TraceGraph.<init>()V#Dup(1,0)#4
synoptic.model.TraceGraph.<init>()V#Invoke(SPECIAL,Ljava/util/LinkedHashSet;,<init>,()V)#5
synoptic.model.TraceGraph.<init>()V#Put(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/TraceGraph;,nodes)#6
synoptic.model.TraceGraph.<init>()V#LocalLoad(Ljava/lang/Object;,0)#7
synoptic.model.TraceGraph.<init>()V#New(Ljava/util/LinkedHashMap;,0)#8
synoptic.model.TraceGraph.<init>()V#Dup(1,0)#9
synoptic.model.TraceGraph.<init>()V#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#10
synoptic.model.TraceGraph.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/TraceGraph;,dummyTerminalNodes)#11
synoptic.model.TraceGraph.<init>()V#LocalLoad(Ljava/lang/Object;,0)#12
synoptic.model.TraceGraph.<init>()V#New(Ljava/util/LinkedHashMap;,0)#13
synoptic.model.TraceGraph.<init>()V#Dup(1,0)#14
synoptic.model.TraceGraph.<init>()V#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#15
synoptic.model.TraceGraph.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/TraceGraph;,dummyInitialNodes)#16
synoptic.model.TraceGraph.<init>()V#LocalLoad(Ljava/lang/Object;,0)#17
synoptic.model.TraceGraph.<init>()V#Constant(L;,null)#18
synoptic.model.TraceGraph.<init>()V#Put(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/TraceGraph;,cachedRelations)#19
synoptic.model.TraceGraph.<init>()V#LocalLoad(Ljava/lang/Object;,0)#20
synoptic.model.TraceGraph.<init>()V#Constant(L;,null)#21
synoptic.model.TraceGraph.<init>()V#Put(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/TraceGraph;,cachedRelations)#22
synoptic.model.TraceGraph.<init>()V#Return(V)#23
synoptic.model.TraceGraph.<init>(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.model.TraceGraph.<init>(Ljava/util/Collection;)V#Get(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/TraceGraph;,nodes)#3
synoptic.model.TraceGraph.<init>(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,1)#4
synoptic.model.TraceGraph.<init>(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Set;,addAll,(Ljava/util/Collection;)Z)#5
synoptic.model.TraceGraph.<init>(Ljava/util/Collection;)V#Pop(1)#6
synoptic.model.TraceGraph.<init>(Ljava/util/Collection;)V#Return(V)#7
synoptic.model.ChainsTraceGraph.<init>(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,0)#3
synoptic.model.ChainsTraceGraph.<init>(Ljava/util/Collection;)V#New(Ljava/util/LinkedHashMap;,0)#4
synoptic.model.ChainsTraceGraph.<init>(Ljava/util/Collection;)V#Dup(1,0)#5
synoptic.model.ChainsTraceGraph.<init>(Ljava/util/Collection;)V#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#6
synoptic.model.ChainsTraceGraph.<init>(Ljava/util/Collection;)V#Put(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/ChainsTraceGraph;,traceIdToInitNodes)#7
synoptic.model.ChainsTraceGraph.<init>(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,0)#8
synoptic.model.ChainsTraceGraph.<init>(Ljava/util/Collection;)V#New(Ljava/util/ArrayList;,0)#9
synoptic.model.ChainsTraceGraph.<init>(Ljava/util/Collection;)V#Dup(1,0)#10
synoptic.model.ChainsTraceGraph.<init>(Ljava/util/Collection;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#11
synoptic.model.ChainsTraceGraph.<init>(Ljava/util/Collection;)V#Put(Ljava/util/List;,NONSTATIC,Lsynoptic/model/ChainsTraceGraph;,traces)#12
synoptic.model.ChainsTraceGraph.<init>(Ljava/util/Collection;)V#Return(V)#13
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#LocalStore(Ljava/lang/Object;,2)#15
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#LocalLoad(Ljava/lang/Object;,0)#16
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/main/TraceParser;,partitions)#17
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#Invoke(INTERFACE,Ljava/util/Map;,keySet,()Ljava/util/Set;)#18
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#19
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#LocalStore(Ljava/lang/Object;,4)#20
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#Goto(35)#21
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#LocalLoad(Ljava/lang/Object;,4)#35
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#36
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#Constant(I,0)#37
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#ConditionalBranch(I,ne,22)#38
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#LocalLoad(Ljava/lang/Object;,4)#22
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#23
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#CheckCast(Ljava/lang/String;)#24
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#LocalStore(Ljava/lang/Object;,3)#25
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#LocalLoad(Ljava/lang/Object;,2)#26
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#LocalLoad(Ljava/lang/Object;,0)#27
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/main/TraceParser;,partitions)#28
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#LocalLoad(Ljava/lang/Object;,3)#29
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#30
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#CheckCast(Ljava/util/List;)#31
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#LocalLoad(Ljava/lang/Object;,0)#32
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/main/TraceParser;,AllEventRelations)#33
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#Invoke(VIRTUAL,Lsynoptic/model/ChainsTraceGraph;,addTrace,(Ljava/util/List;Ljava/util/Map;)V)#34
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#0
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#New(Lsynoptic/model/ChainsTraceGraph$1;,0)#1
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Dup(1,0)#2
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#3
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(SPECIAL,Lsynoptic/model/ChainsTraceGraph$1;,<init>,(Lsynoptic/model/ChainsTraceGraph;)V)#4
synoptic.model.ChainsTraceGraph$1.<init>(Lsynoptic/model/ChainsTraceGraph;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.ChainsTraceGraph$1.<init>(Lsynoptic/model/ChainsTraceGraph;)V#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.model.ChainsTraceGraph$1.<init>(Lsynoptic/model/ChainsTraceGraph;)V#Put(Lsynoptic/model/ChainsTraceGraph;,NONSTATIC,Lsynoptic/model/ChainsTraceGraph$1;,this$0)#2
synoptic.model.ChainsTraceGraph$1.<init>(Lsynoptic/model/ChainsTraceGraph;)V#LocalLoad(Ljava/lang/Object;,0)#3
synoptic.model.ChainsTraceGraph$1.<init>(Lsynoptic/model/ChainsTraceGraph;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#4
synoptic.model.ChainsTraceGraph$1.<init>(Lsynoptic/model/ChainsTraceGraph;)V#Return(V)#5
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(STATIC,Ljava/util/Collections;,sort,(Ljava/util/List;Ljava/util/Comparator;)V)#5
synoptic.model.ChainsTraceGraph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.ChainsTraceGraph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.model.ChainsTraceGraph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#CheckCast(Lsynoptic/model/EventNode;)#2
synoptic.model.ChainsTraceGraph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,2)#3
synoptic.model.ChainsTraceGraph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#CheckCast(Lsynoptic/model/EventNode;)#4
synoptic.model.ChainsTraceGraph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#Invoke(VIRTUAL,Lsynoptic/model/ChainsTraceGraph$1;,compare,(Lsynoptic/model/EventNode;Lsynoptic/model/EventNode;)I)#5
synoptic.model.ChainsTraceGraph$1.compare(Lsynoptic/model/EventNode;Lsynoptic/model/EventNode;)I#LocalLoad(Ljava/lang/Object;,1)#0
synoptic.model.ChainsTraceGraph$1.compare(Lsynoptic/model/EventNode;Lsynoptic/model/EventNode;)I#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTime,()Lsynoptic/util/time/ITime;)#1
synoptic.model.EventNode.getTime()Lsynoptic/util/time/ITime;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.EventNode.getTime()Lsynoptic/util/time/ITime;#Get(Lsynoptic/model/Event;,NONSTATIC,Lsynoptic/model/EventNode;,event)#1
synoptic.model.EventNode.getTime()Lsynoptic/util/time/ITime;#Invoke(VIRTUAL,Lsynoptic/model/Event;,getTime,()Lsynoptic/util/time/ITime;)#2
synoptic.model.Event.getTime()Lsynoptic/util/time/ITime;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.Event.getTime()Lsynoptic/util/time/ITime;#Get(Lsynoptic/util/time/ITime;,NONSTATIC,Lsynoptic/model/Event;,time)#1
synoptic.model.Event.getTime()Lsynoptic/util/time/ITime;#Return(Ljava/lang/Object;)#2
synoptic.model.EventNode.getTime()Lsynoptic/util/time/ITime;#Return(Ljava/lang/Object;)#3
synoptic.model.ChainsTraceGraph$1.compare(Lsynoptic/model/EventNode;Lsynoptic/model/EventNode;)I#LocalLoad(Ljava/lang/Object;,2)#2
synoptic.model.ChainsTraceGraph$1.compare(Lsynoptic/model/EventNode;Lsynoptic/model/EventNode;)I#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTime,()Lsynoptic/util/time/ITime;)#3
synoptic.model.ChainsTraceGraph$1.compare(Lsynoptic/model/EventNode;Lsynoptic/model/EventNode;)I#Invoke(INTERFACE,Lsynoptic/util/time/ITime;,compareTo,(Lsynoptic/util/time/ITime;)I)#4
synoptic.util.time.ITotalTime.compareTo(Lsynoptic/util/time/ITime;)I#LocalLoad(Ljava/lang/Object;,1)#0
synoptic.util.time.ITotalTime.compareTo(Lsynoptic/util/time/ITime;)I#Instanceof(Lsynoptic/util/time/ITotalTime;)#1
synoptic.util.time.ITotalTime.compareTo(Lsynoptic/util/time/ITime;)I#Constant(I,0)#2
synoptic.util.time.ITotalTime.compareTo(Lsynoptic/util/time/ITime;)I#ConditionalBranch(I,ne,10)#3
synoptic.util.time.ITotalTime.compareTo(Lsynoptic/util/time/ITime;)I#LocalLoad(Ljava/lang/Object;,0)#10
synoptic.util.time.ITotalTime.compareTo(Lsynoptic/util/time/ITime;)I#Get(I,NONSTATIC,Lsynoptic/util/time/ITotalTime;,time)#11
synoptic.util.time.ITotalTime.compareTo(Lsynoptic/util/time/ITime;)I#Invoke(STATIC,Ljava/lang/Integer;,valueOf,(I)Ljava/lang/Integer;)#12
synoptic.util.time.ITotalTime.compareTo(Lsynoptic/util/time/ITime;)I#LocalLoad(Ljava/lang/Object;,1)#13
synoptic.util.time.ITotalTime.compareTo(Lsynoptic/util/time/ITime;)I#CheckCast(Lsynoptic/util/time/ITotalTime;)#14
synoptic.util.time.ITotalTime.compareTo(Lsynoptic/util/time/ITime;)I#Get(I,NONSTATIC,Lsynoptic/util/time/ITotalTime;,time)#15
synoptic.util.time.ITotalTime.compareTo(Lsynoptic/util/time/ITime;)I#Invoke(STATIC,Ljava/lang/Integer;,valueOf,(I)Ljava/lang/Integer;)#16
synoptic.util.time.ITotalTime.compareTo(Lsynoptic/util/time/ITime;)I#Invoke(VIRTUAL,Ljava/lang/Integer;,compareTo,(Ljava/lang/Integer;)I)#17
synoptic.util.time.ITotalTime.compareTo(Lsynoptic/util/time/ITime;)I#Return(I)#18
synoptic.model.ChainsTraceGraph$1.compare(Lsynoptic/model/EventNode;Lsynoptic/model/EventNode;)I#Return(I)#5
synoptic.model.ChainsTraceGraph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#Return(I)#6
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#New(Lsynoptic/model/Trace;,0)#6
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Dup(1,0)#7
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(SPECIAL,Lsynoptic/model/Trace;,<init>,()V)#8
synoptic.model.Trace.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.Trace.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
synoptic.model.Trace.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.model.Trace.<init>()V#New(Ljava/util/HashMap;,0)#3
synoptic.model.Trace.<init>()V#Dup(1,0)#4
synoptic.model.Trace.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#5
synoptic.model.Trace.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/Trace;,paths)#6
synoptic.model.Trace.<init>()V#Return(V)#7
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,3)#9
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#10
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/model/ChainsTraceGraph;,traces)#11
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#12
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#13
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Pop(1)#14
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#New(Ljava/util/HashMap;,0)#15
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Dup(1,0)#16
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#17
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,4)#18
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#New(Ljava/util/HashSet;,0)#19
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Dup(1,0)#20
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#21
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,5)#22
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#23
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Constant(I,0)#24
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#25
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#CheckCast(Lsynoptic/model/EventNode;)#26
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,6)#27
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#28
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,7)#29
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,2)#30
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#31
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#32
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#CheckCast(Ljava/util/Set;)#33
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#34
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,9)#35
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Goto(63)#36
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#63
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#64
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Constant(I,0)#65
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#ConditionalBranch(I,ne,37)#66
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#37
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#38
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#CheckCast(Lsynoptic/model/Relation;)#39
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,8)#40
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#41
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#42
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/Relation;,getRelation,()Ljava/lang/String;)#43
synoptic.model.Relation.getRelation()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.Relation.getRelation()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/Relation;,relation)#1
synoptic.model.Relation.getRelation()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#44
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Pop(1)#45
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#46
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#47
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#48
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/Relation;,getRelation,()Ljava/lang/String;)#49
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/ChainsTraceGraph;,tagInitial,(Lsynoptic/model/EventNode;Ljava/lang/String;)V)#50
synoptic.model.ChainsTraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.ChainsTraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Get(Lsynoptic/model/Event;,STATIC,Lsynoptic/model/ChainsTraceGraph;,initEvent)#1
synoptic.model.ChainsTraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#2
synoptic.model.ChainsTraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Invoke(VIRTUAL,Lsynoptic/model/ChainsTraceGraph;,createIfNotExistsDummyInitialNode,(Lsynoptic/model/Event;Ljava/lang/String;)V)#3
synoptic.model.TraceGraph.createIfNotExistsDummyInitialNode(Lsynoptic/model/Event;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.TraceGraph.createIfNotExistsDummyInitialNode(Lsynoptic/model/Event;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.model.TraceGraph.createIfNotExistsDummyInitialNode(Lsynoptic/model/Event;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#2
synoptic.model.TraceGraph.createIfNotExistsDummyInitialNode(Lsynoptic/model/Event;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#3
synoptic.model.TraceGraph.createIfNotExistsDummyInitialNode(Lsynoptic/model/Event;Ljava/lang/String;)V#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/TraceGraph;,dummyInitialNodes)#4
synoptic.model.TraceGraph.createIfNotExistsDummyInitialNode(Lsynoptic/model/Event;Ljava/lang/String;)V#Invoke(SPECIAL,Lsynoptic/model/TraceGraph;,createIfNotExistsSpecialNode,(Lsynoptic/model/Event;Ljava/lang/String;Ljava/util/Map;)V)#5
synoptic.model.TraceGraph.createIfNotExistsSpecialNode(Lsynoptic/model/Event;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#0
synoptic.model.TraceGraph.createIfNotExistsSpecialNode(Lsynoptic/model/Event;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,2)#1
synoptic.model.TraceGraph.createIfNotExistsSpecialNode(Lsynoptic/model/Event;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#2
synoptic.model.TraceGraph.createIfNotExistsSpecialNode(Lsynoptic/model/Event;Ljava/lang/String;Ljava/util/Map;)V#Constant(I,0)#3
synoptic.model.TraceGraph.createIfNotExistsSpecialNode(Lsynoptic/model/Event;Ljava/lang/String;Ljava/util/Map;)V#ConditionalBranch(I,ne,20)#4
synoptic.model.TraceGraph.createIfNotExistsSpecialNode(Lsynoptic/model/Event;Ljava/lang/String;Ljava/util/Map;)V#New(Lsynoptic/model/EventNode;,0)#5
synoptic.model.TraceGraph.createIfNotExistsSpecialNode(Lsynoptic/model/Event;Ljava/lang/String;Ljava/util/Map;)V#Dup(1,0)#6
synoptic.model.TraceGraph.createIfNotExistsSpecialNode(Lsynoptic/model/Event;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#7
synoptic.model.TraceGraph.createIfNotExistsSpecialNode(Lsynoptic/model/Event;Ljava/lang/String;Ljava/util/Map;)V#Invoke(SPECIAL,Lsynoptic/model/EventNode;,<init>,(Lsynoptic/model/Event;)V)#8
synoptic.model.TraceGraph.createIfNotExistsSpecialNode(Lsynoptic/model/Event;Ljava/lang/String;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,4)#9
synoptic.model.TraceGraph.createIfNotExistsSpecialNode(Lsynoptic/model/Event;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#10
synoptic.model.TraceGraph.createIfNotExistsSpecialNode(Lsynoptic/model/Event;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,2)#11
synoptic.model.TraceGraph.createIfNotExistsSpecialNode(Lsynoptic/model/Event;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#12
synoptic.model.TraceGraph.createIfNotExistsSpecialNode(Lsynoptic/model/Event;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#13
synoptic.model.TraceGraph.createIfNotExistsSpecialNode(Lsynoptic/model/Event;Ljava/lang/String;Ljava/util/Map;)V#Pop(1)#14
synoptic.model.TraceGraph.createIfNotExistsSpecialNode(Lsynoptic/model/Event;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#15
synoptic.model.TraceGraph.createIfNotExistsSpecialNode(Lsynoptic/model/Event;Ljava/lang/String;Ljava/util/Map;)V#Get(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/TraceGraph;,nodes)#16
synoptic.model.TraceGraph.createIfNotExistsSpecialNode(Lsynoptic/model/Event;Ljava/lang/String;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#17
synoptic.model.TraceGraph.createIfNotExistsSpecialNode(Lsynoptic/model/Event;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#18
synoptic.model.TraceGraph.createIfNotExistsSpecialNode(Lsynoptic/model/Event;Ljava/lang/String;Ljava/util/Map;)V#Pop(1)#19
synoptic.model.TraceGraph.createIfNotExistsSpecialNode(Lsynoptic/model/Event;Ljava/lang/String;Ljava/util/Map;)V#Return(V)#20
synoptic.model.TraceGraph.createIfNotExistsDummyInitialNode(Lsynoptic/model/Event;Ljava/lang/String;)V#Return(V)#6
synoptic.model.ChainsTraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#4
synoptic.model.ChainsTraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#5
synoptic.model.ChainsTraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#6
synoptic.model.ChainsTraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Invoke(SPECIAL,Lsynoptic/model/TraceGraph;,tagInitial,(Lsynoptic/model/EventNode;Ljava/lang/String;)V)#7
synoptic.model.TraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Get(Z,STATIC,Lsynoptic/model/TraceGraph;,$assertionsDisabled)#0
synoptic.model.TraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Constant(I,0)#1
synoptic.model.TraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#ConditionalBranch(I,ne,14)#2
synoptic.model.TraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Get(Z,STATIC,Lsynoptic/model/TraceGraph;,$assertionsDisabled)#14
synoptic.model.TraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Constant(I,0)#15
synoptic.model.TraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#ConditionalBranch(I,ne,28)#16
synoptic.model.TraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#28
synoptic.model.TraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/TraceGraph;,dummyInitialNodes)#29
synoptic.model.TraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#30
synoptic.model.TraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#31
synoptic.model.TraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#CheckCast(Lsynoptic/model/EventNode;)#32
synoptic.model.TraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#33
synoptic.model.TraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#34
synoptic.model.TraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,addTransition,(Lsynoptic/model/EventNode;Ljava/lang/String;)V)#35
synoptic.model.EventNode.addTransition(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Get(Z,STATIC,Lsynoptic/model/EventNode;,$assertionsDisabled)#0
synoptic.model.EventNode.addTransition(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Constant(I,0)#1
synoptic.model.EventNode.addTransition(Lsynoptic/model/EventNode;Ljava/lang/String;)V#ConditionalBranch(I,ne,11)#2
synoptic.model.EventNode.addTransition(Lsynoptic/model/EventNode;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#11
synoptic.model.EventNode.addTransition(Lsynoptic/model/EventNode;Ljava/lang/String;)V#New(Lsynoptic/model/Transition;,0)#12
synoptic.model.Transition.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@4fd976a1)#0
synoptic.model.Transition.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
synoptic.model.Transition.<clinit>()V#Constant(I,0)#2
synoptic.model.Transition.<clinit>()V#ConditionalBranch(I,ne,6)#3
synoptic.model.Transition.<clinit>()V#Constant(I,1)#4
synoptic.model.Transition.<clinit>()V#Goto(7)#5
synoptic.model.Transition.<clinit>()V#Put(Z,STATIC,Lsynoptic/model/Transition;,$assertionsDisabled)#7
synoptic.model.Transition.<clinit>()V#Return(V)#8
synoptic.model.EventNode.addTransition(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Dup(1,0)#13
synoptic.model.EventNode.addTransition(Lsynoptic/model/EventNode;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#14
synoptic.model.EventNode.addTransition(Lsynoptic/model/EventNode;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#15
synoptic.model.EventNode.addTransition(Lsynoptic/model/EventNode;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#16
synoptic.model.EventNode.addTransition(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Invoke(SPECIAL,Lsynoptic/model/Transition;,<init>,(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V)#17
synoptic.model.Transition.<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.Transition.<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
synoptic.model.Transition.<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V#Get(Z,STATIC,Lsynoptic/model/Transition;,$assertionsDisabled)#2
synoptic.model.Transition.<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V#Constant(I,0)#3
synoptic.model.Transition.<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V#ConditionalBranch(I,ne,12)#4
synoptic.model.Transition.<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V#Get(Z,STATIC,Lsynoptic/model/Transition;,$assertionsDisabled)#12
synoptic.model.Transition.<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V#Constant(I,0)#13
synoptic.model.Transition.<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V#ConditionalBranch(I,ne,22)#14
synoptic.model.Transition.<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V#Get(Z,STATIC,Lsynoptic/model/Transition;,$assertionsDisabled)#22
synoptic.model.Transition.<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V#Constant(I,0)#23
synoptic.model.Transition.<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V#ConditionalBranch(I,ne,32)#24
synoptic.model.Transition.<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#32
synoptic.model.Transition.<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#33
synoptic.model.Transition.<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V#Put(Ljava/lang/Object;,NONSTATIC,Lsynoptic/model/Transition;,source)#34
synoptic.model.Transition.<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#35
synoptic.model.Transition.<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#36
synoptic.model.Transition.<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V#Put(Ljava/lang/Object;,NONSTATIC,Lsynoptic/model/Transition;,target)#37
synoptic.model.Transition.<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#38
synoptic.model.Transition.<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#39
synoptic.model.Transition.<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/Transition;,relation)#40
synoptic.model.Transition.<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V#Return(V)#41
synoptic.model.EventNode.addTransition(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,addTransition,(Lsynoptic/model/Transition;)V)#18
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/model/EventNode;,transitions)#1
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#LocalLoad(Ljava/lang/Object;,1)#2
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#3
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#Pop(1)#4
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#LocalLoad(Ljava/lang/Object;,1)#5
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#Invoke(VIRTUAL,Lsynoptic/model/Transition;,getRelation,()Ljava/lang/String;)#6
synoptic.model.Transition.getRelation()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.Transition.getRelation()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/Transition;,relation)#1
synoptic.model.Transition.getRelation()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#LocalStore(Ljava/lang/Object;,2)#7
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#LocalLoad(Ljava/lang/Object;,0)#8
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#Get(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/model/EventNode;,transitionsByRelation)#9
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#LocalLoad(Ljava/lang/Object;,2)#10
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#11
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#CheckCast(Ljava/util/List;)#12
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#LocalStore(Ljava/lang/Object;,3)#13
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#LocalLoad(Ljava/lang/Object;,3)#14
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#Constant(L;,null)#15
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#ConditionalBranch(Ljava/lang/Object;,ne,27)#16
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#New(Ljava/util/ArrayList;,0)#17
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#Dup(1,0)#18
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#19
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#LocalStore(Ljava/lang/Object;,3)#20
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#LocalLoad(Ljava/lang/Object;,0)#21
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#Get(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/model/EventNode;,transitionsByRelation)#22
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#LocalLoad(Ljava/lang/Object;,2)#23
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#LocalLoad(Ljava/lang/Object;,3)#24
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#25
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#Pop(1)#26
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#LocalLoad(Ljava/lang/Object;,3)#27
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#LocalLoad(Ljava/lang/Object;,1)#28
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#29
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#Pop(1)#30
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#Return(V)#31
synoptic.model.EventNode.addTransition(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Return(V)#19
synoptic.model.TraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Return(V)#36
synoptic.model.ChainsTraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#8
synoptic.model.ChainsTraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/ChainsTraceGraph;,traceIdToInitNodes)#9
synoptic.model.ChainsTraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#10
synoptic.model.ChainsTraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTraceID,()I)#11
synoptic.model.EventNode.getTraceID()I#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.EventNode.getTraceID()I#Get(I,NONSTATIC,Lsynoptic/model/EventNode;,traceID)#1
synoptic.model.EventNode.getTraceID()I#Return(I)#2
synoptic.model.ChainsTraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Invoke(STATIC,Ljava/lang/Integer;,valueOf,(I)Ljava/lang/Integer;)#12
synoptic.model.ChainsTraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#13
synoptic.model.ChainsTraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#14
synoptic.model.ChainsTraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Pop(1)#15
synoptic.model.ChainsTraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Return(V)#16
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#51
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#52
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/Relation;,getRelation,()Ljava/lang/String;)#53
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#54
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#55
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Pop(1)#56
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#57
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#58
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/Relation;,getRelation,()Ljava/lang/String;)#59
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#60
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Constant(I,0)#61
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/Trace;,addRelationPath,(Ljava/lang/String;Lsynoptic/model/EventNode;Z)V)#62
synoptic.model.Trace.addRelationPath(Ljava/lang/String;Lsynoptic/model/EventNode;Z)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.Trace.addRelationPath(Ljava/lang/String;Lsynoptic/model/EventNode;Z)V#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/Trace;,paths)#1
synoptic.model.Trace.addRelationPath(Ljava/lang/String;Lsynoptic/model/EventNode;Z)V#LocalLoad(Ljava/lang/Object;,1)#2
synoptic.model.Trace.addRelationPath(Ljava/lang/String;Lsynoptic/model/EventNode;Z)V#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#3
synoptic.model.Trace.addRelationPath(Ljava/lang/String;Lsynoptic/model/EventNode;Z)V#Constant(I,0)#4
synoptic.model.Trace.addRelationPath(Ljava/lang/String;Lsynoptic/model/EventNode;Z)V#ConditionalBranch(I,eq,11)#5
synoptic.model.Trace.addRelationPath(Ljava/lang/String;Lsynoptic/model/EventNode;Z)V#LocalLoad(Ljava/lang/Object;,0)#11
synoptic.model.Trace.addRelationPath(Ljava/lang/String;Lsynoptic/model/EventNode;Z)V#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/Trace;,paths)#12
synoptic.model.Trace.addRelationPath(Ljava/lang/String;Lsynoptic/model/EventNode;Z)V#LocalLoad(Ljava/lang/Object;,1)#13
synoptic.model.Trace.addRelationPath(Ljava/lang/String;Lsynoptic/model/EventNode;Z)V#New(Lsynoptic/model/RelationPath;,0)#14
synoptic.model.Trace.addRelationPath(Ljava/lang/String;Lsynoptic/model/EventNode;Z)V#Dup(1,0)#15
synoptic.model.Trace.addRelationPath(Ljava/lang/String;Lsynoptic/model/EventNode;Z)V#LocalLoad(Ljava/lang/Object;,2)#16
synoptic.model.Trace.addRelationPath(Ljava/lang/String;Lsynoptic/model/EventNode;Z)V#LocalLoad(Ljava/lang/Object;,1)#17
synoptic.model.Trace.addRelationPath(Ljava/lang/String;Lsynoptic/model/EventNode;Z)V#LocalLoad(I,3)#18
synoptic.model.Trace.addRelationPath(Ljava/lang/String;Lsynoptic/model/EventNode;Z)V#Invoke(SPECIAL,Lsynoptic/model/RelationPath;,<init>,(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V)#19
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,1)#3
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#Put(Lsynoptic/model/EventNode;,NONSTATIC,Lsynoptic/model/RelationPath;,eNode)#4
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,2)#6
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/RelationPath;,relation)#7
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,0)#8
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#Constant(Ljava/lang/String;,"t")#9
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/RelationPath;,orderingRelation)#10
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,0)#11
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#Constant(I,0)#12
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#Put(Z,NONSTATIC,Lsynoptic/model/RelationPath;,counted)#13
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,0)#14
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#New(Ljava/util/LinkedHashSet;,0)#15
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#Dup(1,0)#16
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#Invoke(SPECIAL,Ljava/util/LinkedHashSet;,<init>,()V)#17
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#Put(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/RelationPath;,seen)#18
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,0)#19
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#New(Ljava/util/LinkedHashMap;,0)#20
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#Dup(1,0)#21
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#22
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#Put(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/RelationPath;,eventCounts)#23
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,0)#24
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#New(Ljava/util/LinkedHashMap;,0)#25
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#Dup(1,0)#26
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#27
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#Put(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/RelationPath;,followedByCounts)#28
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,0)#29
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#New(Ljava/util/LinkedHashMap;,0)#30
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#Dup(1,0)#31
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#32
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#Put(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/RelationPath;,precedesCounts)#33
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,0)#34
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#LocalLoad(I,3)#35
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#Put(Z,NONSTATIC,Lsynoptic/model/RelationPath;,initialTransitivelyConnected)#36
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#Return(V)#37
synoptic.model.Trace.addRelationPath(Ljava/lang/String;Lsynoptic/model/EventNode;Z)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#20
synoptic.model.Trace.addRelationPath(Ljava/lang/String;Lsynoptic/model/EventNode;Z)V#Pop(1)#21
synoptic.model.Trace.addRelationPath(Ljava/lang/String;Lsynoptic/model/EventNode;Z)V#Return(V)#22
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#67
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Constant(I,1)#68
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#69
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#70
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,subList,(II)Ljava/util/List;)#71
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#72
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,9)#73
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Goto(172)#74
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#172
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#173
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Constant(I,0)#174
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#ConditionalBranch(I,ne,75)#175
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#75
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#76
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#CheckCast(Lsynoptic/model/EventNode;)#77
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,8)#78
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#79
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTime,()Lsynoptic/util/time/ITime;)#80
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#81
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTime,()Lsynoptic/util/time/ITime;)#82
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Lsynoptic/util/time/ITime;,equals,(Ljava/lang/Object;)Z)#83
synoptic.util.time.ITotalTime.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.util.time.ITotalTime.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.util.time.ITotalTime.equals(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,5)#2
synoptic.util.time.ITotalTime.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#5
synoptic.util.time.ITotalTime.equals(Ljava/lang/Object;)Z#Constant(L;,null)#6
synoptic.util.time.ITotalTime.equals(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,10)#7
synoptic.util.time.ITotalTime.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#10
synoptic.util.time.ITotalTime.equals(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/lang/Object;,getClass,()Ljava/lang/Class;)#11
synoptic.util.time.ITotalTime.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#12
synoptic.util.time.ITotalTime.equals(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/lang/Object;,getClass,()Ljava/lang/Class;)#13
synoptic.util.time.ITotalTime.equals(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,eq,17)#14
synoptic.util.time.ITotalTime.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#17
synoptic.util.time.ITotalTime.equals(Ljava/lang/Object;)Z#CheckCast(Lsynoptic/util/time/ITotalTime;)#18
synoptic.util.time.ITotalTime.equals(Ljava/lang/Object;)Z#LocalStore(Ljava/lang/Object;,2)#19
synoptic.util.time.ITotalTime.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#20
synoptic.util.time.ITotalTime.equals(Ljava/lang/Object;)Z#Get(I,NONSTATIC,Lsynoptic/util/time/ITotalTime;,time)#21
synoptic.util.time.ITotalTime.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,2)#22
synoptic.util.time.ITotalTime.equals(Ljava/lang/Object;)Z#Get(I,NONSTATIC,Lsynoptic/util/time/ITotalTime;,time)#23
synoptic.util.time.ITotalTime.equals(Ljava/lang/Object;)Z#ConditionalBranch(I,eq,27)#24
synoptic.util.time.ITotalTime.equals(Ljava/lang/Object;)Z#Constant(I,0)#25
synoptic.util.time.ITotalTime.equals(Ljava/lang/Object;)Z#Return(I)#26
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Constant(I,0)#84
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#ConditionalBranch(I,eq,108)#85
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,2)#108
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#109
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#110
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#CheckCast(Ljava/util/Set;)#111
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#112
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,11)#113
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Goto(166)#114
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#166
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#167
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Constant(I,0)#168
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#ConditionalBranch(I,ne,115)#169
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#115
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#116
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#CheckCast(Lsynoptic/model/Relation;)#117
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,10)#118
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#119
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#120
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/Relation;,getRelation,()Ljava/lang/String;)#121
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#122
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Pop(1)#123
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#124
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/Relation;,isClosure,()Z)#125
synoptic.model.Relation.isClosure()Z#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.Relation.isClosure()Z#Get(Z,NONSTATIC,Lsynoptic/model/Relation;,isClosure)#1
synoptic.model.Relation.isClosure()Z#Return(I)#2
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Constant(I,0)#126
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#ConditionalBranch(I,eq,155)#127
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#155
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#156
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#157
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/Relation;,getRelation,()Ljava/lang/String;)#158
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,addTransition,(Lsynoptic/model/EventNode;Ljava/lang/String;)V)#159
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#160
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#161
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/Relation;,getRelation,()Ljava/lang/String;)#162
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#163
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#164
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Pop(1)#165
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#170
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,7)#171
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,2)#176
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#177
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#178
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#CheckCast(Ljava/util/Set;)#179
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#180
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,9)#181
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Goto(197)#182
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#197
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#198
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Constant(I,0)#199
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#ConditionalBranch(I,ne,183)#200
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#183
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#184
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#CheckCast(Lsynoptic/model/Relation;)#185
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,8)#186
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#187
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#188
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/Relation;,getRelation,()Ljava/lang/String;)#189
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#190
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Pop(1)#191
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#192
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#193
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#194
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/Relation;,getRelation,()Ljava/lang/String;)#195
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/ChainsTraceGraph;,tagTerminal,(Lsynoptic/model/EventNode;Ljava/lang/String;)V)#196
synoptic.model.ChainsTraceGraph.tagTerminal(Lsynoptic/model/EventNode;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.ChainsTraceGraph.tagTerminal(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Get(Lsynoptic/model/Event;,STATIC,Lsynoptic/model/ChainsTraceGraph;,termEvent)#1
synoptic.model.ChainsTraceGraph.tagTerminal(Lsynoptic/model/EventNode;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#2
synoptic.model.ChainsTraceGraph.tagTerminal(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Invoke(VIRTUAL,Lsynoptic/model/ChainsTraceGraph;,createIfNotExistsDummyTerminalNode,(Lsynoptic/model/Event;Ljava/lang/String;)V)#3
synoptic.model.TraceGraph.createIfNotExistsDummyTerminalNode(Lsynoptic/model/Event;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.TraceGraph.createIfNotExistsDummyTerminalNode(Lsynoptic/model/Event;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.model.TraceGraph.createIfNotExistsDummyTerminalNode(Lsynoptic/model/Event;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#2
synoptic.model.TraceGraph.createIfNotExistsDummyTerminalNode(Lsynoptic/model/Event;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#3
synoptic.model.TraceGraph.createIfNotExistsDummyTerminalNode(Lsynoptic/model/Event;Ljava/lang/String;)V#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/TraceGraph;,dummyTerminalNodes)#4
synoptic.model.TraceGraph.createIfNotExistsDummyTerminalNode(Lsynoptic/model/Event;Ljava/lang/String;)V#Invoke(SPECIAL,Lsynoptic/model/TraceGraph;,createIfNotExistsSpecialNode,(Lsynoptic/model/Event;Ljava/lang/String;Ljava/util/Map;)V)#5
synoptic.model.TraceGraph.createIfNotExistsDummyTerminalNode(Lsynoptic/model/Event;Ljava/lang/String;)V#Return(V)#6
synoptic.model.ChainsTraceGraph.tagTerminal(Lsynoptic/model/EventNode;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#4
synoptic.model.ChainsTraceGraph.tagTerminal(Lsynoptic/model/EventNode;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#5
synoptic.model.ChainsTraceGraph.tagTerminal(Lsynoptic/model/EventNode;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#6
synoptic.model.ChainsTraceGraph.tagTerminal(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Invoke(SPECIAL,Lsynoptic/model/TraceGraph;,tagTerminal,(Lsynoptic/model/EventNode;Ljava/lang/String;)V)#7
synoptic.model.TraceGraph.tagTerminal(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Get(Z,STATIC,Lsynoptic/model/TraceGraph;,$assertionsDisabled)#0
synoptic.model.TraceGraph.tagTerminal(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Constant(I,0)#1
synoptic.model.TraceGraph.tagTerminal(Lsynoptic/model/EventNode;Ljava/lang/String;)V#ConditionalBranch(I,ne,14)#2
synoptic.model.TraceGraph.tagTerminal(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Get(Z,STATIC,Lsynoptic/model/TraceGraph;,$assertionsDisabled)#14
synoptic.model.TraceGraph.tagTerminal(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Constant(I,0)#15
synoptic.model.TraceGraph.tagTerminal(Lsynoptic/model/EventNode;Ljava/lang/String;)V#ConditionalBranch(I,ne,28)#16
synoptic.model.TraceGraph.tagTerminal(Lsynoptic/model/EventNode;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#28
synoptic.model.TraceGraph.tagTerminal(Lsynoptic/model/EventNode;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#29
synoptic.model.TraceGraph.tagTerminal(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/TraceGraph;,dummyTerminalNodes)#30
synoptic.model.TraceGraph.tagTerminal(Lsynoptic/model/EventNode;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#31
synoptic.model.TraceGraph.tagTerminal(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#32
synoptic.model.TraceGraph.tagTerminal(Lsynoptic/model/EventNode;Ljava/lang/String;)V#CheckCast(Lsynoptic/model/EventNode;)#33
synoptic.model.TraceGraph.tagTerminal(Lsynoptic/model/EventNode;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#34
synoptic.model.TraceGraph.tagTerminal(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,addTransition,(Lsynoptic/model/EventNode;Ljava/lang/String;)V)#35
synoptic.model.TraceGraph.tagTerminal(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Return(V)#36
synoptic.model.ChainsTraceGraph.tagTerminal(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Return(V)#8
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#201
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#202
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,9)#203
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Goto(219)#204
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#219
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#220
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Constant(I,0)#221
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#ConditionalBranch(I,ne,205)#222
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#205
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#206
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#CheckCast(Ljava/lang/String;)#207
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,8)#208
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#209
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#210
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/Trace;,hasRelation,(Ljava/lang/String;)Z)#211
synoptic.model.Trace.hasRelation(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.Trace.hasRelation(Ljava/lang/String;)Z#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/Trace;,paths)#1
synoptic.model.Trace.hasRelation(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#2
synoptic.model.Trace.hasRelation(Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#3
synoptic.model.Trace.hasRelation(Ljava/lang/String;)Z#Return(I)#4
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Constant(I,0)#212
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#ConditionalBranch(I,ne,219)#213
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#223
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,keySet,()Ljava/util/Set;)#224
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#225
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,9)#226
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Goto(241)#227
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#241
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#242
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Constant(I,0)#243
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#ConditionalBranch(I,ne,228)#244
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#228
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#229
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#CheckCast(Ljava/lang/String;)#230
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,8)#231
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#232
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#233
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#234
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#CheckCast(Lsynoptic/model/EventNode;)#235
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,10)#236
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#237
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#238
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#239
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/Trace;,markRelationPathFinalNode,(Ljava/lang/String;Lsynoptic/model/EventNode;)V)#240
synoptic.model.Trace.markRelationPathFinalNode(Ljava/lang/String;Lsynoptic/model/EventNode;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.Trace.markRelationPathFinalNode(Ljava/lang/String;Lsynoptic/model/EventNode;)V#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/Trace;,paths)#1
synoptic.model.Trace.markRelationPathFinalNode(Ljava/lang/String;Lsynoptic/model/EventNode;)V#LocalLoad(Ljava/lang/Object;,1)#2
synoptic.model.Trace.markRelationPathFinalNode(Ljava/lang/String;Lsynoptic/model/EventNode;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
synoptic.model.Trace.markRelationPathFinalNode(Ljava/lang/String;Lsynoptic/model/EventNode;)V#CheckCast(Lsynoptic/model/RelationPath;)#4
synoptic.model.Trace.markRelationPathFinalNode(Ljava/lang/String;Lsynoptic/model/EventNode;)V#LocalStore(Ljava/lang/Object;,3)#5
synoptic.model.Trace.markRelationPathFinalNode(Ljava/lang/String;Lsynoptic/model/EventNode;)V#LocalLoad(Ljava/lang/Object;,3)#6
synoptic.model.Trace.markRelationPathFinalNode(Ljava/lang/String;Lsynoptic/model/EventNode;)V#LocalLoad(Ljava/lang/Object;,2)#7
synoptic.model.Trace.markRelationPathFinalNode(Ljava/lang/String;Lsynoptic/model/EventNode;)V#Invoke(VIRTUAL,Lsynoptic/model/RelationPath;,setFinalNode,(Lsynoptic/model/EventNode;)V)#8
synoptic.model.RelationPath.setFinalNode(Lsynoptic/model/EventNode;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.RelationPath.setFinalNode(Lsynoptic/model/EventNode;)V#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.model.RelationPath.setFinalNode(Lsynoptic/model/EventNode;)V#Put(Lsynoptic/model/EventNode;,NONSTATIC,Lsynoptic/model/RelationPath;,eFinal)#2
synoptic.model.RelationPath.setFinalNode(Lsynoptic/model/EventNode;)V#Return(V)#3
synoptic.model.Trace.markRelationPathFinalNode(Ljava/lang/String;Lsynoptic/model/EventNode;)V#Return(V)#9
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Return(V)#245
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#LocalLoad(Ljava/lang/Object;,2)#39
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#Return(Ljava/lang/Object;)#40
synoptic.main.Main.genChainsTraceGraph(Lsynoptic/main/TraceParser;Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#LocalStore(Ljava/lang/Object;,4)#6
synoptic.main.Main.genChainsTraceGraph(Lsynoptic/main/TraceParser;Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#Constant(Ljava/lang/String;,"Generating temporal relation took ")#7
synoptic.main.Main.genChainsTraceGraph(Lsynoptic/main/TraceParser;Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#LocalLoad(J,2)#8
synoptic.main.Main.genChainsTraceGraph(Lsynoptic/main/TraceParser;Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#Invoke(STATIC,Lsynoptic/main/Main;,loggerInfoEnd,(Ljava/lang/String;J)V)#9
synoptic.main.Main.genChainsTraceGraph(Lsynoptic/main/TraceParser;Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#LocalLoad(Ljava/lang/Object;,4)#10
synoptic.main.Main.genChainsTraceGraph(Lsynoptic/main/TraceParser;Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#Return(Ljava/lang/Object;)#11
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#LocalStore(Ljava/lang/Object;,3)#67
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Lsynoptic/main/SynopticOptions;,STATIC,Lsynoptic/main/Main;,options)#68
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,dumpInitialGraphDotFile)#69
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Constant(I,0)#70
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#ConditionalBranch(I,eq,96)#71
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Constant(L;,null)#96
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#LocalStore(Ljava/lang/Object;,1)#97
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Lsynoptic/main/SynopticOptions;,STATIC,Lsynoptic/main/Main;,options)#98
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,useTransitiveClosureMining)#99
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#LocalLoad(Ljava/lang/Object;,3)#100
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Invoke(STATIC,Lsynoptic/main/Main;,mineTOInvariants,(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;)#101
synoptic.main.Main.mineTOInvariants(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(I,0)#0
synoptic.main.Main.mineTOInvariants(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#Constant(I,0)#1
synoptic.main.Main.mineTOInvariants(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#ConditionalBranch(I,eq,8)#2
synoptic.main.Main.mineTOInvariants(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#New(Lsynoptic/invariants/miners/ChainWalkingTOInvMiner;,0)#8
synoptic.invariants.miners.InvariantMiner.<clinit>()V#Constant(Ljava/lang/String;,"TemporalInvSet Logger")#0
synoptic.invariants.miners.InvariantMiner.<clinit>()V#Invoke(STATIC,Ljava/util/logging/Logger;,getLogger,(Ljava/lang/String;)Ljava/util/logging/Logger;)#1
synoptic.invariants.miners.InvariantMiner.<clinit>()V#Put(Ljava/util/logging/Logger;,STATIC,Lsynoptic/invariants/miners/InvariantMiner;,logger)#2
synoptic.invariants.miners.InvariantMiner.<clinit>()V#Return(V)#3
synoptic.invariants.miners.CountingInvariantMiner.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@16652f2b)#0
synoptic.invariants.miners.CountingInvariantMiner.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
synoptic.invariants.miners.CountingInvariantMiner.<clinit>()V#Constant(I,0)#2
synoptic.invariants.miners.CountingInvariantMiner.<clinit>()V#ConditionalBranch(I,ne,6)#3
synoptic.invariants.miners.CountingInvariantMiner.<clinit>()V#Constant(I,1)#4
synoptic.invariants.miners.CountingInvariantMiner.<clinit>()V#Goto(7)#5
synoptic.invariants.miners.CountingInvariantMiner.<clinit>()V#Put(Z,STATIC,Lsynoptic/invariants/miners/CountingInvariantMiner;,$assertionsDisabled)#7
synoptic.invariants.miners.CountingInvariantMiner.<clinit>()V#Return(V)#8
synoptic.main.Main.mineTOInvariants(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#Dup(1,0)#9
synoptic.main.Main.mineTOInvariants(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(SPECIAL,Lsynoptic/invariants/miners/ChainWalkingTOInvMiner;,<init>,()V)#10
synoptic.invariants.miners.ChainWalkingTOInvMiner.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.miners.ChainWalkingTOInvMiner.<init>()V#Invoke(SPECIAL,Lsynoptic/invariants/miners/CountingInvariantMiner;,<init>,()V)#1
synoptic.invariants.miners.CountingInvariantMiner.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.miners.CountingInvariantMiner.<init>()V#Invoke(SPECIAL,Lsynoptic/invariants/miners/InvariantMiner;,<init>,()V)#1
synoptic.invariants.miners.InvariantMiner.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.miners.InvariantMiner.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
synoptic.invariants.miners.InvariantMiner.<init>()V#Return(V)#2
synoptic.invariants.miners.CountingInvariantMiner.<init>()V#Return(V)#2
synoptic.invariants.miners.ChainWalkingTOInvMiner.<init>()V#Return(V)#2
synoptic.main.Main.mineTOInvariants(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#LocalStore(Ljava/lang/Object;,2)#11
synoptic.main.Main.mineTOInvariants(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#New(Ljava/lang/StringBuilder;,0)#12
synoptic.main.Main.mineTOInvariants(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#Dup(1,0)#13
synoptic.main.Main.mineTOInvariants(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#Constant(Ljava/lang/String;,"Mining invariants [")#14
synoptic.main.Main.mineTOInvariants(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#15
synoptic.main.Main.mineTOInvariants(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,2)#16
synoptic.main.Main.mineTOInvariants(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(VIRTUAL,Ljava/lang/Object;,getClass,()Ljava/lang/Class;)#17
synoptic.main.Main.mineTOInvariants(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(VIRTUAL,Ljava/lang/Class;,getName,()Ljava/lang/String;)#18
synoptic.main.Main.mineTOInvariants(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#19
synoptic.main.Main.mineTOInvariants(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#Constant(Ljava/lang/String;,"]..")#20
synoptic.main.Main.mineTOInvariants(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#21
synoptic.main.Main.mineTOInvariants(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#22
synoptic.main.Main.mineTOInvariants(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(STATIC,Lsynoptic/main/Main;,loggerInfoStart,(Ljava/lang/String;)J)#23
synoptic.main.Main.mineTOInvariants(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#LocalStore(J,3)#24
synoptic.main.Main.mineTOInvariants(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,2)#25
synoptic.main.Main.mineTOInvariants(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,1)#26
synoptic.main.Main.mineTOInvariants(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Lsynoptic/invariants/miners/TOInvariantMiner;,computeInvariants,(Lsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;)#27
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#New(Lsynoptic/invariants/TemporalInvariantSet;,0)#0
synoptic.invariants.TemporalInvariantSet.<clinit>()V#Constant(Ljava/lang/String;,"TemporalInvSet Logger")#0
synoptic.invariants.TemporalInvariantSet.<clinit>()V#Invoke(STATIC,Ljava/util/logging/Logger;,getLogger,(Ljava/lang/String;)Ljava/util/logging/Logger;)#1
synoptic.invariants.TemporalInvariantSet.<clinit>()V#Put(Ljava/util/logging/Logger;,STATIC,Lsynoptic/invariants/TemporalInvariantSet;,logger)#2
synoptic.invariants.TemporalInvariantSet.<clinit>()V#Return(V)#3
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#Dup(1,0)#1
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(SPECIAL,Lsynoptic/invariants/TemporalInvariantSet;,<init>,()V)#2
synoptic.invariants.TemporalInvariantSet.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.TemporalInvariantSet.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
synoptic.invariants.TemporalInvariantSet.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.invariants.TemporalInvariantSet.<init>()V#New(Ljava/util/LinkedHashSet;,0)#3
synoptic.invariants.TemporalInvariantSet.<init>()V#Dup(1,0)#4
synoptic.invariants.TemporalInvariantSet.<init>()V#Invoke(SPECIAL,Ljava/util/LinkedHashSet;,<init>,()V)#5
synoptic.invariants.TemporalInvariantSet.<init>()V#Put(Ljava/util/LinkedHashSet;,NONSTATIC,Lsynoptic/invariants/TemporalInvariantSet;,invariants)#6
synoptic.invariants.TemporalInvariantSet.<init>()V#Get(Ljava/util/logging/Logger;,STATIC,Lsynoptic/invariants/TemporalInvariantSet;,logger)#7
synoptic.invariants.TemporalInvariantSet.<init>()V#Get(Ljava/util/logging/Level;,STATIC,Ljava/util/logging/Level;,FINE)#8
synoptic.invariants.TemporalInvariantSet.<init>()V#Invoke(VIRTUAL,Ljava/util/logging/Logger;,setLevel,(Ljava/util/logging/Level;)V)#9
synoptic.invariants.TemporalInvariantSet.<init>()V#Return(V)#10
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#LocalStore(Ljava/lang/Object;,2)#3
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,1)#4
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(VIRTUAL,Lsynoptic/model/ChainsTraceGraph;,getRelations,()Ljava/util/Set;)#5
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#Get(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/TraceGraph;,cachedRelations)#1
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#Constant(L;,null)#2
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#ConditionalBranch(Ljava/lang/Object;,eq,7)#3
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#7
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#New(Ljava/util/LinkedHashSet;,0)#8
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#Dup(1,0)#9
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#Invoke(SPECIAL,Ljava/util/LinkedHashSet;,<init>,()V)#10
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#Put(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/TraceGraph;,cachedRelations)#11
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#12
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#Get(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/TraceGraph;,nodes)#13
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#14
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#LocalStore(Ljava/lang/Object;,2)#15
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#Goto(37)#16
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,2)#37
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#38
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#Constant(I,0)#39
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#ConditionalBranch(I,ne,17)#40
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,2)#17
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#18
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#CheckCast(Lsynoptic/model/EventNode;)#19
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#LocalStore(Ljava/lang/Object;,1)#20
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#21
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitionsIterator,()Lsynoptic/util/IIterableIterator;)#22
synoptic.model.EventNode.getTransitionsIterator()Lsynoptic/util/IIterableIterator;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.EventNode.getTransitionsIterator()Lsynoptic/util/IIterableIterator;#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitions,()Ljava/util/List;)#1
synoptic.model.EventNode.getTransitions()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.EventNode.getTransitions()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/model/EventNode;,transitions)#1
synoptic.model.EventNode.getTransitions()Ljava/util/List;#Return(Ljava/lang/Object;)#2
synoptic.model.EventNode.getTransitionsIterator()Lsynoptic/util/IIterableIterator;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#2
synoptic.model.EventNode.getTransitionsIterator()Lsynoptic/util/IIterableIterator;#Invoke(STATIC,Lsynoptic/util/IterableAdapter;,make,(Ljava/util/Iterator;)Lsynoptic/util/IIterableIterator;)#3
synoptic.util.IterableAdapter.make(Ljava/util/Iterator;)Lsynoptic/util/IIterableIterator;#New(Lsynoptic/util/IterableAdapter;,0)#0
synoptic.util.IterableAdapter.make(Ljava/util/Iterator;)Lsynoptic/util/IIterableIterator;#Dup(1,0)#1
synoptic.util.IterableAdapter.make(Ljava/util/Iterator;)Lsynoptic/util/IIterableIterator;#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.util.IterableAdapter.make(Ljava/util/Iterator;)Lsynoptic/util/IIterableIterator;#Invoke(SPECIAL,Lsynoptic/util/IterableAdapter;,<init>,(Ljava/util/Iterator;)V)#3
synoptic.util.IterableAdapter.<init>(Ljava/util/Iterator;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.util.IterableAdapter.<init>(Ljava/util/Iterator;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
synoptic.util.IterableAdapter.<init>(Ljava/util/Iterator;)V#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.util.IterableAdapter.<init>(Ljava/util/Iterator;)V#LocalLoad(Ljava/lang/Object;,1)#3
synoptic.util.IterableAdapter.<init>(Ljava/util/Iterator;)V#Put(Ljava/util/Iterator;,NONSTATIC,Lsynoptic/util/IterableAdapter;,iterator)#4
synoptic.util.IterableAdapter.<init>(Ljava/util/Iterator;)V#Return(V)#5
synoptic.util.IterableAdapter.make(Ljava/util/Iterator;)Lsynoptic/util/IIterableIterator;#Return(Ljava/lang/Object;)#4
synoptic.model.EventNode.getTransitionsIterator()Lsynoptic/util/IIterableIterator;#Return(Ljava/lang/Object;)#4
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#LocalStore(Ljava/lang/Object;,3)#23
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#Goto(33)#24
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,3)#33
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#34
synoptic.util.IterableAdapter.hasNext()Z#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.util.IterableAdapter.hasNext()Z#Get(Ljava/util/Iterator;,NONSTATIC,Lsynoptic/util/IterableAdapter;,iterator)#1
synoptic.util.IterableAdapter.hasNext()Z#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#2
synoptic.util.IterableAdapter.hasNext()Z#Return(I)#3
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#Constant(I,0)#35
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#ConditionalBranch(I,ne,25)#36
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#25
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#Get(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/TraceGraph;,cachedRelations)#26
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,3)#27
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#28
synoptic.util.IterableAdapter.next()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.util.IterableAdapter.next()Ljava/lang/Object;#Get(Ljava/util/Iterator;,NONSTATIC,Lsynoptic/util/IterableAdapter;,iterator)#1
synoptic.util.IterableAdapter.next()Ljava/lang/Object;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#2
synoptic.util.IterableAdapter.next()Ljava/lang/Object;#Return(Ljava/lang/Object;)#3
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#CheckCast(Lsynoptic/model/interfaces/ITransition;)#29
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#Invoke(INTERFACE,Lsynoptic/model/interfaces/ITransition;,getRelation,()Ljava/lang/String;)#30
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#31
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#Pop(1)#32
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#41
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#Get(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/TraceGraph;,cachedRelations)#42
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#Return(Ljava/lang/Object;)#43
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#6
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#LocalStore(Ljava/lang/Object;,4)#7
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#Goto(21)#8
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,4)#21
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#22
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#Constant(I,0)#23
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#ConditionalBranch(I,ne,9)#24
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,4)#9
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#10
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#CheckCast(Ljava/lang/String;)#11
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#LocalStore(Ljava/lang/Object;,3)#12
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,0)#13
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,1)#14
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,3)#15
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(VIRTUAL,Lsynoptic/invariants/miners/ChainWalkingTOInvMiner;,computeInvariants,(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;)#16
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#New(Ljava/util/LinkedHashMap;,0)#0
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Dup(1,0)#1
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#2
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalStore(Ljava/lang/Object;,3)#3
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#New(Ljava/util/LinkedHashSet;,0)#4
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Dup(1,0)#5
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(SPECIAL,Ljava/util/LinkedHashSet;,<init>,()V)#6
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalStore(Ljava/lang/Object;,4)#7
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,1)#8
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(VIRTUAL,Lsynoptic/model/ChainsTraceGraph;,getTraces,()Ljava/util/List;)#9
synoptic.model.ChainsTraceGraph.getTraces()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.ChainsTraceGraph.getTraces()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/model/ChainsTraceGraph;,traces)#1
synoptic.model.ChainsTraceGraph.getTraces()Ljava/util/List;#Invoke(STATIC,Ljava/util/Collections;,unmodifiableList,(Ljava/util/List;)Ljava/util/List;)#2
synoptic.model.ChainsTraceGraph.getTraces()Ljava/util/List;#Return(Ljava/lang/Object;)#3
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#10
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalStore(Ljava/lang/Object;,6)#11
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Goto(65)#12
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,6)#65
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#66
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Constant(I,0)#67
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#ConditionalBranch(I,ne,13)#68
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,6)#13
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#14
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#CheckCast(Lsynoptic/model/Trace;)#15
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalStore(Ljava/lang/Object;,5)#16
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,4)#17
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,5)#18
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,2)#19
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(VIRTUAL,Lsynoptic/model/Trace;,getSeen,(Ljava/lang/String;)Ljava/util/Set;)#20
synoptic.model.Trace.getSeen(Ljava/lang/String;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.Trace.getSeen(Ljava/lang/String;)Ljava/util/Set;#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/Trace;,paths)#1
synoptic.model.Trace.getSeen(Ljava/lang/String;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#2
synoptic.model.Trace.getSeen(Ljava/lang/String;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#3
synoptic.model.Trace.getSeen(Ljava/lang/String;)Ljava/util/Set;#Constant(I,0)#4
synoptic.model.Trace.getSeen(Ljava/lang/String;)Ljava/util/Set;#ConditionalBranch(I,ne,19)#5
synoptic.model.Trace.getSeen(Ljava/lang/String;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#19
synoptic.model.Trace.getSeen(Ljava/lang/String;)Ljava/util/Set;#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/Trace;,paths)#20
synoptic.model.Trace.getSeen(Ljava/lang/String;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#21
synoptic.model.Trace.getSeen(Ljava/lang/String;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#22
synoptic.model.Trace.getSeen(Ljava/lang/String;)Ljava/util/Set;#CheckCast(Lsynoptic/model/RelationPath;)#23
synoptic.model.Trace.getSeen(Ljava/lang/String;)Ljava/util/Set;#Invoke(VIRTUAL,Lsynoptic/model/RelationPath;,getSeen,()Ljava/util/Set;)#24
synoptic.model.RelationPath.getSeen()Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.RelationPath.getSeen()Ljava/util/Set;#Get(Z,NONSTATIC,Lsynoptic/model/RelationPath;,counted)#1
synoptic.model.RelationPath.getSeen()Ljava/util/Set;#Constant(I,0)#2
synoptic.model.RelationPath.getSeen()Ljava/util/Set;#ConditionalBranch(I,ne,6)#3
synoptic.model.RelationPath.getSeen()Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#4
synoptic.model.RelationPath.getSeen()Ljava/util/Set;#Invoke(SPECIAL,Lsynoptic/model/RelationPath;,count,()V)#5
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.RelationPath.count()V#Get(Lsynoptic/model/EventNode;,NONSTATIC,Lsynoptic/model/RelationPath;,eNode)#1
synoptic.model.RelationPath.count()V#LocalStore(Ljava/lang/Object;,1)#2
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,0)#3
synoptic.model.RelationPath.count()V#Get(Z,NONSTATIC,Lsynoptic/model/RelationPath;,initialTransitivelyConnected)#4
synoptic.model.RelationPath.count()V#Constant(I,0)#5
synoptic.model.RelationPath.count()V#ConditionalBranch(I,eq,9)#6
synoptic.model.RelationPath.count()V#Constant(I,1)#9
synoptic.model.RelationPath.count()V#LocalStore(I,2)#10
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,1)#11
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,0)#12
synoptic.model.RelationPath.count()V#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/RelationPath;,relation)#13
synoptic.model.RelationPath.count()V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitions,(Ljava/lang/String;)Ljava/util/List;)#14
synoptic.model.EventNode.getTransitions(Ljava/lang/String;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.EventNode.getTransitions(Ljava/lang/String;)Ljava/util/List;#Get(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/model/EventNode;,transitionsByRelation)#1
synoptic.model.EventNode.getTransitions(Ljava/lang/String;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#2
synoptic.model.EventNode.getTransitions(Ljava/lang/String;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
synoptic.model.EventNode.getTransitions(Ljava/lang/String;)Ljava/util/List;#CheckCast(Ljava/util/List;)#4
synoptic.model.EventNode.getTransitions(Ljava/lang/String;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,2)#5
synoptic.model.EventNode.getTransitions(Ljava/lang/String;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#6
synoptic.model.EventNode.getTransitions(Ljava/lang/String;)Ljava/util/List;#Constant(L;,null)#7
synoptic.model.EventNode.getTransitions(Ljava/lang/String;)Ljava/util/List;#ConditionalBranch(Ljava/lang/Object;,ne,11)#8
synoptic.model.EventNode.getTransitions(Ljava/lang/String;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#11
synoptic.model.EventNode.getTransitions(Ljava/lang/String;)Ljava/util/List;#Return(Ljava/lang/Object;)#12
synoptic.model.RelationPath.count()V#LocalStore(Ljava/lang/Object;,3)#15
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,3)#16
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/List;,isEmpty,()Z)#17
synoptic.model.RelationPath.count()V#Constant(I,0)#18
synoptic.model.RelationPath.count()V#ConditionalBranch(I,eq,279)#19
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,3)#279
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/List;,isEmpty,()Z)#280
synoptic.model.RelationPath.count()V#Constant(I,0)#281
synoptic.model.RelationPath.count()V#ConditionalBranch(I,eq,26)#282
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,1)#26
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,0)#27
synoptic.model.RelationPath.count()V#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/RelationPath;,orderingRelation)#28
synoptic.model.RelationPath.count()V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitions,(Ljava/lang/String;)Ljava/util/List;)#29
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#30
synoptic.model.RelationPath.count()V#Constant(I,1)#31
synoptic.model.RelationPath.count()V#ConditionalBranch(I,eq,38)#32
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,1)#38
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,0)#39
synoptic.model.RelationPath.count()V#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/RelationPath;,relation)#40
synoptic.model.RelationPath.count()V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitions,(Ljava/lang/String;)Ljava/util/List;)#41
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#42
synoptic.model.RelationPath.count()V#Constant(I,1)#43
synoptic.model.RelationPath.count()V#ConditionalBranch(I,le,50)#44
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,1)#50
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,0)#51
synoptic.model.RelationPath.count()V#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/RelationPath;,relation)#52
synoptic.model.RelationPath.count()V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitions,(Ljava/lang/String;)Ljava/util/List;)#53
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#54
synoptic.model.RelationPath.count()V#Constant(I,1)#55
synoptic.model.RelationPath.count()V#ConditionalBranch(I,ne,59)#56
synoptic.model.RelationPath.count()V#Constant(I,1)#57
synoptic.model.RelationPath.count()V#Goto(60)#58
synoptic.model.RelationPath.count()V#LocalStore(I,4)#60
synoptic.model.RelationPath.count()V#LocalLoad(I,4)#61
synoptic.model.RelationPath.count()V#Constant(I,0)#62
synoptic.model.RelationPath.count()V#ConditionalBranch(I,ne,101)#63
synoptic.model.RelationPath.count()V#LocalLoad(I,4)#101
synoptic.model.RelationPath.count()V#LocalStore(I,2)#102
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,1)#103
synoptic.model.RelationPath.count()V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getEType,()Lsynoptic/model/EventType;)#104
synoptic.model.EventNode.getEType()Lsynoptic/model/EventType;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.EventNode.getEType()Lsynoptic/model/EventType;#Get(Lsynoptic/model/Event;,NONSTATIC,Lsynoptic/model/EventNode;,event)#1
synoptic.model.EventNode.getEType()Lsynoptic/model/EventType;#Invoke(VIRTUAL,Lsynoptic/model/Event;,getEType,()Lsynoptic/model/EventType;)#2
synoptic.model.Event.getEType()Lsynoptic/model/EventType;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.Event.getEType()Lsynoptic/model/EventType;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/model/Event;,eType)#1
synoptic.model.Event.getEType()Lsynoptic/model/EventType;#Return(Ljava/lang/Object;)#2
synoptic.model.EventNode.getEType()Lsynoptic/model/EventType;#Return(Ljava/lang/Object;)#3
synoptic.model.RelationPath.count()V#LocalStore(Ljava/lang/Object;,5)#105
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,0)#106
synoptic.model.RelationPath.count()V#Get(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/RelationPath;,seen)#107
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#108
synoptic.model.RelationPath.count()V#LocalStore(Ljava/lang/Object;,7)#109
synoptic.model.RelationPath.count()V#Goto(158)#110
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,7)#158
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#159
synoptic.model.RelationPath.count()V#Constant(I,0)#160
synoptic.model.RelationPath.count()V#ConditionalBranch(I,ne,111)#161
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,0)#162
synoptic.model.RelationPath.count()V#Get(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/RelationPath;,seen)#163
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#164
synoptic.model.RelationPath.count()V#LocalStore(Ljava/lang/Object;,7)#165
synoptic.model.RelationPath.count()V#Goto(200)#166
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,7)#200
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#201
synoptic.model.RelationPath.count()V#Constant(I,0)#202
synoptic.model.RelationPath.count()V#ConditionalBranch(I,ne,167)#203
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,0)#204
synoptic.model.RelationPath.count()V#Get(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/RelationPath;,seen)#205
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,5)#206
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#207
synoptic.model.StringEventType.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.StringEventType.hashCode()I#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/StringEventType;,eType)#1
synoptic.model.StringEventType.hashCode()I#Invoke(VIRTUAL,Ljava/lang/String;,hashCode,()I)#2
synoptic.model.StringEventType.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#3
synoptic.model.StringEventType.hashCode()I#Invoke(SPECIAL,Lsynoptic/model/EventType;,hashCode,()I)#4
synoptic.model.EventType.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.EventType.hashCode()I#Get(Z,NONSTATIC,Lsynoptic/model/EventType;,isInitialEventType)#1
synoptic.model.EventType.hashCode()I#Constant(I,0)#2
synoptic.model.EventType.hashCode()I#ConditionalBranch(I,eq,6)#3
synoptic.model.EventType.hashCode()I#Constant(I,1301)#6
synoptic.model.EventType.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#7
synoptic.model.EventType.hashCode()I#Get(Z,NONSTATIC,Lsynoptic/model/EventType;,isTerminalEventType)#8
synoptic.model.EventType.hashCode()I#Constant(I,0)#9
synoptic.model.EventType.hashCode()I#ConditionalBranch(I,eq,13)#10
synoptic.model.EventType.hashCode()I#Constant(I,1907)#13
synoptic.model.EventType.hashCode()I#BinaryOp(I,add)#14
synoptic.model.EventType.hashCode()I#Return(I)#15
synoptic.model.StringEventType.hashCode()I#BinaryOp(I,add)#5
synoptic.model.StringEventType.hashCode()I#Return(I)#6
synoptic.model.RelationPath.count()V#Pop(1)#208
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,0)#209
synoptic.model.RelationPath.count()V#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/RelationPath;,eventCounts)#210
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,5)#211
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#212
synoptic.model.RelationPath.count()V#Constant(I,0)#213
synoptic.model.RelationPath.count()V#ConditionalBranch(I,ne,223)#214
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,0)#215
synoptic.model.RelationPath.count()V#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/RelationPath;,eventCounts)#216
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,5)#217
synoptic.model.RelationPath.count()V#Constant(I,1)#218
synoptic.model.RelationPath.count()V#Invoke(STATIC,Ljava/lang/Integer;,valueOf,(I)Ljava/lang/Integer;)#219
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#220
synoptic.model.RelationPath.count()V#Pop(1)#221
synoptic.model.RelationPath.count()V#Goto(237)#222
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,1)#237
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,0)#238
synoptic.model.RelationPath.count()V#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/RelationPath;,relation)#239
synoptic.model.RelationPath.count()V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitions,(Ljava/lang/String;)Ljava/util/List;)#240
synoptic.model.RelationPath.count()V#LocalStore(Ljava/lang/Object;,6)#241
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,6)#242
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/List;,isEmpty,()Z)#243
synoptic.model.RelationPath.count()V#Constant(I,0)#244
synoptic.model.RelationPath.count()V#ConditionalBranch(I,eq,251)#245
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,1)#251
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,0)#252
synoptic.model.RelationPath.count()V#Get(Lsynoptic/model/EventNode;,NONSTATIC,Lsynoptic/model/RelationPath;,eFinal)#253
synoptic.model.RelationPath.count()V#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#254
synoptic.model.RelationPath.count()V#Constant(I,0)#255
synoptic.model.RelationPath.count()V#ConditionalBranch(I,eq,258)#256
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,6)#258
synoptic.model.RelationPath.count()V#Constant(I,0)#259
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#260
synoptic.model.RelationPath.count()V#CheckCast(Lsynoptic/model/Transition;)#261
synoptic.model.RelationPath.count()V#Invoke(VIRTUAL,Lsynoptic/model/Transition;,getTarget,()Ljava/lang/Object;)#262
synoptic.model.Transition.getTarget()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.Transition.getTarget()Ljava/lang/Object;#Get(Ljava/lang/Object;,NONSTATIC,Lsynoptic/model/Transition;,target)#1
synoptic.model.Transition.getTarget()Ljava/lang/Object;#Return(Ljava/lang/Object;)#2
synoptic.model.RelationPath.count()V#CheckCast(Lsynoptic/model/EventNode;)#263
synoptic.model.RelationPath.count()V#LocalStore(Ljava/lang/Object;,1)#264
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,1)#265
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,0)#266
synoptic.model.RelationPath.count()V#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/RelationPath;,relation)#267
synoptic.model.RelationPath.count()V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitions,(Ljava/lang/String;)Ljava/util/List;)#268
synoptic.model.RelationPath.count()V#LocalStore(Ljava/lang/Object;,3)#269
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,3)#270
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/List;,isEmpty,()Z)#271
synoptic.model.RelationPath.count()V#Constant(I,0)#272
synoptic.model.RelationPath.count()V#ConditionalBranch(I,eq,279)#273
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,7)#111
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#112
synoptic.model.RelationPath.count()V#CheckCast(Lsynoptic/model/EventType;)#113
synoptic.model.RelationPath.count()V#LocalStore(Ljava/lang/Object;,6)#114
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,0)#115
synoptic.model.RelationPath.count()V#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/RelationPath;,precedesCounts)#116
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,6)#117
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#118
synoptic.model.RelationPath.count()V#Constant(I,0)#119
synoptic.model.RelationPath.count()V#ConditionalBranch(I,ne,129)#120
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,0)#121
synoptic.model.RelationPath.count()V#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/RelationPath;,precedesCounts)#122
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,6)#123
synoptic.model.RelationPath.count()V#New(Ljava/util/LinkedHashMap;,0)#124
synoptic.model.RelationPath.count()V#Dup(1,0)#125
synoptic.model.RelationPath.count()V#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#126
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#127
synoptic.model.RelationPath.count()V#Pop(1)#128
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,0)#129
synoptic.model.RelationPath.count()V#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/RelationPath;,precedesCounts)#130
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,6)#131
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#132
synoptic.model.RelationPath.count()V#CheckCast(Ljava/util/Map;)#133
synoptic.model.RelationPath.count()V#LocalStore(Ljava/lang/Object;,8)#134
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,8)#135
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,5)#136
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#137
synoptic.model.RelationPath.count()V#Constant(I,0)#138
synoptic.model.RelationPath.count()V#ConditionalBranch(I,ne,146)#139
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,8)#140
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,5)#141
synoptic.model.RelationPath.count()V#Constant(I,0)#142
synoptic.model.RelationPath.count()V#Invoke(STATIC,Ljava/lang/Integer;,valueOf,(I)Ljava/lang/Integer;)#143
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#144
synoptic.model.RelationPath.count()V#Pop(1)#145
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,8)#146
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,5)#147
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,8)#148
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,5)#149
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#150
synoptic.model.RelationPath.count()V#CheckCast(Ljava/lang/Integer;)#151
synoptic.model.RelationPath.count()V#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#152
synoptic.model.RelationPath.count()V#Constant(I,1)#153
synoptic.model.RelationPath.count()V#BinaryOp(I,add)#154
synoptic.model.RelationPath.count()V#Invoke(STATIC,Ljava/lang/Integer;,valueOf,(I)Ljava/lang/Integer;)#155
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#156
synoptic.model.RelationPath.count()V#Pop(1)#157
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,7)#167
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#168
synoptic.model.RelationPath.count()V#CheckCast(Lsynoptic/model/EventType;)#169
synoptic.model.RelationPath.count()V#LocalStore(Ljava/lang/Object;,6)#170
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,0)#171
synoptic.model.RelationPath.count()V#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/RelationPath;,followedByCounts)#172
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,6)#173
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#174
synoptic.model.RelationPath.count()V#Constant(I,0)#175
synoptic.model.RelationPath.count()V#ConditionalBranch(I,ne,185)#176
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,0)#177
synoptic.model.RelationPath.count()V#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/RelationPath;,followedByCounts)#178
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,6)#179
synoptic.model.RelationPath.count()V#New(Ljava/util/LinkedHashMap;,0)#180
synoptic.model.RelationPath.count()V#Dup(1,0)#181
synoptic.model.RelationPath.count()V#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#182
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#183
synoptic.model.RelationPath.count()V#Pop(1)#184
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,0)#185
synoptic.model.RelationPath.count()V#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/RelationPath;,followedByCounts)#186
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,6)#187
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#188
synoptic.model.RelationPath.count()V#CheckCast(Ljava/util/Map;)#189
synoptic.model.RelationPath.count()V#LocalStore(Ljava/lang/Object;,8)#190
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,8)#191
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,5)#192
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,0)#193
synoptic.model.RelationPath.count()V#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/RelationPath;,eventCounts)#194
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,6)#195
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#196
synoptic.model.RelationPath.count()V#CheckCast(Ljava/lang/Integer;)#197
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#198
synoptic.model.RelationPath.count()V#Pop(1)#199
synoptic.model.RelationPath.count()V#Goto(283)#257
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,0)#283
synoptic.model.RelationPath.count()V#Constant(I,1)#284
synoptic.model.RelationPath.count()V#Put(Z,NONSTATIC,Lsynoptic/model/RelationPath;,counted)#285
synoptic.model.RelationPath.count()V#Return(V)#286
synoptic.model.RelationPath.getSeen()Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#6
synoptic.model.RelationPath.getSeen()Ljava/util/Set;#Get(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/RelationPath;,seen)#7
synoptic.model.RelationPath.getSeen()Ljava/util/Set;#Invoke(STATIC,Ljava/util/Collections;,unmodifiableSet,(Ljava/util/Set;)Ljava/util/Set;)#8
synoptic.model.RelationPath.getSeen()Ljava/util/Set;#Return(Ljava/lang/Object;)#9
synoptic.model.Trace.getSeen(Ljava/lang/String;)Ljava/util/Set;#Return(Ljava/lang/Object;)#25
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Set;,addAll,(Ljava/util/Collection;)Z)#21
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Pop(1)#22
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,5)#23
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,2)#24
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(VIRTUAL,Lsynoptic/model/Trace;,getEventCounts,(Ljava/lang/String;)Ljava/util/Map;)#25
synoptic.model.Trace.getEventCounts(Ljava/lang/String;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.Trace.getEventCounts(Ljava/lang/String;)Ljava/util/Map;#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/Trace;,paths)#1
synoptic.model.Trace.getEventCounts(Ljava/lang/String;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,1)#2
synoptic.model.Trace.getEventCounts(Ljava/lang/String;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#3
synoptic.model.Trace.getEventCounts(Ljava/lang/String;)Ljava/util/Map;#Constant(I,0)#4
synoptic.model.Trace.getEventCounts(Ljava/lang/String;)Ljava/util/Map;#ConditionalBranch(I,ne,19)#5
synoptic.model.Trace.getEventCounts(Ljava/lang/String;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#19
synoptic.model.Trace.getEventCounts(Ljava/lang/String;)Ljava/util/Map;#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/Trace;,paths)#20
synoptic.model.Trace.getEventCounts(Ljava/lang/String;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,1)#21
synoptic.model.Trace.getEventCounts(Ljava/lang/String;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#22
synoptic.model.Trace.getEventCounts(Ljava/lang/String;)Ljava/util/Map;#CheckCast(Lsynoptic/model/RelationPath;)#23
synoptic.model.Trace.getEventCounts(Ljava/lang/String;)Ljava/util/Map;#Invoke(VIRTUAL,Lsynoptic/model/RelationPath;,getEventCounts,()Ljava/util/Map;)#24
synoptic.model.RelationPath.getEventCounts()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.RelationPath.getEventCounts()Ljava/util/Map;#Get(Z,NONSTATIC,Lsynoptic/model/RelationPath;,counted)#1
synoptic.model.RelationPath.getEventCounts()Ljava/util/Map;#Constant(I,0)#2
synoptic.model.RelationPath.getEventCounts()Ljava/util/Map;#ConditionalBranch(I,ne,6)#3
synoptic.model.RelationPath.getEventCounts()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#6
synoptic.model.RelationPath.getEventCounts()Ljava/util/Map;#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/RelationPath;,eventCounts)#7
synoptic.model.RelationPath.getEventCounts()Ljava/util/Map;#Invoke(STATIC,Ljava/util/Collections;,unmodifiableMap,(Ljava/util/Map;)Ljava/util/Map;)#8
synoptic.model.RelationPath.getEventCounts()Ljava/util/Map;#Return(Ljava/lang/Object;)#9
synoptic.model.Trace.getEventCounts(Ljava/lang/String;)Ljava/util/Map;#Return(Ljava/lang/Object;)#25
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalStore(Ljava/lang/Object;,7)#26
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,7)#27
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Map;,keySet,()Ljava/util/Set;)#28
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#29
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalStore(Ljava/lang/Object;,9)#30
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Goto(61)#31
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,9)#61
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#62
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Constant(I,0)#63
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#ConditionalBranch(I,ne,32)#64
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,9)#32
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#33
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#CheckCast(Lsynoptic/model/EventType;)#34
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalStore(Ljava/lang/Object;,8)#35
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,7)#36
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,8)#37
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#38
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#CheckCast(Ljava/lang/Integer;)#39
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#40
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalStore(I,10)#41
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,3)#42
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,8)#43
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#44
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Constant(I,0)#45
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#ConditionalBranch(I,eq,55)#46
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,3)#55
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,8)#56
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(I,10)#57
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(STATIC,Ljava/lang/Integer;,valueOf,(I)Ljava/lang/Integer;)#58
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#59
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Pop(1)#60
synoptic.model.StringEventType.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.StringEventType.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.model.StringEventType.equals(Ljava/lang/Object;)Z#Invoke(SPECIAL,Lsynoptic/model/EventType;,equals,(Ljava/lang/Object;)Z)#2
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#0
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#Constant(L;,null)#1
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,5)#2
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#5
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#6
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,10)#7
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#10
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/lang/Object;,getClass,()Ljava/lang/Class;)#11
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#12
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/lang/Object;,getClass,()Ljava/lang/Class;)#13
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,eq,17)#14
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#17
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#CheckCast(Lsynoptic/model/EventType;)#18
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#LocalStore(Ljava/lang/Object;,2)#19
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#20
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#Get(Z,NONSTATIC,Lsynoptic/model/EventType;,isInitialEventType)#21
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,2)#22
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#Get(Z,NONSTATIC,Lsynoptic/model/EventType;,isInitialEventType)#23
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#ConditionalBranch(I,ne,32)#24
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#25
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#Get(Z,NONSTATIC,Lsynoptic/model/EventType;,isTerminalEventType)#26
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,2)#27
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#Get(Z,NONSTATIC,Lsynoptic/model/EventType;,isTerminalEventType)#28
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#ConditionalBranch(I,ne,32)#29
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#Constant(I,1)#30
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#Return(I)#31
synoptic.model.StringEventType.equals(Ljava/lang/Object;)Z#Constant(I,0)#3
synoptic.model.StringEventType.equals(Ljava/lang/Object;)Z#ConditionalBranch(I,ne,7)#4
synoptic.model.StringEventType.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#7
synoptic.model.StringEventType.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#8
synoptic.model.StringEventType.equals(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,12)#9
synoptic.model.StringEventType.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#12
synoptic.model.StringEventType.equals(Ljava/lang/Object;)Z#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/StringEventType;,eType)#13
synoptic.model.StringEventType.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#14
synoptic.model.StringEventType.equals(Ljava/lang/Object;)Z#CheckCast(Lsynoptic/model/StringEventType;)#15
synoptic.model.StringEventType.equals(Ljava/lang/Object;)Z#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/StringEventType;,eType)#16
synoptic.model.StringEventType.equals(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#17
synoptic.model.StringEventType.equals(Ljava/lang/Object;)Z#Return(I)#18
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,0)#223
synoptic.model.RelationPath.count()V#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/RelationPath;,eventCounts)#224
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,5)#225
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,0)#226
synoptic.model.RelationPath.count()V#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/RelationPath;,eventCounts)#227
synoptic.model.RelationPath.count()V#LocalLoad(Ljava/lang/Object;,5)#228
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#229
synoptic.model.RelationPath.count()V#CheckCast(Ljava/lang/Integer;)#230
synoptic.model.RelationPath.count()V#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#231
synoptic.model.RelationPath.count()V#Constant(I,1)#232
synoptic.model.RelationPath.count()V#BinaryOp(I,add)#233
synoptic.model.RelationPath.count()V#Invoke(STATIC,Ljava/lang/Integer;,valueOf,(I)Ljava/lang/Integer;)#234
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#235
synoptic.model.RelationPath.count()V#Pop(1)#236
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(I,10)#47
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,3)#48
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,8)#49
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#50
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#CheckCast(Ljava/lang/Integer;)#51
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#52
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#BinaryOp(I,add)#53
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalStore(I,10)#54
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#New(Ljava/util/LinkedHashMap;,0)#69
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Dup(1,0)#70
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#71
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalStore(Ljava/lang/Object;,5)#72
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#New(Ljava/util/LinkedHashMap;,0)#73
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Dup(1,0)#74
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#75
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalStore(Ljava/lang/Object;,6)#76
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,4)#77
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#78
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalStore(Ljava/lang/Object;,8)#79
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Goto(127)#80
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,8)#127
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#128
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Constant(I,0)#129
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#ConditionalBranch(I,ne,81)#130
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,8)#81
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#82
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#CheckCast(Lsynoptic/model/EventType;)#83
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalStore(Ljava/lang/Object;,7)#84
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#New(Ljava/util/LinkedHashMap;,0)#85
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Dup(1,0)#86
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#87
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalStore(Ljava/lang/Object;,9)#88
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#New(Ljava/util/LinkedHashMap;,0)#89
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Dup(1,0)#90
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#91
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalStore(Ljava/lang/Object;,10)#92
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,5)#93
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,7)#94
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,9)#95
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#96
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Pop(1)#97
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,6)#98
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,7)#99
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,10)#100
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#101
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Pop(1)#102
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,4)#103
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#104
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalStore(Ljava/lang/Object;,12)#105
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Goto(123)#106
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,12)#123
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#124
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Constant(I,0)#125
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#ConditionalBranch(I,ne,107)#126
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,12)#107
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#108
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#CheckCast(Lsynoptic/model/EventType;)#109
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalStore(Ljava/lang/Object;,11)#110
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,9)#111
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,11)#112
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Constant(I,0)#113
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(STATIC,Ljava/lang/Integer;,valueOf,(I)Ljava/lang/Integer;)#114
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#115
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Pop(1)#116
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,10)#117
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,11)#118
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Constant(I,0)#119
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(STATIC,Ljava/lang/Integer;,valueOf,(I)Ljava/lang/Integer;)#120
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#121
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Pop(1)#122
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Constant(L;,null)#131
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalStore(Ljava/lang/Object;,7)#132
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,1)#133
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(VIRTUAL,Lsynoptic/model/ChainsTraceGraph;,getTraces,()Ljava/util/List;)#134
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#135
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalStore(Ljava/lang/Object;,9)#136
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Goto(175)#137
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,9)#175
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#176
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Constant(I,0)#177
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#ConditionalBranch(I,ne,138)#178
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,9)#138
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#139
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#CheckCast(Lsynoptic/model/Trace;)#140
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalStore(Ljava/lang/Object;,8)#141
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,8)#142
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,2)#143
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(VIRTUAL,Lsynoptic/model/Trace;,getPrecedesCounts,(Ljava/lang/String;)Ljava/util/Map;)#144
synoptic.model.Trace.getPrecedesCounts(Ljava/lang/String;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.Trace.getPrecedesCounts(Ljava/lang/String;)Ljava/util/Map;#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/Trace;,paths)#1
synoptic.model.Trace.getPrecedesCounts(Ljava/lang/String;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,1)#2
synoptic.model.Trace.getPrecedesCounts(Ljava/lang/String;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#3
synoptic.model.Trace.getPrecedesCounts(Ljava/lang/String;)Ljava/util/Map;#Constant(I,0)#4
synoptic.model.Trace.getPrecedesCounts(Ljava/lang/String;)Ljava/util/Map;#ConditionalBranch(I,ne,19)#5
synoptic.model.Trace.getPrecedesCounts(Ljava/lang/String;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#19
synoptic.model.Trace.getPrecedesCounts(Ljava/lang/String;)Ljava/util/Map;#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/Trace;,paths)#20
synoptic.model.Trace.getPrecedesCounts(Ljava/lang/String;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,1)#21
synoptic.model.Trace.getPrecedesCounts(Ljava/lang/String;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#22
synoptic.model.Trace.getPrecedesCounts(Ljava/lang/String;)Ljava/util/Map;#CheckCast(Lsynoptic/model/RelationPath;)#23
synoptic.model.Trace.getPrecedesCounts(Ljava/lang/String;)Ljava/util/Map;#Invoke(VIRTUAL,Lsynoptic/model/RelationPath;,getPrecedesCounts,()Ljava/util/Map;)#24
synoptic.model.RelationPath.getPrecedesCounts()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.RelationPath.getPrecedesCounts()Ljava/util/Map;#Get(Z,NONSTATIC,Lsynoptic/model/RelationPath;,counted)#1
synoptic.model.RelationPath.getPrecedesCounts()Ljava/util/Map;#Constant(I,0)#2
synoptic.model.RelationPath.getPrecedesCounts()Ljava/util/Map;#ConditionalBranch(I,ne,6)#3
synoptic.model.RelationPath.getPrecedesCounts()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#6
synoptic.model.RelationPath.getPrecedesCounts()Ljava/util/Map;#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/RelationPath;,precedesCounts)#7
synoptic.model.RelationPath.getPrecedesCounts()Ljava/util/Map;#Invoke(STATIC,Ljava/util/Collections;,unmodifiableMap,(Ljava/util/Map;)Ljava/util/Map;)#8
synoptic.model.RelationPath.getPrecedesCounts()Ljava/util/Map;#Return(Ljava/lang/Object;)#9
synoptic.model.Trace.getPrecedesCounts(Ljava/lang/String;)Ljava/util/Map;#Return(Ljava/lang/Object;)#25
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalStore(Ljava/lang/Object;,10)#145
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,0)#146
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,10)#147
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,6)#148
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(SPECIAL,Lsynoptic/invariants/miners/ChainWalkingTOInvMiner;,addCounts,(Ljava/util/Map;Ljava/util/Map;)V)#149
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#0
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,keySet,()Ljava/util/Set;)#1
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#2
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,4)#3
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Goto(57)#4
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#57
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#58
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Constant(I,0)#59
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#ConditionalBranch(I,ne,5)#60
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#5
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#6
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#CheckCast(Lsynoptic/model/EventType;)#7
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,3)#8
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#9
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#10
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#11
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#CheckCast(Ljava/util/Map;)#12
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,5)#13
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,2)#14
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#15
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#16
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#CheckCast(Ljava/util/Map;)#17
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,6)#18
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#19
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,keySet,()Ljava/util/Set;)#20
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#21
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,8)#22
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Goto(53)#23
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#53
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#54
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Constant(I,0)#55
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#ConditionalBranch(I,ne,24)#56
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#24
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#25
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#CheckCast(Lsynoptic/model/EventType;)#26
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,7)#27
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#28
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#29
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#30
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#CheckCast(Ljava/lang/Integer;)#31
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#32
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(I,9)#33
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#34
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#35
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#36
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Constant(I,0)#37
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#ConditionalBranch(I,eq,47)#38
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(I,9)#39
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#40
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#41
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#42
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#CheckCast(Ljava/lang/Integer;)#43
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#44
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#BinaryOp(I,add)#45
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(I,9)#46
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#47
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#48
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(I,9)#49
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Invoke(STATIC,Ljava/lang/Integer;,valueOf,(I)Ljava/lang/Integer;)#50
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#51
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Pop(1)#52
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Return(V)#61
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,8)#150
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,2)#151
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(VIRTUAL,Lsynoptic/model/Trace;,getFollowedByCounts,(Ljava/lang/String;)Ljava/util/Map;)#152
synoptic.model.Trace.getFollowedByCounts(Ljava/lang/String;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.Trace.getFollowedByCounts(Ljava/lang/String;)Ljava/util/Map;#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/Trace;,paths)#1
synoptic.model.Trace.getFollowedByCounts(Ljava/lang/String;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,1)#2
synoptic.model.Trace.getFollowedByCounts(Ljava/lang/String;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#3
synoptic.model.Trace.getFollowedByCounts(Ljava/lang/String;)Ljava/util/Map;#Constant(I,0)#4
synoptic.model.Trace.getFollowedByCounts(Ljava/lang/String;)Ljava/util/Map;#ConditionalBranch(I,ne,19)#5
synoptic.model.Trace.getFollowedByCounts(Ljava/lang/String;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#19
synoptic.model.Trace.getFollowedByCounts(Ljava/lang/String;)Ljava/util/Map;#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/Trace;,paths)#20
synoptic.model.Trace.getFollowedByCounts(Ljava/lang/String;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,1)#21
synoptic.model.Trace.getFollowedByCounts(Ljava/lang/String;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#22
synoptic.model.Trace.getFollowedByCounts(Ljava/lang/String;)Ljava/util/Map;#CheckCast(Lsynoptic/model/RelationPath;)#23
synoptic.model.Trace.getFollowedByCounts(Ljava/lang/String;)Ljava/util/Map;#Invoke(VIRTUAL,Lsynoptic/model/RelationPath;,getFollowedByCounts,()Ljava/util/Map;)#24
synoptic.model.RelationPath.getFollowedByCounts()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.RelationPath.getFollowedByCounts()Ljava/util/Map;#Get(Z,NONSTATIC,Lsynoptic/model/RelationPath;,counted)#1
synoptic.model.RelationPath.getFollowedByCounts()Ljava/util/Map;#Constant(I,0)#2
synoptic.model.RelationPath.getFollowedByCounts()Ljava/util/Map;#ConditionalBranch(I,ne,6)#3
synoptic.model.RelationPath.getFollowedByCounts()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#6
synoptic.model.RelationPath.getFollowedByCounts()Ljava/util/Map;#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/RelationPath;,followedByCounts)#7
synoptic.model.RelationPath.getFollowedByCounts()Ljava/util/Map;#Invoke(STATIC,Ljava/util/Collections;,unmodifiableMap,(Ljava/util/Map;)Ljava/util/Map;)#8
synoptic.model.RelationPath.getFollowedByCounts()Ljava/util/Map;#Return(Ljava/lang/Object;)#9
synoptic.model.Trace.getFollowedByCounts(Ljava/lang/String;)Ljava/util/Map;#Return(Ljava/lang/Object;)#25
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalStore(Ljava/lang/Object;,11)#153
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,0)#154
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,11)#155
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,5)#156
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(SPECIAL,Lsynoptic/invariants/miners/ChainWalkingTOInvMiner;,addCounts,(Ljava/util/Map;Ljava/util/Map;)V)#157
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,8)#158
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,2)#159
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(VIRTUAL,Lsynoptic/model/Trace;,getSeen,(Ljava/lang/String;)Ljava/util/Set;)#160
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalStore(Ljava/lang/Object;,12)#161
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,7)#162
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Constant(L;,null)#163
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#ConditionalBranch(Ljava/lang/Object;,ne,171)#164
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#New(Ljava/util/LinkedHashSet;,0)#165
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Dup(1,0)#166
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,12)#167
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(SPECIAL,Ljava/util/LinkedHashSet;,<init>,(Ljava/util/Collection;)V)#168
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalStore(Ljava/lang/Object;,7)#169
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Goto(175)#170
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,7)#171
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,12)#172
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Set;,retainAll,(Ljava/util/Collection;)Z)#173
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Pop(1)#174
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#New(Lsynoptic/invariants/TemporalInvariantSet;,0)#179
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Dup(1,0)#180
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,0)#181
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,2)#182
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,3)#183
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,5)#184
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,6)#185
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Constant(L;,null)#186
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,7)#187
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(VIRTUAL,Lsynoptic/invariants/miners/ChainWalkingTOInvMiner;,extractPathInvariantsFromWalkCounts,(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;)#188
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#New(Ljava/util/LinkedHashSet;,0)#0
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Dup(1,0)#1
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Invoke(SPECIAL,Ljava/util/LinkedHashSet;,<init>,()V)#2
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,7)#3
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,2)#4
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Map;,keySet,()Ljava/util/Set;)#5
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#6
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,9)#7
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Goto(87)#8
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,9)#87
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#88
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Constant(I,0)#89
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#ConditionalBranch(I,ne,9)#90
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,9)#9
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#10
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#CheckCast(Lsynoptic/model/EventType;)#11
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,8)#12
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,2)#13
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Map;,keySet,()Ljava/util/Set;)#14
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#15
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,11)#16
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Goto(83)#17
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,11)#83
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#84
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Constant(I,0)#85
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#ConditionalBranch(I,ne,18)#86
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,11)#18
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#19
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#CheckCast(Lsynoptic/model/EventType;)#20
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,10)#21
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#22
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,3)#23
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,8)#24
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,10)#25
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Invoke(VIRTUAL,Lsynoptic/invariants/miners/CountingInvariantMiner;,neverFollowedBy,(Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z)#26
synoptic.invariants.miners.CountingInvariantMiner.neverFollowedBy(Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#LocalLoad(Ljava/lang/Object;,1)#0
synoptic.invariants.miners.CountingInvariantMiner.neverFollowedBy(Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#LocalLoad(Ljava/lang/Object;,2)#1
synoptic.invariants.miners.CountingInvariantMiner.neverFollowedBy(Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#2
synoptic.invariants.miners.CountingInvariantMiner.neverFollowedBy(Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#CheckCast(Ljava/util/Map;)#3
synoptic.invariants.miners.CountingInvariantMiner.neverFollowedBy(Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#LocalLoad(Ljava/lang/Object;,3)#4
synoptic.invariants.miners.CountingInvariantMiner.neverFollowedBy(Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#5
synoptic.invariants.miners.CountingInvariantMiner.neverFollowedBy(Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#CheckCast(Ljava/lang/Integer;)#6
synoptic.invariants.miners.CountingInvariantMiner.neverFollowedBy(Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#7
synoptic.invariants.miners.CountingInvariantMiner.neverFollowedBy(Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Constant(I,0)#8
synoptic.invariants.miners.CountingInvariantMiner.neverFollowedBy(Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#ConditionalBranch(I,ne,12)#9
synoptic.invariants.miners.CountingInvariantMiner.neverFollowedBy(Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Constant(I,0)#12
synoptic.invariants.miners.CountingInvariantMiner.neverFollowedBy(Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Return(I)#13
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Constant(I,0)#27
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#ConditionalBranch(I,eq,49)#28
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#49
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,2)#50
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,3)#51
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,8)#52
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,10)#53
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Invoke(VIRTUAL,Lsynoptic/invariants/miners/CountingInvariantMiner;,alwaysFollowedBy,(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z)#54
synoptic.invariants.miners.CountingInvariantMiner.alwaysFollowedBy(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#LocalLoad(Ljava/lang/Object;,2)#0
synoptic.invariants.miners.CountingInvariantMiner.alwaysFollowedBy(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#LocalLoad(Ljava/lang/Object;,3)#1
synoptic.invariants.miners.CountingInvariantMiner.alwaysFollowedBy(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#2
synoptic.invariants.miners.CountingInvariantMiner.alwaysFollowedBy(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#CheckCast(Ljava/util/Map;)#3
synoptic.invariants.miners.CountingInvariantMiner.alwaysFollowedBy(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#LocalLoad(Ljava/lang/Object;,4)#4
synoptic.invariants.miners.CountingInvariantMiner.alwaysFollowedBy(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#5
synoptic.invariants.miners.CountingInvariantMiner.alwaysFollowedBy(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#CheckCast(Ljava/lang/Integer;)#6
synoptic.invariants.miners.CountingInvariantMiner.alwaysFollowedBy(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#LocalLoad(Ljava/lang/Object;,1)#7
synoptic.invariants.miners.CountingInvariantMiner.alwaysFollowedBy(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#LocalLoad(Ljava/lang/Object;,3)#8
synoptic.invariants.miners.CountingInvariantMiner.alwaysFollowedBy(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#9
synoptic.invariants.miners.CountingInvariantMiner.alwaysFollowedBy(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Invoke(VIRTUAL,Ljava/lang/Integer;,equals,(Ljava/lang/Object;)Z)#10
synoptic.invariants.miners.CountingInvariantMiner.alwaysFollowedBy(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Constant(I,0)#11
synoptic.invariants.miners.CountingInvariantMiner.alwaysFollowedBy(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#ConditionalBranch(I,eq,15)#12
synoptic.invariants.miners.CountingInvariantMiner.alwaysFollowedBy(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Constant(I,0)#15
synoptic.invariants.miners.CountingInvariantMiner.alwaysFollowedBy(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Return(I)#16
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Constant(I,0)#55
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#ConditionalBranch(I,eq,66)#56
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#66
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,2)#67
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,4)#68
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,8)#69
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,10)#70
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Invoke(VIRTUAL,Lsynoptic/invariants/miners/CountingInvariantMiner;,alwaysPrecedes,(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z)#71
synoptic.invariants.miners.CountingInvariantMiner.alwaysPrecedes(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#LocalLoad(Ljava/lang/Object;,2)#0
synoptic.invariants.miners.CountingInvariantMiner.alwaysPrecedes(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#LocalLoad(Ljava/lang/Object;,3)#1
synoptic.invariants.miners.CountingInvariantMiner.alwaysPrecedes(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#2
synoptic.invariants.miners.CountingInvariantMiner.alwaysPrecedes(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#CheckCast(Ljava/util/Map;)#3
synoptic.invariants.miners.CountingInvariantMiner.alwaysPrecedes(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#LocalLoad(Ljava/lang/Object;,4)#4
synoptic.invariants.miners.CountingInvariantMiner.alwaysPrecedes(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#5
synoptic.invariants.miners.CountingInvariantMiner.alwaysPrecedes(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#CheckCast(Ljava/lang/Integer;)#6
synoptic.invariants.miners.CountingInvariantMiner.alwaysPrecedes(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#LocalLoad(Ljava/lang/Object;,1)#7
synoptic.invariants.miners.CountingInvariantMiner.alwaysPrecedes(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#LocalLoad(Ljava/lang/Object;,4)#8
synoptic.invariants.miners.CountingInvariantMiner.alwaysPrecedes(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#9
synoptic.invariants.miners.CountingInvariantMiner.alwaysPrecedes(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Invoke(VIRTUAL,Ljava/lang/Integer;,equals,(Ljava/lang/Object;)Z)#10
synoptic.invariants.miners.CountingInvariantMiner.alwaysPrecedes(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Constant(I,0)#11
synoptic.invariants.miners.CountingInvariantMiner.alwaysPrecedes(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#ConditionalBranch(I,eq,15)#12
synoptic.invariants.miners.CountingInvariantMiner.alwaysPrecedes(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Constant(I,0)#15
synoptic.invariants.miners.CountingInvariantMiner.alwaysPrecedes(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Return(I)#16
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Constant(I,0)#72
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#ConditionalBranch(I,eq,83)#73
synoptic.invariants.miners.CountingInvariantMiner.alwaysPrecedes(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Constant(I,1)#13
synoptic.invariants.miners.CountingInvariantMiner.alwaysPrecedes(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Return(I)#14
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,7)#74
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#New(Lsynoptic/invariants/AlwaysPrecedesInvariant;,0)#75
synoptic.invariants.BinaryInvariant.<clinit>()V#Constant(Ljava/lang/String;,"BinaryInvariant")#0
synoptic.invariants.BinaryInvariant.<clinit>()V#Invoke(STATIC,Ljava/util/logging/Logger;,getLogger,(Ljava/lang/String;)Ljava/util/logging/Logger;)#1
synoptic.invariants.BinaryInvariant.<clinit>()V#Put(Ljava/util/logging/Logger;,STATIC,Lsynoptic/invariants/BinaryInvariant;,logger)#2
synoptic.invariants.BinaryInvariant.<clinit>()V#Return(V)#3
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Dup(1,0)#76
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,8)#77
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,10)#78
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#79
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Invoke(SPECIAL,Lsynoptic/invariants/AlwaysPrecedesInvariant;,<init>,(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V)#80
synoptic.invariants.AlwaysPrecedesInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.AlwaysPrecedesInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.invariants.AlwaysPrecedesInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#2
synoptic.invariants.AlwaysPrecedesInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#3
synoptic.invariants.AlwaysPrecedesInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#Invoke(SPECIAL,Lsynoptic/invariants/BinaryInvariant;,<init>,(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V)#4
synoptic.invariants.BinaryInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.BinaryInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
synoptic.invariants.BinaryInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.invariants.BinaryInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#Constant(I,0)#3
synoptic.invariants.BinaryInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#Put(I,NONSTATIC,Lsynoptic/invariants/BinaryInvariant;,firstRoleId)#4
synoptic.invariants.BinaryInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.invariants.BinaryInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#Constant(I,0)#6
synoptic.invariants.BinaryInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#Put(I,NONSTATIC,Lsynoptic/invariants/BinaryInvariant;,secondRoleId)#7
synoptic.invariants.BinaryInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#8
synoptic.invariants.BinaryInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#9
synoptic.invariants.BinaryInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#Put(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/BinaryInvariant;,first)#10
synoptic.invariants.BinaryInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#11
synoptic.invariants.BinaryInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#12
synoptic.invariants.BinaryInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#Put(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/BinaryInvariant;,second)#13
synoptic.invariants.BinaryInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#14
synoptic.invariants.BinaryInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#15
synoptic.invariants.BinaryInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/invariants/BinaryInvariant;,relation)#16
synoptic.invariants.BinaryInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#Return(V)#17
synoptic.invariants.AlwaysPrecedesInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#5
synoptic.invariants.AlwaysPrecedesInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#6
synoptic.invariants.AlwaysPrecedesInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#Invoke(VIRTUAL,Lsynoptic/model/EventType;,equals,(Ljava/lang/Object;)Z)#7
synoptic.invariants.AlwaysPrecedesInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#Constant(I,0)#8
synoptic.invariants.AlwaysPrecedesInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#ConditionalBranch(I,eq,15)#9
synoptic.invariants.AlwaysPrecedesInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#Return(V)#15
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#81
synoptic.invariants.BinaryInvariant.hashCode()I#Constant(I,31)#0
synoptic.invariants.BinaryInvariant.hashCode()I#LocalStore(I,1)#1
synoptic.invariants.BinaryInvariant.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.invariants.BinaryInvariant.hashCode()I#Invoke(VIRTUAL,Ljava/lang/Object;,getClass,()Ljava/lang/Class;)#3
synoptic.invariants.BinaryInvariant.hashCode()I#Invoke(VIRTUAL,Ljava/lang/Object;,hashCode,()I)#4
synoptic.invariants.BinaryInvariant.hashCode()I#LocalStore(I,2)#5
synoptic.invariants.BinaryInvariant.hashCode()I#Constant(I,31)#6
synoptic.invariants.BinaryInvariant.hashCode()I#LocalLoad(I,2)#7
synoptic.invariants.BinaryInvariant.hashCode()I#BinaryOp(I,mul)#8
synoptic.invariants.BinaryInvariant.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#9
synoptic.invariants.BinaryInvariant.hashCode()I#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/BinaryInvariant;,first)#10
synoptic.invariants.BinaryInvariant.hashCode()I#Constant(L;,null)#11
synoptic.invariants.BinaryInvariant.hashCode()I#ConditionalBranch(Ljava/lang/Object;,ne,15)#12
synoptic.invariants.BinaryInvariant.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#15
synoptic.invariants.BinaryInvariant.hashCode()I#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/BinaryInvariant;,first)#16
synoptic.invariants.BinaryInvariant.hashCode()I#Invoke(VIRTUAL,Lsynoptic/model/EventType;,hashCode,()I)#17
synoptic.invariants.BinaryInvariant.hashCode()I#BinaryOp(I,add)#18
synoptic.invariants.BinaryInvariant.hashCode()I#LocalStore(I,2)#19
synoptic.invariants.BinaryInvariant.hashCode()I#Constant(I,31)#20
synoptic.invariants.BinaryInvariant.hashCode()I#LocalLoad(I,2)#21
synoptic.invariants.BinaryInvariant.hashCode()I#BinaryOp(I,mul)#22
synoptic.invariants.BinaryInvariant.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#23
synoptic.invariants.BinaryInvariant.hashCode()I#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/invariants/BinaryInvariant;,relation)#24
synoptic.invariants.BinaryInvariant.hashCode()I#Constant(L;,null)#25
synoptic.invariants.BinaryInvariant.hashCode()I#ConditionalBranch(Ljava/lang/Object;,ne,29)#26
synoptic.invariants.BinaryInvariant.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#29
synoptic.invariants.BinaryInvariant.hashCode()I#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/invariants/BinaryInvariant;,relation)#30
synoptic.invariants.BinaryInvariant.hashCode()I#Invoke(VIRTUAL,Ljava/lang/String;,hashCode,()I)#31
synoptic.invariants.BinaryInvariant.hashCode()I#BinaryOp(I,add)#32
synoptic.invariants.BinaryInvariant.hashCode()I#LocalStore(I,2)#33
synoptic.invariants.BinaryInvariant.hashCode()I#Constant(I,31)#34
synoptic.invariants.BinaryInvariant.hashCode()I#LocalLoad(I,2)#35
synoptic.invariants.BinaryInvariant.hashCode()I#BinaryOp(I,mul)#36
synoptic.invariants.BinaryInvariant.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#37
synoptic.invariants.BinaryInvariant.hashCode()I#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/BinaryInvariant;,second)#38
synoptic.invariants.BinaryInvariant.hashCode()I#Constant(L;,null)#39
synoptic.invariants.BinaryInvariant.hashCode()I#ConditionalBranch(Ljava/lang/Object;,ne,43)#40
synoptic.invariants.BinaryInvariant.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#43
synoptic.invariants.BinaryInvariant.hashCode()I#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/BinaryInvariant;,second)#44
synoptic.invariants.BinaryInvariant.hashCode()I#Invoke(VIRTUAL,Lsynoptic/model/EventType;,hashCode,()I)#45
synoptic.invariants.BinaryInvariant.hashCode()I#BinaryOp(I,add)#46
synoptic.invariants.BinaryInvariant.hashCode()I#LocalStore(I,2)#47
synoptic.invariants.BinaryInvariant.hashCode()I#LocalLoad(I,2)#48
synoptic.invariants.BinaryInvariant.hashCode()I#Return(I)#49
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Pop(1)#82
synoptic.invariants.miners.CountingInvariantMiner.neverFollowedBy(Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Constant(I,1)#10
synoptic.invariants.miners.CountingInvariantMiner.neverFollowedBy(Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Return(I)#11
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,5)#29
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Constant(L;,null)#30
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#ConditionalBranch(Ljava/lang/Object;,eq,40)#31
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,7)#40
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#New(Lsynoptic/invariants/NeverFollowedInvariant;,0)#41
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Dup(1,0)#42
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,8)#43
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,10)#44
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#45
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Invoke(SPECIAL,Lsynoptic/invariants/NeverFollowedInvariant;,<init>,(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V)#46
synoptic.invariants.NeverFollowedInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.NeverFollowedInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.invariants.NeverFollowedInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#2
synoptic.invariants.NeverFollowedInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#3
synoptic.invariants.NeverFollowedInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#Invoke(SPECIAL,Lsynoptic/invariants/BinaryInvariant;,<init>,(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V)#4
synoptic.invariants.NeverFollowedInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#Return(V)#5
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#47
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Pop(1)#48
synoptic.invariants.miners.CountingInvariantMiner.alwaysFollowedBy(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Constant(I,1)#13
synoptic.invariants.miners.CountingInvariantMiner.alwaysFollowedBy(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Return(I)#14
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,7)#57
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#New(Lsynoptic/invariants/AlwaysFollowedInvariant;,0)#58
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Dup(1,0)#59
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,8)#60
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,10)#61
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#62
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Invoke(SPECIAL,Lsynoptic/invariants/AlwaysFollowedInvariant;,<init>,(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V)#63
synoptic.invariants.AlwaysFollowedInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.AlwaysFollowedInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.invariants.AlwaysFollowedInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#2
synoptic.invariants.AlwaysFollowedInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#3
synoptic.invariants.AlwaysFollowedInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#Invoke(SPECIAL,Lsynoptic/invariants/BinaryInvariant;,<init>,(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V)#4
synoptic.invariants.AlwaysFollowedInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#Return(V)#5
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#64
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Pop(1)#65
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,6)#91
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#92
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,9)#93
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Goto(108)#94
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,9)#108
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#109
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Constant(I,0)#110
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#ConditionalBranch(I,ne,95)#111
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,7)#112
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Return(Ljava/lang/Object;)#113
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(SPECIAL,Lsynoptic/invariants/TemporalInvariantSet;,<init>,(Ljava/util/Set;)V)#189
synoptic.invariants.TemporalInvariantSet.<init>(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.TemporalInvariantSet.<init>(Ljava/util/Set;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
synoptic.invariants.TemporalInvariantSet.<init>(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.invariants.TemporalInvariantSet.<init>(Ljava/util/Set;)V#New(Ljava/util/LinkedHashSet;,0)#3
synoptic.invariants.TemporalInvariantSet.<init>(Ljava/util/Set;)V#Dup(1,0)#4
synoptic.invariants.TemporalInvariantSet.<init>(Ljava/util/Set;)V#Invoke(SPECIAL,Ljava/util/LinkedHashSet;,<init>,()V)#5
synoptic.invariants.TemporalInvariantSet.<init>(Ljava/util/Set;)V#Put(Ljava/util/LinkedHashSet;,NONSTATIC,Lsynoptic/invariants/TemporalInvariantSet;,invariants)#6
synoptic.invariants.TemporalInvariantSet.<init>(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,0)#7
synoptic.invariants.TemporalInvariantSet.<init>(Ljava/util/Set;)V#Get(Ljava/util/LinkedHashSet;,NONSTATIC,Lsynoptic/invariants/TemporalInvariantSet;,invariants)#8
synoptic.invariants.TemporalInvariantSet.<init>(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,1)#9
synoptic.invariants.TemporalInvariantSet.<init>(Ljava/util/Set;)V#Invoke(VIRTUAL,Ljava/util/LinkedHashSet;,addAll,(Ljava/util/Collection;)Z)#10
synoptic.invariants.TemporalInvariantSet.<init>(Ljava/util/Set;)V#Pop(1)#11
synoptic.invariants.TemporalInvariantSet.<init>(Ljava/util/Set;)V#Return(V)#12
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Return(Ljava/lang/Object;)#190
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#LocalStore(Ljava/lang/Object;,5)#17
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,2)#18
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,5)#19
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(VIRTUAL,Lsynoptic/invariants/TemporalInvariantSet;,add,(Lsynoptic/invariants/TemporalInvariantSet;)V)#20
synoptic.invariants.TemporalInvariantSet.add(Lsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.TemporalInvariantSet.add(Lsynoptic/invariants/TemporalInvariantSet;)V#Get(Ljava/util/LinkedHashSet;,NONSTATIC,Lsynoptic/invariants/TemporalInvariantSet;,invariants)#1
synoptic.invariants.TemporalInvariantSet.add(Lsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,1)#2
synoptic.invariants.TemporalInvariantSet.add(Lsynoptic/invariants/TemporalInvariantSet;)V#Get(Ljava/util/LinkedHashSet;,NONSTATIC,Lsynoptic/invariants/TemporalInvariantSet;,invariants)#3
synoptic.invariants.TemporalInvariantSet.add(Lsynoptic/invariants/TemporalInvariantSet;)V#Invoke(VIRTUAL,Ljava/util/LinkedHashSet;,addAll,(Ljava/util/Collection;)Z)#4
synoptic.invariants.TemporalInvariantSet.add(Lsynoptic/invariants/TemporalInvariantSet;)V#Pop(1)#5
synoptic.invariants.TemporalInvariantSet.add(Lsynoptic/invariants/TemporalInvariantSet;)V#Return(V)#6
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,2)#25
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#Return(Ljava/lang/Object;)#26
synoptic.main.Main.mineTOInvariants(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#LocalStore(Ljava/lang/Object;,5)#28
synoptic.main.Main.mineTOInvariants(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#Constant(Ljava/lang/String;,"Mining took ")#29
synoptic.main.Main.mineTOInvariants(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(J,3)#30
synoptic.main.Main.mineTOInvariants(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(STATIC,Lsynoptic/main/Main;,loggerInfoEnd,(Ljava/lang/String;J)V)#31
synoptic.main.Main.mineTOInvariants(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#Constant(L;,null)#32
synoptic.main.Main.mineTOInvariants(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#LocalStore(Ljava/lang/Object;,2)#33
synoptic.main.Main.mineTOInvariants(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,5)#34
synoptic.main.Main.mineTOInvariants(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#Return(Ljava/lang/Object;)#35
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#LocalStore(Ljava/lang/Object;,4)#102
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Ljava/util/logging/Logger;,STATIC,Lsynoptic/main/Main;,logger)#103
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#New(Ljava/lang/StringBuilder;,0)#104
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Dup(1,0)#105
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Constant(Ljava/lang/String;,"Mined ")#106
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#107
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#LocalLoad(Ljava/lang/Object;,4)#108
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Invoke(VIRTUAL,Lsynoptic/invariants/TemporalInvariantSet;,numInvariants,()I)#109
synoptic.invariants.TemporalInvariantSet.numInvariants()I#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.TemporalInvariantSet.numInvariants()I#Get(Ljava/util/LinkedHashSet;,NONSTATIC,Lsynoptic/invariants/TemporalInvariantSet;,invariants)#1
synoptic.invariants.TemporalInvariantSet.numInvariants()I#Invoke(VIRTUAL,Ljava/util/LinkedHashSet;,size,()I)#2
synoptic.invariants.TemporalInvariantSet.numInvariants()I#Return(I)#3
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#110
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Constant(Ljava/lang/String;," invariants")#111
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#112
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#113
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Invoke(VIRTUAL,Ljava/util/logging/Logger;,info,(Ljava/lang/String;)V)#114
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Lsynoptic/main/SynopticOptions;,STATIC,Lsynoptic/main/Main;,options)#115
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,dumpInvariants)#116
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Constant(I,0)#117
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#ConditionalBranch(I,eq,129)#118
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Lsynoptic/main/SynopticOptions;,STATIC,Lsynoptic/main/Main;,options)#129
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,outputInvariantsToFile)#130
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Constant(I,0)#131
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#ConditionalBranch(I,eq,155)#132
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Lsynoptic/main/SynopticOptions;,STATIC,Lsynoptic/main/Main;,options)#155
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,onlyMineInvariants)#156
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Constant(I,0)#157
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#ConditionalBranch(I,eq,161)#158
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#LocalLoad(Ljava/lang/Object;,3)#161
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Constant(I,1)#162
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#LocalLoad(Ljava/lang/Object;,4)#163
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Invoke(STATIC,Lsynoptic/main/Main;,createPartitionGraph,(Lsynoptic/model/ChainsTraceGraph;ZLsynoptic/invariants/TemporalInvariantSet;)Lsynoptic/model/PartitionGraph;)#164
synoptic.main.Main.createPartitionGraph(Lsynoptic/model/ChainsTraceGraph;ZLsynoptic/invariants/TemporalInvariantSet;)Lsynoptic/model/PartitionGraph;#Constant(Ljava/lang/String;,"Creating initial partition graph.")#0
synoptic.main.Main.createPartitionGraph(Lsynoptic/model/ChainsTraceGraph;ZLsynoptic/invariants/TemporalInvariantSet;)Lsynoptic/model/PartitionGraph;#Invoke(STATIC,Lsynoptic/main/Main;,loggerInfoStart,(Ljava/lang/String;)J)#1
synoptic.main.Main.createPartitionGraph(Lsynoptic/model/ChainsTraceGraph;ZLsynoptic/invariants/TemporalInvariantSet;)Lsynoptic/model/PartitionGraph;#LocalStore(J,3)#2
synoptic.main.Main.createPartitionGraph(Lsynoptic/model/ChainsTraceGraph;ZLsynoptic/invariants/TemporalInvariantSet;)Lsynoptic/model/PartitionGraph;#New(Lsynoptic/model/PartitionGraph;,0)#3
synoptic.model.PartitionGraph.<clinit>()V#Constant(Ljava/lang/String;,"PartitionGraph Logger")#0
synoptic.model.PartitionGraph.<clinit>()V#Invoke(STATIC,Ljava/util/logging/Logger;,getLogger,(Ljava/lang/String;)Ljava/util/logging/Logger;)#1
synoptic.model.PartitionGraph.<clinit>()V#Put(Ljava/util/logging/Logger;,STATIC,Lsynoptic/model/PartitionGraph;,logger)#2
synoptic.model.PartitionGraph.<clinit>()V#Return(V)#3
synoptic.main.Main.createPartitionGraph(Lsynoptic/model/ChainsTraceGraph;ZLsynoptic/invariants/TemporalInvariantSet;)Lsynoptic/model/PartitionGraph;#Dup(1,0)#4
synoptic.main.Main.createPartitionGraph(Lsynoptic/model/ChainsTraceGraph;ZLsynoptic/invariants/TemporalInvariantSet;)Lsynoptic/model/PartitionGraph;#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.main.Main.createPartitionGraph(Lsynoptic/model/ChainsTraceGraph;ZLsynoptic/invariants/TemporalInvariantSet;)Lsynoptic/model/PartitionGraph;#LocalLoad(I,1)#6
synoptic.main.Main.createPartitionGraph(Lsynoptic/model/ChainsTraceGraph;ZLsynoptic/invariants/TemporalInvariantSet;)Lsynoptic/model/PartitionGraph;#LocalLoad(Ljava/lang/Object;,2)#7
synoptic.main.Main.createPartitionGraph(Lsynoptic/model/ChainsTraceGraph;ZLsynoptic/invariants/TemporalInvariantSet;)Lsynoptic/model/PartitionGraph;#Invoke(SPECIAL,Lsynoptic/model/PartitionGraph;,<init>,(Lsynoptic/model/ChainsTraceGraph;ZLsynoptic/invariants/TemporalInvariantSet;)V)#8
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;ZLsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;ZLsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;ZLsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,3)#2
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;ZLsynoptic/invariants/TemporalInvariantSet;)V#Invoke(SPECIAL,Lsynoptic/model/PartitionGraph;,<init>,(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V)#3
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Constant(L;,null)#3
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Put(Ljava/util/LinkedHashSet;,NONSTATIC,Lsynoptic/model/PartitionGraph;,partitions)#4
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#New(Ljava/util/LinkedHashMap;,0)#6
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Dup(1,0)#7
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#8
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Put(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/model/PartitionGraph;,initialEvents)#9
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,0)#10
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#New(Ljava/util/LinkedHashMap;,0)#11
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Dup(1,0)#12
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#13
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Put(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/model/PartitionGraph;,terminalEvents)#14
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,0)#15
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Constant(L;,null)#16
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Put(Lsynoptic/invariants/TemporalInvariantSet;,NONSTATIC,Lsynoptic/model/PartitionGraph;,invariants)#17
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,0)#18
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#New(Ljava/util/LinkedHashSet;,0)#19
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Dup(1,0)#20
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Invoke(SPECIAL,Ljava/util/LinkedHashSet;,<init>,()V)#21
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Put(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/PartitionGraph;,relations)#22
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,0)#23
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#New(Ljava/util/LinkedHashMap;,0)#24
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Dup(1,0)#25
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#26
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Put(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/model/PartitionGraph;,transitionCache)#27
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,0)#28
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#New(Ljava/util/LinkedList;,0)#29
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Dup(1,0)#30
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#31
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Put(Ljava/util/LinkedList;,NONSTATIC,Lsynoptic/model/PartitionGraph;,appliedSplits)#32
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,1)#33
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Invoke(VIRTUAL,Lsynoptic/model/ChainsTraceGraph;,getRelations,()Ljava/util/Set;)#34
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#4
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#Get(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/TraceGraph;,cachedRelations)#5
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#Return(Ljava/lang/Object;)#6
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#35
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#LocalStore(Ljava/lang/Object;,4)#36
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Goto(73)#37
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,4)#73
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#74
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Constant(I,0)#75
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#ConditionalBranch(I,ne,38)#76
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,4)#38
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#39
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#CheckCast(Ljava/lang/String;)#40
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#LocalStore(Ljava/lang/Object;,3)#41
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,1)#42
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,3)#43
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Invoke(VIRTUAL,Lsynoptic/model/ChainsTraceGraph;,getDummyInitialNode,(Ljava/lang/String;)Lsynoptic/model/EventNode;)#44
synoptic.model.TraceGraph.getDummyInitialNode(Ljava/lang/String;)Lsynoptic/model/EventNode;#Get(Z,STATIC,Lsynoptic/model/TraceGraph;,$assertionsDisabled)#0
synoptic.model.TraceGraph.getDummyInitialNode(Ljava/lang/String;)Lsynoptic/model/EventNode;#Constant(I,0)#1
synoptic.model.TraceGraph.getDummyInitialNode(Ljava/lang/String;)Lsynoptic/model/EventNode;#ConditionalBranch(I,ne,13)#2
synoptic.model.TraceGraph.getDummyInitialNode(Ljava/lang/String;)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,0)#13
synoptic.model.TraceGraph.getDummyInitialNode(Ljava/lang/String;)Lsynoptic/model/EventNode;#Get(Ljava/util/Map;,NONSTATIC,Lsynoptic/model/TraceGraph;,dummyInitialNodes)#14
synoptic.model.TraceGraph.getDummyInitialNode(Ljava/lang/String;)Lsynoptic/model/EventNode;#LocalLoad(Ljava/lang/Object;,1)#15
synoptic.model.TraceGraph.getDummyInitialNode(Ljava/lang/String;)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#16
synoptic.model.TraceGraph.getDummyInitialNode(Ljava/lang/String;)Lsynoptic/model/EventNode;#CheckCast(Lsynoptic/model/EventNode;)#17
synoptic.model.TraceGraph.getDummyInitialNode(Ljava/lang/String;)Lsynoptic/model/EventNode;#Return(Ljava/lang/Object;)#18
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#LocalStore(Ljava/lang/Object;,5)#45
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,0)#46
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Get(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/model/PartitionGraph;,initialEvents)#47
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,3)#48
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,containsKey,(Ljava/lang/Object;)Z)#49
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Constant(I,0)#50
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#ConditionalBranch(I,ne,60)#51
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,0)#52
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Get(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/model/PartitionGraph;,initialEvents)#53
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,3)#54
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#New(Ljava/util/LinkedHashSet;,0)#55
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Dup(1,0)#56
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Invoke(SPECIAL,Ljava/util/LinkedHashSet;,<init>,()V)#57
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#58
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Pop(1)#59
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,0)#60
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Get(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/model/PartitionGraph;,initialEvents)#61
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,3)#62
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#63
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#CheckCast(Ljava/util/Set;)#64
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,5)#65
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#66
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Pop(1)#67
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,0)#68
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Get(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/PartitionGraph;,relations)#69
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,3)#70
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#71
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Pop(1)#72
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,0)#77
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,2)#78
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Put(Lsynoptic/invariants/TemporalInvariantSet;,NONSTATIC,Lsynoptic/model/PartitionGraph;,invariants)#79
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,0)#80
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,1)#81
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Put(Lsynoptic/model/ChainsTraceGraph;,NONSTATIC,Lsynoptic/model/PartitionGraph;,traceGraph)#82
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Return(V)#83
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;ZLsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(I,2)#4
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;ZLsynoptic/invariants/TemporalInvariantSet;)V#Constant(I,0)#5
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;ZLsynoptic/invariants/TemporalInvariantSet;)V#ConditionalBranch(I,eq,12)#6
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;ZLsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,0)#7
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;ZLsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,1)#8
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;ZLsynoptic/invariants/TemporalInvariantSet;)V#Invoke(VIRTUAL,Lsynoptic/model/ChainsTraceGraph;,getNodes,()Ljava/util/Set;)#9
synoptic.model.TraceGraph.getNodes()Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.TraceGraph.getNodes()Ljava/util/Set;#Get(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/TraceGraph;,nodes)#1
synoptic.model.TraceGraph.getNodes()Ljava/util/Set;#Return(Ljava/lang/Object;)#2
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;ZLsynoptic/invariants/TemporalInvariantSet;)V#Invoke(SPECIAL,Lsynoptic/model/PartitionGraph;,partitionByLabels,(Ljava/util/Collection;)V)#10
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#New(Ljava/util/LinkedHashMap;,0)#0
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Dup(1,0)#1
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#2
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalStore(Ljava/lang/Object;,2)#3
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,1)#4
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Collection;,iterator,()Ljava/util/Iterator;)#5
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalStore(Ljava/lang/Object;,4)#6
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Goto(55)#7
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,4)#55
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#56
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Constant(I,0)#57
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#ConditionalBranch(I,ne,8)#58
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,4)#8
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#9
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#CheckCast(Lsynoptic/model/EventNode;)#10
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalStore(Ljava/lang/Object;,3)#11
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,3)#12
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitions,()Ljava/util/List;)#13
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#14
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalStore(Ljava/lang/Object;,6)#15
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Goto(27)#16
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,6)#27
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#28
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Constant(I,0)#29
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#ConditionalBranch(I,ne,17)#30
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,6)#17
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#18
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#CheckCast(Lsynoptic/model/interfaces/ITransition;)#19
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalStore(Ljava/lang/Object;,5)#20
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,0)#21
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Get(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/PartitionGraph;,relations)#22
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,5)#23
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(INTERFACE,Lsynoptic/model/interfaces/ITransition;,getRelation,()Ljava/lang/String;)#24
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#25
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Pop(1)#26
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,3)#31
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getEType,()Lsynoptic/model/EventType;)#32
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalStore(Ljava/lang/Object;,5)#33
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,2)#34
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,5)#35
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#36
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Constant(I,0)#37
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#ConditionalBranch(I,ne,48)#38
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#New(Ljava/util/LinkedHashSet;,0)#39
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Dup(1,0)#40
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(SPECIAL,Ljava/util/LinkedHashSet;,<init>,()V)#41
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalStore(Ljava/lang/Object;,6)#42
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,2)#43
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,5)#44
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,6)#45
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#46
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Pop(1)#47
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,2)#48
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,5)#49
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#50
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#CheckCast(Ljava/util/Set;)#51
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,3)#52
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#53
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Pop(1)#54
synoptic.model.EventType.hashCode()I#Constant(I,1231)#4
synoptic.model.EventType.hashCode()I#Goto(7)#5
synoptic.model.EventType.hashCode()I#Constant(I,1831)#11
synoptic.model.EventType.hashCode()I#Goto(14)#12
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,0)#59
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#New(Ljava/util/LinkedHashSet;,0)#60
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Dup(1,0)#61
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(SPECIAL,Ljava/util/LinkedHashSet;,<init>,()V)#62
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Put(Ljava/util/LinkedHashSet;,NONSTATIC,Lsynoptic/model/PartitionGraph;,partitions)#63
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,2)#64
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Map;,entrySet,()Ljava/util/Set;)#65
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#66
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalStore(Ljava/lang/Object;,4)#67
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Goto(83)#68
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,4)#83
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#84
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Constant(I,0)#85
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#ConditionalBranch(I,ne,69)#86
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,4)#69
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#70
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#CheckCast(Ljava/util/Map$Entry;)#71
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalStore(Ljava/lang/Object;,3)#72
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,0)#73
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Get(Ljava/util/LinkedHashSet;,NONSTATIC,Lsynoptic/model/PartitionGraph;,partitions)#74
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#New(Lsynoptic/model/Partition;,0)#75
synoptic.model.Partition.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@4ab90234)#0
synoptic.model.Partition.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
synoptic.model.Partition.<clinit>()V#Constant(I,0)#2
synoptic.model.Partition.<clinit>()V#ConditionalBranch(I,ne,6)#3
synoptic.model.Partition.<clinit>()V#Constant(I,1)#4
synoptic.model.Partition.<clinit>()V#Goto(7)#5
synoptic.model.Partition.<clinit>()V#Put(Z,STATIC,Lsynoptic/model/Partition;,$assertionsDisabled)#7
synoptic.model.Partition.<clinit>()V#Return(V)#8
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Dup(1,0)#76
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,3)#77
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Map$Entry;,getValue,()Ljava/lang/Object;)#78
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#CheckCast(Ljava/util/Set;)#79
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(SPECIAL,Lsynoptic/model/Partition;,<init>,(Ljava/util/Set;)V)#80
synoptic.model.Partition.<init>(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.Partition.<init>(Ljava/util/Set;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
synoptic.model.Partition.<init>(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.model.Partition.<init>(Ljava/util/Set;)V#Constant(I,0)#3
synoptic.model.Partition.<init>(Ljava/util/Set;)V#Put(Z,NONSTATIC,Lsynoptic/model/Partition;,initialized)#4
synoptic.model.Partition.<init>(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.model.Partition.<init>(Ljava/util/Set;)V#Constant(L;,null)#6
synoptic.model.Partition.<init>(Ljava/util/Set;)V#Put(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/model/Partition;,eType)#7
synoptic.model.Partition.<init>(Ljava/util/Set;)V#Get(Z,STATIC,Lsynoptic/model/Partition;,$assertionsDisabled)#8
synoptic.model.Partition.<init>(Ljava/util/Set;)V#Constant(I,0)#9
synoptic.model.Partition.<init>(Ljava/util/Set;)V#ConditionalBranch(I,ne,19)#10
synoptic.model.Partition.<init>(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,0)#19
synoptic.model.Partition.<init>(Ljava/util/Set;)V#New(Ljava/util/LinkedHashSet;,0)#20
synoptic.model.Partition.<init>(Ljava/util/Set;)V#Dup(1,0)#21
synoptic.model.Partition.<init>(Ljava/util/Set;)V#Invoke(SPECIAL,Ljava/util/LinkedHashSet;,<init>,()V)#22
synoptic.model.Partition.<init>(Ljava/util/Set;)V#Put(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/Partition;,events)#23
synoptic.model.Partition.<init>(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,0)#24
synoptic.model.Partition.<init>(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,1)#25
synoptic.model.Partition.<init>(Ljava/util/Set;)V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#26
synoptic.model.Partition.<init>(Ljava/util/Set;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#27
synoptic.model.Partition.<init>(Ljava/util/Set;)V#CheckCast(Lsynoptic/model/EventNode;)#28
synoptic.model.Partition.<init>(Ljava/util/Set;)V#Invoke(VIRTUAL,Lsynoptic/model/Partition;,initialize,(Lsynoptic/model/EventNode;)V)#29
synoptic.model.Partition.initialize(Lsynoptic/model/EventNode;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.Partition.initialize(Lsynoptic/model/EventNode;)V#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.model.Partition.initialize(Lsynoptic/model/EventNode;)V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getEType,()Lsynoptic/model/EventType;)#2
synoptic.model.Partition.initialize(Lsynoptic/model/EventNode;)V#Put(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/model/Partition;,eType)#3
synoptic.model.Partition.initialize(Lsynoptic/model/EventNode;)V#LocalLoad(Ljava/lang/Object;,0)#4
synoptic.model.Partition.initialize(Lsynoptic/model/EventNode;)V#Constant(I,1)#5
synoptic.model.Partition.initialize(Lsynoptic/model/EventNode;)V#Put(Z,NONSTATIC,Lsynoptic/model/Partition;,initialized)#6
synoptic.model.Partition.initialize(Lsynoptic/model/EventNode;)V#Return(V)#7
synoptic.model.Partition.<init>(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,0)#30
synoptic.model.Partition.<init>(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,1)#31
synoptic.model.Partition.<init>(Ljava/util/Set;)V#Invoke(VIRTUAL,Lsynoptic/model/Partition;,addEventNodes,(Ljava/util/Collection;)V)#32
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#Get(Z,NONSTATIC,Lsynoptic/model/Partition;,initialized)#1
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#Constant(I,0)#2
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#ConditionalBranch(I,ne,10)#3
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,0)#10
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#Get(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/Partition;,events)#11
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,1)#12
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Set;,addAll,(Ljava/util/Collection;)Z)#13
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#Pop(1)#14
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,1)#15
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Collection;,iterator,()Ljava/util/Iterator;)#16
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#LocalStore(Ljava/lang/Object;,3)#17
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#Goto(40)#18
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,3)#40
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#41
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#Constant(I,0)#42
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#ConditionalBranch(I,ne,19)#43
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,3)#19
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#20
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#CheckCast(Lsynoptic/model/EventNode;)#21
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#LocalStore(Ljava/lang/Object;,2)#22
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,2)#23
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,0)#24
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,setParent,(Lsynoptic/model/Partition;)V)#25
synoptic.model.EventNode.setParent(Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.EventNode.setParent(Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.model.EventNode.setParent(Lsynoptic/model/Partition;)V#Put(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/model/EventNode;,parent)#2
synoptic.model.EventNode.setParent(Lsynoptic/model/Partition;)V#Return(V)#3
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#Get(Z,STATIC,Lsynoptic/model/Partition;,$assertionsDisabled)#26
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#Constant(I,0)#27
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#ConditionalBranch(I,ne,40)#28
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#Return(V)#44
synoptic.model.Partition.<init>(Ljava/util/Set;)V#Return(V)#33
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(VIRTUAL,Ljava/util/LinkedHashSet;,add,(Ljava/lang/Object;)Z)#81
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Pop(1)#82
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,0)#87
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Get(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/model/PartitionGraph;,transitionCache)#88
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,clear,()V)#89
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Return(V)#90
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;ZLsynoptic/invariants/TemporalInvariantSet;)V#Goto(16)#11
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;ZLsynoptic/invariants/TemporalInvariantSet;)V#Return(V)#16
synoptic.main.Main.createPartitionGraph(Lsynoptic/model/ChainsTraceGraph;ZLsynoptic/invariants/TemporalInvariantSet;)Lsynoptic/model/PartitionGraph;#LocalStore(Ljava/lang/Object;,5)#9
synoptic.main.Main.createPartitionGraph(Lsynoptic/model/ChainsTraceGraph;ZLsynoptic/invariants/TemporalInvariantSet;)Lsynoptic/model/PartitionGraph;#Constant(Ljava/lang/String;,"Creating partition graph took ")#10
synoptic.main.Main.createPartitionGraph(Lsynoptic/model/ChainsTraceGraph;ZLsynoptic/invariants/TemporalInvariantSet;)Lsynoptic/model/PartitionGraph;#LocalLoad(J,3)#11
synoptic.main.Main.createPartitionGraph(Lsynoptic/model/ChainsTraceGraph;ZLsynoptic/invariants/TemporalInvariantSet;)Lsynoptic/model/PartitionGraph;#Invoke(STATIC,Lsynoptic/main/Main;,loggerInfoEnd,(Ljava/lang/String;J)V)#12
synoptic.main.Main.createPartitionGraph(Lsynoptic/model/ChainsTraceGraph;ZLsynoptic/invariants/TemporalInvariantSet;)Lsynoptic/model/PartitionGraph;#LocalLoad(Ljava/lang/Object;,5)#13
synoptic.main.Main.createPartitionGraph(Lsynoptic/model/ChainsTraceGraph;ZLsynoptic/invariants/TemporalInvariantSet;)Lsynoptic/model/PartitionGraph;#Return(Ljava/lang/Object;)#14
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#LocalStore(Ljava/lang/Object;,5)#165
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Lsynoptic/main/SynopticOptions;,STATIC,Lsynoptic/main/Main;,options)#166
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,dumpInitialPartitionGraph)#167
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Constant(I,0)#168
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#ConditionalBranch(I,eq,183)#169
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#LocalLoad(Ljava/lang/Object;,5)#183
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Return(Ljava/lang/Object;)#184
synoptic.main.Main.call()Ljava/lang/Integer;#LocalStore(Ljava/lang/Object;,1)#4
synoptic.main.Main.call()Ljava/lang/Integer;#LocalLoad(Ljava/lang/Object;,1)#5
synoptic.main.Main.call()Ljava/lang/Integer;#Constant(L;,null)#6
synoptic.main.Main.call()Ljava/lang/Integer;#ConditionalBranch(Ljava/lang/Object;,eq,11)#7
synoptic.main.Main.call()Ljava/lang/Integer;#LocalLoad(Ljava/lang/Object;,0)#8
synoptic.main.Main.call()Ljava/lang/Integer;#LocalLoad(Ljava/lang/Object;,1)#9
synoptic.main.Main.call()Ljava/lang/Integer;#Invoke(VIRTUAL,Lsynoptic/main/Main;,runSynoptic,(Lsynoptic/model/PartitionGraph;)V)#10
synoptic.main.Main.runSynoptic(Lsynoptic/model/PartitionGraph;)V#Get(Lsynoptic/main/SynopticOptions;,STATIC,Lsynoptic/main/Main;,options)#0
synoptic.main.Main.runSynoptic(Lsynoptic/model/PartitionGraph;)V#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,logLvlVerbose)#1
synoptic.main.Main.runSynoptic(Lsynoptic/model/PartitionGraph;)V#Constant(I,0)#2
synoptic.main.Main.runSynoptic(Lsynoptic/model/PartitionGraph;)V#ConditionalBranch(I,ne,8)#3
synoptic.main.Main.runSynoptic(Lsynoptic/model/PartitionGraph;)V#Get(Lsynoptic/main/SynopticOptions;,STATIC,Lsynoptic/main/Main;,options)#4
synoptic.main.Main.runSynoptic(Lsynoptic/model/PartitionGraph;)V#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,logLvlExtraVerbose)#5
synoptic.main.Main.runSynoptic(Lsynoptic/model/PartitionGraph;)V#Constant(I,0)#6
synoptic.main.Main.runSynoptic(Lsynoptic/model/PartitionGraph;)V#ConditionalBranch(I,eq,14)#7
synoptic.main.Main.runSynoptic(Lsynoptic/model/PartitionGraph;)V#Constant(Ljava/lang/String;,"Refining (Splitting)...")#14
synoptic.main.Main.runSynoptic(Lsynoptic/model/PartitionGraph;)V#Invoke(STATIC,Lsynoptic/main/Main;,loggerInfoStart,(Ljava/lang/String;)J)#15
synoptic.main.Main.runSynoptic(Lsynoptic/model/PartitionGraph;)V#LocalStore(J,2)#16
synoptic.main.Main.runSynoptic(Lsynoptic/model/PartitionGraph;)V#LocalLoad(Ljava/lang/Object;,1)#17
synoptic.main.Main.runSynoptic(Lsynoptic/model/PartitionGraph;)V#Invoke(STATIC,Lsynoptic/algorithms/bisim/Bisimulation;,splitPartitions,(Lsynoptic/model/PartitionGraph;)V)#18
synoptic.algorithms.bisim.Bisimulation.<clinit>()V#Constant(Ljava/lang/String;,"Bisimulation")#0
synoptic.algorithms.bisim.Bisimulation.<clinit>()V#Invoke(STATIC,Ljava/util/logging/Logger;,getLogger,(Ljava/lang/String;)Ljava/util/logging/Logger;)#1
synoptic.algorithms.bisim.Bisimulation.<clinit>()V#Put(Ljava/util/logging/Logger;,STATIC,Lsynoptic/algorithms/bisim/Bisimulation;,logger)#2
synoptic.algorithms.bisim.Bisimulation.<clinit>()V#Constant(I,1)#3
synoptic.algorithms.bisim.Bisimulation.<clinit>()V#Put(Z,STATIC,Lsynoptic/algorithms/bisim/Bisimulation;,incomingTransitionSplit)#4
synoptic.algorithms.bisim.Bisimulation.<clinit>()V#Constant(I,0)#5
synoptic.algorithms.bisim.Bisimulation.<clinit>()V#Put(Z,STATIC,Lsynoptic/algorithms/bisim/Bisimulation;,interleavedMerging)#6
synoptic.algorithms.bisim.Bisimulation.<clinit>()V#Return(V)#7
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Constant(Ljava/lang/String;,"refinement")#0
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Constant(I,0)#1
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Invoke(STATIC,Lsynoptic/benchmarks/PerformanceMetrics;,createTask,(Ljava/lang/String;Z)Lsynoptic/benchmarks/TimedTask;)#2
synoptic.benchmarks.PerformanceMetrics.<clinit>()V#Constant(Ljava/lang/String;,"Performance Metrics")#0
synoptic.benchmarks.PerformanceMetrics.<clinit>()V#Invoke(STATIC,Ljava/util/logging/Logger;,getLogger,(Ljava/lang/String;)Ljava/util/logging/Logger;)#1
synoptic.benchmarks.PerformanceMetrics.<clinit>()V#Put(Ljava/util/logging/Logger;,STATIC,Lsynoptic/benchmarks/PerformanceMetrics;,logger)#2
synoptic.benchmarks.PerformanceMetrics.<clinit>()V#New(Lsynoptic/benchmarks/PerformanceMetrics;,0)#3
synoptic.benchmarks.PerformanceMetrics.<clinit>()V#Dup(1,0)#4
synoptic.benchmarks.PerformanceMetrics.<clinit>()V#Invoke(SPECIAL,Lsynoptic/benchmarks/PerformanceMetrics;,<init>,()V)#5
synoptic.benchmarks.PerformanceMetrics.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.benchmarks.PerformanceMetrics.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
synoptic.benchmarks.PerformanceMetrics.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.benchmarks.PerformanceMetrics.<init>()V#New(Ljava/util/LinkedHashMap;,0)#3
synoptic.benchmarks.PerformanceMetrics.<init>()V#Dup(1,0)#4
synoptic.benchmarks.PerformanceMetrics.<init>()V#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#5
synoptic.benchmarks.PerformanceMetrics.<init>()V#Put(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/benchmarks/PerformanceMetrics;,values)#6
synoptic.benchmarks.PerformanceMetrics.<init>()V#LocalLoad(Ljava/lang/Object;,0)#7
synoptic.benchmarks.PerformanceMetrics.<init>()V#New(Ljava/util/LinkedHashMap;,0)#8
synoptic.benchmarks.PerformanceMetrics.<init>()V#Dup(1,0)#9
synoptic.benchmarks.PerformanceMetrics.<init>()V#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#10
synoptic.benchmarks.PerformanceMetrics.<init>()V#Put(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/benchmarks/PerformanceMetrics;,numberOfMesurements)#11
synoptic.benchmarks.PerformanceMetrics.<init>()V#LocalLoad(Ljava/lang/Object;,0)#12
synoptic.benchmarks.PerformanceMetrics.<init>()V#New(Ljava/util/LinkedHashMap;,0)#13
synoptic.benchmarks.PerformanceMetrics.<init>()V#Dup(1,0)#14
synoptic.benchmarks.PerformanceMetrics.<init>()V#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#15
synoptic.benchmarks.PerformanceMetrics.<init>()V#Put(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/benchmarks/PerformanceMetrics;,accumulativity)#16
synoptic.benchmarks.PerformanceMetrics.<init>()V#Return(V)#17
synoptic.benchmarks.PerformanceMetrics.<clinit>()V#Put(Lsynoptic/benchmarks/PerformanceMetrics;,STATIC,Lsynoptic/benchmarks/PerformanceMetrics;,globalPerformanceMetrics)#6
synoptic.benchmarks.PerformanceMetrics.<clinit>()V#Constant(L;,null)#7
synoptic.benchmarks.PerformanceMetrics.<clinit>()V#Put(Lsynoptic/benchmarks/TimedTask;,STATIC,Lsynoptic/benchmarks/PerformanceMetrics;,previousTask)#8
synoptic.benchmarks.PerformanceMetrics.<clinit>()V#Return(V)#9
synoptic.benchmarks.PerformanceMetrics.createTask(Ljava/lang/String;Z)Lsynoptic/benchmarks/TimedTask;#New(Lsynoptic/benchmarks/TimedTask;,0)#0
synoptic.benchmarks.TimedTask.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@19aa3139)#0
synoptic.benchmarks.TimedTask.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
synoptic.benchmarks.TimedTask.<clinit>()V#Constant(I,0)#2
synoptic.benchmarks.TimedTask.<clinit>()V#ConditionalBranch(I,ne,6)#3
synoptic.benchmarks.TimedTask.<clinit>()V#Constant(I,1)#4
synoptic.benchmarks.TimedTask.<clinit>()V#Goto(7)#5
synoptic.benchmarks.TimedTask.<clinit>()V#Put(Z,STATIC,Lsynoptic/benchmarks/TimedTask;,$assertionsDisabled)#7
synoptic.benchmarks.TimedTask.<clinit>()V#Return(V)#8
synoptic.benchmarks.PerformanceMetrics.createTask(Ljava/lang/String;Z)Lsynoptic/benchmarks/TimedTask;#Dup(1,0)#1
synoptic.benchmarks.PerformanceMetrics.createTask(Ljava/lang/String;Z)Lsynoptic/benchmarks/TimedTask;#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.benchmarks.PerformanceMetrics.createTask(Ljava/lang/String;Z)Lsynoptic/benchmarks/TimedTask;#Get(Lsynoptic/benchmarks/TimedTask;,STATIC,Lsynoptic/benchmarks/PerformanceMetrics;,previousTask)#3
synoptic.benchmarks.PerformanceMetrics.createTask(Ljava/lang/String;Z)Lsynoptic/benchmarks/TimedTask;#Get(Lsynoptic/benchmarks/PerformanceMetrics;,STATIC,Lsynoptic/benchmarks/PerformanceMetrics;,globalPerformanceMetrics)#4
synoptic.benchmarks.PerformanceMetrics.createTask(Ljava/lang/String;Z)Lsynoptic/benchmarks/TimedTask;#LocalLoad(I,1)#5
synoptic.benchmarks.PerformanceMetrics.createTask(Ljava/lang/String;Z)Lsynoptic/benchmarks/TimedTask;#Invoke(SPECIAL,Lsynoptic/benchmarks/TimedTask;,<init>,(Ljava/lang/String;Lsynoptic/benchmarks/TimedTask;Lsynoptic/benchmarks/PerformanceMetrics;Z)V)#6
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;Lsynoptic/benchmarks/TimedTask;Lsynoptic/benchmarks/PerformanceMetrics;Z)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;Lsynoptic/benchmarks/TimedTask;Lsynoptic/benchmarks/PerformanceMetrics;Z)V#LocalLoad(Ljava/lang/Object;,2)#1
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;Lsynoptic/benchmarks/TimedTask;Lsynoptic/benchmarks/PerformanceMetrics;Z)V#Constant(L;,null)#2
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;Lsynoptic/benchmarks/TimedTask;Lsynoptic/benchmarks/PerformanceMetrics;Z)V#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;Lsynoptic/benchmarks/TimedTask;Lsynoptic/benchmarks/PerformanceMetrics;Z)V#LocalLoad(Ljava/lang/Object;,1)#4
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;Lsynoptic/benchmarks/TimedTask;Lsynoptic/benchmarks/PerformanceMetrics;Z)V#Goto(17)#5
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;Lsynoptic/benchmarks/TimedTask;Lsynoptic/benchmarks/PerformanceMetrics;Z)V#Invoke(SPECIAL,Lsynoptic/benchmarks/TimedTask;,<init>,(Ljava/lang/String;)V)#17
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;)V#Constant(L;,null)#3
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;)V#Put(Lsynoptic/benchmarks/PerformanceMetrics;,NONSTATIC,Lsynoptic/benchmarks/TimedTask;,recordAt)#4
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;)V#Constant(L;,null)#6
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;)V#Put(Lsynoptic/benchmarks/TimedTask;,NONSTATIC,Lsynoptic/benchmarks/TimedTask;,parent)#7
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#8
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;)V#Constant(I,0)#9
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/benchmarks/TimedTask;,accumulativity)#10
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#11
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#12
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/benchmarks/TimedTask;,task)#13
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#14
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;)V#Invoke(STATIC,Ljava/lang/System;,currentTimeMillis,()J)#15
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;)V#Put(J,NONSTATIC,Lsynoptic/benchmarks/TimedTask;,timeStart)#16
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;)V#Return(V)#17
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;Lsynoptic/benchmarks/TimedTask;Lsynoptic/benchmarks/PerformanceMetrics;Z)V#LocalLoad(Ljava/lang/Object;,0)#18
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;Lsynoptic/benchmarks/TimedTask;Lsynoptic/benchmarks/PerformanceMetrics;Z)V#LocalLoad(Ljava/lang/Object;,2)#19
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;Lsynoptic/benchmarks/TimedTask;Lsynoptic/benchmarks/PerformanceMetrics;Z)V#Put(Lsynoptic/benchmarks/TimedTask;,NONSTATIC,Lsynoptic/benchmarks/TimedTask;,parent)#20
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;Lsynoptic/benchmarks/TimedTask;Lsynoptic/benchmarks/PerformanceMetrics;Z)V#LocalLoad(Ljava/lang/Object;,0)#21
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;Lsynoptic/benchmarks/TimedTask;Lsynoptic/benchmarks/PerformanceMetrics;Z)V#LocalLoad(I,4)#22
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;Lsynoptic/benchmarks/TimedTask;Lsynoptic/benchmarks/PerformanceMetrics;Z)V#Put(Z,NONSTATIC,Lsynoptic/benchmarks/TimedTask;,accumulativity)#23
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;Lsynoptic/benchmarks/TimedTask;Lsynoptic/benchmarks/PerformanceMetrics;Z)V#LocalLoad(Ljava/lang/Object;,0)#24
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;Lsynoptic/benchmarks/TimedTask;Lsynoptic/benchmarks/PerformanceMetrics;Z)V#LocalLoad(Ljava/lang/Object;,3)#25
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;Lsynoptic/benchmarks/TimedTask;Lsynoptic/benchmarks/PerformanceMetrics;Z)V#Put(Lsynoptic/benchmarks/PerformanceMetrics;,NONSTATIC,Lsynoptic/benchmarks/TimedTask;,recordAt)#26
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;Lsynoptic/benchmarks/TimedTask;Lsynoptic/benchmarks/PerformanceMetrics;Z)V#Return(V)#27
synoptic.benchmarks.PerformanceMetrics.createTask(Ljava/lang/String;Z)Lsynoptic/benchmarks/TimedTask;#Put(Lsynoptic/benchmarks/TimedTask;,STATIC,Lsynoptic/benchmarks/PerformanceMetrics;,previousTask)#7
synoptic.benchmarks.PerformanceMetrics.createTask(Ljava/lang/String;Z)Lsynoptic/benchmarks/TimedTask;#Get(Lsynoptic/benchmarks/TimedTask;,STATIC,Lsynoptic/benchmarks/PerformanceMetrics;,previousTask)#8
synoptic.benchmarks.PerformanceMetrics.createTask(Ljava/lang/String;Z)Lsynoptic/benchmarks/TimedTask;#Return(Ljava/lang/Object;)#9
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalStore(Ljava/lang/Object;,1)#3
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Get(Lsynoptic/main/SynopticOptions;,STATIC,Lsynoptic/main/Main;,options)#4
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,dumpIntermediateStages)#5
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Constant(I,0)#6
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#ConditionalBranch(I,eq,13)#7
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Constant(I,0)#13
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalStore(I,2)#14
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Constant(I,0)#15
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalStore(I,3)#16
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#New(Ljava/util/LinkedHashSet;,0)#17
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Dup(1,0)#18
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Invoke(SPECIAL,Ljava/util/LinkedHashSet;,<init>,()V)#19
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalStore(Ljava/lang/Object;,4)#20
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalLoad(Ljava/lang/Object;,4)#21
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalLoad(Ljava/lang/Object;,0)#22
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Invoke(VIRTUAL,Lsynoptic/model/PartitionGraph;,getInvariants,()Lsynoptic/invariants/TemporalInvariantSet;)#23
synoptic.model.PartitionGraph.getInvariants()Lsynoptic/invariants/TemporalInvariantSet;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.PartitionGraph.getInvariants()Lsynoptic/invariants/TemporalInvariantSet;#Get(Lsynoptic/invariants/TemporalInvariantSet;,NONSTATIC,Lsynoptic/model/PartitionGraph;,invariants)#1
synoptic.model.PartitionGraph.getInvariants()Lsynoptic/invariants/TemporalInvariantSet;#Return(Ljava/lang/Object;)#2
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Invoke(VIRTUAL,Lsynoptic/invariants/TemporalInvariantSet;,getSet,()Ljava/util/Set;)#24
synoptic.invariants.TemporalInvariantSet.getSet()Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.TemporalInvariantSet.getSet()Ljava/util/Set;#Get(Ljava/util/LinkedHashSet;,NONSTATIC,Lsynoptic/invariants/TemporalInvariantSet;,invariants)#1
synoptic.invariants.TemporalInvariantSet.getSet()Ljava/util/Set;#Return(Ljava/lang/Object;)#2
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Invoke(INTERFACE,Ljava/util/Set;,addAll,(Ljava/util/Collection;)Z)#25
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Pop(1)#26
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#New(Ljava/util/LinkedHashSet;,0)#27
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Dup(1,0)#28
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Invoke(SPECIAL,Ljava/util/LinkedHashSet;,<init>,()V)#29
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalStore(Ljava/lang/Object;,5)#30
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Constant(L;,null)#31
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalStore(Ljava/lang/Object;,6)#32
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#New(Lsynoptic/invariants/TemporalInvariantSet;,0)#33
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Dup(1,0)#34
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalLoad(Ljava/lang/Object;,4)#35
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Invoke(SPECIAL,Lsynoptic/invariants/TemporalInvariantSet;,<init>,(Ljava/util/Set;)V)#36
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalLoad(Ljava/lang/Object;,0)#37
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Invoke(VIRTUAL,Lsynoptic/invariants/TemporalInvariantSet;,getAllCounterExamples,(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;)#38
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Constant(Ljava/lang/String;,"getAllCounterExamples")#0
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Constant(I,0)#1
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Invoke(STATIC,Lsynoptic/benchmarks/PerformanceMetrics;,createTask,(Ljava/lang/String;Z)Lsynoptic/benchmarks/TimedTask;)#2
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;Lsynoptic/benchmarks/TimedTask;Lsynoptic/benchmarks/PerformanceMetrics;Z)V#New(Ljava/lang/StringBuilder;,0)#6
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;Lsynoptic/benchmarks/TimedTask;Lsynoptic/benchmarks/PerformanceMetrics;Z)V#Dup(1,0)#7
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;Lsynoptic/benchmarks/TimedTask;Lsynoptic/benchmarks/PerformanceMetrics;Z)V#LocalLoad(Ljava/lang/Object;,2)#8
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;Lsynoptic/benchmarks/TimedTask;Lsynoptic/benchmarks/PerformanceMetrics;Z)V#Invoke(VIRTUAL,Lsynoptic/benchmarks/TimedTask;,getTask,()Ljava/lang/String;)#9
synoptic.benchmarks.TimedTask.getTask()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.benchmarks.TimedTask.getTask()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/benchmarks/TimedTask;,task)#1
synoptic.benchmarks.TimedTask.getTask()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;Lsynoptic/benchmarks/TimedTask;Lsynoptic/benchmarks/PerformanceMetrics;Z)V#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#10
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;Lsynoptic/benchmarks/TimedTask;Lsynoptic/benchmarks/PerformanceMetrics;Z)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#11
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;Lsynoptic/benchmarks/TimedTask;Lsynoptic/benchmarks/PerformanceMetrics;Z)V#Constant(Ljava/lang/String;,"/")#12
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;Lsynoptic/benchmarks/TimedTask;Lsynoptic/benchmarks/PerformanceMetrics;Z)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#13
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;Lsynoptic/benchmarks/TimedTask;Lsynoptic/benchmarks/PerformanceMetrics;Z)V#LocalLoad(Ljava/lang/Object;,1)#14
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;Lsynoptic/benchmarks/TimedTask;Lsynoptic/benchmarks/PerformanceMetrics;Z)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#15
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;Lsynoptic/benchmarks/TimedTask;Lsynoptic/benchmarks/PerformanceMetrics;Z)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#16
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,2)#3
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Constant(L;,null)#4
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,3)#5
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Get(Lsynoptic/main/SynopticOptions;,STATIC,Lsynoptic/main/Main;,options)#6
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,useFSMChecker)#7
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Constant(I,0)#8
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#ConditionalBranch(I,eq,40)#9
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#New(Ljava/util/ArrayList;,0)#10
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Dup(1,0)#11
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#12
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,3)#13
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#14
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Get(Ljava/util/LinkedHashSet;,NONSTATIC,Lsynoptic/invariants/TemporalInvariantSet;,invariants)#15
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/util/LinkedHashSet;,iterator,()Ljava/util/Iterator;)#16
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,5)#17
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Goto(35)#18
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,5)#35
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#36
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Constant(I,0)#37
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#ConditionalBranch(I,ne,19)#38
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,5)#19
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#20
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#CheckCast(Lsynoptic/invariants/ITemporalInvariant;)#21
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,4)#22
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,4)#23
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#CheckCast(Lsynoptic/invariants/BinaryInvariant;)#24
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#25
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Invoke(STATIC,Lsynoptic/invariants/fsmcheck/FsmModelChecker;,getCounterExample,(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;)#26
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Constant(L;,null)#0
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalStore(Ljava/lang/Object;,2)#1
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Constant(L;,null)#3
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#ConditionalBranch(Ljava/lang/Object;,ne,7)#4
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,0)#7
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Invoke(VIRTUAL,Ljava/lang/Object;,getClass,()Ljava/lang/Class;)#8
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalStore(Ljava/lang/Object;,3)#9
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,3)#10
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@3744c9b7)#11
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#12
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Constant(I,0)#13
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#ConditionalBranch(I,eq,21)#14
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,3)#21
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@b6448914)#22
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#23
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Constant(I,0)#24
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#ConditionalBranch(I,eq,32)#25
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#New(Lsynoptic/invariants/fsmcheck/APTracingSet;,0)#26
synoptic.invariants.fsmcheck.TracingStateSet.<clinit>()V#Constant(I,0)#0
synoptic.invariants.fsmcheck.TracingStateSet.<clinit>()V#Put(Z,STATIC,Lsynoptic/invariants/fsmcheck/TracingStateSet;,checkPath)#1
synoptic.invariants.fsmcheck.TracingStateSet.<clinit>()V#Return(V)#2
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Dup(1,0)#27
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,0)#28
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Invoke(SPECIAL,Lsynoptic/invariants/fsmcheck/APTracingSet;,<init>,(Lsynoptic/invariants/BinaryInvariant;)V)#29
synoptic.invariants.fsmcheck.APTracingSet.<init>(Lsynoptic/invariants/BinaryInvariant;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.fsmcheck.APTracingSet.<init>(Lsynoptic/invariants/BinaryInvariant;)V#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.invariants.fsmcheck.APTracingSet.<init>(Lsynoptic/invariants/BinaryInvariant;)V#Invoke(VIRTUAL,Lsynoptic/invariants/BinaryInvariant;,getFirst,()Lsynoptic/model/EventType;)#2
synoptic.invariants.BinaryInvariant.getFirst()Lsynoptic/model/EventType;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.BinaryInvariant.getFirst()Lsynoptic/model/EventType;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/BinaryInvariant;,first)#1
synoptic.invariants.BinaryInvariant.getFirst()Lsynoptic/model/EventType;#Return(Ljava/lang/Object;)#2
synoptic.invariants.fsmcheck.APTracingSet.<init>(Lsynoptic/invariants/BinaryInvariant;)V#LocalLoad(Ljava/lang/Object;,1)#3
synoptic.invariants.fsmcheck.APTracingSet.<init>(Lsynoptic/invariants/BinaryInvariant;)V#Invoke(VIRTUAL,Lsynoptic/invariants/BinaryInvariant;,getSecond,()Lsynoptic/model/EventType;)#4
synoptic.invariants.BinaryInvariant.getSecond()Lsynoptic/model/EventType;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.BinaryInvariant.getSecond()Lsynoptic/model/EventType;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/BinaryInvariant;,second)#1
synoptic.invariants.BinaryInvariant.getSecond()Lsynoptic/model/EventType;#Return(Ljava/lang/Object;)#2
synoptic.invariants.fsmcheck.APTracingSet.<init>(Lsynoptic/invariants/BinaryInvariant;)V#Invoke(SPECIAL,Lsynoptic/invariants/fsmcheck/APTracingSet;,<init>,(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V)#5
synoptic.invariants.fsmcheck.APTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.fsmcheck.APTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#Invoke(SPECIAL,Lsynoptic/invariants/fsmcheck/TracingStateSet;,<init>,()V)#1
synoptic.invariants.fsmcheck.TracingStateSet.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.fsmcheck.TracingStateSet.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
synoptic.invariants.fsmcheck.TracingStateSet.<init>()V#Return(V)#2
synoptic.invariants.fsmcheck.APTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.invariants.fsmcheck.APTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#LocalLoad(Ljava/lang/Object;,1)#3
synoptic.invariants.fsmcheck.APTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#Put(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,a)#4
synoptic.invariants.fsmcheck.APTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.invariants.fsmcheck.APTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#LocalLoad(Ljava/lang/Object;,2)#6
synoptic.invariants.fsmcheck.APTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#Put(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,b)#7
synoptic.invariants.fsmcheck.APTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#Return(V)#8
synoptic.invariants.fsmcheck.APTracingSet.<init>(Lsynoptic/invariants/BinaryInvariant;)V#Return(V)#6
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalStore(Ljava/lang/Object;,2)#30
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Goto(42)#31
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Constant(L;,null)#42
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalStore(Ljava/lang/Object;,4)#43
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,2)#44
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,1)#45
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Constant(I,1)#46
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Invoke(STATIC,Lsynoptic/invariants/fsmcheck/FsmModelChecker;,runChecker,(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;)#47
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#New(Ljava/util/LinkedHashSet;,0)#0
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Dup(1,0)#1
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(SPECIAL,Ljava/util/LinkedHashSet;,<init>,()V)#2
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,3)#3
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#New(Ljava/util/LinkedList;,0)#4
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Dup(1,0)#5
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#6
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,4)#7
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#New(Ljava/util/LinkedHashMap;,0)#8
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Dup(1,0)#9
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#10
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,5)#11
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,1)#12
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Lsynoptic/model/interfaces/IGraph;,getNodes,()Ljava/util/Set;)#13
synoptic.model.PartitionGraph.getNodes()Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.PartitionGraph.getNodes()Ljava/util/Set;#Get(Ljava/util/LinkedHashSet;,NONSTATIC,Lsynoptic/model/PartitionGraph;,partitions)#1
synoptic.model.PartitionGraph.getNodes()Ljava/util/Set;#Return(Ljava/lang/Object;)#2
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#14
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,7)#15
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Goto(28)#16
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,7)#28
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#29
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Constant(I,0)#30
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#ConditionalBranch(I,ne,17)#31
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,7)#17
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#18
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#CheckCast(Lsynoptic/model/interfaces/INode;)#19
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,6)#20
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,5)#21
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,6)#22
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#23
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Lsynoptic/invariants/fsmcheck/IStateSet;,copy,()Ljava/lang/Object;)#24
synoptic.invariants.fsmcheck.APTracingSet.copy()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.fsmcheck.APTracingSet.copy()Ljava/lang/Object;#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/APTracingSet;,copy,()Lsynoptic/invariants/fsmcheck/APTracingSet;)#1
synoptic.invariants.fsmcheck.APTracingSet.copy()Lsynoptic/invariants/fsmcheck/APTracingSet;#New(Lsynoptic/invariants/fsmcheck/APTracingSet;,0)#0
synoptic.invariants.fsmcheck.APTracingSet.copy()Lsynoptic/invariants/fsmcheck/APTracingSet;#Dup(1,0)#1
synoptic.invariants.fsmcheck.APTracingSet.copy()Lsynoptic/invariants/fsmcheck/APTracingSet;#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.invariants.fsmcheck.APTracingSet.copy()Lsynoptic/invariants/fsmcheck/APTracingSet;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,a)#3
synoptic.invariants.fsmcheck.APTracingSet.copy()Lsynoptic/invariants/fsmcheck/APTracingSet;#LocalLoad(Ljava/lang/Object;,0)#4
synoptic.invariants.fsmcheck.APTracingSet.copy()Lsynoptic/invariants/fsmcheck/APTracingSet;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,b)#5
synoptic.invariants.fsmcheck.APTracingSet.copy()Lsynoptic/invariants/fsmcheck/APTracingSet;#Invoke(SPECIAL,Lsynoptic/invariants/fsmcheck/APTracingSet;,<init>,(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V)#6
synoptic.invariants.fsmcheck.APTracingSet.copy()Lsynoptic/invariants/fsmcheck/APTracingSet;#LocalStore(Ljava/lang/Object;,1)#7
synoptic.invariants.fsmcheck.APTracingSet.copy()Lsynoptic/invariants/fsmcheck/APTracingSet;#LocalLoad(Ljava/lang/Object;,1)#8
synoptic.invariants.fsmcheck.APTracingSet.copy()Lsynoptic/invariants/fsmcheck/APTracingSet;#LocalLoad(Ljava/lang/Object;,0)#9
synoptic.invariants.fsmcheck.APTracingSet.copy()Lsynoptic/invariants/fsmcheck/APTracingSet;#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,neitherSeen)#10
synoptic.invariants.fsmcheck.APTracingSet.copy()Lsynoptic/invariants/fsmcheck/APTracingSet;#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,neitherSeen)#11
synoptic.invariants.fsmcheck.APTracingSet.copy()Lsynoptic/invariants/fsmcheck/APTracingSet;#LocalLoad(Ljava/lang/Object;,1)#12
synoptic.invariants.fsmcheck.APTracingSet.copy()Lsynoptic/invariants/fsmcheck/APTracingSet;#LocalLoad(Ljava/lang/Object;,0)#13
synoptic.invariants.fsmcheck.APTracingSet.copy()Lsynoptic/invariants/fsmcheck/APTracingSet;#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,firstA)#14
synoptic.invariants.fsmcheck.APTracingSet.copy()Lsynoptic/invariants/fsmcheck/APTracingSet;#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,firstA)#15
synoptic.invariants.fsmcheck.APTracingSet.copy()Lsynoptic/invariants/fsmcheck/APTracingSet;#LocalLoad(Ljava/lang/Object;,1)#16
synoptic.invariants.fsmcheck.APTracingSet.copy()Lsynoptic/invariants/fsmcheck/APTracingSet;#LocalLoad(Ljava/lang/Object;,0)#17
synoptic.invariants.fsmcheck.APTracingSet.copy()Lsynoptic/invariants/fsmcheck/APTracingSet;#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,firstB)#18
synoptic.invariants.fsmcheck.APTracingSet.copy()Lsynoptic/invariants/fsmcheck/APTracingSet;#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,firstB)#19
synoptic.invariants.fsmcheck.APTracingSet.copy()Lsynoptic/invariants/fsmcheck/APTracingSet;#LocalLoad(Ljava/lang/Object;,1)#20
synoptic.invariants.fsmcheck.APTracingSet.copy()Lsynoptic/invariants/fsmcheck/APTracingSet;#Return(Ljava/lang/Object;)#21
synoptic.invariants.fsmcheck.APTracingSet.copy()Ljava/lang/Object;#Return(Ljava/lang/Object;)#2
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#CheckCast(Lsynoptic/invariants/fsmcheck/IStateSet;)#25
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#26
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Pop(1)#27
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,1)#32
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Lsynoptic/model/interfaces/IGraph;,getDummyInitialNodes,()Ljava/util/Set;)#33
synoptic.model.PartitionGraph.getDummyInitialNodes()Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.PartitionGraph.getDummyInitialNodes()Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#1
synoptic.model.PartitionGraph.getDummyInitialNodes()Ljava/util/Set;#Get(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/model/PartitionGraph;,initialEvents)#2
synoptic.model.PartitionGraph.getDummyInitialNodes()Ljava/util/Set;#Invoke(SPECIAL,Lsynoptic/model/PartitionGraph;,getEventNodePartitions,(Ljava/util/LinkedHashMap;)Ljava/util/Set;)#3
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/LinkedHashMap;)Ljava/util/Set;#New(Ljava/util/LinkedHashSet;,0)#0
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/LinkedHashMap;)Ljava/util/Set;#Dup(1,0)#1
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/LinkedHashMap;)Ljava/util/Set;#Invoke(SPECIAL,Ljava/util/LinkedHashSet;,<init>,()V)#2
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/LinkedHashMap;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,2)#3
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/LinkedHashMap;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#4
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/LinkedHashMap;)Ljava/util/Set;#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,values,()Ljava/util/Collection;)#5
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/LinkedHashMap;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Collection;,iterator,()Ljava/util/Iterator;)#6
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/LinkedHashMap;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,4)#7
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/LinkedHashMap;)Ljava/util/Set;#Goto(19)#8
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/LinkedHashMap;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,4)#19
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/LinkedHashMap;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#20
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/LinkedHashMap;)Ljava/util/Set;#Constant(I,0)#21
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/LinkedHashMap;)Ljava/util/Set;#ConditionalBranch(I,ne,9)#22
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/LinkedHashMap;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,4)#9
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/LinkedHashMap;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#10
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/LinkedHashMap;)Ljava/util/Set;#CheckCast(Ljava/util/Set;)#11
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/LinkedHashMap;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,3)#12
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/LinkedHashMap;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,2)#13
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/LinkedHashMap;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#14
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/LinkedHashMap;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,3)#15
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/LinkedHashMap;)Ljava/util/Set;#Invoke(SPECIAL,Lsynoptic/model/PartitionGraph;,getEventNodePartitions,(Ljava/util/Set;)Ljava/util/Set;)#16
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/Set;)Ljava/util/Set;#New(Ljava/util/LinkedHashSet;,0)#0
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/Set;)Ljava/util/Set;#Dup(1,0)#1
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/Set;)Ljava/util/Set;#Invoke(SPECIAL,Ljava/util/LinkedHashSet;,<init>,()V)#2
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/Set;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,2)#3
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#4
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/Set;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#5
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/Set;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,4)#6
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/Set;)Ljava/util/Set;#Goto(17)#7
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,4)#17
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/Set;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#18
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/Set;)Ljava/util/Set;#Constant(I,0)#19
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/Set;)Ljava/util/Set;#ConditionalBranch(I,ne,8)#20
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,4)#8
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/Set;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#9
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/Set;)Ljava/util/Set;#CheckCast(Lsynoptic/model/EventNode;)#10
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/Set;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,3)#11
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,2)#12
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,3)#13
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/Set;)Ljava/util/Set;#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getParent,()Lsynoptic/model/Partition;)#14
synoptic.model.EventNode.getParent()Lsynoptic/model/Partition;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.EventNode.getParent()Lsynoptic/model/Partition;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/model/EventNode;,parent)#1
synoptic.model.EventNode.getParent()Lsynoptic/model/Partition;#Return(Ljava/lang/Object;)#2
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/Set;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#15
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/Set;)Ljava/util/Set;#Pop(1)#16
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/Set;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,2)#21
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/Set;)Ljava/util/Set;#Return(Ljava/lang/Object;)#22
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/LinkedHashMap;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Set;,addAll,(Ljava/util/Collection;)Z)#17
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/LinkedHashMap;)Ljava/util/Set;#Pop(1)#18
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/LinkedHashMap;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,2)#23
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/LinkedHashMap;)Ljava/util/Set;#Return(Ljava/lang/Object;)#24
synoptic.model.PartitionGraph.getDummyInitialNodes()Ljava/util/Set;#Return(Ljava/lang/Object;)#4
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#34
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,7)#35
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Goto(55)#36
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,7)#55
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#56
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Constant(I,0)#57
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#ConditionalBranch(I,ne,37)#58
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,7)#37
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#38
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#CheckCast(Lsynoptic/model/interfaces/INode;)#39
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,6)#40
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,3)#41
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,6)#42
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#43
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Pop(1)#44
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,4)#45
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,6)#46
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Queue;,add,(Ljava/lang/Object;)Z)#47
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Pop(1)#48
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,5)#49
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,6)#50
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#51
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#CheckCast(Lsynoptic/invariants/fsmcheck/IStateSet;)#52
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,6)#53
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Lsynoptic/invariants/fsmcheck/IStateSet;,setInitial,(Ljava/lang/Object;)V)#54
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Ljava/lang/Object;)V#CheckCast(Lsynoptic/model/interfaces/INode;)#2
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Ljava/lang/Object;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/APTracingSet;,setInitial,(Lsynoptic/model/interfaces/INode;)V)#3
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,1)#0
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,getEType,()Lsynoptic/model/EventType;)#1
synoptic.model.Partition.getEType()Lsynoptic/model/EventType;#Get(Z,STATIC,Lsynoptic/model/Partition;,$assertionsDisabled)#0
synoptic.model.Partition.getEType()Lsynoptic/model/EventType;#Constant(I,0)#1
synoptic.model.Partition.getEType()Lsynoptic/model/EventType;#ConditionalBranch(I,ne,11)#2
synoptic.model.Partition.getEType()Lsynoptic/model/EventType;#LocalLoad(Ljava/lang/Object;,0)#11
synoptic.model.Partition.getEType()Lsynoptic/model/EventType;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/model/Partition;,eType)#12
synoptic.model.Partition.getEType()Lsynoptic/model/EventType;#Return(Ljava/lang/Object;)#13
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalStore(Ljava/lang/Object;,2)#2
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#New(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,0)#3
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@f75600b0)#0
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.<clinit>()V#Constant(I,0)#2
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.<clinit>()V#ConditionalBranch(I,ne,6)#3
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.<clinit>()V#Constant(I,1)#4
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.<clinit>()V#Goto(7)#5
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.<clinit>()V#Put(Z,STATIC,Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,$assertionsDisabled)#7
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.<clinit>()V#Return(V)#8
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Dup(1,0)#4
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,1)#6
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Constant(L;,null)#7
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Constant(I,1)#8
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Invoke(SPECIAL,Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,<init>,(Lsynoptic/invariants/fsmcheck/TracingStateSet;Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;I)V)#9
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.<init>(Lsynoptic/invariants/fsmcheck/TracingStateSet;Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;I)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.<init>(Lsynoptic/invariants/fsmcheck/TracingStateSet;Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;I)V#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.<init>(Lsynoptic/invariants/fsmcheck/TracingStateSet;Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;I)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet;,NONSTATIC,Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,this$0)#2
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.<init>(Lsynoptic/invariants/fsmcheck/TracingStateSet;Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;I)V#LocalLoad(Ljava/lang/Object;,0)#3
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.<init>(Lsynoptic/invariants/fsmcheck/TracingStateSet;Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;I)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#4
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.<init>(Lsynoptic/invariants/fsmcheck/TracingStateSet;Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;I)V#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.<init>(Lsynoptic/invariants/fsmcheck/TracingStateSet;Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;I)V#LocalLoad(Ljava/lang/Object;,2)#6
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.<init>(Lsynoptic/invariants/fsmcheck/TracingStateSet;Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;I)V#Put(Lsynoptic/model/interfaces/INode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,node)#7
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.<init>(Lsynoptic/invariants/fsmcheck/TracingStateSet;Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;I)V#LocalLoad(Ljava/lang/Object;,0)#8
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.<init>(Lsynoptic/invariants/fsmcheck/TracingStateSet;Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;I)V#LocalLoad(Ljava/lang/Object;,3)#9
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.<init>(Lsynoptic/invariants/fsmcheck/TracingStateSet;Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;I)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,previous)#10
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.<init>(Lsynoptic/invariants/fsmcheck/TracingStateSet;Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;I)V#LocalLoad(Ljava/lang/Object;,0)#11
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.<init>(Lsynoptic/invariants/fsmcheck/TracingStateSet;Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;I)V#LocalLoad(I,4)#12
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.<init>(Lsynoptic/invariants/fsmcheck/TracingStateSet;Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;I)V#Put(I,NONSTATIC,Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,count)#13
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.<init>(Lsynoptic/invariants/fsmcheck/TracingStateSet;Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;I)V#Return(V)#14
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalStore(Ljava/lang/Object;,3)#10
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#11
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#12
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#13
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Constant(L;,null)#14
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Dup(1,1)#15
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,firstB)#16
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Dup(1,1)#17
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,firstA)#18
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,neitherSeen)#19
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#20
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,a)#21
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,2)#22
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/model/EventType;,equals,(Ljava/lang/Object;)Z)#23
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#Constant(I,0)#32
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#Return(I)#33
synoptic.model.StringEventType.equals(Ljava/lang/Object;)Z#Constant(I,0)#5
synoptic.model.StringEventType.equals(Ljava/lang/Object;)Z#Return(I)#6
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Constant(I,0)#24
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#ConditionalBranch(I,eq,30)#25
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#30
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,b)#31
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,2)#32
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/model/EventType;,equals,(Ljava/lang/Object;)Z)#33
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Constant(I,0)#34
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#ConditionalBranch(I,eq,40)#35
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#40
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,3)#41
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,neitherSeen)#42
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Return(V)#43
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Ljava/lang/Object;)V#Return(V)#4
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Goto(135)#59
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,4)#135
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Queue;,isEmpty,()Z)#136
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Constant(I,0)#137
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#ConditionalBranch(I,eq,60)#138
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,4)#60
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Queue;,remove,()Ljava/lang/Object;)#61
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#CheckCast(Lsynoptic/model/interfaces/INode;)#62
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,6)#63
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,3)#64
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,6)#65
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Set;,remove,(Ljava/lang/Object;)Z)#66
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Pop(1)#67
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,5)#68
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,6)#69
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#70
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#CheckCast(Lsynoptic/invariants/fsmcheck/IStateSet;)#71
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,7)#72
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,1)#73
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,6)#74
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Lsynoptic/model/interfaces/IGraph;,getAdjacentNodes,(Lsynoptic/model/interfaces/INode;)Ljava/util/Set;)#75
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/interfaces/INode;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/interfaces/INode;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/interfaces/INode;)Ljava/util/Set;#CheckCast(Lsynoptic/model/Partition;)#2
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/interfaces/INode;)Ljava/util/Set;#Invoke(VIRTUAL,Lsynoptic/model/PartitionGraph;,getAdjacentNodes,(Lsynoptic/model/Partition;)Ljava/util/Set;)#3
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#Get(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/model/PartitionGraph;,transitionCache)#1
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#2
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,containsKey,(Ljava/lang/Object;)Z)#3
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#Constant(I,0)#4
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#ConditionalBranch(I,eq,12)#5
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#New(Ljava/util/LinkedHashSet;,0)#12
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#Dup(1,0)#13
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#Invoke(SPECIAL,Ljava/util/LinkedHashSet;,<init>,()V)#14
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,2)#15
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#16
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#Constant(L;,null)#17
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getTransitionsIterator,(Ljava/lang/String;)Lsynoptic/util/IIterableIterator;)#18
synoptic.model.Partition.getTransitionsIterator(Ljava/lang/String;)Lsynoptic/util/IIterableIterator;#Get(Z,STATIC,Lsynoptic/model/Partition;,$assertionsDisabled)#0
synoptic.model.Partition.getTransitionsIterator(Ljava/lang/String;)Lsynoptic/util/IIterableIterator;#Constant(I,0)#1
synoptic.model.Partition.getTransitionsIterator(Ljava/lang/String;)Lsynoptic/util/IIterableIterator;#ConditionalBranch(I,ne,11)#2
synoptic.model.Partition.getTransitionsIterator(Ljava/lang/String;)Lsynoptic/util/IIterableIterator;#New(Lsynoptic/model/Partition$1;,0)#11
synoptic.model.Partition.getTransitionsIterator(Ljava/lang/String;)Lsynoptic/util/IIterableIterator;#Dup(1,0)#12
synoptic.model.Partition.getTransitionsIterator(Ljava/lang/String;)Lsynoptic/util/IIterableIterator;#LocalLoad(Ljava/lang/Object;,0)#13
synoptic.model.Partition.getTransitionsIterator(Ljava/lang/String;)Lsynoptic/util/IIterableIterator;#LocalLoad(Ljava/lang/Object;,1)#14
synoptic.model.Partition.getTransitionsIterator(Ljava/lang/String;)Lsynoptic/util/IIterableIterator;#Invoke(SPECIAL,Lsynoptic/model/Partition$1;,<init>,(Lsynoptic/model/Partition;Ljava/lang/String;)V)#15
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#Put(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/model/Partition$1;,this$0)#2
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#3
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#4
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/Partition$1;,val$relation)#5
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#6
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#7
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#8
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#New(Ljava/util/LinkedHashSet;,0)#9
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#Dup(1,0)#10
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/util/LinkedHashSet;,<init>,()V)#11
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#Put(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/Partition$1;,seen)#12
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#13
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#14
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#Get(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/Partition;,events)#15
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#16
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#Put(Ljava/util/Iterator;,NONSTATIC,Lsynoptic/model/Partition$1;,msgItr)#17
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#18
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#19
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#Constant(L;,null)#20
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,ne,29)#21
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#22
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#Get(Ljava/util/Iterator;,NONSTATIC,Lsynoptic/model/Partition$1;,msgItr)#23
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#24
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#CheckCast(Lsynoptic/model/EventNode;)#25
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitions,()Ljava/util/List;)#26
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#27
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#Goto(36)#28
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#Put(Ljava/util/Iterator;,NONSTATIC,Lsynoptic/model/Partition$1;,transItr)#36
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#37
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#Constant(L;,null)#38
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#Put(Lsynoptic/model/Transition;,NONSTATIC,Lsynoptic/model/Partition$1;,next)#39
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#Return(V)#40
synoptic.model.Partition.getTransitionsIterator(Ljava/lang/String;)Lsynoptic/util/IIterableIterator;#Return(Ljava/lang/Object;)#16
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#Invoke(INTERFACE,Lsynoptic/util/IIterableIterator;,iterator,()Ljava/util/Iterator;)#19
synoptic.model.Partition$1.iterator()Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.Partition$1.iterator()Ljava/util/Iterator;#Return(Ljava/lang/Object;)#1
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,4)#20
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#Goto(32)#21
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,4)#32
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#33
synoptic.model.Partition$1.hasNext()Z#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.Partition$1.hasNext()Z#Get(Lsynoptic/model/Transition;,NONSTATIC,Lsynoptic/model/Partition$1;,next)#1
synoptic.model.Partition$1.hasNext()Z#Constant(L;,null)#2
synoptic.model.Partition$1.hasNext()Z#ConditionalBranch(Ljava/lang/Object;,ne,8)#3
synoptic.model.Partition$1.hasNext()Z#LocalLoad(Ljava/lang/Object;,0)#4
synoptic.model.Partition$1.hasNext()Z#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.model.Partition$1.hasNext()Z#Invoke(SPECIAL,Lsynoptic/model/Partition$1;,getNext,()Lsynoptic/model/Transition;)#6
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Goto(56)#0
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#LocalLoad(Ljava/lang/Object;,0)#56
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Get(Ljava/util/Iterator;,NONSTATIC,Lsynoptic/model/Partition$1;,transItr)#57
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#58
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Constant(I,0)#59
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#ConditionalBranch(I,ne,1)#60
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#LocalLoad(Ljava/lang/Object;,0)#1
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Get(Ljava/util/Iterator;,NONSTATIC,Lsynoptic/model/Partition$1;,transItr)#2
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#3
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Constant(I,0)#4
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#ConditionalBranch(I,eq,33)#5
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#LocalLoad(Ljava/lang/Object;,0)#6
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Get(Ljava/util/Iterator;,NONSTATIC,Lsynoptic/model/Partition$1;,transItr)#7
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#8
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#CheckCast(Lsynoptic/model/interfaces/ITransition;)#9
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#LocalStore(Ljava/lang/Object;,1)#10
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#New(Lsynoptic/model/Transition;,0)#11
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Dup(1,0)#12
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#LocalLoad(Ljava/lang/Object;,1)#13
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Invoke(INTERFACE,Lsynoptic/model/interfaces/ITransition;,getSource,()Ljava/lang/Object;)#14
synoptic.model.Transition.getSource()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.Transition.getSource()Ljava/lang/Object;#Get(Ljava/lang/Object;,NONSTATIC,Lsynoptic/model/Transition;,source)#1
synoptic.model.Transition.getSource()Ljava/lang/Object;#Return(Ljava/lang/Object;)#2
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#CheckCast(Lsynoptic/model/EventNode;)#15
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getParent,()Lsynoptic/model/Partition;)#16
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#LocalLoad(Ljava/lang/Object;,1)#17
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Invoke(INTERFACE,Lsynoptic/model/interfaces/ITransition;,getTarget,()Ljava/lang/Object;)#18
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#CheckCast(Lsynoptic/model/EventNode;)#19
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getParent,()Lsynoptic/model/Partition;)#20
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#LocalLoad(Ljava/lang/Object;,1)#21
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Invoke(INTERFACE,Lsynoptic/model/interfaces/ITransition;,getRelation,()Ljava/lang/String;)#22
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Invoke(SPECIAL,Lsynoptic/model/Transition;,<init>,(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V)#23
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#LocalStore(Ljava/lang/Object;,2)#24
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#LocalLoad(Ljava/lang/Object;,0)#25
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Get(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/Partition$1;,seen)#26
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#LocalLoad(Ljava/lang/Object;,2)#27
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#28
synoptic.model.Transition.hashCode()I#Constant(I,31)#0
synoptic.model.Transition.hashCode()I#LocalStore(I,1)#1
synoptic.model.Transition.hashCode()I#Constant(I,1)#2
synoptic.model.Transition.hashCode()I#LocalStore(I,2)#3
synoptic.model.Transition.hashCode()I#Constant(I,31)#4
synoptic.model.Transition.hashCode()I#LocalLoad(I,2)#5
synoptic.model.Transition.hashCode()I#BinaryOp(I,mul)#6
synoptic.model.Transition.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#7
synoptic.model.Transition.hashCode()I#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/Transition;,relation)#8
synoptic.model.Transition.hashCode()I#Constant(L;,null)#9
synoptic.model.Transition.hashCode()I#ConditionalBranch(Ljava/lang/Object;,ne,13)#10
synoptic.model.Transition.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#13
synoptic.model.Transition.hashCode()I#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/Transition;,relation)#14
synoptic.model.Transition.hashCode()I#Invoke(VIRTUAL,Ljava/lang/String;,hashCode,()I)#15
synoptic.model.Transition.hashCode()I#BinaryOp(I,add)#16
synoptic.model.Transition.hashCode()I#LocalStore(I,2)#17
synoptic.model.Transition.hashCode()I#Constant(I,31)#18
synoptic.model.Transition.hashCode()I#LocalLoad(I,2)#19
synoptic.model.Transition.hashCode()I#BinaryOp(I,mul)#20
synoptic.model.Transition.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#21
synoptic.model.Transition.hashCode()I#Get(Ljava/lang/Object;,NONSTATIC,Lsynoptic/model/Transition;,source)#22
synoptic.model.Transition.hashCode()I#Constant(L;,null)#23
synoptic.model.Transition.hashCode()I#ConditionalBranch(Ljava/lang/Object;,ne,27)#24
synoptic.model.Transition.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#27
synoptic.model.Transition.hashCode()I#Get(Ljava/lang/Object;,NONSTATIC,Lsynoptic/model/Transition;,source)#28
synoptic.model.Transition.hashCode()I#Invoke(VIRTUAL,Ljava/lang/Object;,hashCode,()I)#29
synoptic.model.Transition.hashCode()I#BinaryOp(I,add)#30
synoptic.model.Transition.hashCode()I#LocalStore(I,2)#31
synoptic.model.Transition.hashCode()I#Constant(I,31)#32
synoptic.model.Transition.hashCode()I#LocalLoad(I,2)#33
synoptic.model.Transition.hashCode()I#BinaryOp(I,mul)#34
synoptic.model.Transition.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#35
synoptic.model.Transition.hashCode()I#Get(Ljava/lang/Object;,NONSTATIC,Lsynoptic/model/Transition;,target)#36
synoptic.model.Transition.hashCode()I#Constant(L;,null)#37
synoptic.model.Transition.hashCode()I#ConditionalBranch(Ljava/lang/Object;,ne,41)#38
synoptic.model.Transition.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#41
synoptic.model.Transition.hashCode()I#Get(Ljava/lang/Object;,NONSTATIC,Lsynoptic/model/Transition;,target)#42
synoptic.model.Transition.hashCode()I#Invoke(VIRTUAL,Ljava/lang/Object;,hashCode,()I)#43
synoptic.model.Transition.hashCode()I#BinaryOp(I,add)#44
synoptic.model.Transition.hashCode()I#LocalStore(I,2)#45
synoptic.model.Transition.hashCode()I#LocalLoad(I,2)#46
synoptic.model.Transition.hashCode()I#Return(I)#47
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Constant(I,0)#29
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#ConditionalBranch(I,eq,56)#30
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#LocalLoad(Ljava/lang/Object;,2)#31
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Return(Ljava/lang/Object;)#32
synoptic.model.Partition$1.hasNext()Z#Put(Lsynoptic/model/Transition;,NONSTATIC,Lsynoptic/model/Partition$1;,next)#7
synoptic.model.Partition$1.hasNext()Z#LocalLoad(Ljava/lang/Object;,0)#8
synoptic.model.Partition$1.hasNext()Z#Get(Lsynoptic/model/Transition;,NONSTATIC,Lsynoptic/model/Partition$1;,next)#9
synoptic.model.Partition$1.hasNext()Z#Constant(L;,null)#10
synoptic.model.Partition$1.hasNext()Z#ConditionalBranch(Ljava/lang/Object;,eq,14)#11
synoptic.model.Partition$1.hasNext()Z#Constant(I,1)#12
synoptic.model.Partition$1.hasNext()Z#Return(I)#13
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#Constant(I,0)#34
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#ConditionalBranch(I,ne,22)#35
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,4)#22
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#23
synoptic.model.Partition$1.next()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.Partition$1.next()Ljava/lang/Object;#Invoke(VIRTUAL,Lsynoptic/model/Partition$1;,next,()Lsynoptic/model/Transition;)#1
synoptic.model.Partition$1.next()Lsynoptic/model/Transition;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.Partition$1.next()Lsynoptic/model/Transition;#Invoke(VIRTUAL,Lsynoptic/model/Partition$1;,hasNext,()Z)#1
synoptic.model.Partition$1.next()Lsynoptic/model/Transition;#Constant(I,0)#2
synoptic.model.Partition$1.next()Lsynoptic/model/Transition;#ConditionalBranch(I,ne,8)#3
synoptic.model.Partition$1.next()Lsynoptic/model/Transition;#LocalLoad(Ljava/lang/Object;,0)#8
synoptic.model.Partition$1.next()Lsynoptic/model/Transition;#Get(Lsynoptic/model/Transition;,NONSTATIC,Lsynoptic/model/Partition$1;,next)#9
synoptic.model.Partition$1.next()Lsynoptic/model/Transition;#LocalStore(Ljava/lang/Object;,1)#10
synoptic.model.Partition$1.next()Lsynoptic/model/Transition;#LocalLoad(Ljava/lang/Object;,0)#11
synoptic.model.Partition$1.next()Lsynoptic/model/Transition;#Constant(L;,null)#12
synoptic.model.Partition$1.next()Lsynoptic/model/Transition;#Put(Lsynoptic/model/Transition;,NONSTATIC,Lsynoptic/model/Partition$1;,next)#13
synoptic.model.Partition$1.next()Lsynoptic/model/Transition;#LocalLoad(Ljava/lang/Object;,1)#14
synoptic.model.Partition$1.next()Lsynoptic/model/Transition;#Return(Ljava/lang/Object;)#15
synoptic.model.Partition$1.next()Ljava/lang/Object;#Return(Ljava/lang/Object;)#2
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#CheckCast(Lsynoptic/model/Transition;)#24
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,3)#25
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,2)#26
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,3)#27
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#Invoke(VIRTUAL,Lsynoptic/model/Transition;,getTarget,()Ljava/lang/Object;)#28
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#CheckCast(Lsynoptic/model/Partition;)#29
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#30
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#Pop(1)#31
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,5)#2
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#5
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Constant(L;,null)#6
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,10)#7
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#10
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/lang/Object;,getClass,()Ljava/lang/Class;)#11
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#12
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/lang/Object;,getClass,()Ljava/lang/Class;)#13
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,eq,17)#14
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#17
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#CheckCast(Lsynoptic/model/Transition;)#18
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#LocalStore(Ljava/lang/Object;,2)#19
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#20
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/Transition;,relation)#21
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Constant(L;,null)#22
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,30)#23
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#30
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/Transition;,relation)#31
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,2)#32
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/Transition;,relation)#33
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#34
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Constant(I,0)#35
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#ConditionalBranch(I,ne,39)#36
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#39
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Get(Ljava/lang/Object;,NONSTATIC,Lsynoptic/model/Transition;,source)#40
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Constant(L;,null)#41
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,49)#42
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#49
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Get(Ljava/lang/Object;,NONSTATIC,Lsynoptic/model/Transition;,source)#50
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,2)#51
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Get(Ljava/lang/Object;,NONSTATIC,Lsynoptic/model/Transition;,source)#52
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#53
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Constant(I,0)#54
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#ConditionalBranch(I,ne,58)#55
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#58
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Get(Ljava/lang/Object;,NONSTATIC,Lsynoptic/model/Transition;,target)#59
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Constant(L;,null)#60
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,68)#61
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#68
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Get(Ljava/lang/Object;,NONSTATIC,Lsynoptic/model/Transition;,target)#69
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,2)#70
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Get(Ljava/lang/Object;,NONSTATIC,Lsynoptic/model/Transition;,target)#71
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#72
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Constant(I,0)#73
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#ConditionalBranch(I,ne,77)#74
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Constant(I,1)#77
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Return(I)#78
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#LocalLoad(Ljava/lang/Object;,0)#61
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Get(Ljava/util/Iterator;,NONSTATIC,Lsynoptic/model/Partition$1;,msgItr)#62
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#63
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Constant(I,0)#64
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#ConditionalBranch(I,ne,1)#65
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Constant(L;,null)#66
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Return(Ljava/lang/Object;)#67
synoptic.model.Partition$1.hasNext()Z#Constant(I,0)#14
synoptic.model.Partition$1.hasNext()Z#Return(I)#15
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#36
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#Get(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/model/PartitionGraph;,transitionCache)#37
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#38
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,2)#39
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#40
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#Pop(1)#41
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,2)#42
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#Return(Ljava/lang/Object;)#43
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/interfaces/INode;)Ljava/util/Set;#Return(Ljava/lang/Object;)#4
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#76
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,9)#77
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Goto(131)#78
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,9)#131
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#132
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Constant(I,0)#133
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#ConditionalBranch(I,ne,79)#134
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,9)#79
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#80
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#CheckCast(Lsynoptic/model/interfaces/INode;)#81
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,8)#82
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,5)#83
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,8)#84
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#85
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#CheckCast(Lsynoptic/invariants/fsmcheck/IStateSet;)#86
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,10)#87
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,7)#88
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Lsynoptic/invariants/fsmcheck/IStateSet;,copy,()Ljava/lang/Object;)#89
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#CheckCast(Lsynoptic/invariants/fsmcheck/IStateSet;)#90
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalStore(Ljava/lang/Object;,11)#91
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,11)#92
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,8)#93
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Lsynoptic/invariants/fsmcheck/IStateSet;,transition,(Ljava/lang/Object;)V)#94
synoptic.invariants.fsmcheck.APTracingSet.transition(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.fsmcheck.APTracingSet.transition(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.invariants.fsmcheck.APTracingSet.transition(Ljava/lang/Object;)V#CheckCast(Lsynoptic/model/interfaces/INode;)#2
synoptic.invariants.fsmcheck.APTracingSet.transition(Ljava/lang/Object;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/APTracingSet;,transition,(Lsynoptic/model/interfaces/INode;)V)#3
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,1)#0
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,getEType,()Lsynoptic/model/EventType;)#1
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalStore(Ljava/lang/Object;,2)#2
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#3
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,a)#4
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,2)#5
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/model/EventType;,equals,(Ljava/lang/Object;)Z)#6
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#Constant(I,1)#8
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#Return(I)#9
synoptic.model.StringEventType.equals(Ljava/lang/Object;)Z#Constant(I,1)#10
synoptic.model.StringEventType.equals(Ljava/lang/Object;)Z#Return(I)#11
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Constant(I,0)#7
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#ConditionalBranch(I,eq,21)#8
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#9
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#10
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#11
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,neitherSeen)#12
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#13
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,firstA)#14
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/APTracingSet;,preferShorter,(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#15
synoptic.invariants.fsmcheck.TracingStateSet.preferShorter(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#LocalLoad(Ljava/lang/Object;,2)#0
synoptic.invariants.fsmcheck.TracingStateSet.preferShorter(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#Constant(L;,null)#1
synoptic.invariants.fsmcheck.TracingStateSet.preferShorter(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#ConditionalBranch(Ljava/lang/Object;,ne,5)#2
synoptic.invariants.fsmcheck.TracingStateSet.preferShorter(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#LocalLoad(Ljava/lang/Object;,1)#3
synoptic.invariants.fsmcheck.TracingStateSet.preferShorter(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#Return(Ljava/lang/Object;)#4
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,firstA)#16
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#17
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Constant(L;,null)#18
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,neitherSeen)#19
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Goto(38)#20
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#38
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#39
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,1)#40
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#41
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,neitherSeen)#42
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/APTracingSet;,extend,(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#43
synoptic.invariants.fsmcheck.TracingStateSet.extend(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#LocalLoad(Ljava/lang/Object;,2)#0
synoptic.invariants.fsmcheck.TracingStateSet.extend(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#Constant(L;,null)#1
synoptic.invariants.fsmcheck.TracingStateSet.extend(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#ConditionalBranch(Ljava/lang/Object;,ne,5)#2
synoptic.invariants.fsmcheck.TracingStateSet.extend(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#Constant(L;,null)#3
synoptic.invariants.fsmcheck.TracingStateSet.extend(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#Return(Ljava/lang/Object;)#4
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,neitherSeen)#44
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#45
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#46
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,1)#47
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#48
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,firstA)#49
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/APTracingSet;,extend,(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#50
synoptic.invariants.fsmcheck.TracingStateSet.extend(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#New(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,0)#5
synoptic.invariants.fsmcheck.TracingStateSet.extend(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#Dup(1,0)#6
synoptic.invariants.fsmcheck.TracingStateSet.extend(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#LocalLoad(Ljava/lang/Object;,0)#7
synoptic.invariants.fsmcheck.TracingStateSet.extend(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#LocalLoad(Ljava/lang/Object;,1)#8
synoptic.invariants.fsmcheck.TracingStateSet.extend(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#LocalLoad(Ljava/lang/Object;,2)#9
synoptic.invariants.fsmcheck.TracingStateSet.extend(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#LocalLoad(Ljava/lang/Object;,2)#10
synoptic.invariants.fsmcheck.TracingStateSet.extend(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#Get(I,NONSTATIC,Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,count)#11
synoptic.invariants.fsmcheck.TracingStateSet.extend(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#Constant(I,1)#12
synoptic.invariants.fsmcheck.TracingStateSet.extend(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#BinaryOp(I,add)#13
synoptic.invariants.fsmcheck.TracingStateSet.extend(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#Invoke(SPECIAL,Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,<init>,(Lsynoptic/invariants/fsmcheck/TracingStateSet;Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;I)V)#14
synoptic.invariants.fsmcheck.TracingStateSet.extend(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#Return(Ljava/lang/Object;)#15
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,firstA)#51
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#52
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#53
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,1)#54
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#55
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,firstB)#56
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/APTracingSet;,extend,(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#57
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,firstB)#58
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Return(V)#59
synoptic.invariants.fsmcheck.APTracingSet.transition(Ljava/lang/Object;)V#Return(V)#4
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,11)#95
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,10)#96
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Lsynoptic/invariants/fsmcheck/IStateSet;,isSubset,(Ljava/lang/Object;)Z)#97
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Ljava/lang/Object;)Z#CheckCast(Lsynoptic/invariants/fsmcheck/TracingStateSet;)#2
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/APTracingSet;,isSubset,(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z)#3
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#LocalLoad(Ljava/lang/Object;,1)#0
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#CheckCast(Lsynoptic/invariants/fsmcheck/APTracingSet;)#1
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#LocalStore(Ljava/lang/Object;,2)#2
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#LocalLoad(Ljava/lang/Object;,2)#3
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,neitherSeen)#4
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Constant(L;,null)#5
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#ConditionalBranch(Ljava/lang/Object;,ne,13)#6
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#LocalLoad(Ljava/lang/Object;,0)#7
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,neitherSeen)#8
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Constant(L;,null)#9
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#ConditionalBranch(Ljava/lang/Object;,eq,13)#10
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#LocalLoad(Ljava/lang/Object;,2)#13
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,firstA)#14
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Constant(L;,null)#15
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#ConditionalBranch(Ljava/lang/Object;,ne,23)#16
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#LocalLoad(Ljava/lang/Object;,0)#17
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,firstA)#18
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Constant(L;,null)#19
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#ConditionalBranch(Ljava/lang/Object;,eq,23)#20
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Constant(I,0)#21
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Return(I)#22
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Ljava/lang/Object;)Z#Return(I)#4
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalStore(I,12)#98
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,10)#99
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,11)#100
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Lsynoptic/invariants/fsmcheck/IStateSet;,mergeWith,(Ljava/lang/Object;)V)#101
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Ljava/lang/Object;)V#CheckCast(Lsynoptic/invariants/fsmcheck/TracingStateSet;)#2
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Ljava/lang/Object;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/APTracingSet;,mergeWith,(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V)#3
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,1)#0
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#CheckCast(Lsynoptic/invariants/fsmcheck/APTracingSet;)#1
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalStore(Ljava/lang/Object;,2)#2
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,0)#3
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,0)#4
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,neitherSeen)#6
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,2)#7
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,neitherSeen)#8
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/APTracingSet;,preferShorter,(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#9
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,neitherSeen)#10
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,0)#11
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,0)#12
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,0)#13
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,firstA)#14
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,2)#15
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,firstA)#16
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/APTracingSet;,preferShorter,(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#17
synoptic.invariants.fsmcheck.TracingStateSet.preferShorter(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#LocalLoad(Ljava/lang/Object;,1)#5
synoptic.invariants.fsmcheck.TracingStateSet.preferShorter(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#Constant(L;,null)#6
synoptic.invariants.fsmcheck.TracingStateSet.preferShorter(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#ConditionalBranch(Ljava/lang/Object;,ne,10)#7
synoptic.invariants.fsmcheck.TracingStateSet.preferShorter(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#LocalLoad(Ljava/lang/Object;,2)#8
synoptic.invariants.fsmcheck.TracingStateSet.preferShorter(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#Return(Ljava/lang/Object;)#9
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,firstA)#18
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,0)#19
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,0)#20
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,0)#21
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,firstB)#22
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,2)#23
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,firstB)#24
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/APTracingSet;,preferShorter,(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#25
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,firstB)#26
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Return(V)#27
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Ljava/lang/Object;)V#Return(V)#4
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(I,2)#102
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Constant(I,0)#103
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#ConditionalBranch(I,eq,115)#104
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,10)#105
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Lsynoptic/invariants/fsmcheck/IStateSet;,isFail,()Z)#106
synoptic.invariants.fsmcheck.TracingStateSet.isFail()Z#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.fsmcheck.TracingStateSet.isFail()Z#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/TracingStateSet;,failpath,()Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#1
synoptic.invariants.fsmcheck.APTracingSet.failpath()Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.fsmcheck.APTracingSet.failpath()Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,firstB)#1
synoptic.invariants.fsmcheck.APTracingSet.failpath()Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#Return(Ljava/lang/Object;)#2
synoptic.invariants.fsmcheck.TracingStateSet.isFail()Z#Constant(L;,null)#2
synoptic.invariants.fsmcheck.TracingStateSet.isFail()Z#ConditionalBranch(Ljava/lang/Object;,eq,6)#3
synoptic.invariants.fsmcheck.TracingStateSet.isFail()Z#Constant(I,0)#6
synoptic.invariants.fsmcheck.TracingStateSet.isFail()Z#Return(I)#7
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Constant(I,0)#107
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#ConditionalBranch(I,eq,115)#108
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(I,12)#115
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Constant(I,0)#116
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#ConditionalBranch(I,ne,131)#117
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,3)#118
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,8)#119
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Set;,contains,(Ljava/lang/Object;)Z)#120
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Constant(I,0)#121
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#ConditionalBranch(I,ne,131)#122
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,4)#123
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,8)#124
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Queue;,add,(Ljava/lang/Object;)Z)#125
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Pop(1)#126
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,3)#127
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,8)#128
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#129
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Pop(1)#130
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#21
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,b)#22
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,2)#23
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/model/EventType;,equals,(Ljava/lang/Object;)Z)#24
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Constant(I,0)#25
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#ConditionalBranch(I,eq,38)#26
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Constant(I,0)#11
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Return(I)#12
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#LocalLoad(Ljava/lang/Object;,0)#33
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/Partition$1;,val$relation)#34
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Constant(L;,null)#35
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#ConditionalBranch(Ljava/lang/Object;,ne,46)#36
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#LocalLoad(Ljava/lang/Object;,0)#37
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#LocalLoad(Ljava/lang/Object;,0)#38
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Get(Ljava/util/Iterator;,NONSTATIC,Lsynoptic/model/Partition$1;,msgItr)#39
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#40
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#CheckCast(Lsynoptic/model/EventNode;)#41
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitions,()Ljava/util/List;)#42
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#43
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Put(Ljava/util/Iterator;,NONSTATIC,Lsynoptic/model/Partition$1;,transItr)#44
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Goto(56)#45
synoptic.invariants.fsmcheck.TracingStateSet.preferShorter(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#LocalLoad(Ljava/lang/Object;,1)#10
synoptic.invariants.fsmcheck.TracingStateSet.preferShorter(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#Get(I,NONSTATIC,Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,count)#11
synoptic.invariants.fsmcheck.TracingStateSet.preferShorter(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#LocalLoad(Ljava/lang/Object;,2)#12
synoptic.invariants.fsmcheck.TracingStateSet.preferShorter(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#Get(I,NONSTATIC,Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,count)#13
synoptic.invariants.fsmcheck.TracingStateSet.preferShorter(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#ConditionalBranch(I,ge,17)#14
synoptic.invariants.fsmcheck.TracingStateSet.preferShorter(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#LocalLoad(Ljava/lang/Object;,1)#15
synoptic.invariants.fsmcheck.TracingStateSet.preferShorter(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#Return(Ljava/lang/Object;)#16
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#LocalLoad(Ljava/lang/Object;,2)#23
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,firstB)#24
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Constant(L;,null)#25
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#ConditionalBranch(Ljava/lang/Object;,ne,33)#26
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#LocalLoad(Ljava/lang/Object;,0)#27
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,firstB)#28
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Constant(L;,null)#29
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#ConditionalBranch(Ljava/lang/Object;,eq,33)#30
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Constant(I,1)#33
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Return(I)#34
synoptic.invariants.fsmcheck.TracingStateSet.preferShorter(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#LocalLoad(Ljava/lang/Object;,2)#17
synoptic.invariants.fsmcheck.TracingStateSet.preferShorter(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#Return(Ljava/lang/Object;)#18
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#27
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#28
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#29
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,neitherSeen)#30
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#31
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,firstB)#32
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/APTracingSet;,preferShorter,(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#33
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,firstB)#34
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#35
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Constant(L;,null)#36
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,neitherSeen)#37
synoptic.invariants.fsmcheck.TracingStateSet.isFail()Z#Constant(I,1)#4
synoptic.invariants.fsmcheck.TracingStateSet.isFail()Z#Return(I)#5
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,8)#109
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,isTerminal,()Z)#110
synoptic.model.Partition.isTerminal()Z#Get(Z,STATIC,Lsynoptic/model/Partition;,$assertionsDisabled)#0
synoptic.model.Partition.isTerminal()Z#Constant(I,0)#1
synoptic.model.Partition.isTerminal()Z#ConditionalBranch(I,ne,11)#2
synoptic.model.Partition.isTerminal()Z#LocalLoad(Ljava/lang/Object;,0)#11
synoptic.model.Partition.isTerminal()Z#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/model/Partition;,eType)#12
synoptic.model.Partition.isTerminal()Z#Get(Z,NONSTATIC,Lsynoptic/model/EventType;,isTerminalEventType)#13
synoptic.model.Partition.isTerminal()Z#Return(I)#14
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Constant(I,0)#111
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#ConditionalBranch(I,eq,115)#112
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#6
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#Get(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/model/PartitionGraph;,transitionCache)#7
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#8
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#9
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#CheckCast(Ljava/util/Set;)#10
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#Return(Ljava/lang/Object;)#11
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Constant(I,0)#31
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Return(I)#32
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,5)#113
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Return(Ljava/lang/Object;)#114
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Invoke(INTERFACE,Ljava/util/Map;,entrySet,()Ljava/util/Set;)#48
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalStore(Ljava/lang/Object;,5)#49
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,5)#50
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#51
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalStore(Ljava/lang/Object;,7)#52
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Goto(84)#53
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,7)#84
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#85
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Constant(I,0)#86
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#ConditionalBranch(I,ne,54)#87
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,7)#54
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#55
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#CheckCast(Ljava/util/Map$Entry;)#56
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalStore(Ljava/lang/Object;,6)#57
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,6)#58
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Invoke(INTERFACE,Ljava/util/Map$Entry;,getValue,()Ljava/lang/Object;)#59
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#CheckCast(Lsynoptic/invariants/fsmcheck/TracingStateSet;)#60
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/TracingStateSet;,failpath,()Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#61
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalStore(Ljava/lang/Object;,8)#62
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,6)#63
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Invoke(INTERFACE,Ljava/util/Map$Entry;,getKey,()Ljava/lang/Object;)#64
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#CheckCast(Lsynoptic/model/interfaces/INode;)#65
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,isTerminal,()Z)#66
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalStore(I,9)#67
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalLoad(I,9)#68
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Constant(I,0)#69
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#ConditionalBranch(I,eq,84)#70
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,8)#71
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Constant(L;,null)#72
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#ConditionalBranch(Ljava/lang/Object;,eq,84)#73
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,4)#74
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Constant(L;,null)#75
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#ConditionalBranch(Ljava/lang/Object;,eq,82)#76
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,8)#82
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalStore(Ljava/lang/Object;,4)#83
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,4)#88
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Constant(L;,null)#89
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#ConditionalBranch(Ljava/lang/Object;,ne,93)#90
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,4)#93
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,0)#94
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,toCounterexample,(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;)#95
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#New(Ljava/util/ArrayList;,0)#0
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#Dup(1,0)#1
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#2
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#LocalStore(Ljava/lang/Object;,2)#3
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,0)#4
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#LocalStore(Ljava/lang/Object;,3)#5
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#Get(Z,STATIC,Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,$assertionsDisabled)#6
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#Constant(I,0)#7
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#ConditionalBranch(I,ne,73)#8
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,3)#73
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#Constant(L;,null)#74
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#ConditionalBranch(Ljava/lang/Object;,ne,18)#75
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,2)#18
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,3)#19
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#Get(Lsynoptic/model/interfaces/INode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,node)#20
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#21
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#Pop(1)#22
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#Get(Z,STATIC,Lsynoptic/invariants/fsmcheck/TracingStateSet;,checkPath)#23
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#Constant(I,0)#24
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#ConditionalBranch(I,eq,70)#25
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,3)#70
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,previous)#71
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#LocalStore(Ljava/lang/Object;,3)#72
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,2)#76
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#Invoke(STATIC,Ljava/util/Collections;,reverse,(Ljava/util/List;)V)#77
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#New(Lsynoptic/invariants/CExamplePath;,0)#78
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#Dup(1,0)#79
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,1)#80
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,1)#81
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,2)#82
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#Invoke(INTERFACE,Lsynoptic/invariants/ITemporalInvariant;,shorten,(Ljava/util/List;)Ljava/util/List;)#83
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Constant(I,0)#0
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalStore(I,2)#1
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Goto(35)#2
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalLoad(I,2)#35
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#36
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,size,()I)#37
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#ConditionalBranch(I,lt,3)#38
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#3
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalLoad(I,2)#4
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#5
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#CheckCast(Lsynoptic/model/interfaces/INode;)#6
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,3)#7
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#8
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,getEType,()Lsynoptic/model/EventType;)#9
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#10
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/AlwaysPrecedesInvariant;,first)#11
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/model/EventType;,equals,(Ljava/lang/Object;)Z)#12
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Constant(I,0)#13
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#ConditionalBranch(I,eq,17)#14
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#17
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,getEType,()Lsynoptic/model/EventType;)#18
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#19
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/AlwaysPrecedesInvariant;,second)#20
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/model/EventType;,equals,(Ljava/lang/Object;)Z)#21
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Constant(I,0)#22
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#ConditionalBranch(I,eq,31)#23
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalLoad(I,2)#31
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Constant(I,1)#32
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#BinaryOp(I,add)#33
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalStore(I,2)#34
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#24
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Constant(I,0)#25
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalLoad(I,2)#26
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Constant(I,1)#27
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#BinaryOp(I,add)#28
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,subList,(II)Ljava/util/List;)#29
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Return(Ljava/lang/Object;)#30
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#Invoke(SPECIAL,Lsynoptic/invariants/CExamplePath;,<init>,(Lsynoptic/invariants/ITemporalInvariant;Ljava/util/List;)V)#84
synoptic.invariants.CExamplePath.<init>(Lsynoptic/invariants/ITemporalInvariant;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.CExamplePath.<init>(Lsynoptic/invariants/ITemporalInvariant;Ljava/util/List;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
synoptic.invariants.CExamplePath.<init>(Lsynoptic/invariants/ITemporalInvariant;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.invariants.CExamplePath.<init>(Lsynoptic/invariants/ITemporalInvariant;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#3
synoptic.invariants.CExamplePath.<init>(Lsynoptic/invariants/ITemporalInvariant;Ljava/util/List;)V#Put(Lsynoptic/invariants/ITemporalInvariant;,NONSTATIC,Lsynoptic/invariants/CExamplePath;,invariant)#4
synoptic.invariants.CExamplePath.<init>(Lsynoptic/invariants/ITemporalInvariant;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.invariants.CExamplePath.<init>(Lsynoptic/invariants/ITemporalInvariant;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#6
synoptic.invariants.CExamplePath.<init>(Lsynoptic/invariants/ITemporalInvariant;Ljava/util/List;)V#Put(Ljava/util/List;,NONSTATIC,Lsynoptic/invariants/CExamplePath;,path)#7
synoptic.invariants.CExamplePath.<init>(Lsynoptic/invariants/ITemporalInvariant;Ljava/util/List;)V#Return(V)#8
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#LocalStore(Ljava/lang/Object;,4)#85
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,4)#86
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/invariants/CExamplePath;,path)#87
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#Constant(L;,null)#88
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#ConditionalBranch(Ljava/lang/Object;,ne,105)#89
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,4)#105
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#Return(Ljava/lang/Object;)#106
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Return(Ljava/lang/Object;)#96
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,6)#27
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,6)#28
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Constant(L;,null)#29
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#ConditionalBranch(Ljava/lang/Object;,eq,35)#30
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#31
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,6)#32
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#33
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Pop(1)#34
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,3)#32
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@4395b438)#33
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#34
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Constant(I,0)#35
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#ConditionalBranch(I,eq,42)#36
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#New(Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,0)#37
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Dup(1,0)#38
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,0)#39
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Invoke(SPECIAL,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,<init>,(Lsynoptic/invariants/BinaryInvariant;)V)#40
synoptic.invariants.fsmcheck.NFbyTracingSet.<init>(Lsynoptic/invariants/BinaryInvariant;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.fsmcheck.NFbyTracingSet.<init>(Lsynoptic/invariants/BinaryInvariant;)V#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.invariants.fsmcheck.NFbyTracingSet.<init>(Lsynoptic/invariants/BinaryInvariant;)V#Invoke(VIRTUAL,Lsynoptic/invariants/BinaryInvariant;,getFirst,()Lsynoptic/model/EventType;)#2
synoptic.invariants.fsmcheck.NFbyTracingSet.<init>(Lsynoptic/invariants/BinaryInvariant;)V#LocalLoad(Ljava/lang/Object;,1)#3
synoptic.invariants.fsmcheck.NFbyTracingSet.<init>(Lsynoptic/invariants/BinaryInvariant;)V#Invoke(VIRTUAL,Lsynoptic/invariants/BinaryInvariant;,getSecond,()Lsynoptic/model/EventType;)#4
synoptic.invariants.fsmcheck.NFbyTracingSet.<init>(Lsynoptic/invariants/BinaryInvariant;)V#Invoke(SPECIAL,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,<init>,(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V)#5
synoptic.invariants.fsmcheck.NFbyTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.fsmcheck.NFbyTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#Invoke(SPECIAL,Lsynoptic/invariants/fsmcheck/TracingStateSet;,<init>,()V)#1
synoptic.invariants.fsmcheck.NFbyTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.invariants.fsmcheck.NFbyTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#LocalLoad(Ljava/lang/Object;,1)#3
synoptic.invariants.fsmcheck.NFbyTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#Put(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,a)#4
synoptic.invariants.fsmcheck.NFbyTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.invariants.fsmcheck.NFbyTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#LocalLoad(Ljava/lang/Object;,2)#6
synoptic.invariants.fsmcheck.NFbyTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#Put(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,b)#7
synoptic.invariants.fsmcheck.NFbyTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#Return(V)#8
synoptic.invariants.fsmcheck.NFbyTracingSet.<init>(Lsynoptic/invariants/BinaryInvariant;)V#Return(V)#6
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalStore(Ljava/lang/Object;,2)#41
synoptic.invariants.fsmcheck.NFbyTracingSet.copy()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.fsmcheck.NFbyTracingSet.copy()Ljava/lang/Object;#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,copy,()Lsynoptic/invariants/fsmcheck/NFbyTracingSet;)#1
synoptic.invariants.fsmcheck.NFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/NFbyTracingSet;#New(Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,0)#0
synoptic.invariants.fsmcheck.NFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/NFbyTracingSet;#Dup(1,0)#1
synoptic.invariants.fsmcheck.NFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/NFbyTracingSet;#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.invariants.fsmcheck.NFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/NFbyTracingSet;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,a)#3
synoptic.invariants.fsmcheck.NFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/NFbyTracingSet;#LocalLoad(Ljava/lang/Object;,0)#4
synoptic.invariants.fsmcheck.NFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/NFbyTracingSet;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,b)#5
synoptic.invariants.fsmcheck.NFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/NFbyTracingSet;#Invoke(SPECIAL,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,<init>,(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V)#6
synoptic.invariants.fsmcheck.NFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/NFbyTracingSet;#LocalStore(Ljava/lang/Object;,1)#7
synoptic.invariants.fsmcheck.NFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/NFbyTracingSet;#LocalLoad(Ljava/lang/Object;,1)#8
synoptic.invariants.fsmcheck.NFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/NFbyTracingSet;#LocalLoad(Ljava/lang/Object;,0)#9
synoptic.invariants.fsmcheck.NFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/NFbyTracingSet;#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,aNotSeen)#10
synoptic.invariants.fsmcheck.NFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/NFbyTracingSet;#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,aNotSeen)#11
synoptic.invariants.fsmcheck.NFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/NFbyTracingSet;#LocalLoad(Ljava/lang/Object;,1)#12
synoptic.invariants.fsmcheck.NFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/NFbyTracingSet;#LocalLoad(Ljava/lang/Object;,0)#13
synoptic.invariants.fsmcheck.NFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/NFbyTracingSet;#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,aSeen)#14
synoptic.invariants.fsmcheck.NFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/NFbyTracingSet;#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,aSeen)#15
synoptic.invariants.fsmcheck.NFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/NFbyTracingSet;#LocalLoad(Ljava/lang/Object;,1)#16
synoptic.invariants.fsmcheck.NFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/NFbyTracingSet;#LocalLoad(Ljava/lang/Object;,0)#17
synoptic.invariants.fsmcheck.NFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/NFbyTracingSet;#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,bSeenAfter)#18
synoptic.invariants.fsmcheck.NFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/NFbyTracingSet;#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,bSeenAfter)#19
synoptic.invariants.fsmcheck.NFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/NFbyTracingSet;#LocalLoad(Ljava/lang/Object;,1)#20
synoptic.invariants.fsmcheck.NFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/NFbyTracingSet;#Return(Ljava/lang/Object;)#21
synoptic.invariants.fsmcheck.NFbyTracingSet.copy()Ljava/lang/Object;#Return(Ljava/lang/Object;)#2
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Ljava/lang/Object;)V#CheckCast(Lsynoptic/model/interfaces/INode;)#2
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Ljava/lang/Object;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,setInitial,(Lsynoptic/model/interfaces/INode;)V)#3
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,1)#0
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,getEType,()Lsynoptic/model/EventType;)#1
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalStore(Ljava/lang/Object;,2)#2
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#New(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,0)#3
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Dup(1,0)#4
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,1)#6
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Constant(L;,null)#7
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Constant(I,1)#8
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Invoke(SPECIAL,Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,<init>,(Lsynoptic/invariants/fsmcheck/TracingStateSet;Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;I)V)#9
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalStore(Ljava/lang/Object;,3)#10
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#11
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#12
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#13
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Constant(L;,null)#14
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Dup(1,1)#15
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,bSeenAfter)#16
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Dup(1,1)#17
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,aSeen)#18
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,aNotSeen)#19
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#20
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,a)#21
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,2)#22
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/model/EventType;,equals,(Ljava/lang/Object;)Z)#23
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Constant(I,0)#24
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#ConditionalBranch(I,eq,30)#25
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#30
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,3)#31
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,aNotSeen)#32
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Return(V)#33
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Ljava/lang/Object;)V#Return(V)#4
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Ljava/lang/Object;)V#CheckCast(Lsynoptic/model/interfaces/INode;)#2
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Ljava/lang/Object;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,transition,(Lsynoptic/model/interfaces/INode;)V)#3
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,1)#0
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,getEType,()Lsynoptic/model/EventType;)#1
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalStore(Ljava/lang/Object;,2)#2
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#3
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,b)#4
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,2)#5
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/model/EventType;,equals,(Ljava/lang/Object;)Z)#6
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Constant(I,0)#7
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#ConditionalBranch(I,eq,20)#8
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#20
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,a)#21
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,2)#22
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/model/EventType;,equals,(Ljava/lang/Object;)Z)#23
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Constant(I,0)#24
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#ConditionalBranch(I,eq,37)#25
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#26
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#27
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#28
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,aNotSeen)#29
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#30
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,aSeen)#31
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,preferShorter,(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#32
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,aSeen)#33
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#34
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Constant(L;,null)#35
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,aNotSeen)#36
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#37
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#38
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,1)#39
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#40
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,aNotSeen)#41
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,extend,(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#42
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,aNotSeen)#43
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#44
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#45
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,1)#46
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#47
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,aSeen)#48
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,extend,(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#49
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,aSeen)#50
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#51
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#52
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,1)#53
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#54
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,bSeenAfter)#55
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,extend,(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#56
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,bSeenAfter)#57
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Return(V)#58
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Ljava/lang/Object;)V#Return(V)#4
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Ljava/lang/Object;)Z#CheckCast(Lsynoptic/invariants/fsmcheck/TracingStateSet;)#2
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,isSubset,(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z)#3
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#LocalLoad(Ljava/lang/Object;,1)#0
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#CheckCast(Lsynoptic/invariants/fsmcheck/NFbyTracingSet;)#1
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#LocalStore(Ljava/lang/Object;,2)#2
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#LocalLoad(Ljava/lang/Object;,2)#3
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,aNotSeen)#4
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Constant(L;,null)#5
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#ConditionalBranch(Ljava/lang/Object;,ne,13)#6
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#LocalLoad(Ljava/lang/Object;,0)#7
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,aNotSeen)#8
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Constant(L;,null)#9
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#ConditionalBranch(Ljava/lang/Object;,eq,13)#10
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#LocalLoad(Ljava/lang/Object;,2)#13
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,aSeen)#14
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Constant(L;,null)#15
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#ConditionalBranch(Ljava/lang/Object;,ne,23)#16
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#LocalLoad(Ljava/lang/Object;,0)#17
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,aSeen)#18
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Constant(L;,null)#19
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#ConditionalBranch(Ljava/lang/Object;,eq,23)#20
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Constant(I,0)#21
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Return(I)#22
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Ljava/lang/Object;)Z#Return(I)#4
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Ljava/lang/Object;)V#CheckCast(Lsynoptic/invariants/fsmcheck/TracingStateSet;)#2
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Ljava/lang/Object;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,mergeWith,(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V)#3
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,1)#0
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#CheckCast(Lsynoptic/invariants/fsmcheck/NFbyTracingSet;)#1
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalStore(Ljava/lang/Object;,2)#2
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,0)#3
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,0)#4
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,aNotSeen)#6
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,2)#7
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,aNotSeen)#8
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,preferShorter,(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#9
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,aNotSeen)#10
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,0)#11
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,0)#12
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,0)#13
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,aSeen)#14
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,2)#15
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,aSeen)#16
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,preferShorter,(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#17
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,aSeen)#18
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,0)#19
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,0)#20
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,0)#21
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,bSeenAfter)#22
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,2)#23
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,bSeenAfter)#24
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,preferShorter,(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#25
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,bSeenAfter)#26
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Return(V)#27
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Ljava/lang/Object;)V#Return(V)#4
synoptic.invariants.fsmcheck.NFbyTracingSet.failpath()Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.fsmcheck.NFbyTracingSet.failpath()Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,bSeenAfter)#1
synoptic.invariants.fsmcheck.NFbyTracingSet.failpath()Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#Return(Ljava/lang/Object;)#2
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Constant(I,0)#11
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Return(I)#12
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#9
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#10
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#11
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,aSeen)#12
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#13
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,bSeenAfter)#14
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,preferShorter,(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#15
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,bSeenAfter)#16
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#17
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Constant(L;,null)#18
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,aSeen)#19
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#LocalLoad(Ljava/lang/Object;,2)#23
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,bSeenAfter)#24
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Constant(L;,null)#25
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#ConditionalBranch(Ljava/lang/Object;,ne,33)#26
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#LocalLoad(Ljava/lang/Object;,0)#27
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,bSeenAfter)#28
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Constant(L;,null)#29
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#ConditionalBranch(Ljava/lang/Object;,eq,33)#30
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Constant(I,1)#33
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Return(I)#34
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Constant(I,0)#31
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Return(I)#32
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Constant(I,0)#0
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalStore(I,2)#1
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Constant(I,0)#2
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalStore(I,3)#3
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Goto(44)#4
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalLoad(I,3)#44
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#45
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,size,()I)#46
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#ConditionalBranch(I,lt,5)#47
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#5
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalLoad(I,3)#6
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#7
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#CheckCast(Lsynoptic/model/interfaces/INode;)#8
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,4)#9
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,4)#10
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,getEType,()Lsynoptic/model/EventType;)#11
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#12
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/NeverFollowedInvariant;,first)#13
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/model/EventType;,equals,(Ljava/lang/Object;)Z)#14
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Constant(I,0)#15
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#ConditionalBranch(I,eq,23)#16
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,4)#23
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,getEType,()Lsynoptic/model/EventType;)#24
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#25
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/NeverFollowedInvariant;,second)#26
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/model/EventType;,equals,(Ljava/lang/Object;)Z)#27
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Constant(I,0)#28
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#ConditionalBranch(I,eq,40)#29
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalLoad(I,3)#40
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Constant(I,1)#41
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#BinaryOp(I,add)#42
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalStore(I,3)#43
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalLoad(I,2)#17
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Constant(I,0)#18
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#ConditionalBranch(I,ne,23)#19
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Constant(I,1)#20
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalStore(I,2)#21
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Goto(40)#22
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalLoad(I,2)#30
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Constant(I,0)#31
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#ConditionalBranch(I,eq,40)#32
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#33
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Constant(I,0)#34
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalLoad(I,3)#35
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Constant(I,1)#36
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#BinaryOp(I,add)#37
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,subList,(II)Ljava/util/List;)#38
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Return(Ljava/lang/Object;)#39
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,5)#139
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Return(Ljava/lang/Object;)#140
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Constant(L;,null)#91
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Return(Ljava/lang/Object;)#92
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#New(Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,0)#15
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Dup(1,0)#16
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,0)#17
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Invoke(SPECIAL,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,<init>,(Lsynoptic/invariants/BinaryInvariant;)V)#18
synoptic.invariants.fsmcheck.AFbyTracingSet.<init>(Lsynoptic/invariants/BinaryInvariant;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.fsmcheck.AFbyTracingSet.<init>(Lsynoptic/invariants/BinaryInvariant;)V#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.invariants.fsmcheck.AFbyTracingSet.<init>(Lsynoptic/invariants/BinaryInvariant;)V#Invoke(VIRTUAL,Lsynoptic/invariants/BinaryInvariant;,getFirst,()Lsynoptic/model/EventType;)#2
synoptic.invariants.fsmcheck.AFbyTracingSet.<init>(Lsynoptic/invariants/BinaryInvariant;)V#LocalLoad(Ljava/lang/Object;,1)#3
synoptic.invariants.fsmcheck.AFbyTracingSet.<init>(Lsynoptic/invariants/BinaryInvariant;)V#Invoke(VIRTUAL,Lsynoptic/invariants/BinaryInvariant;,getSecond,()Lsynoptic/model/EventType;)#4
synoptic.invariants.fsmcheck.AFbyTracingSet.<init>(Lsynoptic/invariants/BinaryInvariant;)V#Invoke(SPECIAL,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,<init>,(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V)#5
synoptic.invariants.fsmcheck.AFbyTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.fsmcheck.AFbyTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#Invoke(SPECIAL,Lsynoptic/invariants/fsmcheck/TracingStateSet;,<init>,()V)#1
synoptic.invariants.fsmcheck.AFbyTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.invariants.fsmcheck.AFbyTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#LocalLoad(Ljava/lang/Object;,1)#3
synoptic.invariants.fsmcheck.AFbyTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#Put(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,a)#4
synoptic.invariants.fsmcheck.AFbyTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.invariants.fsmcheck.AFbyTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#LocalLoad(Ljava/lang/Object;,2)#6
synoptic.invariants.fsmcheck.AFbyTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#Put(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,b)#7
synoptic.invariants.fsmcheck.AFbyTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#Return(V)#8
synoptic.invariants.fsmcheck.AFbyTracingSet.<init>(Lsynoptic/invariants/BinaryInvariant;)V#Return(V)#6
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalStore(Ljava/lang/Object;,2)#19
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Goto(42)#20
synoptic.invariants.fsmcheck.AFbyTracingSet.copy()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.fsmcheck.AFbyTracingSet.copy()Ljava/lang/Object;#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,copy,()Lsynoptic/invariants/fsmcheck/AFbyTracingSet;)#1
synoptic.invariants.fsmcheck.AFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/AFbyTracingSet;#New(Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,0)#0
synoptic.invariants.fsmcheck.AFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/AFbyTracingSet;#Dup(1,0)#1
synoptic.invariants.fsmcheck.AFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/AFbyTracingSet;#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.invariants.fsmcheck.AFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/AFbyTracingSet;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,a)#3
synoptic.invariants.fsmcheck.AFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/AFbyTracingSet;#LocalLoad(Ljava/lang/Object;,0)#4
synoptic.invariants.fsmcheck.AFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/AFbyTracingSet;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,b)#5
synoptic.invariants.fsmcheck.AFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/AFbyTracingSet;#Invoke(SPECIAL,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,<init>,(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V)#6
synoptic.invariants.fsmcheck.AFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/AFbyTracingSet;#LocalStore(Ljava/lang/Object;,1)#7
synoptic.invariants.fsmcheck.AFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/AFbyTracingSet;#LocalLoad(Ljava/lang/Object;,1)#8
synoptic.invariants.fsmcheck.AFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/AFbyTracingSet;#LocalLoad(Ljava/lang/Object;,0)#9
synoptic.invariants.fsmcheck.AFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/AFbyTracingSet;#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,wasA)#10
synoptic.invariants.fsmcheck.AFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/AFbyTracingSet;#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,wasA)#11
synoptic.invariants.fsmcheck.AFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/AFbyTracingSet;#LocalLoad(Ljava/lang/Object;,1)#12
synoptic.invariants.fsmcheck.AFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/AFbyTracingSet;#LocalLoad(Ljava/lang/Object;,0)#13
synoptic.invariants.fsmcheck.AFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/AFbyTracingSet;#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,wasB)#14
synoptic.invariants.fsmcheck.AFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/AFbyTracingSet;#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,wasB)#15
synoptic.invariants.fsmcheck.AFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/AFbyTracingSet;#LocalLoad(Ljava/lang/Object;,1)#16
synoptic.invariants.fsmcheck.AFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/AFbyTracingSet;#Return(Ljava/lang/Object;)#17
synoptic.invariants.fsmcheck.AFbyTracingSet.copy()Ljava/lang/Object;#Return(Ljava/lang/Object;)#2
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Ljava/lang/Object;)V#CheckCast(Lsynoptic/model/interfaces/INode;)#2
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Ljava/lang/Object;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,setInitial,(Lsynoptic/model/interfaces/INode;)V)#3
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,1)#0
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,getEType,()Lsynoptic/model/EventType;)#1
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalStore(Ljava/lang/Object;,2)#2
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#New(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,0)#3
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Dup(1,0)#4
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,1)#6
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Constant(L;,null)#7
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Constant(I,1)#8
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Invoke(SPECIAL,Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,<init>,(Lsynoptic/invariants/fsmcheck/TracingStateSet;Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;I)V)#9
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalStore(Ljava/lang/Object;,3)#10
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,2)#11
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#12
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,a)#13
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/model/EventType;,equals,(Ljava/lang/Object;)Z)#14
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Constant(I,0)#15
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#ConditionalBranch(I,eq,24)#16
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#24
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,3)#25
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,wasB)#26
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#27
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Constant(L;,null)#28
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,wasA)#29
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Return(V)#30
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Ljava/lang/Object;)V#Return(V)#4
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Ljava/lang/Object;)V#CheckCast(Lsynoptic/model/interfaces/INode;)#2
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Ljava/lang/Object;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,transition,(Lsynoptic/model/interfaces/INode;)V)#3
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,1)#0
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,getEType,()Lsynoptic/model/EventType;)#1
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalStore(Ljava/lang/Object;,2)#2
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#3
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,a)#4
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,2)#5
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/model/EventType;,equals,(Ljava/lang/Object;)Z)#6
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Constant(I,0)#7
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#ConditionalBranch(I,eq,21)#8
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#21
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,b)#22
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,2)#23
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/model/EventType;,equals,(Ljava/lang/Object;)Z)#24
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Constant(I,0)#25
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#ConditionalBranch(I,eq,38)#26
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#38
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#39
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,1)#40
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#41
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,wasA)#42
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,extend,(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#43
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,wasA)#44
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#45
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#46
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,1)#47
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#48
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,wasB)#49
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,extend,(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#50
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,wasB)#51
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Return(V)#52
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Ljava/lang/Object;)V#Return(V)#4
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Ljava/lang/Object;)Z#CheckCast(Lsynoptic/invariants/fsmcheck/TracingStateSet;)#2
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,isSubset,(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z)#3
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#LocalLoad(Ljava/lang/Object;,1)#0
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#CheckCast(Lsynoptic/invariants/fsmcheck/AFbyTracingSet;)#1
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#LocalStore(Ljava/lang/Object;,2)#2
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#LocalLoad(Ljava/lang/Object;,2)#3
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,wasA)#4
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Constant(L;,null)#5
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#ConditionalBranch(Ljava/lang/Object;,ne,13)#6
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#LocalLoad(Ljava/lang/Object;,0)#7
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,wasA)#8
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Constant(L;,null)#9
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#ConditionalBranch(Ljava/lang/Object;,eq,13)#10
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#LocalLoad(Ljava/lang/Object;,2)#13
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,wasB)#14
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Constant(L;,null)#15
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#ConditionalBranch(Ljava/lang/Object;,ne,23)#16
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#LocalLoad(Ljava/lang/Object;,0)#17
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,wasB)#18
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Constant(L;,null)#19
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#ConditionalBranch(Ljava/lang/Object;,eq,23)#20
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Constant(I,0)#21
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Return(I)#22
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Ljava/lang/Object;)Z#Return(I)#4
synoptic.invariants.fsmcheck.AFbyTracingSet.mergeWith(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.fsmcheck.AFbyTracingSet.mergeWith(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.invariants.fsmcheck.AFbyTracingSet.mergeWith(Ljava/lang/Object;)V#CheckCast(Lsynoptic/invariants/fsmcheck/TracingStateSet;)#2
synoptic.invariants.fsmcheck.AFbyTracingSet.mergeWith(Ljava/lang/Object;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,mergeWith,(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V)#3
synoptic.invariants.fsmcheck.AFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,1)#0
synoptic.invariants.fsmcheck.AFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#CheckCast(Lsynoptic/invariants/fsmcheck/AFbyTracingSet;)#1
synoptic.invariants.fsmcheck.AFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalStore(Ljava/lang/Object;,2)#2
synoptic.invariants.fsmcheck.AFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,0)#3
synoptic.invariants.fsmcheck.AFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,0)#4
synoptic.invariants.fsmcheck.AFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.invariants.fsmcheck.AFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,wasA)#6
synoptic.invariants.fsmcheck.AFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,2)#7
synoptic.invariants.fsmcheck.AFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,wasA)#8
synoptic.invariants.fsmcheck.AFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,preferShorter,(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#9
synoptic.invariants.fsmcheck.AFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,wasA)#10
synoptic.invariants.fsmcheck.AFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,0)#11
synoptic.invariants.fsmcheck.AFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,0)#12
synoptic.invariants.fsmcheck.AFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,0)#13
synoptic.invariants.fsmcheck.AFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,wasB)#14
synoptic.invariants.fsmcheck.AFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#LocalLoad(Ljava/lang/Object;,2)#15
synoptic.invariants.fsmcheck.AFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,wasB)#16
synoptic.invariants.fsmcheck.AFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,preferShorter,(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#17
synoptic.invariants.fsmcheck.AFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,wasB)#18
synoptic.invariants.fsmcheck.AFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Return(V)#19
synoptic.invariants.fsmcheck.AFbyTracingSet.mergeWith(Ljava/lang/Object;)V#Return(V)#4
synoptic.invariants.fsmcheck.AFbyTracingSet.failpath()Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.fsmcheck.AFbyTracingSet.failpath()Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,wasA)#1
synoptic.invariants.fsmcheck.AFbyTracingSet.failpath()Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#Return(Ljava/lang/Object;)#2
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Constant(I,1)#23
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Return(I)#24
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#9
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#10
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#11
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,wasB)#12
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#13
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,wasA)#14
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,preferShorter,(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#15
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,wasA)#16
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#17
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Constant(L;,null)#18
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,wasB)#19
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Goto(38)#20
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Constant(I,0)#11
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#Return(I)#12
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#27
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#28
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#29
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,wasA)#30
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#31
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,wasB)#32
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,preferShorter,(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#33
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,wasB)#34
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#LocalLoad(Ljava/lang/Object;,0)#35
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Constant(L;,null)#36
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,wasA)#37
synoptic.invariants.AlwaysFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#0
synoptic.invariants.AlwaysFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Return(Ljava/lang/Object;)#1
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Goto(73)#39
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#73
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,size,()I)#74
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Constant(I,0)#75
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#ConditionalBranch(I,ne,95)#76
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#95
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#New(Lsynoptic/invariants/TemporalInvariantSet$1;,0)#96
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Dup(1,0)#97
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#98
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Invoke(SPECIAL,Lsynoptic/invariants/TemporalInvariantSet$1;,<init>,(Lsynoptic/invariants/TemporalInvariantSet;)V)#99
synoptic.invariants.TemporalInvariantSet$1.<init>(Lsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.TemporalInvariantSet$1.<init>(Lsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.invariants.TemporalInvariantSet$1.<init>(Lsynoptic/invariants/TemporalInvariantSet;)V#Put(Lsynoptic/invariants/TemporalInvariantSet;,NONSTATIC,Lsynoptic/invariants/TemporalInvariantSet$1;,this$0)#2
synoptic.invariants.TemporalInvariantSet$1.<init>(Lsynoptic/invariants/TemporalInvariantSet;)V#LocalLoad(Ljava/lang/Object;,0)#3
synoptic.invariants.TemporalInvariantSet$1.<init>(Lsynoptic/invariants/TemporalInvariantSet;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#4
synoptic.invariants.TemporalInvariantSet$1.<init>(Lsynoptic/invariants/TemporalInvariantSet;)V#Return(V)#5
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Invoke(STATIC,Ljava/util/Collections;,sort,(Ljava/util/List;Ljava/util/Comparator;)V)#100
synoptic.invariants.TemporalInvariantSet$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.TemporalInvariantSet$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.invariants.TemporalInvariantSet$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#CheckCast(Lsynoptic/invariants/CExamplePath;)#2
synoptic.invariants.TemporalInvariantSet$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,2)#3
synoptic.invariants.TemporalInvariantSet$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#CheckCast(Lsynoptic/invariants/CExamplePath;)#4
synoptic.invariants.TemporalInvariantSet$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#Invoke(VIRTUAL,Lsynoptic/invariants/TemporalInvariantSet$1;,compare,(Lsynoptic/invariants/CExamplePath;Lsynoptic/invariants/CExamplePath;)I)#5
synoptic.invariants.TemporalInvariantSet$1.compare(Lsynoptic/invariants/CExamplePath;Lsynoptic/invariants/CExamplePath;)I#LocalLoad(Ljava/lang/Object;,1)#0
synoptic.invariants.TemporalInvariantSet$1.compare(Lsynoptic/invariants/CExamplePath;Lsynoptic/invariants/CExamplePath;)I#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/invariants/CExamplePath;,path)#1
synoptic.invariants.TemporalInvariantSet$1.compare(Lsynoptic/invariants/CExamplePath;Lsynoptic/invariants/CExamplePath;)I#Invoke(INTERFACE,Ljava/util/List;,size,()I)#2
synoptic.invariants.TemporalInvariantSet$1.compare(Lsynoptic/invariants/CExamplePath;Lsynoptic/invariants/CExamplePath;)I#Invoke(STATIC,Ljava/lang/Integer;,valueOf,(I)Ljava/lang/Integer;)#3
synoptic.invariants.TemporalInvariantSet$1.compare(Lsynoptic/invariants/CExamplePath;Lsynoptic/invariants/CExamplePath;)I#LocalLoad(Ljava/lang/Object;,2)#4
synoptic.invariants.TemporalInvariantSet$1.compare(Lsynoptic/invariants/CExamplePath;Lsynoptic/invariants/CExamplePath;)I#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/invariants/CExamplePath;,path)#5
synoptic.invariants.TemporalInvariantSet$1.compare(Lsynoptic/invariants/CExamplePath;Lsynoptic/invariants/CExamplePath;)I#Invoke(INTERFACE,Ljava/util/List;,size,()I)#6
synoptic.invariants.TemporalInvariantSet$1.compare(Lsynoptic/invariants/CExamplePath;Lsynoptic/invariants/CExamplePath;)I#Invoke(STATIC,Ljava/lang/Integer;,valueOf,(I)Ljava/lang/Integer;)#7
synoptic.invariants.TemporalInvariantSet$1.compare(Lsynoptic/invariants/CExamplePath;Lsynoptic/invariants/CExamplePath;)I#Invoke(VIRTUAL,Ljava/lang/Integer;,compareTo,(Ljava/lang/Integer;)I)#8
synoptic.invariants.TemporalInvariantSet$1.compare(Lsynoptic/invariants/CExamplePath;Lsynoptic/invariants/CExamplePath;)I#Return(I)#9
synoptic.invariants.TemporalInvariantSet$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#Return(I)#6
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#101
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,9)#102
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#103
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/benchmarks/TimedTask;,stop,()V)#104
synoptic.benchmarks.TimedTask.stop()V#Get(Z,STATIC,Lsynoptic/benchmarks/TimedTask;,$assertionsDisabled)#0
synoptic.benchmarks.TimedTask.stop()V#Constant(I,0)#1
synoptic.benchmarks.TimedTask.stop()V#ConditionalBranch(I,ne,11)#2
synoptic.benchmarks.TimedTask.stop()V#LocalLoad(Ljava/lang/Object;,0)#11
synoptic.benchmarks.TimedTask.stop()V#Invoke(STATIC,Ljava/lang/System;,currentTimeMillis,()J)#12
synoptic.benchmarks.TimedTask.stop()V#Invoke(STATIC,Ljava/lang/Long;,valueOf,(J)Ljava/lang/Long;)#13
synoptic.benchmarks.TimedTask.stop()V#Put(Ljava/lang/Long;,NONSTATIC,Lsynoptic/benchmarks/TimedTask;,timeEnd)#14
synoptic.benchmarks.TimedTask.stop()V#LocalLoad(Ljava/lang/Object;,0)#15
synoptic.benchmarks.TimedTask.stop()V#Get(Lsynoptic/benchmarks/PerformanceMetrics;,NONSTATIC,Lsynoptic/benchmarks/TimedTask;,recordAt)#16
synoptic.benchmarks.TimedTask.stop()V#Constant(L;,null)#17
synoptic.benchmarks.TimedTask.stop()V#ConditionalBranch(Ljava/lang/Object;,eq,23)#18
synoptic.benchmarks.TimedTask.stop()V#LocalLoad(Ljava/lang/Object;,0)#19
synoptic.benchmarks.TimedTask.stop()V#Get(Lsynoptic/benchmarks/PerformanceMetrics;,NONSTATIC,Lsynoptic/benchmarks/TimedTask;,recordAt)#20
synoptic.benchmarks.TimedTask.stop()V#LocalLoad(Ljava/lang/Object;,0)#21
synoptic.benchmarks.TimedTask.stop()V#Invoke(VIRTUAL,Lsynoptic/benchmarks/PerformanceMetrics;,record,(Lsynoptic/benchmarks/TimedTask;)V)#22
synoptic.benchmarks.PerformanceMetrics.record(Lsynoptic/benchmarks/TimedTask;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.benchmarks.PerformanceMetrics.record(Lsynoptic/benchmarks/TimedTask;)V#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.benchmarks.PerformanceMetrics.record(Lsynoptic/benchmarks/TimedTask;)V#Invoke(VIRTUAL,Lsynoptic/benchmarks/TimedTask;,getTask,()Ljava/lang/String;)#2
synoptic.benchmarks.PerformanceMetrics.record(Lsynoptic/benchmarks/TimedTask;)V#LocalLoad(Ljava/lang/Object;,1)#3
synoptic.benchmarks.PerformanceMetrics.record(Lsynoptic/benchmarks/TimedTask;)V#Invoke(VIRTUAL,Lsynoptic/benchmarks/TimedTask;,getTime,()Ljava/lang/Long;)#4
synoptic.benchmarks.TimedTask.getTime()Ljava/lang/Long;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.benchmarks.TimedTask.getTime()Ljava/lang/Long;#Get(Ljava/lang/Long;,NONSTATIC,Lsynoptic/benchmarks/TimedTask;,timeEnd)#1
synoptic.benchmarks.TimedTask.getTime()Ljava/lang/Long;#Constant(L;,null)#2
synoptic.benchmarks.TimedTask.getTime()Ljava/lang/Long;#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
synoptic.benchmarks.TimedTask.getTime()Ljava/lang/Long;#LocalLoad(Ljava/lang/Object;,0)#6
synoptic.benchmarks.TimedTask.getTime()Ljava/lang/Long;#Get(Ljava/lang/Long;,NONSTATIC,Lsynoptic/benchmarks/TimedTask;,timeEnd)#7
synoptic.benchmarks.TimedTask.getTime()Ljava/lang/Long;#Invoke(VIRTUAL,Ljava/lang/Long;,longValue,()J)#8
synoptic.benchmarks.TimedTask.getTime()Ljava/lang/Long;#LocalLoad(Ljava/lang/Object;,0)#9
synoptic.benchmarks.TimedTask.getTime()Ljava/lang/Long;#Get(J,NONSTATIC,Lsynoptic/benchmarks/TimedTask;,timeStart)#10
synoptic.benchmarks.TimedTask.getTime()Ljava/lang/Long;#BinaryOp(J,sub)#11
synoptic.benchmarks.TimedTask.getTime()Ljava/lang/Long;#Invoke(STATIC,Ljava/lang/Long;,valueOf,(J)Ljava/lang/Long;)#12
synoptic.benchmarks.TimedTask.getTime()Ljava/lang/Long;#Return(Ljava/lang/Object;)#13
synoptic.benchmarks.PerformanceMetrics.record(Lsynoptic/benchmarks/TimedTask;)V#Invoke(VIRTUAL,Ljava/lang/Long;,longValue,()J)#5
synoptic.benchmarks.PerformanceMetrics.record(Lsynoptic/benchmarks/TimedTask;)V#Invoke(VIRTUAL,Lsynoptic/benchmarks/PerformanceMetrics;,record,(Ljava/lang/String;J)V)#6
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Invoke(SPECIAL,Lsynoptic/benchmarks/PerformanceMetrics;,getAccumulativity,(Ljava/lang/String;)Z)#2
synoptic.benchmarks.PerformanceMetrics.getAccumulativity(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.benchmarks.PerformanceMetrics.getAccumulativity(Ljava/lang/String;)Z#Get(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/benchmarks/PerformanceMetrics;,accumulativity)#1
synoptic.benchmarks.PerformanceMetrics.getAccumulativity(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#2
synoptic.benchmarks.PerformanceMetrics.getAccumulativity(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,containsKey,(Ljava/lang/Object;)Z)#3
synoptic.benchmarks.PerformanceMetrics.getAccumulativity(Ljava/lang/String;)Z#Constant(I,0)#4
synoptic.benchmarks.PerformanceMetrics.getAccumulativity(Ljava/lang/String;)Z#ConditionalBranch(I,ne,8)#5
synoptic.benchmarks.PerformanceMetrics.getAccumulativity(Ljava/lang/String;)Z#Constant(I,0)#6
synoptic.benchmarks.PerformanceMetrics.getAccumulativity(Ljava/lang/String;)Z#Return(I)#7
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Constant(I,0)#3
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#ConditionalBranch(I,ne,21)#4
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Get(Lsynoptic/main/SynopticOptions;,STATIC,Lsynoptic/main/Main;,options)#5
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,doBenchmarking)#6
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Constant(I,0)#7
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#ConditionalBranch(I,eq,21)#8
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#LocalLoad(Ljava/lang/Object;,0)#21
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Get(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/benchmarks/PerformanceMetrics;,values)#22
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#LocalLoad(Ljava/lang/Object;,1)#23
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,containsKey,(Ljava/lang/Object;)Z)#24
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Constant(I,0)#25
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#ConditionalBranch(I,ne,34)#26
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#LocalLoad(Ljava/lang/Object;,0)#27
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Get(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/benchmarks/PerformanceMetrics;,values)#28
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#LocalLoad(Ljava/lang/Object;,1)#29
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Constant(J,0)#30
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Invoke(STATIC,Ljava/lang/Long;,valueOf,(J)Ljava/lang/Long;)#31
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#32
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Pop(1)#33
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#LocalLoad(Ljava/lang/Object;,0)#34
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Get(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/benchmarks/PerformanceMetrics;,values)#35
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#LocalLoad(Ljava/lang/Object;,1)#36
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#LocalLoad(Ljava/lang/Object;,0)#37
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Get(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/benchmarks/PerformanceMetrics;,values)#38
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#LocalLoad(Ljava/lang/Object;,1)#39
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#40
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#CheckCast(Ljava/lang/Long;)#41
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Invoke(VIRTUAL,Ljava/lang/Long;,longValue,()J)#42
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#LocalLoad(J,2)#43
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#BinaryOp(J,add)#44
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Invoke(STATIC,Ljava/lang/Long;,valueOf,(J)Ljava/lang/Long;)#45
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#46
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Pop(1)#47
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#LocalLoad(Ljava/lang/Object;,0)#48
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Get(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/benchmarks/PerformanceMetrics;,numberOfMesurements)#49
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#LocalLoad(Ljava/lang/Object;,1)#50
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,containsKey,(Ljava/lang/Object;)Z)#51
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Constant(I,0)#52
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#ConditionalBranch(I,ne,61)#53
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#LocalLoad(Ljava/lang/Object;,0)#54
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Get(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/benchmarks/PerformanceMetrics;,numberOfMesurements)#55
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#LocalLoad(Ljava/lang/Object;,1)#56
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Constant(J,0)#57
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Invoke(STATIC,Ljava/lang/Long;,valueOf,(J)Ljava/lang/Long;)#58
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#59
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Pop(1)#60
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#LocalLoad(Ljava/lang/Object;,0)#61
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Get(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/benchmarks/PerformanceMetrics;,numberOfMesurements)#62
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#LocalLoad(Ljava/lang/Object;,1)#63
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#LocalLoad(Ljava/lang/Object;,0)#64
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Get(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/benchmarks/PerformanceMetrics;,numberOfMesurements)#65
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#LocalLoad(Ljava/lang/Object;,1)#66
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#67
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#CheckCast(Ljava/lang/Long;)#68
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Invoke(VIRTUAL,Ljava/lang/Long;,longValue,()J)#69
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Constant(J,1)#70
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#BinaryOp(J,add)#71
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Invoke(STATIC,Ljava/lang/Long;,valueOf,(J)Ljava/lang/Long;)#72
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#73
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Pop(1)#74
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Return(V)#75
synoptic.benchmarks.PerformanceMetrics.record(Lsynoptic/benchmarks/TimedTask;)V#LocalLoad(Ljava/lang/Object;,0)#7
synoptic.benchmarks.PerformanceMetrics.record(Lsynoptic/benchmarks/TimedTask;)V#Get(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/benchmarks/PerformanceMetrics;,accumulativity)#8
synoptic.benchmarks.PerformanceMetrics.record(Lsynoptic/benchmarks/TimedTask;)V#LocalLoad(Ljava/lang/Object;,1)#9
synoptic.benchmarks.PerformanceMetrics.record(Lsynoptic/benchmarks/TimedTask;)V#Invoke(VIRTUAL,Lsynoptic/benchmarks/TimedTask;,getTask,()Ljava/lang/String;)#10
synoptic.benchmarks.PerformanceMetrics.record(Lsynoptic/benchmarks/TimedTask;)V#LocalLoad(Ljava/lang/Object;,1)#11
synoptic.benchmarks.PerformanceMetrics.record(Lsynoptic/benchmarks/TimedTask;)V#Invoke(VIRTUAL,Lsynoptic/benchmarks/TimedTask;,getAccumulativity,()Z)#12
synoptic.benchmarks.TimedTask.getAccumulativity()Z#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.benchmarks.TimedTask.getAccumulativity()Z#Get(Z,NONSTATIC,Lsynoptic/benchmarks/TimedTask;,accumulativity)#1
synoptic.benchmarks.TimedTask.getAccumulativity()Z#Return(I)#2
synoptic.benchmarks.PerformanceMetrics.record(Lsynoptic/benchmarks/TimedTask;)V#Invoke(STATIC,Ljava/lang/Boolean;,valueOf,(Z)Ljava/lang/Boolean;)#13
synoptic.benchmarks.PerformanceMetrics.record(Lsynoptic/benchmarks/TimedTask;)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#14
synoptic.benchmarks.PerformanceMetrics.record(Lsynoptic/benchmarks/TimedTask;)V#Pop(1)#15
synoptic.benchmarks.PerformanceMetrics.record(Lsynoptic/benchmarks/TimedTask;)V#LocalLoad(Ljava/lang/Object;,1)#16
synoptic.benchmarks.PerformanceMetrics.record(Lsynoptic/benchmarks/TimedTask;)V#Invoke(VIRTUAL,Lsynoptic/benchmarks/TimedTask;,getParent,()Lsynoptic/benchmarks/TimedTask;)#17
synoptic.benchmarks.TimedTask.getParent()Lsynoptic/benchmarks/TimedTask;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.benchmarks.TimedTask.getParent()Lsynoptic/benchmarks/TimedTask;#Get(Lsynoptic/benchmarks/TimedTask;,NONSTATIC,Lsynoptic/benchmarks/TimedTask;,parent)#1
synoptic.benchmarks.TimedTask.getParent()Lsynoptic/benchmarks/TimedTask;#Return(Ljava/lang/Object;)#2
synoptic.benchmarks.PerformanceMetrics.record(Lsynoptic/benchmarks/TimedTask;)V#Put(Lsynoptic/benchmarks/TimedTask;,STATIC,Lsynoptic/benchmarks/PerformanceMetrics;,previousTask)#18
synoptic.benchmarks.PerformanceMetrics.record(Lsynoptic/benchmarks/TimedTask;)V#Return(V)#19
synoptic.benchmarks.TimedTask.stop()V#Return(V)#23
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Get(Lsynoptic/main/SynopticOptions;,STATIC,Lsynoptic/main/Main;,options)#105
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,doBenchmarking)#106
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Constant(I,0)#107
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#ConditionalBranch(I,eq,119)#108
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,9)#119
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Return(Ljava/lang/Object;)#120
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalStore(Ljava/lang/Object;,6)#39
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalLoad(Ljava/lang/Object;,6)#40
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Constant(L;,null)#41
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#ConditionalBranch(Ljava/lang/Object;,eq,47)#42
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalLoad(Ljava/lang/Object;,6)#43
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#44
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Constant(I,0)#45
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#ConditionalBranch(I,ne,51)#46
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalLoad(Ljava/lang/Object;,4)#51
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Invoke(INTERFACE,Ljava/util/Set;,clear,()V)#52
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalLoad(Ljava/lang/Object;,6)#53
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#54
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalStore(Ljava/lang/Object;,8)#55
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Goto(66)#56
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalLoad(Ljava/lang/Object;,8)#66
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#67
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Constant(I,0)#68
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#ConditionalBranch(I,ne,57)#69
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalLoad(Ljava/lang/Object;,8)#57
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#58
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#CheckCast(Lsynoptic/invariants/CExamplePath;)#59
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalStore(Ljava/lang/Object;,7)#60
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalLoad(Ljava/lang/Object;,4)#61
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalLoad(Ljava/lang/Object;,7)#62
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Get(Lsynoptic/invariants/ITemporalInvariant;,NONSTATIC,Lsynoptic/invariants/CExamplePath;,invariant)#63
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#64
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Pop(1)#65
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalLoad(Ljava/lang/Object;,5)#70
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Invoke(INTERFACE,Ljava/util/Set;,clear,()V)#71
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalLoad(Ljava/lang/Object;,5)#72
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalLoad(Ljava/lang/Object;,0)#73
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Invoke(VIRTUAL,Lsynoptic/model/PartitionGraph;,getInvariants,()Lsynoptic/invariants/TemporalInvariantSet;)#74
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Invoke(VIRTUAL,Lsynoptic/invariants/TemporalInvariantSet;,getSet,()Ljava/util/Set;)#75
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Invoke(INTERFACE,Ljava/util/Set;,addAll,(Ljava/util/Collection;)Z)#76
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Pop(1)#77
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalLoad(Ljava/lang/Object;,5)#78
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalLoad(Ljava/lang/Object;,4)#79
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Invoke(INTERFACE,Ljava/util/Set;,removeAll,(Ljava/util/Collection;)Z)#80
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Pop(1)#81
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Get(Ljava/util/logging/Logger;,STATIC,Lsynoptic/algorithms/bisim/Bisimulation;,logger)#82
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#New(Ljava/lang/StringBuilder;,0)#83
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Dup(1,0)#84
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Constant(Ljava/lang/String;,"New graph size: ")#85
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#86
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalLoad(Ljava/lang/Object;,0)#87
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Invoke(VIRTUAL,Lsynoptic/model/PartitionGraph;,getNodes,()Ljava/util/Set;)#88
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Invoke(INTERFACE,Ljava/util/Set;,size,()I)#89
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#90
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Constant(Ljava/lang/String;,", unsat invs remaining: ")#91
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#92
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalLoad(Ljava/lang/Object;,4)#93
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Invoke(INTERFACE,Ljava/util/Set;,size,()I)#94
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#95
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#96
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Invoke(VIRTUAL,Ljava/util/logging/Logger;,fine,(Ljava/lang/String;)V)#97
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalLoad(I,2)#98
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalStore(I,3)#99
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalLoad(I,2)#100
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalLoad(Ljava/lang/Object;,0)#101
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalLoad(Ljava/lang/Object;,6)#102
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Invoke(STATIC,Lsynoptic/algorithms/bisim/Bisimulation;,performOneSplitPartitionsStep,(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I)#103
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#New(Ljava/util/LinkedHashMap;,0)#0
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Dup(1,0)#1
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#2
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalStore(Ljava/lang/Object;,3)#3
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalLoad(Ljava/lang/Object;,2)#4
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Constant(L;,null)#5
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#ConditionalBranch(Ljava/lang/Object;,eq,11)#6
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalLoad(Ljava/lang/Object;,2)#7
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(INTERFACE,Ljava/util/List;,size,()I)#8
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Constant(I,0)#9
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#ConditionalBranch(I,ne,13)#10
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalLoad(Ljava/lang/Object;,2)#13
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Get(Ljava/util/Random;,STATIC,Lsynoptic/main/Main;,random)#14
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(STATIC,Ljava/util/Collections;,shuffle,(Ljava/util/List;Ljava/util/Random;)V)#15
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Get(Ljava/util/logging/Logger;,STATIC,Lsynoptic/algorithms/bisim/Bisimulation;,logger)#16
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#New(Ljava/lang/StringBuilder;,0)#17
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Dup(1,0)#18
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#19
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalLoad(Ljava/lang/Object;,2)#20
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(INTERFACE,Ljava/util/List;,size,()I)#21
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#22
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Constant(Ljava/lang/String;," unsatisfied invariants and counter-examples: ")#23
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#24
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalLoad(Ljava/lang/Object;,2)#25
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#26
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#New(Ljava/lang/StringBuilder;,0)#0
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Dup(1,0)#1
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#2
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#LocalStore(Ljava/lang/Object;,1)#3
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#4
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Get(Lsynoptic/invariants/ITemporalInvariant;,NONSTATIC,Lsynoptic/invariants/CExamplePath;,invariant)#6
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/Object;,toString,()Ljava/lang/String;)#7
synoptic.invariants.NeverFollowedInvariant.toString()Ljava/lang/String;#New(Ljava/lang/StringBuilder;,0)#0
synoptic.invariants.NeverFollowedInvariant.toString()Ljava/lang/String;#Dup(1,0)#1
synoptic.invariants.NeverFollowedInvariant.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.invariants.NeverFollowedInvariant.toString()Ljava/lang/String;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/NeverFollowedInvariant;,first)#3
synoptic.invariants.NeverFollowedInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/Object;,toString,()Ljava/lang/String;)#4
synoptic.model.StringEventType.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.StringEventType.toString()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/StringEventType;,eType)#1
synoptic.model.StringEventType.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
synoptic.invariants.NeverFollowedInvariant.toString()Ljava/lang/String;#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#5
synoptic.invariants.NeverFollowedInvariant.toString()Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#6
synoptic.invariants.NeverFollowedInvariant.toString()Ljava/lang/String;#Constant(Ljava/lang/String;," NeverFollowedBy(")#7
synoptic.invariants.NeverFollowedInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#8
synoptic.invariants.NeverFollowedInvariant.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#9
synoptic.invariants.NeverFollowedInvariant.toString()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/invariants/NeverFollowedInvariant;,relation)#10
synoptic.invariants.NeverFollowedInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#11
synoptic.invariants.NeverFollowedInvariant.toString()Ljava/lang/String;#Constant(Ljava/lang/String;,") ")#12
synoptic.invariants.NeverFollowedInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#13
synoptic.invariants.NeverFollowedInvariant.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#14
synoptic.invariants.NeverFollowedInvariant.toString()Ljava/lang/String;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/NeverFollowedInvariant;,second)#15
synoptic.invariants.NeverFollowedInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/Object;,toString,()Ljava/lang/String;)#16
synoptic.invariants.NeverFollowedInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#17
synoptic.invariants.NeverFollowedInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#18
synoptic.invariants.NeverFollowedInvariant.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#19
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#8
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Pop(1)#9
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#10
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Constant(Ljava/lang/String;,": ")#11
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#12
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Pop(1)#13
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#14
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/invariants/CExamplePath;,path)#15
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#16
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#LocalStore(Ljava/lang/Object;,3)#17
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Goto(44)#18
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#44
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#45
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Constant(I,0)#46
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#ConditionalBranch(I,ne,19)#47
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#19
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#20
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#CheckCast(Ljava/lang/Object;)#21
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#LocalStore(Ljava/lang/Object;,2)#22
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#23
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Instanceof(Lsynoptic/model/Partition;)#24
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Constant(I,0)#25
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#ConditionalBranch(I,eq,35)#26
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#27
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#28
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#CheckCast(Lsynoptic/model/Partition;)#29
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getEType,()Lsynoptic/model/EventType;)#30
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/Object;,toString,()Ljava/lang/String;)#31
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#32
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Pop(1)#33
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Goto(40)#34
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#40
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Constant(Ljava/lang/String;," ")#41
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#42
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Pop(1)#43
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#48
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#49
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#50
synoptic.invariants.AlwaysFollowedInvariant.toString()Ljava/lang/String;#New(Ljava/lang/StringBuilder;,0)#0
synoptic.invariants.AlwaysFollowedInvariant.toString()Ljava/lang/String;#Dup(1,0)#1
synoptic.invariants.AlwaysFollowedInvariant.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.invariants.AlwaysFollowedInvariant.toString()Ljava/lang/String;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/AlwaysFollowedInvariant;,first)#3
synoptic.invariants.AlwaysFollowedInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/Object;,toString,()Ljava/lang/String;)#4
synoptic.invariants.AlwaysFollowedInvariant.toString()Ljava/lang/String;#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#5
synoptic.invariants.AlwaysFollowedInvariant.toString()Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#6
synoptic.invariants.AlwaysFollowedInvariant.toString()Ljava/lang/String;#Constant(Ljava/lang/String;," AlwaysFollowedBy(")#7
synoptic.invariants.AlwaysFollowedInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#8
synoptic.invariants.AlwaysFollowedInvariant.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#9
synoptic.invariants.AlwaysFollowedInvariant.toString()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/invariants/AlwaysFollowedInvariant;,relation)#10
synoptic.invariants.AlwaysFollowedInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#11
synoptic.invariants.AlwaysFollowedInvariant.toString()Ljava/lang/String;#Constant(Ljava/lang/String;,") ")#12
synoptic.invariants.AlwaysFollowedInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#13
synoptic.invariants.AlwaysFollowedInvariant.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#14
synoptic.invariants.AlwaysFollowedInvariant.toString()Ljava/lang/String;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/AlwaysFollowedInvariant;,second)#15
synoptic.invariants.AlwaysFollowedInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/Object;,toString,()Ljava/lang/String;)#16
synoptic.invariants.AlwaysFollowedInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#17
synoptic.invariants.AlwaysFollowedInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#18
synoptic.invariants.AlwaysFollowedInvariant.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#19
synoptic.invariants.AlwaysPrecedesInvariant.toString()Ljava/lang/String;#New(Ljava/lang/StringBuilder;,0)#0
synoptic.invariants.AlwaysPrecedesInvariant.toString()Ljava/lang/String;#Dup(1,0)#1
synoptic.invariants.AlwaysPrecedesInvariant.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.invariants.AlwaysPrecedesInvariant.toString()Ljava/lang/String;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/AlwaysPrecedesInvariant;,first)#3
synoptic.invariants.AlwaysPrecedesInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/Object;,toString,()Ljava/lang/String;)#4
synoptic.invariants.AlwaysPrecedesInvariant.toString()Ljava/lang/String;#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#5
synoptic.invariants.AlwaysPrecedesInvariant.toString()Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#6
synoptic.invariants.AlwaysPrecedesInvariant.toString()Ljava/lang/String;#Constant(Ljava/lang/String;," AlwaysPrecedes(")#7
synoptic.invariants.AlwaysPrecedesInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#8
synoptic.invariants.AlwaysPrecedesInvariant.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#9
synoptic.invariants.AlwaysPrecedesInvariant.toString()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/invariants/AlwaysPrecedesInvariant;,relation)#10
synoptic.invariants.AlwaysPrecedesInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#11
synoptic.invariants.AlwaysPrecedesInvariant.toString()Ljava/lang/String;#Constant(Ljava/lang/String;,") ")#12
synoptic.invariants.AlwaysPrecedesInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#13
synoptic.invariants.AlwaysPrecedesInvariant.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#14
synoptic.invariants.AlwaysPrecedesInvariant.toString()Ljava/lang/String;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/AlwaysPrecedesInvariant;,second)#15
synoptic.invariants.AlwaysPrecedesInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/Object;,toString,()Ljava/lang/String;)#16
synoptic.invariants.AlwaysPrecedesInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#17
synoptic.invariants.AlwaysPrecedesInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#18
synoptic.invariants.AlwaysPrecedesInvariant.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#19
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#27
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Ljava/util/logging/Logger;,fine,(Ljava/lang/String;)V)#28
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#New(Ljava/util/LinkedHashSet;,0)#29
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Dup(1,0)#30
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(SPECIAL,Ljava/util/LinkedHashSet;,<init>,()V)#31
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalStore(Ljava/lang/Object;,4)#32
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalLoad(Ljava/lang/Object;,2)#33
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalLoad(Ljava/lang/Object;,1)#34
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalLoad(Ljava/lang/Object;,3)#35
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalLoad(Ljava/lang/Object;,4)#36
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(STATIC,Lsynoptic/algorithms/bisim/Bisimulation;,tryAndRecordCandidateSplits,(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;)#37
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Constant(L;,null)#0
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#LocalStore(Ljava/lang/Object;,4)#1
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#3
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#LocalStore(Ljava/lang/Object;,6)#4
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Goto(85)#5
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,6)#85
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#86
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Constant(I,0)#87
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#ConditionalBranch(I,ne,6)#88
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,6)#6
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#7
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#CheckCast(Lsynoptic/invariants/CExamplePath;)#8
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#LocalStore(Ljava/lang/Object;,5)#9
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Get(Ljava/util/logging/Logger;,STATIC,Lsynoptic/algorithms/bisim/Bisimulation;,logger)#10
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#New(Ljava/lang/StringBuilder;,0)#11
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Dup(1,0)#12
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Constant(Ljava/lang/String;,"Considering counterexample: ")#13
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#14
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,5)#15
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/invariants/CExamplePath;,toString,()Ljava/lang/String;)#16
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#17
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#18
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Ljava/util/logging/Logger;,fine,(Ljava/lang/String;)V)#19
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,5)#20
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,1)#21
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Invoke(STATIC,Lsynoptic/algorithms/bisim/Bisimulation;,getSplits,(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;)#22
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#New(Ljava/util/ArrayList;,0)#0
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Dup(1,0)#1
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#2
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,2)#3
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#New(Ljava/util/LinkedHashSet;,0)#4
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Dup(1,0)#5
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(SPECIAL,Ljava/util/LinkedHashSet;,<init>,()V)#6
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,3)#7
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#8
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#9
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/invariants/CExamplePath;,path)#10
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Constant(I,0)#11
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#12
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#CheckCast(Lsynoptic/model/Partition;)#13
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getEventNodes,()Ljava/util/Set;)#14
synoptic.model.Partition.getEventNodes()Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.Partition.getEventNodes()Ljava/util/Set;#Get(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/Partition;,events)#1
synoptic.model.Partition.getEventNodes()Ljava/util/Set;#Return(Ljava/lang/Object;)#2
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/util/LinkedHashSet;,addAll,(Ljava/util/Collection;)Z)#15
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Pop(1)#16
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Constant(L;,null)#17
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,4)#18
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Constant(L;,null)#19
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,5)#20
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Constant(L;,null)#21
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,6)#22
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#23
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/invariants/CExamplePath;,path)#24
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#25
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,8)#26
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Goto(84)#27
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,8)#84
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#85
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Constant(I,0)#86
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#ConditionalBranch(I,ne,28)#87
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,8)#28
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#29
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#CheckCast(Lsynoptic/model/Partition;)#30
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,7)#31
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,7)#32
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Constant(L;,null)#33
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#ConditionalBranch(Ljava/lang/Object;,ne,40)#34
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,6)#40
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,4)#41
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,5)#42
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,6)#43
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,7)#44
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,5)#45
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#46
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,7)#47
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getEventNodes,()Ljava/util/Set;)#48
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/util/LinkedHashSet;,retainAll,(Ljava/util/Collection;)Z)#49
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Pop(1)#50
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#51
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/util/LinkedHashSet;,size,()I)#52
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Constant(I,0)#53
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#ConditionalBranch(I,ne,56)#54
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#New(Ljava/util/LinkedHashSet;,0)#56
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Dup(1,0)#57
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(SPECIAL,Ljava/util/LinkedHashSet;,<init>,()V)#58
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,9)#59
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#60
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Get(Lsynoptic/invariants/ITemporalInvariant;,NONSTATIC,Lsynoptic/invariants/CExamplePath;,invariant)#61
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(INTERFACE,Lsynoptic/invariants/ITemporalInvariant;,getRelation,()Ljava/lang/String;)#62
synoptic.invariants.BinaryInvariant.getRelation()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.invariants.BinaryInvariant.getRelation()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/invariants/BinaryInvariant;,relation)#1
synoptic.invariants.BinaryInvariant.getRelation()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,10)#63
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#64
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/util/LinkedHashSet;,iterator,()Ljava/util/Iterator;)#65
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,12)#66
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Goto(78)#67
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,12)#78
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#79
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Constant(I,0)#80
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#ConditionalBranch(I,ne,68)#81
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,12)#68
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#69
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#CheckCast(Lsynoptic/model/EventNode;)#70
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,11)#71
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,9)#72
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,11)#73
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,10)#74
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getSuccessors,(Ljava/lang/String;)Ljava/util/Set;)#75
synoptic.model.EventNode.getSuccessors(Ljava/lang/String;)Ljava/util/Set;#New(Ljava/util/LinkedHashSet;,0)#0
synoptic.model.EventNode.getSuccessors(Ljava/lang/String;)Ljava/util/Set;#Dup(1,0)#1
synoptic.model.EventNode.getSuccessors(Ljava/lang/String;)Ljava/util/Set;#Invoke(SPECIAL,Ljava/util/LinkedHashSet;,<init>,()V)#2
synoptic.model.EventNode.getSuccessors(Ljava/lang/String;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,2)#3
synoptic.model.EventNode.getSuccessors(Ljava/lang/String;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#4
synoptic.model.EventNode.getSuccessors(Ljava/lang/String;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,1)#5
synoptic.model.EventNode.getSuccessors(Ljava/lang/String;)Ljava/util/Set;#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitionsIterator,(Ljava/lang/String;)Lsynoptic/util/IIterableIterator;)#6
synoptic.model.EventNode.getTransitionsIterator(Ljava/lang/String;)Lsynoptic/util/IIterableIterator;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.EventNode.getTransitionsIterator(Ljava/lang/String;)Lsynoptic/util/IIterableIterator;#LocalLoad(Ljava/lang/Object;,1)#1
synoptic.model.EventNode.getTransitionsIterator(Ljava/lang/String;)Lsynoptic/util/IIterableIterator;#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitions,(Ljava/lang/String;)Ljava/util/List;)#2
synoptic.model.EventNode.getTransitionsIterator(Ljava/lang/String;)Lsynoptic/util/IIterableIterator;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#3
synoptic.model.EventNode.getTransitionsIterator(Ljava/lang/String;)Lsynoptic/util/IIterableIterator;#Invoke(STATIC,Lsynoptic/util/IterableAdapter;,make,(Ljava/util/Iterator;)Lsynoptic/util/IIterableIterator;)#4
synoptic.model.EventNode.getTransitionsIterator(Ljava/lang/String;)Lsynoptic/util/IIterableIterator;#Return(Ljava/lang/Object;)#5
synoptic.model.EventNode.getSuccessors(Ljava/lang/String;)Ljava/util/Set;#Invoke(INTERFACE,Lsynoptic/util/IIterableIterator;,iterator,()Ljava/util/Iterator;)#7
synoptic.util.IterableAdapter.iterator()Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.util.IterableAdapter.iterator()Ljava/util/Iterator;#Get(Ljava/util/Iterator;,NONSTATIC,Lsynoptic/util/IterableAdapter;,iterator)#1
synoptic.util.IterableAdapter.iterator()Ljava/util/Iterator;#Return(Ljava/lang/Object;)#2
synoptic.model.EventNode.getSuccessors(Ljava/lang/String;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,4)#8
synoptic.model.EventNode.getSuccessors(Ljava/lang/String;)Ljava/util/Set;#Goto(20)#9
synoptic.model.EventNode.getSuccessors(Ljava/lang/String;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,4)#20
synoptic.model.EventNode.getSuccessors(Ljava/lang/String;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#21
synoptic.model.EventNode.getSuccessors(Ljava/lang/String;)Ljava/util/Set;#Constant(I,0)#22
synoptic.model.EventNode.getSuccessors(Ljava/lang/String;)Ljava/util/Set;#ConditionalBranch(I,ne,10)#23
synoptic.model.EventNode.getSuccessors(Ljava/lang/String;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,4)#10
synoptic.model.EventNode.getSuccessors(Ljava/lang/String;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#11
synoptic.model.EventNode.getSuccessors(Ljava/lang/String;)Ljava/util/Set;#CheckCast(Lsynoptic/model/Transition;)#12
synoptic.model.EventNode.getSuccessors(Ljava/lang/String;)Ljava/util/Set;#LocalStore(Ljava/lang/Object;,3)#13
synoptic.model.EventNode.getSuccessors(Ljava/lang/String;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,2)#14
synoptic.model.EventNode.getSuccessors(Ljava/lang/String;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,3)#15
synoptic.model.EventNode.getSuccessors(Ljava/lang/String;)Ljava/util/Set;#Invoke(VIRTUAL,Lsynoptic/model/Transition;,getTarget,()Ljava/lang/Object;)#16
synoptic.model.EventNode.getSuccessors(Ljava/lang/String;)Ljava/util/Set;#CheckCast(Lsynoptic/model/EventNode;)#17
synoptic.model.EventNode.getSuccessors(Ljava/lang/String;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#18
synoptic.model.EventNode.getSuccessors(Ljava/lang/String;)Ljava/util/Set;#Pop(1)#19
synoptic.model.EventNode.getSuccessors(Ljava/lang/String;)Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,2)#24
synoptic.model.EventNode.getSuccessors(Ljava/lang/String;)Ljava/util/Set;#Return(Ljava/lang/Object;)#25
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/util/LinkedHashSet;,addAll,(Ljava/util/Collection;)Z)#76
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Pop(1)#77
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,9)#82
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,3)#83
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Goto(88)#55
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,6)#88
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,5)#89
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#90
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Get(Lsynoptic/invariants/ITemporalInvariant;,NONSTATIC,Lsynoptic/invariants/CExamplePath;,invariant)#91
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(INTERFACE,Lsynoptic/invariants/ITemporalInvariant;,getRelation,()Ljava/lang/String;)#92
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getTransition,(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;)#93
synoptic.model.Partition.getTransition(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;#Get(Z,STATIC,Lsynoptic/model/Partition;,$assertionsDisabled)#0
synoptic.model.Partition.getTransition(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;#Constant(I,0)#1
synoptic.model.Partition.getTransition(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;#ConditionalBranch(I,ne,11)#2
synoptic.model.Partition.getTransition(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;#LocalLoad(Ljava/lang/Object;,0)#11
synoptic.model.Partition.getTransition(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;#LocalLoad(Ljava/lang/Object;,2)#12
synoptic.model.Partition.getTransition(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getTransitionsIterator,(Ljava/lang/String;)Lsynoptic/util/IIterableIterator;)#13
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#29
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#Get(Ljava/util/Iterator;,NONSTATIC,Lsynoptic/model/Partition$1;,msgItr)#30
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#31
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#CheckCast(Lsynoptic/model/EventNode;)#32
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#33
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitions,(Ljava/lang/String;)Ljava/util/List;)#34
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#35
synoptic.model.Partition.getTransition(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;#LocalStore(Ljava/lang/Object;,3)#14
synoptic.model.Partition.getTransition(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;#Goto(29)#15
synoptic.model.Partition.getTransition(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;#LocalLoad(Ljava/lang/Object;,3)#29
synoptic.model.Partition.getTransition(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#30
synoptic.model.Partition.getTransition(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;#Constant(I,0)#31
synoptic.model.Partition.getTransition(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;#ConditionalBranch(I,ne,16)#32
synoptic.model.Partition.getTransition(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;#LocalLoad(Ljava/lang/Object;,3)#16
synoptic.model.Partition.getTransition(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#17
synoptic.model.Partition.getTransition(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;#CheckCast(Lsynoptic/model/interfaces/ITransition;)#18
synoptic.model.Partition.getTransition(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;#LocalStore(Ljava/lang/Object;,4)#19
synoptic.model.Partition.getTransition(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;#LocalLoad(Ljava/lang/Object;,4)#20
synoptic.model.Partition.getTransition(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;#Invoke(INTERFACE,Lsynoptic/model/interfaces/ITransition;,getTarget,()Ljava/lang/Object;)#21
synoptic.model.Partition.getTransition(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;#CheckCast(Lsynoptic/model/Partition;)#22
synoptic.model.Partition.getTransition(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;#LocalLoad(Ljava/lang/Object;,1)#23
synoptic.model.Partition.getTransition(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#24
synoptic.model.Partition.getTransition(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;#Constant(I,0)#25
synoptic.model.Partition.getTransition(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;#ConditionalBranch(I,eq,29)#26
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#LocalLoad(Ljava/lang/Object;,0)#46
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#LocalLoad(Ljava/lang/Object;,0)#47
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Get(Ljava/util/Iterator;,NONSTATIC,Lsynoptic/model/Partition$1;,msgItr)#48
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#49
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#CheckCast(Lsynoptic/model/EventNode;)#50
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#LocalLoad(Ljava/lang/Object;,0)#51
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/Partition$1;,val$relation)#52
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitions,(Ljava/lang/String;)Ljava/util/List;)#53
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#54
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Put(Ljava/util/Iterator;,NONSTATIC,Lsynoptic/model/Partition$1;,transItr)#55
synoptic.model.Partition.getTransition(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;#LocalLoad(Ljava/lang/Object;,4)#27
synoptic.model.Partition.getTransition(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;#Return(Ljava/lang/Object;)#28
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,7)#94
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Constant(L;,null)#95
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,8)#96
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,4)#97
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Constant(L;,null)#98
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#ConditionalBranch(Ljava/lang/Object;,eq,107)#99
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,4)#100
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,6)#101
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#102
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Get(Lsynoptic/invariants/ITemporalInvariant;,NONSTATIC,Lsynoptic/invariants/CExamplePath;,invariant)#103
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(INTERFACE,Lsynoptic/invariants/ITemporalInvariant;,getRelation,()Ljava/lang/String;)#104
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getTransition,(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;)#105
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,8)#106
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,7)#107
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Constant(L;,null)#108
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#ConditionalBranch(Ljava/lang/Object;,eq,121)#109
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,6)#110
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,7)#111
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getCandidateSplitBasedOnOutgoing,(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;)#112
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Get(Z,STATIC,Lsynoptic/model/Partition;,$assertionsDisabled)#0
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Constant(I,0)#1
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#ConditionalBranch(I,ne,11)#2
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Constant(L;,null)#11
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalStore(Ljava/lang/Object;,2)#12
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,0)#13
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Get(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/Partition;,events)#14
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#15
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalStore(Ljava/lang/Object;,4)#16
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Goto(64)#17
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,4)#64
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#65
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Constant(I,0)#66
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#ConditionalBranch(I,ne,18)#67
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,4)#18
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#19
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#CheckCast(Lsynoptic/model/EventNode;)#20
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalStore(Ljava/lang/Object;,3)#21
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,3)#22
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,1)#23
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(STATIC,Lsynoptic/model/Partition;,fulfillsStrong,(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z)#24
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitions,()Ljava/util/List;)#1
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#2
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#LocalStore(Ljava/lang/Object;,3)#3
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#Goto(27)#4
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#LocalLoad(Ljava/lang/Object;,3)#27
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#28
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#Constant(I,0)#29
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#ConditionalBranch(I,ne,5)#30
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#LocalLoad(Ljava/lang/Object;,3)#5
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#6
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#CheckCast(Lsynoptic/model/interfaces/ITransition;)#7
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#LocalStore(Ljava/lang/Object;,2)#8
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#LocalLoad(Ljava/lang/Object;,2)#9
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#Invoke(INTERFACE,Lsynoptic/model/interfaces/ITransition;,getRelation,()Ljava/lang/String;)#10
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#LocalLoad(Ljava/lang/Object;,1)#11
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#Invoke(INTERFACE,Lsynoptic/model/interfaces/ITransition;,getRelation,()Ljava/lang/String;)#12
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#13
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#Constant(I,0)#14
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#ConditionalBranch(I,eq,27)#15
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#LocalLoad(Ljava/lang/Object;,2)#16
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#Invoke(INTERFACE,Lsynoptic/model/interfaces/ITransition;,getTarget,()Ljava/lang/Object;)#17
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#CheckCast(Lsynoptic/model/EventNode;)#18
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getParent,()Lsynoptic/model/Partition;)#19
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#LocalLoad(Ljava/lang/Object;,1)#20
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#Invoke(INTERFACE,Lsynoptic/model/interfaces/ITransition;,getTarget,()Ljava/lang/Object;)#21
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#22
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#Constant(I,0)#23
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#ConditionalBranch(I,eq,27)#24
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#Constant(I,0)#31
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#Return(I)#32
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Constant(I,0)#25
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#ConditionalBranch(I,eq,34)#26
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,2)#34
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Constant(L;,null)#35
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#ConditionalBranch(Ljava/lang/Object;,ne,64)#36
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#New(Lsynoptic/algorithms/graph/PartitionSplit;,0)#37
synoptic.algorithms.graph.PartitionSplit.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@24b5cffc)#0
synoptic.algorithms.graph.PartitionSplit.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
synoptic.algorithms.graph.PartitionSplit.<clinit>()V#Constant(I,0)#2
synoptic.algorithms.graph.PartitionSplit.<clinit>()V#ConditionalBranch(I,ne,6)#3
synoptic.algorithms.graph.PartitionSplit.<clinit>()V#Constant(I,1)#4
synoptic.algorithms.graph.PartitionSplit.<clinit>()V#Goto(7)#5
synoptic.algorithms.graph.PartitionSplit.<clinit>()V#Put(Z,STATIC,Lsynoptic/algorithms/graph/PartitionSplit;,$assertionsDisabled)#7
synoptic.algorithms.graph.PartitionSplit.<clinit>()V#Return(V)#8
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Dup(1,0)#38
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,0)#39
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(SPECIAL,Lsynoptic/algorithms/graph/PartitionSplit;,<init>,(Lsynoptic/model/Partition;)V)#40
synoptic.algorithms.graph.PartitionSplit.<init>(Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.algorithms.graph.PartitionSplit.<init>(Lsynoptic/model/Partition;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
synoptic.algorithms.graph.PartitionSplit.<init>(Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.algorithms.graph.PartitionSplit.<init>(Lsynoptic/model/Partition;)V#Constant(L;,null)#3
synoptic.algorithms.graph.PartitionSplit.<init>(Lsynoptic/model/Partition;)V#Put(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,partitionToSplit)#4
synoptic.algorithms.graph.PartitionSplit.<init>(Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.algorithms.graph.PartitionSplit.<init>(Lsynoptic/model/Partition;)V#Constant(L;,null)#6
synoptic.algorithms.graph.PartitionSplit.<init>(Lsynoptic/model/Partition;)V#Put(Ljava/util/Set;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,eventsToSplitOut)#7
synoptic.algorithms.graph.PartitionSplit.<init>(Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,0)#8
synoptic.algorithms.graph.PartitionSplit.<init>(Lsynoptic/model/Partition;)V#Constant(L;,null)#9
synoptic.algorithms.graph.PartitionSplit.<init>(Lsynoptic/model/Partition;)V#Put(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,newPartition)#10
synoptic.algorithms.graph.PartitionSplit.<init>(Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,0)#11
synoptic.algorithms.graph.PartitionSplit.<init>(Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,1)#12
synoptic.algorithms.graph.PartitionSplit.<init>(Lsynoptic/model/Partition;)V#Put(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,partitionToSplit)#13
synoptic.algorithms.graph.PartitionSplit.<init>(Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,0)#14
synoptic.algorithms.graph.PartitionSplit.<init>(Lsynoptic/model/Partition;)V#New(Ljava/util/LinkedHashSet;,0)#15
synoptic.algorithms.graph.PartitionSplit.<init>(Lsynoptic/model/Partition;)V#Dup(1,0)#16
synoptic.algorithms.graph.PartitionSplit.<init>(Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,1)#17
synoptic.algorithms.graph.PartitionSplit.<init>(Lsynoptic/model/Partition;)V#Invoke(VIRTUAL,Lsynoptic/model/Partition;,size,()I)#18
synoptic.model.Partition.size()I#Get(Z,STATIC,Lsynoptic/model/Partition;,$assertionsDisabled)#0
synoptic.model.Partition.size()I#Constant(I,0)#1
synoptic.model.Partition.size()I#ConditionalBranch(I,ne,11)#2
synoptic.model.Partition.size()I#LocalLoad(Ljava/lang/Object;,0)#11
synoptic.model.Partition.size()I#Get(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/Partition;,events)#12
synoptic.model.Partition.size()I#Invoke(INTERFACE,Ljava/util/Set;,size,()I)#13
synoptic.model.Partition.size()I#Return(I)#14
synoptic.algorithms.graph.PartitionSplit.<init>(Lsynoptic/model/Partition;)V#Invoke(SPECIAL,Ljava/util/LinkedHashSet;,<init>,(I)V)#19
synoptic.algorithms.graph.PartitionSplit.<init>(Lsynoptic/model/Partition;)V#Put(Ljava/util/Set;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,eventsToSplitOut)#20
synoptic.algorithms.graph.PartitionSplit.<init>(Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,0)#21
synoptic.algorithms.graph.PartitionSplit.<init>(Lsynoptic/model/Partition;)V#Constant(L;,null)#22
synoptic.algorithms.graph.PartitionSplit.<init>(Lsynoptic/model/Partition;)V#Put(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,newPartition)#23
synoptic.algorithms.graph.PartitionSplit.<init>(Lsynoptic/model/Partition;)V#Return(V)#24
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalStore(Ljava/lang/Object;,2)#41
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,0)#42
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Get(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/Partition;,events)#43
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#44
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalStore(Ljava/lang/Object;,6)#45
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Goto(60)#46
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,6)#60
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#61
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Constant(I,0)#62
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#ConditionalBranch(I,ne,47)#63
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,6)#47
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#48
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#CheckCast(Lsynoptic/model/EventNode;)#49
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalStore(Ljava/lang/Object;,5)#50
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,5)#51
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,3)#52
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#53
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Constant(I,0)#54
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#ConditionalBranch(I,eq,57)#55
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Goto(64)#56
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#Constant(I,1)#25
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#Return(I)#26
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,2)#27
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Constant(L;,null)#28
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#ConditionalBranch(Ljava/lang/Object;,eq,64)#29
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,2)#30
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,3)#31
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(VIRTUAL,Lsynoptic/algorithms/graph/PartitionSplit;,addEventToSplit,(Lsynoptic/model/EventNode;)V)#32
synoptic.algorithms.graph.PartitionSplit.addEventToSplit(Lsynoptic/model/EventNode;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.algorithms.graph.PartitionSplit.addEventToSplit(Lsynoptic/model/EventNode;)V#Get(Ljava/util/Set;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,eventsToSplitOut)#1
synoptic.algorithms.graph.PartitionSplit.addEventToSplit(Lsynoptic/model/EventNode;)V#LocalLoad(Ljava/lang/Object;,1)#2
synoptic.algorithms.graph.PartitionSplit.addEventToSplit(Lsynoptic/model/EventNode;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#3
synoptic.algorithms.graph.PartitionSplit.addEventToSplit(Lsynoptic/model/EventNode;)V#Pop(1)#4
synoptic.algorithms.graph.PartitionSplit.addEventToSplit(Lsynoptic/model/EventNode;)V#Return(V)#5
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Goto(64)#33
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,2)#68
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Return(Ljava/lang/Object;)#69
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,9)#113
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,9)#114
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Constant(L;,null)#115
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#ConditionalBranch(Ljava/lang/Object;,eq,121)#116
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#117
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,9)#118
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#119
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Pop(1)#120
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,8)#121
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Constant(L;,null)#122
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#ConditionalBranch(Ljava/lang/Object;,eq,140)#123
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Get(Z,STATIC,Lsynoptic/algorithms/bisim/Bisimulation;,incomingTransitionSplit)#124
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Constant(I,0)#125
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#ConditionalBranch(I,eq,140)#126
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,6)#127
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,4)#128
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,8)#129
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(INTERFACE,Lsynoptic/model/interfaces/ITransition;,getRelation,()Ljava/lang/String;)#130
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getCandidateSplitBasedOnIncoming,(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;)#131
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Get(Z,STATIC,Lsynoptic/model/Partition;,$assertionsDisabled)#0
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Constant(I,0)#1
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#ConditionalBranch(I,ne,11)#2
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#New(Ljava/util/LinkedHashSet;,0)#11
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Dup(1,0)#12
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(SPECIAL,Ljava/util/LinkedHashSet;,<init>,()V)#13
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalStore(Ljava/lang/Object;,3)#14
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,1)#15
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Get(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/Partition;,events)#16
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#17
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalStore(Ljava/lang/Object;,5)#18
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Goto(30)#19
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,5)#30
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#31
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Constant(I,0)#32
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#ConditionalBranch(I,ne,20)#33
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,5)#20
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#21
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#CheckCast(Lsynoptic/model/EventNode;)#22
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalStore(Ljava/lang/Object;,4)#23
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,3)#24
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,4)#25
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,2)#26
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getSuccessors,(Ljava/lang/String;)Ljava/util/Set;)#27
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(INTERFACE,Ljava/util/Set;,addAll,(Ljava/util/Collection;)Z)#28
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Pop(1)#29
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,3)#34
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,0)#35
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Get(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/Partition;,events)#36
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(INTERFACE,Ljava/util/Set;,retainAll,(Ljava/util/Collection;)Z)#37
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Pop(1)#38
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,3)#39
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(INTERFACE,Ljava/util/Set;,size,()I)#40
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Constant(I,0)#41
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#ConditionalBranch(I,eq,49)#42
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,3)#43
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(INTERFACE,Ljava/util/Set;,size,()I)#44
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,0)#45
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Get(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/Partition;,events)#46
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(INTERFACE,Ljava/util/Set;,size,()I)#47
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#ConditionalBranch(I,ne,51)#48
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#New(Lsynoptic/algorithms/graph/PartitionSplit;,0)#51
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Dup(1,0)#52
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,0)#53
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(SPECIAL,Lsynoptic/algorithms/graph/PartitionSplit;,<init>,(Lsynoptic/model/Partition;)V)#54
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalStore(Ljava/lang/Object;,4)#55
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,0)#56
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Get(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/Partition;,events)#57
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#58
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalStore(Ljava/lang/Object;,6)#59
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Goto(73)#60
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,6)#73
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#74
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Constant(I,0)#75
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#ConditionalBranch(I,ne,61)#76
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,6)#61
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#62
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#CheckCast(Lsynoptic/model/EventNode;)#63
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalStore(Ljava/lang/Object;,5)#64
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,3)#65
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,5)#66
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(INTERFACE,Ljava/util/Set;,contains,(Ljava/lang/Object;)Z)#67
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Constant(I,0)#68
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#ConditionalBranch(I,eq,73)#69
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,4)#70
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,5)#71
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(VIRTUAL,Lsynoptic/algorithms/graph/PartitionSplit;,addEventToSplit,(Lsynoptic/model/EventNode;)V)#72
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,4)#77
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Return(Ljava/lang/Object;)#78
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,9)#132
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,9)#133
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Constant(L;,null)#134
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#ConditionalBranch(Ljava/lang/Object;,eq,140)#135
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#136
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,9)#137
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#138
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Pop(1)#139
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#140
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Return(Ljava/lang/Object;)#141
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#LocalStore(Ljava/lang/Object;,7)#23
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,7)#24
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Get(Ljava/util/Random;,STATIC,Lsynoptic/main/Main;,random)#25
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Invoke(STATIC,Ljava/util/Collections;,shuffle,(Ljava/util/List;Ljava/util/Random;)V)#26
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Get(Ljava/util/logging/Logger;,STATIC,Lsynoptic/algorithms/bisim/Bisimulation;,logger)#27
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#New(Ljava/lang/StringBuilder;,0)#28
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Dup(1,0)#29
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Constant(Ljava/lang/String;,"candidateSplits are: ")#30
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#31
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,7)#32
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Ljava/lang/Object;,toString,()Ljava/lang/String;)#33
synoptic.algorithms.graph.PartitionSplit.toString()Ljava/lang/String;#New(Ljava/lang/StringBuilder;,0)#0
synoptic.algorithms.graph.PartitionSplit.toString()Ljava/lang/String;#Dup(1,0)#1
synoptic.algorithms.graph.PartitionSplit.toString()Ljava/lang/String;#Constant(Ljava/lang/String;,"S.")#2
synoptic.algorithms.graph.PartitionSplit.toString()Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#3
synoptic.algorithms.graph.PartitionSplit.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#4
synoptic.algorithms.graph.PartitionSplit.toString()Ljava/lang/String;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,partitionToSplit)#5
synoptic.algorithms.graph.PartitionSplit.toString()Ljava/lang/String;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getEType,()Lsynoptic/model/EventType;)#6
synoptic.algorithms.graph.PartitionSplit.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#7
synoptic.algorithms.graph.PartitionSplit.toString()Ljava/lang/String;#Constant(Ljava/lang/String;,".")#8
synoptic.algorithms.graph.PartitionSplit.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#9
synoptic.algorithms.graph.PartitionSplit.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#10
synoptic.algorithms.graph.PartitionSplit.toString()Ljava/lang/String;#Get(Ljava/util/Set;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,eventsToSplitOut)#11
synoptic.algorithms.graph.PartitionSplit.toString()Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/Set;,size,()I)#12
synoptic.algorithms.graph.PartitionSplit.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#13
synoptic.algorithms.graph.PartitionSplit.toString()Ljava/lang/String;#Constant(Ljava/lang/String;,"/")#14
synoptic.algorithms.graph.PartitionSplit.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#15
synoptic.algorithms.graph.PartitionSplit.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#16
synoptic.algorithms.graph.PartitionSplit.toString()Ljava/lang/String;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,partitionToSplit)#17
synoptic.algorithms.graph.PartitionSplit.toString()Ljava/lang/String;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getEventNodes,()Ljava/util/Set;)#18
synoptic.algorithms.graph.PartitionSplit.toString()Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/Set;,size,()I)#19
synoptic.algorithms.graph.PartitionSplit.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#20
synoptic.algorithms.graph.PartitionSplit.toString()Ljava/lang/String;#Get(Ljava/util/Set;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,eventsToSplitOut)#21
synoptic.algorithms.graph.PartitionSplit.toString()Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/Set;,size,()I)#22
synoptic.algorithms.graph.PartitionSplit.toString()Ljava/lang/String;#BinaryOp(I,sub)#23
synoptic.algorithms.graph.PartitionSplit.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#24
synoptic.algorithms.graph.PartitionSplit.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#25
synoptic.algorithms.graph.PartitionSplit.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#26
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#34
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#35
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Ljava/util/logging/Logger;,fine,(Ljava/lang/String;)V)#36
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,7)#37
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#38
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#LocalStore(Ljava/lang/Object;,9)#39
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Goto(81)#40
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,9)#81
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#82
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Constant(I,0)#83
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#ConditionalBranch(I,ne,41)#84
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,9)#41
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#42
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#CheckCast(Lsynoptic/algorithms/graph/PartitionSplit;)#43
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#LocalStore(Ljava/lang/Object;,8)#44
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/main/SynopticOptions;,STATIC,Lsynoptic/main/Main;,options)#45
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,performExtraChecks)#46
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Constant(I,0)#47
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#ConditionalBranch(I,eq,58)#48
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,4)#58
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Constant(L;,null)#59
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#ConditionalBranch(Ljava/lang/Object;,ne,63)#60
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,8)#61
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#LocalStore(Ljava/lang/Object;,4)#62
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,5)#63
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/invariants/ITemporalInvariant;,NONSTATIC,Lsynoptic/invariants/CExamplePath;,invariant)#64
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,1)#65
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,2)#66
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,8)#67
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/algorithms/graph/PartitionSplit;,getPartition,()Lsynoptic/model/Partition;)#68
synoptic.algorithms.graph.PartitionSplit.getPartition()Lsynoptic/model/Partition;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.algorithms.graph.PartitionSplit.getPartition()Lsynoptic/model/Partition;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,partitionToSplit)#1
synoptic.algorithms.graph.PartitionSplit.getPartition()Lsynoptic/model/Partition;#Return(Ljava/lang/Object;)#2
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#New(Lsynoptic/algorithms/graph/PartitionMultiSplit;,0)#69
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Dup(1,0)#70
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,8)#71
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Invoke(SPECIAL,Lsynoptic/algorithms/graph/PartitionMultiSplit;,<init>,(Lsynoptic/algorithms/graph/PartitionSplit;)V)#72
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#New(Ljava/util/ArrayList;,0)#3
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#Dup(1,0)#4
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#5
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#Put(Ljava/util/ArrayList;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiSplit;,partitioning)#6
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#LocalLoad(Ljava/lang/Object;,0)#7
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#LocalLoad(Ljava/lang/Object;,1)#8
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#Invoke(VIRTUAL,Lsynoptic/algorithms/graph/PartitionSplit;,getPartition,()Lsynoptic/model/Partition;)#9
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#Put(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiSplit;,partition)#10
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#LocalLoad(Ljava/lang/Object;,0)#11
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#Get(Ljava/util/ArrayList;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiSplit;,partitioning)#12
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#LocalLoad(Ljava/lang/Object;,1)#13
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#Invoke(VIRTUAL,Lsynoptic/algorithms/graph/PartitionSplit;,getSplitEvents,()Ljava/util/Set;)#14
synoptic.algorithms.graph.PartitionSplit.getSplitEvents()Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.algorithms.graph.PartitionSplit.getSplitEvents()Ljava/util/Set;#Get(Ljava/util/Set;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,eventsToSplitOut)#1
synoptic.algorithms.graph.PartitionSplit.getSplitEvents()Ljava/util/Set;#Return(Ljava/lang/Object;)#2
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#15
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#Pop(1)#16
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#New(Ljava/util/LinkedHashSet;,0)#17
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#Dup(1,0)#18
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#LocalLoad(Ljava/lang/Object;,0)#19
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiSplit;,partition)#20
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getEventNodes,()Ljava/util/Set;)#21
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#Invoke(SPECIAL,Ljava/util/LinkedHashSet;,<init>,(Ljava/util/Collection;)V)#22
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#LocalStore(Ljava/lang/Object;,2)#23
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#LocalLoad(Ljava/lang/Object;,2)#24
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#LocalLoad(Ljava/lang/Object;,1)#25
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#Invoke(VIRTUAL,Lsynoptic/algorithms/graph/PartitionSplit;,getSplitEvents,()Ljava/util/Set;)#26
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#Invoke(INTERFACE,Ljava/util/Set;,removeAll,(Ljava/util/Collection;)Z)#27
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#Pop(1)#28
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#LocalLoad(Ljava/lang/Object;,0)#29
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#Get(Ljava/util/ArrayList;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiSplit;,partitioning)#30
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#LocalLoad(Ljava/lang/Object;,2)#31
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#32
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#Pop(1)#33
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#Return(V)#34
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Invoke(STATIC,Lsynoptic/algorithms/bisim/Bisimulation;,tryAndRecordSplitOp,(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z)#73
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#LocalLoad(Ljava/lang/Object;,1)#0
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#LocalLoad(Ljava/lang/Object;,4)#1
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Invoke(VIRTUAL,Lsynoptic/model/PartitionGraph;,apply,(Lsynoptic/algorithms/graph/IOperation;)Lsynoptic/algorithms/graph/IOperation;)#2
synoptic.model.PartitionGraph.apply(Lsynoptic/algorithms/graph/IOperation;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,1)#0
synoptic.model.PartitionGraph.apply(Lsynoptic/algorithms/graph/IOperation;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Ljava/lang/Object;,getClass,()Ljava/lang/Class;)#1
synoptic.model.PartitionGraph.apply(Lsynoptic/algorithms/graph/IOperation;)Lsynoptic/algorithms/graph/IOperation;#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@e0df411d)#2
synoptic.model.PartitionGraph.apply(Lsynoptic/algorithms/graph/IOperation;)Lsynoptic/algorithms/graph/IOperation;#ConditionalBranch(Ljava/lang/Object;,ne,9)#3
synoptic.model.PartitionGraph.apply(Lsynoptic/algorithms/graph/IOperation;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,0)#4
synoptic.model.PartitionGraph.apply(Lsynoptic/algorithms/graph/IOperation;)Lsynoptic/algorithms/graph/IOperation;#Get(Ljava/util/LinkedList;,NONSTATIC,Lsynoptic/model/PartitionGraph;,appliedSplits)#5
synoptic.model.PartitionGraph.apply(Lsynoptic/algorithms/graph/IOperation;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,1)#6
synoptic.model.PartitionGraph.apply(Lsynoptic/algorithms/graph/IOperation;)Lsynoptic/algorithms/graph/IOperation;#CheckCast(Lsynoptic/algorithms/graph/PartitionMultiSplit;)#7
synoptic.model.PartitionGraph.apply(Lsynoptic/algorithms/graph/IOperation;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Ljava/util/LinkedList;,push,(Ljava/lang/Object;)V)#8
synoptic.model.PartitionGraph.apply(Lsynoptic/algorithms/graph/IOperation;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,1)#9
synoptic.model.PartitionGraph.apply(Lsynoptic/algorithms/graph/IOperation;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,0)#10
synoptic.model.PartitionGraph.apply(Lsynoptic/algorithms/graph/IOperation;)Lsynoptic/algorithms/graph/IOperation;#Invoke(INTERFACE,Lsynoptic/algorithms/graph/IOperation;,commit,(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;)#11
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Constant(I,0)#0
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalStore(I,2)#1
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#New(Ljava/util/ArrayList;,0)#2
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Dup(1,0)#3
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#4
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalStore(Ljava/lang/Object;,3)#5
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,0)#6
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Ljava/util/ArrayList;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiSplit;,partitioning)#7
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Ljava/util/ArrayList;,iterator,()Ljava/util/Iterator;)#8
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalStore(Ljava/lang/Object;,5)#9
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Goto(43)#10
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,5)#43
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#44
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Constant(I,0)#45
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#ConditionalBranch(I,ne,11)#46
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,5)#11
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#12
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#CheckCast(Ljava/util/Set;)#13
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalStore(Ljava/lang/Object;,4)#14
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(I,2)#15
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Constant(I,0)#16
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#ConditionalBranch(I,ne,21)#17
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Constant(I,1)#18
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalStore(I,2)#19
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Goto(43)#20
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#New(Lsynoptic/model/Partition;,0)#21
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Dup(1,0)#22
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,4)#23
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(SPECIAL,Lsynoptic/model/Partition;,<init>,(Ljava/util/Set;)V)#24
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalStore(Ljava/lang/Object;,6)#25
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,3)#26
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,6)#27
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#28
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Pop(1)#29
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,0)#30
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiSplit;,partition)#31
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,4)#32
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,removeEventNodes,(Ljava/util/Set;)V)#33
synoptic.model.Partition.removeEventNodes(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.Partition.removeEventNodes(Ljava/util/Set;)V#Get(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/Partition;,events)#1
synoptic.model.Partition.removeEventNodes(Ljava/util/Set;)V#LocalLoad(Ljava/lang/Object;,1)#2
synoptic.model.Partition.removeEventNodes(Ljava/util/Set;)V#Invoke(INTERFACE,Ljava/util/Set;,removeAll,(Ljava/util/Collection;)Z)#3
synoptic.model.Partition.removeEventNodes(Ljava/util/Set;)V#Pop(1)#4
synoptic.model.Partition.removeEventNodes(Ljava/util/Set;)V#Get(Z,STATIC,Lsynoptic/model/Partition;,$assertionsDisabled)#5
synoptic.model.Partition.removeEventNodes(Ljava/util/Set;)V#Constant(I,0)#6
synoptic.model.Partition.removeEventNodes(Ljava/util/Set;)V#ConditionalBranch(I,ne,17)#7
synoptic.model.Partition.removeEventNodes(Ljava/util/Set;)V#Return(V)#17
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,6)#34
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,4)#35
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,addEventNodes,(Ljava/util/Collection;)V)#36
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,1)#37
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,6)#38
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/PartitionGraph;,add,(Lsynoptic/model/Partition;)V)#39
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,1)#0
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getEventNodes,()Ljava/util/Set;)#1
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#2
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#LocalStore(Ljava/lang/Object;,3)#3
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#Goto(15)#4
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,3)#15
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#16
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#Constant(I,0)#17
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#ConditionalBranch(I,ne,5)#18
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,3)#5
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#6
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#CheckCast(Lsynoptic/model/EventNode;)#7
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#LocalStore(Ljava/lang/Object;,2)#8
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,0)#9
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#Get(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/PartitionGraph;,relations)#10
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,2)#11
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getNodeRelations,()Ljava/util/Set;)#12
synoptic.model.EventNode.getNodeRelations()Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.EventNode.getNodeRelations()Ljava/util/Set;#Get(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/model/EventNode;,transitionsByRelation)#1
synoptic.model.EventNode.getNodeRelations()Ljava/util/Set;#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,keySet,()Ljava/util/Set;)#2
synoptic.model.EventNode.getNodeRelations()Ljava/util/Set;#Return(Ljava/lang/Object;)#3
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#Invoke(INTERFACE,Ljava/util/Set;,addAll,(Ljava/util/Collection;)Z)#13
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#Pop(1)#14
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,0)#19
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#Get(Ljava/util/LinkedHashSet;,NONSTATIC,Lsynoptic/model/PartitionGraph;,partitions)#20
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,1)#21
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#Invoke(VIRTUAL,Ljava/util/LinkedHashSet;,add,(Ljava/lang/Object;)Z)#22
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#Pop(1)#23
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,0)#24
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,1)#25
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#Invoke(VIRTUAL,Lsynoptic/model/PartitionGraph;,clearNodeAdjacentsCache,(Lsynoptic/model/Partition;)V)#26
synoptic.model.PartitionGraph.clearNodeAdjacentsCache(Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.PartitionGraph.clearNodeAdjacentsCache(Lsynoptic/model/Partition;)V#Get(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/model/PartitionGraph;,transitionCache)#1
synoptic.model.PartitionGraph.clearNodeAdjacentsCache(Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,1)#2
synoptic.model.PartitionGraph.clearNodeAdjacentsCache(Lsynoptic/model/Partition;)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,remove,(Ljava/lang/Object;)Ljava/lang/Object;)#3
synoptic.model.PartitionGraph.clearNodeAdjacentsCache(Lsynoptic/model/Partition;)V#Pop(1)#4
synoptic.model.PartitionGraph.clearNodeAdjacentsCache(Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.model.PartitionGraph.clearNodeAdjacentsCache(Lsynoptic/model/Partition;)V#Get(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/model/PartitionGraph;,transitionCache)#6
synoptic.model.PartitionGraph.clearNodeAdjacentsCache(Lsynoptic/model/Partition;)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,entrySet,()Ljava/util/Set;)#7
synoptic.model.PartitionGraph.clearNodeAdjacentsCache(Lsynoptic/model/Partition;)V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#8
synoptic.model.PartitionGraph.clearNodeAdjacentsCache(Lsynoptic/model/Partition;)V#LocalStore(Ljava/lang/Object;,2)#9
synoptic.model.PartitionGraph.clearNodeAdjacentsCache(Lsynoptic/model/Partition;)V#Goto(22)#10
synoptic.model.PartitionGraph.clearNodeAdjacentsCache(Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,2)#22
synoptic.model.PartitionGraph.clearNodeAdjacentsCache(Lsynoptic/model/Partition;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#23
synoptic.model.PartitionGraph.clearNodeAdjacentsCache(Lsynoptic/model/Partition;)V#Constant(I,0)#24
synoptic.model.PartitionGraph.clearNodeAdjacentsCache(Lsynoptic/model/Partition;)V#ConditionalBranch(I,ne,11)#25
synoptic.model.PartitionGraph.clearNodeAdjacentsCache(Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,2)#11
synoptic.model.PartitionGraph.clearNodeAdjacentsCache(Lsynoptic/model/Partition;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#12
synoptic.model.PartitionGraph.clearNodeAdjacentsCache(Lsynoptic/model/Partition;)V#CheckCast(Ljava/util/Map$Entry;)#13
synoptic.model.PartitionGraph.clearNodeAdjacentsCache(Lsynoptic/model/Partition;)V#Invoke(INTERFACE,Ljava/util/Map$Entry;,getValue,()Ljava/lang/Object;)#14
synoptic.model.PartitionGraph.clearNodeAdjacentsCache(Lsynoptic/model/Partition;)V#CheckCast(Ljava/util/Set;)#15
synoptic.model.PartitionGraph.clearNodeAdjacentsCache(Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,1)#16
synoptic.model.PartitionGraph.clearNodeAdjacentsCache(Lsynoptic/model/Partition;)V#Invoke(INTERFACE,Ljava/util/Set;,contains,(Ljava/lang/Object;)Z)#17
synoptic.model.PartitionGraph.clearNodeAdjacentsCache(Lsynoptic/model/Partition;)V#Constant(I,0)#18
synoptic.model.PartitionGraph.clearNodeAdjacentsCache(Lsynoptic/model/Partition;)V#ConditionalBranch(I,eq,22)#19
synoptic.model.PartitionGraph.clearNodeAdjacentsCache(Lsynoptic/model/Partition;)V#Return(V)#26
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#Return(V)#27
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,1)#40
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,6)#41
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/PartitionGraph;,clearNodeAdjacentsCache,(Lsynoptic/model/Partition;)V)#42
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,1)#47
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,0)#48
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiSplit;,partition)#49
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/PartitionGraph;,clearNodeAdjacentsCache,(Lsynoptic/model/Partition;)V)#50
synoptic.model.PartitionGraph.clearNodeAdjacentsCache(Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,2)#20
synoptic.model.PartitionGraph.clearNodeAdjacentsCache(Lsynoptic/model/Partition;)V#Invoke(INTERFACE,Ljava/util/Iterator;,remove,()V)#21
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/main/SynopticOptions;,STATIC,Lsynoptic/main/Main;,options)#51
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,performExtraChecks)#52
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Constant(I,0)#53
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#ConditionalBranch(I,eq,57)#54
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#New(Lsynoptic/algorithms/graph/PartitionMultiMerge;,0)#57
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Dup(1,0)#58
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,0)#59
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiSplit;,partition)#60
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,3)#61
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(SPECIAL,Lsynoptic/algorithms/graph/PartitionMultiMerge;,<init>,(Lsynoptic/model/Partition;Ljava/util/ArrayList;)V)#62
synoptic.algorithms.graph.PartitionMultiMerge.<init>(Lsynoptic/model/Partition;Ljava/util/ArrayList;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.algorithms.graph.PartitionMultiMerge.<init>(Lsynoptic/model/Partition;Ljava/util/ArrayList;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
synoptic.algorithms.graph.PartitionMultiMerge.<init>(Lsynoptic/model/Partition;Ljava/util/ArrayList;)V#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.algorithms.graph.PartitionMultiMerge.<init>(Lsynoptic/model/Partition;Ljava/util/ArrayList;)V#LocalLoad(Ljava/lang/Object;,1)#3
synoptic.algorithms.graph.PartitionMultiMerge.<init>(Lsynoptic/model/Partition;Ljava/util/ArrayList;)V#Put(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiMerge;,retainedPartition)#4
synoptic.algorithms.graph.PartitionMultiMerge.<init>(Lsynoptic/model/Partition;Ljava/util/ArrayList;)V#LocalLoad(Ljava/lang/Object;,0)#5
synoptic.algorithms.graph.PartitionMultiMerge.<init>(Lsynoptic/model/Partition;Ljava/util/ArrayList;)V#LocalLoad(Ljava/lang/Object;,2)#6
synoptic.algorithms.graph.PartitionMultiMerge.<init>(Lsynoptic/model/Partition;Ljava/util/ArrayList;)V#Put(Ljava/util/ArrayList;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiMerge;,partitionsToMerge)#7
synoptic.algorithms.graph.PartitionMultiMerge.<init>(Lsynoptic/model/Partition;Ljava/util/ArrayList;)V#Return(V)#8
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Return(Ljava/lang/Object;)#63
synoptic.model.PartitionGraph.apply(Lsynoptic/algorithms/graph/IOperation;)Lsynoptic/algorithms/graph/IOperation;#Return(Ljava/lang/Object;)#12
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#LocalStore(Ljava/lang/Object;,5)#3
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#LocalLoad(Ljava/lang/Object;,0)#4
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#LocalLoad(Ljava/lang/Object;,1)#5
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Invoke(STATIC,Lsynoptic/invariants/TemporalInvariantSet;,getCounterExample,(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;)#6
synoptic.invariants.TemporalInvariantSet.getCounterExample(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Constant(Ljava/lang/String;,"getCounterExample")#0
synoptic.invariants.TemporalInvariantSet.getCounterExample(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Constant(I,1)#1
synoptic.invariants.TemporalInvariantSet.getCounterExample(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Invoke(STATIC,Lsynoptic/benchmarks/PerformanceMetrics;,createTask,(Ljava/lang/String;Z)Lsynoptic/benchmarks/TimedTask;)#2
synoptic.invariants.TemporalInvariantSet.getCounterExample(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalStore(Ljava/lang/Object;,2)#3
synoptic.invariants.TemporalInvariantSet.getCounterExample(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Get(Lsynoptic/main/SynopticOptions;,STATIC,Lsynoptic/main/Main;,options)#4
synoptic.invariants.TemporalInvariantSet.getCounterExample(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,useFSMChecker)#5
synoptic.invariants.TemporalInvariantSet.getCounterExample(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Constant(I,0)#6
synoptic.invariants.TemporalInvariantSet.getCounterExample(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#ConditionalBranch(I,eq,17)#7
synoptic.invariants.TemporalInvariantSet.getCounterExample(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,0)#8
synoptic.invariants.TemporalInvariantSet.getCounterExample(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#CheckCast(Lsynoptic/invariants/BinaryInvariant;)#9
synoptic.invariants.TemporalInvariantSet.getCounterExample(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,1)#10
synoptic.invariants.TemporalInvariantSet.getCounterExample(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Invoke(STATIC,Lsynoptic/invariants/fsmcheck/FsmModelChecker;,getCounterExample,(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;)#11
synoptic.invariants.TemporalInvariantSet.getCounterExample(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalStore(Ljava/lang/Object;,5)#12
synoptic.invariants.TemporalInvariantSet.getCounterExample(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,2)#13
synoptic.invariants.TemporalInvariantSet.getCounterExample(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Invoke(VIRTUAL,Lsynoptic/benchmarks/TimedTask;,stop,()V)#14
synoptic.invariants.TemporalInvariantSet.getCounterExample(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#LocalLoad(Ljava/lang/Object;,5)#15
synoptic.invariants.TemporalInvariantSet.getCounterExample(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Return(Ljava/lang/Object;)#16
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#LocalStore(Ljava/lang/Object;,6)#7
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#LocalLoad(Ljava/lang/Object;,1)#8
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#LocalLoad(Ljava/lang/Object;,5)#9
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Invoke(VIRTUAL,Lsynoptic/model/PartitionGraph;,apply,(Lsynoptic/algorithms/graph/IOperation;)Lsynoptic/algorithms/graph/IOperation;)#10
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Ljava/util/ArrayList;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiMerge;,partitionsToMerge)#1
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Ljava/util/ArrayList;,iterator,()Ljava/util/Iterator;)#2
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalStore(Ljava/lang/Object;,3)#3
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Goto(22)#4
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,3)#22
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#23
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Constant(I,0)#24
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#ConditionalBranch(I,ne,5)#25
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,3)#5
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#6
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#CheckCast(Lsynoptic/model/Partition;)#7
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalStore(Ljava/lang/Object;,2)#8
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,0)#9
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiMerge;,retainedPartition)#10
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,2)#11
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getEventNodes,()Ljava/util/Set;)#12
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,addEventNodes,(Ljava/util/Collection;)V)#13
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,2)#14
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,removeAllEventNodes,()V)#15
synoptic.model.Partition.removeAllEventNodes()V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.Partition.removeAllEventNodes()V#Get(Ljava/util/Set;,NONSTATIC,Lsynoptic/model/Partition;,events)#1
synoptic.model.Partition.removeAllEventNodes()V#Invoke(INTERFACE,Ljava/util/Set;,clear,()V)#2
synoptic.model.Partition.removeAllEventNodes()V#LocalLoad(Ljava/lang/Object;,0)#3
synoptic.model.Partition.removeAllEventNodes()V#Constant(I,0)#4
synoptic.model.Partition.removeAllEventNodes()V#Put(Z,NONSTATIC,Lsynoptic/model/Partition;,initialized)#5
synoptic.model.Partition.removeAllEventNodes()V#Return(V)#6
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,1)#16
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,2)#17
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/PartitionGraph;,removePartition,(Lsynoptic/model/Partition;)V)#18
synoptic.model.PartitionGraph.removePartition(Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.PartitionGraph.removePartition(Lsynoptic/model/Partition;)V#Get(Ljava/util/LinkedHashSet;,NONSTATIC,Lsynoptic/model/PartitionGraph;,partitions)#1
synoptic.model.PartitionGraph.removePartition(Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,1)#2
synoptic.model.PartitionGraph.removePartition(Lsynoptic/model/Partition;)V#Invoke(VIRTUAL,Ljava/util/LinkedHashSet;,remove,(Ljava/lang/Object;)Z)#3
synoptic.model.PartitionGraph.removePartition(Lsynoptic/model/Partition;)V#Pop(1)#4
synoptic.model.PartitionGraph.removePartition(Lsynoptic/model/Partition;)V#Return(V)#5
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,1)#19
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,2)#20
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/PartitionGraph;,clearNodeAdjacentsCache,(Lsynoptic/model/Partition;)V)#21
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,1)#26
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,0)#27
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiMerge;,retainedPartition)#28
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/PartitionGraph;,removeFromCache,(Lsynoptic/model/Partition;)V)#29
synoptic.model.PartitionGraph.removeFromCache(Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.model.PartitionGraph.removeFromCache(Lsynoptic/model/Partition;)V#Get(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/model/PartitionGraph;,transitionCache)#1
synoptic.model.PartitionGraph.removeFromCache(Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,1)#2
synoptic.model.PartitionGraph.removeFromCache(Lsynoptic/model/Partition;)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,remove,(Ljava/lang/Object;)Ljava/lang/Object;)#3
synoptic.model.PartitionGraph.removeFromCache(Lsynoptic/model/Partition;)V#Pop(1)#4
synoptic.model.PartitionGraph.removeFromCache(Lsynoptic/model/Partition;)V#Return(V)#5
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Constant(L;,null)#30
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Return(Ljava/lang/Object;)#31
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Pop(1)#11
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#LocalLoad(Ljava/lang/Object;,6)#12
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Constant(L;,null)#13
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#ConditionalBranch(Ljava/lang/Object;,eq,17)#14
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Constant(I,0)#15
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Return(I)#16
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Constant(I,0)#74
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#ConditionalBranch(I,eq,81)#75
synoptic.benchmarks.PerformanceMetrics.getAccumulativity(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#8
synoptic.benchmarks.PerformanceMetrics.getAccumulativity(Ljava/lang/String;)Z#Get(Ljava/util/LinkedHashMap;,NONSTATIC,Lsynoptic/benchmarks/PerformanceMetrics;,accumulativity)#9
synoptic.benchmarks.PerformanceMetrics.getAccumulativity(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#10
synoptic.benchmarks.PerformanceMetrics.getAccumulativity(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#11
synoptic.benchmarks.PerformanceMetrics.getAccumulativity(Ljava/lang/String;)Z#CheckCast(Ljava/lang/Boolean;)#12
synoptic.benchmarks.PerformanceMetrics.getAccumulativity(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/Boolean;,booleanValue,()Z)#13
synoptic.benchmarks.PerformanceMetrics.getAccumulativity(Ljava/lang/String;)Z#Return(I)#14
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,2)#57
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#LocalLoad(Ljava/lang/Object;,5)#58
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(VIRTUAL,Lsynoptic/algorithms/graph/PartitionSplit;,addEventToSplit,(Lsynoptic/model/EventNode;)V)#59
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#LocalLoad(Ljava/lang/Object;,2)#17
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#LocalLoad(Ljava/lang/Object;,3)#18
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Invoke(VIRTUAL,Ljava/util/HashMap;,containsKey,(Ljava/lang/Object;)Z)#19
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Constant(I,0)#20
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#ConditionalBranch(I,eq,39)#21
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#LocalLoad(Ljava/lang/Object;,2)#39
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#LocalLoad(Ljava/lang/Object;,3)#40
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#LocalLoad(Ljava/lang/Object;,4)#41
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Invoke(VIRTUAL,Ljava/util/HashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#42
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Pop(1)#43
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Get(Ljava/util/logging/Logger;,STATIC,Lsynoptic/algorithms/bisim/Bisimulation;,logger)#44
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#New(Ljava/lang/StringBuilder;,0)#45
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Dup(1,0)#46
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Constant(Ljava/lang/String;,"New split by partition: ")#47
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#48
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#LocalLoad(Ljava/lang/Object;,4)#49
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Invoke(VIRTUAL,Lsynoptic/algorithms/graph/PartitionMultiSplit;,toString,()Ljava/lang/String;)#50
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#New(Ljava/lang/StringBuilder;,0)#0
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Dup(1,0)#1
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#New(Ljava/lang/StringBuilder;,0)#2
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Dup(1,0)#3
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Constant(Ljava/lang/String;,"S.")#4
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#5
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#6
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiSplit;,partition)#7
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getEType,()Lsynoptic/model/EventType;)#8
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#9
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Constant(Ljava/lang/String;,".")#10
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#11
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#12
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#13
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#LocalStore(Ljava/lang/Object;,1)#14
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#15
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Get(Ljava/util/ArrayList;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiSplit;,partitioning)#16
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/util/ArrayList;,iterator,()Ljava/util/Iterator;)#17
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#LocalStore(Ljava/lang/Object;,3)#18
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Goto(36)#19
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#36
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#37
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Constant(I,0)#38
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#ConditionalBranch(I,ne,20)#39
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#20
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#21
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#CheckCast(Ljava/util/Set;)#22
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#LocalStore(Ljava/lang/Object;,2)#23
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#24
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#New(Ljava/lang/StringBuilder;,0)#25
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Dup(1,0)#26
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#27
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/Set;,size,()I)#28
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Invoke(STATIC,Ljava/lang/String;,valueOf,(I)Ljava/lang/String;)#29
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#30
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Constant(Ljava/lang/String;,"/")#31
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#32
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#33
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#34
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Pop(1)#35
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#40
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#41
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Constant(I,0)#42
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#43
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,length,()I)#44
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Constant(I,1)#45
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#BinaryOp(I,sub)#46
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,substring,(II)Ljava/lang/String;)#47
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#48
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#51
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#52
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Invoke(VIRTUAL,Ljava/util/logging/Logger;,info,(Ljava/lang/String;)V)#53
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Constant(I,1)#54
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Return(I)#55
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,3)#76
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,5)#77
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/invariants/ITemporalInvariant;,NONSTATIC,Lsynoptic/invariants/CExamplePath;,invariant)#78
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#79
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Pop(1)#80
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#LocalLoad(Ljava/lang/Object;,2)#22
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#LocalLoad(Ljava/lang/Object;,3)#23
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Invoke(VIRTUAL,Ljava/util/HashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#24
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#CheckCast(Lsynoptic/algorithms/graph/PartitionMultiSplit;)#25
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#LocalLoad(Ljava/lang/Object;,4)#26
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Invoke(VIRTUAL,Lsynoptic/algorithms/graph/PartitionMultiSplit;,incorporate,(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V)#27
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#LocalLoad(Ljava/lang/Object;,1)#0
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Invoke(VIRTUAL,Lsynoptic/algorithms/graph/PartitionMultiSplit;,getPartition,()Lsynoptic/model/Partition;)#1
synoptic.algorithms.graph.PartitionMultiSplit.getPartition()Lsynoptic/model/Partition;#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.algorithms.graph.PartitionMultiSplit.getPartition()Lsynoptic/model/Partition;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiSplit;,partition)#1
synoptic.algorithms.graph.PartitionMultiSplit.getPartition()Lsynoptic/model/Partition;#Return(Ljava/lang/Object;)#2
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#LocalLoad(Ljava/lang/Object;,0)#2
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiSplit;,partition)#3
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#ConditionalBranch(Ljava/lang/Object;,eq,9)#4
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#New(Ljava/util/ArrayList;,0)#9
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Dup(1,0)#10
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#11
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#LocalStore(Ljava/lang/Object;,2)#12
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#LocalLoad(Ljava/lang/Object;,0)#13
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Get(Ljava/util/ArrayList;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiSplit;,partitioning)#14
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Invoke(VIRTUAL,Ljava/util/ArrayList;,iterator,()Ljava/util/Iterator;)#15
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#LocalStore(Ljava/lang/Object;,4)#16
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Goto(52)#17
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#LocalLoad(Ljava/lang/Object;,4)#52
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#53
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Constant(I,0)#54
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#ConditionalBranch(I,ne,18)#55
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#LocalLoad(Ljava/lang/Object;,4)#18
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#19
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#CheckCast(Ljava/util/Set;)#20
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#LocalStore(Ljava/lang/Object;,3)#21
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#LocalLoad(Ljava/lang/Object;,1)#22
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Get(Ljava/util/ArrayList;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiSplit;,partitioning)#23
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Invoke(VIRTUAL,Ljava/util/ArrayList;,iterator,()Ljava/util/Iterator;)#24
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#LocalStore(Ljava/lang/Object;,6)#25
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Goto(48)#26
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#LocalLoad(Ljava/lang/Object;,6)#48
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#49
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Constant(I,0)#50
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#ConditionalBranch(I,ne,27)#51
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#LocalLoad(Ljava/lang/Object;,6)#27
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#28
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#CheckCast(Ljava/util/Set;)#29
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#LocalStore(Ljava/lang/Object;,5)#30
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#New(Ljava/util/LinkedHashSet;,0)#31
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Dup(1,0)#32
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#LocalLoad(Ljava/lang/Object;,3)#33
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Invoke(SPECIAL,Ljava/util/LinkedHashSet;,<init>,(Ljava/util/Collection;)V)#34
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#LocalStore(Ljava/lang/Object;,7)#35
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#LocalLoad(Ljava/lang/Object;,3)#36
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#LocalLoad(Ljava/lang/Object;,5)#37
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Invoke(INTERFACE,Ljava/util/Set;,removeAll,(Ljava/util/Collection;)Z)#38
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Pop(1)#39
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#LocalLoad(Ljava/lang/Object;,7)#40
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#LocalLoad(Ljava/lang/Object;,5)#41
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Invoke(INTERFACE,Ljava/util/Set;,retainAll,(Ljava/util/Collection;)Z)#42
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Pop(1)#43
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#LocalLoad(Ljava/lang/Object;,2)#44
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#LocalLoad(Ljava/lang/Object;,7)#45
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#46
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Pop(1)#47
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#LocalLoad(Ljava/lang/Object;,0)#56
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Get(Ljava/util/ArrayList;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiSplit;,partitioning)#57
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#LocalLoad(Ljava/lang/Object;,2)#58
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Invoke(VIRTUAL,Ljava/util/ArrayList;,addAll,(Ljava/util/Collection;)Z)#59
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Pop(1)#60
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#LocalLoad(Ljava/lang/Object;,0)#61
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Get(Ljava/util/ArrayList;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiSplit;,partitioning)#62
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Invoke(VIRTUAL,Ljava/util/ArrayList;,iterator,()Ljava/util/Iterator;)#63
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#LocalStore(Ljava/lang/Object;,3)#64
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Goto(74)#65
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#LocalLoad(Ljava/lang/Object;,3)#74
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#75
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Constant(I,0)#76
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#ConditionalBranch(I,ne,66)#77
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#LocalLoad(Ljava/lang/Object;,3)#66
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#67
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#CheckCast(Ljava/util/Set;)#68
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Invoke(INTERFACE,Ljava/util/Set;,size,()I)#69
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Constant(I,0)#70
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#ConditionalBranch(I,ne,74)#71
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#LocalLoad(Ljava/lang/Object;,3)#72
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Invoke(INTERFACE,Ljava/util/Iterator;,remove,()V)#73
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Return(V)#78
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Get(Ljava/util/logging/Logger;,STATIC,Lsynoptic/algorithms/bisim/Bisimulation;,logger)#28
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#New(Ljava/lang/StringBuilder;,0)#29
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Dup(1,0)#30
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Constant(Ljava/lang/String;,"Incorporating new split by partition: ")#31
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#32
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#LocalLoad(Ljava/lang/Object;,4)#33
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Invoke(VIRTUAL,Lsynoptic/algorithms/graph/PartitionMultiSplit;,toString,()Ljava/lang/String;)#34
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#35
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#36
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Invoke(VIRTUAL,Ljava/util/logging/Logger;,info,(Ljava/lang/String;)V)#37
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Goto(54)#38
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,4)#89
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Return(Ljava/lang/Object;)#90
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalStore(Ljava/lang/Object;,5)#38
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Constant(Ljava/lang/String;,"")#39
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalStore(Ljava/lang/Object;,6)#40
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalLoad(Ljava/lang/Object;,3)#41
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,size,()I)#42
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Constant(I,0)#43
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#ConditionalBranch(I,ne,73)#44
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Constant(I,0)#73
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalStore(I,7)#74
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalLoad(Ljava/lang/Object;,3)#75
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,values,()Ljava/util/Collection;)#76
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(INTERFACE,Ljava/util/Collection;,iterator,()Ljava/util/Iterator;)#77
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalStore(Ljava/lang/Object;,9)#78
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Goto(109)#79
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalLoad(Ljava/lang/Object;,9)#109
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#110
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Constant(I,0)#111
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#ConditionalBranch(I,ne,80)#112
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalLoad(Ljava/lang/Object;,9)#80
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#81
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#CheckCast(Lsynoptic/algorithms/graph/PartitionMultiSplit;)#82
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalStore(Ljava/lang/Object;,8)#83
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalLoad(Ljava/lang/Object;,1)#84
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalLoad(Ljava/lang/Object;,8)#85
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Lsynoptic/model/PartitionGraph;,apply,(Lsynoptic/algorithms/graph/IOperation;)Lsynoptic/algorithms/graph/IOperation;)#86
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Pop(1)#87
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Get(Ljava/util/logging/Logger;,STATIC,Lsynoptic/algorithms/bisim/Bisimulation;,logger)#88
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#New(Ljava/lang/StringBuilder;,0)#89
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Dup(1,0)#90
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Constant(Ljava/lang/String;,"split[")#91
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#92
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalLoad(I,0)#93
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#94
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Constant(Ljava/lang/String;,".")#95
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#96
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalLoad(I,7)#97
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#98
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Constant(Ljava/lang/String;,"] : ")#99
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#100
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalLoad(Ljava/lang/Object;,8)#101
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#102
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#103
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Ljava/util/logging/Logger;,fine,(Ljava/lang/String;)V)#104
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalLoad(I,7)#105
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Constant(I,1)#106
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#BinaryOp(I,add)#107
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalStore(I,7)#108
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#New(Ljava/lang/StringBuilder;,0)#113
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Dup(1,0)#114
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalLoad(Ljava/lang/Object;,6)#115
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#116
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#117
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Constant(Ljava/lang/String;,"split[")#118
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#119
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalLoad(I,0)#120
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#121
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Constant(Ljava/lang/String;,"] ")#122
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#123
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Constant(Ljava/lang/String;,"new invs satisfied: ")#124
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#125
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalLoad(Ljava/lang/Object;,4)#126
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Ljava/util/LinkedHashSet;,size,()I)#127
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#128
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#129
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalStore(Ljava/lang/Object;,6)#130
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Get(Ljava/util/logging/Logger;,STATIC,Lsynoptic/algorithms/bisim/Bisimulation;,logger)#131
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalLoad(Ljava/lang/Object;,6)#132
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Ljava/util/logging/Logger;,fine,(Ljava/lang/String;)V)#133
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Get(Lsynoptic/main/SynopticOptions;,STATIC,Lsynoptic/main/Main;,options)#134
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,dumpIntermediateStages)#135
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Constant(I,0)#136
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#ConditionalBranch(I,eq,145)#137
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalLoad(I,0)#145
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Constant(I,1)#146
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#BinaryOp(I,add)#147
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Return(I)#148
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalStore(I,2)#104
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalLoad(I,2)#105
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#LocalLoad(I,3)#106
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#ConditionalBranch(I,ne,33)#107
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalLoad(Ljava/lang/Object;,5)#45
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Constant(L;,null)#46
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#ConditionalBranch(Ljava/lang/Object;,ne,53)#47
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#New(Ljava/lang/StringBuilder;,0)#53
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Dup(1,0)#54
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalLoad(Ljava/lang/Object;,6)#55
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#56
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#57
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Constant(Ljava/lang/String;,"split[")#58
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#59
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalLoad(I,0)#60
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#61
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Constant(Ljava/lang/String;,"] : arbitrary split: ")#62
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#63
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalLoad(Ljava/lang/Object;,5)#64
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#65
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#66
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalStore(Ljava/lang/Object;,6)#67
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalLoad(Ljava/lang/Object;,1)#68
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#LocalLoad(Ljava/lang/Object;,5)#69
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Lsynoptic/model/PartitionGraph;,apply,(Lsynoptic/algorithms/graph/IOperation;)Lsynoptic/algorithms/graph/IOperation;)#70
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Z,STATIC,Lsynoptic/algorithms/graph/PartitionSplit;,$assertionsDisabled)#0
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Constant(I,0)#1
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#ConditionalBranch(I,ne,11)#2
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,0)#11
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,newPartition)#12
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Constant(L;,null)#13
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#ConditionalBranch(Ljava/lang/Object;,ne,22)#14
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,0)#15
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#New(Lsynoptic/model/Partition;,0)#16
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Dup(1,0)#17
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,0)#18
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/algorithms/graph/PartitionSplit;,getSplitEvents,()Ljava/util/Set;)#19
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(SPECIAL,Lsynoptic/model/Partition;,<init>,(Ljava/util/Set;)V)#20
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Put(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,newPartition)#21
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,0)#22
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,newPartition)#23
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,0)#24
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/algorithms/graph/PartitionSplit;,getSplitEvents,()Ljava/util/Set;)#25
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,addEventNodes,(Ljava/util/Collection;)V)#26
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,0)#27
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,partitionToSplit)#28
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,0)#29
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/algorithms/graph/PartitionSplit;,getSplitEvents,()Ljava/util/Set;)#30
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,removeEventNodes,(Ljava/util/Set;)V)#31
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,1)#32
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,0)#33
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,newPartition)#34
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/PartitionGraph;,add,(Lsynoptic/model/Partition;)V)#35
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,1)#36
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,0)#37
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,partitionToSplit)#38
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/PartitionGraph;,clearNodeAdjacentsCache,(Lsynoptic/model/Partition;)V)#39
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,1)#40
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,0)#41
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,newPartition)#42
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/PartitionGraph;,clearNodeAdjacentsCache,(Lsynoptic/model/Partition;)V)#43
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#New(Lsynoptic/algorithms/graph/PartitionMerge;,0)#44
synoptic.algorithms.graph.PartitionMerge.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@19e06a9e)#0
synoptic.algorithms.graph.PartitionMerge.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
synoptic.algorithms.graph.PartitionMerge.<clinit>()V#Constant(I,0)#2
synoptic.algorithms.graph.PartitionMerge.<clinit>()V#ConditionalBranch(I,ne,6)#3
synoptic.algorithms.graph.PartitionMerge.<clinit>()V#Constant(I,1)#4
synoptic.algorithms.graph.PartitionMerge.<clinit>()V#Goto(7)#5
synoptic.algorithms.graph.PartitionMerge.<clinit>()V#Put(Z,STATIC,Lsynoptic/algorithms/graph/PartitionMerge;,$assertionsDisabled)#7
synoptic.algorithms.graph.PartitionMerge.<clinit>()V#Return(V)#8
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Dup(1,0)#45
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,0)#46
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,partitionToSplit)#47
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#LocalLoad(Ljava/lang/Object;,0)#48
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,newPartition)#49
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(SPECIAL,Lsynoptic/algorithms/graph/PartitionMerge;,<init>,(Lsynoptic/model/Partition;Lsynoptic/model/Partition;)V)#50
synoptic.algorithms.graph.PartitionMerge.<init>(Lsynoptic/model/Partition;Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,0)#0
synoptic.algorithms.graph.PartitionMerge.<init>(Lsynoptic/model/Partition;Lsynoptic/model/Partition;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
synoptic.algorithms.graph.PartitionMerge.<init>(Lsynoptic/model/Partition;Lsynoptic/model/Partition;)V#Get(Z,STATIC,Lsynoptic/algorithms/graph/PartitionMerge;,$assertionsDisabled)#2
synoptic.algorithms.graph.PartitionMerge.<init>(Lsynoptic/model/Partition;Lsynoptic/model/Partition;)V#Constant(I,0)#3
synoptic.algorithms.graph.PartitionMerge.<init>(Lsynoptic/model/Partition;Lsynoptic/model/Partition;)V#ConditionalBranch(I,ne,17)#4
synoptic.algorithms.graph.PartitionMerge.<init>(Lsynoptic/model/Partition;Lsynoptic/model/Partition;)V#Get(Z,STATIC,Lsynoptic/algorithms/graph/PartitionMerge;,$assertionsDisabled)#17
synoptic.algorithms.graph.PartitionMerge.<init>(Lsynoptic/model/Partition;Lsynoptic/model/Partition;)V#Constant(I,0)#18
synoptic.algorithms.graph.PartitionMerge.<init>(Lsynoptic/model/Partition;Lsynoptic/model/Partition;)V#ConditionalBranch(I,ne,33)#19
synoptic.algorithms.graph.PartitionMerge.<init>(Lsynoptic/model/Partition;Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,0)#33
synoptic.algorithms.graph.PartitionMerge.<init>(Lsynoptic/model/Partition;Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,1)#34
synoptic.algorithms.graph.PartitionMerge.<init>(Lsynoptic/model/Partition;Lsynoptic/model/Partition;)V#Put(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMerge;,retained)#35
synoptic.algorithms.graph.PartitionMerge.<init>(Lsynoptic/model/Partition;Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,0)#36
synoptic.algorithms.graph.PartitionMerge.<init>(Lsynoptic/model/Partition;Lsynoptic/model/Partition;)V#LocalLoad(Ljava/lang/Object;,2)#37
synoptic.algorithms.graph.PartitionMerge.<init>(Lsynoptic/model/Partition;Lsynoptic/model/Partition;)V#Put(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMerge;,removed)#38
synoptic.algorithms.graph.PartitionMerge.<init>(Lsynoptic/model/Partition;Lsynoptic/model/Partition;)V#Return(V)#39
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Return(Ljava/lang/Object;)#51
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Pop(1)#71
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Goto(131)#72
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Constant(L;,null)#49
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Return(Ljava/lang/Object;)#50
