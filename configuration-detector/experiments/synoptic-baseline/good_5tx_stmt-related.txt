synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,help)#4
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,allHelp)#7
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,version)#10
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,logLvlQuiet)#13
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,useFSMChecker)#19
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Ljava/lang/Long;,NONSTATIC,Lsynoptic/main/SynopticOptions;,randomSeed)#22
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/SynopticOptions;,separateVTimeIndexSets)#25
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/SynopticOptions;,separatorRegExp)#28
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Ljava/util/List;,NONSTATIC,Lsynoptic/main/SynopticOptions;,regExps)#31
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/SynopticOptions;,partitionRegExp)#34
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,ignoreNonMatchingLines)#40
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,recoverFromParseErrors)#43
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,debugParse)#46
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/SynopticOptions;,argsFilename)#49
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/SynopticOptions;,outputPathPrefix)#52
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,outputInvariantsToFile)#55
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,exportAsGML)#58
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/SynopticOptions;,dotExecutablePath)#61
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,outputEdgeLabels)#64
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,showTerminalNode)#67
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,showInitialNode)#70
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,dumpInvariants)#73
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,dumpInitialGraphDotFile)#76
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,dumpInitialGraphPngFile)#79
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,dumpInitialPartitionGraph)#82
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,dumpIntermediateStages)#85
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,logLvlExtraVerbose)#88
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,useTransitiveClosureMining)#91
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,mineNeverConcurrentWithInv)#94
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,onlyMineInvariants)#97
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,noCoarsening)#100
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,doBenchmarking)#103
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,internCommonStrings)#106
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,runTests)#109
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,runAllTests)#112
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,performExtraChecks)#115
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Put(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,noRefinement)#118
synoptic.main.Options.setOptions([Ljava/lang/String;)V#Invoke(VIRTUAL,Lsynoptic/main/Options;,getArgsFilename,()Ljava/lang/String;)#19
synoptic.main.SynopticOptions.getArgsFilename()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/SynopticOptions;,argsFilename)#1
synoptic.main.SynopticOptions.getArgsFilename()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
synoptic.main.Options.setOptions([Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,eq,43)#21
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#Get(Ljava/lang/Long;,NONSTATIC,Lsynoptic/main/SynopticOptions;,randomSeed)#136
synoptic.main.SynopticOptions.<init>([Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,ne,143)#138
synoptic.main.Main.setUpLogging()V#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,logLvlQuiet)#46
synoptic.main.Main.setUpLogging()V#ConditionalBranch(I,eq,53)#48
synoptic.main.Main.setUpLogging()V#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,logLvlExtraVerbose)#62
synoptic.main.Main.setUpLogging()V#ConditionalBranch(I,eq,69)#64
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,allHelp)#4
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#ConditionalBranch(I,eq,11)#6
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,help)#12
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#ConditionalBranch(I,eq,19)#14
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,version)#20
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#ConditionalBranch(I,eq,42)#22
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,exportAsGML)#43
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#ConditionalBranch(I,eq,51)#45
synoptic.model.export.GraphExportFormatter.<init>()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#58
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,runAllTests)#56
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#ConditionalBranch(I,eq,70)#58
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,runTests)#71
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#ConditionalBranch(I,eq,79)#73
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,dumpIntermediateStages)#97
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#ConditionalBranch(I,eq,116)#99
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,logLvlExtraVerbose)#121
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#ConditionalBranch(I,eq,126)#123
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Get(Ljava/lang/Long;,NONSTATIC,Lsynoptic/main/SynopticOptions;,randomSeed)#129
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Invoke(VIRTUAL,Ljava/lang/Long;,longValue,()J)#130
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Get(Ljava/lang/Long;,NONSTATIC,Lsynoptic/main/SynopticOptions;,randomSeed)#139
synoptic.main.Main.processArgs(Lsynoptic/main/SynopticOptions;)Lsynoptic/main/Main;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#140
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Ljava/util/List;,NONSTATIC,Lsynoptic/main/SynopticOptions;,regExps)#3
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/SynopticOptions;,partitionRegExp)#5
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/SynopticOptions;,separatorRegExp)#7
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Invoke(SPECIAL,Lsynoptic/main/TraceParser;,<init>,(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V)#8
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/regex/Pattern;,matcher,(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;)#9
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#44
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,substring,(II)Ljava/lang/String;)#45
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#46
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#27
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,isEmpty,()Z)#34
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#38
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/regex/Matcher;,replaceAll,(Ljava/lang/String;)Ljava/lang/String;)#21
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/regex/Pattern;,matcher,(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;)#25
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(STATIC,Lsynoptic/main/TraceParser;,detectListDuplicates,(Ljava/util/List;Ljava/lang/String;)V)#161
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/regex/Matcher;,replaceAll,(Ljava/lang/String;)Ljava/lang/String;)#171
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/regex/Pattern;,matcher,(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;)#175
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/regex/Matcher;,replaceAll,(Ljava/lang/String;)Ljava/lang/String;)#196
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/regex/Pattern;,matcher,(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;)#200
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/regex/Matcher;,replaceAll,(Ljava/lang/String;)Ljava/lang/String;)#217
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/regex/Pattern;,matcher,(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;)#226
synoptic.util.NamedPattern.buildStandardPattern(Ljava/lang/String;)Ljava/util/regex/Pattern;#Invoke(VIRTUAL,Ljava/util/regex/Matcher;,replaceAll,(Ljava/lang/String;)Ljava/lang/String;)#4
synoptic.util.NamedPattern.buildStandardPattern(Ljava/lang/String;)Ljava/util/regex/Pattern;#Invoke(VIRTUAL,Ljava/util/regex/Pattern;,matcher,(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;)#8
synoptic.util.NamedPattern.buildStandardPattern(Ljava/lang/String;)Ljava/util/regex/Pattern;#Invoke(STATIC,Ljava/util/regex/Pattern;,compile,(Ljava/lang/String;)Ljava/util/regex/Pattern;)#59
synoptic.util.NamedPattern.extractGroupNames(Ljava/lang/String;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/util/regex/Matcher;,group,(I)Ljava/lang/String;)#12
synoptic.util.NamedPattern.extractGroupNames(Ljava/lang/String;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#13
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#322
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#CheckCast(Ljava/lang/String;)#323
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#327
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#352
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#CheckCast(Ljava/lang/String;)#353
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,contains,(Ljava/lang/Object;)Z)#357
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#403
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#CheckCast(Ljava/lang/String;)#404
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#408
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,contains,(Ljava/lang/Object;)Z)#415
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,ne,461)#458
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/TraceParser;,selectedTimeGroup)#462
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,ne,491)#464
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/TraceParser;,selectedTimeGroup)#467
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/TraceParser;,selectedTimeGroup)#469
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#471
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#551
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#CheckCast(Ljava/lang/String;)#552
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,startsWith,(Ljava/lang/String;)Z)#556
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,debugParse)#611
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#ConditionalBranch(I,eq,684)#613
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/TraceParser;,selectedTimeGroup)#492
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#494
synoptic.main.TraceParser.addRegex(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#529
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#Invoke(VIRTUAL,Lsynoptic/main/TraceParser;,setPartitionsMap,(Ljava/lang/String;)V)#63
synoptic.main.TraceParser.setPartitionsMap(Ljava/lang/String;)V#Invoke(SPECIAL,Lsynoptic/util/NamedSubstitution;,<init>,(Ljava/lang/String;)V)#4
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,substring,(II)Ljava/lang/String;)#22
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#23
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/regex/Matcher;,group,(I)Ljava/lang/String;)#29
synoptic.util.NamedSubstitution.<init>(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#30
synoptic.main.TraceParser.<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,eq,97)#85
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#12
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#CheckCast(Ljava/lang/String;)#13
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#21
synoptic.main.Main.parseEvents(Lsynoptic/main/TraceParser;Ljava/util/List;)Ljava/util/List;#Invoke(STATIC,Lsynoptic/main/Main;,getFiles,(Ljava/lang/String;)[Ljava/io/File;)#25
synoptic.main.Main.getFiles(Ljava/lang/String;)[Ljava/io/File;#Invoke(VIRTUAL,Ljava/lang/String;,indexOf,(Ljava/lang/String;)I)#2
synoptic.main.Main.getFiles(Ljava/lang/String;)[Ljava/io/File;#Invoke(SPECIAL,Ljava/io/File;,<init>,(Ljava/lang/String;)V)#14
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#15
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#CheckCast(Ljava/util/Map;)#16
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Invoke(INTERFACE,Ljava/util/Map;,keySet,()Ljava/util/Set;)#19
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,internCommonStrings)#50
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#ConditionalBranch(I,eq,56)#52
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#10
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#CheckCast(Lsynoptic/util/NamedPattern;)#11
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(VIRTUAL,Lsynoptic/util/NamedPattern;,matcher,(Ljava/lang/CharSequence;)Lsynoptic/util/NamedMatcher;)#13
synoptic.util.NamedPattern.matcher(Ljava/lang/CharSequence;)Lsynoptic/util/NamedMatcher;#Invoke(SPECIAL,Lsynoptic/util/NamedMatcher;,<init>,(Lsynoptic/util/NamedPattern;Ljava/lang/CharSequence;)V)#4
synoptic.util.NamedMatcher.<init>(Lsynoptic/util/NamedPattern;Ljava/lang/CharSequence;)V#Put(Lsynoptic/util/NamedPattern;,NONSTATIC,Lsynoptic/util/NamedMatcher;,parentPattern)#4
synoptic.util.NamedMatcher.<init>(Lsynoptic/util/NamedPattern;Ljava/lang/CharSequence;)V#Invoke(VIRTUAL,Lsynoptic/util/NamedPattern;,pattern,()Ljava/util/regex/Pattern;)#7
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#23
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#CheckCast(Ljava/util/LinkedHashMap;)#24
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,clone,()Ljava/lang/Object;)#25
synoptic.util.NamedMatcher.toMatchResult()Lsynoptic/util/INamedMatchResult;#Get(Lsynoptic/util/NamedPattern;,NONSTATIC,Lsynoptic/util/NamedMatcher;,parentPattern)#3
synoptic.util.NamedMatcher.toMatchResult()Lsynoptic/util/INamedMatchResult;#Invoke(SPECIAL,Lsynoptic/util/NamedMatcher;,<init>,(Lsynoptic/util/NamedPattern;Ljava/util/regex/MatchResult;)V)#7
synoptic.util.NamedMatcher.<init>(Lsynoptic/util/NamedPattern;Ljava/util/regex/MatchResult;)V#Put(Lsynoptic/util/NamedPattern;,NONSTATIC,Lsynoptic/util/NamedMatcher;,parentPattern)#4
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#Get(Lsynoptic/util/NamedPattern;,NONSTATIC,Lsynoptic/util/NamedMatcher;,parentPattern)#8
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#Invoke(VIRTUAL,Lsynoptic/util/NamedPattern;,groupNames,()Ljava/util/List;)#9
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#13
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#CheckCast(Ljava/lang/String;)#14
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#Invoke(VIRTUAL,Ljava/util/regex/Matcher;,group,(I)Ljava/lang/String;)#19
synoptic.util.NamedMatcher.namedGroups()Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#24
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#35
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#CheckCast(Ljava/util/Map;)#36
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map;,entrySet,()Ljava/util/Set;)#37
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#142
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#ConditionalBranch(Ljava/lang/Object;,eq,185)#144
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,internCommonStrings)#186
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#ConditionalBranch(I,eq,196)#188
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#191
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#CheckCast(Ljava/lang/String;)#192
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(VIRTUAL,Ljava/lang/String;,intern,()Ljava/lang/String;)#193
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#ConditionalBranch(Ljava/lang/Object;,ne,206)#203
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/TraceParser;,selectedTimeGroup)#207
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#209
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(SPECIAL,Lsynoptic/model/StringEventType;,<init>,(Ljava/lang/String;)V)#243
synoptic.model.StringEventType.<init>(Ljava/lang/String;)V#Invoke(SPECIAL,Lsynoptic/model/StringEventType;,<init>,(Ljava/lang/String;ZZ)V)#4
synoptic.model.StringEventType.<init>(Ljava/lang/String;ZZ)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/StringEventType;,eType)#6
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#267
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#CheckCast(Ljava/lang/String;)#268
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(VIRTUAL,Ljava/lang/String;,startsWith,(Ljava/lang/String;)Z)#272
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/TraceParser;,selectedTimeGroup)#348
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#ConditionalBranch(Ljava/lang/Object;,ne,357)#350
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map$Entry;,getKey,()Ljava/lang/Object;)#557
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#CheckCast(Ljava/lang/String;)#558
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#562
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#567
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map$Entry;,getValue,()Ljava/lang/Object;)#573
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#CheckCast(Ljava/lang/String;)#574
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#575
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/SynopticOptions;,partitionRegExp)#582
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#584
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#595
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#CheckCast(Ljava/util/Map;)#596
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map;,entrySet,()Ljava/util/Set;)#597
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,debugParse)#631
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#ConditionalBranch(I,eq,707)#633
synoptic.model.Relation.<init>(Ljava/lang/String;Ljava/lang/String;Z)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/Relation;,name)#4
synoptic.model.Relation.<init>(Ljava/lang/String;Ljava/lang/String;Z)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/Relation;,relation)#7
synoptic.model.Relation.hashCode()I#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/Relation;,relation)#8
synoptic.model.Relation.hashCode()I#Invoke(VIRTUAL,Ljava/lang/String;,hashCode,()I)#9
synoptic.model.Relation.hashCode()I#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/Relation;,name)#16
synoptic.model.Relation.hashCode()I#Invoke(VIRTUAL,Ljava/lang/String;,hashCode,()I)#17
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#13
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#CheckCast(Ljava/lang/String;)#14
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#15
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#22
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#23
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#CheckCast(Ljava/lang/String;)#24
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#25
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#44
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#CheckCast(Ljava/lang/String;)#45
synoptic.util.NamedSubstitution.substitute(Ljava/util/Map;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#46
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#8
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#CheckCast(Ljava/util/ArrayList;)#9
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#ConditionalBranch(Ljava/lang/Object;,ne,46)#13
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#22
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#40
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#50
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#CheckCast(Ljava/lang/Integer;)#51
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#52
synoptic.main.TraceParser.addEventNodeToPartition(Lsynoptic/model/Event;Ljava/lang/String;)Lsynoptic/model/EventNode;#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#56
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#743
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#748
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#CheckCast(Ljava/util/Set;)#749
synoptic.main.TraceParser.parseLine(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Set;,addAll,(Ljava/util/Collection;)Z)#753
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/TraceParser;,selectedTimeGroup)#92
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#94
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/TraceParser;,selectedTimeGroup)#184
synoptic.main.TraceParser.parseTrace(Ljava/io/Reader;Ljava/lang/String;I)Ljava/util/ArrayList;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#186
synoptic.main.Main.loggerInfoEnd(Ljava/lang/String;J)V#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#4
synoptic.main.Main.loggerInfoEnd(Ljava/lang/String;J)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#5
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,debugParse)#34
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#ConditionalBranch(I,eq,42)#36
synoptic.main.TraceParser.logTimeTypeIsTotallyOrdered()Z#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/TraceParser;,selectedTimeGroup)#2
synoptic.main.TraceParser.logTimeTypeIsTotallyOrdered()Z#Invoke(INTERFACE,Ljava/util/List;,contains,(Ljava/lang/Object;)Z)#3
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#23
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#CheckCast(Ljava/lang/String;)#24
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#30
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#CheckCast(Ljava/util/List;)#31
synoptic.main.TraceParser.generateDirectTORelation(Ljava/util/List;)Lsynoptic/model/ChainsTraceGraph;#Invoke(VIRTUAL,Lsynoptic/model/ChainsTraceGraph;,addTrace,(Ljava/util/List;Ljava/util/Map;)V)#34
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(STATIC,Ljava/util/Collections;,sort,(Ljava/util/List;Ljava/util/Comparator;)V)#5
synoptic.model.ChainsTraceGraph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#CheckCast(Lsynoptic/model/EventNode;)#2
synoptic.model.ChainsTraceGraph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#CheckCast(Lsynoptic/model/EventNode;)#4
synoptic.model.ChainsTraceGraph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#Invoke(VIRTUAL,Lsynoptic/model/ChainsTraceGraph$1;,compare,(Lsynoptic/model/EventNode;Lsynoptic/model/EventNode;)I)#5
synoptic.model.ChainsTraceGraph$1.compare(Lsynoptic/model/EventNode;Lsynoptic/model/EventNode;)I#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTime,()Lsynoptic/util/time/ITime;)#1
synoptic.model.ChainsTraceGraph$1.compare(Lsynoptic/model/EventNode;Lsynoptic/model/EventNode;)I#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTime,()Lsynoptic/util/time/ITime;)#3
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#25
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#CheckCast(Lsynoptic/model/EventNode;)#26
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#32
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#CheckCast(Ljava/util/Set;)#33
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#34
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#38
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#CheckCast(Lsynoptic/model/Relation;)#39
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/Relation;,getRelation,()Ljava/lang/String;)#43
synoptic.model.Relation.getRelation()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/Relation;,relation)#1
synoptic.model.Relation.getRelation()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#44
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/Relation;,getRelation,()Ljava/lang/String;)#49
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/ChainsTraceGraph;,tagInitial,(Lsynoptic/model/EventNode;Ljava/lang/String;)V)#50
synoptic.model.ChainsTraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Invoke(VIRTUAL,Lsynoptic/model/ChainsTraceGraph;,createIfNotExistsDummyInitialNode,(Lsynoptic/model/Event;Ljava/lang/String;)V)#3
synoptic.model.TraceGraph.createIfNotExistsDummyInitialNode(Lsynoptic/model/Event;Ljava/lang/String;)V#Invoke(SPECIAL,Lsynoptic/model/TraceGraph;,createIfNotExistsSpecialNode,(Lsynoptic/model/Event;Ljava/lang/String;Ljava/util/Map;)V)#5
synoptic.model.TraceGraph.createIfNotExistsSpecialNode(Lsynoptic/model/Event;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#2
synoptic.model.TraceGraph.createIfNotExistsSpecialNode(Lsynoptic/model/Event;Ljava/lang/String;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#13
synoptic.model.ChainsTraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Invoke(SPECIAL,Lsynoptic/model/TraceGraph;,tagInitial,(Lsynoptic/model/EventNode;Ljava/lang/String;)V)#7
synoptic.model.TraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#31
synoptic.model.TraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#CheckCast(Lsynoptic/model/EventNode;)#32
synoptic.model.TraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,addTransition,(Lsynoptic/model/EventNode;Ljava/lang/String;)V)#35
synoptic.model.EventNode.addTransition(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Invoke(SPECIAL,Lsynoptic/model/Transition;,<init>,(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V)#17
synoptic.model.Transition.<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V#Put(Ljava/lang/Object;,NONSTATIC,Lsynoptic/model/Transition;,source)#34
synoptic.model.Transition.<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V#Put(Ljava/lang/Object;,NONSTATIC,Lsynoptic/model/Transition;,target)#37
synoptic.model.Transition.<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/Transition;,relation)#40
synoptic.model.EventNode.addTransition(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,addTransition,(Lsynoptic/model/Transition;)V)#18
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#Invoke(VIRTUAL,Lsynoptic/model/Transition;,getRelation,()Ljava/lang/String;)#6
synoptic.model.Transition.getRelation()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/Transition;,relation)#1
synoptic.model.Transition.getRelation()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#11
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#CheckCast(Ljava/util/List;)#12
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#ConditionalBranch(Ljava/lang/Object;,ne,27)#16
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#25
synoptic.model.EventNode.addTransition(Lsynoptic/model/Transition;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#29
synoptic.model.ChainsTraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTraceID,()I)#11
synoptic.model.ChainsTraceGraph.tagInitial(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#14
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/Relation;,getRelation,()Ljava/lang/String;)#53
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#55
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/Relation;,getRelation,()Ljava/lang/String;)#59
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/Trace;,addRelationPath,(Ljava/lang/String;Lsynoptic/model/EventNode;Z)V)#62
synoptic.model.Trace.addRelationPath(Ljava/lang/String;Lsynoptic/model/EventNode;Z)V#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#3
synoptic.model.Trace.addRelationPath(Ljava/lang/String;Lsynoptic/model/EventNode;Z)V#Invoke(SPECIAL,Lsynoptic/model/RelationPath;,<init>,(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V)#19
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#Put(Lsynoptic/model/EventNode;,NONSTATIC,Lsynoptic/model/RelationPath;,eNode)#4
synoptic.model.RelationPath.<init>(Lsynoptic/model/EventNode;Ljava/lang/String;Z)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/RelationPath;,relation)#7
synoptic.model.Trace.addRelationPath(Ljava/lang/String;Lsynoptic/model/EventNode;Z)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#20
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#70
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,subList,(II)Ljava/util/List;)#71
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#76
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#CheckCast(Lsynoptic/model/EventNode;)#77
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTime,()Lsynoptic/util/time/ITime;)#80
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTime,()Lsynoptic/util/time/ITime;)#82
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#110
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#CheckCast(Ljava/util/Set;)#111
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#112
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#116
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#CheckCast(Lsynoptic/model/Relation;)#117
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/Relation;,getRelation,()Ljava/lang/String;)#121
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#122
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/Relation;,isClosure,()Z)#125
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/Relation;,getRelation,()Ljava/lang/String;)#158
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,addTransition,(Lsynoptic/model/EventNode;Ljava/lang/String;)V)#159
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/Relation;,getRelation,()Ljava/lang/String;)#162
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#164
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#178
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#CheckCast(Ljava/util/Set;)#179
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#180
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#184
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#CheckCast(Lsynoptic/model/Relation;)#185
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/Relation;,getRelation,()Ljava/lang/String;)#189
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#190
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/Relation;,getRelation,()Ljava/lang/String;)#195
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/ChainsTraceGraph;,tagTerminal,(Lsynoptic/model/EventNode;Ljava/lang/String;)V)#196
synoptic.model.ChainsTraceGraph.tagTerminal(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Invoke(VIRTUAL,Lsynoptic/model/ChainsTraceGraph;,createIfNotExistsDummyTerminalNode,(Lsynoptic/model/Event;Ljava/lang/String;)V)#3
synoptic.model.TraceGraph.createIfNotExistsDummyTerminalNode(Lsynoptic/model/Event;Ljava/lang/String;)V#Invoke(SPECIAL,Lsynoptic/model/TraceGraph;,createIfNotExistsSpecialNode,(Lsynoptic/model/Event;Ljava/lang/String;Ljava/util/Map;)V)#5
synoptic.model.ChainsTraceGraph.tagTerminal(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Invoke(SPECIAL,Lsynoptic/model/TraceGraph;,tagTerminal,(Lsynoptic/model/EventNode;Ljava/lang/String;)V)#7
synoptic.model.TraceGraph.tagTerminal(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#32
synoptic.model.TraceGraph.tagTerminal(Lsynoptic/model/EventNode;Ljava/lang/String;)V#CheckCast(Lsynoptic/model/EventNode;)#33
synoptic.model.TraceGraph.tagTerminal(Lsynoptic/model/EventNode;Ljava/lang/String;)V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,addTransition,(Lsynoptic/model/EventNode;Ljava/lang/String;)V)#35
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#206
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#CheckCast(Ljava/lang/String;)#207
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/Trace;,hasRelation,(Ljava/lang/String;)Z)#211
synoptic.model.Trace.hasRelation(Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#3
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#229
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#CheckCast(Ljava/lang/String;)#230
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#234
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#CheckCast(Lsynoptic/model/EventNode;)#235
synoptic.model.ChainsTraceGraph.addTrace(Ljava/util/List;Ljava/util/Map;)V#Invoke(VIRTUAL,Lsynoptic/model/Trace;,markRelationPathFinalNode,(Ljava/lang/String;Lsynoptic/model/EventNode;)V)#240
synoptic.model.Trace.markRelationPathFinalNode(Ljava/lang/String;Lsynoptic/model/EventNode;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
synoptic.model.Trace.markRelationPathFinalNode(Ljava/lang/String;Lsynoptic/model/EventNode;)V#CheckCast(Lsynoptic/model/RelationPath;)#4
synoptic.model.Trace.markRelationPathFinalNode(Ljava/lang/String;Lsynoptic/model/EventNode;)V#Invoke(VIRTUAL,Lsynoptic/model/RelationPath;,setFinalNode,(Lsynoptic/model/EventNode;)V)#8
synoptic.model.RelationPath.setFinalNode(Lsynoptic/model/EventNode;)V#Put(Lsynoptic/model/EventNode;,NONSTATIC,Lsynoptic/model/RelationPath;,eFinal)#2
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,dumpInitialGraphDotFile)#69
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#ConditionalBranch(I,eq,96)#71
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,useTransitiveClosureMining)#99
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Invoke(STATIC,Lsynoptic/main/Main;,mineTOInvariants,(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;)#101
synoptic.main.Main.mineTOInvariants(ZLsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#ConditionalBranch(I,eq,8)#2
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#18
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#CheckCast(Lsynoptic/model/EventNode;)#19
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitionsIterator,()Lsynoptic/util/IIterableIterator;)#22
synoptic.model.EventNode.getTransitionsIterator()Lsynoptic/util/IIterableIterator;#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitions,()Ljava/util/List;)#1
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#28
synoptic.util.IterableAdapter.next()Ljava/lang/Object;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#2
synoptic.util.IterableAdapter.next()Ljava/lang/Object;#Return(Ljava/lang/Object;)#3
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#CheckCast(Lsynoptic/model/interfaces/ITransition;)#29
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#Invoke(INTERFACE,Lsynoptic/model/interfaces/ITransition;,getRelation,()Ljava/lang/String;)#30
synoptic.model.TraceGraph.getRelations()Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#31
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#10
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#CheckCast(Ljava/lang/String;)#11
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(VIRTUAL,Lsynoptic/invariants/miners/ChainWalkingTOInvMiner;,computeInvariants,(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;)#16
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#14
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#CheckCast(Lsynoptic/model/Trace;)#15
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(VIRTUAL,Lsynoptic/model/Trace;,getSeen,(Ljava/lang/String;)Ljava/util/Set;)#20
synoptic.model.Trace.getSeen(Ljava/lang/String;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#3
synoptic.model.Trace.getSeen(Ljava/lang/String;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#22
synoptic.model.Trace.getSeen(Ljava/lang/String;)Ljava/util/Set;#CheckCast(Lsynoptic/model/RelationPath;)#23
synoptic.model.Trace.getSeen(Ljava/lang/String;)Ljava/util/Set;#Invoke(VIRTUAL,Lsynoptic/model/RelationPath;,getSeen,()Ljava/util/Set;)#24
synoptic.model.RelationPath.getSeen()Ljava/util/Set;#Invoke(SPECIAL,Lsynoptic/model/RelationPath;,count,()V)#5
synoptic.model.RelationPath.count()V#Get(Lsynoptic/model/EventNode;,NONSTATIC,Lsynoptic/model/RelationPath;,eNode)#1
synoptic.model.RelationPath.count()V#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/RelationPath;,relation)#13
synoptic.model.RelationPath.count()V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitions,(Ljava/lang/String;)Ljava/util/List;)#14
synoptic.model.EventNode.getTransitions(Ljava/lang/String;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
synoptic.model.EventNode.getTransitions(Ljava/lang/String;)Ljava/util/List;#CheckCast(Ljava/util/List;)#4
synoptic.model.EventNode.getTransitions(Ljava/lang/String;)Ljava/util/List;#ConditionalBranch(Ljava/lang/Object;,ne,11)#8
synoptic.model.EventNode.getTransitions(Ljava/lang/String;)Ljava/util/List;#Return(Ljava/lang/Object;)#12
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/List;,isEmpty,()Z)#17
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/List;,isEmpty,()Z)#280
synoptic.model.RelationPath.count()V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitions,(Ljava/lang/String;)Ljava/util/List;)#29
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#30
synoptic.model.RelationPath.count()V#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/RelationPath;,relation)#40
synoptic.model.RelationPath.count()V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitions,(Ljava/lang/String;)Ljava/util/List;)#41
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#42
synoptic.model.RelationPath.count()V#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/RelationPath;,relation)#52
synoptic.model.RelationPath.count()V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitions,(Ljava/lang/String;)Ljava/util/List;)#53
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#54
synoptic.model.RelationPath.count()V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getEType,()Lsynoptic/model/EventType;)#104
synoptic.model.StringEventType.hashCode()I#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/StringEventType;,eType)#1
synoptic.model.StringEventType.hashCode()I#Invoke(VIRTUAL,Ljava/lang/String;,hashCode,()I)#2
synoptic.model.StringEventType.hashCode()I#Invoke(SPECIAL,Lsynoptic/model/EventType;,hashCode,()I)#4
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#220
synoptic.model.RelationPath.count()V#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/RelationPath;,relation)#239
synoptic.model.RelationPath.count()V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitions,(Ljava/lang/String;)Ljava/util/List;)#240
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/List;,isEmpty,()Z)#243
synoptic.model.RelationPath.count()V#Get(Lsynoptic/model/EventNode;,NONSTATIC,Lsynoptic/model/RelationPath;,eFinal)#253
synoptic.model.RelationPath.count()V#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#254
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#260
synoptic.model.RelationPath.count()V#CheckCast(Lsynoptic/model/Transition;)#261
synoptic.model.RelationPath.count()V#Invoke(VIRTUAL,Lsynoptic/model/Transition;,getTarget,()Ljava/lang/Object;)#262
synoptic.model.Transition.getTarget()Ljava/lang/Object;#Get(Ljava/lang/Object;,NONSTATIC,Lsynoptic/model/Transition;,target)#1
synoptic.model.Transition.getTarget()Ljava/lang/Object;#Return(Ljava/lang/Object;)#2
synoptic.model.RelationPath.count()V#CheckCast(Lsynoptic/model/EventNode;)#263
synoptic.model.RelationPath.count()V#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/RelationPath;,relation)#267
synoptic.model.RelationPath.count()V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitions,(Ljava/lang/String;)Ljava/util/List;)#268
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/List;,isEmpty,()Z)#271
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#112
synoptic.model.RelationPath.count()V#CheckCast(Lsynoptic/model/EventType;)#113
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#118
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#127
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#132
synoptic.model.RelationPath.count()V#CheckCast(Ljava/util/Map;)#133
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#137
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#144
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#150
synoptic.model.RelationPath.count()V#CheckCast(Ljava/lang/Integer;)#151
synoptic.model.RelationPath.count()V#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#152
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#156
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#168
synoptic.model.RelationPath.count()V#CheckCast(Lsynoptic/model/EventType;)#169
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#174
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#183
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#188
synoptic.model.RelationPath.count()V#CheckCast(Ljava/util/Map;)#189
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#196
synoptic.model.RelationPath.count()V#CheckCast(Ljava/lang/Integer;)#197
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#198
synoptic.model.StringEventType.equals(Ljava/lang/Object;)Z#Invoke(SPECIAL,Lsynoptic/model/EventType;,equals,(Ljava/lang/Object;)Z)#2
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,5)#2
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,10)#7
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/lang/Object;,getClass,()Ljava/lang/Class;)#11
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/lang/Object;,getClass,()Ljava/lang/Class;)#13
synoptic.model.EventType.equals(Ljava/lang/Object;)Z#CheckCast(Lsynoptic/model/EventType;)#18
synoptic.model.StringEventType.equals(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,12)#9
synoptic.model.StringEventType.equals(Ljava/lang/Object;)Z#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/StringEventType;,eType)#13
synoptic.model.StringEventType.equals(Ljava/lang/Object;)Z#CheckCast(Lsynoptic/model/StringEventType;)#15
synoptic.model.StringEventType.equals(Ljava/lang/Object;)Z#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/StringEventType;,eType)#16
synoptic.model.StringEventType.equals(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#17
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#229
synoptic.model.RelationPath.count()V#CheckCast(Ljava/lang/Integer;)#230
synoptic.model.RelationPath.count()V#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#231
synoptic.model.RelationPath.count()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#235
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(VIRTUAL,Lsynoptic/model/Trace;,getEventCounts,(Ljava/lang/String;)Ljava/util/Map;)#25
synoptic.model.Trace.getEventCounts(Ljava/lang/String;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#3
synoptic.model.Trace.getEventCounts(Ljava/lang/String;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#22
synoptic.model.Trace.getEventCounts(Ljava/lang/String;)Ljava/util/Map;#CheckCast(Lsynoptic/model/RelationPath;)#23
synoptic.model.Trace.getEventCounts(Ljava/lang/String;)Ljava/util/Map;#Invoke(VIRTUAL,Lsynoptic/model/RelationPath;,getEventCounts,()Ljava/util/Map;)#24
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#33
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#CheckCast(Lsynoptic/model/EventType;)#34
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#38
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#CheckCast(Ljava/lang/Integer;)#39
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#40
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#44
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#59
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#50
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#CheckCast(Ljava/lang/Integer;)#51
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#52
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#82
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#CheckCast(Lsynoptic/model/EventType;)#83
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#96
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#101
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#108
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#CheckCast(Lsynoptic/model/EventType;)#109
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#115
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#121
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#139
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#CheckCast(Lsynoptic/model/Trace;)#140
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(VIRTUAL,Lsynoptic/model/Trace;,getPrecedesCounts,(Ljava/lang/String;)Ljava/util/Map;)#144
synoptic.model.Trace.getPrecedesCounts(Ljava/lang/String;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#3
synoptic.model.Trace.getPrecedesCounts(Ljava/lang/String;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#22
synoptic.model.Trace.getPrecedesCounts(Ljava/lang/String;)Ljava/util/Map;#CheckCast(Lsynoptic/model/RelationPath;)#23
synoptic.model.Trace.getPrecedesCounts(Ljava/lang/String;)Ljava/util/Map;#Invoke(VIRTUAL,Lsynoptic/model/RelationPath;,getPrecedesCounts,()Ljava/util/Map;)#24
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#6
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#CheckCast(Lsynoptic/model/EventType;)#7
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#11
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#CheckCast(Ljava/util/Map;)#12
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#16
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#CheckCast(Ljava/util/Map;)#17
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,keySet,()Ljava/util/Set;)#20
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#25
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#CheckCast(Lsynoptic/model/EventType;)#26
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#30
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#CheckCast(Ljava/lang/Integer;)#31
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#32
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#36
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#42
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#CheckCast(Ljava/lang/Integer;)#43
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#44
synoptic.invariants.miners.ChainWalkingTOInvMiner.addCounts(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#51
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(VIRTUAL,Lsynoptic/model/Trace;,getFollowedByCounts,(Ljava/lang/String;)Ljava/util/Map;)#152
synoptic.model.Trace.getFollowedByCounts(Ljava/lang/String;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#3
synoptic.model.Trace.getFollowedByCounts(Ljava/lang/String;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#22
synoptic.model.Trace.getFollowedByCounts(Ljava/lang/String;)Ljava/util/Map;#CheckCast(Lsynoptic/model/RelationPath;)#23
synoptic.model.Trace.getFollowedByCounts(Ljava/lang/String;)Ljava/util/Map;#Invoke(VIRTUAL,Lsynoptic/model/RelationPath;,getFollowedByCounts,()Ljava/util/Map;)#24
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(VIRTUAL,Lsynoptic/model/Trace;,getSeen,(Ljava/lang/String;)Ljava/util/Set;)#160
synoptic.invariants.miners.ChainWalkingTOInvMiner.computeInvariants(Lsynoptic/model/ChainsTraceGraph;Ljava/lang/String;)Lsynoptic/invariants/TemporalInvariantSet;#Invoke(VIRTUAL,Lsynoptic/invariants/miners/ChainWalkingTOInvMiner;,extractPathInvariantsFromWalkCounts,(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;)#188
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#10
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#CheckCast(Lsynoptic/model/EventType;)#11
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#19
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#CheckCast(Lsynoptic/model/EventType;)#20
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Invoke(VIRTUAL,Lsynoptic/invariants/miners/CountingInvariantMiner;,neverFollowedBy,(Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z)#26
synoptic.invariants.miners.CountingInvariantMiner.neverFollowedBy(Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#2
synoptic.invariants.miners.CountingInvariantMiner.neverFollowedBy(Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#CheckCast(Ljava/util/Map;)#3
synoptic.invariants.miners.CountingInvariantMiner.neverFollowedBy(Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#5
synoptic.invariants.miners.CountingInvariantMiner.neverFollowedBy(Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#CheckCast(Ljava/lang/Integer;)#6
synoptic.invariants.miners.CountingInvariantMiner.neverFollowedBy(Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#7
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Invoke(VIRTUAL,Lsynoptic/invariants/miners/CountingInvariantMiner;,alwaysFollowedBy,(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z)#54
synoptic.invariants.miners.CountingInvariantMiner.alwaysFollowedBy(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#2
synoptic.invariants.miners.CountingInvariantMiner.alwaysFollowedBy(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#CheckCast(Ljava/util/Map;)#3
synoptic.invariants.miners.CountingInvariantMiner.alwaysFollowedBy(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#5
synoptic.invariants.miners.CountingInvariantMiner.alwaysFollowedBy(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#CheckCast(Ljava/lang/Integer;)#6
synoptic.invariants.miners.CountingInvariantMiner.alwaysFollowedBy(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#9
synoptic.invariants.miners.CountingInvariantMiner.alwaysFollowedBy(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Invoke(VIRTUAL,Ljava/lang/Integer;,equals,(Ljava/lang/Object;)Z)#10
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Invoke(VIRTUAL,Lsynoptic/invariants/miners/CountingInvariantMiner;,alwaysPrecedes,(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z)#71
synoptic.invariants.miners.CountingInvariantMiner.alwaysPrecedes(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#2
synoptic.invariants.miners.CountingInvariantMiner.alwaysPrecedes(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#CheckCast(Ljava/util/Map;)#3
synoptic.invariants.miners.CountingInvariantMiner.alwaysPrecedes(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#5
synoptic.invariants.miners.CountingInvariantMiner.alwaysPrecedes(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#CheckCast(Ljava/lang/Integer;)#6
synoptic.invariants.miners.CountingInvariantMiner.alwaysPrecedes(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#9
synoptic.invariants.miners.CountingInvariantMiner.alwaysPrecedes(Ljava/util/Map;Ljava/util/Map;Lsynoptic/model/EventType;Lsynoptic/model/EventType;)Z#Invoke(VIRTUAL,Ljava/lang/Integer;,equals,(Ljava/lang/Object;)Z)#10
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Invoke(SPECIAL,Lsynoptic/invariants/AlwaysFollowedInvariant;,<init>,(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V)#63
synoptic.invariants.AlwaysFollowedInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#Invoke(SPECIAL,Lsynoptic/invariants/BinaryInvariant;,<init>,(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V)#4
synoptic.invariants.BinaryInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#Put(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/BinaryInvariant;,first)#10
synoptic.invariants.BinaryInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#Put(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/BinaryInvariant;,second)#13
synoptic.invariants.BinaryInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/invariants/BinaryInvariant;,relation)#16
synoptic.invariants.BinaryInvariant.hashCode()I#Invoke(VIRTUAL,Ljava/lang/Object;,getClass,()Ljava/lang/Class;)#3
synoptic.invariants.BinaryInvariant.hashCode()I#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/BinaryInvariant;,first)#10
synoptic.invariants.BinaryInvariant.hashCode()I#ConditionalBranch(Ljava/lang/Object;,ne,15)#12
synoptic.invariants.BinaryInvariant.hashCode()I#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/BinaryInvariant;,first)#16
synoptic.invariants.BinaryInvariant.hashCode()I#Invoke(VIRTUAL,Lsynoptic/model/EventType;,hashCode,()I)#17
synoptic.invariants.BinaryInvariant.hashCode()I#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/invariants/BinaryInvariant;,relation)#24
synoptic.invariants.BinaryInvariant.hashCode()I#ConditionalBranch(Ljava/lang/Object;,ne,29)#26
synoptic.invariants.BinaryInvariant.hashCode()I#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/invariants/BinaryInvariant;,relation)#30
synoptic.invariants.BinaryInvariant.hashCode()I#Invoke(VIRTUAL,Ljava/lang/String;,hashCode,()I)#31
synoptic.invariants.BinaryInvariant.hashCode()I#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/BinaryInvariant;,second)#38
synoptic.invariants.BinaryInvariant.hashCode()I#ConditionalBranch(Ljava/lang/Object;,ne,43)#40
synoptic.invariants.BinaryInvariant.hashCode()I#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/BinaryInvariant;,second)#44
synoptic.invariants.BinaryInvariant.hashCode()I#Invoke(VIRTUAL,Lsynoptic/model/EventType;,hashCode,()I)#45
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Invoke(SPECIAL,Lsynoptic/invariants/AlwaysPrecedesInvariant;,<init>,(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V)#80
synoptic.invariants.AlwaysPrecedesInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#Invoke(SPECIAL,Lsynoptic/invariants/BinaryInvariant;,<init>,(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V)#4
synoptic.invariants.AlwaysPrecedesInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#Invoke(VIRTUAL,Lsynoptic/model/EventType;,equals,(Ljava/lang/Object;)Z)#7
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Invoke(SPECIAL,Lsynoptic/invariants/NeverFollowedInvariant;,<init>,(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V)#46
synoptic.invariants.NeverFollowedInvariant.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V#Invoke(SPECIAL,Lsynoptic/invariants/BinaryInvariant;,<init>,(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V)#4
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#96
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#CheckCast(Lsynoptic/model/EventType;)#97
synoptic.invariants.miners.CountingInvariantMiner.extractPathInvariantsFromWalkCounts(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;#Invoke(SPECIAL,Lsynoptic/invariants/AlwaysFollowedInvariant;,<init>,(Lsynoptic/model/EventType;Lsynoptic/model/EventType;Ljava/lang/String;)V)#105
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,dumpInvariants)#116
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#ConditionalBranch(I,eq,129)#118
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,outputInvariantsToFile)#130
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#ConditionalBranch(I,eq,155)#132
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,onlyMineInvariants)#156
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#ConditionalBranch(I,eq,161)#158
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#39
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#CheckCast(Ljava/lang/String;)#40
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Invoke(VIRTUAL,Lsynoptic/model/ChainsTraceGraph;,getDummyInitialNode,(Ljava/lang/String;)Lsynoptic/model/EventNode;)#44
synoptic.model.TraceGraph.getDummyInitialNode(Ljava/lang/String;)Lsynoptic/model/EventNode;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#16
synoptic.model.TraceGraph.getDummyInitialNode(Ljava/lang/String;)Lsynoptic/model/EventNode;#CheckCast(Lsynoptic/model/EventNode;)#17
synoptic.model.TraceGraph.getDummyInitialNode(Ljava/lang/String;)Lsynoptic/model/EventNode;#Return(Ljava/lang/Object;)#18
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,containsKey,(Ljava/lang/Object;)Z)#49
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#58
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#63
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#CheckCast(Ljava/util/Set;)#64
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#66
synoptic.model.PartitionGraph.<init>(Lsynoptic/model/ChainsTraceGraph;Lsynoptic/invariants/TemporalInvariantSet;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#71
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#9
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#CheckCast(Lsynoptic/model/EventNode;)#10
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitions,()Ljava/util/List;)#13
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#18
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#CheckCast(Lsynoptic/model/interfaces/ITransition;)#19
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(INTERFACE,Lsynoptic/model/interfaces/ITransition;,getRelation,()Ljava/lang/String;)#24
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#25
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getEType,()Lsynoptic/model/EventType;)#32
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#46
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#50
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#CheckCast(Ljava/util/Set;)#51
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#53
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Map$Entry;,getValue,()Ljava/lang/Object;)#78
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#CheckCast(Ljava/util/Set;)#79
synoptic.model.PartitionGraph.partitionByLabels(Ljava/util/Collection;)V#Invoke(SPECIAL,Lsynoptic/model/Partition;,<init>,(Ljava/util/Set;)V)#80
synoptic.model.Partition.<init>(Ljava/util/Set;)V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#26
synoptic.model.Partition.<init>(Ljava/util/Set;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#27
synoptic.model.Partition.<init>(Ljava/util/Set;)V#CheckCast(Lsynoptic/model/EventNode;)#28
synoptic.model.Partition.<init>(Ljava/util/Set;)V#Invoke(VIRTUAL,Lsynoptic/model/Partition;,initialize,(Lsynoptic/model/EventNode;)V)#29
synoptic.model.Partition.initialize(Lsynoptic/model/EventNode;)V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getEType,()Lsynoptic/model/EventType;)#2
synoptic.model.Partition.<init>(Ljava/util/Set;)V#Invoke(VIRTUAL,Lsynoptic/model/Partition;,addEventNodes,(Ljava/util/Collection;)V)#32
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Set;,addAll,(Ljava/util/Collection;)Z)#13
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Collection;,iterator,()Ljava/util/Iterator;)#16
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#20
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#CheckCast(Lsynoptic/model/EventNode;)#21
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,setParent,(Lsynoptic/model/Partition;)V)#25
synoptic.model.EventNode.setParent(Lsynoptic/model/Partition;)V#Put(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/model/EventNode;,parent)#2
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,dumpInitialPartitionGraph)#167
synoptic.main.Main.createInitialPartitionGraph()Lsynoptic/model/PartitionGraph;#ConditionalBranch(I,eq,183)#169
synoptic.main.Main.runSynoptic(Lsynoptic/model/PartitionGraph;)V#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,logLvlExtraVerbose)#5
synoptic.main.Main.runSynoptic(Lsynoptic/model/PartitionGraph;)V#ConditionalBranch(I,eq,14)#7
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,dumpIntermediateStages)#5
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#ConditionalBranch(I,eq,13)#7
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;Lsynoptic/benchmarks/TimedTask;Lsynoptic/benchmarks/PerformanceMetrics;Z)V#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#10
synoptic.benchmarks.TimedTask.<init>(Ljava/lang/String;Lsynoptic/benchmarks/TimedTask;Lsynoptic/benchmarks/PerformanceMetrics;Z)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#11
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,useFSMChecker)#7
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#ConditionalBranch(I,eq,40)#9
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#20
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#CheckCast(Lsynoptic/invariants/ITemporalInvariant;)#21
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#CheckCast(Lsynoptic/invariants/BinaryInvariant;)#24
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Invoke(STATIC,Lsynoptic/invariants/fsmcheck/FsmModelChecker;,getCounterExample,(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;)#26
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#ConditionalBranch(Ljava/lang/Object;,ne,7)#4
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Invoke(VIRTUAL,Ljava/lang/Object;,getClass,()Ljava/lang/Class;)#8
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Invoke(SPECIAL,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,<init>,(Lsynoptic/invariants/BinaryInvariant;)V)#18
synoptic.invariants.fsmcheck.AFbyTracingSet.<init>(Lsynoptic/invariants/BinaryInvariant;)V#Invoke(VIRTUAL,Lsynoptic/invariants/BinaryInvariant;,getFirst,()Lsynoptic/model/EventType;)#2
synoptic.invariants.BinaryInvariant.getFirst()Lsynoptic/model/EventType;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/BinaryInvariant;,first)#1
synoptic.invariants.BinaryInvariant.getFirst()Lsynoptic/model/EventType;#Return(Ljava/lang/Object;)#2
synoptic.invariants.fsmcheck.AFbyTracingSet.<init>(Lsynoptic/invariants/BinaryInvariant;)V#Invoke(VIRTUAL,Lsynoptic/invariants/BinaryInvariant;,getSecond,()Lsynoptic/model/EventType;)#4
synoptic.invariants.BinaryInvariant.getSecond()Lsynoptic/model/EventType;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/BinaryInvariant;,second)#1
synoptic.invariants.BinaryInvariant.getSecond()Lsynoptic/model/EventType;#Return(Ljava/lang/Object;)#2
synoptic.invariants.fsmcheck.AFbyTracingSet.<init>(Lsynoptic/invariants/BinaryInvariant;)V#Invoke(SPECIAL,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,<init>,(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V)#5
synoptic.invariants.fsmcheck.AFbyTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#Put(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,a)#4
synoptic.invariants.fsmcheck.AFbyTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#Put(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,b)#7
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#18
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#CheckCast(Lsynoptic/model/interfaces/INode;)#19
synoptic.invariants.fsmcheck.AFbyTracingSet.copy()Ljava/lang/Object;#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,copy,()Lsynoptic/invariants/fsmcheck/AFbyTracingSet;)#1
synoptic.invariants.fsmcheck.AFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/AFbyTracingSet;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,a)#3
synoptic.invariants.fsmcheck.AFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/AFbyTracingSet;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,b)#5
synoptic.invariants.fsmcheck.AFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/AFbyTracingSet;#Invoke(SPECIAL,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,<init>,(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V)#6
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#26
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/LinkedHashMap;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#10
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/LinkedHashMap;)Ljava/util/Set;#CheckCast(Ljava/util/Set;)#11
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/LinkedHashMap;)Ljava/util/Set;#Invoke(SPECIAL,Lsynoptic/model/PartitionGraph;,getEventNodePartitions,(Ljava/util/Set;)Ljava/util/Set;)#16
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/Set;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#5
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/Set;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#9
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/Set;)Ljava/util/Set;#CheckCast(Lsynoptic/model/EventNode;)#10
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/Set;)Ljava/util/Set;#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getParent,()Lsynoptic/model/Partition;)#14
synoptic.model.EventNode.getParent()Lsynoptic/model/Partition;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/model/EventNode;,parent)#1
synoptic.model.EventNode.getParent()Lsynoptic/model/Partition;#Return(Ljava/lang/Object;)#2
synoptic.model.PartitionGraph.getEventNodePartitions(Ljava/util/Set;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#15
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#38
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#CheckCast(Lsynoptic/model/interfaces/INode;)#39
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#43
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Queue;,add,(Ljava/lang/Object;)Z)#47
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#51
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#CheckCast(Lsynoptic/invariants/fsmcheck/IStateSet;)#52
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Lsynoptic/invariants/fsmcheck/IStateSet;,setInitial,(Ljava/lang/Object;)V)#54
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Ljava/lang/Object;)V#CheckCast(Lsynoptic/model/interfaces/INode;)#2
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Ljava/lang/Object;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,setInitial,(Lsynoptic/model/interfaces/INode;)V)#3
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,getEType,()Lsynoptic/model/EventType;)#1
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Invoke(SPECIAL,Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,<init>,(Lsynoptic/invariants/fsmcheck/TracingStateSet;Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;I)V)#9
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.<init>(Lsynoptic/invariants/fsmcheck/TracingStateSet;Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;I)V#Put(Lsynoptic/invariants/fsmcheck/TracingStateSet;,NONSTATIC,Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,this$0)#2
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.<init>(Lsynoptic/invariants/fsmcheck/TracingStateSet;Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;I)V#Put(Lsynoptic/model/interfaces/INode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,node)#7
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,a)#13
synoptic.invariants.fsmcheck.AFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/model/EventType;,equals,(Ljava/lang/Object;)Z)#14
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Queue;,remove,()Ljava/lang/Object;)#61
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#CheckCast(Lsynoptic/model/interfaces/INode;)#62
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Set;,remove,(Ljava/lang/Object;)Z)#66
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#70
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#CheckCast(Lsynoptic/invariants/fsmcheck/IStateSet;)#71
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Lsynoptic/model/interfaces/IGraph;,getAdjacentNodes,(Lsynoptic/model/interfaces/INode;)Ljava/util/Set;)#75
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/interfaces/INode;)Ljava/util/Set;#CheckCast(Lsynoptic/model/Partition;)#2
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/interfaces/INode;)Ljava/util/Set;#Invoke(VIRTUAL,Lsynoptic/model/PartitionGraph;,getAdjacentNodes,(Lsynoptic/model/Partition;)Ljava/util/Set;)#3
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,containsKey,(Ljava/lang/Object;)Z)#3
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getTransitionsIterator,(Ljava/lang/String;)Lsynoptic/util/IIterableIterator;)#18
synoptic.model.Partition.getTransitionsIterator(Ljava/lang/String;)Lsynoptic/util/IIterableIterator;#Invoke(SPECIAL,Lsynoptic/model/Partition$1;,<init>,(Lsynoptic/model/Partition;Ljava/lang/String;)V)#15
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#Put(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/model/Partition$1;,this$0)#2
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/Partition$1;,val$relation)#5
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,ne,29)#21
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#24
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#CheckCast(Lsynoptic/model/EventNode;)#25
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitions,()Ljava/util/List;)#26
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#8
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#CheckCast(Lsynoptic/model/interfaces/ITransition;)#9
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Invoke(INTERFACE,Lsynoptic/model/interfaces/ITransition;,getSource,()Ljava/lang/Object;)#14
synoptic.model.Transition.getSource()Ljava/lang/Object;#Get(Ljava/lang/Object;,NONSTATIC,Lsynoptic/model/Transition;,source)#1
synoptic.model.Transition.getSource()Ljava/lang/Object;#Return(Ljava/lang/Object;)#2
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#CheckCast(Lsynoptic/model/EventNode;)#15
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getParent,()Lsynoptic/model/Partition;)#16
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Invoke(INTERFACE,Lsynoptic/model/interfaces/ITransition;,getTarget,()Ljava/lang/Object;)#18
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#CheckCast(Lsynoptic/model/EventNode;)#19
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getParent,()Lsynoptic/model/Partition;)#20
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Invoke(INTERFACE,Lsynoptic/model/interfaces/ITransition;,getRelation,()Ljava/lang/String;)#22
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Invoke(SPECIAL,Lsynoptic/model/Transition;,<init>,(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V)#23
synoptic.model.Transition.hashCode()I#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/Transition;,relation)#8
synoptic.model.Transition.hashCode()I#ConditionalBranch(Ljava/lang/Object;,ne,13)#10
synoptic.model.Transition.hashCode()I#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/Transition;,relation)#14
synoptic.model.Transition.hashCode()I#Invoke(VIRTUAL,Ljava/lang/String;,hashCode,()I)#15
synoptic.model.Transition.hashCode()I#Get(Ljava/lang/Object;,NONSTATIC,Lsynoptic/model/Transition;,source)#22
synoptic.model.Transition.hashCode()I#ConditionalBranch(Ljava/lang/Object;,ne,27)#24
synoptic.model.Transition.hashCode()I#Get(Ljava/lang/Object;,NONSTATIC,Lsynoptic/model/Transition;,source)#28
synoptic.model.Transition.hashCode()I#Invoke(VIRTUAL,Ljava/lang/Object;,hashCode,()I)#29
synoptic.model.Transition.hashCode()I#Get(Ljava/lang/Object;,NONSTATIC,Lsynoptic/model/Transition;,target)#36
synoptic.model.Transition.hashCode()I#ConditionalBranch(Ljava/lang/Object;,ne,41)#38
synoptic.model.Transition.hashCode()I#Get(Ljava/lang/Object;,NONSTATIC,Lsynoptic/model/Transition;,target)#42
synoptic.model.Transition.hashCode()I#Invoke(VIRTUAL,Ljava/lang/Object;,hashCode,()I)#43
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#Invoke(VIRTUAL,Lsynoptic/model/Transition;,getTarget,()Ljava/lang/Object;)#28
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#CheckCast(Lsynoptic/model/Partition;)#29
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#30
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,5)#2
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,10)#7
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/lang/Object;,getClass,()Ljava/lang/Class;)#11
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/lang/Object;,getClass,()Ljava/lang/Class;)#13
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#CheckCast(Lsynoptic/model/Transition;)#18
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/Transition;,relation)#21
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,30)#23
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/Transition;,relation)#31
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/Transition;,relation)#33
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#34
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Get(Ljava/lang/Object;,NONSTATIC,Lsynoptic/model/Transition;,source)#40
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,49)#42
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Get(Ljava/lang/Object;,NONSTATIC,Lsynoptic/model/Transition;,source)#50
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Get(Ljava/lang/Object;,NONSTATIC,Lsynoptic/model/Transition;,source)#52
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#53
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Get(Ljava/lang/Object;,NONSTATIC,Lsynoptic/model/Transition;,target)#59
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,68)#61
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Get(Ljava/lang/Object;,NONSTATIC,Lsynoptic/model/Transition;,target)#69
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Get(Ljava/lang/Object;,NONSTATIC,Lsynoptic/model/Transition;,target)#71
synoptic.model.Transition.equals(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#72
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#40
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/interfaces/INode;)Ljava/util/Set;#Return(Ljava/lang/Object;)#4
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#76
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#80
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#CheckCast(Lsynoptic/model/interfaces/INode;)#81
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#85
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#CheckCast(Lsynoptic/invariants/fsmcheck/IStateSet;)#86
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Lsynoptic/invariants/fsmcheck/IStateSet;,copy,()Ljava/lang/Object;)#89
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Lsynoptic/invariants/fsmcheck/IStateSet;,transition,(Ljava/lang/Object;)V)#94
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Ljava/lang/Object;)V#CheckCast(Lsynoptic/model/interfaces/INode;)#2
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Ljava/lang/Object;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,transition,(Lsynoptic/model/interfaces/INode;)V)#3
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,getEType,()Lsynoptic/model/EventType;)#1
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,a)#4
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/model/EventType;,equals,(Ljava/lang/Object;)Z)#6
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,extend,(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#43
synoptic.invariants.fsmcheck.TracingStateSet.extend(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;#Invoke(SPECIAL,Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,<init>,(Lsynoptic/invariants/fsmcheck/TracingStateSet;Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;I)V)#14
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,extend,(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#50
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Lsynoptic/invariants/fsmcheck/IStateSet;,isSubset,(Ljava/lang/Object;)Z)#97
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Ljava/lang/Object;)Z#CheckCast(Lsynoptic/invariants/fsmcheck/TracingStateSet;)#2
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,isSubset,(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z)#3
synoptic.invariants.fsmcheck.AFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#CheckCast(Lsynoptic/invariants/fsmcheck/AFbyTracingSet;)#1
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Lsynoptic/invariants/fsmcheck/IStateSet;,mergeWith,(Ljava/lang/Object;)V)#101
synoptic.invariants.fsmcheck.AFbyTracingSet.mergeWith(Ljava/lang/Object;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,mergeWith,(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V)#3
synoptic.invariants.fsmcheck.AFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,preferShorter,(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#9
synoptic.invariants.fsmcheck.AFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,preferShorter,(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#17
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Lsynoptic/invariants/fsmcheck/IStateSet;,isFail,()Z)#106
synoptic.invariants.fsmcheck.TracingStateSet.isFail()Z#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/TracingStateSet;,failpath,()Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#1
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,isTerminal,()Z)#110
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Set;,contains,(Ljava/lang/Object;)Z)#120
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Queue;,add,(Ljava/lang/Object;)Z)#125
synoptic.invariants.fsmcheck.FsmModelChecker.runChecker(Lsynoptic/invariants/fsmcheck/IStateSet;Lsynoptic/model/interfaces/IGraph;Z)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#129
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/Partition$1;,val$relation)#34
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#ConditionalBranch(Ljava/lang/Object;,ne,46)#36
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#40
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#CheckCast(Lsynoptic/model/EventNode;)#41
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitions,()Ljava/util/List;)#42
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/AFbyTracingSet;,b)#22
synoptic.invariants.fsmcheck.AFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/model/EventType;,equals,(Ljava/lang/Object;)Z)#24
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Invoke(INTERFACE,Ljava/util/Map$Entry;,getValue,()Ljava/lang/Object;)#59
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#CheckCast(Lsynoptic/invariants/fsmcheck/TracingStateSet;)#60
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/TracingStateSet;,failpath,()Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#61
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Invoke(INTERFACE,Ljava/util/Map$Entry;,getKey,()Ljava/lang/Object;)#64
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#CheckCast(Lsynoptic/model/interfaces/INode;)#65
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,isTerminal,()Z)#66
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Invoke(SPECIAL,Lsynoptic/invariants/fsmcheck/APTracingSet;,<init>,(Lsynoptic/invariants/BinaryInvariant;)V)#29
synoptic.invariants.fsmcheck.APTracingSet.<init>(Lsynoptic/invariants/BinaryInvariant;)V#Invoke(VIRTUAL,Lsynoptic/invariants/BinaryInvariant;,getFirst,()Lsynoptic/model/EventType;)#2
synoptic.invariants.fsmcheck.APTracingSet.<init>(Lsynoptic/invariants/BinaryInvariant;)V#Invoke(VIRTUAL,Lsynoptic/invariants/BinaryInvariant;,getSecond,()Lsynoptic/model/EventType;)#4
synoptic.invariants.fsmcheck.APTracingSet.<init>(Lsynoptic/invariants/BinaryInvariant;)V#Invoke(SPECIAL,Lsynoptic/invariants/fsmcheck/APTracingSet;,<init>,(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V)#5
synoptic.invariants.fsmcheck.APTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#Put(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,a)#4
synoptic.invariants.fsmcheck.APTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#Put(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,b)#7
synoptic.invariants.fsmcheck.APTracingSet.copy()Ljava/lang/Object;#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/APTracingSet;,copy,()Lsynoptic/invariants/fsmcheck/APTracingSet;)#1
synoptic.invariants.fsmcheck.APTracingSet.copy()Lsynoptic/invariants/fsmcheck/APTracingSet;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,a)#3
synoptic.invariants.fsmcheck.APTracingSet.copy()Lsynoptic/invariants/fsmcheck/APTracingSet;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,b)#5
synoptic.invariants.fsmcheck.APTracingSet.copy()Lsynoptic/invariants/fsmcheck/APTracingSet;#Invoke(SPECIAL,Lsynoptic/invariants/fsmcheck/APTracingSet;,<init>,(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V)#6
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Ljava/lang/Object;)V#CheckCast(Lsynoptic/model/interfaces/INode;)#2
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Ljava/lang/Object;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/APTracingSet;,setInitial,(Lsynoptic/model/interfaces/INode;)V)#3
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,getEType,()Lsynoptic/model/EventType;)#1
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Invoke(SPECIAL,Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,<init>,(Lsynoptic/invariants/fsmcheck/TracingStateSet;Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;I)V)#9
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,a)#21
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/model/EventType;,equals,(Ljava/lang/Object;)Z)#23
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,b)#31
synoptic.invariants.fsmcheck.APTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/model/EventType;,equals,(Ljava/lang/Object;)Z)#33
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#9
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#CheckCast(Ljava/util/Set;)#10
synoptic.model.PartitionGraph.getAdjacentNodes(Lsynoptic/model/Partition;)Ljava/util/Set;#Return(Ljava/lang/Object;)#11
synoptic.invariants.fsmcheck.APTracingSet.transition(Ljava/lang/Object;)V#CheckCast(Lsynoptic/model/interfaces/INode;)#2
synoptic.invariants.fsmcheck.APTracingSet.transition(Ljava/lang/Object;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/APTracingSet;,transition,(Lsynoptic/model/interfaces/INode;)V)#3
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,getEType,()Lsynoptic/model/EventType;)#1
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,a)#4
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/model/EventType;,equals,(Ljava/lang/Object;)Z)#6
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/APTracingSet;,extend,(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#43
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/APTracingSet;,extend,(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#50
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/APTracingSet;,extend,(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#57
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Ljava/lang/Object;)Z#CheckCast(Lsynoptic/invariants/fsmcheck/TracingStateSet;)#2
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/APTracingSet;,isSubset,(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z)#3
synoptic.invariants.fsmcheck.APTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#CheckCast(Lsynoptic/invariants/fsmcheck/APTracingSet;)#1
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Ljava/lang/Object;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/APTracingSet;,mergeWith,(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V)#3
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/APTracingSet;,preferShorter,(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#9
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/APTracingSet;,preferShorter,(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#17
synoptic.invariants.fsmcheck.APTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/APTracingSet;,preferShorter,(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#25
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/APTracingSet;,b)#22
synoptic.invariants.fsmcheck.APTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/model/EventType;,equals,(Ljava/lang/Object;)Z)#24
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Invoke(SPECIAL,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,<init>,(Lsynoptic/invariants/BinaryInvariant;)V)#40
synoptic.invariants.fsmcheck.NFbyTracingSet.<init>(Lsynoptic/invariants/BinaryInvariant;)V#Invoke(VIRTUAL,Lsynoptic/invariants/BinaryInvariant;,getFirst,()Lsynoptic/model/EventType;)#2
synoptic.invariants.fsmcheck.NFbyTracingSet.<init>(Lsynoptic/invariants/BinaryInvariant;)V#Invoke(VIRTUAL,Lsynoptic/invariants/BinaryInvariant;,getSecond,()Lsynoptic/model/EventType;)#4
synoptic.invariants.fsmcheck.NFbyTracingSet.<init>(Lsynoptic/invariants/BinaryInvariant;)V#Invoke(SPECIAL,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,<init>,(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V)#5
synoptic.invariants.fsmcheck.NFbyTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#Put(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,a)#4
synoptic.invariants.fsmcheck.NFbyTracingSet.<init>(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V#Put(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,b)#7
synoptic.invariants.fsmcheck.NFbyTracingSet.copy()Ljava/lang/Object;#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,copy,()Lsynoptic/invariants/fsmcheck/NFbyTracingSet;)#1
synoptic.invariants.fsmcheck.NFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/NFbyTracingSet;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,a)#3
synoptic.invariants.fsmcheck.NFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/NFbyTracingSet;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,b)#5
synoptic.invariants.fsmcheck.NFbyTracingSet.copy()Lsynoptic/invariants/fsmcheck/NFbyTracingSet;#Invoke(SPECIAL,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,<init>,(Lsynoptic/model/EventType;Lsynoptic/model/EventType;)V)#6
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Ljava/lang/Object;)V#CheckCast(Lsynoptic/model/interfaces/INode;)#2
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Ljava/lang/Object;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,setInitial,(Lsynoptic/model/interfaces/INode;)V)#3
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,getEType,()Lsynoptic/model/EventType;)#1
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Invoke(SPECIAL,Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,<init>,(Lsynoptic/invariants/fsmcheck/TracingStateSet;Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;I)V)#9
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,a)#21
synoptic.invariants.fsmcheck.NFbyTracingSet.setInitial(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/model/EventType;,equals,(Ljava/lang/Object;)Z)#23
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Ljava/lang/Object;)V#CheckCast(Lsynoptic/model/interfaces/INode;)#2
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Ljava/lang/Object;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,transition,(Lsynoptic/model/interfaces/INode;)V)#3
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,getEType,()Lsynoptic/model/EventType;)#1
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,b)#4
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/model/EventType;,equals,(Ljava/lang/Object;)Z)#6
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,a)#21
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/model/EventType;,equals,(Ljava/lang/Object;)Z)#23
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,extend,(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#42
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,extend,(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#49
synoptic.invariants.fsmcheck.NFbyTracingSet.transition(Lsynoptic/model/interfaces/INode;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,extend,(Lsynoptic/model/interfaces/INode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#56
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Ljava/lang/Object;)Z#CheckCast(Lsynoptic/invariants/fsmcheck/TracingStateSet;)#2
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,isSubset,(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z)#3
synoptic.invariants.fsmcheck.NFbyTracingSet.isSubset(Lsynoptic/invariants/fsmcheck/TracingStateSet;)Z#CheckCast(Lsynoptic/invariants/fsmcheck/NFbyTracingSet;)#1
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Ljava/lang/Object;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,mergeWith,(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V)#3
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,preferShorter,(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#9
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,preferShorter,(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#17
synoptic.invariants.fsmcheck.NFbyTracingSet.mergeWith(Lsynoptic/invariants/fsmcheck/TracingStateSet;)V#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/NFbyTracingSet;,preferShorter,(Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;)#25
synoptic.invariants.fsmcheck.FsmModelChecker.getCounterExample(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Invoke(VIRTUAL,Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,toCounterexample,(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;)#95
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#Get(Lsynoptic/model/interfaces/INode;,NONSTATIC,Lsynoptic/invariants/fsmcheck/TracingStateSet$HistoryNode;,node)#20
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#21
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#Invoke(INTERFACE,Lsynoptic/invariants/ITemporalInvariant;,shorten,(Ljava/util/List;)Ljava/util/List;)#83
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#7
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#CheckCast(Lsynoptic/model/interfaces/INode;)#8
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,getEType,()Lsynoptic/model/EventType;)#11
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/NeverFollowedInvariant;,first)#13
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/model/EventType;,equals,(Ljava/lang/Object;)Z)#14
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,getEType,()Lsynoptic/model/EventType;)#24
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/NeverFollowedInvariant;,second)#26
synoptic.invariants.NeverFollowedInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/model/EventType;,equals,(Ljava/lang/Object;)Z)#27
synoptic.invariants.fsmcheck.TracingStateSet$HistoryNode.toCounterexample(Lsynoptic/invariants/ITemporalInvariant;)Lsynoptic/invariants/CExamplePath;#Invoke(SPECIAL,Lsynoptic/invariants/CExamplePath;,<init>,(Lsynoptic/invariants/ITemporalInvariant;Ljava/util/List;)V)#84
synoptic.invariants.CExamplePath.<init>(Lsynoptic/invariants/ITemporalInvariant;Ljava/util/List;)V#Put(Lsynoptic/invariants/ITemporalInvariant;,NONSTATIC,Lsynoptic/invariants/CExamplePath;,invariant)#4
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#5
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#CheckCast(Lsynoptic/model/interfaces/INode;)#6
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,getEType,()Lsynoptic/model/EventType;)#9
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/AlwaysPrecedesInvariant;,first)#11
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/model/EventType;,equals,(Ljava/lang/Object;)Z)#12
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,getEType,()Lsynoptic/model/EventType;)#18
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/AlwaysPrecedesInvariant;,second)#20
synoptic.invariants.AlwaysPrecedesInvariant.shorten(Ljava/util/List;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/model/EventType;,equals,(Ljava/lang/Object;)Z)#21
synoptic.invariants.TemporalInvariantSet$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#CheckCast(Lsynoptic/invariants/CExamplePath;)#2
synoptic.invariants.TemporalInvariantSet$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#CheckCast(Lsynoptic/invariants/CExamplePath;)#4
synoptic.invariants.TemporalInvariantSet$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#Invoke(VIRTUAL,Lsynoptic/invariants/TemporalInvariantSet$1;,compare,(Lsynoptic/invariants/CExamplePath;Lsynoptic/invariants/CExamplePath;)I)#5
synoptic.benchmarks.TimedTask.stop()V#Invoke(VIRTUAL,Lsynoptic/benchmarks/PerformanceMetrics;,record,(Lsynoptic/benchmarks/TimedTask;)V)#22
synoptic.benchmarks.PerformanceMetrics.record(Lsynoptic/benchmarks/TimedTask;)V#Invoke(VIRTUAL,Lsynoptic/benchmarks/TimedTask;,getTask,()Ljava/lang/String;)#2
synoptic.benchmarks.PerformanceMetrics.record(Lsynoptic/benchmarks/TimedTask;)V#Invoke(VIRTUAL,Lsynoptic/benchmarks/TimedTask;,getTime,()Ljava/lang/Long;)#4
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,doBenchmarking)#6
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#ConditionalBranch(I,eq,21)#8
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#32
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#40
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#CheckCast(Ljava/lang/Long;)#41
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Invoke(VIRTUAL,Ljava/lang/Long;,longValue,()J)#42
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#46
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#59
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#67
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#CheckCast(Ljava/lang/Long;)#68
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Invoke(VIRTUAL,Ljava/lang/Long;,longValue,()J)#69
synoptic.benchmarks.PerformanceMetrics.record(Ljava/lang/String;J)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#73
synoptic.benchmarks.PerformanceMetrics.record(Lsynoptic/benchmarks/TimedTask;)V#Invoke(VIRTUAL,Lsynoptic/benchmarks/TimedTask;,getTask,()Ljava/lang/String;)#10
synoptic.benchmarks.PerformanceMetrics.record(Lsynoptic/benchmarks/TimedTask;)V#Invoke(VIRTUAL,Lsynoptic/benchmarks/TimedTask;,getAccumulativity,()Z)#12
synoptic.benchmarks.PerformanceMetrics.record(Lsynoptic/benchmarks/TimedTask;)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#14
synoptic.benchmarks.PerformanceMetrics.record(Lsynoptic/benchmarks/TimedTask;)V#Invoke(VIRTUAL,Lsynoptic/benchmarks/TimedTask;,getParent,()Lsynoptic/benchmarks/TimedTask;)#17
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,doBenchmarking)#106
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#ConditionalBranch(I,eq,119)#108
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#58
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#CheckCast(Lsynoptic/invariants/CExamplePath;)#59
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Get(Lsynoptic/invariants/ITemporalInvariant;,NONSTATIC,Lsynoptic/invariants/CExamplePath;,invariant)#63
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#64
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Get(Lsynoptic/invariants/ITemporalInvariant;,NONSTATIC,Lsynoptic/invariants/CExamplePath;,invariant)#6
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/Object;,toString,()Ljava/lang/String;)#7
synoptic.invariants.AlwaysFollowedInvariant.toString()Ljava/lang/String;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/AlwaysFollowedInvariant;,first)#3
synoptic.invariants.AlwaysFollowedInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/Object;,toString,()Ljava/lang/String;)#4
synoptic.model.StringEventType.toString()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/StringEventType;,eType)#1
synoptic.model.StringEventType.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
synoptic.invariants.AlwaysFollowedInvariant.toString()Ljava/lang/String;#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#5
synoptic.invariants.AlwaysFollowedInvariant.toString()Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#6
synoptic.invariants.AlwaysFollowedInvariant.toString()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/invariants/AlwaysFollowedInvariant;,relation)#10
synoptic.invariants.AlwaysFollowedInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#11
synoptic.invariants.AlwaysFollowedInvariant.toString()Ljava/lang/String;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/AlwaysFollowedInvariant;,second)#15
synoptic.invariants.AlwaysFollowedInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/Object;,toString,()Ljava/lang/String;)#16
synoptic.invariants.AlwaysFollowedInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#17
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#20
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#CheckCast(Ljava/lang/Object;)#21
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Instanceof(Lsynoptic/model/Partition;)#24
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#ConditionalBranch(I,eq,35)#26
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#CheckCast(Lsynoptic/model/Partition;)#29
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getEType,()Lsynoptic/model/EventType;)#30
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/Object;,toString,()Ljava/lang/String;)#31
synoptic.invariants.CExamplePath.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#32
synoptic.invariants.AlwaysPrecedesInvariant.toString()Ljava/lang/String;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/AlwaysPrecedesInvariant;,first)#3
synoptic.invariants.AlwaysPrecedesInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/Object;,toString,()Ljava/lang/String;)#4
synoptic.invariants.AlwaysPrecedesInvariant.toString()Ljava/lang/String;#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#5
synoptic.invariants.AlwaysPrecedesInvariant.toString()Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#6
synoptic.invariants.AlwaysPrecedesInvariant.toString()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/invariants/AlwaysPrecedesInvariant;,relation)#10
synoptic.invariants.AlwaysPrecedesInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#11
synoptic.invariants.AlwaysPrecedesInvariant.toString()Ljava/lang/String;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/AlwaysPrecedesInvariant;,second)#15
synoptic.invariants.AlwaysPrecedesInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/Object;,toString,()Ljava/lang/String;)#16
synoptic.invariants.AlwaysPrecedesInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#17
synoptic.invariants.NeverFollowedInvariant.toString()Ljava/lang/String;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/NeverFollowedInvariant;,first)#3
synoptic.invariants.NeverFollowedInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/Object;,toString,()Ljava/lang/String;)#4
synoptic.invariants.NeverFollowedInvariant.toString()Ljava/lang/String;#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#5
synoptic.invariants.NeverFollowedInvariant.toString()Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#6
synoptic.invariants.NeverFollowedInvariant.toString()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/invariants/NeverFollowedInvariant;,relation)#10
synoptic.invariants.NeverFollowedInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#11
synoptic.invariants.NeverFollowedInvariant.toString()Ljava/lang/String;#Get(Lsynoptic/model/EventType;,NONSTATIC,Lsynoptic/invariants/NeverFollowedInvariant;,second)#15
synoptic.invariants.NeverFollowedInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/Object;,toString,()Ljava/lang/String;)#16
synoptic.invariants.NeverFollowedInvariant.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#17
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(STATIC,Lsynoptic/algorithms/bisim/Bisimulation;,tryAndRecordCandidateSplits,(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;)#37
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#7
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#CheckCast(Lsynoptic/invariants/CExamplePath;)#8
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/invariants/CExamplePath;,toString,()Ljava/lang/String;)#16
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Invoke(STATIC,Lsynoptic/algorithms/bisim/Bisimulation;,getSplits,(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;)#22
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#12
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#CheckCast(Lsynoptic/model/Partition;)#13
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getEventNodes,()Ljava/util/Set;)#14
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#29
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#CheckCast(Lsynoptic/model/Partition;)#30
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#ConditionalBranch(Ljava/lang/Object;,ne,40)#34
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getEventNodes,()Ljava/util/Set;)#48
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Get(Lsynoptic/invariants/ITemporalInvariant;,NONSTATIC,Lsynoptic/invariants/CExamplePath;,invariant)#61
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(INTERFACE,Lsynoptic/invariants/ITemporalInvariant;,getRelation,()Ljava/lang/String;)#62
synoptic.invariants.BinaryInvariant.getRelation()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/invariants/BinaryInvariant;,relation)#1
synoptic.invariants.BinaryInvariant.getRelation()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#69
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#CheckCast(Lsynoptic/model/EventNode;)#70
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getSuccessors,(Ljava/lang/String;)Ljava/util/Set;)#75
synoptic.model.EventNode.getSuccessors(Ljava/lang/String;)Ljava/util/Set;#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitionsIterator,(Ljava/lang/String;)Lsynoptic/util/IIterableIterator;)#6
synoptic.model.EventNode.getTransitionsIterator(Ljava/lang/String;)Lsynoptic/util/IIterableIterator;#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitions,(Ljava/lang/String;)Ljava/util/List;)#2
synoptic.model.EventNode.getTransitionsIterator(Ljava/lang/String;)Lsynoptic/util/IIterableIterator;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#3
synoptic.model.EventNode.getSuccessors(Ljava/lang/String;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#11
synoptic.model.EventNode.getSuccessors(Ljava/lang/String;)Ljava/util/Set;#CheckCast(Lsynoptic/model/Transition;)#12
synoptic.model.EventNode.getSuccessors(Ljava/lang/String;)Ljava/util/Set;#Invoke(VIRTUAL,Lsynoptic/model/Transition;,getTarget,()Ljava/lang/Object;)#16
synoptic.model.EventNode.getSuccessors(Ljava/lang/String;)Ljava/util/Set;#CheckCast(Lsynoptic/model/EventNode;)#17
synoptic.model.EventNode.getSuccessors(Ljava/lang/String;)Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#18
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Get(Lsynoptic/invariants/ITemporalInvariant;,NONSTATIC,Lsynoptic/invariants/CExamplePath;,invariant)#91
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(INTERFACE,Lsynoptic/invariants/ITemporalInvariant;,getRelation,()Ljava/lang/String;)#92
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getTransition,(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;)#93
synoptic.model.Partition.getTransition(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getTransitionsIterator,(Ljava/lang/String;)Lsynoptic/util/IIterableIterator;)#13
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#31
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#CheckCast(Lsynoptic/model/EventNode;)#32
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitions,(Ljava/lang/String;)Ljava/util/List;)#34
synoptic.model.Partition$1.<init>(Lsynoptic/model/Partition;Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#35
synoptic.model.Partition.getTransition(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;#Invoke(INTERFACE,Lsynoptic/model/interfaces/ITransition;,getTarget,()Ljava/lang/Object;)#21
synoptic.model.Partition.getTransition(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;#CheckCast(Lsynoptic/model/Partition;)#22
synoptic.model.Partition.getTransition(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#24
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#49
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#CheckCast(Lsynoptic/model/EventNode;)#50
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/Partition$1;,val$relation)#52
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitions,(Ljava/lang/String;)Ljava/util/List;)#53
synoptic.model.Partition$1.getNext()Lsynoptic/model/Transition;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#54
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#ConditionalBranch(Ljava/lang/Object;,eq,107)#99
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Get(Lsynoptic/invariants/ITemporalInvariant;,NONSTATIC,Lsynoptic/invariants/CExamplePath;,invariant)#103
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(INTERFACE,Lsynoptic/invariants/ITemporalInvariant;,getRelation,()Ljava/lang/String;)#104
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getTransition,(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/model/interfaces/ITransition;)#105
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getCandidateSplitBasedOnOutgoing,(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;)#112
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#19
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#CheckCast(Lsynoptic/model/EventNode;)#20
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(STATIC,Lsynoptic/model/Partition;,fulfillsStrong,(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z)#24
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitions,()Ljava/util/List;)#1
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#6
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#CheckCast(Lsynoptic/model/interfaces/ITransition;)#7
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#Invoke(INTERFACE,Lsynoptic/model/interfaces/ITransition;,getRelation,()Ljava/lang/String;)#10
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#Invoke(INTERFACE,Lsynoptic/model/interfaces/ITransition;,getRelation,()Ljava/lang/String;)#12
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#13
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#Invoke(INTERFACE,Lsynoptic/model/interfaces/ITransition;,getTarget,()Ljava/lang/Object;)#17
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#CheckCast(Lsynoptic/model/EventNode;)#18
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getParent,()Lsynoptic/model/Partition;)#19
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#Invoke(INTERFACE,Lsynoptic/model/interfaces/ITransition;,getTarget,()Ljava/lang/Object;)#21
synoptic.model.Partition.fulfillsStrong(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#22
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(SPECIAL,Lsynoptic/algorithms/graph/PartitionSplit;,<init>,(Lsynoptic/model/Partition;)V)#40
synoptic.algorithms.graph.PartitionSplit.<init>(Lsynoptic/model/Partition;)V#Put(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,partitionToSplit)#13
synoptic.algorithms.graph.PartitionSplit.<init>(Lsynoptic/model/Partition;)V#Invoke(VIRTUAL,Lsynoptic/model/Partition;,size,()I)#18
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#48
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#CheckCast(Lsynoptic/model/EventNode;)#49
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#53
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(VIRTUAL,Lsynoptic/algorithms/graph/PartitionSplit;,addEventToSplit,(Lsynoptic/model/EventNode;)V)#32
synoptic.algorithms.graph.PartitionSplit.addEventToSplit(Lsynoptic/model/EventNode;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#3
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(INTERFACE,Lsynoptic/model/interfaces/ITransition;,getRelation,()Ljava/lang/String;)#130
synoptic.algorithms.bisim.Bisimulation.getSplits(Lsynoptic/invariants/CExamplePath;Lsynoptic/model/PartitionGraph;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getCandidateSplitBasedOnIncoming,(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;)#131
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#21
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#CheckCast(Lsynoptic/model/EventNode;)#22
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getSuccessors,(Ljava/lang/String;)Ljava/util/Set;)#27
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(SPECIAL,Lsynoptic/algorithms/graph/PartitionSplit;,<init>,(Lsynoptic/model/Partition;)V)#54
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#62
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#CheckCast(Lsynoptic/model/EventNode;)#63
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(INTERFACE,Ljava/util/Set;,contains,(Ljava/lang/Object;)Z)#67
synoptic.model.Partition.getCandidateSplitBasedOnIncoming(Lsynoptic/model/Partition;Ljava/lang/String;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(VIRTUAL,Lsynoptic/algorithms/graph/PartitionSplit;,addEventToSplit,(Lsynoptic/model/EventNode;)V)#72
synoptic.algorithms.graph.PartitionSplit.toString()Ljava/lang/String;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,partitionToSplit)#5
synoptic.algorithms.graph.PartitionSplit.toString()Ljava/lang/String;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getEType,()Lsynoptic/model/EventType;)#6
synoptic.algorithms.graph.PartitionSplit.toString()Ljava/lang/String;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,partitionToSplit)#17
synoptic.algorithms.graph.PartitionSplit.toString()Ljava/lang/String;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getEventNodes,()Ljava/util/Set;)#18
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#42
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#CheckCast(Lsynoptic/algorithms/graph/PartitionSplit;)#43
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,performExtraChecks)#46
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#ConditionalBranch(I,eq,58)#48
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#ConditionalBranch(Ljava/lang/Object;,ne,63)#60
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/invariants/ITemporalInvariant;,NONSTATIC,Lsynoptic/invariants/CExamplePath;,invariant)#64
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/algorithms/graph/PartitionSplit;,getPartition,()Lsynoptic/model/Partition;)#68
synoptic.algorithms.graph.PartitionSplit.getPartition()Lsynoptic/model/Partition;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,partitionToSplit)#1
synoptic.algorithms.graph.PartitionSplit.getPartition()Lsynoptic/model/Partition;#Return(Ljava/lang/Object;)#2
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Invoke(SPECIAL,Lsynoptic/algorithms/graph/PartitionMultiSplit;,<init>,(Lsynoptic/algorithms/graph/PartitionSplit;)V)#72
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#Invoke(VIRTUAL,Lsynoptic/algorithms/graph/PartitionSplit;,getPartition,()Lsynoptic/model/Partition;)#9
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#Put(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiSplit;,partition)#10
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#Invoke(VIRTUAL,Lsynoptic/algorithms/graph/PartitionSplit;,getSplitEvents,()Ljava/util/Set;)#14
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiSplit;,partition)#20
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getEventNodes,()Ljava/util/Set;)#21
synoptic.algorithms.graph.PartitionMultiSplit.<init>(Lsynoptic/algorithms/graph/PartitionSplit;)V#Invoke(VIRTUAL,Lsynoptic/algorithms/graph/PartitionSplit;,getSplitEvents,()Ljava/util/Set;)#26
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Invoke(STATIC,Lsynoptic/algorithms/bisim/Bisimulation;,tryAndRecordSplitOp,(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z)#73
synoptic.model.PartitionGraph.apply(Lsynoptic/algorithms/graph/IOperation;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Ljava/lang/Object;,getClass,()Ljava/lang/Class;)#1
synoptic.model.PartitionGraph.apply(Lsynoptic/algorithms/graph/IOperation;)Lsynoptic/algorithms/graph/IOperation;#CheckCast(Lsynoptic/algorithms/graph/PartitionMultiSplit;)#7
synoptic.model.PartitionGraph.apply(Lsynoptic/algorithms/graph/IOperation;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Ljava/util/LinkedList;,push,(Ljava/lang/Object;)V)#8
synoptic.model.PartitionGraph.apply(Lsynoptic/algorithms/graph/IOperation;)Lsynoptic/algorithms/graph/IOperation;#Invoke(INTERFACE,Lsynoptic/algorithms/graph/IOperation;,commit,(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;)#11
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#12
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#CheckCast(Ljava/util/Set;)#13
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(SPECIAL,Lsynoptic/model/Partition;,<init>,(Ljava/util/Set;)V)#24
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiSplit;,partition)#31
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,removeEventNodes,(Ljava/util/Set;)V)#33
synoptic.model.Partition.removeEventNodes(Ljava/util/Set;)V#Invoke(INTERFACE,Ljava/util/Set;,removeAll,(Ljava/util/Collection;)Z)#3
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,addEventNodes,(Ljava/util/Collection;)V)#36
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getEventNodes,()Ljava/util/Set;)#1
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#6
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#CheckCast(Lsynoptic/model/EventNode;)#7
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getNodeRelations,()Ljava/util/Set;)#12
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#Invoke(VIRTUAL,Ljava/util/LinkedHashSet;,add,(Ljava/lang/Object;)Z)#22
synoptic.model.PartitionGraph.add(Lsynoptic/model/Partition;)V#Invoke(VIRTUAL,Lsynoptic/model/PartitionGraph;,clearNodeAdjacentsCache,(Lsynoptic/model/Partition;)V)#26
synoptic.model.PartitionGraph.clearNodeAdjacentsCache(Lsynoptic/model/Partition;)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,remove,(Ljava/lang/Object;)Ljava/lang/Object;)#3
synoptic.model.PartitionGraph.clearNodeAdjacentsCache(Lsynoptic/model/Partition;)V#Invoke(INTERFACE,Ljava/util/Map$Entry;,getValue,()Ljava/lang/Object;)#14
synoptic.model.PartitionGraph.clearNodeAdjacentsCache(Lsynoptic/model/Partition;)V#CheckCast(Ljava/util/Set;)#15
synoptic.model.PartitionGraph.clearNodeAdjacentsCache(Lsynoptic/model/Partition;)V#Invoke(INTERFACE,Ljava/util/Set;,contains,(Ljava/lang/Object;)Z)#17
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiSplit;,partition)#49
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/PartitionGraph;,clearNodeAdjacentsCache,(Lsynoptic/model/Partition;)V)#50
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,performExtraChecks)#52
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#ConditionalBranch(I,eq,57)#54
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiSplit;,partition)#60
synoptic.algorithms.graph.PartitionMultiSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(SPECIAL,Lsynoptic/algorithms/graph/PartitionMultiMerge;,<init>,(Lsynoptic/model/Partition;Ljava/util/ArrayList;)V)#62
synoptic.algorithms.graph.PartitionMultiMerge.<init>(Lsynoptic/model/Partition;Ljava/util/ArrayList;)V#Put(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiMerge;,retainedPartition)#4
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Invoke(STATIC,Lsynoptic/invariants/TemporalInvariantSet;,getCounterExample,(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;)#6
synoptic.invariants.TemporalInvariantSet.getCounterExample(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,useFSMChecker)#5
synoptic.invariants.TemporalInvariantSet.getCounterExample(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#ConditionalBranch(I,eq,17)#7
synoptic.invariants.TemporalInvariantSet.getCounterExample(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#CheckCast(Lsynoptic/invariants/BinaryInvariant;)#9
synoptic.invariants.TemporalInvariantSet.getCounterExample(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Invoke(STATIC,Lsynoptic/invariants/fsmcheck/FsmModelChecker;,getCounterExample,(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;)#11
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#6
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#CheckCast(Lsynoptic/model/Partition;)#7
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiMerge;,retainedPartition)#10
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getEventNodes,()Ljava/util/Set;)#12
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,addEventNodes,(Ljava/util/Collection;)V)#13
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,removeAllEventNodes,()V)#15
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/PartitionGraph;,removePartition,(Lsynoptic/model/Partition;)V)#18
synoptic.model.PartitionGraph.removePartition(Lsynoptic/model/Partition;)V#Invoke(VIRTUAL,Ljava/util/LinkedHashSet;,remove,(Ljava/lang/Object;)Z)#3
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/PartitionGraph;,clearNodeAdjacentsCache,(Lsynoptic/model/Partition;)V)#21
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiMerge;,retainedPartition)#28
synoptic.algorithms.graph.PartitionMultiMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/PartitionGraph;,removeFromCache,(Lsynoptic/model/Partition;)V)#29
synoptic.model.PartitionGraph.removeFromCache(Lsynoptic/model/Partition;)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,remove,(Ljava/lang/Object;)Ljava/lang/Object;)#3
synoptic.benchmarks.PerformanceMetrics.getAccumulativity(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#11
synoptic.benchmarks.PerformanceMetrics.getAccumulativity(Ljava/lang/String;)Z#CheckCast(Ljava/lang/Boolean;)#12
synoptic.benchmarks.PerformanceMetrics.getAccumulativity(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/Boolean;,booleanValue,()Z)#13
synoptic.model.Partition.getCandidateSplitBasedOnOutgoing(Lsynoptic/model/interfaces/ITransition;)Lsynoptic/algorithms/graph/PartitionSplit;#Invoke(VIRTUAL,Lsynoptic/algorithms/graph/PartitionSplit;,addEventToSplit,(Lsynoptic/model/EventNode;)V)#59
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Return(Ljava/lang/Object;)#90
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#ConditionalBranch(Ljava/lang/Object;,ne,53)#47
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#56
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#57
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#65
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Lsynoptic/model/PartitionGraph;,apply,(Lsynoptic/algorithms/graph/IOperation;)Lsynoptic/algorithms/graph/IOperation;)#70
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,newPartition)#12
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#ConditionalBranch(Ljava/lang/Object;,ne,22)#14
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/algorithms/graph/PartitionSplit;,getSplitEvents,()Ljava/util/Set;)#19
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,newPartition)#23
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/algorithms/graph/PartitionSplit;,getSplitEvents,()Ljava/util/Set;)#25
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,addEventNodes,(Ljava/util/Collection;)V)#26
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,partitionToSplit)#28
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/algorithms/graph/PartitionSplit;,getSplitEvents,()Ljava/util/Set;)#30
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,removeEventNodes,(Ljava/util/Set;)V)#31
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,newPartition)#34
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/PartitionGraph;,add,(Lsynoptic/model/Partition;)V)#35
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,partitionToSplit)#38
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/PartitionGraph;,clearNodeAdjacentsCache,(Lsynoptic/model/Partition;)V)#39
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,newPartition)#42
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/PartitionGraph;,clearNodeAdjacentsCache,(Lsynoptic/model/Partition;)V)#43
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,partitionToSplit)#47
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,newPartition)#49
synoptic.algorithms.graph.PartitionSplit.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(SPECIAL,Lsynoptic/algorithms/graph/PartitionMerge;,<init>,(Lsynoptic/model/Partition;Lsynoptic/model/Partition;)V)#50
synoptic.algorithms.graph.PartitionMerge.<init>(Lsynoptic/model/Partition;Lsynoptic/model/Partition;)V#Put(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMerge;,retained)#35
synoptic.algorithms.graph.PartitionMerge.<init>(Lsynoptic/model/Partition;Lsynoptic/model/Partition;)V#Put(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMerge;,removed)#38
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,dumpIntermediateStages)#135
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#ConditionalBranch(I,eq,145)#137
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Invoke(VIRTUAL,Ljava/util/HashMap;,containsKey,(Ljava/lang/Object;)Z)#19
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Invoke(VIRTUAL,Ljava/util/HashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#42
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiSplit;,partition)#7
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getEType,()Lsynoptic/model/EventType;)#8
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#21
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#CheckCast(Ljava/util/Set;)#22
synoptic.algorithms.graph.PartitionMultiSplit.toString()Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/Set;,size,()I)#28
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/invariants/ITemporalInvariant;,NONSTATIC,Lsynoptic/invariants/CExamplePath;,invariant)#78
synoptic.algorithms.bisim.Bisimulation.tryAndRecordCandidateSplits(Ljava/util/List;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Ljava/util/Set;)Lsynoptic/algorithms/graph/IOperation;#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#79
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Invoke(VIRTUAL,Ljava/util/HashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#24
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#CheckCast(Lsynoptic/algorithms/graph/PartitionMultiSplit;)#25
synoptic.algorithms.bisim.Bisimulation.tryAndRecordSplitOp(Lsynoptic/invariants/ITemporalInvariant;Lsynoptic/model/PartitionGraph;Ljava/util/HashMap;Lsynoptic/model/Partition;Lsynoptic/algorithms/graph/PartitionMultiSplit;)Z#Invoke(VIRTUAL,Lsynoptic/algorithms/graph/PartitionMultiSplit;,incorporate,(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V)#27
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Invoke(VIRTUAL,Lsynoptic/algorithms/graph/PartitionMultiSplit;,getPartition,()Lsynoptic/model/Partition;)#1
synoptic.algorithms.graph.PartitionMultiSplit.getPartition()Lsynoptic/model/Partition;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiSplit;,partition)#1
synoptic.algorithms.graph.PartitionMultiSplit.getPartition()Lsynoptic/model/Partition;#Return(Ljava/lang/Object;)#2
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMultiSplit;,partition)#3
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#ConditionalBranch(Ljava/lang/Object;,eq,9)#4
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#19
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#CheckCast(Ljava/util/Set;)#20
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#28
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#CheckCast(Ljava/util/Set;)#29
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Invoke(SPECIAL,Ljava/util/LinkedHashSet;,<init>,(Ljava/util/Collection;)V)#34
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Invoke(INTERFACE,Ljava/util/Set;,removeAll,(Ljava/util/Collection;)Z)#38
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Invoke(INTERFACE,Ljava/util/Set;,retainAll,(Ljava/util/Collection;)Z)#42
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#67
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#CheckCast(Ljava/util/Set;)#68
synoptic.algorithms.graph.PartitionMultiSplit.incorporate(Lsynoptic/algorithms/graph/PartitionMultiSplit;)V#Invoke(INTERFACE,Ljava/util/Set;,size,()I)#69
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#81
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#CheckCast(Lsynoptic/algorithms/graph/PartitionMultiSplit;)#82
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Lsynoptic/model/PartitionGraph;,apply,(Lsynoptic/algorithms/graph/IOperation;)Lsynoptic/algorithms/graph/IOperation;)#86
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#102
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#116
synoptic.algorithms.bisim.Bisimulation.performOneSplitPartitionsStep(ILsynoptic/model/PartitionGraph;Ljava/util/List;)I#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#117
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,doBenchmarking)#80
synoptic.invariants.TemporalInvariantSet.getAllCounterExamples(Lsynoptic/model/interfaces/IGraph;)Ljava/util/List;#ConditionalBranch(I,eq,93)#82
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,dumpIntermediateStages)#120
synoptic.algorithms.bisim.Bisimulation.splitPartitions(Lsynoptic/model/PartitionGraph;)V#ConditionalBranch(I,eq,128)#122
synoptic.main.Main.runSynoptic(Lsynoptic/model/PartitionGraph;)V#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,logLvlExtraVerbose)#27
synoptic.main.Main.runSynoptic(Lsynoptic/model/PartitionGraph;)V#ConditionalBranch(I,eq,36)#29
synoptic.algorithms.bisim.Bisimulation.mergePartitions(Lsynoptic/model/PartitionGraph;Lsynoptic/invariants/TemporalInvariantSet;I)V#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,dumpIntermediateStages)#13
synoptic.algorithms.bisim.Bisimulation.mergePartitions(Lsynoptic/model/PartitionGraph;Lsynoptic/invariants/TemporalInvariantSet;I)V#ConditionalBranch(I,eq,21)#15
synoptic.algorithms.bisim.Bisimulation.mergePartitions(Lsynoptic/model/PartitionGraph;Lsynoptic/invariants/TemporalInvariantSet;I)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#39
synoptic.algorithms.bisim.Bisimulation.mergePartitions(Lsynoptic/model/PartitionGraph;Lsynoptic/invariants/TemporalInvariantSet;I)V#CheckCast(Lsynoptic/model/Partition;)#40
synoptic.algorithms.bisim.Bisimulation.mergePartitions(Lsynoptic/model/PartitionGraph;Lsynoptic/invariants/TemporalInvariantSet;I)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#47
synoptic.algorithms.bisim.Bisimulation.mergePartitions(Lsynoptic/model/PartitionGraph;Lsynoptic/invariants/TemporalInvariantSet;I)V#CheckCast(Lsynoptic/model/Partition;)#48
synoptic.algorithms.bisim.Bisimulation.mergePartitions(Lsynoptic/model/PartitionGraph;Lsynoptic/invariants/TemporalInvariantSet;I)V#ConditionalBranch(Ljava/lang/Object;,ne,54)#52
synoptic.algorithms.bisim.Bisimulation.mergePartitions(Lsynoptic/model/PartitionGraph;Lsynoptic/invariants/TemporalInvariantSet;I)V#Invoke(STATIC,Lsynoptic/algorithms/bisim/KTails;,kEquals,(Lsynoptic/model/interfaces/INode;Lsynoptic/model/interfaces/INode;IZ)Z)#58
synoptic.algorithms.bisim.KTails.kEquals(Lsynoptic/model/interfaces/INode;Lsynoptic/model/interfaces/INode;IZ)Z#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,getEType,()Lsynoptic/model/EventType;)#4
synoptic.algorithms.bisim.KTails.kEquals(Lsynoptic/model/interfaces/INode;Lsynoptic/model/interfaces/INode;IZ)Z#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,getEType,()Lsynoptic/model/EventType;)#6
synoptic.algorithms.bisim.Bisimulation.mergePartitions(Lsynoptic/model/PartitionGraph;Lsynoptic/invariants/TemporalInvariantSet;I)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,containsKey,(Ljava/lang/Object;)Z)#64
synoptic.algorithms.bisim.Bisimulation.mergePartitions(Lsynoptic/model/PartitionGraph;Lsynoptic/invariants/TemporalInvariantSet;I)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,containsKey,(Ljava/lang/Object;)Z)#77
synoptic.algorithms.bisim.Bisimulation.mergePartitions(Lsynoptic/model/PartitionGraph;Lsynoptic/invariants/TemporalInvariantSet;I)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#95
synoptic.model.Partition.toString()Ljava/lang/String;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getEType,()Lsynoptic/model/EventType;)#20
synoptic.algorithms.bisim.Bisimulation.mergePartitions(Lsynoptic/model/PartitionGraph;Lsynoptic/invariants/TemporalInvariantSet;I)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#99
synoptic.algorithms.bisim.Bisimulation.mergePartitions(Lsynoptic/model/PartitionGraph;Lsynoptic/invariants/TemporalInvariantSet;I)V#Invoke(SPECIAL,Lsynoptic/algorithms/graph/PartitionMerge;,<init>,(Lsynoptic/model/Partition;Lsynoptic/model/Partition;)V)#116
synoptic.algorithms.graph.PartitionMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMerge;,retained)#1
synoptic.algorithms.graph.PartitionMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,size,()I)#2
synoptic.algorithms.graph.PartitionMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMerge;,removed)#5
synoptic.algorithms.graph.PartitionMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,size,()I)#6
synoptic.algorithms.graph.PartitionMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMerge;,retained)#11
synoptic.algorithms.graph.PartitionMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMerge;,removed)#13
synoptic.algorithms.graph.PartitionMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(SPECIAL,Lsynoptic/algorithms/graph/PartitionSplit;,<init>,(Lsynoptic/model/Partition;Lsynoptic/model/Partition;)V)#14
synoptic.algorithms.graph.PartitionSplit.<init>(Lsynoptic/model/Partition;Lsynoptic/model/Partition;)V#Invoke(SPECIAL,Lsynoptic/algorithms/graph/PartitionSplit;,<init>,(Lsynoptic/model/Partition;)V)#2
synoptic.algorithms.graph.PartitionSplit.<init>(Lsynoptic/model/Partition;Lsynoptic/model/Partition;)V#Put(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionSplit;,newPartition)#5
synoptic.algorithms.graph.PartitionMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMerge;,removed)#17
synoptic.algorithms.graph.PartitionMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getEventNodes,()Ljava/util/Set;)#18
synoptic.algorithms.graph.PartitionMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#23
synoptic.algorithms.graph.PartitionMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#CheckCast(Lsynoptic/model/EventNode;)#24
synoptic.algorithms.graph.PartitionMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/algorithms/graph/PartitionSplit;,addEventToSplit,(Lsynoptic/model/EventNode;)V)#28
synoptic.algorithms.graph.PartitionMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMerge;,retained)#34
synoptic.algorithms.graph.PartitionMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMerge;,removed)#36
synoptic.algorithms.graph.PartitionMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getEventNodes,()Ljava/util/Set;)#37
synoptic.algorithms.graph.PartitionMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,addEventNodes,(Ljava/util/Collection;)V)#38
synoptic.algorithms.graph.PartitionMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMerge;,removed)#40
synoptic.algorithms.graph.PartitionMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,removeAllEventNodes,()V)#41
synoptic.algorithms.graph.PartitionMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMerge;,removed)#44
synoptic.algorithms.graph.PartitionMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/PartitionGraph;,removePartition,(Lsynoptic/model/Partition;)V)#45
synoptic.algorithms.graph.PartitionMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMerge;,retained)#50
synoptic.algorithms.graph.PartitionMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,size,()I)#51
synoptic.algorithms.graph.PartitionMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMerge;,retained)#76
synoptic.algorithms.graph.PartitionMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/PartitionGraph;,clearNodeAdjacentsCache,(Lsynoptic/model/Partition;)V)#77
synoptic.algorithms.graph.PartitionMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Get(Lsynoptic/model/Partition;,NONSTATIC,Lsynoptic/algorithms/graph/PartitionMerge;,removed)#80
synoptic.algorithms.graph.PartitionMerge.commit(Lsynoptic/model/PartitionGraph;)Lsynoptic/algorithms/graph/IOperation;#Invoke(VIRTUAL,Lsynoptic/model/PartitionGraph;,clearNodeAdjacentsCache,(Lsynoptic/model/Partition;)V)#81
synoptic.invariants.TemporalInvariantSet.getFirstCounterExample(Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,useFSMChecker)#5
synoptic.invariants.TemporalInvariantSet.getFirstCounterExample(Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#ConditionalBranch(I,eq,39)#7
synoptic.invariants.TemporalInvariantSet.getFirstCounterExample(Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#14
synoptic.invariants.TemporalInvariantSet.getFirstCounterExample(Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#CheckCast(Lsynoptic/invariants/ITemporalInvariant;)#15
synoptic.invariants.TemporalInvariantSet.getFirstCounterExample(Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#CheckCast(Lsynoptic/invariants/BinaryInvariant;)#18
synoptic.invariants.TemporalInvariantSet.getFirstCounterExample(Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;#Invoke(STATIC,Lsynoptic/invariants/fsmcheck/FsmModelChecker;,getCounterExample,(Lsynoptic/invariants/BinaryInvariant;Lsynoptic/model/interfaces/IGraph;)Lsynoptic/invariants/CExamplePath;)#20
synoptic.algorithms.bisim.Bisimulation.mergePartitions(Lsynoptic/model/PartitionGraph;Lsynoptic/invariants/TemporalInvariantSet;I)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,containsKey,(Ljava/lang/Object;)Z)#137
synoptic.algorithms.bisim.Bisimulation.mergePartitions(Lsynoptic/model/PartitionGraph;Lsynoptic/invariants/TemporalInvariantSet;I)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#145
synoptic.algorithms.bisim.Bisimulation.mergePartitions(Lsynoptic/model/PartitionGraph;Lsynoptic/invariants/TemporalInvariantSet;I)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#149
synoptic.algorithms.bisim.Bisimulation.mergePartitions(Lsynoptic/model/PartitionGraph;Lsynoptic/invariants/TemporalInvariantSet;I)V#CheckCast(Ljava/util/LinkedHashSet;)#150
synoptic.algorithms.bisim.Bisimulation.mergePartitions(Lsynoptic/model/PartitionGraph;Lsynoptic/invariants/TemporalInvariantSet;I)V#Invoke(VIRTUAL,Ljava/util/LinkedHashSet;,add,(Ljava/lang/Object;)Z)#152
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Collection;,iterator,()Ljava/util/Iterator;)#6
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#7
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#CheckCast(Lsynoptic/model/EventNode;)#8
synoptic.model.Partition.addEventNodes(Ljava/util/Collection;)V#Invoke(VIRTUAL,Lsynoptic/model/Partition;,initialize,(Lsynoptic/model/EventNode;)V)#9
synoptic.algorithms.bisim.Bisimulation.mergePartitions(Lsynoptic/model/PartitionGraph;Lsynoptic/invariants/TemporalInvariantSet;I)V#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,performExtraChecks)#159
synoptic.algorithms.bisim.Bisimulation.mergePartitions(Lsynoptic/model/PartitionGraph;Lsynoptic/invariants/TemporalInvariantSet;I)V#ConditionalBranch(I,eq,164)#161
synoptic.algorithms.bisim.Bisimulation.mergePartitions(Lsynoptic/model/PartitionGraph;Lsynoptic/invariants/TemporalInvariantSet;I)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#69
synoptic.algorithms.bisim.Bisimulation.mergePartitions(Lsynoptic/model/PartitionGraph;Lsynoptic/invariants/TemporalInvariantSet;I)V#CheckCast(Ljava/util/LinkedHashSet;)#70
synoptic.algorithms.bisim.Bisimulation.mergePartitions(Lsynoptic/model/PartitionGraph;Lsynoptic/invariants/TemporalInvariantSet;I)V#Invoke(VIRTUAL,Ljava/util/LinkedHashSet;,contains,(Ljava/lang/Object;)Z)#72
synoptic.algorithms.bisim.Bisimulation.mergePartitions(Lsynoptic/model/PartitionGraph;Lsynoptic/invariants/TemporalInvariantSet;I)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#82
synoptic.algorithms.bisim.Bisimulation.mergePartitions(Lsynoptic/model/PartitionGraph;Lsynoptic/invariants/TemporalInvariantSet;I)V#CheckCast(Ljava/util/LinkedHashSet;)#83
synoptic.algorithms.bisim.Bisimulation.mergePartitions(Lsynoptic/model/PartitionGraph;Lsynoptic/invariants/TemporalInvariantSet;I)V#Invoke(VIRTUAL,Ljava/util/LinkedHashSet;,contains,(Ljava/lang/Object;)Z)#85
synoptic.algorithms.bisim.Bisimulation.mergePartitions(Lsynoptic/model/PartitionGraph;Lsynoptic/invariants/TemporalInvariantSet;I)V#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,dumpIntermediateStages)#200
synoptic.algorithms.bisim.Bisimulation.mergePartitions(Lsynoptic/model/PartitionGraph;Lsynoptic/invariants/TemporalInvariantSet;I)V#ConditionalBranch(I,eq,208)#202
synoptic.main.Main.runSynoptic(Lsynoptic/model/PartitionGraph;)V#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/SynopticOptions;,outputPathPrefix)#45
synoptic.main.Main.runSynoptic(Lsynoptic/model/PartitionGraph;)V#ConditionalBranch(Ljava/lang/Object;,eq,81)#47
synoptic.main.Main.runSynoptic(Lsynoptic/model/PartitionGraph;)V#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/SynopticOptions;,outputPathPrefix)#64
synoptic.main.Main.runSynoptic(Lsynoptic/model/PartitionGraph;)V#Invoke(STATIC,Lsynoptic/main/Main;,exportNonInitialGraph,(Ljava/lang/String;Lsynoptic/model/interfaces/IGraph;)V)#66
synoptic.main.Main.exportNonInitialGraph(Ljava/lang/String;Lsynoptic/model/interfaces/IGraph;)V#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,outputEdgeLabels)#3
synoptic.main.Main.exportNonInitialGraph(Ljava/lang/String;Lsynoptic/model/interfaces/IGraph;)V#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,exportAsGML)#5
synoptic.main.Main.exportNonInitialGraph(Ljava/lang/String;Lsynoptic/model/interfaces/IGraph;)V#ConditionalBranch(I,eq,10)#7
synoptic.main.Main.exportNonInitialGraph(Ljava/lang/String;Lsynoptic/model/interfaces/IGraph;)V#Invoke(STATIC,Lsynoptic/main/Main;,exportGraph,(Ljava/lang/String;Lsynoptic/model/interfaces/IGraph;ZZ)V)#11
synoptic.main.Main.exportGraph(Ljava/lang/String;Lsynoptic/model/interfaces/IGraph;ZZ)V#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/SynopticOptions;,outputPathPrefix)#1
synoptic.main.Main.exportGraph(Ljava/lang/String;Lsynoptic/model/interfaces/IGraph;ZZ)V#ConditionalBranch(Ljava/lang/Object;,ne,15)#3
synoptic.main.Main.exportGraph(Ljava/lang/String;Lsynoptic/model/interfaces/IGraph;ZZ)V#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,exportAsGML)#18
synoptic.main.Main.exportGraph(Ljava/lang/String;Lsynoptic/model/interfaces/IGraph;ZZ)V#ConditionalBranch(I,eq,31)#20
synoptic.main.Main.exportGraph(Ljava/lang/String;Lsynoptic/model/interfaces/IGraph;ZZ)V#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#34
synoptic.main.Main.exportGraph(Ljava/lang/String;Lsynoptic/model/interfaces/IGraph;ZZ)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#35
synoptic.main.Main.exportGraph(Ljava/lang/String;Lsynoptic/model/interfaces/IGraph;ZZ)V#Invoke(STATIC,Lsynoptic/model/export/GraphExporter;,exportGraph,(Ljava/lang/String;Lsynoptic/model/interfaces/IGraph;Z)V)#43
synoptic.model.export.GraphExporter.exportGraph(Ljava/lang/String;Lsynoptic/model/interfaces/IGraph;Z)V#Invoke(STATIC,Lsynoptic/model/export/GraphExporter;,exportGraph,(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V)#37
synoptic.model.Partition.compareTo(Ljava/lang/Object;)I#CheckCast(Lsynoptic/model/Partition;)#2
synoptic.model.Partition.compareTo(Ljava/lang/Object;)I#Invoke(VIRTUAL,Lsynoptic/model/Partition;,compareTo,(Lsynoptic/model/Partition;)I)#3
synoptic.model.Partition.compareTo(Lsynoptic/model/Partition;)I#ConditionalBranch(Ljava/lang/Object;,ne,16)#13
synoptic.model.Partition.compareTo(Lsynoptic/model/Partition;)I#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getEType,()Lsynoptic/model/EventType;)#19
synoptic.model.StringEventType.compareTo(Lsynoptic/model/EventType;)I#Invoke(SPECIAL,Lsynoptic/model/EventType;,compareTo,(Lsynoptic/model/EventType;)I)#2
synoptic.model.StringEventType.compareTo(Lsynoptic/model/EventType;)I#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/StringEventType;,eType)#10
synoptic.model.StringEventType.compareTo(Lsynoptic/model/EventType;)I#CheckCast(Lsynoptic/model/StringEventType;)#12
synoptic.model.StringEventType.compareTo(Lsynoptic/model/EventType;)I#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/model/StringEventType;,eType)#13
synoptic.model.StringEventType.compareTo(Lsynoptic/model/EventType;)I#Invoke(VIRTUAL,Ljava/lang/String;,compareTo,(Ljava/lang/String;)I)#14
synoptic.model.Partition.compareTo(Lsynoptic/model/Partition;)I#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getWeightedTransitions,()Ljava/util/List;)#28
synoptic.model.Partition.getWeightedTransitions()Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getTransitionsIterator,(Ljava/lang/String;)Lsynoptic/util/IIterableIterator;)#14
synoptic.model.Partition.getWeightedTransitions()Ljava/util/List;#Invoke(SPECIAL,Lsynoptic/model/Partition;,getWeightedTransitions,(Lsynoptic/util/IIterableIterator;)Ljava/util/List;)#15
synoptic.model.Partition.getWeightedTransitions(Lsynoptic/util/IIterableIterator;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,isInitial,()Z)#16
synoptic.model.Partition.getWeightedTransitions(Lsynoptic/util/IIterableIterator;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#146
synoptic.model.Partition.getWeightedTransitions(Lsynoptic/util/IIterableIterator;)Ljava/util/List;#CheckCast(Lsynoptic/model/EventNode;)#147
synoptic.model.Partition.getWeightedTransitions(Lsynoptic/util/IIterableIterator;)Ljava/util/List;#Invoke(STATIC,Lsynoptic/model/Partition;,fulfillsStrong,(Lsynoptic/model/EventNode;Lsynoptic/model/interfaces/ITransition;)Z)#151
synoptic.model.Partition.getWeightedTransitions(Lsynoptic/util/IIterableIterator;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/model/Transition;,getTarget,()Ljava/lang/Object;)#172
synoptic.model.Partition.getWeightedTransitions(Lsynoptic/util/IIterableIterator;)Ljava/util/List;#CheckCast(Lsynoptic/model/Partition;)#173
synoptic.model.Partition.getWeightedTransitions(Lsynoptic/util/IIterableIterator;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/model/Transition;,getRelation,()Ljava/lang/String;)#175
synoptic.model.Partition.getWeightedTransitions(Lsynoptic/util/IIterableIterator;)Ljava/util/List;#Invoke(SPECIAL,Lsynoptic/model/WeightedTransition;,<init>,(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;DI)V)#178
synoptic.model.WeightedTransition.<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;DI)V#Invoke(SPECIAL,Lsynoptic/model/Transition;,<init>,(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V)#4
synoptic.model.Partition.compareTo(Lsynoptic/model/Partition;)I#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getWeightedTransitions,()Ljava/util/List;)#31
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#23
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#CheckCast(Lsynoptic/model/interfaces/INode;)#24
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,showInitialNode)#27
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#ConditionalBranch(I,ne,34)#29
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#Get(Z,NONSTATIC,Lsynoptic/main/SynopticOptions;,showTerminalNode)#35
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#ConditionalBranch(I,ne,45)#37
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,isInitial,()Z)#50
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,isTerminal,()Z)#52
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#Invoke(VIRTUAL,Lsynoptic/model/export/GraphExportFormatter;,nodeToString,(ILsynoptic/model/interfaces/INode;ZZ)Ljava/lang/String;)#53
synoptic.model.export.DotExportFormatter.nodeToString(ILsynoptic/model/interfaces/INode;ZZ)Ljava/lang/String;#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,getEType,()Lsynoptic/model/EventType;)#5
synoptic.model.export.DotExportFormatter.nodeToString(ILsynoptic/model/interfaces/INode;ZZ)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/Object;,toString,()Ljava/lang/String;)#6
synoptic.model.export.DotExportFormatter.nodeToString(ILsynoptic/model/interfaces/INode;ZZ)Ljava/lang/String;#Invoke(STATIC,Lsynoptic/model/export/DotExportFormatter;,quote,(Ljava/lang/String;)Ljava/lang/String;)#7
synoptic.model.export.GraphExportFormatter.quote(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#3
synoptic.model.export.GraphExportFormatter.quote(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#37
synoptic.model.export.GraphExportFormatter.quote(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#13
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#59
synoptic.model.export.DotExportFormatter.nodeToString(ILsynoptic/model/interfaces/INode;ZZ)Ljava/lang/String;#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#32
synoptic.model.export.DotExportFormatter.nodeToString(ILsynoptic/model/interfaces/INode;ZZ)Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#33
synoptic.model.export.DotExportFormatter.nodeToString(ILsynoptic/model/interfaces/INode;ZZ)Ljava/lang/String;#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#19
synoptic.model.export.DotExportFormatter.nodeToString(ILsynoptic/model/interfaces/INode;ZZ)Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#20
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#74
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#CheckCast(Lsynoptic/model/interfaces/INode;)#75
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#ConditionalBranch(I,eq,84)#79
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,getWeightedTransitions,()Ljava/util/List;)#81
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#94
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#CheckCast(Lsynoptic/model/interfaces/ITransition;)#95
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#Invoke(INTERFACE,Lsynoptic/model/interfaces/ITransition;,getSource,()Ljava/lang/Object;)#99
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,containsKey,(Ljava/lang/Object;)Z)#100
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#Invoke(INTERFACE,Lsynoptic/model/interfaces/ITransition;,getTarget,()Ljava/lang/Object;)#105
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,containsKey,(Ljava/lang/Object;)Z)#106
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#Invoke(INTERFACE,Lsynoptic/model/interfaces/ITransition;,getSource,()Ljava/lang/Object;)#112
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#113
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#CheckCast(Ljava/lang/Integer;)#114
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#115
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#Invoke(INTERFACE,Lsynoptic/model/interfaces/ITransition;,getTarget,()Ljava/lang/Object;)#119
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#120
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#CheckCast(Ljava/lang/Integer;)#121
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#122
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#ConditionalBranch(I,eq,172)#158
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#CheckCast(Lsynoptic/model/WeightedTransition;)#160
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#Invoke(VIRTUAL,Lsynoptic/model/WeightedTransition;,getFraction,()D)#161
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#Invoke(INTERFACE,Lsynoptic/model/interfaces/ITransition;,getRelation,()Ljava/lang/String;)#168
synoptic.model.export.GraphExporter.exportGraph(Ljava/io/Writer;Lsynoptic/model/interfaces/IGraph;Z)V#Invoke(VIRTUAL,Lsynoptic/model/export/GraphExportFormatter;,edgeToStringWithProb,(IIDLjava/lang/String;)Ljava/lang/String;)#169
synoptic.model.export.DotExportFormatter.edgeToStringWithProb(IIDLjava/lang/String;)Ljava/lang/String;#Invoke(SPECIAL,Lsynoptic/model/export/DotExportFormatter;,edgeToString,(IILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#23
synoptic.model.export.DotExportFormatter.edgeToString(IILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#31
synoptic.model.export.DotExportFormatter.edgeToString(IILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#32
synoptic.model.export.DotExportFormatter.edgeToString(IILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#42
synoptic.model.export.DotExportFormatter.edgeToString(IILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#43
synoptic.model.export.DotExportFormatter.edgeToString(IILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Lsynoptic/model/export/DotExportFormatter;,getRelationColor,(Ljava/lang/String;)Ljava/lang/String;)#48
synoptic.model.export.GraphExportFormatter.getRelationColor(Ljava/lang/String;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#3
synoptic.model.export.GraphExportFormatter.getRelationColor(Ljava/lang/String;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#9
synoptic.model.export.GraphExportFormatter.getRelationColor(Ljava/lang/String;)Ljava/lang/String;#CheckCast(Ljava/lang/String;)#10
synoptic.model.export.GraphExportFormatter.getRelationColor(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#11
synoptic.model.export.DotExportFormatter.edgeToString(IILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#49
synoptic.model.export.DotExportFormatter.edgeToString(IILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#55
synoptic.model.export.DotExportFormatter.edgeToString(IILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#56
synoptic.model.Transition.compareTo(Ljava/lang/Object;)I#CheckCast(Lsynoptic/model/interfaces/ITransition;)#2
synoptic.model.Transition.compareTo(Ljava/lang/Object;)I#Invoke(VIRTUAL,Lsynoptic/model/Transition;,compareTo,(Lsynoptic/model/interfaces/ITransition;)I)#3
synoptic.model.WeightedTransition.compareTo(Lsynoptic/model/interfaces/ITransition;)I#Invoke(SPECIAL,Lsynoptic/model/Transition;,compareTo,(Lsynoptic/model/interfaces/ITransition;)I)#2
synoptic.model.Transition.compareTo(Lsynoptic/model/interfaces/ITransition;)I#Get(Ljava/lang/Object;,NONSTATIC,Lsynoptic/model/Transition;,source)#1
synoptic.model.Transition.compareTo(Lsynoptic/model/interfaces/ITransition;)I#CheckCast(Lsynoptic/model/interfaces/INode;)#2
synoptic.model.Transition.compareTo(Lsynoptic/model/interfaces/ITransition;)I#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,getEType,()Lsynoptic/model/EventType;)#3
synoptic.model.Transition.compareTo(Lsynoptic/model/interfaces/ITransition;)I#Invoke(INTERFACE,Lsynoptic/model/interfaces/ITransition;,getSource,()Ljava/lang/Object;)#5
synoptic.model.Transition.compareTo(Lsynoptic/model/interfaces/ITransition;)I#CheckCast(Lsynoptic/model/interfaces/INode;)#6
synoptic.model.Transition.compareTo(Lsynoptic/model/interfaces/ITransition;)I#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,getEType,()Lsynoptic/model/EventType;)#7
synoptic.model.Transition.compareTo(Lsynoptic/model/interfaces/ITransition;)I#Get(Ljava/lang/Object;,NONSTATIC,Lsynoptic/model/Transition;,target)#16
synoptic.model.Transition.compareTo(Lsynoptic/model/interfaces/ITransition;)I#CheckCast(Lsynoptic/model/interfaces/INode;)#17
synoptic.model.Transition.compareTo(Lsynoptic/model/interfaces/ITransition;)I#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,getEType,()Lsynoptic/model/EventType;)#18
synoptic.model.Transition.compareTo(Lsynoptic/model/interfaces/ITransition;)I#Invoke(INTERFACE,Lsynoptic/model/interfaces/ITransition;,getTarget,()Ljava/lang/Object;)#20
synoptic.model.Transition.compareTo(Lsynoptic/model/interfaces/ITransition;)I#CheckCast(Lsynoptic/model/interfaces/INode;)#21
synoptic.model.Transition.compareTo(Lsynoptic/model/interfaces/ITransition;)I#Invoke(INTERFACE,Lsynoptic/model/interfaces/INode;,getEType,()Lsynoptic/model/EventType;)#22
synoptic.model.Partition.getWeightedTransitions(Lsynoptic/util/IIterableIterator;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/model/Partition;,getEventNodes,()Ljava/util/Set;)#32
synoptic.model.Partition.getWeightedTransitions(Lsynoptic/util/IIterableIterator;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#34
synoptic.model.Partition.getWeightedTransitions(Lsynoptic/util/IIterableIterator;)Ljava/util/List;#CheckCast(Lsynoptic/model/EventNode;)#35
synoptic.model.Partition.getWeightedTransitions(Lsynoptic/util/IIterableIterator;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getSuccessors,()Ljava/util/Set;)#36
synoptic.model.EventNode.getSuccessors()Ljava/util/Set;#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getTransitionsIterator,()Lsynoptic/util/IIterableIterator;)#5
synoptic.model.EventNode.getSuccessors()Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#10
synoptic.model.EventNode.getSuccessors()Ljava/util/Set;#CheckCast(Lsynoptic/model/Transition;)#11
synoptic.model.EventNode.getSuccessors()Ljava/util/Set;#Invoke(VIRTUAL,Lsynoptic/model/Transition;,getTarget,()Ljava/lang/Object;)#15
synoptic.model.EventNode.getSuccessors()Ljava/util/Set;#CheckCast(Lsynoptic/model/EventNode;)#16
synoptic.model.EventNode.getSuccessors()Ljava/util/Set;#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#17
synoptic.model.Partition.getWeightedTransitions(Lsynoptic/util/IIterableIterator;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#50
synoptic.model.Partition.getWeightedTransitions(Lsynoptic/util/IIterableIterator;)Ljava/util/List;#CheckCast(Lsynoptic/model/EventNode;)#51
synoptic.model.Partition.getWeightedTransitions(Lsynoptic/util/IIterableIterator;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/model/EventNode;,getParent,()Lsynoptic/model/Partition;)#54
synoptic.model.Partition.getWeightedTransitions(Lsynoptic/util/IIterableIterator;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#58
synoptic.model.Partition.getWeightedTransitions(Lsynoptic/util/IIterableIterator;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#78
synoptic.model.Partition.getWeightedTransitions(Lsynoptic/util/IIterableIterator;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#65
synoptic.model.Partition.getWeightedTransitions(Lsynoptic/util/IIterableIterator;)Ljava/util/List;#CheckCast(Ljava/lang/Integer;)#66
synoptic.model.Partition.getWeightedTransitions(Lsynoptic/util/IIterableIterator;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#67
synoptic.model.Partition.getWeightedTransitions(Lsynoptic/util/IIterableIterator;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#71
synoptic.model.Partition.getWeightedTransitions(Lsynoptic/util/IIterableIterator;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/model/Transition;,getTarget,()Ljava/lang/Object;)#94
synoptic.model.Partition.getWeightedTransitions(Lsynoptic/util/IIterableIterator;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#95
synoptic.model.Partition.getWeightedTransitions(Lsynoptic/util/IIterableIterator;)Ljava/util/List;#CheckCast(Ljava/lang/Integer;)#96
synoptic.model.Partition.getWeightedTransitions(Lsynoptic/util/IIterableIterator;)Ljava/util/List;#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#97
synoptic.model.Partition.getWeightedTransitions(Lsynoptic/util/IIterableIterator;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/model/Transition;,getTarget,()Ljava/lang/Object;)#109
synoptic.model.Partition.getWeightedTransitions(Lsynoptic/util/IIterableIterator;)Ljava/util/List;#CheckCast(Lsynoptic/model/Partition;)#110
synoptic.model.Partition.getWeightedTransitions(Lsynoptic/util/IIterableIterator;)Ljava/util/List;#Invoke(VIRTUAL,Lsynoptic/model/Transition;,getRelation,()Ljava/lang/String;)#112
synoptic.model.Partition.getWeightedTransitions(Lsynoptic/util/IIterableIterator;)Ljava/util/List;#Invoke(SPECIAL,Lsynoptic/model/WeightedTransition;,<init>,(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;DI)V)#115
synoptic.model.export.GraphExporter.generatePngFileFromDotFile(Ljava/lang/String;)V#Invoke(STATIC,Lsynoptic/model/export/GraphExporter;,getDotCommand,()Ljava/lang/String;)#5
synoptic.model.export.GraphExporter.getDotCommand()Ljava/lang/String;#ArrayLoad(Ljava/lang/Object;)#10
synoptic.model.export.GraphExporter.getDotCommand()Ljava/lang/String;#Invoke(SPECIAL,Ljava/io/File;,<init>,(Ljava/lang/String;)V)#15
synoptic.model.export.GraphExporter.getDotCommand()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/SynopticOptions;,dotExecutablePath)#31
synoptic.model.export.GraphExporter.getDotCommand()Ljava/lang/String;#ConditionalBranch(Ljava/lang/Object;,ne,44)#33
synoptic.model.export.GraphExporter.getDotCommand()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lsynoptic/main/SynopticOptions;,dotExecutablePath)#45
synoptic.model.export.GraphExporter.getDotCommand()Ljava/lang/String;#Return(Ljava/lang/Object;)#46
synoptic.model.export.GraphExporter.generatePngFileFromDotFile(Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,ne,11)#9
synoptic.model.export.GraphExporter.generatePngFileFromDotFile(Ljava/lang/String;)V#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#16
synoptic.model.export.GraphExporter.generatePngFileFromDotFile(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#17
