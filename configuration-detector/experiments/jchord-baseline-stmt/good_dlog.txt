chord.project.Main.main([Ljava/lang/String;)V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,outFileName)#0
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.max.heap")#0
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#1
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,maxHeap)#2
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.max.stack")#3
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#4
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,maxStack)#5
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.jvmargs")#6
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#7
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,jvmargs)#8
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.work.dir")#9
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#10
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,workDirName)#11
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.main.class")#12
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#13
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,mainClassName)#14
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.class.path")#15
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#16
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,userClassPathName)#17
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.src.path")#18
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#19
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,srcPathName)#20
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.run.ids")#21
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"0")#22
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#23
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,runIDs)#24
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.runtime.jvmargs")#25
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"-ea -Xmx1024m")#26
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#27
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,runtimeJvmargs)#28
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.scope.kind")#29
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"rta")#30
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#31
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,scopeKind)#32
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.reflect.kind")#33
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"none")#34
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#35
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,reflectKind)#36
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.ch.kind")#37
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"static")#38
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#39
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,CHkind)#40
chord.project.Config.<clinit>()V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,CHkind)#41
chord.project.Config.<clinit>()V#Constant(I,2)#42
chord.project.Config.<clinit>()V#New([Ljava/lang/String;,1)#43
chord.project.Config.<clinit>()V#Dup(1,0)#44
chord.project.Config.<clinit>()V#Constant(I,0)#45
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"static")#46
chord.project.Config.<clinit>()V#ArrayStore(Ljava/lang/Object;)#47
chord.project.Config.<clinit>()V#Dup(1,0)#48
chord.project.Config.<clinit>()V#Constant(I,1)#49
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"dynamic")#50
chord.project.Config.<clinit>()V#ArrayStore(Ljava/lang/Object;)#51
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.ch.kind")#52
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/project/Config;,check,(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V)#53
chord.project.Config.check(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#0
chord.project.Config.check(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V#Dup(1,0)#1
chord.project.Config.check(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,6)#2
chord.project.Config.check(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V#ArrayLength()#3
chord.project.Config.check(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V#LocalStore(I,5)#4
chord.project.Config.check(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V#Constant(I,0)#5
chord.project.Config.check(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V#LocalStore(I,4)#6
chord.project.Config.check(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V#Goto(22)#7
chord.project.Config.check(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V#LocalLoad(I,4)#22
chord.project.Config.check(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V#LocalLoad(I,5)#23
chord.project.Config.check(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V#ConditionalBranch(I,lt,8)#24
chord.project.Config.check(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,6)#8
chord.project.Config.check(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V#LocalLoad(I,4)#9
chord.project.Config.check(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V#ArrayLoad(Ljava/lang/Object;)#10
chord.project.Config.check(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,3)#11
chord.project.Config.check(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#12
chord.project.Config.check(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#13
chord.project.Config.check(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#14
chord.project.Config.check(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V#Constant(I,0)#15
chord.project.Config.check(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V#ConditionalBranch(I,eq,18)#16
chord.project.Config.check(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V#Return(V)#17
chord.project.Config.<clinit>()V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,reflectKind)#54
chord.project.Config.<clinit>()V#Constant(I,4)#55
chord.project.Config.<clinit>()V#New([Ljava/lang/String;,1)#56
chord.project.Config.<clinit>()V#Dup(1,0)#57
chord.project.Config.<clinit>()V#Constant(I,0)#58
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"none")#59
chord.project.Config.<clinit>()V#ArrayStore(Ljava/lang/Object;)#60
chord.project.Config.<clinit>()V#Dup(1,0)#61
chord.project.Config.<clinit>()V#Constant(I,1)#62
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"static")#63
chord.project.Config.<clinit>()V#ArrayStore(Ljava/lang/Object;)#64
chord.project.Config.<clinit>()V#Dup(1,0)#65
chord.project.Config.<clinit>()V#Constant(I,2)#66
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"dynamic")#67
chord.project.Config.<clinit>()V#ArrayStore(Ljava/lang/Object;)#68
chord.project.Config.<clinit>()V#Dup(1,0)#69
chord.project.Config.<clinit>()V#Constant(I,3)#70
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"static_cast")#71
chord.project.Config.<clinit>()V#ArrayStore(Ljava/lang/Object;)#72
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.reflect.kind")#73
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/project/Config;,check,(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V)#74
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.ssa")#75
chord.project.Config.<clinit>()V#Constant(I,1)#76
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/util/Utils;,buildBoolProperty,(Ljava/lang/String;Z)Z)#77
chord.util.Utils.<clinit>()V#New(Ljava/lang/StringBuilder;,0)#0
chord.util.Utils.<clinit>()V#Dup(1,0)#1
chord.util.Utils.<clinit>()V#Get(Ljava/lang/String;,STATIC,Ljava/io/File;,pathSeparator)#2
chord.util.Utils.<clinit>()V#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#3
chord.util.Utils.<clinit>()V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#4
chord.util.Utils.<clinit>()V#Constant(Ljava/lang/String;,"|;")#5
chord.util.Utils.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#6
chord.util.Utils.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#7
chord.util.Utils.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/util/Utils;,PATH_SEPARATOR)#8
chord.util.Utils.<clinit>()V#Constant(I,0)#9
chord.util.Utils.<clinit>()V#New([Ljava/lang/String;,1)#10
chord.util.Utils.<clinit>()V#Put([Ljava/lang/String;,STATIC,Lchord/util/Utils;,EMPTY_STRING_ARRAY)#11
chord.util.Utils.<clinit>()V#Return(V)#12
chord.util.Utils.buildBoolProperty(Ljava/lang/String;Z)Z#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.Utils.buildBoolProperty(Ljava/lang/String;Z)Z#LocalLoad(I,1)#1
chord.util.Utils.buildBoolProperty(Ljava/lang/String;Z)Z#Invoke(STATIC,Ljava/lang/Boolean;,toString,(Z)Ljava/lang/String;)#2
chord.util.Utils.buildBoolProperty(Ljava/lang/String;Z)Z#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#3
chord.util.Utils.buildBoolProperty(Ljava/lang/String;Z)Z#Constant(Ljava/lang/String;,"true")#4
chord.util.Utils.buildBoolProperty(Ljava/lang/String;Z)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#5
chord.util.Utils.buildBoolProperty(Ljava/lang/String;Z)Z#Return(I)#6
chord.project.Config.<clinit>()V#Put(Z,STATIC,Lchord/project/Config;,doSSA)#78
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.std.scope.exclude")#79
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"")#80
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#81
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,scopeStdExcludeStr)#82
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.ext.scope.exclude")#83
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"")#84
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#85
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,scopeExtExcludeStr)#86
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.scope.exclude")#87
chord.project.Config.<clinit>()V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,scopeStdExcludeStr)#88
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,",")#89
chord.project.Config.<clinit>()V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,scopeExtExcludeStr)#90
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/util/Utils;,concat,(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#91
chord.util.Utils.concat(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.Utils.concat(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"")#1
chord.util.Utils.concat(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#2
chord.util.Utils.concat(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#3
chord.util.Utils.concat(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,7)#4
chord.util.Utils.concat(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#5
chord.util.Utils.concat(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#6
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#92
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,scopeExcludeStr)#93
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.std.check.exclude")#94
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"java.,javax.,sun.,com.sun.,com.ibm.,org.apache.harmony.")#95
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#96
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,checkStdExcludeStr)#97
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.ext.check.exclude")#98
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"")#99
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#100
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,checkExtExcludeStr)#101
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.check.exclude")#102
chord.project.Config.<clinit>()V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,checkStdExcludeStr)#103
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,",")#104
chord.project.Config.<clinit>()V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,checkExtExcludeStr)#105
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/util/Utils;,concat,(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#106
chord.util.Utils.concat(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#7
chord.util.Utils.concat(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"")#8
chord.util.Utils.concat(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#9
chord.util.Utils.concat(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#10
chord.util.Utils.concat(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,14)#11
chord.util.Utils.concat(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#12
chord.util.Utils.concat(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#13
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#107
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,checkExcludeStr)#108
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.build.scope")#109
chord.project.Config.<clinit>()V#Constant(I,0)#110
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/util/Utils;,buildBoolProperty,(Ljava/lang/String;Z)Z)#111
chord.project.Config.<clinit>()V#Put(Z,STATIC,Lchord/project/Config;,buildScope)#112
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.run.analyses")#113
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"")#114
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#115
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,runAnalyses)#116
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.print.classes")#117
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"")#118
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#119
chord.project.Config.<clinit>()V#Constant(I,35)#120
chord.project.Config.<clinit>()V#Constant(I,36)#121
chord.project.Config.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/String;,replace,(CC)Ljava/lang/String;)#122
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,printClasses)#123
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.print.all.classes")#124
chord.project.Config.<clinit>()V#Constant(I,0)#125
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/util/Utils;,buildBoolProperty,(Ljava/lang/String;Z)Z)#126
chord.project.Config.<clinit>()V#Put(Z,STATIC,Lchord/project/Config;,printAllClasses)#127
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.print.rels")#128
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"")#129
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#130
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,printRels)#131
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.print.project")#132
chord.project.Config.<clinit>()V#Constant(I,0)#133
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/util/Utils;,buildBoolProperty,(Ljava/lang/String;Z)Z)#134
chord.project.Config.<clinit>()V#Put(Z,STATIC,Lchord/project/Config;,printProject)#135
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.print.results")#136
chord.project.Config.<clinit>()V#Constant(I,1)#137
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/util/Utils;,buildBoolProperty,(Ljava/lang/String;Z)Z)#138
chord.project.Config.<clinit>()V#Put(Z,STATIC,Lchord/project/Config;,printResults)#139
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.save.maps")#140
chord.project.Config.<clinit>()V#Constant(I,1)#141
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/util/Utils;,buildBoolProperty,(Ljava/lang/String;Z)Z)#142
chord.project.Config.<clinit>()V#Put(Z,STATIC,Lchord/project/Config;,saveDomMaps)#143
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.verbose")#144
chord.project.Config.<clinit>()V#Constant(I,1)#145
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/Integer;,getInteger,(Ljava/lang/String;I)Ljava/lang/Integer;)#146
chord.project.Config.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#147
chord.project.Config.<clinit>()V#Put(I,STATIC,Lchord/project/Config;,verbose)#148
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.classic")#149
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#150
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"true")#151
chord.project.Config.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#152
chord.project.Config.<clinit>()V#Put(Z,STATIC,Lchord/project/Config;,classic)#153
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.std.java.analysis.path")#154
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#155
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,stdJavaAnalysisPathName)#156
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.ext.java.analysis.path")#157
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#158
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,extJavaAnalysisPathName)#159
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.java.analysis.path")#160
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#161
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,javaAnalysisPathName)#162
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.std.dlog.analysis.path")#163
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#164
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,stdDlogAnalysisPathName)#165
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.ext.dlog.analysis.path")#166
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#167
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,extDlogAnalysisPathName)#168
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.dlog.analysis.path")#169
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#170
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,dlogAnalysisPathName)#171
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.use.jvmti")#172
chord.project.Config.<clinit>()V#Constant(I,0)#173
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/util/Utils;,buildBoolProperty,(Ljava/lang/String;Z)Z)#174
chord.project.Config.<clinit>()V#Put(Z,STATIC,Lchord/project/Config;,useJvmti)#175
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.instr.kind")#176
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"offline")#177
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#178
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,instrKind)#179
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.trace.kind")#180
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"full")#181
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#182
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,traceKind)#183
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.trace.block.size")#184
chord.project.Config.<clinit>()V#Constant(I,4096)#185
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/Integer;,getInteger,(Ljava/lang/String;I)Ljava/lang/Integer;)#186
chord.project.Config.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#187
chord.project.Config.<clinit>()V#Put(I,STATIC,Lchord/project/Config;,traceBlockSize)#188
chord.project.Config.<clinit>()V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,instrKind)#189
chord.project.Config.<clinit>()V#Constant(I,2)#190
chord.project.Config.<clinit>()V#New([Ljava/lang/String;,1)#191
chord.project.Config.<clinit>()V#Dup(1,0)#192
chord.project.Config.<clinit>()V#Constant(I,0)#193
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"offline")#194
chord.project.Config.<clinit>()V#ArrayStore(Ljava/lang/Object;)#195
chord.project.Config.<clinit>()V#Dup(1,0)#196
chord.project.Config.<clinit>()V#Constant(I,1)#197
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"online")#198
chord.project.Config.<clinit>()V#ArrayStore(Ljava/lang/Object;)#199
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.instr.kind")#200
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/project/Config;,check,(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V)#201
chord.project.Config.<clinit>()V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,traceKind)#202
chord.project.Config.<clinit>()V#Constant(I,2)#203
chord.project.Config.<clinit>()V#New([Ljava/lang/String;,1)#204
chord.project.Config.<clinit>()V#Dup(1,0)#205
chord.project.Config.<clinit>()V#Constant(I,0)#206
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"full")#207
chord.project.Config.<clinit>()V#ArrayStore(Ljava/lang/Object;)#208
chord.project.Config.<clinit>()V#Dup(1,0)#209
chord.project.Config.<clinit>()V#Constant(I,1)#210
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"pipe")#211
chord.project.Config.<clinit>()V#ArrayStore(Ljava/lang/Object;)#212
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.trace.kind")#213
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/project/Config;,check,(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V)#214
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.dynamic.haltonerr")#215
chord.project.Config.<clinit>()V#Constant(I,1)#216
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/util/Utils;,buildBoolProperty,(Ljava/lang/String;Z)Z)#217
chord.project.Config.<clinit>()V#Put(Z,STATIC,Lchord/project/Config;,dynamicHaltOnErr)#218
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.dynamic.timeout")#219
chord.project.Config.<clinit>()V#Constant(I,-1)#220
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/Integer;,getInteger,(Ljava/lang/String;I)Ljava/lang/Integer;)#221
chord.project.Config.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#222
chord.project.Config.<clinit>()V#Put(I,STATIC,Lchord/project/Config;,dynamicTimeout)#223
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.max.cons.size")#224
chord.project.Config.<clinit>()V#Constant(I,50000000)#225
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/Integer;,getInteger,(Ljava/lang/String;I)Ljava/lang/Integer;)#226
chord.project.Config.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#227
chord.project.Config.<clinit>()V#Put(I,STATIC,Lchord/project/Config;,maxConsSize)#228
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.reuse.scope")#229
chord.project.Config.<clinit>()V#Constant(I,0)#230
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/util/Utils;,buildBoolProperty,(Ljava/lang/String;Z)Z)#231
chord.project.Config.<clinit>()V#Put(Z,STATIC,Lchord/project/Config;,reuseScope)#232
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.reuse.rels")#233
chord.project.Config.<clinit>()V#Constant(I,0)#234
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/util/Utils;,buildBoolProperty,(Ljava/lang/String;Z)Z)#235
chord.project.Config.<clinit>()V#Put(Z,STATIC,Lchord/project/Config;,reuseRels)#236
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.reuse.traces")#237
chord.project.Config.<clinit>()V#Constant(I,0)#238
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/util/Utils;,buildBoolProperty,(Ljava/lang/String;Z)Z)#239
chord.project.Config.<clinit>()V#Put(Z,STATIC,Lchord/project/Config;,reuseTraces)#240
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.use.buddy")#241
chord.project.Config.<clinit>()V#Constant(I,0)#242
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/util/Utils;,buildBoolProperty,(Ljava/lang/String;Z)Z)#243
chord.project.Config.<clinit>()V#Put(Z,STATIC,Lchord/project/Config;,useBuddy)#244
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.bddbddb.max.heap")#245
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"1024m")#246
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#247
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,bddbddbMaxHeap)#248
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.out.dir")#249
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord_output")#250
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/project/Config;,workRel2Abs,(Ljava/lang/String;)Ljava/lang/String;)#251
chord.project.Config.workRel2Abs(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.Config.workRel2Abs(Ljava/lang/String;)Ljava/lang/String;#Constant(L;,null)#1
chord.project.Config.workRel2Abs(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(Ljava/lang/Object;,ne,5)#2
chord.project.Config.workRel2Abs(Ljava/lang/String;)Ljava/lang/String;#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,workDirName)#5
chord.project.Config.workRel2Abs(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#6
chord.project.Config.workRel2Abs(Ljava/lang/String;)Ljava/lang/String;#Invoke(STATIC,Lchord/util/Utils;,getAbsolutePath,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#7
chord.util.Utils.getAbsolutePath(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#New(Ljava/io/File;,0)#0
chord.util.Utils.getAbsolutePath(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Dup(1,0)#1
chord.util.Utils.getAbsolutePath(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#2
chord.util.Utils.getAbsolutePath(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#3
chord.util.Utils.getAbsolutePath(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(SPECIAL,Ljava/io/File;,<init>,(Ljava/lang/String;Ljava/lang/String;)V)#4
chord.util.Utils.getAbsolutePath(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/io/File;,getAbsolutePath,()Ljava/lang/String;)#5
chord.util.Utils.getAbsolutePath(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#6
chord.project.Config.workRel2Abs(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#8
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#252
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,outDirName)#253
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.out.file")#254
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"log.txt")#255
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/project/Config;,outRel2Abs,(Ljava/lang/String;)Ljava/lang/String;)#256
chord.project.Config.outRel2Abs(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.Config.outRel2Abs(Ljava/lang/String;)Ljava/lang/String;#Constant(L;,null)#1
chord.project.Config.outRel2Abs(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(Ljava/lang/Object;,ne,5)#2
chord.project.Config.outRel2Abs(Ljava/lang/String;)Ljava/lang/String;#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,outDirName)#5
chord.project.Config.outRel2Abs(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#6
chord.project.Config.outRel2Abs(Ljava/lang/String;)Ljava/lang/String;#Invoke(STATIC,Lchord/util/Utils;,getAbsolutePath,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#7
chord.project.Config.outRel2Abs(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#8
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#257
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,outFileName)#258
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.err.file")#259
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"log.txt")#260
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/project/Config;,outRel2Abs,(Ljava/lang/String;)Ljava/lang/String;)#261
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#262
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,errFileName)#263
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.reflect.file")#264
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"reflect.txt")#265
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/project/Config;,outRel2Abs,(Ljava/lang/String;)Ljava/lang/String;)#266
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#267
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,reflectFileName)#268
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.methods.file")#269
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"methods.txt")#270
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/project/Config;,outRel2Abs,(Ljava/lang/String;)Ljava/lang/String;)#271
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#272
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,methodsFileName)#273
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.classes.file")#274
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"classes.txt")#275
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/project/Config;,outRel2Abs,(Ljava/lang/String;)Ljava/lang/String;)#276
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#277
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,classesFileName)#278
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.bddbddb.work.dir")#279
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"bddbddb")#280
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/project/Config;,outRel2Abs,(Ljava/lang/String;)Ljava/lang/String;)#281
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#282
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,bddbddbWorkDirName)#283
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.boot.classes.dir")#284
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"boot_classes")#285
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/project/Config;,outRel2Abs,(Ljava/lang/String;)Ljava/lang/String;)#286
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#287
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,bootClassesDirName)#288
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.user.classes.dir")#289
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"user_classes")#290
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/project/Config;,outRel2Abs,(Ljava/lang/String;)Ljava/lang/String;)#291
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#292
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,userClassesDirName)#293
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.instr.scheme.file")#294
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"scheme.ser")#295
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/project/Config;,outRel2Abs,(Ljava/lang/String;)Ljava/lang/String;)#296
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#297
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,instrSchemeFileName)#298
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.trace.file")#299
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"trace")#300
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/project/Config;,outRel2Abs,(Ljava/lang/String;)Ljava/lang/String;)#301
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#302
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,traceFileName)#303
chord.project.Config.<clinit>()V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,outDirName)#304
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/util/Utils;,mkdirs,(Ljava/lang/String;)Z)#305
chord.util.Utils.mkdirs(Ljava/lang/String;)Z#New(Ljava/io/File;,0)#0
chord.util.Utils.mkdirs(Ljava/lang/String;)Z#Dup(1,0)#1
chord.util.Utils.mkdirs(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#2
chord.util.Utils.mkdirs(Ljava/lang/String;)Z#Invoke(SPECIAL,Ljava/io/File;,<init>,(Ljava/lang/String;)V)#3
chord.util.Utils.mkdirs(Ljava/lang/String;)Z#Invoke(STATIC,Lchord/util/Utils;,mkdirs,(Ljava/io/File;)Z)#4
chord.util.Utils.mkdirs(Ljava/io/File;)Z#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.Utils.mkdirs(Ljava/io/File;)Z#Invoke(VIRTUAL,Ljava/io/File;,exists,()Z)#1
chord.util.Utils.mkdirs(Ljava/io/File;)Z#Constant(I,0)#2
chord.util.Utils.mkdirs(Ljava/io/File;)Z#ConditionalBranch(I,eq,23)#3
chord.util.Utils.mkdirs(Ljava/io/File;)Z#LocalLoad(Ljava/lang/Object;,0)#4
chord.util.Utils.mkdirs(Ljava/io/File;)Z#Invoke(VIRTUAL,Ljava/io/File;,isDirectory,()Z)#5
chord.util.Utils.mkdirs(Ljava/io/File;)Z#Constant(I,0)#6
chord.util.Utils.mkdirs(Ljava/io/File;)Z#ConditionalBranch(I,ne,21)#7
chord.util.Utils.mkdirs(Ljava/io/File;)Z#Constant(I,0)#21
chord.util.Utils.mkdirs(Ljava/io/File;)Z#Return(I)#22
chord.util.Utils.mkdirs(Ljava/lang/String;)Z#Return(I)#5
chord.project.Config.<clinit>()V#Pop(1)#306
chord.project.Config.<clinit>()V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,bddbddbWorkDirName)#307
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/util/Utils;,mkdirs,(Ljava/lang/String;)Z)#308
chord.project.Config.<clinit>()V#Pop(1)#309
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.main.dir")#310
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#311
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,mainDirName)#312
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"java.class.path")#313
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#314
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,javaClassPathName)#315
chord.project.Config.<clinit>()V#New(Ljava/lang/StringBuilder;,0)#316
chord.project.Config.<clinit>()V#Dup(1,0)#317
chord.project.Config.<clinit>()V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,mainDirName)#318
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#319
chord.project.Config.<clinit>()V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#320
chord.project.Config.<clinit>()V#Get(Ljava/lang/String;,STATIC,Ljava/io/File;,separator)#321
chord.project.Config.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#322
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.jar")#323
chord.project.Config.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#324
chord.project.Config.<clinit>()V#Get(Ljava/lang/String;,STATIC,Ljava/io/File;,pathSeparator)#325
chord.project.Config.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#326
chord.project.Config.<clinit>()V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,javaAnalysisPathName)#327
chord.project.Config.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#328
chord.project.Config.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#329
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,toolClassPathName)#330
chord.project.Config.<clinit>()V#New(Ljava/lang/StringBuilder;,0)#331
chord.project.Config.<clinit>()V#Dup(1,0)#332
chord.project.Config.<clinit>()V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,mainDirName)#333
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#334
chord.project.Config.<clinit>()V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#335
chord.project.Config.<clinit>()V#Get(Ljava/lang/String;,STATIC,Ljava/io/File;,separator)#336
chord.project.Config.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#337
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"libchord_instr_agent.so")#338
chord.project.Config.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#339
chord.project.Config.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#340
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,cInstrAgentFileName)#341
chord.project.Config.<clinit>()V#New(Ljava/lang/StringBuilder;,0)#342
chord.project.Config.<clinit>()V#Dup(1,0)#343
chord.project.Config.<clinit>()V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,mainDirName)#344
chord.project.Config.<clinit>()V#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#345
chord.project.Config.<clinit>()V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#346
chord.project.Config.<clinit>()V#Get(Ljava/lang/String;,STATIC,Ljava/io/File;,separator)#347
chord.project.Config.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#348
chord.project.Config.<clinit>()V#Constant(Ljava/lang/String;,"chord.jar")#349
chord.project.Config.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#350
chord.project.Config.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#351
chord.project.Config.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/Config;,jInstrAgentFileName)#352
chord.project.Config.<clinit>()V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,scopeExcludeStr)#353
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/util/Utils;,toArray,(Ljava/lang/String;)[Ljava/lang/String;)#354
chord.util.Utils.toArray(Ljava/lang/String;)[Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.Utils.toArray(Ljava/lang/String;)[Ljava/lang/String;#Constant(Ljava/lang/String;,"")#1
chord.util.Utils.toArray(Ljava/lang/String;)[Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#2
chord.util.Utils.toArray(Ljava/lang/String;)[Ljava/lang/String;#Constant(I,0)#3
chord.util.Utils.toArray(Ljava/lang/String;)[Ljava/lang/String;#ConditionalBranch(I,eq,8)#4
chord.util.Utils.toArray(Ljava/lang/String;)[Ljava/lang/String;#Constant(I,0)#5
chord.util.Utils.toArray(Ljava/lang/String;)[Ljava/lang/String;#New([Ljava/lang/String;,1)#6
chord.util.Utils.toArray(Ljava/lang/String;)[Ljava/lang/String;#Goto(11)#7
chord.util.Utils.toArray(Ljava/lang/String;)[Ljava/lang/String;#Return(Ljava/lang/Object;)#11
chord.project.Config.<clinit>()V#Put([Ljava/lang/String;,STATIC,Lchord/project/Config;,scopeExcludeAry)#355
chord.project.Config.<clinit>()V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,checkExcludeStr)#356
chord.project.Config.<clinit>()V#Invoke(STATIC,Lchord/util/Utils;,toArray,(Ljava/lang/String;)[Ljava/lang/String;)#357
chord.util.Utils.toArray(Ljava/lang/String;)[Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#8
chord.util.Utils.toArray(Ljava/lang/String;)[Ljava/lang/String;#Constant(Ljava/lang/String;,",|:|;")#9
chord.util.Utils.toArray(Ljava/lang/String;)[Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,split,(Ljava/lang/String;)[Ljava/lang/String;)#10
chord.project.Config.<clinit>()V#Put([Ljava/lang/String;,STATIC,Lchord/project/Config;,checkExcludeAry)#358
chord.project.Config.<clinit>()V#Return(V)#359
chord.project.Main.main([Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,2)#1
chord.project.Main.main([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#2
chord.project.Main.main([Ljava/lang/String;)V#Constant(L;,null)#3
chord.project.Main.main([Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,ne,8)#4
chord.project.Main.main([Ljava/lang/String;)V#New(Ljava/io/File;,0)#8
chord.project.Main.main([Ljava/lang/String;)V#Dup(1,0)#9
chord.project.Main.main([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#10
chord.project.Main.main([Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/io/File;,<init>,(Ljava/lang/String;)V)#11
chord.project.Main.main([Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,1)#12
chord.project.Main.main([Ljava/lang/String;)V#Get(Ljava/io/PrintStream;,STATIC,Ljava/lang/System;,out)#13
chord.project.Main.main([Ljava/lang/String;)V#New(Ljava/lang/StringBuilder;,0)#14
chord.project.Main.main([Ljava/lang/String;)V#Dup(1,0)#15
chord.project.Main.main([Ljava/lang/String;)V#Constant(Ljava/lang/String;,"Redirecting stdout to file: ")#16
chord.project.Main.main([Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#17
chord.project.Main.main([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#18
chord.project.Main.main([Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#19
chord.project.Main.main([Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#20
chord.project.Main.main([Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/io/PrintStream;,println,(Ljava/lang/String;)V)#21
chord.project.Main.main([Ljava/lang/String;)V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,errFileName)#22
chord.project.Main.main([Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,3)#23
chord.project.Main.main([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#24
chord.project.Main.main([Ljava/lang/String;)V#Constant(L;,null)#25
chord.project.Main.main([Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,ne,30)#26
chord.project.Main.main([Ljava/lang/String;)V#New(Ljava/io/File;,0)#30
chord.project.Main.main([Ljava/lang/String;)V#Dup(1,0)#31
chord.project.Main.main([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#32
chord.project.Main.main([Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/io/File;,<init>,(Ljava/lang/String;)V)#33
chord.project.Main.main([Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,2)#34
chord.project.Main.main([Ljava/lang/String;)V#Get(Ljava/io/PrintStream;,STATIC,Ljava/lang/System;,out)#35
chord.project.Main.main([Ljava/lang/String;)V#New(Ljava/lang/StringBuilder;,0)#36
chord.project.Main.main([Ljava/lang/String;)V#Dup(1,0)#37
chord.project.Main.main([Ljava/lang/String;)V#Constant(Ljava/lang/String;,"Redirecting stderr to file: ")#38
chord.project.Main.main([Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#39
chord.project.Main.main([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#40
chord.project.Main.main([Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#41
chord.project.Main.main([Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#42
chord.project.Main.main([Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/io/PrintStream;,println,(Ljava/lang/String;)V)#43
chord.project.Main.main([Ljava/lang/String;)V#Constant(L;,null)#44
chord.project.Main.main([Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,3)#45
chord.project.Main.main([Ljava/lang/String;)V#Constant(L;,null)#46
chord.project.Main.main([Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,4)#47
chord.project.Main.main([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#48
chord.project.Main.main([Ljava/lang/String;)V#Constant(L;,null)#49
chord.project.Main.main([Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,eq,58)#50
chord.project.Main.main([Ljava/lang/String;)V#New(Ljava/io/PrintStream;,0)#51
chord.project.Main.main([Ljava/lang/String;)V#Dup(1,0)#52
chord.project.Main.main([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#53
chord.project.Main.main([Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/io/PrintStream;,<init>,(Ljava/io/File;)V)#54
chord.project.Main.main([Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,3)#55
chord.project.Main.main([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#56
chord.project.Main.main([Ljava/lang/String;)V#Invoke(STATIC,Ljava/lang/System;,setOut,(Ljava/io/PrintStream;)V)#57
chord.project.Main.main([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#58
chord.project.Main.main([Ljava/lang/String;)V#Constant(L;,null)#59
chord.project.Main.main([Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,eq,79)#60
chord.project.Main.main([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#61
chord.project.Main.main([Ljava/lang/String;)V#Constant(L;,null)#62
chord.project.Main.main([Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,eq,72)#63
chord.project.Main.main([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#64
chord.project.Main.main([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#65
chord.project.Main.main([Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/io/File;,equals,(Ljava/lang/Object;)Z)#66
chord.project.Main.main([Ljava/lang/String;)V#Constant(I,0)#67
chord.project.Main.main([Ljava/lang/String;)V#ConditionalBranch(I,eq,72)#68
chord.project.Main.main([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#69
chord.project.Main.main([Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,4)#70
chord.project.Main.main([Ljava/lang/String;)V#Goto(77)#71
chord.project.Main.main([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,4)#77
chord.project.Main.main([Ljava/lang/String;)V#Invoke(STATIC,Ljava/lang/System;,setErr,(Ljava/io/PrintStream;)V)#78
chord.project.Main.main([Ljava/lang/String;)V#Invoke(STATIC,Lchord/project/Main;,run,()V)#79
chord.project.Main.run()V#New(Lchord/util/Timer;,0)#0
chord.project.Main.run()V#Dup(1,0)#1
chord.project.Main.run()V#Constant(Ljava/lang/String;,"chord")#2
chord.project.Main.run()V#Invoke(SPECIAL,Lchord/util/Timer;,<init>,(Ljava/lang/String;)V)#3
chord.util.Timer.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.Timer.<init>(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
chord.util.Timer.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#2
chord.util.Timer.<init>(Ljava/lang/String;)V#Constant(J,0)#3
chord.util.Timer.<init>(Ljava/lang/String;)V#Put(J,NONSTATIC,Lchord/util/Timer;,elapsedExclusiveTime)#4
chord.util.Timer.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#5
chord.util.Timer.<init>(Ljava/lang/String;)V#Constant(L;,null)#6
chord.util.Timer.<init>(Ljava/lang/String;)V#Put(Ljava/util/Date;,NONSTATIC,Lchord/util/Timer;,initDate)#7
chord.util.Timer.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#8
chord.util.Timer.<init>(Ljava/lang/String;)V#Constant(L;,null)#9
chord.util.Timer.<init>(Ljava/lang/String;)V#Put(Ljava/util/Date;,NONSTATIC,Lchord/util/Timer;,lastResumeDate)#10
chord.util.Timer.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#11
chord.util.Timer.<init>(Ljava/lang/String;)V#Constant(L;,null)#12
chord.util.Timer.<init>(Ljava/lang/String;)V#Put(Ljava/util/Date;,NONSTATIC,Lchord/util/Timer;,doneDate)#13
chord.util.Timer.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#14
chord.util.Timer.<init>(Ljava/lang/String;)V#Constant(I,0)#15
chord.util.Timer.<init>(Ljava/lang/String;)V#Put(Z,NONSTATIC,Lchord/util/Timer;,isPaused)#16
chord.util.Timer.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#17
chord.util.Timer.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#18
chord.util.Timer.<init>(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lchord/util/Timer;,name)#19
chord.util.Timer.<init>(Ljava/lang/String;)V#Return(V)#20
chord.project.Main.run()V#LocalStore(Ljava/lang/Object;,0)#4
chord.project.Main.run()V#LocalLoad(Ljava/lang/Object;,0)#5
chord.project.Main.run()V#Invoke(VIRTUAL,Lchord/util/Timer;,init,()V)#6
chord.util.Timer.init()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.Timer.init()V#Get(Ljava/util/Date;,NONSTATIC,Lchord/util/Timer;,initDate)#1
chord.util.Timer.init()V#Constant(L;,null)#2
chord.util.Timer.init()V#ConditionalBranch(Ljava/lang/Object;,eq,18)#3
chord.util.Timer.init()V#New(Ljava/util/Date;,0)#18
chord.util.Timer.init()V#Dup(1,0)#19
chord.util.Timer.init()V#Invoke(SPECIAL,Ljava/util/Date;,<init>,()V)#20
chord.util.Timer.init()V#LocalStore(Ljava/lang/Object;,1)#21
chord.util.Timer.init()V#LocalLoad(Ljava/lang/Object;,0)#22
chord.util.Timer.init()V#LocalLoad(Ljava/lang/Object;,1)#23
chord.util.Timer.init()V#Put(Ljava/util/Date;,NONSTATIC,Lchord/util/Timer;,initDate)#24
chord.util.Timer.init()V#LocalLoad(Ljava/lang/Object;,0)#25
chord.util.Timer.init()V#LocalLoad(Ljava/lang/Object;,1)#26
chord.util.Timer.init()V#Put(Ljava/util/Date;,NONSTATIC,Lchord/util/Timer;,lastResumeDate)#27
chord.util.Timer.init()V#Return(V)#28
chord.project.Main.run()V#LocalLoad(Ljava/lang/Object;,0)#7
chord.project.Main.run()V#Invoke(VIRTUAL,Lchord/util/Timer;,getInitTimeStr,()Ljava/lang/String;)#8
chord.util.Timer.getInitTimeStr()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.Timer.getInitTimeStr()Ljava/lang/String;#Invoke(SPECIAL,Lchord/util/Timer;,checkInitDate,()V)#1
chord.util.Timer.checkInitDate()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.Timer.checkInitDate()V#Get(Ljava/util/Date;,NONSTATIC,Lchord/util/Timer;,initDate)#1
chord.util.Timer.checkInitDate()V#Constant(L;,null)#2
chord.util.Timer.checkInitDate()V#ConditionalBranch(Ljava/lang/Object;,ne,18)#3
chord.util.Timer.checkInitDate()V#Return(V)#18
chord.util.Timer.getInitTimeStr()Ljava/lang/String;#Invoke(STATIC,Ljava/text/DateFormat;,getDateTimeInstance,()Ljava/text/DateFormat;)#2
chord.util.Timer.getInitTimeStr()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#3
chord.util.Timer.getInitTimeStr()Ljava/lang/String;#Get(Ljava/util/Date;,NONSTATIC,Lchord/util/Timer;,initDate)#4
chord.util.Timer.getInitTimeStr()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/text/DateFormat;,format,(Ljava/util/Date;)Ljava/lang/String;)#5
chord.util.Timer.getInitTimeStr()Ljava/lang/String;#Return(Ljava/lang/Object;)#6
chord.project.Main.run()V#LocalStore(Ljava/lang/Object;,1)#9
chord.project.Main.run()V#Get(I,STATIC,Lchord/project/Config;,verbose)#10
chord.project.Main.run()V#Constant(I,0)#11
chord.project.Main.run()V#ConditionalBranch(I,lt,22)#12
chord.project.Main.run()V#Get(Ljava/io/PrintStream;,STATIC,Ljava/lang/System;,out)#13
chord.project.Main.run()V#New(Ljava/lang/StringBuilder;,0)#14
chord.project.Main.run()V#Dup(1,0)#15
chord.project.Main.run()V#Constant(Ljava/lang/String;,"Chord run initiated at: ")#16
chord.project.Main.run()V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#17
chord.project.Main.run()V#LocalLoad(Ljava/lang/Object;,1)#18
chord.project.Main.run()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#19
chord.project.Main.run()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#20
chord.project.Main.run()V#Invoke(VIRTUAL,Ljava/io/PrintStream;,println,(Ljava/lang/String;)V)#21
chord.project.Main.run()V#Get(I,STATIC,Lchord/project/Config;,verbose)#22
chord.project.Main.run()V#Constant(I,2)#23
chord.project.Main.run()V#ConditionalBranch(I,lt,26)#24
chord.project.Main.run()V#Invoke(STATIC,Lchord/program/Program;,g,()Lchord/program/Program;)#26
chord.program.Program.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@3cfc6640)#0
chord.program.Program.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.program.Program.<clinit>()V#Constant(I,0)#2
chord.program.Program.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.program.Program.<clinit>()V#Constant(I,0)#6
chord.program.Program.<clinit>()V#Put(Z,STATIC,Lchord/program/Program;,$assertionsDisabled)#7
chord.program.Program.<clinit>()V#Constant(L;,null)#8
chord.program.Program.<clinit>()V#Put(Lchord/program/Program;,STATIC,Lchord/program/Program;,program)#9
chord.program.Program.<clinit>()V#Constant(Ljava/lang/String;,"chord.reflect.exclude")#10
chord.program.Program.<clinit>()V#Constant(I,0)#11
chord.program.Program.<clinit>()V#Invoke(STATIC,Lchord/util/Utils;,buildBoolProperty,(Ljava/lang/String;Z)Z)#12
chord.program.Program.<clinit>()V#Put(Z,STATIC,Lchord/program/Program;,reflectexclude)#13
chord.program.Program.<clinit>()V#New(Lchord/program/Program$1;,0)#14
chord.program.Program.<clinit>()V#Dup(1,0)#15
chord.program.Program.<clinit>()V#Invoke(SPECIAL,Lchord/program/Program$1;,<init>,()V)#16
chord.program.Program$1.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.program.Program$1.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
chord.program.Program$1.<init>()V#Return(V)#2
chord.program.Program.<clinit>()V#Put(Ljava/util/Comparator;,STATIC,Lchord/program/Program;,comparator)#17
chord.program.Program.<clinit>()V#Constant(Ljava/lang/String;,"chord.dynamic.runBeforeCmd")#18
chord.program.Program.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#19
chord.program.Program.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/program/Program;,runBefore)#20
chord.program.Program.<clinit>()V#Return(V)#21
chord.program.Program.g()Lchord/program/Program;#Get(Lchord/program/Program;,STATIC,Lchord/program/Program;,program)#0
chord.program.Program.g()Lchord/program/Program;#Constant(L;,null)#1
chord.program.Program.g()Lchord/program/Program;#ConditionalBranch(Ljava/lang/Object;,ne,7)#2
chord.program.Program.g()Lchord/program/Program;#New(Lchord/program/Program;,0)#3
chord.program.Program.g()Lchord/program/Program;#Dup(1,0)#4
chord.program.Program.g()Lchord/program/Program;#Invoke(SPECIAL,Lchord/program/Program;,<init>,()V)#5
chord.program.Program.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.program.Program.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
chord.program.Program.<init>()V#Get(I,STATIC,Lchord/project/Config;,verbose)#2
chord.program.Program.<init>()V#Constant(I,2)#3
chord.program.Program.<init>()V#ConditionalBranch(I,lt,6)#4
chord.program.Program.<init>()V#Get(Z,STATIC,Lchord/project/Config;,doSSA)#6
chord.program.Program.<init>()V#Constant(I,0)#7
chord.program.Program.<init>()V#ConditionalBranch(I,eq,10)#8
chord.program.Program.<init>()V#Invoke(STATIC,Ljoeq/Class/jq_Method;,doSSA,()V)#9
joeq.Class.jq_Member.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#0
joeq.Class.PrimordialClassLoader.<clinit>()V#Constant(I,0)#0
joeq.Class.PrimordialClassLoader.<clinit>()V#Put(Z,STATIC,Ljoeq/Class/PrimordialClassLoader;,TRACE)#1
joeq.Class.PrimordialClassLoader.<clinit>()V#New(Ljoeq/Class/PrimordialClassLoader;,0)#2
joeq.Class.PrimordialClassLoader.<clinit>()V#Dup(1,0)#3
joeq.Class.PrimordialClassLoader.<clinit>()V#Invoke(SPECIAL,Ljoeq/Class/PrimordialClassLoader;,<init>,()V)#4
joeq.Class.PrimordialClassLoader.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.PrimordialClassLoader.<init>()V#Invoke(SPECIAL,Ljava/lang/ClassLoader;,<init>,()V)#1
joeq.Class.PrimordialClassLoader.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Class.PrimordialClassLoader.<init>()V#New(Ljoeq/Class/Classpath;,0)#3
joeq.Class.Classpath.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@2adaf466)#0
joeq.Class.Classpath.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
joeq.Class.Classpath.<clinit>()V#Constant(I,0)#2
joeq.Class.Classpath.<clinit>()V#ConditionalBranch(I,ne,6)#3
joeq.Class.Classpath.<clinit>()V#Constant(I,0)#6
joeq.Class.Classpath.<clinit>()V#Put(Z,STATIC,Ljoeq/Class/Classpath;,$assertionsDisabled)#7
joeq.Class.Classpath.<clinit>()V#Constant(I,0)#8
joeq.Class.Classpath.<clinit>()V#Put(Z,STATIC,Ljoeq/Class/Classpath;,TRACE)#9
joeq.Class.Classpath.<clinit>()V#Constant(Ljava/lang/String;,"path.separator")#10
joeq.Class.Classpath.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#11
joeq.Class.Classpath.<clinit>()V#Put(Ljava/lang/String;,STATIC,Ljoeq/Class/Classpath;,pathsep)#12
joeq.Class.Classpath.<clinit>()V#Constant(Ljava/lang/String;,"file.separator")#13
joeq.Class.Classpath.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#14
joeq.Class.Classpath.<clinit>()V#Put(Ljava/lang/String;,STATIC,Ljoeq/Class/Classpath;,filesep)#15
joeq.Class.Classpath.<clinit>()V#Return(V)#16
joeq.Class.PrimordialClassLoader.<init>()V#Dup(1,0)#4
joeq.Class.PrimordialClassLoader.<init>()V#Invoke(SPECIAL,Ljoeq/Class/Classpath;,<init>,()V)#5
joeq.Class.Classpath.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.Classpath.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Class.Classpath.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Class.Classpath.<init>()V#New(Ljava/util/ArrayList;,0)#3
joeq.Class.Classpath.<init>()V#Dup(1,0)#4
joeq.Class.Classpath.<init>()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#5
joeq.Class.Classpath.<init>()V#Put(Ljava/util/List;,NONSTATIC,Ljoeq/Class/Classpath;,classpathList)#6
joeq.Class.Classpath.<init>()V#LocalLoad(Ljava/lang/Object;,0)#7
joeq.Class.Classpath.<init>()V#New(Ljava/util/HashSet;,0)#8
joeq.Class.Classpath.<init>()V#Dup(1,0)#9
joeq.Class.Classpath.<init>()V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#10
joeq.Class.Classpath.<init>()V#Put(Ljava/util/Set;,NONSTATIC,Ljoeq/Class/Classpath;,duplicates)#11
joeq.Class.Classpath.<init>()V#Return(V)#12
joeq.Class.PrimordialClassLoader.<init>()V#Put(Ljoeq/Class/Classpath;,NONSTATIC,Ljoeq/Class/PrimordialClassLoader;,classpath)#6
joeq.Class.PrimordialClassLoader.<init>()V#LocalLoad(Ljava/lang/Object;,0)#7
joeq.Class.PrimordialClassLoader.<init>()V#New(Ljava/util/HashMap;,0)#8
joeq.Class.PrimordialClassLoader.<init>()V#Dup(1,0)#9
joeq.Class.PrimordialClassLoader.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#10
joeq.Class.PrimordialClassLoader.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Ljoeq/Class/PrimordialClassLoader;,bs_desc2type)#11
joeq.Class.PrimordialClassLoader.<init>()V#LocalLoad(Ljava/lang/Object;,0)#12
joeq.Class.PrimordialClassLoader.<init>()V#Constant(I,1024)#13
joeq.Class.PrimordialClassLoader.<init>()V#New([Ljoeq/Class/jq_Type;,1)#14
joeq.Class.PrimordialClassLoader.<init>()V#Put([Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/PrimordialClassLoader;,allTypes)#15
joeq.Class.PrimordialClassLoader.<init>()V#LocalLoad(Ljava/lang/Object;,0)#16
joeq.Class.PrimordialClassLoader.<init>()V#Constant(I,0)#17
joeq.Class.PrimordialClassLoader.<init>()V#Put(I,NONSTATIC,Ljoeq/Class/PrimordialClassLoader;,numTypes)#18
joeq.Class.PrimordialClassLoader.<init>()V#Return(V)#19
joeq.Class.PrimordialClassLoader.<clinit>()V#Put(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#5
joeq.Class.PrimordialClassLoader.<clinit>()V#Invoke(STATIC,Ljoeq/Class/PrimordialClassLoader;,initPrimitiveTypes,()V)#6
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#0
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Get(Ljoeq/Class/jq_Primitive;,STATIC,Ljoeq/Class/jq_Primitive;,BYTE)#1
joeq.Class.jq_Type.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#0
joeq.Class.jq_Type.<clinit>()V#Constant(Ljava/lang/String;,"Ljoeq/Class/jq_Type;")#1
joeq.Class.jq_Type.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#2
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#2
joeq.UTF.Utf8.<clinit>()V#Constant(I,0)#0
joeq.UTF.Utf8.<clinit>()V#Put(Z,STATIC,Ljoeq/UTF/Utf8;,TRACE)#1
joeq.UTF.Utf8.<clinit>()V#Constant(I,16384)#2
joeq.UTF.Utf8.<clinit>()V#New([Ljoeq/UTF/Utf8;,1)#3
joeq.UTF.Utf8.<clinit>()V#Put([Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,table)#4
joeq.UTF.Utf8.<clinit>()V#Constant(I,-1)#5
joeq.UTF.Utf8.<clinit>()V#Put(I,STATIC,Ljoeq/UTF/Utf8;,size)#6
joeq.UTF.Utf8.<clinit>()V#Constant(I,9999)#7
joeq.UTF.Utf8.<clinit>()V#New([[I,1)#8
joeq.UTF.Utf8.<clinit>()V#Put([[I,STATIC,Ljoeq/UTF/Utf8;,chains)#9
joeq.UTF.Utf8.<clinit>()V#Constant(Ljava/lang/String;,"B")#10
joeq.UTF.Utf8.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#11
joeq.UTF.Utf8.get(Ljava/lang/String;)Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.UTF.Utf8.get(Ljava/lang/String;)Ljoeq/UTF/Utf8;#Invoke(STATIC,Ljoeq/UTF/Utf8;,toUtf8,(Ljava/lang/String;)[B)#1
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#LocalLoad(Ljava/lang/Object;,0)#0
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#Invoke(STATIC,Ljoeq/UTF/Utf8;,lengthUtf8,(Ljava/lang/String;)I)#1
joeq.UTF.Utf8.lengthUtf8(Ljava/lang/String;)I#Constant(I,0)#0
joeq.UTF.Utf8.lengthUtf8(Ljava/lang/String;)I#LocalStore(I,1)#1
joeq.UTF.Utf8.lengthUtf8(Ljava/lang/String;)I#Constant(I,0)#2
joeq.UTF.Utf8.lengthUtf8(Ljava/lang/String;)I#LocalStore(I,2)#3
joeq.UTF.Utf8.lengthUtf8(Ljava/lang/String;)I#LocalLoad(Ljava/lang/Object;,0)#4
joeq.UTF.Utf8.lengthUtf8(Ljava/lang/String;)I#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#5
joeq.UTF.Utf8.lengthUtf8(Ljava/lang/String;)I#LocalStore(I,3)#6
joeq.UTF.Utf8.lengthUtf8(Ljava/lang/String;)I#LocalLoad(I,2)#7
joeq.UTF.Utf8.lengthUtf8(Ljava/lang/String;)I#LocalLoad(I,3)#8
joeq.UTF.Utf8.lengthUtf8(Ljava/lang/String;)I#ConditionalBranch(I,ge,42)#9
joeq.UTF.Utf8.lengthUtf8(Ljava/lang/String;)I#LocalLoad(Ljava/lang/Object;,0)#10
joeq.UTF.Utf8.lengthUtf8(Ljava/lang/String;)I#LocalLoad(I,2)#11
joeq.UTF.Utf8.lengthUtf8(Ljava/lang/String;)I#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#12
joeq.UTF.Utf8.lengthUtf8(Ljava/lang/String;)I#LocalStore(I,4)#13
joeq.UTF.Utf8.lengthUtf8(Ljava/lang/String;)I#LocalLoad(I,4)#14
joeq.UTF.Utf8.lengthUtf8(Ljava/lang/String;)I#Constant(I,1)#15
joeq.UTF.Utf8.lengthUtf8(Ljava/lang/String;)I#ConditionalBranch(I,lt,25)#16
joeq.UTF.Utf8.lengthUtf8(Ljava/lang/String;)I#LocalLoad(I,4)#17
joeq.UTF.Utf8.lengthUtf8(Ljava/lang/String;)I#Constant(I,127)#18
joeq.UTF.Utf8.lengthUtf8(Ljava/lang/String;)I#ConditionalBranch(I,gt,25)#19
joeq.UTF.Utf8.lengthUtf8(Ljava/lang/String;)I#LocalLoad(I,1)#20
joeq.UTF.Utf8.lengthUtf8(Ljava/lang/String;)I#Constant(I,1)#21
joeq.UTF.Utf8.lengthUtf8(Ljava/lang/String;)I#BinaryOp(I,add)#22
joeq.UTF.Utf8.lengthUtf8(Ljava/lang/String;)I#LocalStore(I,1)#23
joeq.UTF.Utf8.lengthUtf8(Ljava/lang/String;)I#Goto(37)#24
joeq.UTF.Utf8.lengthUtf8(Ljava/lang/String;)I#LocalLoad(I,2)#37
joeq.UTF.Utf8.lengthUtf8(Ljava/lang/String;)I#Constant(I,1)#38
joeq.UTF.Utf8.lengthUtf8(Ljava/lang/String;)I#BinaryOp(I,add)#39
joeq.UTF.Utf8.lengthUtf8(Ljava/lang/String;)I#LocalStore(I,2)#40
joeq.UTF.Utf8.lengthUtf8(Ljava/lang/String;)I#Goto(7)#41
joeq.UTF.Utf8.lengthUtf8(Ljava/lang/String;)I#LocalLoad(I,1)#42
joeq.UTF.Utf8.lengthUtf8(Ljava/lang/String;)I#Return(I)#43
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#New([B,1)#2
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#LocalStore(Ljava/lang/Object;,1)#3
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#Constant(I,0)#4
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#LocalStore(I,2)#5
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#Constant(I,0)#6
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#LocalStore(I,3)#7
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#LocalLoad(Ljava/lang/Object;,0)#8
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#9
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#LocalStore(I,4)#10
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#LocalLoad(I,3)#11
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#LocalLoad(I,4)#12
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#ConditionalBranch(I,ge,112)#13
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#LocalLoad(Ljava/lang/Object;,0)#14
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#LocalLoad(I,3)#15
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#16
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#LocalStore(I,5)#17
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#LocalLoad(I,5)#18
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#Constant(I,1)#19
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#ConditionalBranch(I,lt,34)#20
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#LocalLoad(I,5)#21
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#Constant(I,127)#22
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#ConditionalBranch(I,gt,34)#23
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#LocalLoad(Ljava/lang/Object;,1)#24
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#LocalLoad(I,2)#25
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#LocalLoad(I,2)#26
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#Constant(I,1)#27
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#BinaryOp(I,add)#28
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#LocalStore(I,2)#29
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#LocalLoad(I,5)#30
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#Conversion(I,B)#31
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#ArrayStore(B)#32
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#Goto(107)#33
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#LocalLoad(I,3)#107
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#Constant(I,1)#108
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#BinaryOp(I,add)#109
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#LocalStore(I,3)#110
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#Goto(11)#111
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#LocalLoad(Ljava/lang/Object;,1)#112
joeq.UTF.Utf8.toUtf8(Ljava/lang/String;)[B#Return(Ljava/lang/Object;)#113
joeq.UTF.Utf8.get(Ljava/lang/String;)Ljoeq/UTF/Utf8;#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,([B)Ljoeq/UTF/Utf8;)#2
joeq.UTF.Utf8.get([B)Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.UTF.Utf8.get([B)Ljoeq/UTF/Utf8;#Invoke(STATIC,Ljoeq/UTF/Utf8;,getID,([B)I)#1
joeq.UTF.Utf8.getID([B)I#LocalLoad(Ljava/lang/Object;,0)#0
joeq.UTF.Utf8.getID([B)I#Invoke(STATIC,Ljoeq/UTF/Utf8;,hashCode,([B)I)#1
joeq.UTF.Utf8.hashCode([B)I#Constant(I,4999)#0
joeq.UTF.Utf8.hashCode([B)I#LocalStore(I,1)#1
joeq.UTF.Utf8.hashCode([B)I#LocalLoad(Ljava/lang/Object;,0)#2
joeq.UTF.Utf8.hashCode([B)I#ArrayLength()#3
joeq.UTF.Utf8.hashCode([B)I#LocalStore(I,2)#4
joeq.UTF.Utf8.hashCode([B)I#LocalLoad(I,2)#5
joeq.UTF.Utf8.hashCode([B)I#Constant(I,-1)#6
joeq.UTF.Utf8.hashCode([B)I#BinaryOp(I,add)#7
joeq.UTF.Utf8.hashCode([B)I#LocalStore(I,2)#8
joeq.UTF.Utf8.hashCode([B)I#LocalLoad(I,2)#9
joeq.UTF.Utf8.hashCode([B)I#Constant(I,0)#10
joeq.UTF.Utf8.hashCode([B)I#ConditionalBranch(I,lt,21)#11
joeq.UTF.Utf8.hashCode([B)I#Constant(I,2999)#12
joeq.UTF.Utf8.hashCode([B)I#LocalLoad(I,1)#13
joeq.UTF.Utf8.hashCode([B)I#BinaryOp(I,mul)#14
joeq.UTF.Utf8.hashCode([B)I#LocalLoad(Ljava/lang/Object;,0)#15
joeq.UTF.Utf8.hashCode([B)I#LocalLoad(I,2)#16
joeq.UTF.Utf8.hashCode([B)I#ArrayLoad(B)#17
joeq.UTF.Utf8.hashCode([B)I#BinaryOp(I,add)#18
joeq.UTF.Utf8.hashCode([B)I#LocalStore(I,1)#19
joeq.UTF.Utf8.hashCode([B)I#Goto(5)#20
joeq.UTF.Utf8.hashCode([B)I#LocalLoad(I,1)#21
joeq.UTF.Utf8.hashCode([B)I#Return(I)#22
joeq.UTF.Utf8.getID([B)I#LocalStore(I,1)#2
joeq.UTF.Utf8.getID([B)I#LocalLoad(I,1)#3
joeq.UTF.Utf8.getID([B)I#Invoke(STATIC,Ljava/lang/Math;,abs,(I)I)#4
joeq.UTF.Utf8.getID([B)I#Get([[I,STATIC,Ljoeq/UTF/Utf8;,chains)#5
joeq.UTF.Utf8.getID([B)I#ArrayLength()#6
joeq.UTF.Utf8.getID([B)I#BinaryOp(I,rem)#7
joeq.UTF.Utf8.getID([B)I#LocalStore(I,2)#8
joeq.UTF.Utf8.getID([B)I#Get([[I,STATIC,Ljoeq/UTF/Utf8;,chains)#9
joeq.UTF.Utf8.getID([B)I#LocalLoad(I,2)#10
joeq.UTF.Utf8.getID([B)I#ArrayLoad(Ljava/lang/Object;)#11
joeq.UTF.Utf8.getID([B)I#LocalStore(Ljava/lang/Object;,3)#12
joeq.UTF.Utf8.getID([B)I#LocalLoad(Ljava/lang/Object;,3)#13
joeq.UTF.Utf8.getID([B)I#Constant(L;,null)#14
joeq.UTF.Utf8.getID([B)I#ConditionalBranch(Ljava/lang/Object;,ne,29)#15
joeq.UTF.Utf8.getID([B)I#Get([[I,STATIC,Ljoeq/UTF/Utf8;,chains)#16
joeq.UTF.Utf8.getID([B)I#LocalLoad(I,2)#17
joeq.UTF.Utf8.getID([B)I#Constant(I,4)#18
joeq.UTF.Utf8.getID([B)I#New([I,1)#19
joeq.UTF.Utf8.getID([B)I#Dup(1,0)#20
joeq.UTF.Utf8.getID([B)I#LocalStore(Ljava/lang/Object;,3)#21
joeq.UTF.Utf8.getID([B)I#ArrayStore(Ljava/lang/Object;)#22
joeq.UTF.Utf8.getID([B)I#LocalLoad(Ljava/lang/Object;,0)#23
joeq.UTF.Utf8.getID([B)I#LocalLoad(I,1)#24
joeq.UTF.Utf8.getID([B)I#LocalLoad(Ljava/lang/Object;,3)#25
joeq.UTF.Utf8.getID([B)I#Constant(I,0)#26
joeq.UTF.Utf8.getID([B)I#Invoke(STATIC,Ljoeq/UTF/Utf8;,addToTable_helper,([BI[II)I)#27
joeq.UTF.Utf8.addToTable_helper([BI[II)I#Get(Z,STATIC,Ljoeq/UTF/Utf8;,NO_NEW)#0
joeq.UTF.Utf8.addToTable_helper([BI[II)I#Constant(I,0)#1
joeq.UTF.Utf8.addToTable_helper([BI[II)I#ConditionalBranch(I,eq,16)#2
joeq.UTF.Utf8.addToTable_helper([BI[II)I#Get(I,STATIC,Ljoeq/UTF/Utf8;,size)#16
joeq.UTF.Utf8.addToTable_helper([BI[II)I#Constant(I,1)#17
joeq.UTF.Utf8.addToTable_helper([BI[II)I#BinaryOp(I,add)#18
joeq.UTF.Utf8.addToTable_helper([BI[II)I#Dup(1,0)#19
joeq.UTF.Utf8.addToTable_helper([BI[II)I#Put(I,STATIC,Ljoeq/UTF/Utf8;,size)#20
joeq.UTF.Utf8.addToTable_helper([BI[II)I#Get([Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,table)#21
joeq.UTF.Utf8.addToTable_helper([BI[II)I#ArrayLength()#22
joeq.UTF.Utf8.addToTable_helper([BI[II)I#ConditionalBranch(I,ne,25)#23
joeq.UTF.Utf8.addToTable_helper([BI[II)I#LocalLoad(Ljava/lang/Object;,0)#25
joeq.UTF.Utf8.addToTable_helper([BI[II)I#Invoke(STATIC,Ljoeq/UTF/Utf8;,checkUtf8,([B)Z)#26
joeq.UTF.Utf8.checkUtf8([B)Z#Constant(I,0)#0
joeq.UTF.Utf8.checkUtf8([B)Z#LocalStore(I,1)#1
joeq.UTF.Utf8.checkUtf8([B)Z#LocalLoad(Ljava/lang/Object;,0)#2
joeq.UTF.Utf8.checkUtf8([B)Z#ArrayLength()#3
joeq.UTF.Utf8.checkUtf8([B)Z#LocalStore(I,2)#4
joeq.UTF.Utf8.checkUtf8([B)Z#LocalLoad(I,1)#5
joeq.UTF.Utf8.checkUtf8([B)Z#LocalLoad(I,2)#6
joeq.UTF.Utf8.checkUtf8([B)Z#ConditionalBranch(I,ge,73)#7
joeq.UTF.Utf8.checkUtf8([B)Z#LocalLoad(Ljava/lang/Object;,0)#8
joeq.UTF.Utf8.checkUtf8([B)Z#LocalLoad(I,1)#9
joeq.UTF.Utf8.checkUtf8([B)Z#LocalLoad(I,1)#10
joeq.UTF.Utf8.checkUtf8([B)Z#Constant(I,1)#11
joeq.UTF.Utf8.checkUtf8([B)Z#BinaryOp(I,add)#12
joeq.UTF.Utf8.checkUtf8([B)Z#LocalStore(I,1)#13
joeq.UTF.Utf8.checkUtf8([B)Z#ArrayLoad(B)#14
joeq.UTF.Utf8.checkUtf8([B)Z#LocalStore(I,3)#15
joeq.UTF.Utf8.checkUtf8([B)Z#LocalLoad(I,3)#16
joeq.UTF.Utf8.checkUtf8([B)Z#Constant(I,0)#17
joeq.UTF.Utf8.checkUtf8([B)Z#ConditionalBranch(I,lt,20)#18
joeq.UTF.Utf8.checkUtf8([B)Z#Goto(5)#19
joeq.UTF.Utf8.checkUtf8([B)Z#Constant(I,1)#73
joeq.UTF.Utf8.checkUtf8([B)Z#Return(I)#74
joeq.UTF.Utf8.addToTable_helper([BI[II)I#Constant(I,0)#27
joeq.UTF.Utf8.addToTable_helper([BI[II)I#ConditionalBranch(I,ne,33)#28
joeq.UTF.Utf8.addToTable_helper([BI[II)I#Get([Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,table)#33
joeq.UTF.Utf8.addToTable_helper([BI[II)I#Get(I,STATIC,Ljoeq/UTF/Utf8;,size)#34
joeq.UTF.Utf8.addToTable_helper([BI[II)I#New(Ljoeq/UTF/Utf8;,0)#35
joeq.UTF.Utf8.addToTable_helper([BI[II)I#Dup(1,0)#36
joeq.UTF.Utf8.addToTable_helper([BI[II)I#LocalLoad(Ljava/lang/Object;,0)#37
joeq.UTF.Utf8.addToTable_helper([BI[II)I#LocalLoad(I,1)#38
joeq.UTF.Utf8.addToTable_helper([BI[II)I#Invoke(SPECIAL,Ljoeq/UTF/Utf8;,<init>,([BI)V)#39
joeq.UTF.Utf8.<init>([BI)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.UTF.Utf8.<init>([BI)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.UTF.Utf8.<init>([BI)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.UTF.Utf8.<init>([BI)V#LocalLoad(Ljava/lang/Object;,1)#3
joeq.UTF.Utf8.<init>([BI)V#Put([B,NONSTATIC,Ljoeq/UTF/Utf8;,data)#4
joeq.UTF.Utf8.<init>([BI)V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.UTF.Utf8.<init>([BI)V#LocalLoad(I,2)#6
joeq.UTF.Utf8.<init>([BI)V#Put(I,NONSTATIC,Ljoeq/UTF/Utf8;,hash)#7
joeq.UTF.Utf8.<init>([BI)V#LocalLoad(Ljava/lang/Object;,0)#8
joeq.UTF.Utf8.<init>([BI)V#LocalLoad(Ljava/lang/Object;,1)#9
joeq.UTF.Utf8.<init>([BI)V#Invoke(STATIC,Ljoeq/UTF/Utf8;,fromUtf8,([B)Ljava/lang/String;)#10
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#ArrayLength()#1
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#New([C,1)#2
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,1)#3
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#Constant(I,0)#4
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#LocalStore(I,2)#5
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#Constant(I,0)#6
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#LocalStore(I,3)#7
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#8
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#ArrayLength()#9
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#LocalStore(I,4)#10
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#LocalLoad(I,3)#11
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#LocalLoad(I,4)#12
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#ConditionalBranch(I,ge,114)#13
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#14
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#LocalLoad(I,3)#15
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#LocalLoad(I,3)#16
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#Constant(I,1)#17
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#BinaryOp(I,add)#18
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#LocalStore(I,3)#19
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#ArrayLoad(B)#20
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#LocalStore(I,5)#21
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#LocalLoad(I,5)#22
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#Constant(I,0)#23
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#ConditionalBranch(I,lt,35)#24
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#25
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#LocalLoad(I,2)#26
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#LocalLoad(I,2)#27
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#Constant(I,1)#28
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#BinaryOp(I,add)#29
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#LocalStore(I,2)#30
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#LocalLoad(I,5)#31
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#Conversion(I,C)#32
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#ArrayStore(C)#33
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#Goto(11)#34
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#New(Ljava/lang/String;,0)#114
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#Dup(1,0)#115
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#116
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#Constant(I,0)#117
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#LocalLoad(I,2)#118
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/String;,<init>,([CII)V)#119
joeq.UTF.Utf8.fromUtf8([B)Ljava/lang/String;#Return(Ljava/lang/Object;)#120
joeq.UTF.Utf8.<init>([BI)V#Put(Ljava/lang/String;,NONSTATIC,Ljoeq/UTF/Utf8;,cache)#11
joeq.UTF.Utf8.<init>([BI)V#Return(V)#12
joeq.UTF.Utf8.addToTable_helper([BI[II)I#ArrayStore(Ljava/lang/Object;)#40
joeq.UTF.Utf8.addToTable_helper([BI[II)I#LocalLoad(Ljava/lang/Object;,2)#41
joeq.UTF.Utf8.addToTable_helper([BI[II)I#LocalLoad(I,3)#42
joeq.UTF.Utf8.addToTable_helper([BI[II)I#Get(I,STATIC,Ljoeq/UTF/Utf8;,size)#43
joeq.UTF.Utf8.addToTable_helper([BI[II)I#Constant(I,1)#44
joeq.UTF.Utf8.addToTable_helper([BI[II)I#BinaryOp(I,add)#45
joeq.UTF.Utf8.addToTable_helper([BI[II)I#ArrayStore(I)#46
joeq.UTF.Utf8.addToTable_helper([BI[II)I#Get(Z,STATIC,Ljoeq/UTF/Utf8;,TRACE)#47
joeq.UTF.Utf8.addToTable_helper([BI[II)I#Constant(I,0)#48
joeq.UTF.Utf8.addToTable_helper([BI[II)I#ConditionalBranch(I,eq,68)#49
joeq.UTF.Utf8.addToTable_helper([BI[II)I#Get(I,STATIC,Ljoeq/UTF/Utf8;,size)#68
joeq.UTF.Utf8.addToTable_helper([BI[II)I#Return(I)#69
joeq.UTF.Utf8.getID([B)I#Return(I)#28
joeq.UTF.Utf8.get([B)Ljoeq/UTF/Utf8;#LocalStore(I,1)#2
joeq.UTF.Utf8.get([B)Ljoeq/UTF/Utf8;#Get([Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,table)#3
joeq.UTF.Utf8.get([B)Ljoeq/UTF/Utf8;#LocalLoad(I,1)#4
joeq.UTF.Utf8.get([B)Ljoeq/UTF/Utf8;#ArrayLoad(Ljava/lang/Object;)#5
joeq.UTF.Utf8.get([B)Ljoeq/UTF/Utf8;#Return(Ljava/lang/Object;)#6
joeq.UTF.Utf8.get(Ljava/lang/String;)Ljoeq/UTF/Utf8;#Return(Ljava/lang/Object;)#3
joeq.UTF.Utf8.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,BYTE_DESC)#12
joeq.UTF.Utf8.<clinit>()V#Constant(Ljava/lang/String;,"C")#13
joeq.UTF.Utf8.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#14
joeq.UTF.Utf8.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,CHAR_DESC)#15
joeq.UTF.Utf8.<clinit>()V#Constant(Ljava/lang/String;,"D")#16
joeq.UTF.Utf8.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#17
joeq.UTF.Utf8.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,DOUBLE_DESC)#18
joeq.UTF.Utf8.<clinit>()V#Constant(Ljava/lang/String;,"F")#19
joeq.UTF.Utf8.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#20
joeq.UTF.Utf8.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,FLOAT_DESC)#21
joeq.UTF.Utf8.<clinit>()V#Constant(Ljava/lang/String;,"I")#22
joeq.UTF.Utf8.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#23
joeq.UTF.Utf8.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,INT_DESC)#24
joeq.UTF.Utf8.<clinit>()V#Constant(Ljava/lang/String;,"J")#25
joeq.UTF.Utf8.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#26
joeq.UTF.Utf8.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,LONG_DESC)#27
joeq.UTF.Utf8.<clinit>()V#Constant(Ljava/lang/String;,"S")#28
joeq.UTF.Utf8.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#29
joeq.UTF.Utf8.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,SHORT_DESC)#30
joeq.UTF.Utf8.<clinit>()V#Constant(Ljava/lang/String;,"Z")#31
joeq.UTF.Utf8.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#32
joeq.UTF.Utf8.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,BOOLEAN_DESC)#33
joeq.UTF.Utf8.<clinit>()V#Constant(Ljava/lang/String;,"V")#34
joeq.UTF.Utf8.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#35
joeq.UTF.Utf8.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,VOID_DESC)#36
joeq.UTF.Utf8.<clinit>()V#Constant(I,0)#37
joeq.UTF.Utf8.<clinit>()V#Put(Z,STATIC,Ljoeq/UTF/Utf8;,NO_NEW)#38
joeq.UTF.Utf8.<clinit>()V#Return(V)#39
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;)#3
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Get(Z,STATIC,Ljoeq/Main/jq;,RunningNative)#0
joeq.Main.jq.<clinit>()V#Constant(I,1)#0
joeq.Main.jq.<clinit>()V#Put(I,STATIC,Ljoeq/Main/jq;,NumOfNativeThreads)#1
joeq.Main.jq.<clinit>()V#Constant(I,0)#2
joeq.Main.jq.<clinit>()V#Put(Z,STATIC,Ljoeq/Main/jq;,RunningNative)#3
joeq.Main.jq.<clinit>()V#Constant(I,0)#4
joeq.Main.jq.<clinit>()V#Put(Z,STATIC,Ljoeq/Main/jq;,DontCompile)#5
joeq.Main.jq.<clinit>()V#Constant(I,0)#6
joeq.Main.jq.<clinit>()V#Put(Z,STATIC,Ljoeq/Main/jq;,IsBootstrapping)#7
joeq.Main.jq.<clinit>()V#Constant(Ljava/lang/String;,"joeq.nullvm")#8
joeq.Main.jq.<clinit>()V#Constant(Ljava/lang/String;,"true")#9
joeq.Main.jq.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#10
joeq.Main.jq.<clinit>()V#Constant(Ljava/lang/String;,"true")#11
joeq.Main.jq.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#12
joeq.Main.jq.<clinit>()V#Put(Z,STATIC,Ljoeq/Main/jq;,nullVM)#13
joeq.Main.jq.<clinit>()V#Constant(I,1)#14
joeq.Main.jq.<clinit>()V#Put(Z,STATIC,Ljoeq/Main/jq;,SMP)#15
joeq.Main.jq.<clinit>()V#Return(V)#16
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Constant(I,0)#1
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#ConditionalBranch(I,eq,8)#2
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#8
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Get(Ljava/util/Map;,NONSTATIC,Ljoeq/Class/PrimordialClassLoader;,bs_desc2type)#9
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,1)#10
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#11
joeq.UTF.Utf8.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#0
joeq.UTF.Utf8.hashCode()I#Get(I,NONSTATIC,Ljoeq/UTF/Utf8;,hash)#1
joeq.UTF.Utf8.hashCode()I#Return(I)#2
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#CheckCast(Ljoeq/Class/jq_Type;)#12
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalStore(Ljava/lang/Object;,2)#13
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,2)#14
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Constant(L;,null)#15
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#ConditionalBranch(Ljava/lang/Object;,ne,165)#16
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,1)#17
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Constant(I,76)#18
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,isDescriptor,(B)Z)#19
joeq.UTF.Utf8.isDescriptor(B)Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.UTF.Utf8.isDescriptor(B)Z#Get([B,NONSTATIC,Ljoeq/UTF/Utf8;,data)#1
joeq.UTF.Utf8.isDescriptor(B)Z#ArrayLength()#2
joeq.UTF.Utf8.isDescriptor(B)Z#Constant(I,0)#3
joeq.UTF.Utf8.isDescriptor(B)Z#ConditionalBranch(I,le,13)#4
joeq.UTF.Utf8.isDescriptor(B)Z#LocalLoad(Ljava/lang/Object;,0)#5
joeq.UTF.Utf8.isDescriptor(B)Z#Get([B,NONSTATIC,Ljoeq/UTF/Utf8;,data)#6
joeq.UTF.Utf8.isDescriptor(B)Z#Constant(I,0)#7
joeq.UTF.Utf8.isDescriptor(B)Z#ArrayLoad(B)#8
joeq.UTF.Utf8.isDescriptor(B)Z#LocalLoad(I,1)#9
joeq.UTF.Utf8.isDescriptor(B)Z#ConditionalBranch(I,ne,13)#10
joeq.UTF.Utf8.isDescriptor(B)Z#Constant(I,1)#11
joeq.UTF.Utf8.isDescriptor(B)Z#Goto(14)#12
joeq.UTF.Utf8.isDescriptor(B)Z#Return(I)#14
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Constant(I,0)#20
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#ConditionalBranch(I,eq,40)#21
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Get(Z,STATIC,Ljoeq/Class/PrimordialClassLoader;,TRACE)#22
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Constant(I,0)#23
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#ConditionalBranch(I,eq,35)#24
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#35
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,1)#36
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Invoke(STATIC,Ljoeq/Class/jq_Class;,newClass,(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Class;)#37
joeq.Class.jq_Reference.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#0
joeq.Class.jq_Reference.<clinit>()V#Constant(Ljava/lang/String;,"Ljoeq/Class/jq_Reference;")#1
joeq.Class.jq_Reference.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#2
joeq.Class.jq_Class.newClass(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Class;#LocalLoad(Ljava/lang/Object;,1)#0
joeq.Class.jq_Class.newClass(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Class;#Constant(I,76)#1
joeq.Class.jq_Class.newClass(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Class;#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,isDescriptor,(B)Z)#2
joeq.Class.jq_Class.newClass(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Class;#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#3
jwutil.util.Assert.<clinit>()V#Constant(Ljava/lang/String;,"joeq.Runtime.DebugImpl")#0
jwutil.util.Assert.<clinit>()V#Invoke(STATIC,Ljwutil/util/Assert;,attemptDelegate,(Ljava/lang/String;)Ljwutil/util/Assert$DebugDelegate;)#1
jwutil.util.Assert.attemptDelegate(Ljava/lang/String;)Ljwutil/util/Assert$DebugDelegate;#Constant(Ljava/lang/String;,"debug delegate")#0
jwutil.util.Assert.attemptDelegate(Ljava/lang/String;)Ljwutil/util/Assert$DebugDelegate;#LocalStore(Ljava/lang/Object;,1)#1
jwutil.util.Assert.attemptDelegate(Ljava/lang/String;)Ljwutil/util/Assert$DebugDelegate;#LocalLoad(Ljava/lang/Object;,0)#2
jwutil.util.Assert.attemptDelegate(Ljava/lang/String;)Ljwutil/util/Assert$DebugDelegate;#Invoke(STATIC,Ljava/lang/Class;,forName,(Ljava/lang/String;)Ljava/lang/Class;)#3
jwutil.util.Assert.attemptDelegate(Ljava/lang/String;)Ljwutil/util/Assert$DebugDelegate;#LocalStore(Ljava/lang/Object;,2)#4
jwutil.util.Assert.attemptDelegate(Ljava/lang/String;)Ljwutil/util/Assert$DebugDelegate;#LocalLoad(Ljava/lang/Object;,2)#5
jwutil.util.Assert.attemptDelegate(Ljava/lang/String;)Ljwutil/util/Assert$DebugDelegate;#Invoke(VIRTUAL,Ljava/lang/Class;,newInstance,()Ljava/lang/Object;)#6
joeq.Runtime.DebugImpl.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Runtime.DebugImpl.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Runtime.DebugImpl.<init>()V#Return(V)#2
jwutil.util.Assert.attemptDelegate(Ljava/lang/String;)Ljwutil/util/Assert$DebugDelegate;#CheckCast(Ljwutil/util/Assert$DebugDelegate;)#7
jwutil.util.Assert.attemptDelegate(Ljava/lang/String;)Ljwutil/util/Assert$DebugDelegate;#Return(Ljava/lang/Object;)#8
jwutil.util.Assert.<clinit>()V#Put(Ljwutil/util/Assert$DebugDelegate;,STATIC,Ljwutil/util/Assert;,_debug)#2
jwutil.util.Assert.<clinit>()V#Get(Ljwutil/util/Assert$DebugDelegate;,STATIC,Ljwutil/util/Assert;,_debug)#3
jwutil.util.Assert.<clinit>()V#Constant(L;,null)#4
jwutil.util.Assert.<clinit>()V#ConditionalBranch(Ljava/lang/Object;,ne,10)#5
jwutil.util.Assert.<clinit>()V#Return(V)#10
jwutil.util.Assert._assert(Z)V#LocalLoad(I,0)#0
jwutil.util.Assert._assert(Z)V#Constant(Ljava/lang/String;,"")#1
jwutil.util.Assert._assert(Z)V#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(ZLjava/lang/String;)V)#2
jwutil.util.Assert._assert(ZLjava/lang/String;)V#LocalLoad(I,0)#0
jwutil.util.Assert._assert(ZLjava/lang/String;)V#Constant(I,0)#1
jwutil.util.Assert._assert(ZLjava/lang/String;)V#ConditionalBranch(I,ne,12)#2
jwutil.util.Assert._assert(ZLjava/lang/String;)V#Return(V)#12
jwutil.util.Assert._assert(Z)V#Return(V)#3
joeq.Class.jq_Class.newClass(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Class;#New(Ljoeq/Class/jq_Class;,0)#4
joeq.Class.jq_Class.newClass(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Class;#Dup(1,0)#5
joeq.Class.jq_Class.newClass(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Class;#LocalLoad(Ljava/lang/Object;,0)#6
joeq.Class.jq_Class.newClass(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Class;#LocalLoad(Ljava/lang/Object;,1)#7
joeq.Class.jq_Class.newClass(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Class;#Invoke(SPECIAL,Ljoeq/Class/jq_Class;,<init>,(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)V)#8
joeq.Class.jq_Class.<init>(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.<init>(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)V#LocalLoad(Ljava/lang/Object;,2)#1
joeq.Class.jq_Class.<init>(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)V#LocalLoad(Ljava/lang/Object;,1)#2
joeq.Class.jq_Class.<init>(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)V#Invoke(SPECIAL,Ljoeq/Class/jq_Reference;,<init>,(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;)V)#3
joeq.Class.jq_Reference.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Reference.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Class.jq_Reference.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,2)#2
joeq.Class.jq_Reference.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;)V#Invoke(SPECIAL,Ljoeq/Class/jq_Type;,<init>,(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;)V)#3
joeq.Class.jq_Type.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Type.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Class.jq_Type.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Class.jq_Type.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Class.jq_Type.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;)V#Put(Ljoeq/UTF/Utf8;,NONSTATIC,Ljoeq/Class/jq_Type;,desc)#4
joeq.Class.jq_Type.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Class.jq_Type.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;)V#Invoke(SPECIAL,Ljoeq/Class/jq_Type;,initializeClassObject,()V)#6
joeq.Class.jq_Type.initializeClassObject()V#Get(Z,STATIC,Ljoeq/Main/jq;,RunningNative)#0
joeq.Class.jq_Type.initializeClassObject()V#Constant(I,0)#1
joeq.Class.jq_Type.initializeClassObject()V#ConditionalBranch(I,eq,9)#2
joeq.Class.jq_Type.initializeClassObject()V#LocalLoad(Ljava/lang/Object;,0)#9
joeq.Class.jq_Type.initializeClassObject()V#LocalLoad(Ljava/lang/Object;,0)#10
joeq.Class.jq_Type.initializeClassObject()V#Invoke(STATIC,Ljoeq/Runtime/Reflection;,getJDKType,(Ljoeq/Class/jq_Type;)Ljava/lang/Class;)#11
joeq.Runtime.Reflection.<clinit>()V#Constant(I,1)#0
joeq.Runtime.Reflection.<clinit>()V#Put(Z,STATIC,Ljoeq/Runtime/Reflection;,USE_DECLARED_FIELDS_CACHE)#1
joeq.Runtime.Reflection.<clinit>()V#Constant(L;,null)#2
joeq.Runtime.Reflection.<clinit>()V#Put(Ljoeq/Runtime/Reflection$Delegate;,STATIC,Ljoeq/Runtime/Reflection;,_delegate)#3
joeq.Runtime.Reflection.<clinit>()V#Get(Z,STATIC,Ljoeq/Main/jq;,nullVM)#4
joeq.Runtime.Reflection.<clinit>()V#LocalStore(I,0)#5
joeq.Runtime.Reflection.<clinit>()V#LocalLoad(I,0)#6
joeq.Runtime.Reflection.<clinit>()V#Constant(I,0)#7
joeq.Runtime.Reflection.<clinit>()V#ConditionalBranch(I,ne,12)#8
joeq.Runtime.Reflection.<clinit>()V#Get(Ljoeq/Runtime/Reflection$Delegate;,STATIC,Ljoeq/Runtime/Reflection;,_delegate)#12
joeq.Runtime.Reflection.<clinit>()V#Constant(L;,null)#13
joeq.Runtime.Reflection.<clinit>()V#ConditionalBranch(Ljava/lang/Object;,ne,19)#14
joeq.Runtime.Reflection.<clinit>()V#New(Ljoeq/Runtime/BasicReflectionImpl;,0)#15
joeq.Runtime.BasicReflectionImpl.<clinit>()V#Constant(I,0)#0
joeq.Runtime.BasicReflectionImpl.<clinit>()V#Put(Z,STATIC,Ljoeq/Runtime/BasicReflectionImpl;,REPORT_JDK_ERRORS)#1
joeq.Runtime.BasicReflectionImpl.<clinit>()V#Return(V)#2
joeq.Runtime.Reflection.<clinit>()V#Dup(1,0)#16
joeq.Runtime.Reflection.<clinit>()V#Invoke(SPECIAL,Ljoeq/Runtime/BasicReflectionImpl;,<init>,()V)#17
joeq.Runtime.BasicReflectionImpl.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Runtime.BasicReflectionImpl.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Runtime.BasicReflectionImpl.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Runtime.BasicReflectionImpl.<init>()V#Constant(I,1)#3
joeq.Runtime.BasicReflectionImpl.<init>()V#Put(Z,NONSTATIC,Ljoeq/Runtime/BasicReflectionImpl;,USE_DECLARED_FIELDS_CACHE)#4
joeq.Runtime.BasicReflectionImpl.<init>()V#Return(V)#5
joeq.Runtime.Reflection.<clinit>()V#Put(Ljoeq/Runtime/Reflection$Delegate;,STATIC,Ljoeq/Runtime/Reflection;,_delegate)#18
joeq.Runtime.Reflection.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#19
joeq.Runtime.Reflection.<clinit>()V#Constant(Ljava/lang/String;,"Ljoeq/Runtime/Reflection;")#20
joeq.Runtime.Reflection.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#21
joeq.Runtime.Reflection.getJDKType(Ljoeq/Class/jq_Type;)Ljava/lang/Class;#Get(Ljoeq/Runtime/Reflection$Delegate;,STATIC,Ljoeq/Runtime/Reflection;,_delegate)#0
joeq.Runtime.Reflection.getJDKType(Ljoeq/Class/jq_Type;)Ljava/lang/Class;#LocalLoad(Ljava/lang/Object;,0)#1
joeq.Runtime.Reflection.getJDKType(Ljoeq/Class/jq_Type;)Ljava/lang/Class;#Invoke(INTERFACE,Ljoeq/Runtime/Reflection$Delegate;,getJDKType,(Ljoeq/Class/jq_Type;)Ljava/lang/Class;)#2
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Type;)Ljava/lang/Class;#LocalLoad(Ljava/lang/Object;,1)#0
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Type;)Ljava/lang/Class;#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,getJavaLangClassObject,()Ljava/lang/Class;)#1
joeq.Class.jq_Type.getJavaLangClassObject()Ljava/lang/Class;#Get(Z,STATIC,Ljoeq/Main/jq;,RunningNative)#0
joeq.Class.jq_Type.getJavaLangClassObject()Ljava/lang/Class;#Constant(I,0)#1
joeq.Class.jq_Type.getJavaLangClassObject()Ljava/lang/Class;#ConditionalBranch(I,eq,9)#2
joeq.Class.jq_Type.getJavaLangClassObject()Ljava/lang/Class;#LocalLoad(Ljava/lang/Object;,0)#9
joeq.Class.jq_Type.getJavaLangClassObject()Ljava/lang/Class;#Get(Ljava/lang/Class;,NONSTATIC,Ljoeq/Class/jq_Type;,class_object)#10
joeq.Class.jq_Type.getJavaLangClassObject()Ljava/lang/Class;#Return(Ljava/lang/Object;)#11
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Type;)Ljava/lang/Class;#Constant(L;,null)#2
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Type;)Ljava/lang/Class;#ConditionalBranch(Ljava/lang/Object;,eq,7)#3
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Type;)Ljava/lang/Class;#LocalLoad(Ljava/lang/Object;,1)#7
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Type;)Ljava/lang/Class;#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,isPrimitiveType,()Z)#8
joeq.Class.jq_Reference.isPrimitiveType()Z#Constant(I,0)#0
joeq.Class.jq_Reference.isPrimitiveType()Z#Return(I)#1
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Type;)Ljava/lang/Class;#Constant(I,0)#9
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Type;)Ljava/lang/Class;#ConditionalBranch(I,eq,16)#10
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Type;)Ljava/lang/Class;#LocalLoad(Ljava/lang/Object;,0)#16
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Type;)Ljava/lang/Class;#LocalLoad(Ljava/lang/Object;,1)#17
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Type;)Ljava/lang/Class;#CheckCast(Ljoeq/Class/jq_Reference;)#18
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Type;)Ljava/lang/Class;#Invoke(VIRTUAL,Ljoeq/Runtime/BasicReflectionImpl;,getJDKType,(Ljoeq/Class/jq_Reference;)Ljava/lang/Class;)#19
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Reference;)Ljava/lang/Class;#LocalLoad(Ljava/lang/Object;,1)#0
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Reference;)Ljava/lang/Class;#Invoke(VIRTUAL,Ljoeq/Class/jq_Reference;,getJavaLangClassObject,()Ljava/lang/Class;)#1
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Reference;)Ljava/lang/Class;#Constant(L;,null)#2
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Reference;)Ljava/lang/Class;#ConditionalBranch(Ljava/lang/Object;,eq,7)#3
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Reference;)Ljava/lang/Class;#LocalLoad(Ljava/lang/Object;,1)#7
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Reference;)Ljava/lang/Class;#Invoke(VIRTUAL,Ljoeq/Class/jq_Reference;,getJDKName,()Ljava/lang/String;)#8
joeq.Class.jq_Class.getJDKName()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.getJDKName()Ljava/lang/String;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getName,()Ljava/lang/String;)#1
joeq.Class.jq_Class.getName()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.getName()Ljava/lang/String;#Get(Ljoeq/UTF/Utf8;,NONSTATIC,Ljoeq/Class/jq_Class;,desc)#1
joeq.Class.jq_Class.getName()Ljava/lang/String;#Invoke(STATIC,Ljoeq/Class/jq_Class;,className,(Ljoeq/UTF/Utf8;)Ljava/lang/String;)#2
joeq.Class.jq_Class.className(Ljoeq/UTF/Utf8;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.className(Ljoeq/UTF/Utf8;)Ljava/lang/String;#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,toString,()Ljava/lang/String;)#1
joeq.UTF.Utf8.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.UTF.Utf8.toString()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Ljoeq/UTF/Utf8;,cache)#1
joeq.UTF.Utf8.toString()Ljava/lang/String;#Constant(L;,null)#2
joeq.UTF.Utf8.toString()Ljava/lang/String;#ConditionalBranch(Ljava/lang/Object;,eq,7)#3
joeq.UTF.Utf8.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#4
joeq.UTF.Utf8.toString()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Ljoeq/UTF/Utf8;,cache)#5
joeq.UTF.Utf8.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#6
joeq.Class.jq_Class.className(Ljoeq/UTF/Utf8;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,1)#2
joeq.Class.jq_Class.className(Ljoeq/UTF/Utf8;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Class.jq_Class.className(Ljoeq/UTF/Utf8;)Ljava/lang/String;#Constant(Ljava/lang/String;,"L")#4
joeq.Class.jq_Class.className(Ljoeq/UTF/Utf8;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,startsWith,(Ljava/lang/String;)Z)#5
joeq.Class.jq_Class.className(Ljoeq/UTF/Utf8;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#6
joeq.Class.jq_Class.className(Ljoeq/UTF/Utf8;)Ljava/lang/String;#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(ZLjava/lang/String;)V)#7
joeq.Class.jq_Class.className(Ljoeq/UTF/Utf8;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#8
joeq.Class.jq_Class.className(Ljoeq/UTF/Utf8;)Ljava/lang/String;#Constant(Ljava/lang/String;,";")#9
joeq.Class.jq_Class.className(Ljoeq/UTF/Utf8;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,endsWith,(Ljava/lang/String;)Z)#10
joeq.Class.jq_Class.className(Ljoeq/UTF/Utf8;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#11
joeq.Class.jq_Class.className(Ljoeq/UTF/Utf8;)Ljava/lang/String;#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(ZLjava/lang/String;)V)#12
joeq.Class.jq_Class.className(Ljoeq/UTF/Utf8;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#13
joeq.Class.jq_Class.className(Ljoeq/UTF/Utf8;)Ljava/lang/String;#Constant(I,1)#14
joeq.Class.jq_Class.className(Ljoeq/UTF/Utf8;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#15
joeq.Class.jq_Class.className(Ljoeq/UTF/Utf8;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#16
joeq.Class.jq_Class.className(Ljoeq/UTF/Utf8;)Ljava/lang/String;#Constant(I,1)#17
joeq.Class.jq_Class.className(Ljoeq/UTF/Utf8;)Ljava/lang/String;#BinaryOp(I,sub)#18
joeq.Class.jq_Class.className(Ljoeq/UTF/Utf8;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,substring,(II)Ljava/lang/String;)#19
joeq.Class.jq_Class.className(Ljoeq/UTF/Utf8;)Ljava/lang/String;#Constant(I,47)#20
joeq.Class.jq_Class.className(Ljoeq/UTF/Utf8;)Ljava/lang/String;#Constant(I,46)#21
joeq.Class.jq_Class.className(Ljoeq/UTF/Utf8;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,replace,(CC)Ljava/lang/String;)#22
joeq.Class.jq_Class.className(Ljoeq/UTF/Utf8;)Ljava/lang/String;#Return(Ljava/lang/Object;)#23
joeq.Class.jq_Class.getName()Ljava/lang/String;#Return(Ljava/lang/Object;)#3
joeq.Class.jq_Class.getJDKName()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Reference;)Ljava/lang/Class;#Constant(I,0)#9
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Reference;)Ljava/lang/Class;#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@92640386)#10
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Reference;)Ljava/lang/Class;#Invoke(VIRTUAL,Ljava/lang/Class;,getClassLoader,()Ljava/lang/ClassLoader;)#11
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Reference;)Ljava/lang/Class;#Invoke(STATIC,Ljava/lang/Class;,forName,(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;)#12
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Reference;)Ljava/lang/Class;#Return(Ljava/lang/Object;)#13
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Type;)Ljava/lang/Class;#Return(Ljava/lang/Object;)#20
joeq.Runtime.Reflection.getJDKType(Ljoeq/Class/jq_Type;)Ljava/lang/Class;#Return(Ljava/lang/Object;)#3
joeq.Class.jq_Type.initializeClassObject()V#Put(Ljava/lang/Class;,NONSTATIC,Ljoeq/Class/jq_Type;,class_object)#12
joeq.Class.jq_Type.initializeClassObject()V#Return(V)#13
joeq.Class.jq_Type.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;)V#Return(V)#7
joeq.Class.jq_Reference.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,2)#4
joeq.Class.jq_Reference.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;)V#Constant(L;,null)#5
joeq.Class.jq_Reference.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;)V#ConditionalBranch(Ljava/lang/Object;,eq,9)#6
joeq.Class.jq_Reference.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;)V#Constant(I,1)#7
joeq.Class.jq_Reference.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;)V#Goto(10)#8
joeq.Class.jq_Reference.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;)V#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#10
joeq.Class.jq_Reference.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,0)#11
joeq.Class.jq_Reference.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,2)#12
joeq.Class.jq_Reference.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;)V#Put(Ljava/lang/ClassLoader;,NONSTATIC,Ljoeq/Class/jq_Reference;,class_loader)#13
joeq.Class.jq_Reference.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;)V#Return(V)#14
joeq.Class.jq_Class.<init>(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)V#LocalLoad(Ljava/lang/Object;,0)#4
joeq.Class.jq_Class.<init>(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)V#Constant(L;,null)#5
joeq.Class.jq_Class.<init>(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)V#Put([Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_Class;,sortedMembers)#6
joeq.Class.jq_Class.<init>(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)V#LocalLoad(Ljava/lang/Object;,0)#7
joeq.Class.jq_Class.<init>(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)V#Constant(I,0)#8
joeq.Class.jq_Class.<init>(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)V#New([Ljoeq/Class/jq_Class;,1)#9
joeq.Class.jq_Class.<init>(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)V#Put([Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,subclasses)#10
joeq.Class.jq_Class.<init>(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)V#LocalLoad(Ljava/lang/Object;,0)#11
joeq.Class.jq_Class.<init>(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)V#Constant(I,0)#12
joeq.Class.jq_Class.<init>(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)V#New([Ljoeq/Class/jq_Class;,1)#13
joeq.Class.jq_Class.<init>(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)V#Put([Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,subinterfaces)#14
joeq.Class.jq_Class.<init>(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)V#LocalLoad(Ljava/lang/Object;,0)#15
joeq.Class.jq_Class.<init>(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)V#New(Ljava/util/HashMap;,0)#16
joeq.Class.jq_Class.<init>(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)V#Dup(1,0)#17
joeq.Class.jq_Class.<init>(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#18
joeq.Class.jq_Class.<init>(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)V#Put(Ljava/util/Map;,NONSTATIC,Ljoeq/Class/jq_Class;,members)#19
joeq.Class.jq_Class.<init>(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)V#Return(V)#20
joeq.Class.jq_Class.newClass(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Class;#Return(Ljava/lang/Object;)#9
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalStore(Ljava/lang/Object;,2)#38
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Goto(161)#39
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#161
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,1)#162
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,2)#163
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Invoke(SPECIAL,Ljoeq/Class/PrimordialClassLoader;,put_desc2type,(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V)#164
joeq.Class.PrimordialClassLoader.put_desc2type(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.PrimordialClassLoader.put_desc2type(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V#Get(Ljava/util/Map;,NONSTATIC,Ljoeq/Class/PrimordialClassLoader;,bs_desc2type)#1
joeq.Class.PrimordialClassLoader.put_desc2type(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,1)#2
joeq.Class.PrimordialClassLoader.put_desc2type(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,2)#3
joeq.Class.PrimordialClassLoader.put_desc2type(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#4
joeq.Class.PrimordialClassLoader.put_desc2type(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V#LocalStore(Ljava/lang/Object;,3)#5
joeq.Class.PrimordialClassLoader.put_desc2type(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,3)#6
joeq.Class.PrimordialClassLoader.put_desc2type(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V#Constant(L;,null)#7
joeq.Class.PrimordialClassLoader.put_desc2type(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V#ConditionalBranch(Ljava/lang/Object;,ne,11)#8
joeq.Class.PrimordialClassLoader.put_desc2type(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V#Constant(I,1)#9
joeq.Class.PrimordialClassLoader.put_desc2type(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V#Goto(12)#10
joeq.Class.PrimordialClassLoader.put_desc2type(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#12
joeq.Class.PrimordialClassLoader.put_desc2type(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,0)#13
joeq.Class.PrimordialClassLoader.put_desc2type(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V#Get(I,NONSTATIC,Ljoeq/Class/PrimordialClassLoader;,numTypes)#14
joeq.Class.PrimordialClassLoader.put_desc2type(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,0)#15
joeq.Class.PrimordialClassLoader.put_desc2type(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V#Get([Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/PrimordialClassLoader;,allTypes)#16
joeq.Class.PrimordialClassLoader.put_desc2type(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V#ArrayLength()#17
joeq.Class.PrimordialClassLoader.put_desc2type(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V#ConditionalBranch(I,ne,37)#18
joeq.Class.PrimordialClassLoader.put_desc2type(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,0)#37
joeq.Class.PrimordialClassLoader.put_desc2type(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V#Get([Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/PrimordialClassLoader;,allTypes)#38
joeq.Class.PrimordialClassLoader.put_desc2type(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,0)#39
joeq.Class.PrimordialClassLoader.put_desc2type(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V#Dup(1,0)#40
joeq.Class.PrimordialClassLoader.put_desc2type(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V#Get(I,NONSTATIC,Ljoeq/Class/PrimordialClassLoader;,numTypes)#41
joeq.Class.PrimordialClassLoader.put_desc2type(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V#Dup(1,1)#42
joeq.Class.PrimordialClassLoader.put_desc2type(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V#Constant(I,1)#43
joeq.Class.PrimordialClassLoader.put_desc2type(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V#BinaryOp(I,add)#44
joeq.Class.PrimordialClassLoader.put_desc2type(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V#Put(I,NONSTATIC,Ljoeq/Class/PrimordialClassLoader;,numTypes)#45
joeq.Class.PrimordialClassLoader.put_desc2type(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,2)#46
joeq.Class.PrimordialClassLoader.put_desc2type(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V#ArrayStore(Ljava/lang/Object;)#47
joeq.Class.PrimordialClassLoader.put_desc2type(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V#Return(V)#48
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,2)#165
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Return(Ljava/lang/Object;)#166
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Return(Ljava/lang/Object;)#4
joeq.Runtime.Reflection.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#22
joeq.Runtime.Reflection.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Runtime/Reflection;,_class)#23
joeq.Runtime.Reflection.<clinit>()V#Get(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Runtime/Reflection;,_class)#24
joeq.Runtime.Reflection.<clinit>()V#Constant(Ljava/lang/String;,"obj_trav")#25
joeq.Runtime.Reflection.<clinit>()V#Constant(Ljava/lang/String;,"Ljoeq/Runtime/ObjectTraverser;")#26
joeq.Runtime.Reflection.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getOrCreateStaticField,(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_StaticField;)#27
joeq.Class.jq_Class.getOrCreateStaticField(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_StaticField;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.getOrCreateStaticField(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_StaticField;#New(Ljoeq/Class/jq_NameAndDesc;,0)#1
joeq.Class.jq_Class.getOrCreateStaticField(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_StaticField;#Dup(1,0)#2
joeq.Class.jq_Class.getOrCreateStaticField(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_StaticField;#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Class.jq_Class.getOrCreateStaticField(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_StaticField;#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#4
joeq.Class.jq_Class.getOrCreateStaticField(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_StaticField;#LocalLoad(Ljava/lang/Object;,2)#5
joeq.Class.jq_Class.getOrCreateStaticField(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_StaticField;#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#6
joeq.Class.jq_Class.getOrCreateStaticField(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_StaticField;#Invoke(SPECIAL,Ljoeq/Class/jq_NameAndDesc;,<init>,(Ljoeq/UTF/Utf8;Ljoeq/UTF/Utf8;)V)#7
joeq.Class.jq_NameAndDesc.<init>(Ljoeq/UTF/Utf8;Ljoeq/UTF/Utf8;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_NameAndDesc.<init>(Ljoeq/UTF/Utf8;Ljoeq/UTF/Utf8;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Class.jq_NameAndDesc.<init>(Ljoeq/UTF/Utf8;Ljoeq/UTF/Utf8;)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Class.jq_NameAndDesc.<init>(Ljoeq/UTF/Utf8;Ljoeq/UTF/Utf8;)V#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Class.jq_NameAndDesc.<init>(Ljoeq/UTF/Utf8;Ljoeq/UTF/Utf8;)V#Put(Ljoeq/UTF/Utf8;,NONSTATIC,Ljoeq/Class/jq_NameAndDesc;,name)#4
joeq.Class.jq_NameAndDesc.<init>(Ljoeq/UTF/Utf8;Ljoeq/UTF/Utf8;)V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Class.jq_NameAndDesc.<init>(Ljoeq/UTF/Utf8;Ljoeq/UTF/Utf8;)V#LocalLoad(Ljava/lang/Object;,2)#6
joeq.Class.jq_NameAndDesc.<init>(Ljoeq/UTF/Utf8;Ljoeq/UTF/Utf8;)V#Put(Ljoeq/UTF/Utf8;,NONSTATIC,Ljoeq/Class/jq_NameAndDesc;,desc)#7
joeq.Class.jq_NameAndDesc.<init>(Ljoeq/UTF/Utf8;Ljoeq/UTF/Utf8;)V#Return(V)#8
joeq.Class.jq_Class.getOrCreateStaticField(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_StaticField;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getOrCreateStaticField,(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;)#8
joeq.Class.jq_Class.getOrCreateStaticField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.getOrCreateStaticField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Class.jq_Class.getOrCreateStaticField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getDeclaredMember,(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;)#2
joeq.Class.jq_Class.getDeclaredMember(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.getDeclaredMember(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;#Get(Ljava/util/Map;,NONSTATIC,Ljoeq/Class/jq_Class;,members)#1
joeq.Class.jq_Class.getDeclaredMember(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;#LocalLoad(Ljava/lang/Object;,1)#2
joeq.Class.jq_Class.getDeclaredMember(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
joeq.Class.jq_NameAndDesc.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_NameAndDesc.hashCode()I#Get(Ljoeq/UTF/Utf8;,NONSTATIC,Ljoeq/Class/jq_NameAndDesc;,name)#1
joeq.Class.jq_NameAndDesc.hashCode()I#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,hashCode,()I)#2
joeq.Class.jq_NameAndDesc.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_NameAndDesc.hashCode()I#Get(Ljoeq/UTF/Utf8;,NONSTATIC,Ljoeq/Class/jq_NameAndDesc;,desc)#4
joeq.Class.jq_NameAndDesc.hashCode()I#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,hashCode,()I)#5
joeq.Class.jq_NameAndDesc.hashCode()I#BinaryOp(I,xor)#6
joeq.Class.jq_NameAndDesc.hashCode()I#Return(I)#7
joeq.Class.jq_Class.getDeclaredMember(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;#CheckCast(Ljoeq/Class/jq_Member;)#4
joeq.Class.jq_Class.getDeclaredMember(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;#Return(Ljava/lang/Object;)#5
joeq.Class.jq_Class.getOrCreateStaticField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#CheckCast(Ljoeq/Class/jq_StaticField;)#3
joeq.Class.jq_Class.getOrCreateStaticField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#LocalStore(Ljava/lang/Object;,2)#4
joeq.Class.jq_Class.getOrCreateStaticField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#LocalLoad(Ljava/lang/Object;,2)#5
joeq.Class.jq_Class.getOrCreateStaticField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#Constant(L;,null)#6
joeq.Class.jq_Class.getOrCreateStaticField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#ConditionalBranch(Ljava/lang/Object;,eq,10)#7
joeq.Class.jq_Class.getOrCreateStaticField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#LocalLoad(Ljava/lang/Object;,0)#10
joeq.Class.jq_Class.getOrCreateStaticField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#LocalLoad(Ljava/lang/Object;,1)#11
joeq.Class.jq_Class.getOrCreateStaticField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,createStaticField,(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;)#12
joeq.Class.jq_Class.createStaticField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.createStaticField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Class.jq_Class.createStaticField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getDeclaredMember,(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;)#2
joeq.Class.jq_Class.createStaticField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#Constant(L;,null)#3
joeq.Class.jq_Class.createStaticField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#ConditionalBranch(Ljava/lang/Object;,ne,7)#4
joeq.Class.jq_Class.createStaticField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#Constant(I,1)#5
joeq.Class.jq_Class.createStaticField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#Goto(8)#6
joeq.Class.jq_Class.createStaticField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#8
joeq.Class.jq_Class.createStaticField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#LocalLoad(Ljava/lang/Object;,0)#9
joeq.Class.jq_Class.createStaticField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#LocalLoad(Ljava/lang/Object;,1)#10
joeq.Class.jq_Class.createStaticField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#Invoke(STATIC,Ljoeq/Class/jq_StaticField;,newStaticField,(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;)#11
joeq.Class.jq_Field.<clinit>()V#Constant(L;,null)#0
joeq.Class.jq_Field.<clinit>()V#Put(Ljoeq/Class/jq_Field$Delegate;,STATIC,Ljoeq/Class/jq_Field;,_delegate)#1
joeq.Class.jq_Field.<clinit>()V#Get(Z,STATIC,Ljoeq/Main/jq;,nullVM)#2
joeq.Class.jq_Field.<clinit>()V#LocalStore(I,0)#3
joeq.Class.jq_Field.<clinit>()V#LocalLoad(I,0)#4
joeq.Class.jq_Field.<clinit>()V#Constant(I,0)#5
joeq.Class.jq_Field.<clinit>()V#ConditionalBranch(I,ne,10)#6
joeq.Class.jq_Field.<clinit>()V#Get(Ljoeq/Class/jq_Field$Delegate;,STATIC,Ljoeq/Class/jq_Field;,_delegate)#10
joeq.Class.jq_Field.<clinit>()V#Constant(L;,null)#11
joeq.Class.jq_Field.<clinit>()V#ConditionalBranch(Ljava/lang/Object;,ne,17)#12
joeq.Class.jq_Field.<clinit>()V#New(Ljoeq/Class/NullDelegates$Field;,0)#13
joeq.Class.jq_Field.<clinit>()V#Dup(1,0)#14
joeq.Class.jq_Field.<clinit>()V#Invoke(SPECIAL,Ljoeq/Class/NullDelegates$Field;,<init>,()V)#15
joeq.Class.NullDelegates$Field.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.NullDelegates$Field.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Class.NullDelegates$Field.<init>()V#Return(V)#2
joeq.Class.jq_Field.<clinit>()V#Put(Ljoeq/Class/jq_Field$Delegate;,STATIC,Ljoeq/Class/jq_Field;,_delegate)#16
joeq.Class.jq_Field.<clinit>()V#Return(V)#17
joeq.Class.jq_StaticField.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#0
joeq.Class.jq_StaticField.<clinit>()V#Constant(Ljava/lang/String;,"Ljoeq/Class/jq_StaticField;")#1
joeq.Class.jq_StaticField.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#2
joeq.Class.jq_StaticField.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#3
joeq.Class.jq_StaticField.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/jq_StaticField;,_class)#4
joeq.Class.jq_StaticField.<clinit>()V#Return(V)#5
joeq.Class.jq_StaticField.newStaticField(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#New(Ljoeq/Class/jq_StaticField;,0)#0
joeq.Class.jq_StaticField.newStaticField(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#Dup(1,0)#1
joeq.Class.jq_StaticField.newStaticField(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Class.jq_StaticField.newStaticField(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Class.jq_StaticField.newStaticField(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#Invoke(SPECIAL,Ljoeq/Class/jq_StaticField;,<init>,(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V)#4
joeq.Class.jq_StaticField.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_StaticField.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Class.jq_StaticField.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,2)#2
joeq.Class.jq_StaticField.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Invoke(SPECIAL,Ljoeq/Class/jq_Field;,<init>,(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V)#3
joeq.Class.jq_Field.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Field.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Class.jq_Field.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,2)#2
joeq.Class.jq_Field.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Invoke(SPECIAL,Ljoeq/Class/jq_Member;,<init>,(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V)#3
joeq.Class.jq_Member.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Member.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Class.jq_Member.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,1)#2
joeq.Class.jq_Member.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Constant(L;,null)#3
joeq.Class.jq_Member.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#ConditionalBranch(Ljava/lang/Object;,eq,7)#4
joeq.Class.jq_Member.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Constant(I,1)#5
joeq.Class.jq_Member.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Goto(8)#6
joeq.Class.jq_Member.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#8
joeq.Class.jq_Member.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,2)#9
joeq.Class.jq_Member.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Constant(L;,null)#10
joeq.Class.jq_Member.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#ConditionalBranch(Ljava/lang/Object;,eq,14)#11
joeq.Class.jq_Member.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Constant(I,1)#12
joeq.Class.jq_Member.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Goto(15)#13
joeq.Class.jq_Member.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#15
joeq.Class.jq_Member.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,0)#16
joeq.Class.jq_Member.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,1)#17
joeq.Class.jq_Member.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Put(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Member;,clazz)#18
joeq.Class.jq_Member.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,0)#19
joeq.Class.jq_Member.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,2)#20
joeq.Class.jq_Member.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Put(Ljoeq/Class/jq_NameAndDesc;,NONSTATIC,Ljoeq/Class/jq_Member;,nd)#21
joeq.Class.jq_Member.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,0)#22
joeq.Class.jq_Member.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Invoke(SPECIAL,Ljoeq/Class/jq_Member;,initializeMemberObject,()V)#23
joeq.Class.jq_Member.initializeMemberObject()V#Get(Z,STATIC,Ljoeq/Main/jq;,RunningNative)#0
joeq.Class.jq_Member.initializeMemberObject()V#Constant(I,0)#1
joeq.Class.jq_Member.initializeMemberObject()V#ConditionalBranch(I,eq,31)#2
joeq.Class.jq_Member.initializeMemberObject()V#Return(V)#31
joeq.Class.jq_Member.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Return(V)#24
joeq.Class.jq_Field.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,0)#4
joeq.Class.jq_Field.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,1)#5
joeq.Class.jq_Field.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getClassLoader,()Ljava/lang/ClassLoader;)#6
joeq.Class.jq_Reference.getClassLoader()Ljava/lang/ClassLoader;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Reference.getClassLoader()Ljava/lang/ClassLoader;#Get(Ljava/lang/ClassLoader;,NONSTATIC,Ljoeq/Class/jq_Reference;,class_loader)#1
joeq.Class.jq_Reference.getClassLoader()Ljava/lang/ClassLoader;#Return(Ljava/lang/Object;)#2
joeq.Class.jq_Field.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,2)#7
joeq.Class.jq_Field.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_NameAndDesc;,getDesc,()Ljoeq/UTF/Utf8;)#8
joeq.Class.jq_NameAndDesc.getDesc()Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_NameAndDesc.getDesc()Ljoeq/UTF/Utf8;#Get(Ljoeq/UTF/Utf8;,NONSTATIC,Ljoeq/Class/jq_NameAndDesc;,desc)#1
joeq.Class.jq_NameAndDesc.getDesc()Ljoeq/UTF/Utf8;#Return(Ljava/lang/Object;)#2
joeq.Class.jq_Field.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Invoke(STATIC,Ljoeq/Class/PrimordialClassLoader;,getOrCreateType,(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;)#9
joeq.Class.PrimordialClassLoader.getOrCreateType(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Get(Z,STATIC,Ljoeq/Main/jq;,RunningNative)#0
joeq.Class.PrimordialClassLoader.getOrCreateType(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Constant(I,0)#1
joeq.Class.PrimordialClassLoader.getOrCreateType(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#ConditionalBranch(I,eq,8)#2
joeq.Class.PrimordialClassLoader.getOrCreateType(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#8
joeq.Class.PrimordialClassLoader.getOrCreateType(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#9
joeq.Class.PrimordialClassLoader.getOrCreateType(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#ConditionalBranch(Ljava/lang/Object;,ne,13)#10
joeq.Class.PrimordialClassLoader.getOrCreateType(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Constant(I,1)#11
joeq.Class.PrimordialClassLoader.getOrCreateType(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Goto(14)#12
joeq.Class.PrimordialClassLoader.getOrCreateType(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#14
joeq.Class.PrimordialClassLoader.getOrCreateType(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#15
joeq.Class.PrimordialClassLoader.getOrCreateType(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,1)#16
joeq.Class.PrimordialClassLoader.getOrCreateType(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;)#17
joeq.Class.PrimordialClassLoader.getOrCreateType(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Return(Ljava/lang/Object;)#18
joeq.Class.jq_Field.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Put(Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_Field;,type)#10
joeq.Class.jq_Field.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Return(V)#11
joeq.Class.jq_StaticField.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Return(V)#4
joeq.Class.jq_StaticField.newStaticField(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#Return(Ljava/lang/Object;)#5
joeq.Class.jq_Class.createStaticField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#LocalStore(Ljava/lang/Object;,2)#12
joeq.Class.jq_Class.createStaticField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#LocalLoad(Ljava/lang/Object;,0)#13
joeq.Class.jq_Class.createStaticField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#LocalLoad(Ljava/lang/Object;,1)#14
joeq.Class.jq_Class.createStaticField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#LocalLoad(Ljava/lang/Object;,2)#15
joeq.Class.jq_Class.createStaticField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#Invoke(SPECIAL,Ljoeq/Class/jq_Class;,addDeclaredMember,(Ljoeq/Class/jq_NameAndDesc;Ljoeq/Class/jq_Member;)V)#16
joeq.Class.jq_Class.addDeclaredMember(Ljoeq/Class/jq_NameAndDesc;Ljoeq/Class/jq_Member;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.addDeclaredMember(Ljoeq/Class/jq_NameAndDesc;Ljoeq/Class/jq_Member;)V#Get(Ljava/util/Map;,NONSTATIC,Ljoeq/Class/jq_Class;,members)#1
joeq.Class.jq_Class.addDeclaredMember(Ljoeq/Class/jq_NameAndDesc;Ljoeq/Class/jq_Member;)V#LocalLoad(Ljava/lang/Object;,1)#2
joeq.Class.jq_Class.addDeclaredMember(Ljoeq/Class/jq_NameAndDesc;Ljoeq/Class/jq_Member;)V#LocalLoad(Ljava/lang/Object;,2)#3
joeq.Class.jq_Class.addDeclaredMember(Ljoeq/Class/jq_NameAndDesc;Ljoeq/Class/jq_Member;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#4
joeq.Class.jq_Class.addDeclaredMember(Ljoeq/Class/jq_NameAndDesc;Ljoeq/Class/jq_Member;)V#LocalStore(Ljava/lang/Object;,3)#5
joeq.Class.jq_Class.addDeclaredMember(Ljoeq/Class/jq_NameAndDesc;Ljoeq/Class/jq_Member;)V#Get(Z,STATIC,Ljoeq/Class/jq_Class;,TRACE)#6
joeq.Class.jq_Class.addDeclaredMember(Ljoeq/Class/jq_NameAndDesc;Ljoeq/Class/jq_Member;)V#Constant(I,0)#7
joeq.Class.jq_Class.addDeclaredMember(Ljoeq/Class/jq_NameAndDesc;Ljoeq/Class/jq_Member;)V#ConditionalBranch(I,eq,28)#8
joeq.Class.jq_Class.addDeclaredMember(Ljoeq/Class/jq_NameAndDesc;Ljoeq/Class/jq_Member;)V#Return(V)#28
joeq.Class.jq_Class.createStaticField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#LocalLoad(Ljava/lang/Object;,2)#17
joeq.Class.jq_Class.createStaticField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#Return(Ljava/lang/Object;)#18
joeq.Class.jq_Class.getOrCreateStaticField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticField;#Return(Ljava/lang/Object;)#13
joeq.Class.jq_Class.getOrCreateStaticField(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_StaticField;#Return(Ljava/lang/Object;)#9
joeq.Runtime.Reflection.<clinit>()V#Put(Ljoeq/Class/jq_StaticField;,STATIC,Ljoeq/Runtime/Reflection;,_obj_trav)#28
joeq.Runtime.Reflection.<clinit>()V#Get(Ljoeq/Runtime/Reflection$Delegate;,STATIC,Ljoeq/Runtime/Reflection;,_delegate)#29
joeq.Runtime.Reflection.<clinit>()V#Invoke(INTERFACE,Ljoeq/Runtime/Reflection$Delegate;,initialize,()V)#30
joeq.Runtime.BasicReflectionImpl.initialize()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#0
joeq.Runtime.BasicReflectionImpl.initialize()V#Constant(Ljava/lang/String;,"Ljoeq/Runtime/BasicReflectionImpl;")#1
joeq.Runtime.BasicReflectionImpl.initialize()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#2
joeq.Runtime.BasicReflectionImpl.initialize()V#CheckCast(Ljoeq/Class/jq_Class;)#3
joeq.Runtime.BasicReflectionImpl.initialize()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Runtime/BasicReflectionImpl;,_class)#4
joeq.Runtime.BasicReflectionImpl.initialize()V#Get(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Runtime/BasicReflectionImpl;,_class)#5
joeq.Runtime.BasicReflectionImpl.initialize()V#Constant(Ljava/lang/String;,"declaredFieldsCache")#6
joeq.Runtime.BasicReflectionImpl.initialize()V#Constant(Ljava/lang/String;,"Ljava/util/HashMap;")#7
joeq.Runtime.BasicReflectionImpl.initialize()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getOrCreateStaticField,(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_StaticField;)#8
joeq.Runtime.BasicReflectionImpl.initialize()V#Put(Ljoeq/Class/jq_StaticField;,STATIC,Ljoeq/Runtime/BasicReflectionImpl;,_declaredFieldsCache)#9
joeq.Runtime.BasicReflectionImpl.initialize()V#Return(V)#10
joeq.Runtime.Reflection.<clinit>()V#Return(V)#31
joeq.Class.jq_Reference.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#3
joeq.Class.jq_Reference.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/jq_Reference;,_class)#4
joeq.Class.jq_Reference.<clinit>()V#Get(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/jq_Reference;,_class)#5
joeq.Class.jq_Reference.<clinit>()V#Constant(Ljava/lang/String;,"vtable")#6
joeq.Class.jq_Reference.<clinit>()V#Constant(Ljava/lang/String;,"Ljava/lang/Object;")#7
joeq.Class.jq_Reference.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getOrCreateInstanceField,(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_InstanceField;)#8
joeq.Class.jq_Class.getOrCreateInstanceField(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_InstanceField;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.getOrCreateInstanceField(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_InstanceField;#New(Ljoeq/Class/jq_NameAndDesc;,0)#1
joeq.Class.jq_Class.getOrCreateInstanceField(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_InstanceField;#Dup(1,0)#2
joeq.Class.jq_Class.getOrCreateInstanceField(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_InstanceField;#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Class.jq_Class.getOrCreateInstanceField(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_InstanceField;#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#4
joeq.Class.jq_Class.getOrCreateInstanceField(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_InstanceField;#LocalLoad(Ljava/lang/Object;,2)#5
joeq.Class.jq_Class.getOrCreateInstanceField(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_InstanceField;#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#6
joeq.Class.jq_Class.getOrCreateInstanceField(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_InstanceField;#Invoke(SPECIAL,Ljoeq/Class/jq_NameAndDesc;,<init>,(Ljoeq/UTF/Utf8;Ljoeq/UTF/Utf8;)V)#7
joeq.Class.jq_Class.getOrCreateInstanceField(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_InstanceField;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getOrCreateInstanceField,(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;)#8
joeq.Class.jq_Class.getOrCreateInstanceField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.getOrCreateInstanceField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Class.jq_Class.getOrCreateInstanceField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getDeclaredMember,(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;)#2
joeq.Class.jq_Class.getOrCreateInstanceField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#CheckCast(Ljoeq/Class/jq_InstanceField;)#3
joeq.Class.jq_Class.getOrCreateInstanceField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#LocalStore(Ljava/lang/Object;,2)#4
joeq.Class.jq_Class.getOrCreateInstanceField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#LocalLoad(Ljava/lang/Object;,2)#5
joeq.Class.jq_Class.getOrCreateInstanceField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#Constant(L;,null)#6
joeq.Class.jq_Class.getOrCreateInstanceField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#ConditionalBranch(Ljava/lang/Object;,eq,10)#7
joeq.Class.jq_Class.getOrCreateInstanceField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#LocalLoad(Ljava/lang/Object;,0)#10
joeq.Class.jq_Class.getOrCreateInstanceField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#LocalLoad(Ljava/lang/Object;,1)#11
joeq.Class.jq_Class.getOrCreateInstanceField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,createInstanceField,(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;)#12
joeq.Class.jq_Class.createInstanceField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.createInstanceField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Class.jq_Class.createInstanceField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getDeclaredMember,(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;)#2
joeq.Class.jq_Class.createInstanceField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#Constant(L;,null)#3
joeq.Class.jq_Class.createInstanceField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#ConditionalBranch(Ljava/lang/Object;,ne,7)#4
joeq.Class.jq_Class.createInstanceField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#Constant(I,1)#5
joeq.Class.jq_Class.createInstanceField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#Goto(8)#6
joeq.Class.jq_Class.createInstanceField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#8
joeq.Class.jq_Class.createInstanceField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#LocalLoad(Ljava/lang/Object;,0)#9
joeq.Class.jq_Class.createInstanceField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#LocalLoad(Ljava/lang/Object;,1)#10
joeq.Class.jq_Class.createInstanceField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#Invoke(STATIC,Ljoeq/Class/jq_InstanceField;,newInstanceField,(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;)#11
joeq.Class.jq_InstanceField.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#0
joeq.Class.jq_InstanceField.<clinit>()V#Constant(Ljava/lang/String;,"Ljoeq/Class/jq_InstanceField;")#1
joeq.Class.jq_InstanceField.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#2
joeq.Class.jq_InstanceField.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#3
joeq.Class.jq_InstanceField.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/jq_InstanceField;,_class)#4
joeq.Class.jq_InstanceField.<clinit>()V#Return(V)#5
joeq.Class.jq_InstanceField.newInstanceField(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#New(Ljoeq/Class/jq_InstanceField;,0)#0
joeq.Class.jq_InstanceField.newInstanceField(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#Dup(1,0)#1
joeq.Class.jq_InstanceField.newInstanceField(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Class.jq_InstanceField.newInstanceField(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Class.jq_InstanceField.newInstanceField(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#Invoke(SPECIAL,Ljoeq/Class/jq_InstanceField;,<init>,(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V)#4
joeq.Class.jq_InstanceField.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_InstanceField.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Class.jq_InstanceField.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,2)#2
joeq.Class.jq_InstanceField.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Invoke(SPECIAL,Ljoeq/Class/jq_Field;,<init>,(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V)#3
joeq.Class.jq_InstanceField.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,0)#4
joeq.Class.jq_InstanceField.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Constant(I,-2147483648)#5
joeq.Class.jq_InstanceField.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Put(I,NONSTATIC,Ljoeq/Class/jq_InstanceField;,offset)#6
joeq.Class.jq_InstanceField.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Return(V)#7
joeq.Class.jq_InstanceField.newInstanceField(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#Return(Ljava/lang/Object;)#5
joeq.Class.jq_Class.createInstanceField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#LocalStore(Ljava/lang/Object;,2)#12
joeq.Class.jq_Class.createInstanceField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#LocalLoad(Ljava/lang/Object;,0)#13
joeq.Class.jq_Class.createInstanceField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#LocalLoad(Ljava/lang/Object;,1)#14
joeq.Class.jq_Class.createInstanceField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#LocalLoad(Ljava/lang/Object;,2)#15
joeq.Class.jq_Class.createInstanceField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#Invoke(SPECIAL,Ljoeq/Class/jq_Class;,addDeclaredMember,(Ljoeq/Class/jq_NameAndDesc;Ljoeq/Class/jq_Member;)V)#16
joeq.Class.jq_Class.createInstanceField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#LocalLoad(Ljava/lang/Object;,2)#17
joeq.Class.jq_Class.createInstanceField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#Return(Ljava/lang/Object;)#18
joeq.Class.jq_Class.getOrCreateInstanceField(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;#Return(Ljava/lang/Object;)#13
joeq.Class.jq_Class.getOrCreateInstanceField(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_InstanceField;#Return(Ljava/lang/Object;)#9
joeq.Class.jq_Reference.<clinit>()V#Put(Ljoeq/Class/jq_InstanceField;,STATIC,Ljoeq/Class/jq_Reference;,_vtable)#9
joeq.Class.jq_Reference.<clinit>()V#Get(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/jq_Reference;,_class)#10
joeq.Class.jq_Reference.<clinit>()V#Constant(Ljava/lang/String;,"state")#11
joeq.Class.jq_Reference.<clinit>()V#Constant(Ljava/lang/String;,"I")#12
joeq.Class.jq_Reference.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getOrCreateInstanceField,(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_InstanceField;)#13
joeq.UTF.Utf8.getID([B)I#Constant(I,0)#29
joeq.UTF.Utf8.getID([B)I#LocalStore(I,4)#30
joeq.UTF.Utf8.getID([B)I#LocalLoad(I,4)#31
joeq.UTF.Utf8.getID([B)I#LocalLoad(Ljava/lang/Object;,3)#32
joeq.UTF.Utf8.getID([B)I#ArrayLength()#33
joeq.UTF.Utf8.getID([B)I#ConditionalBranch(I,ge,67)#34
joeq.UTF.Utf8.getID([B)I#LocalLoad(Ljava/lang/Object;,3)#35
joeq.UTF.Utf8.getID([B)I#LocalLoad(I,4)#36
joeq.UTF.Utf8.getID([B)I#ArrayLoad(I)#37
joeq.UTF.Utf8.getID([B)I#Constant(I,1)#38
joeq.UTF.Utf8.getID([B)I#BinaryOp(I,sub)#39
joeq.UTF.Utf8.getID([B)I#LocalStore(I,5)#40
joeq.UTF.Utf8.getID([B)I#LocalLoad(I,5)#41
joeq.UTF.Utf8.getID([B)I#Constant(I,-1)#42
joeq.UTF.Utf8.getID([B)I#ConditionalBranch(I,ne,50)#43
joeq.UTF.Utf8.getID([B)I#Get([Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,table)#50
joeq.UTF.Utf8.getID([B)I#LocalLoad(I,5)#51
joeq.UTF.Utf8.getID([B)I#ArrayLoad(Ljava/lang/Object;)#52
joeq.UTF.Utf8.getID([B)I#LocalStore(Ljava/lang/Object;,6)#53
joeq.UTF.Utf8.getID([B)I#LocalLoad(Ljava/lang/Object;,6)#54
joeq.UTF.Utf8.getID([B)I#Get([B,NONSTATIC,Ljoeq/UTF/Utf8;,data)#55
joeq.UTF.Utf8.getID([B)I#LocalLoad(Ljava/lang/Object;,0)#56
joeq.UTF.Utf8.getID([B)I#Invoke(STATIC,Ljoeq/UTF/Utf8;,memcmp,([B[B)Z)#57
joeq.UTF.Utf8.memcmp([B[B)Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.UTF.Utf8.memcmp([B[B)Z#ArrayLength()#1
joeq.UTF.Utf8.memcmp([B[B)Z#LocalLoad(Ljava/lang/Object;,1)#2
joeq.UTF.Utf8.memcmp([B[B)Z#ArrayLength()#3
joeq.UTF.Utf8.memcmp([B[B)Z#ConditionalBranch(I,eq,7)#4
joeq.UTF.Utf8.memcmp([B[B)Z#LocalLoad(Ljava/lang/Object;,0)#7
joeq.UTF.Utf8.memcmp([B[B)Z#ArrayLength()#8
joeq.UTF.Utf8.memcmp([B[B)Z#LocalStore(I,2)#9
joeq.UTF.Utf8.memcmp([B[B)Z#LocalLoad(I,2)#10
joeq.UTF.Utf8.memcmp([B[B)Z#Constant(I,-1)#11
joeq.UTF.Utf8.memcmp([B[B)Z#BinaryOp(I,add)#12
joeq.UTF.Utf8.memcmp([B[B)Z#LocalStore(I,2)#13
joeq.UTF.Utf8.memcmp([B[B)Z#LocalLoad(I,2)#14
joeq.UTF.Utf8.memcmp([B[B)Z#Constant(I,0)#15
joeq.UTF.Utf8.memcmp([B[B)Z#ConditionalBranch(I,lt,26)#16
joeq.UTF.Utf8.memcmp([B[B)Z#LocalLoad(Ljava/lang/Object;,0)#17
joeq.UTF.Utf8.memcmp([B[B)Z#LocalLoad(I,2)#18
joeq.UTF.Utf8.memcmp([B[B)Z#ArrayLoad(B)#19
joeq.UTF.Utf8.memcmp([B[B)Z#LocalLoad(Ljava/lang/Object;,1)#20
joeq.UTF.Utf8.memcmp([B[B)Z#LocalLoad(I,2)#21
joeq.UTF.Utf8.memcmp([B[B)Z#ArrayLoad(B)#22
joeq.UTF.Utf8.memcmp([B[B)Z#ConditionalBranch(I,eq,10)#23
joeq.UTF.Utf8.memcmp([B[B)Z#Constant(I,1)#26
joeq.UTF.Utf8.memcmp([B[B)Z#Return(I)#27
joeq.UTF.Utf8.getID([B)I#Constant(I,0)#58
joeq.UTF.Utf8.getID([B)I#ConditionalBranch(I,eq,62)#59
joeq.UTF.Utf8.getID([B)I#LocalLoad(I,5)#60
joeq.UTF.Utf8.getID([B)I#Return(I)#61
joeq.UTF.Utf8.isDescriptor(B)Z#Constant(I,0)#13
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,1)#40
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Constant(I,91)#41
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,isDescriptor,(B)Z)#42
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Constant(I,0)#43
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#ConditionalBranch(I,eq,71)#44
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,1)#71
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Get(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,BYTE_DESC)#72
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#ConditionalBranch(Ljava/lang/Object;,ne,80)#73
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,1)#80
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Get(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,CHAR_DESC)#81
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#ConditionalBranch(Ljava/lang/Object;,ne,89)#82
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,1)#89
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Get(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,DOUBLE_DESC)#90
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#ConditionalBranch(Ljava/lang/Object;,ne,98)#91
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,1)#98
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Get(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,FLOAT_DESC)#99
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#ConditionalBranch(Ljava/lang/Object;,ne,107)#100
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,1)#107
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Get(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,INT_DESC)#108
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#ConditionalBranch(Ljava/lang/Object;,ne,116)#109
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,1)#110
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Constant(Ljava/lang/String;,"int")#111
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Constant(I,4)#112
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Invoke(STATIC,Ljoeq/Class/jq_Primitive;,newPrimitive,(Ljoeq/UTF/Utf8;Ljava/lang/String;I)Ljoeq/Class/jq_Primitive;)#113
joeq.Class.jq_Primitive.newPrimitive(Ljoeq/UTF/Utf8;Ljava/lang/String;I)Ljoeq/Class/jq_Primitive;#New(Ljoeq/Class/jq_Primitive;,0)#0
joeq.Class.jq_Primitive.newPrimitive(Ljoeq/UTF/Utf8;Ljava/lang/String;I)Ljoeq/Class/jq_Primitive;#Dup(1,0)#1
joeq.Class.jq_Primitive.newPrimitive(Ljoeq/UTF/Utf8;Ljava/lang/String;I)Ljoeq/Class/jq_Primitive;#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Class.jq_Primitive.newPrimitive(Ljoeq/UTF/Utf8;Ljava/lang/String;I)Ljoeq/Class/jq_Primitive;#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Class.jq_Primitive.newPrimitive(Ljoeq/UTF/Utf8;Ljava/lang/String;I)Ljoeq/Class/jq_Primitive;#LocalLoad(I,2)#4
joeq.Class.jq_Primitive.newPrimitive(Ljoeq/UTF/Utf8;Ljava/lang/String;I)Ljoeq/Class/jq_Primitive;#Invoke(SPECIAL,Ljoeq/Class/jq_Primitive;,<init>,(Ljoeq/UTF/Utf8;Ljava/lang/String;I)V)#5
joeq.Class.jq_Primitive.<init>(Ljoeq/UTF/Utf8;Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Primitive.<init>(Ljoeq/UTF/Utf8;Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Class.jq_Primitive.<init>(Ljoeq/UTF/Utf8;Ljava/lang/String;I)V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#2
joeq.Class.jq_Primitive.<init>(Ljoeq/UTF/Utf8;Ljava/lang/String;I)V#Invoke(SPECIAL,Ljoeq/Class/jq_Type;,<init>,(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;)V)#3
joeq.Class.jq_Primitive.isPrimitiveType()Z#Constant(I,1)#0
joeq.Class.jq_Primitive.isPrimitiveType()Z#Return(I)#1
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Type;)Ljava/lang/Class;#LocalLoad(Ljava/lang/Object;,0)#11
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Type;)Ljava/lang/Class;#LocalLoad(Ljava/lang/Object;,1)#12
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Type;)Ljava/lang/Class;#CheckCast(Ljoeq/Class/jq_Primitive;)#13
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Type;)Ljava/lang/Class;#Invoke(VIRTUAL,Ljoeq/Runtime/BasicReflectionImpl;,getJDKType,(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;)#14
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#LocalLoad(Ljava/lang/Object;,1)#0
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Invoke(VIRTUAL,Ljoeq/Class/jq_Primitive;,getJavaLangClassObject,()Ljava/lang/Class;)#1
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Constant(L;,null)#2
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#ConditionalBranch(Ljava/lang/Object;,eq,7)#3
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#LocalLoad(Ljava/lang/Object;,1)#7
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Invoke(VIRTUAL,Ljoeq/Class/jq_Primitive;,getDesc,()Ljoeq/UTF/Utf8;)#8
joeq.Class.jq_Type.getDesc()Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Type.getDesc()Ljoeq/UTF/Utf8;#Get(Ljoeq/UTF/Utf8;,NONSTATIC,Ljoeq/Class/jq_Type;,desc)#1
joeq.Class.jq_Type.getDesc()Ljoeq/UTF/Utf8;#Return(Ljava/lang/Object;)#2
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Get(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,BYTE_DESC)#9
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#ConditionalBranch(Ljava/lang/Object;,ne,13)#10
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#LocalLoad(Ljava/lang/Object;,1)#13
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Invoke(VIRTUAL,Ljoeq/Class/jq_Primitive;,getDesc,()Ljoeq/UTF/Utf8;)#14
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Get(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,CHAR_DESC)#15
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#ConditionalBranch(Ljava/lang/Object;,ne,19)#16
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#LocalLoad(Ljava/lang/Object;,1)#19
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Invoke(VIRTUAL,Ljoeq/Class/jq_Primitive;,getDesc,()Ljoeq/UTF/Utf8;)#20
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Get(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,DOUBLE_DESC)#21
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#ConditionalBranch(Ljava/lang/Object;,ne,25)#22
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#LocalLoad(Ljava/lang/Object;,1)#25
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Invoke(VIRTUAL,Ljoeq/Class/jq_Primitive;,getDesc,()Ljoeq/UTF/Utf8;)#26
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Get(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,FLOAT_DESC)#27
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#ConditionalBranch(Ljava/lang/Object;,ne,31)#28
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#LocalLoad(Ljava/lang/Object;,1)#31
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Invoke(VIRTUAL,Ljoeq/Class/jq_Primitive;,getDesc,()Ljoeq/UTF/Utf8;)#32
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Get(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,INT_DESC)#33
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#ConditionalBranch(Ljava/lang/Object;,ne,37)#34
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Get(Ljava/lang/Class;,STATIC,Ljava/lang/Integer;,TYPE)#35
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Return(Ljava/lang/Object;)#36
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Type;)Ljava/lang/Class;#Return(Ljava/lang/Object;)#15
joeq.Class.jq_Primitive.<init>(Ljoeq/UTF/Utf8;Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#4
joeq.Class.jq_Primitive.<init>(Ljoeq/UTF/Utf8;Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,2)#5
joeq.Class.jq_Primitive.<init>(Ljoeq/UTF/Utf8;Ljava/lang/String;I)V#Put(Ljava/lang/String;,NONSTATIC,Ljoeq/Class/jq_Primitive;,name)#6
joeq.Class.jq_Primitive.<init>(Ljoeq/UTF/Utf8;Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#7
joeq.Class.jq_Primitive.<init>(Ljoeq/UTF/Utf8;Ljava/lang/String;I)V#LocalLoad(I,3)#8
joeq.Class.jq_Primitive.<init>(Ljoeq/UTF/Utf8;Ljava/lang/String;I)V#Put(I,NONSTATIC,Ljoeq/Class/jq_Primitive;,size)#9
joeq.Class.jq_Primitive.<init>(Ljoeq/UTF/Utf8;Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#10
joeq.Class.jq_Primitive.<init>(Ljoeq/UTF/Utf8;Ljava/lang/String;I)V#Constant(I,10)#11
joeq.Class.jq_Primitive.<init>(Ljoeq/UTF/Utf8;Ljava/lang/String;I)V#New([Ljoeq/Class/jq_Type;,1)#12
joeq.Class.jq_Primitive.<init>(Ljoeq/UTF/Utf8;Ljava/lang/String;I)V#Put([Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_Primitive;,display)#13
joeq.Class.jq_Primitive.<init>(Ljoeq/UTF/Utf8;Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#14
joeq.Class.jq_Primitive.<init>(Ljoeq/UTF/Utf8;Ljava/lang/String;I)V#Get([Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_Primitive;,display)#15
joeq.Class.jq_Primitive.<init>(Ljoeq/UTF/Utf8;Ljava/lang/String;I)V#Constant(I,2)#16
joeq.Class.jq_Primitive.<init>(Ljoeq/UTF/Utf8;Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#17
joeq.Class.jq_Primitive.<init>(Ljoeq/UTF/Utf8;Ljava/lang/String;I)V#ArrayStore(Ljava/lang/Object;)#18
joeq.Class.jq_Primitive.<init>(Ljoeq/UTF/Utf8;Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#19
joeq.Class.jq_Primitive.<init>(Ljoeq/UTF/Utf8;Ljava/lang/String;I)V#Constant(L;,null)#20
joeq.Class.jq_Primitive.<init>(Ljoeq/UTF/Utf8;Ljava/lang/String;I)V#Put([Ljoeq/Class/jq_Reference;,NONSTATIC,Ljoeq/Class/jq_Primitive;,s_s_array)#21
joeq.Class.jq_Primitive.<init>(Ljoeq/UTF/Utf8;Ljava/lang/String;I)V#LocalLoad(Ljava/lang/Object;,0)#22
joeq.Class.jq_Primitive.<init>(Ljoeq/UTF/Utf8;Ljava/lang/String;I)V#Constant(I,0)#23
joeq.Class.jq_Primitive.<init>(Ljoeq/UTF/Utf8;Ljava/lang/String;I)V#Put(I,NONSTATIC,Ljoeq/Class/jq_Primitive;,s_s_array_length)#24
joeq.Class.jq_Primitive.<init>(Ljoeq/UTF/Utf8;Ljava/lang/String;I)V#Return(V)#25
joeq.Class.jq_Primitive.newPrimitive(Ljoeq/UTF/Utf8;Ljava/lang/String;I)Ljoeq/Class/jq_Primitive;#Return(Ljava/lang/Object;)#6
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalStore(Ljava/lang/Object;,2)#114
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Goto(161)#115
joeq.Class.jq_Reference.<clinit>()V#Put(Ljoeq/Class/jq_InstanceField;,STATIC,Ljoeq/Class/jq_Reference;,_state)#14
joeq.Class.jq_Reference.<clinit>()V#Return(V)#15
joeq.Class.jq_Class.<clinit>()V#Constant(I,0)#0
joeq.Class.jq_Class.<clinit>()V#Put(Z,STATIC,Ljoeq/Class/jq_Class;,TRACE)#1
joeq.Class.jq_Class.<clinit>()V#Constant(I,0)#2
joeq.Class.jq_Class.<clinit>()V#Put(Z,STATIC,Ljoeq/Class/jq_Class;,WARN_STALE_CLASS_FILES)#3
joeq.Class.jq_Class.<clinit>()V#Constant(I,0)#4
joeq.Class.jq_Class.<clinit>()V#Put(Z,STATIC,Ljoeq/Class/jq_Class;,REPLACE_CLASS)#5
joeq.Class.jq_Class.<clinit>()V#Constant(I,0)#6
joeq.Class.jq_Class.<clinit>()V#Put(Z,STATIC,Ljoeq/Class/jq_Class;,TRACE_REPLACE_CLASS)#7
joeq.Class.jq_Class.<clinit>()V#New(Ljava/util/LinkedList;,0)#8
joeq.Class.jq_Class.<clinit>()V#Dup(1,0)#9
joeq.Class.jq_Class.<clinit>()V#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#10
joeq.Class.jq_Class.<clinit>()V#Put(Ljava/util/List;,STATIC,Ljoeq/Class/jq_Class;,classToReplace)#11
joeq.Class.jq_Class.<clinit>()V#New(Ljoeq/Class/jq_Class$1;,0)#12
joeq.Class.jq_Class.<clinit>()V#Dup(1,0)#13
joeq.Class.jq_Class.<clinit>()V#Invoke(SPECIAL,Ljoeq/Class/jq_Class$1;,<init>,()V)#14
joeq.Class.jq_Class$1.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class$1.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Class.jq_Class$1.<init>()V#Return(V)#2
joeq.Class.jq_Class.<clinit>()V#Put(Ljava/util/Comparator;,STATIC,Ljoeq/Class/jq_Class;,comparator)#15
joeq.Class.jq_Class.<clinit>()V#Constant(I,0)#16
joeq.Class.jq_Class.<clinit>()V#Put(I,STATIC,Ljoeq/Class/jq_Class;,NumOfIFieldsKept)#17
joeq.Class.jq_Class.<clinit>()V#Constant(I,0)#18
joeq.Class.jq_Class.<clinit>()V#Put(I,STATIC,Ljoeq/Class/jq_Class;,NumOfSFieldsKept)#19
joeq.Class.jq_Class.<clinit>()V#Constant(I,0)#20
joeq.Class.jq_Class.<clinit>()V#Put(I,STATIC,Ljoeq/Class/jq_Class;,NumOfIMethodsKept)#21
joeq.Class.jq_Class.<clinit>()V#Constant(I,0)#22
joeq.Class.jq_Class.<clinit>()V#Put(I,STATIC,Ljoeq/Class/jq_Class;,NumOfSMethodsKept)#23
joeq.Class.jq_Class.<clinit>()V#Constant(I,0)#24
joeq.Class.jq_Class.<clinit>()V#Put(I,STATIC,Ljoeq/Class/jq_Class;,NumOfIFieldsEliminated)#25
joeq.Class.jq_Class.<clinit>()V#Constant(I,0)#26
joeq.Class.jq_Class.<clinit>()V#Put(I,STATIC,Ljoeq/Class/jq_Class;,NumOfSFieldsEliminated)#27
joeq.Class.jq_Class.<clinit>()V#Constant(I,0)#28
joeq.Class.jq_Class.<clinit>()V#Put(I,STATIC,Ljoeq/Class/jq_Class;,NumOfIMethodsEliminated)#29
joeq.Class.jq_Class.<clinit>()V#Constant(I,0)#30
joeq.Class.jq_Class.<clinit>()V#Put(I,STATIC,Ljoeq/Class/jq_Class;,NumOfSMethodsEliminated)#31
joeq.Class.jq_Class.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#32
joeq.Class.jq_Class.<clinit>()V#Constant(Ljava/lang/String;,"Ljoeq/Class/jq_Class;")#33
joeq.Class.jq_Class.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#34
joeq.Class.jq_Class.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#35
joeq.Class.jq_Class.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/jq_Class;,_class)#36
joeq.Class.jq_Class.<clinit>()V#Constant(L;,null)#37
joeq.Class.jq_Class.<clinit>()V#Put(Ljoeq/Class/jq_Class$Delegate;,STATIC,Ljoeq/Class/jq_Class;,_delegate)#38
joeq.Class.jq_Class.<clinit>()V#Get(Z,STATIC,Ljoeq/Main/jq;,nullVM)#39
joeq.Class.jq_Class.<clinit>()V#LocalStore(I,0)#40
joeq.Class.jq_Class.<clinit>()V#LocalLoad(I,0)#41
joeq.Class.jq_Class.<clinit>()V#Constant(I,0)#42
joeq.Class.jq_Class.<clinit>()V#ConditionalBranch(I,ne,47)#43
joeq.Class.jq_Class.<clinit>()V#Get(Ljoeq/Class/jq_Class$Delegate;,STATIC,Ljoeq/Class/jq_Class;,_delegate)#47
joeq.Class.jq_Class.<clinit>()V#Constant(L;,null)#48
joeq.Class.jq_Class.<clinit>()V#ConditionalBranch(Ljava/lang/Object;,ne,54)#49
joeq.Class.jq_Class.<clinit>()V#New(Ljoeq/Class/NullDelegates$Klass;,0)#50
joeq.Class.jq_Class.<clinit>()V#Dup(1,0)#51
joeq.Class.jq_Class.<clinit>()V#Invoke(SPECIAL,Ljoeq/Class/NullDelegates$Klass;,<init>,()V)#52
joeq.Class.NullDelegates$Klass.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.NullDelegates$Klass.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Class.NullDelegates$Klass.<init>()V#Return(V)#2
joeq.Class.jq_Class.<clinit>()V#Put(Ljoeq/Class/jq_Class$Delegate;,STATIC,Ljoeq/Class/jq_Class;,_delegate)#53
joeq.Class.jq_Class.<clinit>()V#New(Ljava/util/HashMap;,0)#54
joeq.Class.jq_Class.<clinit>()V#Dup(1,0)#55
joeq.Class.jq_Class.<clinit>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#56
joeq.Class.jq_Class.<clinit>()V#Put(Ljava/util/HashMap;,STATIC,Ljoeq/Class/jq_Class;,stringConstants)#57
joeq.Class.jq_Class.<clinit>()V#Return(V)#58
joeq.Class.jq_Type.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#3
joeq.Class.jq_Type.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/jq_Type;,_class)#4
joeq.Class.jq_Type.<clinit>()V#Return(V)#5
joeq.Class.jq_Primitive.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#0
joeq.Class.jq_Primitive.<clinit>()V#Get(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,BYTE_DESC)#1
joeq.Class.jq_Primitive.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;)#2
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,1)#74
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Constant(Ljava/lang/String;,"byte")#75
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Constant(I,1)#76
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Invoke(STATIC,Ljoeq/Class/jq_Primitive;,newPrimitive,(Ljoeq/UTF/Utf8;Ljava/lang/String;I)Ljoeq/Class/jq_Primitive;)#77
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Get(Ljava/lang/Class;,STATIC,Ljava/lang/Byte;,TYPE)#11
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Return(Ljava/lang/Object;)#12
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalStore(Ljava/lang/Object;,2)#78
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Goto(161)#79
joeq.Class.jq_Primitive.<clinit>()V#CheckCast(Ljoeq/Class/jq_Primitive;)#3
joeq.Class.jq_Primitive.<clinit>()V#Put(Ljoeq/Class/jq_Primitive;,STATIC,Ljoeq/Class/jq_Primitive;,BYTE)#4
joeq.Class.jq_Primitive.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#5
joeq.Class.jq_Primitive.<clinit>()V#Get(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,CHAR_DESC)#6
joeq.Class.jq_Primitive.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;)#7
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,1)#83
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Constant(Ljava/lang/String;,"char")#84
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Constant(I,2)#85
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Invoke(STATIC,Ljoeq/Class/jq_Primitive;,newPrimitive,(Ljoeq/UTF/Utf8;Ljava/lang/String;I)Ljoeq/Class/jq_Primitive;)#86
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Get(Ljava/lang/Class;,STATIC,Ljava/lang/Character;,TYPE)#17
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Return(Ljava/lang/Object;)#18
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalStore(Ljava/lang/Object;,2)#87
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Goto(161)#88
joeq.Class.jq_Primitive.<clinit>()V#CheckCast(Ljoeq/Class/jq_Primitive;)#8
joeq.Class.jq_Primitive.<clinit>()V#Put(Ljoeq/Class/jq_Primitive;,STATIC,Ljoeq/Class/jq_Primitive;,CHAR)#9
joeq.Class.jq_Primitive.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#10
joeq.Class.jq_Primitive.<clinit>()V#Get(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,DOUBLE_DESC)#11
joeq.Class.jq_Primitive.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;)#12
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,1)#92
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Constant(Ljava/lang/String;,"double")#93
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Constant(I,8)#94
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Invoke(STATIC,Ljoeq/Class/jq_Primitive;,newPrimitive,(Ljoeq/UTF/Utf8;Ljava/lang/String;I)Ljoeq/Class/jq_Primitive;)#95
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Get(Ljava/lang/Class;,STATIC,Ljava/lang/Double;,TYPE)#23
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Return(Ljava/lang/Object;)#24
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalStore(Ljava/lang/Object;,2)#96
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Goto(161)#97
joeq.Class.jq_Primitive.<clinit>()V#CheckCast(Ljoeq/Class/jq_Primitive;)#13
joeq.Class.jq_Primitive.<clinit>()V#Put(Ljoeq/Class/jq_Primitive;,STATIC,Ljoeq/Class/jq_Primitive;,DOUBLE)#14
joeq.Class.jq_Primitive.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#15
joeq.Class.jq_Primitive.<clinit>()V#Get(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,FLOAT_DESC)#16
joeq.Class.jq_Primitive.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;)#17
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,1)#101
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Constant(Ljava/lang/String;,"float")#102
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Constant(I,4)#103
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Invoke(STATIC,Ljoeq/Class/jq_Primitive;,newPrimitive,(Ljoeq/UTF/Utf8;Ljava/lang/String;I)Ljoeq/Class/jq_Primitive;)#104
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Get(Ljava/lang/Class;,STATIC,Ljava/lang/Float;,TYPE)#29
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Return(Ljava/lang/Object;)#30
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalStore(Ljava/lang/Object;,2)#105
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Goto(161)#106
joeq.Class.jq_Primitive.<clinit>()V#CheckCast(Ljoeq/Class/jq_Primitive;)#18
joeq.Class.jq_Primitive.<clinit>()V#Put(Ljoeq/Class/jq_Primitive;,STATIC,Ljoeq/Class/jq_Primitive;,FLOAT)#19
joeq.Class.jq_Primitive.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#20
joeq.Class.jq_Primitive.<clinit>()V#Get(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,INT_DESC)#21
joeq.Class.jq_Primitive.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;)#22
joeq.Class.jq_Primitive.<clinit>()V#CheckCast(Ljoeq/Class/jq_Primitive;)#23
joeq.Class.jq_Primitive.<clinit>()V#Put(Ljoeq/Class/jq_Primitive;,STATIC,Ljoeq/Class/jq_Primitive;,INT)#24
joeq.Class.jq_Primitive.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#25
joeq.Class.jq_Primitive.<clinit>()V#Get(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,LONG_DESC)#26
joeq.Class.jq_Primitive.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;)#27
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,1)#116
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Get(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,LONG_DESC)#117
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#ConditionalBranch(Ljava/lang/Object;,ne,125)#118
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,1)#119
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Constant(Ljava/lang/String;,"long")#120
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Constant(I,8)#121
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Invoke(STATIC,Ljoeq/Class/jq_Primitive;,newPrimitive,(Ljoeq/UTF/Utf8;Ljava/lang/String;I)Ljoeq/Class/jq_Primitive;)#122
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#LocalLoad(Ljava/lang/Object;,1)#37
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Invoke(VIRTUAL,Ljoeq/Class/jq_Primitive;,getDesc,()Ljoeq/UTF/Utf8;)#38
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Get(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,LONG_DESC)#39
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#ConditionalBranch(Ljava/lang/Object;,ne,43)#40
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Get(Ljava/lang/Class;,STATIC,Ljava/lang/Long;,TYPE)#41
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Return(Ljava/lang/Object;)#42
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalStore(Ljava/lang/Object;,2)#123
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Goto(161)#124
joeq.Class.jq_Primitive.<clinit>()V#CheckCast(Ljoeq/Class/jq_Primitive;)#28
joeq.Class.jq_Primitive.<clinit>()V#Put(Ljoeq/Class/jq_Primitive;,STATIC,Ljoeq/Class/jq_Primitive;,LONG)#29
joeq.Class.jq_Primitive.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#30
joeq.Class.jq_Primitive.<clinit>()V#Get(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,SHORT_DESC)#31
joeq.Class.jq_Primitive.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;)#32
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,1)#125
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Get(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,SHORT_DESC)#126
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#ConditionalBranch(Ljava/lang/Object;,ne,134)#127
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,1)#128
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Constant(Ljava/lang/String;,"short")#129
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Constant(I,2)#130
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Invoke(STATIC,Ljoeq/Class/jq_Primitive;,newPrimitive,(Ljoeq/UTF/Utf8;Ljava/lang/String;I)Ljoeq/Class/jq_Primitive;)#131
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#LocalLoad(Ljava/lang/Object;,1)#43
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Invoke(VIRTUAL,Ljoeq/Class/jq_Primitive;,getDesc,()Ljoeq/UTF/Utf8;)#44
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Get(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,SHORT_DESC)#45
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#ConditionalBranch(Ljava/lang/Object;,ne,49)#46
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Get(Ljava/lang/Class;,STATIC,Ljava/lang/Short;,TYPE)#47
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Return(Ljava/lang/Object;)#48
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalStore(Ljava/lang/Object;,2)#132
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Goto(161)#133
joeq.Class.jq_Primitive.<clinit>()V#CheckCast(Ljoeq/Class/jq_Primitive;)#33
joeq.Class.jq_Primitive.<clinit>()V#Put(Ljoeq/Class/jq_Primitive;,STATIC,Ljoeq/Class/jq_Primitive;,SHORT)#34
joeq.Class.jq_Primitive.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#35
joeq.Class.jq_Primitive.<clinit>()V#Get(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,BOOLEAN_DESC)#36
joeq.Class.jq_Primitive.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;)#37
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,1)#134
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Get(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,BOOLEAN_DESC)#135
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#ConditionalBranch(Ljava/lang/Object;,ne,143)#136
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,1)#137
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Constant(Ljava/lang/String;,"boolean")#138
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Constant(I,1)#139
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Invoke(STATIC,Ljoeq/Class/jq_Primitive;,newPrimitive,(Ljoeq/UTF/Utf8;Ljava/lang/String;I)Ljoeq/Class/jq_Primitive;)#140
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#LocalLoad(Ljava/lang/Object;,1)#49
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Invoke(VIRTUAL,Ljoeq/Class/jq_Primitive;,getDesc,()Ljoeq/UTF/Utf8;)#50
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Get(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,BOOLEAN_DESC)#51
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#ConditionalBranch(Ljava/lang/Object;,ne,55)#52
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Get(Ljava/lang/Class;,STATIC,Ljava/lang/Boolean;,TYPE)#53
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Return(Ljava/lang/Object;)#54
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalStore(Ljava/lang/Object;,2)#141
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Goto(161)#142
joeq.Class.jq_Primitive.<clinit>()V#CheckCast(Ljoeq/Class/jq_Primitive;)#38
joeq.Class.jq_Primitive.<clinit>()V#Put(Ljoeq/Class/jq_Primitive;,STATIC,Ljoeq/Class/jq_Primitive;,BOOLEAN)#39
joeq.Class.jq_Primitive.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#40
joeq.Class.jq_Primitive.<clinit>()V#Get(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,VOID_DESC)#41
joeq.Class.jq_Primitive.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;)#42
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,1)#143
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Get(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,VOID_DESC)#144
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#ConditionalBranch(Ljava/lang/Object;,ne,152)#145
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,1)#146
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Constant(Ljava/lang/String;,"void")#147
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Constant(I,0)#148
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Invoke(STATIC,Ljoeq/Class/jq_Primitive;,newPrimitive,(Ljoeq/UTF/Utf8;Ljava/lang/String;I)Ljoeq/Class/jq_Primitive;)#149
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#LocalLoad(Ljava/lang/Object;,1)#55
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Invoke(VIRTUAL,Ljoeq/Class/jq_Primitive;,getDesc,()Ljoeq/UTF/Utf8;)#56
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Get(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,VOID_DESC)#57
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#ConditionalBranch(Ljava/lang/Object;,ne,61)#58
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Get(Ljava/lang/Class;,STATIC,Ljava/lang/Void;,TYPE)#59
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Primitive;)Ljava/lang/Class;#Return(Ljava/lang/Object;)#60
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalStore(Ljava/lang/Object;,2)#150
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Goto(161)#151
joeq.Class.jq_Primitive.<clinit>()V#CheckCast(Ljoeq/Class/jq_Primitive;)#43
joeq.Class.jq_Primitive.<clinit>()V#Put(Ljoeq/Class/jq_Primitive;,STATIC,Ljoeq/Class/jq_Primitive;,VOID)#44
joeq.Class.jq_Primitive.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#45
joeq.Class.jq_Primitive.<clinit>()V#Constant(Ljava/lang/String;,"Ljoeq/Class/jq_Primitive;")#46
joeq.Class.jq_Primitive.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#47
joeq.Class.jq_Primitive.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#48
joeq.Class.jq_Primitive.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/jq_Primitive;,_class)#49
joeq.Class.jq_Primitive.<clinit>()V#Return(V)#50
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Primitive;,getDesc,()Ljoeq/UTF/Utf8;)#2
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;)#3
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Pop(1)#4
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#5
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Get(Ljoeq/Class/jq_Array;,STATIC,Ljoeq/Class/jq_Array;,BYTE_ARRAY)#6
joeq.Class.jq_Array.<clinit>()V#Constant(I,0)#0
joeq.Class.jq_Array.<clinit>()V#Put(Z,STATIC,Ljoeq/Class/jq_Array;,TRACE)#1
joeq.Class.jq_Array.<clinit>()V#Constant(I,2)#2
joeq.Class.jq_Array.<clinit>()V#New([Ljoeq/Class/jq_Class;,1)#3
joeq.Class.jq_Array.<clinit>()V#Dup(1,0)#4
joeq.Class.jq_Array.<clinit>()V#Constant(I,0)#5
joeq.Class.jq_Array.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#6
joeq.Class.jq_Array.<clinit>()V#Constant(Ljava/lang/String;,"Ljava/lang/Cloneable;")#7
joeq.Class.jq_Array.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#8
joeq.Class.jq_Array.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#9
joeq.Class.jq_Array.<clinit>()V#ArrayStore(Ljava/lang/Object;)#10
joeq.Class.jq_Array.<clinit>()V#Dup(1,0)#11
joeq.Class.jq_Array.<clinit>()V#Constant(I,1)#12
joeq.Class.jq_Array.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#13
joeq.Class.jq_Array.<clinit>()V#Constant(Ljava/lang/String;,"Ljava/io/Serializable;")#14
joeq.Class.jq_Array.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#15
joeq.Class.jq_Array.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#16
joeq.Class.jq_Array.<clinit>()V#ArrayStore(Ljava/lang/Object;)#17
joeq.Class.jq_Array.<clinit>()V#Put([Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/jq_Array;,array_interfaces)#18
joeq.Class.jq_Array.<clinit>()V#New(Ljoeq/Class/jq_Array;,0)#19
joeq.Class.jq_Array.<clinit>()V#Dup(1,0)#20
joeq.Class.jq_Array.<clinit>()V#Constant(Ljava/lang/String;,"[B")#21
joeq.Class.jq_Array.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#22
joeq.Class.jq_Array.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#23
joeq.Class.jq_Array.<clinit>()V#Get(Ljoeq/Class/jq_Primitive;,STATIC,Ljoeq/Class/jq_Primitive;,BYTE)#24
joeq.Class.jq_Array.<clinit>()V#Invoke(SPECIAL,Ljoeq/Class/jq_Array;,<init>,(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)V)#25
joeq.Class.jq_Array.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Array.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Class.jq_Array.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,2)#2
joeq.Class.jq_Array.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)V#Invoke(SPECIAL,Ljoeq/Class/jq_Reference;,<init>,(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;)V)#3
joeq.Class.jq_Array.getJDKName()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Array.getJDKName()Ljava/lang/String;#Get(Ljoeq/UTF/Utf8;,NONSTATIC,Ljoeq/Class/jq_Array;,desc)#1
joeq.Class.jq_Array.getJDKName()Ljava/lang/String;#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,toString,()Ljava/lang/String;)#2
joeq.Class.jq_Array.getJDKName()Ljava/lang/String;#Constant(I,47)#3
joeq.Class.jq_Array.getJDKName()Ljava/lang/String;#Constant(I,46)#4
joeq.Class.jq_Array.getJDKName()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,replace,(CC)Ljava/lang/String;)#5
joeq.Class.jq_Array.getJDKName()Ljava/lang/String;#Return(Ljava/lang/Object;)#6
joeq.Class.jq_Array.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,1)#4
joeq.Class.jq_Array.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)V#Constant(I,91)#5
joeq.Class.jq_Array.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)V#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,isDescriptor,(B)Z)#6
joeq.Class.jq_Array.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)V#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#7
joeq.Class.jq_Array.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,3)#8
joeq.Class.jq_Array.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)V#Constant(L;,null)#9
joeq.Class.jq_Array.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)V#ConditionalBranch(Ljava/lang/Object;,eq,13)#10
joeq.Class.jq_Array.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)V#Constant(I,1)#11
joeq.Class.jq_Array.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)V#Goto(14)#12
joeq.Class.jq_Array.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)V#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#14
joeq.Class.jq_Array.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,0)#15
joeq.Class.jq_Array.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,3)#16
joeq.Class.jq_Array.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)V#Put(Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_Array;,element_type)#17
joeq.Class.jq_Array.<init>(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)V#Return(V)#18
joeq.Class.jq_Array.<clinit>()V#Put(Ljoeq/Class/jq_Array;,STATIC,Ljoeq/Class/jq_Array;,BYTE_ARRAY)#26
joeq.Class.jq_Array.<clinit>()V#New(Ljoeq/Class/jq_Array;,0)#27
joeq.Class.jq_Array.<clinit>()V#Dup(1,0)#28
joeq.Class.jq_Array.<clinit>()V#Constant(Ljava/lang/String;,"[C")#29
joeq.Class.jq_Array.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#30
joeq.Class.jq_Array.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#31
joeq.Class.jq_Array.<clinit>()V#Get(Ljoeq/Class/jq_Primitive;,STATIC,Ljoeq/Class/jq_Primitive;,CHAR)#32
joeq.Class.jq_Array.<clinit>()V#Invoke(SPECIAL,Ljoeq/Class/jq_Array;,<init>,(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)V)#33
joeq.Class.jq_Array.<clinit>()V#Put(Ljoeq/Class/jq_Array;,STATIC,Ljoeq/Class/jq_Array;,CHAR_ARRAY)#34
joeq.Class.jq_Array.<clinit>()V#New(Ljoeq/Class/jq_Array;,0)#35
joeq.Class.jq_Array.<clinit>()V#Dup(1,0)#36
joeq.Class.jq_Array.<clinit>()V#Constant(Ljava/lang/String;,"[D")#37
joeq.Class.jq_Array.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#38
joeq.Class.jq_Array.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#39
joeq.Class.jq_Array.<clinit>()V#Get(Ljoeq/Class/jq_Primitive;,STATIC,Ljoeq/Class/jq_Primitive;,DOUBLE)#40
joeq.Class.jq_Array.<clinit>()V#Invoke(SPECIAL,Ljoeq/Class/jq_Array;,<init>,(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)V)#41
joeq.Class.jq_Array.<clinit>()V#Put(Ljoeq/Class/jq_Array;,STATIC,Ljoeq/Class/jq_Array;,DOUBLE_ARRAY)#42
joeq.Class.jq_Array.<clinit>()V#New(Ljoeq/Class/jq_Array;,0)#43
joeq.Class.jq_Array.<clinit>()V#Dup(1,0)#44
joeq.Class.jq_Array.<clinit>()V#Constant(Ljava/lang/String;,"[F")#45
joeq.Class.jq_Array.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#46
joeq.Class.jq_Array.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#47
joeq.Class.jq_Array.<clinit>()V#Get(Ljoeq/Class/jq_Primitive;,STATIC,Ljoeq/Class/jq_Primitive;,FLOAT)#48
joeq.Class.jq_Array.<clinit>()V#Invoke(SPECIAL,Ljoeq/Class/jq_Array;,<init>,(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)V)#49
joeq.Class.jq_Array.<clinit>()V#Put(Ljoeq/Class/jq_Array;,STATIC,Ljoeq/Class/jq_Array;,FLOAT_ARRAY)#50
joeq.Class.jq_Array.<clinit>()V#New(Ljoeq/Class/jq_Array;,0)#51
joeq.Class.jq_Array.<clinit>()V#Dup(1,0)#52
joeq.Class.jq_Array.<clinit>()V#Constant(Ljava/lang/String;,"[I")#53
joeq.Class.jq_Array.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#54
joeq.Class.jq_Array.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#55
joeq.Class.jq_Array.<clinit>()V#Get(Ljoeq/Class/jq_Primitive;,STATIC,Ljoeq/Class/jq_Primitive;,INT)#56
joeq.Class.jq_Array.<clinit>()V#Invoke(SPECIAL,Ljoeq/Class/jq_Array;,<init>,(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)V)#57
joeq.Class.jq_Array.<clinit>()V#Put(Ljoeq/Class/jq_Array;,STATIC,Ljoeq/Class/jq_Array;,INT_ARRAY)#58
joeq.Class.jq_Array.<clinit>()V#New(Ljoeq/Class/jq_Array;,0)#59
joeq.Class.jq_Array.<clinit>()V#Dup(1,0)#60
joeq.Class.jq_Array.<clinit>()V#Constant(Ljava/lang/String;,"[J")#61
joeq.Class.jq_Array.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#62
joeq.Class.jq_Array.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#63
joeq.Class.jq_Array.<clinit>()V#Get(Ljoeq/Class/jq_Primitive;,STATIC,Ljoeq/Class/jq_Primitive;,LONG)#64
joeq.Class.jq_Array.<clinit>()V#Invoke(SPECIAL,Ljoeq/Class/jq_Array;,<init>,(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)V)#65
joeq.Class.jq_Array.<clinit>()V#Put(Ljoeq/Class/jq_Array;,STATIC,Ljoeq/Class/jq_Array;,LONG_ARRAY)#66
joeq.Class.jq_Array.<clinit>()V#New(Ljoeq/Class/jq_Array;,0)#67
joeq.Class.jq_Array.<clinit>()V#Dup(1,0)#68
joeq.Class.jq_Array.<clinit>()V#Constant(Ljava/lang/String;,"[S")#69
joeq.Class.jq_Array.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#70
joeq.Class.jq_Array.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#71
joeq.Class.jq_Array.<clinit>()V#Get(Ljoeq/Class/jq_Primitive;,STATIC,Ljoeq/Class/jq_Primitive;,SHORT)#72
joeq.Class.jq_Array.<clinit>()V#Invoke(SPECIAL,Ljoeq/Class/jq_Array;,<init>,(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)V)#73
joeq.Class.jq_Array.<clinit>()V#Put(Ljoeq/Class/jq_Array;,STATIC,Ljoeq/Class/jq_Array;,SHORT_ARRAY)#74
joeq.Class.jq_Array.<clinit>()V#New(Ljoeq/Class/jq_Array;,0)#75
joeq.Class.jq_Array.<clinit>()V#Dup(1,0)#76
joeq.Class.jq_Array.<clinit>()V#Constant(Ljava/lang/String;,"[Z")#77
joeq.Class.jq_Array.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#78
joeq.Class.jq_Array.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#79
joeq.Class.jq_Array.<clinit>()V#Get(Ljoeq/Class/jq_Primitive;,STATIC,Ljoeq/Class/jq_Primitive;,BOOLEAN)#80
joeq.Class.jq_Array.<clinit>()V#Invoke(SPECIAL,Ljoeq/Class/jq_Array;,<init>,(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)V)#81
joeq.Class.jq_Array.<clinit>()V#Put(Ljoeq/Class/jq_Array;,STATIC,Ljoeq/Class/jq_Array;,BOOLEAN_ARRAY)#82
joeq.Class.jq_Array.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#83
joeq.Class.jq_Array.<clinit>()V#Constant(Ljava/lang/String;,"[Ljava/lang/Object;")#84
joeq.Class.jq_Array.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#85
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Get(Z,STATIC,Ljoeq/Class/PrimordialClassLoader;,TRACE)#45
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Constant(I,0)#46
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#ConditionalBranch(I,eq,58)#47
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,1)#58
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,getArrayElementDescriptor,()Ljoeq/UTF/Utf8;)#59
joeq.UTF.Utf8.getArrayElementDescriptor()Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.UTF.Utf8.getArrayElementDescriptor()Ljoeq/UTF/Utf8;#Constant(I,91)#1
joeq.UTF.Utf8.getArrayElementDescriptor()Ljoeq/UTF/Utf8;#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,isDescriptor,(B)Z)#2
joeq.UTF.Utf8.getArrayElementDescriptor()Ljoeq/UTF/Utf8;#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#3
joeq.UTF.Utf8.getArrayElementDescriptor()Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#4
joeq.UTF.Utf8.getArrayElementDescriptor()Ljoeq/UTF/Utf8;#Get([B,NONSTATIC,Ljoeq/UTF/Utf8;,data)#5
joeq.UTF.Utf8.getArrayElementDescriptor()Ljoeq/UTF/Utf8;#Constant(I,1)#6
joeq.UTF.Utf8.getArrayElementDescriptor()Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#7
joeq.UTF.Utf8.getArrayElementDescriptor()Ljoeq/UTF/Utf8;#Get([B,NONSTATIC,Ljoeq/UTF/Utf8;,data)#8
joeq.UTF.Utf8.getArrayElementDescriptor()Ljoeq/UTF/Utf8;#ArrayLength()#9
joeq.UTF.Utf8.getArrayElementDescriptor()Ljoeq/UTF/Utf8;#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,([BII)Ljoeq/UTF/Utf8;)#10
joeq.UTF.Utf8.get([BII)Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.UTF.Utf8.get([BII)Ljoeq/UTF/Utf8;#LocalLoad(I,1)#1
joeq.UTF.Utf8.get([BII)Ljoeq/UTF/Utf8;#LocalLoad(I,2)#2
joeq.UTF.Utf8.get([BII)Ljoeq/UTF/Utf8;#Invoke(STATIC,Ljoeq/UTF/Utf8;,getID,([BII)I)#3
joeq.UTF.Utf8.getID([BII)I#LocalLoad(Ljava/lang/Object;,0)#0
joeq.UTF.Utf8.getID([BII)I#LocalLoad(I,1)#1
joeq.UTF.Utf8.getID([BII)I#LocalLoad(I,2)#2
joeq.UTF.Utf8.getID([BII)I#Invoke(STATIC,Ljoeq/UTF/Utf8;,hashCode,([BII)I)#3
joeq.UTF.Utf8.hashCode([BII)I#Constant(I,4999)#0
joeq.UTF.Utf8.hashCode([BII)I#LocalStore(I,3)#1
joeq.UTF.Utf8.hashCode([BII)I#LocalLoad(I,2)#2
joeq.UTF.Utf8.hashCode([BII)I#LocalStore(I,4)#3
joeq.UTF.Utf8.hashCode([BII)I#LocalLoad(I,4)#4
joeq.UTF.Utf8.hashCode([BII)I#Constant(I,-1)#5
joeq.UTF.Utf8.hashCode([BII)I#BinaryOp(I,add)#6
joeq.UTF.Utf8.hashCode([BII)I#LocalStore(I,4)#7
joeq.UTF.Utf8.hashCode([BII)I#LocalLoad(I,4)#8
joeq.UTF.Utf8.hashCode([BII)I#LocalLoad(I,1)#9
joeq.UTF.Utf8.hashCode([BII)I#ConditionalBranch(I,lt,20)#10
joeq.UTF.Utf8.hashCode([BII)I#Constant(I,2999)#11
joeq.UTF.Utf8.hashCode([BII)I#LocalLoad(I,3)#12
joeq.UTF.Utf8.hashCode([BII)I#BinaryOp(I,mul)#13
joeq.UTF.Utf8.hashCode([BII)I#LocalLoad(Ljava/lang/Object;,0)#14
joeq.UTF.Utf8.hashCode([BII)I#LocalLoad(I,4)#15
joeq.UTF.Utf8.hashCode([BII)I#ArrayLoad(B)#16
joeq.UTF.Utf8.hashCode([BII)I#BinaryOp(I,add)#17
joeq.UTF.Utf8.hashCode([BII)I#LocalStore(I,3)#18
joeq.UTF.Utf8.hashCode([BII)I#Goto(4)#19
joeq.UTF.Utf8.hashCode([BII)I#LocalLoad(I,3)#20
joeq.UTF.Utf8.hashCode([BII)I#Return(I)#21
joeq.UTF.Utf8.getID([BII)I#LocalStore(I,3)#4
joeq.UTF.Utf8.getID([BII)I#LocalLoad(I,3)#5
joeq.UTF.Utf8.getID([BII)I#Invoke(STATIC,Ljava/lang/Math;,abs,(I)I)#6
joeq.UTF.Utf8.getID([BII)I#Get([[I,STATIC,Ljoeq/UTF/Utf8;,chains)#7
joeq.UTF.Utf8.getID([BII)I#ArrayLength()#8
joeq.UTF.Utf8.getID([BII)I#BinaryOp(I,rem)#9
joeq.UTF.Utf8.getID([BII)I#LocalStore(I,4)#10
joeq.UTF.Utf8.getID([BII)I#Get([[I,STATIC,Ljoeq/UTF/Utf8;,chains)#11
joeq.UTF.Utf8.getID([BII)I#LocalLoad(I,4)#12
joeq.UTF.Utf8.getID([BII)I#ArrayLoad(Ljava/lang/Object;)#13
joeq.UTF.Utf8.getID([BII)I#LocalStore(Ljava/lang/Object;,5)#14
joeq.UTF.Utf8.getID([BII)I#LocalLoad(Ljava/lang/Object;,5)#15
joeq.UTF.Utf8.getID([BII)I#Constant(L;,null)#16
joeq.UTF.Utf8.getID([BII)I#ConditionalBranch(Ljava/lang/Object;,ne,44)#17
joeq.UTF.Utf8.getID([BII)I#Constant(I,0)#44
joeq.UTF.Utf8.getID([BII)I#LocalStore(I,6)#45
joeq.UTF.Utf8.getID([BII)I#LocalLoad(I,6)#46
joeq.UTF.Utf8.getID([BII)I#LocalLoad(Ljava/lang/Object;,5)#47
joeq.UTF.Utf8.getID([BII)I#ArrayLength()#48
joeq.UTF.Utf8.getID([BII)I#ConditionalBranch(I,ge,97)#49
joeq.UTF.Utf8.getID([BII)I#LocalLoad(Ljava/lang/Object;,5)#50
joeq.UTF.Utf8.getID([BII)I#LocalLoad(I,6)#51
joeq.UTF.Utf8.getID([BII)I#ArrayLoad(I)#52
joeq.UTF.Utf8.getID([BII)I#Constant(I,1)#53
joeq.UTF.Utf8.getID([BII)I#BinaryOp(I,sub)#54
joeq.UTF.Utf8.getID([BII)I#LocalStore(I,7)#55
joeq.UTF.Utf8.getID([BII)I#LocalLoad(I,7)#56
joeq.UTF.Utf8.getID([BII)I#Constant(I,-1)#57
joeq.UTF.Utf8.getID([BII)I#ConditionalBranch(I,ne,78)#58
joeq.UTF.Utf8.getID([BII)I#Get([Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,table)#78
joeq.UTF.Utf8.getID([BII)I#LocalLoad(I,7)#79
joeq.UTF.Utf8.getID([BII)I#ArrayLoad(Ljava/lang/Object;)#80
joeq.UTF.Utf8.getID([BII)I#LocalStore(Ljava/lang/Object;,8)#81
joeq.UTF.Utf8.getID([BII)I#LocalLoad(Ljava/lang/Object;,8)#82
joeq.UTF.Utf8.getID([BII)I#Get([B,NONSTATIC,Ljoeq/UTF/Utf8;,data)#83
joeq.UTF.Utf8.getID([BII)I#LocalLoad(Ljava/lang/Object;,0)#84
joeq.UTF.Utf8.getID([BII)I#LocalLoad(I,1)#85
joeq.UTF.Utf8.getID([BII)I#LocalLoad(I,2)#86
joeq.UTF.Utf8.getID([BII)I#Invoke(STATIC,Ljoeq/UTF/Utf8;,memcmp,([B[BII)Z)#87
joeq.UTF.Utf8.memcmp([B[BII)Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.UTF.Utf8.memcmp([B[BII)Z#ArrayLength()#1
joeq.UTF.Utf8.memcmp([B[BII)Z#LocalLoad(I,3)#2
joeq.UTF.Utf8.memcmp([B[BII)Z#LocalLoad(I,2)#3
joeq.UTF.Utf8.memcmp([B[BII)Z#BinaryOp(I,sub)#4
joeq.UTF.Utf8.memcmp([B[BII)Z#ConditionalBranch(I,eq,8)#5
joeq.UTF.Utf8.memcmp([B[BII)Z#LocalLoad(Ljava/lang/Object;,0)#8
joeq.UTF.Utf8.memcmp([B[BII)Z#ArrayLength()#9
joeq.UTF.Utf8.memcmp([B[BII)Z#LocalStore(I,4)#10
joeq.UTF.Utf8.memcmp([B[BII)Z#LocalLoad(I,4)#11
joeq.UTF.Utf8.memcmp([B[BII)Z#Constant(I,-1)#12
joeq.UTF.Utf8.memcmp([B[BII)Z#BinaryOp(I,add)#13
joeq.UTF.Utf8.memcmp([B[BII)Z#LocalStore(I,4)#14
joeq.UTF.Utf8.memcmp([B[BII)Z#LocalLoad(I,4)#15
joeq.UTF.Utf8.memcmp([B[BII)Z#Constant(I,0)#16
joeq.UTF.Utf8.memcmp([B[BII)Z#ConditionalBranch(I,lt,29)#17
joeq.UTF.Utf8.memcmp([B[BII)Z#LocalLoad(Ljava/lang/Object;,0)#18
joeq.UTF.Utf8.memcmp([B[BII)Z#LocalLoad(I,4)#19
joeq.UTF.Utf8.memcmp([B[BII)Z#ArrayLoad(B)#20
joeq.UTF.Utf8.memcmp([B[BII)Z#LocalLoad(Ljava/lang/Object;,1)#21
joeq.UTF.Utf8.memcmp([B[BII)Z#LocalLoad(I,4)#22
joeq.UTF.Utf8.memcmp([B[BII)Z#LocalLoad(I,2)#23
joeq.UTF.Utf8.memcmp([B[BII)Z#BinaryOp(I,add)#24
joeq.UTF.Utf8.memcmp([B[BII)Z#ArrayLoad(B)#25
joeq.UTF.Utf8.memcmp([B[BII)Z#ConditionalBranch(I,eq,11)#26
joeq.UTF.Utf8.memcmp([B[BII)Z#Constant(I,1)#29
joeq.UTF.Utf8.memcmp([B[BII)Z#Return(I)#30
joeq.UTF.Utf8.getID([BII)I#Constant(I,0)#88
joeq.UTF.Utf8.getID([BII)I#ConditionalBranch(I,eq,92)#89
joeq.UTF.Utf8.getID([BII)I#LocalLoad(I,7)#90
joeq.UTF.Utf8.getID([BII)I#Return(I)#91
joeq.UTF.Utf8.get([BII)Ljoeq/UTF/Utf8;#LocalStore(I,3)#4
joeq.UTF.Utf8.get([BII)Ljoeq/UTF/Utf8;#Get([Ljoeq/UTF/Utf8;,STATIC,Ljoeq/UTF/Utf8;,table)#5
joeq.UTF.Utf8.get([BII)Ljoeq/UTF/Utf8;#LocalLoad(I,3)#6
joeq.UTF.Utf8.get([BII)Ljoeq/UTF/Utf8;#ArrayLoad(Ljava/lang/Object;)#7
joeq.UTF.Utf8.get([BII)Ljoeq/UTF/Utf8;#Return(Ljava/lang/Object;)#8
joeq.UTF.Utf8.getArrayElementDescriptor()Ljoeq/UTF/Utf8;#Return(Ljava/lang/Object;)#11
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalStore(Ljava/lang/Object;,3)#60
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#61
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,3)#62
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;)#63
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalStore(Ljava/lang/Object;,4)#64
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,1)#65
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#66
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,4)#67
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Invoke(STATIC,Ljoeq/Class/jq_Array;,newArray,(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)Ljoeq/Class/jq_Array;)#68
joeq.Class.jq_Array.newArray(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)Ljoeq/Class/jq_Array;#New(Ljoeq/Class/jq_Array;,0)#0
joeq.Class.jq_Array.newArray(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)Ljoeq/Class/jq_Array;#Dup(1,0)#1
joeq.Class.jq_Array.newArray(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)Ljoeq/Class/jq_Array;#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Class.jq_Array.newArray(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)Ljoeq/Class/jq_Array;#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Class.jq_Array.newArray(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)Ljoeq/Class/jq_Array;#LocalLoad(Ljava/lang/Object;,2)#4
joeq.Class.jq_Array.newArray(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)Ljoeq/Class/jq_Array;#Invoke(SPECIAL,Ljoeq/Class/jq_Array;,<init>,(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)V)#5
joeq.Class.jq_Array.newArray(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;Ljoeq/Class/jq_Type;)Ljoeq/Class/jq_Array;#Return(Ljava/lang/Object;)#6
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#LocalStore(Ljava/lang/Object;,2)#69
joeq.Class.PrimordialClassLoader.getOrCreateBSType(Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;#Goto(161)#70
joeq.Class.jq_Array.<clinit>()V#CheckCast(Ljoeq/Class/jq_Array;)#86
joeq.Class.jq_Array.<clinit>()V#Put(Ljoeq/Class/jq_Array;,STATIC,Ljoeq/Class/jq_Array;,OBJECT_ARRAY)#87
joeq.Class.jq_Array.<clinit>()V#Get([Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/jq_Array;,array_interfaces)#88
joeq.Class.jq_Array.<clinit>()V#Put([Ljoeq/Class/jq_Reference;,STATIC,Ljoeq/Class/jq_Array;,s_s_array_cache)#89
joeq.Class.jq_Array.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#90
joeq.Class.jq_Array.<clinit>()V#Constant(Ljava/lang/String;,"Ljoeq/Class/jq_Array;")#91
joeq.Class.jq_Array.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#92
joeq.Class.jq_Array.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#93
joeq.Class.jq_Array.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/jq_Array;,_class)#94
joeq.Class.jq_Array.<clinit>()V#Constant(L;,null)#95
joeq.Class.jq_Array.<clinit>()V#Put(Ljoeq/Class/jq_Array$Delegate;,STATIC,Ljoeq/Class/jq_Array;,_delegate)#96
joeq.Class.jq_Array.<clinit>()V#Get(Z,STATIC,Ljoeq/Main/jq;,nullVM)#97
joeq.Class.jq_Array.<clinit>()V#LocalStore(I,0)#98
joeq.Class.jq_Array.<clinit>()V#LocalLoad(I,0)#99
joeq.Class.jq_Array.<clinit>()V#Constant(I,0)#100
joeq.Class.jq_Array.<clinit>()V#ConditionalBranch(I,ne,105)#101
joeq.Class.jq_Array.<clinit>()V#Get(Ljoeq/Class/jq_Array$Delegate;,STATIC,Ljoeq/Class/jq_Array;,_delegate)#105
joeq.Class.jq_Array.<clinit>()V#Constant(L;,null)#106
joeq.Class.jq_Array.<clinit>()V#ConditionalBranch(Ljava/lang/Object;,ne,112)#107
joeq.Class.jq_Array.<clinit>()V#New(Ljoeq/Class/NullDelegates$Array;,0)#108
joeq.Class.jq_Array.<clinit>()V#Dup(1,0)#109
joeq.Class.jq_Array.<clinit>()V#Invoke(SPECIAL,Ljoeq/Class/NullDelegates$Array;,<init>,()V)#110
joeq.Class.NullDelegates$Array.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.NullDelegates$Array.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Class.NullDelegates$Array.<init>()V#Return(V)#2
joeq.Class.jq_Array.<clinit>()V#Put(Ljoeq/Class/jq_Array$Delegate;,STATIC,Ljoeq/Class/jq_Array;,_delegate)#111
joeq.Class.jq_Array.<clinit>()V#Return(V)#112
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Array;,getDesc,()Ljoeq/UTF/Utf8;)#7
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Get(Ljoeq/Class/jq_Array;,STATIC,Ljoeq/Class/jq_Array;,BYTE_ARRAY)#8
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Invoke(SPECIAL,Ljoeq/Class/PrimordialClassLoader;,put_desc2type,(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V)#9
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#10
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Get(Ljoeq/Class/jq_Array;,STATIC,Ljoeq/Class/jq_Array;,CHAR_ARRAY)#11
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Array;,getDesc,()Ljoeq/UTF/Utf8;)#12
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Get(Ljoeq/Class/jq_Array;,STATIC,Ljoeq/Class/jq_Array;,CHAR_ARRAY)#13
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Invoke(SPECIAL,Ljoeq/Class/PrimordialClassLoader;,put_desc2type,(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V)#14
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#15
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Get(Ljoeq/Class/jq_Array;,STATIC,Ljoeq/Class/jq_Array;,DOUBLE_ARRAY)#16
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Array;,getDesc,()Ljoeq/UTF/Utf8;)#17
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Get(Ljoeq/Class/jq_Array;,STATIC,Ljoeq/Class/jq_Array;,DOUBLE_ARRAY)#18
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Invoke(SPECIAL,Ljoeq/Class/PrimordialClassLoader;,put_desc2type,(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V)#19
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#20
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Get(Ljoeq/Class/jq_Array;,STATIC,Ljoeq/Class/jq_Array;,FLOAT_ARRAY)#21
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Array;,getDesc,()Ljoeq/UTF/Utf8;)#22
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Get(Ljoeq/Class/jq_Array;,STATIC,Ljoeq/Class/jq_Array;,FLOAT_ARRAY)#23
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Invoke(SPECIAL,Ljoeq/Class/PrimordialClassLoader;,put_desc2type,(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V)#24
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#25
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Get(Ljoeq/Class/jq_Array;,STATIC,Ljoeq/Class/jq_Array;,INT_ARRAY)#26
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Array;,getDesc,()Ljoeq/UTF/Utf8;)#27
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Get(Ljoeq/Class/jq_Array;,STATIC,Ljoeq/Class/jq_Array;,INT_ARRAY)#28
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Invoke(SPECIAL,Ljoeq/Class/PrimordialClassLoader;,put_desc2type,(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V)#29
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#30
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Get(Ljoeq/Class/jq_Array;,STATIC,Ljoeq/Class/jq_Array;,LONG_ARRAY)#31
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Array;,getDesc,()Ljoeq/UTF/Utf8;)#32
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Get(Ljoeq/Class/jq_Array;,STATIC,Ljoeq/Class/jq_Array;,LONG_ARRAY)#33
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Invoke(SPECIAL,Ljoeq/Class/PrimordialClassLoader;,put_desc2type,(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V)#34
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#35
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Get(Ljoeq/Class/jq_Array;,STATIC,Ljoeq/Class/jq_Array;,SHORT_ARRAY)#36
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Array;,getDesc,()Ljoeq/UTF/Utf8;)#37
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Get(Ljoeq/Class/jq_Array;,STATIC,Ljoeq/Class/jq_Array;,SHORT_ARRAY)#38
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Invoke(SPECIAL,Ljoeq/Class/PrimordialClassLoader;,put_desc2type,(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V)#39
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#40
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Get(Ljoeq/Class/jq_Array;,STATIC,Ljoeq/Class/jq_Array;,BOOLEAN_ARRAY)#41
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Array;,getDesc,()Ljoeq/UTF/Utf8;)#42
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Get(Ljoeq/Class/jq_Array;,STATIC,Ljoeq/Class/jq_Array;,BOOLEAN_ARRAY)#43
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Invoke(SPECIAL,Ljoeq/Class/PrimordialClassLoader;,put_desc2type,(Ljoeq/UTF/Utf8;Ljoeq/Class/jq_Type;)V)#44
joeq.Class.PrimordialClassLoader.initPrimitiveTypes()V#Return(V)#45
joeq.Class.PrimordialClassLoader.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#7
joeq.Class.PrimordialClassLoader.<clinit>()V#Constant(Ljava/lang/String;,"Ljava/lang/Object;")#8
joeq.Class.PrimordialClassLoader.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#9
joeq.Class.PrimordialClassLoader.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#10
joeq.Class.PrimordialClassLoader.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/PrimordialClassLoader;,JavaLangObject)#11
joeq.Class.PrimordialClassLoader.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#12
joeq.Class.PrimordialClassLoader.<clinit>()V#Constant(Ljava/lang/String;,"Ljava/lang/Class;")#13
joeq.Class.PrimordialClassLoader.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#14
joeq.Class.PrimordialClassLoader.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#15
joeq.Class.PrimordialClassLoader.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/PrimordialClassLoader;,JavaLangClass)#16
joeq.Class.PrimordialClassLoader.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#17
joeq.Class.PrimordialClassLoader.<clinit>()V#Constant(Ljava/lang/String;,"Ljava/lang/String;")#18
joeq.Class.PrimordialClassLoader.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#19
joeq.Class.PrimordialClassLoader.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#20
joeq.Class.PrimordialClassLoader.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/PrimordialClassLoader;,JavaLangString)#21
joeq.Class.PrimordialClassLoader.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#22
joeq.Class.PrimordialClassLoader.<clinit>()V#Constant(Ljava/lang/String;,"Ljava/lang/System;")#23
joeq.Class.PrimordialClassLoader.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#24
joeq.Class.PrimordialClassLoader.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#25
joeq.Class.PrimordialClassLoader.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/PrimordialClassLoader;,JavaLangSystem)#26
joeq.Class.PrimordialClassLoader.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#27
joeq.Class.PrimordialClassLoader.<clinit>()V#Constant(Ljava/lang/String;,"Ljava/lang/Throwable;")#28
joeq.Class.PrimordialClassLoader.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#29
joeq.Class.PrimordialClassLoader.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#30
joeq.Class.PrimordialClassLoader.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/PrimordialClassLoader;,JavaLangThrowable)#31
joeq.Class.PrimordialClassLoader.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#32
joeq.Class.PrimordialClassLoader.<clinit>()V#Constant(Ljava/lang/String;,"[Ljoeq/Memory/Address;")#33
joeq.Class.PrimordialClassLoader.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#34
joeq.UTF.Utf8.getID([BII)I#Get([[I,STATIC,Ljoeq/UTF/Utf8;,chains)#18
joeq.UTF.Utf8.getID([BII)I#LocalLoad(I,4)#19
joeq.UTF.Utf8.getID([BII)I#Constant(I,4)#20
joeq.UTF.Utf8.getID([BII)I#New([I,1)#21
joeq.UTF.Utf8.getID([BII)I#Dup(1,0)#22
joeq.UTF.Utf8.getID([BII)I#LocalStore(Ljava/lang/Object;,5)#23
joeq.UTF.Utf8.getID([BII)I#ArrayStore(Ljava/lang/Object;)#24
joeq.UTF.Utf8.getID([BII)I#LocalLoad(I,2)#25
joeq.UTF.Utf8.getID([BII)I#LocalLoad(I,1)#26
joeq.UTF.Utf8.getID([BII)I#BinaryOp(I,sub)#27
joeq.UTF.Utf8.getID([BII)I#New([B,1)#28
joeq.UTF.Utf8.getID([BII)I#LocalStore(Ljava/lang/Object;,6)#29
joeq.UTF.Utf8.getID([BII)I#LocalLoad(Ljava/lang/Object;,0)#30
joeq.UTF.Utf8.getID([BII)I#LocalLoad(I,1)#31
joeq.UTF.Utf8.getID([BII)I#LocalLoad(Ljava/lang/Object;,6)#32
joeq.UTF.Utf8.getID([BII)I#Constant(I,0)#33
joeq.UTF.Utf8.getID([BII)I#LocalLoad(I,2)#34
joeq.UTF.Utf8.getID([BII)I#LocalLoad(I,1)#35
joeq.UTF.Utf8.getID([BII)I#BinaryOp(I,sub)#36
joeq.UTF.Utf8.getID([BII)I#Invoke(STATIC,Ljava/lang/System;,arraycopy,(Ljava/lang/Object;ILjava/lang/Object;II)V)#37
joeq.UTF.Utf8.getID([BII)I#LocalLoad(Ljava/lang/Object;,6)#38
joeq.UTF.Utf8.getID([BII)I#LocalLoad(I,3)#39
joeq.UTF.Utf8.getID([BII)I#LocalLoad(Ljava/lang/Object;,5)#40
joeq.UTF.Utf8.getID([BII)I#Constant(I,0)#41
joeq.UTF.Utf8.getID([BII)I#Invoke(STATIC,Ljoeq/UTF/Utf8;,addToTable_helper,([BI[II)I)#42
joeq.UTF.Utf8.getID([BII)I#Return(I)#43
joeq.Class.PrimordialClassLoader.<clinit>()V#CheckCast(Ljoeq/Class/jq_Array;)#35
joeq.Class.PrimordialClassLoader.<clinit>()V#Put(Ljoeq/Class/jq_Array;,STATIC,Ljoeq/Class/PrimordialClassLoader;,AddressArray)#36
joeq.Class.PrimordialClassLoader.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#37
joeq.Class.PrimordialClassLoader.<clinit>()V#Constant(Ljava/lang/String;,"Ljava/lang/Exception;")#38
joeq.Class.PrimordialClassLoader.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#39
joeq.Class.PrimordialClassLoader.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#40
joeq.Class.PrimordialClassLoader.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/PrimordialClassLoader;,JavaLangException)#41
joeq.Class.PrimordialClassLoader.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#42
joeq.Class.PrimordialClassLoader.<clinit>()V#Constant(Ljava/lang/String;,"Ljava/lang/ArrayStoreException;")#43
joeq.Class.PrimordialClassLoader.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#44
joeq.Class.PrimordialClassLoader.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#45
joeq.Class.PrimordialClassLoader.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/PrimordialClassLoader;,JavaLangArrayStoreException)#46
joeq.Class.PrimordialClassLoader.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#47
joeq.Class.PrimordialClassLoader.<clinit>()V#Constant(Ljava/lang/String;,"Ljava/lang/Error;")#48
joeq.Class.PrimordialClassLoader.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#49
joeq.Class.PrimordialClassLoader.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#50
joeq.Class.PrimordialClassLoader.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/PrimordialClassLoader;,JavaLangError)#51
joeq.Class.PrimordialClassLoader.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#52
joeq.Class.PrimordialClassLoader.<clinit>()V#Constant(Ljava/lang/String;,"Ljava/lang/RuntimeException;")#53
joeq.Class.PrimordialClassLoader.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#54
joeq.Class.PrimordialClassLoader.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#55
joeq.Class.PrimordialClassLoader.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/PrimordialClassLoader;,JavaLangRuntimeException)#56
joeq.Class.PrimordialClassLoader.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#57
joeq.Class.PrimordialClassLoader.<clinit>()V#Constant(Ljava/lang/String;,"Ljava/lang/NullPointerException;")#58
joeq.Class.PrimordialClassLoader.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#59
joeq.Class.PrimordialClassLoader.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#60
joeq.Class.PrimordialClassLoader.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/PrimordialClassLoader;,JavaLangNullPointerException)#61
joeq.Class.PrimordialClassLoader.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#62
joeq.Class.PrimordialClassLoader.<clinit>()V#Constant(Ljava/lang/String;,"Ljava/lang/IndexOutOfBoundsException;")#63
joeq.Class.PrimordialClassLoader.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#64
joeq.Class.PrimordialClassLoader.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#65
joeq.Class.PrimordialClassLoader.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/PrimordialClassLoader;,JavaLangIndexOutOfBoundsException)#66
joeq.Class.PrimordialClassLoader.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#67
joeq.Class.PrimordialClassLoader.<clinit>()V#Constant(Ljava/lang/String;,"Ljava/lang/ArrayIndexOutOfBoundsException;")#68
joeq.Class.PrimordialClassLoader.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#69
joeq.Class.PrimordialClassLoader.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#70
joeq.Class.PrimordialClassLoader.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/PrimordialClassLoader;,JavaLangArrayIndexOutOfBoundsException)#71
joeq.Class.PrimordialClassLoader.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#72
joeq.Class.PrimordialClassLoader.<clinit>()V#Constant(Ljava/lang/String;,"Ljava/lang/NegativeArraySizeException;")#73
joeq.Class.PrimordialClassLoader.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#74
joeq.Class.PrimordialClassLoader.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#75
joeq.Class.PrimordialClassLoader.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/PrimordialClassLoader;,JavaLangNegativeArraySizeException)#76
joeq.Class.PrimordialClassLoader.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#77
joeq.Class.PrimordialClassLoader.<clinit>()V#Constant(Ljava/lang/String;,"Ljava/lang/ArithmeticException;")#78
joeq.Class.PrimordialClassLoader.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#79
joeq.Class.PrimordialClassLoader.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#80
joeq.Class.PrimordialClassLoader.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/PrimordialClassLoader;,JavaLangArithmeticException)#81
joeq.Class.PrimordialClassLoader.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#82
joeq.Class.PrimordialClassLoader.<clinit>()V#Constant(Ljava/lang/String;,"Ljava/lang/IllegalMonitorStateException;")#83
joeq.Class.PrimordialClassLoader.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#84
joeq.Class.PrimordialClassLoader.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#85
joeq.Class.PrimordialClassLoader.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/PrimordialClassLoader;,JavaLangIllegalMonitorStateException)#86
joeq.Class.PrimordialClassLoader.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#87
joeq.Class.PrimordialClassLoader.<clinit>()V#Constant(Ljava/lang/String;,"Ljava/lang/ClassCastException;")#88
joeq.Class.PrimordialClassLoader.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#89
joeq.Class.PrimordialClassLoader.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#90
joeq.Class.PrimordialClassLoader.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/PrimordialClassLoader;,JavaLangClassCastException)#91
joeq.Class.PrimordialClassLoader.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#92
joeq.Class.PrimordialClassLoader.<clinit>()V#Constant(Ljava/lang/String;,"Ljava/lang/ClassLoader;")#93
joeq.Class.PrimordialClassLoader.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#94
joeq.Class.PrimordialClassLoader.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#95
joeq.Class.PrimordialClassLoader.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/PrimordialClassLoader;,JavaLangClassLoader)#96
joeq.Class.PrimordialClassLoader.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#97
joeq.Class.PrimordialClassLoader.<clinit>()V#Constant(Ljava/lang/String;,"Ljava/lang/reflect/Field;")#98
joeq.Class.PrimordialClassLoader.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#99
joeq.Class.PrimordialClassLoader.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#100
joeq.Class.PrimordialClassLoader.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/PrimordialClassLoader;,JavaLangReflectField)#101
joeq.Class.PrimordialClassLoader.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#102
joeq.Class.PrimordialClassLoader.<clinit>()V#Constant(Ljava/lang/String;,"Ljava/lang/reflect/Method;")#103
joeq.Class.PrimordialClassLoader.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#104
joeq.Class.PrimordialClassLoader.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#105
joeq.Class.PrimordialClassLoader.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/PrimordialClassLoader;,JavaLangReflectMethod)#106
joeq.Class.PrimordialClassLoader.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#107
joeq.Class.PrimordialClassLoader.<clinit>()V#Constant(Ljava/lang/String;,"Ljava/lang/reflect/Constructor;")#108
joeq.Class.PrimordialClassLoader.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#109
joeq.Class.PrimordialClassLoader.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#110
joeq.Class.PrimordialClassLoader.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/PrimordialClassLoader;,JavaLangReflectConstructor)#111
joeq.Class.PrimordialClassLoader.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#112
joeq.Class.PrimordialClassLoader.<clinit>()V#Constant(Ljava/lang/String;,"Ljava/lang/Thread;")#113
joeq.Class.PrimordialClassLoader.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#114
joeq.Class.PrimordialClassLoader.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#115
joeq.Class.PrimordialClassLoader.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/PrimordialClassLoader;,JavaLangThread)#116
joeq.Class.PrimordialClassLoader.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#117
joeq.Class.PrimordialClassLoader.<clinit>()V#Constant(Ljava/lang/String;,"Ljava/lang/ref/Finalizer;")#118
joeq.Class.PrimordialClassLoader.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#119
joeq.Class.PrimordialClassLoader.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#120
joeq.Class.PrimordialClassLoader.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/PrimordialClassLoader;,JavaLangRefFinalizer)#121
joeq.Class.PrimordialClassLoader.<clinit>()V#Return(V)#122
joeq.Class.jq_Member.<clinit>()V#Constant(Ljava/lang/String;,"Ljoeq/Class/jq_Member;")#1
joeq.Class.jq_Member.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#2
joeq.Class.jq_Member.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#3
joeq.Class.jq_Member.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/jq_Member;,_class)#4
joeq.Class.jq_Member.<clinit>()V#Get(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/jq_Member;,_class)#5
joeq.Class.jq_Member.<clinit>()V#Constant(Ljava/lang/String;,"state")#6
joeq.Class.jq_Member.<clinit>()V#Constant(Ljava/lang/String;,"B")#7
joeq.Class.jq_Member.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getOrCreateInstanceField,(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_InstanceField;)#8
joeq.Class.jq_Member.<clinit>()V#Put(Ljoeq/Class/jq_InstanceField;,STATIC,Ljoeq/Class/jq_Member;,_state)#9
joeq.Class.jq_Member.<clinit>()V#Return(V)#10
joeq.Class.jq_Method.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@85c9d66a)#0
joeq.Class.jq_Method.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
joeq.Class.jq_Method.<clinit>()V#Constant(I,0)#2
joeq.Class.jq_Method.<clinit>()V#ConditionalBranch(I,ne,6)#3
joeq.Class.jq_Method.<clinit>()V#Constant(I,0)#6
joeq.Class.jq_Method.<clinit>()V#Put(Z,STATIC,Ljoeq/Class/jq_Method;,$assertionsDisabled)#7
joeq.Class.jq_Method.<clinit>()V#Constant(I,0)#8
joeq.Class.jq_Method.<clinit>()V#Put(Z,STATIC,Ljoeq/Class/jq_Method;,doSSA)#9
joeq.Class.jq_Method.<clinit>()V#Constant(I,0)#10
joeq.Class.jq_Method.<clinit>()V#New([Ljava/lang/String;,1)#11
joeq.Class.jq_Method.<clinit>()V#Put([Ljava/lang/String;,STATIC,Ljoeq/Class/jq_Method;,scopeExcludedPrefixes)#12
joeq.Class.jq_Method.<clinit>()V#Get(Ljava/util/Map;,STATIC,Ljava/util/Collections;,EMPTY_MAP)#13
joeq.Class.jq_Method.<clinit>()V#Put(Ljava/util/Map;,STATIC,Ljoeq/Class/jq_Method;,nativeCFGBuildersMap)#14
joeq.Class.jq_Method.<clinit>()V#Constant(I,-1)#15
joeq.Class.jq_Method.<clinit>()V#Put(I,STATIC,Ljoeq/Class/jq_Method;,maxVars)#16
joeq.Class.jq_Method.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#17
joeq.Class.jq_Method.<clinit>()V#Constant(Ljava/lang/String;,"Ljoeq/Class/jq_Method;")#18
joeq.Class.jq_Method.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#19
joeq.Class.jq_Method.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#20
joeq.Class.jq_Method.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/jq_Method;,_class)#21
joeq.Class.jq_Method.<clinit>()V#Get(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/jq_Method;,_class)#22
joeq.Class.jq_Method.<clinit>()V#Constant(Ljava/lang/String;,"compile")#23
joeq.Class.jq_Method.<clinit>()V#Constant(Ljava/lang/String;,"()Ljoeq/Class/jq_CompiledCode;")#24
joeq.Class.jq_Method.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getOrCreateInstanceMethod,(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_InstanceMethod;)#25
joeq.Class.jq_Class.getOrCreateInstanceMethod(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.getOrCreateInstanceMethod(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_InstanceMethod;#New(Ljoeq/Class/jq_NameAndDesc;,0)#1
joeq.Class.jq_Class.getOrCreateInstanceMethod(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_InstanceMethod;#Dup(1,0)#2
joeq.Class.jq_Class.getOrCreateInstanceMethod(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Class.jq_Class.getOrCreateInstanceMethod(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_InstanceMethod;#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#4
joeq.Class.jq_Class.getOrCreateInstanceMethod(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,2)#5
joeq.Class.jq_Class.getOrCreateInstanceMethod(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_InstanceMethod;#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#6
joeq.Class.jq_Class.getOrCreateInstanceMethod(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_InstanceMethod;#Invoke(SPECIAL,Ljoeq/Class/jq_NameAndDesc;,<init>,(Ljoeq/UTF/Utf8;Ljoeq/UTF/Utf8;)V)#7
joeq.Class.jq_Class.getOrCreateInstanceMethod(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_InstanceMethod;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getOrCreateInstanceMethod,(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;)#8
joeq.Class.jq_Class.getOrCreateInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.getOrCreateInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Class.jq_Class.getOrCreateInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getDeclaredMember,(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;)#2
joeq.Class.jq_Class.getOrCreateInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#CheckCast(Ljoeq/Class/jq_InstanceMethod;)#3
joeq.Class.jq_Class.getOrCreateInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#LocalStore(Ljava/lang/Object;,2)#4
joeq.Class.jq_Class.getOrCreateInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,2)#5
joeq.Class.jq_Class.getOrCreateInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#Constant(L;,null)#6
joeq.Class.jq_Class.getOrCreateInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#ConditionalBranch(Ljava/lang/Object;,eq,10)#7
joeq.Class.jq_Class.getOrCreateInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,0)#10
joeq.Class.jq_Class.getOrCreateInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,1)#11
joeq.Class.jq_Class.getOrCreateInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,createInstanceMethod,(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;)#12
joeq.Class.jq_Class.createInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.createInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Class.jq_Class.createInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getDeclaredMember,(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;)#2
joeq.Class.jq_Class.createInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#Constant(L;,null)#3
joeq.Class.jq_Class.createInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#ConditionalBranch(Ljava/lang/Object;,ne,7)#4
joeq.Class.jq_Class.createInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#Constant(I,1)#5
joeq.Class.jq_Class.createInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#Goto(8)#6
joeq.Class.jq_Class.createInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#8
joeq.Class.jq_Class.createInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,1)#9
joeq.Class.jq_Class.createInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#Invoke(VIRTUAL,Ljoeq/Class/jq_NameAndDesc;,getName,()Ljoeq/UTF/Utf8;)#10
joeq.Class.jq_NameAndDesc.getName()Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_NameAndDesc.getName()Ljoeq/UTF/Utf8;#Get(Ljoeq/UTF/Utf8;,NONSTATIC,Ljoeq/Class/jq_NameAndDesc;,name)#1
joeq.Class.jq_NameAndDesc.getName()Ljoeq/UTF/Utf8;#Return(Ljava/lang/Object;)#2
joeq.Class.jq_Class.createInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#Constant(Ljava/lang/String;,"<init>")#11
joeq.Class.jq_Class.createInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#12
joeq.Class.jq_Class.createInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#ConditionalBranch(Ljava/lang/Object;,ne,19)#13
joeq.Class.jq_Class.createInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,0)#19
joeq.Class.jq_Class.createInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,1)#20
joeq.Class.jq_Class.createInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#Invoke(STATIC,Ljoeq/Class/jq_InstanceMethod;,newInstanceMethod,(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;)#21
joeq.Class.jq_InstanceMethod.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#0
joeq.Class.jq_InstanceMethod.<clinit>()V#Constant(Ljava/lang/String;,"Ljoeq/Class/jq_InstanceMethod;")#1
joeq.Class.jq_InstanceMethod.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#2
joeq.Class.jq_InstanceMethod.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#3
joeq.Class.jq_InstanceMethod.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/jq_InstanceMethod;,_class)#4
joeq.Class.jq_InstanceMethod.<clinit>()V#Return(V)#5
joeq.Class.jq_InstanceMethod.newInstanceMethod(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#New(Ljoeq/Class/jq_InstanceMethod;,0)#0
joeq.Class.jq_InstanceMethod.newInstanceMethod(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#Dup(1,0)#1
joeq.Class.jq_InstanceMethod.newInstanceMethod(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Class.jq_InstanceMethod.newInstanceMethod(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Class.jq_InstanceMethod.newInstanceMethod(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#Invoke(SPECIAL,Ljoeq/Class/jq_InstanceMethod;,<init>,(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V)#4
joeq.Class.jq_InstanceMethod.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_InstanceMethod.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Class.jq_InstanceMethod.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,2)#2
joeq.Class.jq_InstanceMethod.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Invoke(SPECIAL,Ljoeq/Class/jq_Method;,<init>,(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V)#3
joeq.Class.jq_Method.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Method.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Class.jq_Method.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,2)#2
joeq.Class.jq_Method.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Invoke(SPECIAL,Ljoeq/Class/jq_Member;,<init>,(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V)#3
joeq.Class.jq_Method.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,0)#4
joeq.Class.jq_Method.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Constant(L;,null)#5
joeq.Class.jq_Method.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Put(Ljava/util/Map;,NONSTATIC,Ljoeq/Class/jq_Method;,varToLineNumsMap)#6
joeq.Class.jq_Method.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,0)#7
joeq.Class.jq_Method.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Constant(L;,null)#8
joeq.Class.jq_Method.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Put(Ljava/util/Map;,NONSTATIC,Ljoeq/Class/jq_Method;,varToRegNameMap)#9
joeq.Class.jq_Method.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,0)#10
joeq.Class.jq_Method.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,parseMethodSignature,()V)#11
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Get(Ljoeq/Class/jq_NameAndDesc;,NONSTATIC,Ljoeq/Class/jq_InstanceMethod;,nd)#1
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Invoke(VIRTUAL,Ljoeq/Class/jq_NameAndDesc;,getDesc,()Ljoeq/UTF/Utf8;)#2
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,getParamDescriptors,()Ljoeq/UTF/Utf8$MethodDescriptorIterator;)#3
joeq.UTF.Utf8.getParamDescriptors()Ljoeq/UTF/Utf8$MethodDescriptorIterator;#New(Ljoeq/UTF/Utf8$MethodDescriptorIterator;,0)#0
joeq.UTF.Utf8.getParamDescriptors()Ljoeq/UTF/Utf8$MethodDescriptorIterator;#Dup(1,0)#1
joeq.UTF.Utf8.getParamDescriptors()Ljoeq/UTF/Utf8$MethodDescriptorIterator;#LocalLoad(Ljava/lang/Object;,0)#2
joeq.UTF.Utf8.getParamDescriptors()Ljoeq/UTF/Utf8$MethodDescriptorIterator;#Invoke(SPECIAL,Ljoeq/UTF/Utf8$MethodDescriptorIterator;,<init>,(Ljoeq/UTF/Utf8;)V)#3
joeq.UTF.Utf8$MethodDescriptorIterator.<init>(Ljoeq/UTF/Utf8;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.UTF.Utf8$MethodDescriptorIterator.<init>(Ljoeq/UTF/Utf8;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.UTF.Utf8$MethodDescriptorIterator.<init>(Ljoeq/UTF/Utf8;)V#Put(Ljoeq/UTF/Utf8;,NONSTATIC,Ljoeq/UTF/Utf8$MethodDescriptorIterator;,this$0)#2
joeq.UTF.Utf8$MethodDescriptorIterator.<init>(Ljoeq/UTF/Utf8;)V#LocalLoad(Ljava/lang/Object;,0)#3
joeq.UTF.Utf8$MethodDescriptorIterator.<init>(Ljoeq/UTF/Utf8;)V#Invoke(SPECIAL,Ljwutil/collections/UnmodifiableIterator;,<init>,()V)#4
jwutil.collections.UnmodifiableIterator.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.collections.UnmodifiableIterator.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
jwutil.collections.UnmodifiableIterator.<init>()V#Return(V)#2
joeq.UTF.Utf8$MethodDescriptorIterator.<init>(Ljoeq/UTF/Utf8;)V#LocalLoad(Ljava/lang/Object;,1)#5
joeq.UTF.Utf8$MethodDescriptorIterator.<init>(Ljoeq/UTF/Utf8;)V#Constant(I,40)#6
joeq.UTF.Utf8$MethodDescriptorIterator.<init>(Ljoeq/UTF/Utf8;)V#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,isDescriptor,(B)Z)#7
joeq.UTF.Utf8$MethodDescriptorIterator.<init>(Ljoeq/UTF/Utf8;)V#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#8
joeq.UTF.Utf8$MethodDescriptorIterator.<init>(Ljoeq/UTF/Utf8;)V#LocalLoad(Ljava/lang/Object;,0)#9
joeq.UTF.Utf8$MethodDescriptorIterator.<init>(Ljoeq/UTF/Utf8;)V#Constant(I,0)#10
joeq.UTF.Utf8$MethodDescriptorIterator.<init>(Ljoeq/UTF/Utf8;)V#Put(I,NONSTATIC,Ljoeq/UTF/Utf8$MethodDescriptorIterator;,currentIndex)#11
joeq.UTF.Utf8$MethodDescriptorIterator.<init>(Ljoeq/UTF/Utf8;)V#Return(V)#12
joeq.UTF.Utf8.getParamDescriptors()Ljoeq/UTF/Utf8$MethodDescriptorIterator;#Return(Ljava/lang/Object;)#4
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalStore(Ljava/lang/Object;,1)#4
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Constant(I,1)#5
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalStore(I,2)#6
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Constant(I,1)#7
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalStore(I,3)#8
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,1)#9
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Invoke(VIRTUAL,Ljoeq/UTF/Utf8$MethodDescriptorIterator;,hasNext,()Z)#10
joeq.UTF.Utf8$MethodDescriptorIterator.hasNext()Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.UTF.Utf8$MethodDescriptorIterator.hasNext()Z#Get(Ljoeq/UTF/Utf8;,NONSTATIC,Ljoeq/UTF/Utf8$MethodDescriptorIterator;,this$0)#1
joeq.UTF.Utf8$MethodDescriptorIterator.hasNext()Z#Invoke(STATIC,Ljoeq/UTF/Utf8;,access$000,(Ljoeq/UTF/Utf8;)[B)#2
joeq.UTF.Utf8.access$000(Ljoeq/UTF/Utf8;)[B#LocalLoad(Ljava/lang/Object;,0)#0
joeq.UTF.Utf8.access$000(Ljoeq/UTF/Utf8;)[B#Get([B,NONSTATIC,Ljoeq/UTF/Utf8;,data)#1
joeq.UTF.Utf8.access$000(Ljoeq/UTF/Utf8;)[B#Return(Ljava/lang/Object;)#2
joeq.UTF.Utf8$MethodDescriptorIterator.hasNext()Z#LocalLoad(Ljava/lang/Object;,0)#3
joeq.UTF.Utf8$MethodDescriptorIterator.hasNext()Z#Get(I,NONSTATIC,Ljoeq/UTF/Utf8$MethodDescriptorIterator;,currentIndex)#4
joeq.UTF.Utf8$MethodDescriptorIterator.hasNext()Z#Constant(I,1)#5
joeq.UTF.Utf8$MethodDescriptorIterator.hasNext()Z#BinaryOp(I,add)#6
joeq.UTF.Utf8$MethodDescriptorIterator.hasNext()Z#ArrayLoad(B)#7
joeq.UTF.Utf8$MethodDescriptorIterator.hasNext()Z#Constant(I,41)#8
joeq.UTF.Utf8$MethodDescriptorIterator.hasNext()Z#ConditionalBranch(I,eq,12)#9
joeq.UTF.Utf8$MethodDescriptorIterator.hasNext()Z#Constant(I,0)#12
joeq.UTF.Utf8$MethodDescriptorIterator.hasNext()Z#Return(I)#13
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Constant(I,0)#11
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#ConditionalBranch(I,eq,21)#12
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#21
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalLoad(I,2)#22
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#New([Ljoeq/Class/jq_Type;,1)#23
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Put([Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_InstanceMethod;,param_types)#24
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#25
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Get([Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_InstanceMethod;,param_types)#26
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Constant(I,0)#27
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#28
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_InstanceMethod;,clazz)#29
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#ArrayStore(Ljava/lang/Object;)#30
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#31
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Get(Ljoeq/Class/jq_NameAndDesc;,NONSTATIC,Ljoeq/Class/jq_InstanceMethod;,nd)#32
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Invoke(VIRTUAL,Ljoeq/Class/jq_NameAndDesc;,getDesc,()Ljoeq/UTF/Utf8;)#33
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,getParamDescriptors,()Ljoeq/UTF/Utf8$MethodDescriptorIterator;)#34
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalStore(Ljava/lang/Object;,1)#35
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Constant(I,1)#36
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalStore(I,4)#37
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalLoad(I,4)#38
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalLoad(I,2)#39
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#ConditionalBranch(I,ge,78)#40
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#78
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalLoad(I,3)#79
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Put(I,NONSTATIC,Ljoeq/Class/jq_InstanceMethod;,param_words)#80
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,1)#81
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Invoke(VIRTUAL,Ljoeq/UTF/Utf8$MethodDescriptorIterator;,getReturnDescriptor,()Ljoeq/UTF/Utf8;)#82
joeq.UTF.Utf8$MethodDescriptorIterator.getReturnDescriptor()Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.UTF.Utf8$MethodDescriptorIterator.getReturnDescriptor()Ljoeq/UTF/Utf8;#Invoke(VIRTUAL,Ljoeq/UTF/Utf8$MethodDescriptorIterator;,hasNext,()Z)#1
joeq.UTF.Utf8$MethodDescriptorIterator.getReturnDescriptor()Ljoeq/UTF/Utf8;#Constant(I,0)#2
joeq.UTF.Utf8$MethodDescriptorIterator.getReturnDescriptor()Ljoeq/UTF/Utf8;#ConditionalBranch(I,ne,6)#3
joeq.UTF.Utf8$MethodDescriptorIterator.getReturnDescriptor()Ljoeq/UTF/Utf8;#Constant(I,1)#4
joeq.UTF.Utf8$MethodDescriptorIterator.getReturnDescriptor()Ljoeq/UTF/Utf8;#Goto(7)#5
joeq.UTF.Utf8$MethodDescriptorIterator.getReturnDescriptor()Ljoeq/UTF/Utf8;#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#7
joeq.UTF.Utf8$MethodDescriptorIterator.getReturnDescriptor()Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#8
joeq.UTF.Utf8$MethodDescriptorIterator.getReturnDescriptor()Ljoeq/UTF/Utf8;#Get(Ljoeq/UTF/Utf8;,NONSTATIC,Ljoeq/UTF/Utf8$MethodDescriptorIterator;,this$0)#9
joeq.UTF.Utf8$MethodDescriptorIterator.getReturnDescriptor()Ljoeq/UTF/Utf8;#Invoke(STATIC,Ljoeq/UTF/Utf8;,access$000,(Ljoeq/UTF/Utf8;)[B)#10
joeq.UTF.Utf8$MethodDescriptorIterator.getReturnDescriptor()Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#11
joeq.UTF.Utf8$MethodDescriptorIterator.getReturnDescriptor()Ljoeq/UTF/Utf8;#Get(I,NONSTATIC,Ljoeq/UTF/Utf8$MethodDescriptorIterator;,currentIndex)#12
joeq.UTF.Utf8$MethodDescriptorIterator.getReturnDescriptor()Ljoeq/UTF/Utf8;#Constant(I,2)#13
joeq.UTF.Utf8$MethodDescriptorIterator.getReturnDescriptor()Ljoeq/UTF/Utf8;#BinaryOp(I,add)#14
joeq.UTF.Utf8$MethodDescriptorIterator.getReturnDescriptor()Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#15
joeq.UTF.Utf8$MethodDescriptorIterator.getReturnDescriptor()Ljoeq/UTF/Utf8;#Get(Ljoeq/UTF/Utf8;,NONSTATIC,Ljoeq/UTF/Utf8$MethodDescriptorIterator;,this$0)#16
joeq.UTF.Utf8$MethodDescriptorIterator.getReturnDescriptor()Ljoeq/UTF/Utf8;#Invoke(STATIC,Ljoeq/UTF/Utf8;,access$000,(Ljoeq/UTF/Utf8;)[B)#17
joeq.UTF.Utf8$MethodDescriptorIterator.getReturnDescriptor()Ljoeq/UTF/Utf8;#ArrayLength()#18
joeq.UTF.Utf8$MethodDescriptorIterator.getReturnDescriptor()Ljoeq/UTF/Utf8;#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,([BII)Ljoeq/UTF/Utf8;)#19
joeq.UTF.Utf8$MethodDescriptorIterator.getReturnDescriptor()Ljoeq/UTF/Utf8;#Return(Ljava/lang/Object;)#20
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalStore(Ljava/lang/Object;,4)#83
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#84
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#85
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_InstanceMethod;,clazz)#86
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getClassLoader,()Ljava/lang/ClassLoader;)#87
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,4)#88
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Invoke(STATIC,Ljoeq/Class/PrimordialClassLoader;,getOrCreateType,(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;)#89
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Put(Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_InstanceMethod;,return_type)#90
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Return(V)#91
joeq.Class.jq_Method.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Return(V)#12
joeq.Class.jq_InstanceMethod.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,0)#4
joeq.Class.jq_InstanceMethod.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Constant(I,-2147483648)#5
joeq.Class.jq_InstanceMethod.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Put(I,NONSTATIC,Ljoeq/Class/jq_InstanceMethod;,offset)#6
joeq.Class.jq_InstanceMethod.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Return(V)#7
joeq.Class.jq_InstanceMethod.newInstanceMethod(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#Return(Ljava/lang/Object;)#5
joeq.Class.jq_Class.createInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#LocalStore(Ljava/lang/Object;,2)#22
joeq.Class.jq_Class.createInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,0)#23
joeq.Class.jq_Class.createInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,1)#24
joeq.Class.jq_Class.createInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,2)#25
joeq.Class.jq_Class.createInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#Invoke(SPECIAL,Ljoeq/Class/jq_Class;,addDeclaredMember,(Ljoeq/Class/jq_NameAndDesc;Ljoeq/Class/jq_Member;)V)#26
joeq.Class.jq_Class.createInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,2)#27
joeq.Class.jq_Class.createInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#Return(Ljava/lang/Object;)#28
joeq.Class.jq_Class.getOrCreateInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#Return(Ljava/lang/Object;)#13
joeq.Class.jq_Class.getOrCreateInstanceMethod(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_InstanceMethod;#Return(Ljava/lang/Object;)#9
joeq.Class.jq_Method.<clinit>()V#Put(Ljoeq/Class/jq_InstanceMethod;,STATIC,Ljoeq/Class/jq_Method;,_compile)#26
joeq.Class.jq_Method.<clinit>()V#Get(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/jq_Method;,_class)#27
joeq.Class.jq_Method.<clinit>()V#Constant(Ljava/lang/String;,"default_compiled_version")#28
joeq.Class.jq_Method.<clinit>()V#Constant(Ljava/lang/String;,"Ljoeq/Class/jq_CompiledCode;")#29
joeq.Class.jq_Method.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getOrCreateInstanceField,(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_InstanceField;)#30
joeq.Class.jq_Method.<clinit>()V#Put(Ljoeq/Class/jq_InstanceField;,STATIC,Ljoeq/Class/jq_Method;,_default_compiled_version)#31
joeq.Class.jq_Method.<clinit>()V#Constant(L;,null)#32
joeq.Class.jq_Method.<clinit>()V#Put(Ljoeq/Class/jq_Method$Delegate;,STATIC,Ljoeq/Class/jq_Method;,_delegate)#33
joeq.Class.jq_Method.<clinit>()V#Get(Z,STATIC,Ljoeq/Main/jq;,nullVM)#34
joeq.Class.jq_Method.<clinit>()V#LocalStore(I,0)#35
joeq.Class.jq_Method.<clinit>()V#LocalLoad(I,0)#36
joeq.Class.jq_Method.<clinit>()V#Constant(I,0)#37
joeq.Class.jq_Method.<clinit>()V#ConditionalBranch(I,ne,42)#38
joeq.Class.jq_Method.<clinit>()V#Get(Ljoeq/Class/jq_Method$Delegate;,STATIC,Ljoeq/Class/jq_Method;,_delegate)#42
joeq.Class.jq_Method.<clinit>()V#Constant(L;,null)#43
joeq.Class.jq_Method.<clinit>()V#ConditionalBranch(Ljava/lang/Object;,ne,49)#44
joeq.Class.jq_Method.<clinit>()V#New(Ljoeq/Class/NullDelegates$Method;,0)#45
joeq.Class.jq_Method.<clinit>()V#Dup(1,0)#46
joeq.Class.jq_Method.<clinit>()V#Invoke(SPECIAL,Ljoeq/Class/NullDelegates$Method;,<init>,()V)#47
joeq.Class.NullDelegates$Method.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.NullDelegates$Method.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Class.NullDelegates$Method.<init>()V#Return(V)#2
joeq.Class.jq_Method.<clinit>()V#Put(Ljoeq/Class/jq_Method$Delegate;,STATIC,Ljoeq/Class/jq_Method;,_delegate)#48
joeq.Class.jq_Method.<clinit>()V#Return(V)#49
joeq.Class.jq_Method.doSSA()V#Constant(I,1)#0
joeq.Class.jq_Method.doSSA()V#Put(Z,STATIC,Ljoeq/Class/jq_Method;,doSSA)#1
joeq.Class.jq_Method.doSSA()V#Return(V)#2
chord.program.Program.<init>()V#Get([Ljava/lang/String;,STATIC,Lchord/project/Config;,scopeExcludeAry)#10
chord.program.Program.<init>()V#Invoke(STATIC,Ljoeq/Class/jq_Method;,exclude,([Ljava/lang/String;)V)#11
joeq.Class.jq_Method.exclude([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Method.exclude([Ljava/lang/String;)V#Put([Ljava/lang/String;,STATIC,Ljoeq/Class/jq_Method;,scopeExcludedPrefixes)#1
joeq.Class.jq_Method.exclude([Ljava/lang/String;)V#Return(V)#2
chord.program.Program.<init>()V#New(Ljava/util/HashMap;,0)#12
chord.program.Program.<init>()V#Dup(1,0)#13
chord.program.Program.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#14
chord.program.Program.<init>()V#LocalStore(Ljava/lang/Object;,1)#15
chord.program.Program.<init>()V#Constant(Ljava/lang/String;,"chord/program/stubs/stubs.txt")#16
chord.program.Program.<init>()V#LocalStore(Ljava/lang/Object;,2)#17
chord.program.Program.<init>()V#LocalLoad(Ljava/lang/Object;,2)#18
chord.program.Program.<init>()V#Invoke(STATIC,Lchord/util/Utils;,getResourceAsReader,(Ljava/lang/String;)Ljava/io/BufferedReader;)#19
chord.util.Utils.getResourceAsReader(Ljava/lang/String;)Ljava/io/BufferedReader;#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.Utils.getResourceAsReader(Ljava/lang/String;)Ljava/io/BufferedReader;#Invoke(STATIC,Lchord/util/Utils;,getResourceAsStream,(Ljava/lang/String;)Ljava/io/InputStream;)#1
chord.util.Utils.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Invoke(STATIC,Ljava/lang/Thread;,currentThread,()Ljava/lang/Thread;)#0
chord.util.Utils.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Invoke(VIRTUAL,Ljava/lang/Thread;,getContextClassLoader,()Ljava/lang/ClassLoader;)#1
chord.util.Utils.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalStore(Ljava/lang/Object;,1)#2
chord.util.Utils.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,1)#3
chord.util.Utils.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,0)#4
chord.util.Utils.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Invoke(VIRTUAL,Ljava/lang/ClassLoader;,getResourceAsStream,(Ljava/lang/String;)Ljava/io/InputStream;)#5
chord.util.Utils.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Return(Ljava/lang/Object;)#6
chord.util.Utils.getResourceAsReader(Ljava/lang/String;)Ljava/io/BufferedReader;#LocalStore(Ljava/lang/Object;,1)#2
chord.util.Utils.getResourceAsReader(Ljava/lang/String;)Ljava/io/BufferedReader;#LocalLoad(Ljava/lang/Object;,1)#3
chord.util.Utils.getResourceAsReader(Ljava/lang/String;)Ljava/io/BufferedReader;#Constant(L;,null)#4
chord.util.Utils.getResourceAsReader(Ljava/lang/String;)Ljava/io/BufferedReader;#ConditionalBranch(Ljava/lang/Object;,ne,8)#5
chord.util.Utils.getResourceAsReader(Ljava/lang/String;)Ljava/io/BufferedReader;#New(Ljava/io/BufferedReader;,0)#8
chord.util.Utils.getResourceAsReader(Ljava/lang/String;)Ljava/io/BufferedReader;#Dup(1,0)#9
chord.util.Utils.getResourceAsReader(Ljava/lang/String;)Ljava/io/BufferedReader;#New(Ljava/io/InputStreamReader;,0)#10
chord.util.Utils.getResourceAsReader(Ljava/lang/String;)Ljava/io/BufferedReader;#Dup(1,0)#11
chord.util.Utils.getResourceAsReader(Ljava/lang/String;)Ljava/io/BufferedReader;#LocalLoad(Ljava/lang/Object;,1)#12
chord.util.Utils.getResourceAsReader(Ljava/lang/String;)Ljava/io/BufferedReader;#Invoke(SPECIAL,Ljava/io/InputStreamReader;,<init>,(Ljava/io/InputStream;)V)#13
chord.util.Utils.getResourceAsReader(Ljava/lang/String;)Ljava/io/BufferedReader;#Invoke(SPECIAL,Ljava/io/BufferedReader;,<init>,(Ljava/io/Reader;)V)#14
chord.util.Utils.getResourceAsReader(Ljava/lang/String;)Ljava/io/BufferedReader;#Return(Ljava/lang/Object;)#15
chord.program.Program.<init>()V#LocalStore(Ljava/lang/Object;,3)#20
chord.program.Program.<init>()V#LocalLoad(Ljava/lang/Object;,3)#21
chord.program.Program.<init>()V#Constant(L;,null)#22
chord.program.Program.<init>()V#ConditionalBranch(Ljava/lang/Object;,ne,57)#23
chord.program.Program.<init>()V#LocalLoad(Ljava/lang/Object;,3)#57
chord.program.Program.<init>()V#Invoke(VIRTUAL,Ljava/io/BufferedReader;,readLine,()Ljava/lang/String;)#58
chord.program.Program.<init>()V#Dup(1,0)#59
chord.program.Program.<init>()V#LocalStore(Ljava/lang/Object;,4)#60
chord.program.Program.<init>()V#Constant(L;,null)#61
chord.program.Program.<init>()V#ConditionalBranch(Ljava/lang/Object;,ne,33)#62
chord.program.Program.<init>()V#LocalLoad(Ljava/lang/Object;,4)#33
chord.program.Program.<init>()V#Constant(Ljava/lang/String;," ")#34
chord.program.Program.<init>()V#Invoke(VIRTUAL,Ljava/lang/String;,split,(Ljava/lang/String;)[Ljava/lang/String;)#35
chord.program.Program.<init>()V#LocalStore(Ljava/lang/Object;,5)#36
chord.program.Program.<init>()V#Get(Z,STATIC,Lchord/program/Program;,$assertionsDisabled)#37
chord.program.Program.<init>()V#Constant(I,0)#38
chord.program.Program.<init>()V#ConditionalBranch(I,ne,48)#39
chord.program.Program.<init>()V#LocalLoad(Ljava/lang/Object;,5)#40
chord.program.Program.<init>()V#ArrayLength()#41
chord.program.Program.<init>()V#Constant(I,2)#42
chord.program.Program.<init>()V#ConditionalBranch(I,eq,48)#43
chord.program.Program.<init>()V#LocalLoad(Ljava/lang/Object;,1)#48
chord.program.Program.<init>()V#LocalLoad(Ljava/lang/Object;,5)#49
chord.program.Program.<init>()V#Constant(I,0)#50
chord.program.Program.<init>()V#ArrayLoad(Ljava/lang/Object;)#51
chord.program.Program.<init>()V#LocalLoad(Ljava/lang/Object;,5)#52
chord.program.Program.<init>()V#Constant(I,1)#53
chord.program.Program.<init>()V#ArrayLoad(Ljava/lang/Object;)#54
chord.program.Program.<init>()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#55
chord.program.Program.<init>()V#Pop(1)#56
chord.program.Program.<init>()V#Goto(67)#63
chord.program.Program.<init>()V#LocalLoad(Ljava/lang/Object;,1)#67
chord.program.Program.<init>()V#Invoke(STATIC,Ljoeq/Class/jq_Method;,setNativeCFGBuilders,(Ljava/util/Map;)V)#68
joeq.Class.jq_Method.setNativeCFGBuilders(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Method.setNativeCFGBuilders(Ljava/util/Map;)V#Put(Ljava/util/Map;,STATIC,Ljoeq/Class/jq_Method;,nativeCFGBuildersMap)#1
joeq.Class.jq_Method.setNativeCFGBuilders(Ljava/util/Map;)V#Return(V)#2
chord.program.Program.<init>()V#Return(V)#69
chord.program.Program.g()Lchord/program/Program;#Put(Lchord/program/Program;,STATIC,Lchord/program/Program;,program)#6
chord.program.Program.g()Lchord/program/Program;#Get(Lchord/program/Program;,STATIC,Lchord/program/Program;,program)#7
chord.program.Program.g()Lchord/program/Program;#Return(Ljava/lang/Object;)#8
chord.project.Main.run()V#LocalStore(Ljava/lang/Object;,2)#27
chord.project.Main.run()V#Invoke(STATIC,Lchord/project/Project;,g,()Lchord/project/Project;)#28
chord.project.Project.g()Lchord/project/Project;#Get(Z,STATIC,Lchord/project/Config;,classic)#0
chord.project.Project.g()Lchord/project/Project;#Constant(I,0)#1
chord.project.Project.g()Lchord/project/Project;#ConditionalBranch(I,eq,5)#2
chord.project.Project.g()Lchord/project/Project;#Invoke(STATIC,Lchord/project/ClassicProject;,g,()Lchord/project/ClassicProject;)#3
chord.project.ClassicProject.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@4837567e)#0
chord.project.ClassicProject.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.project.ClassicProject.<clinit>()V#Constant(I,0)#2
chord.project.ClassicProject.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.project.ClassicProject.<clinit>()V#Constant(I,0)#6
chord.project.ClassicProject.<clinit>()V#Put(Z,STATIC,Lchord/project/ClassicProject;,$assertionsDisabled)#7
chord.project.ClassicProject.<clinit>()V#Constant(L;,null)#8
chord.project.ClassicProject.<clinit>()V#Put(Lchord/project/ClassicProject;,STATIC,Lchord/project/ClassicProject;,project)#9
chord.project.ClassicProject.<clinit>()V#New(Lchord/project/ClassicProject$1;,0)#10
chord.project.ClassicProject.<clinit>()V#Dup(1,0)#11
chord.project.ClassicProject.<clinit>()V#Invoke(SPECIAL,Lchord/project/ClassicProject$1;,<init>,()V)#12
chord.project.ClassicProject$1.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.ClassicProject$1.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
chord.project.ClassicProject$1.<init>()V#Return(V)#2
chord.project.ClassicProject.<clinit>()V#Put(Ljava/io/FilenameFilter;,STATIC,Lchord/project/ClassicProject;,filter)#13
chord.project.ClassicProject.<clinit>()V#Return(V)#14
chord.project.ClassicProject.g()Lchord/project/ClassicProject;#Get(Lchord/project/ClassicProject;,STATIC,Lchord/project/ClassicProject;,project)#0
chord.project.ClassicProject.g()Lchord/project/ClassicProject;#Constant(L;,null)#1
chord.project.ClassicProject.g()Lchord/project/ClassicProject;#ConditionalBranch(Ljava/lang/Object;,ne,7)#2
chord.project.ClassicProject.g()Lchord/project/ClassicProject;#New(Lchord/project/ClassicProject;,0)#3
chord.project.ClassicProject.g()Lchord/project/ClassicProject;#Dup(1,0)#4
chord.project.ClassicProject.g()Lchord/project/ClassicProject;#Invoke(SPECIAL,Lchord/project/ClassicProject;,<init>,()V)#5
chord.project.ClassicProject.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.ClassicProject.<init>()V#Invoke(SPECIAL,Lchord/project/Project;,<init>,()V)#1
chord.project.Project.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.Project.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
chord.project.Project.<init>()V#Return(V)#2
chord.project.ClassicProject.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
chord.project.ClassicProject.<init>()V#New(Ljava/util/HashMap;,0)#3
chord.project.ClassicProject.<init>()V#Dup(1,0)#4
chord.project.ClassicProject.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#5
chord.project.ClassicProject.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lchord/project/ClassicProject;,nameToTaskMap)#6
chord.project.ClassicProject.<init>()V#LocalLoad(Ljava/lang/Object;,0)#7
chord.project.ClassicProject.<init>()V#New(Ljava/util/HashMap;,0)#8
chord.project.ClassicProject.<init>()V#Dup(1,0)#9
chord.project.ClassicProject.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#10
chord.project.ClassicProject.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lchord/project/ClassicProject;,nameToTrgtMap)#11
chord.project.ClassicProject.<init>()V#LocalLoad(Ljava/lang/Object;,0)#12
chord.project.ClassicProject.<init>()V#New(Ljava/util/HashMap;,0)#13
chord.project.ClassicProject.<init>()V#Dup(1,0)#14
chord.project.ClassicProject.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#15
chord.project.ClassicProject.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lchord/project/ClassicProject;,taskToProducedTrgtsMap)#16
chord.project.ClassicProject.<init>()V#LocalLoad(Ljava/lang/Object;,0)#17
chord.project.ClassicProject.<init>()V#New(Ljava/util/HashMap;,0)#18
chord.project.ClassicProject.<init>()V#Dup(1,0)#19
chord.project.ClassicProject.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#20
chord.project.ClassicProject.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lchord/project/ClassicProject;,taskToConsumedTrgtsMap)#21
chord.project.ClassicProject.<init>()V#LocalLoad(Ljava/lang/Object;,0)#22
chord.project.ClassicProject.<init>()V#New(Ljava/util/HashMap;,0)#23
chord.project.ClassicProject.<init>()V#Dup(1,0)#24
chord.project.ClassicProject.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#25
chord.project.ClassicProject.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lchord/project/ClassicProject;,trgtToProducingTasksMap)#26
chord.project.ClassicProject.<init>()V#LocalLoad(Ljava/lang/Object;,0)#27
chord.project.ClassicProject.<init>()V#New(Ljava/util/HashMap;,0)#28
chord.project.ClassicProject.<init>()V#Dup(1,0)#29
chord.project.ClassicProject.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#30
chord.project.ClassicProject.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lchord/project/ClassicProject;,trgtToConsumingTasksMap)#31
chord.project.ClassicProject.<init>()V#LocalLoad(Ljava/lang/Object;,0)#32
chord.project.ClassicProject.<init>()V#New(Ljava/util/HashSet;,0)#33
chord.project.ClassicProject.<init>()V#Dup(1,0)#34
chord.project.ClassicProject.<init>()V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#35
chord.project.ClassicProject.<init>()V#Put(Ljava/util/Set;,NONSTATIC,Lchord/project/ClassicProject;,doneTasks)#36
chord.project.ClassicProject.<init>()V#LocalLoad(Ljava/lang/Object;,0)#37
chord.project.ClassicProject.<init>()V#New(Ljava/util/HashSet;,0)#38
chord.project.ClassicProject.<init>()V#Dup(1,0)#39
chord.project.ClassicProject.<init>()V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#40
chord.project.ClassicProject.<init>()V#Put(Ljava/util/Set;,NONSTATIC,Lchord/project/ClassicProject;,doneTrgts)#41
chord.project.ClassicProject.<init>()V#LocalLoad(Ljava/lang/Object;,0)#42
chord.project.ClassicProject.<init>()V#Constant(I,0)#43
chord.project.ClassicProject.<init>()V#Put(Z,NONSTATIC,Lchord/project/ClassicProject;,isBuilt)#44
chord.project.ClassicProject.<init>()V#Return(V)#45
chord.project.ClassicProject.g()Lchord/project/ClassicProject;#Put(Lchord/project/ClassicProject;,STATIC,Lchord/project/ClassicProject;,project)#6
chord.project.ClassicProject.g()Lchord/project/ClassicProject;#Get(Lchord/project/ClassicProject;,STATIC,Lchord/project/ClassicProject;,project)#7
chord.project.ClassicProject.g()Lchord/project/ClassicProject;#Return(Ljava/lang/Object;)#8
chord.project.Project.g()Lchord/project/Project;#Goto(6)#4
chord.project.Project.g()Lchord/project/Project;#Return(Ljava/lang/Object;)#6
chord.project.Main.run()V#LocalStore(Ljava/lang/Object;,3)#29
chord.project.Main.run()V#Get(Z,STATIC,Lchord/project/Config;,buildScope)#30
chord.project.Main.run()V#Constant(I,0)#31
chord.project.Main.run()V#ConditionalBranch(I,eq,35)#32
chord.project.Main.run()V#Get(Z,STATIC,Lchord/project/Config;,printAllClasses)#35
chord.project.Main.run()V#Constant(I,0)#36
chord.project.Main.run()V#ConditionalBranch(I,eq,40)#37
chord.project.Main.run()V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,printClasses)#40
chord.project.Main.run()V#Invoke(STATIC,Lchord/util/Utils;,toArray,(Ljava/lang/String;)[Ljava/lang/String;)#41
chord.project.Main.run()V#LocalStore(Ljava/lang/Object;,4)#42
chord.project.Main.run()V#LocalLoad(Ljava/lang/Object;,4)#43
chord.project.Main.run()V#ArrayLength()#44
chord.project.Main.run()V#Constant(I,0)#45
chord.project.Main.run()V#ConditionalBranch(I,le,69)#46
chord.project.Main.run()V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,runAnalyses)#69
chord.project.Main.run()V#Invoke(STATIC,Lchord/util/Utils;,toArray,(Ljava/lang/String;)[Ljava/lang/String;)#70
chord.project.Main.run()V#LocalStore(Ljava/lang/Object;,5)#71
chord.project.Main.run()V#LocalLoad(Ljava/lang/Object;,5)#72
chord.project.Main.run()V#ArrayLength()#73
chord.project.Main.run()V#Constant(I,0)#74
chord.project.Main.run()V#ConditionalBranch(I,le,79)#75
chord.project.Main.run()V#LocalLoad(Ljava/lang/Object;,3)#76
chord.project.Main.run()V#LocalLoad(Ljava/lang/Object;,5)#77
chord.project.Main.run()V#Invoke(VIRTUAL,Lchord/project/Project;,run,([Ljava/lang/String;)V)#78
chord.project.ClassicProject.run([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#0
chord.project.ClassicProject.run([Ljava/lang/String;)V#Dup(1,0)#1
chord.project.ClassicProject.run([Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,5)#2
chord.project.ClassicProject.run([Ljava/lang/String;)V#ArrayLength()#3
chord.project.ClassicProject.run([Ljava/lang/String;)V#LocalStore(I,4)#4
chord.project.ClassicProject.run([Ljava/lang/String;)V#Constant(I,0)#5
chord.project.ClassicProject.run([Ljava/lang/String;)V#LocalStore(I,3)#6
chord.project.ClassicProject.run([Ljava/lang/String;)V#Goto(20)#7
chord.project.ClassicProject.run([Ljava/lang/String;)V#LocalLoad(I,3)#20
chord.project.ClassicProject.run([Ljava/lang/String;)V#LocalLoad(I,4)#21
chord.project.ClassicProject.run([Ljava/lang/String;)V#ConditionalBranch(I,lt,8)#22
chord.project.ClassicProject.run([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,5)#8
chord.project.ClassicProject.run([Ljava/lang/String;)V#LocalLoad(I,3)#9
chord.project.ClassicProject.run([Ljava/lang/String;)V#ArrayLoad(Ljava/lang/Object;)#10
chord.project.ClassicProject.run([Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,2)#11
chord.project.ClassicProject.run([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#12
chord.project.ClassicProject.run([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#13
chord.project.ClassicProject.run([Ljava/lang/String;)V#Invoke(VIRTUAL,Lchord/project/ClassicProject;,runTask,(Ljava/lang/String;)Lchord/project/ITask;)#14
chord.project.ClassicProject.runTask(Ljava/lang/String;)Lchord/project/ITask;#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.ClassicProject.runTask(Ljava/lang/String;)Lchord/project/ITask;#LocalLoad(Ljava/lang/Object;,1)#1
chord.project.ClassicProject.runTask(Ljava/lang/String;)Lchord/project/ITask;#Invoke(VIRTUAL,Lchord/project/ClassicProject;,getTask,(Ljava/lang/String;)Lchord/project/ITask;)#2
chord.project.ClassicProject.getTask(Ljava/lang/String;)Lchord/project/ITask;#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.ClassicProject.getTask(Ljava/lang/String;)Lchord/project/ITask;#Invoke(VIRTUAL,Lchord/project/ClassicProject;,build,()V)#1
chord.project.ClassicProject.build()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.ClassicProject.build()V#Get(Z,NONSTATIC,Lchord/project/ClassicProject;,isBuilt)#1
chord.project.ClassicProject.build()V#Constant(I,0)#2
chord.project.ClassicProject.build()V#ConditionalBranch(I,eq,5)#3
chord.project.ClassicProject.build()V#New(Lchord/project/TaskParser;,0)#5
chord.project.ClassicProject.build()V#Dup(1,0)#6
chord.project.ClassicProject.build()V#Invoke(SPECIAL,Lchord/project/TaskParser;,<init>,()V)#7
chord.project.TaskParser.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.TaskParser.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
chord.project.TaskParser.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
chord.project.TaskParser.<init>()V#New(Ljava/util/HashMap;,0)#3
chord.project.TaskParser.<init>()V#Dup(1,0)#4
chord.project.TaskParser.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#5
chord.project.TaskParser.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lchord/project/TaskParser;,nameToJavaTaskMap)#6
chord.project.TaskParser.<init>()V#LocalLoad(Ljava/lang/Object;,0)#7
chord.project.TaskParser.<init>()V#New(Ljava/util/HashMap;,0)#8
chord.project.TaskParser.<init>()V#Dup(1,0)#9
chord.project.TaskParser.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#10
chord.project.TaskParser.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lchord/project/TaskParser;,nameToDlogTaskMap)#11
chord.project.TaskParser.<init>()V#LocalLoad(Ljava/lang/Object;,0)#12
chord.project.TaskParser.<init>()V#New(Ljava/util/HashMap;,0)#13
chord.project.TaskParser.<init>()V#Dup(1,0)#14
chord.project.TaskParser.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#15
chord.project.TaskParser.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lchord/project/TaskParser;,nameToPrescriberNameMap)#16
chord.project.TaskParser.<init>()V#LocalLoad(Ljava/lang/Object;,0)#17
chord.project.TaskParser.<init>()V#New(Ljava/util/HashMap;,0)#18
chord.project.TaskParser.<init>()V#Dup(1,0)#19
chord.project.TaskParser.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#20
chord.project.TaskParser.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lchord/project/TaskParser;,nameToConsumeNamesMap)#21
chord.project.TaskParser.<init>()V#LocalLoad(Ljava/lang/Object;,0)#22
chord.project.TaskParser.<init>()V#New(Ljava/util/HashMap;,0)#23
chord.project.TaskParser.<init>()V#Dup(1,0)#24
chord.project.TaskParser.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#25
chord.project.TaskParser.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lchord/project/TaskParser;,nameToProduceNamesMap)#26
chord.project.TaskParser.<init>()V#LocalLoad(Ljava/lang/Object;,0)#27
chord.project.TaskParser.<init>()V#New(Ljava/util/HashMap;,0)#28
chord.project.TaskParser.<init>()V#Dup(1,0)#29
chord.project.TaskParser.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#30
chord.project.TaskParser.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lchord/project/TaskParser;,nameToControlNamesMap)#31
chord.project.TaskParser.<init>()V#LocalLoad(Ljava/lang/Object;,0)#32
chord.project.TaskParser.<init>()V#New(Ljava/util/HashMap;,0)#33
chord.project.TaskParser.<init>()V#Dup(1,0)#34
chord.project.TaskParser.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#35
chord.project.TaskParser.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lchord/project/TaskParser;,nameToTrgtInfosMap)#36
chord.project.TaskParser.<init>()V#LocalLoad(Ljava/lang/Object;,0)#37
chord.project.TaskParser.<init>()V#Constant(I,1)#38
chord.project.TaskParser.<init>()V#Put(Z,NONSTATIC,Lchord/project/TaskParser;,hasNoErrors)#39
chord.project.TaskParser.<init>()V#Return(V)#40
chord.project.ClassicProject.build()V#LocalStore(Ljava/lang/Object;,1)#8
chord.project.ClassicProject.build()V#LocalLoad(Ljava/lang/Object;,1)#9
chord.project.ClassicProject.build()V#Invoke(VIRTUAL,Lchord/project/TaskParser;,run,()Z)#10
chord.project.TaskParser.run()Z#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.TaskParser.run()Z#Invoke(SPECIAL,Lchord/project/TaskParser;,buildDlogAnalysisMap,()V)#1
chord.project.TaskParser.buildDlogAnalysisMap()V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,dlogAnalysisPathName)#0
chord.project.TaskParser.buildDlogAnalysisMap()V#LocalStore(Ljava/lang/Object;,1)#1
chord.project.TaskParser.buildDlogAnalysisMap()V#LocalLoad(Ljava/lang/Object;,1)#2
chord.project.TaskParser.buildDlogAnalysisMap()V#Constant(Ljava/lang/String;,"")#3
chord.project.TaskParser.buildDlogAnalysisMap()V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#4
chord.project.TaskParser.buildDlogAnalysisMap()V#Constant(I,0)#5
chord.project.TaskParser.buildDlogAnalysisMap()V#ConditionalBranch(I,eq,8)#6
chord.project.TaskParser.buildDlogAnalysisMap()V#LocalLoad(Ljava/lang/Object;,1)#8
chord.project.TaskParser.buildDlogAnalysisMap()V#Get(Ljava/lang/String;,STATIC,Lchord/util/Utils;,PATH_SEPARATOR)#9
chord.project.TaskParser.buildDlogAnalysisMap()V#Invoke(VIRTUAL,Ljava/lang/String;,split,(Ljava/lang/String;)[Ljava/lang/String;)#10
chord.project.TaskParser.buildDlogAnalysisMap()V#LocalStore(Ljava/lang/Object;,2)#11
chord.project.TaskParser.buildDlogAnalysisMap()V#LocalLoad(Ljava/lang/Object;,2)#12
chord.project.TaskParser.buildDlogAnalysisMap()V#Dup(1,0)#13
chord.project.TaskParser.buildDlogAnalysisMap()V#LocalStore(Ljava/lang/Object;,6)#14
chord.project.TaskParser.buildDlogAnalysisMap()V#ArrayLength()#15
chord.project.TaskParser.buildDlogAnalysisMap()V#LocalStore(I,5)#16
chord.project.TaskParser.buildDlogAnalysisMap()V#Constant(I,0)#17
chord.project.TaskParser.buildDlogAnalysisMap()V#LocalStore(I,4)#18
chord.project.TaskParser.buildDlogAnalysisMap()V#Goto(45)#19
chord.project.TaskParser.buildDlogAnalysisMap()V#LocalLoad(I,4)#45
chord.project.TaskParser.buildDlogAnalysisMap()V#LocalLoad(I,5)#46
chord.project.TaskParser.buildDlogAnalysisMap()V#ConditionalBranch(I,lt,20)#47
chord.project.TaskParser.buildDlogAnalysisMap()V#LocalLoad(Ljava/lang/Object;,6)#20
chord.project.TaskParser.buildDlogAnalysisMap()V#LocalLoad(I,4)#21
chord.project.TaskParser.buildDlogAnalysisMap()V#ArrayLoad(Ljava/lang/Object;)#22
chord.project.TaskParser.buildDlogAnalysisMap()V#LocalStore(Ljava/lang/Object;,3)#23
chord.project.TaskParser.buildDlogAnalysisMap()V#New(Ljava/io/File;,0)#24
chord.project.TaskParser.buildDlogAnalysisMap()V#Dup(1,0)#25
chord.project.TaskParser.buildDlogAnalysisMap()V#LocalLoad(Ljava/lang/Object;,3)#26
chord.project.TaskParser.buildDlogAnalysisMap()V#Invoke(SPECIAL,Ljava/io/File;,<init>,(Ljava/lang/String;)V)#27
chord.project.TaskParser.buildDlogAnalysisMap()V#LocalStore(Ljava/lang/Object;,7)#28
chord.project.TaskParser.buildDlogAnalysisMap()V#LocalLoad(Ljava/lang/Object;,7)#29
chord.project.TaskParser.buildDlogAnalysisMap()V#Invoke(VIRTUAL,Ljava/io/File;,exists,()Z)#30
chord.project.TaskParser.buildDlogAnalysisMap()V#Constant(I,0)#31
chord.project.TaskParser.buildDlogAnalysisMap()V#ConditionalBranch(I,ne,38)#32
chord.project.TaskParser.buildDlogAnalysisMap()V#LocalLoad(Ljava/lang/Object;,0)#38
chord.project.TaskParser.buildDlogAnalysisMap()V#LocalLoad(Ljava/lang/Object;,7)#39
chord.project.TaskParser.buildDlogAnalysisMap()V#Invoke(SPECIAL,Lchord/project/TaskParser;,processDlogAnalysis,(Ljava/io/File;)V)#40
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,1)#0
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#Invoke(VIRTUAL,Ljava/io/File;,isDirectory,()Z)#1
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#Constant(I,0)#2
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#ConditionalBranch(I,eq,51)#3
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,1)#51
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#Invoke(VIRTUAL,Ljava/io/File;,getAbsolutePath,()Ljava/lang/String;)#52
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#LocalStore(Ljava/lang/Object;,2)#53
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,2)#54
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#Constant(Ljava/lang/String;,".jar")#55
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#Invoke(VIRTUAL,Ljava/lang/String;,endsWith,(Ljava/lang/String;)Z)#56
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#Constant(I,0)#57
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#ConditionalBranch(I,eq,102)#58
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#New(Ljava/util/jar/JarFile;,0)#59
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#Dup(1,0)#60
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,2)#61
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#Invoke(SPECIAL,Ljava/util/jar/JarFile;,<init>,(Ljava/lang/String;)V)#62
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#LocalStore(Ljava/lang/Object;,3)#63
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,3)#64
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#Invoke(VIRTUAL,Ljava/util/jar/JarFile;,entries,()Ljava/util/Enumeration;)#65
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#LocalStore(Ljava/lang/Object;,4)#66
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#Goto(97)#67
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,4)#97
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#Invoke(INTERFACE,Ljava/util/Enumeration;,hasMoreElements,()Z)#98
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#Constant(I,0)#99
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#ConditionalBranch(I,ne,68)#100
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,4)#68
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#Invoke(INTERFACE,Ljava/util/Enumeration;,nextElement,()Ljava/lang/Object;)#69
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#CheckCast(Ljava/util/jar/JarEntry;)#70
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#LocalStore(Ljava/lang/Object;,5)#71
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,5)#72
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#Invoke(VIRTUAL,Ljava/util/jar/JarEntry;,getName,()Ljava/lang/String;)#73
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#LocalStore(Ljava/lang/Object;,6)#74
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,6)#75
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#Constant(Ljava/lang/String;,".dlog")#76
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#Invoke(VIRTUAL,Ljava/lang/String;,endsWith,(Ljava/lang/String;)Z)#77
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#Constant(I,0)#78
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#ConditionalBranch(I,ne,85)#79
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,6)#80
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#Constant(Ljava/lang/String;,".datalog")#81
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#Invoke(VIRTUAL,Ljava/lang/String;,endsWith,(Ljava/lang/String;)Z)#82
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#Constant(I,0)#83
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#ConditionalBranch(I,eq,97)#84
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,3)#85
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,5)#86
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#Invoke(VIRTUAL,Ljava/util/jar/JarFile;,getInputStream,(Ljava/util/zip/ZipEntry;)Ljava/io/InputStream;)#87
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#LocalStore(Ljava/lang/Object;,7)#88
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,6)#89
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,7)#90
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#Constant(Ljava/lang/String;,"dlog")#91
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#Invoke(STATIC,Lchord/project/OutDirUtils;,copyResourceByPath,(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;)#92
chord.project.OutDirUtils.copyResourceByPath(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.OutDirUtils.copyResourceByPath(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#1
chord.project.OutDirUtils.copyResourceByPath(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#2
chord.project.OutDirUtils.copyResourceByPath(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#3
chord.project.OutDirUtils.copyResourceByPath(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;#Constant(I,47)#4
chord.project.OutDirUtils.copyResourceByPath(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;#Constant(I,95)#5
chord.project.OutDirUtils.copyResourceByPath(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,replace,(CC)Ljava/lang/String;)#6
chord.project.OutDirUtils.copyResourceByPath(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;#Invoke(STATIC,Lchord/project/OutDirUtils;,copyResource,(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#7
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#0
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(L;,null)#1
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(Ljava/lang/Object;,ne,11)#2
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#11
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(L;,null)#12
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(Ljava/lang/Object;,eq,28)#13
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#New(Ljava/io/File;,0)#14
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Dup(1,0)#15
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,outDirName)#16
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#17
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(SPECIAL,Ljava/io/File;,<init>,(Ljava/lang/String;Ljava/lang/String;)V)#18
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,4)#19
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,4)#20
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/io/File;,exists,()Z)#21
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#22
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ne,33)#23
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#New(Ljava/io/File;,0)#33
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Dup(1,0)#34
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,4)#35
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#36
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(SPECIAL,Ljava/io/File;,<init>,(Ljava/io/File;Ljava/lang/String;)V)#37
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,5)#38
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#New(Ljava/io/BufferedReader;,0)#39
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Dup(1,0)#40
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#New(Ljava/io/InputStreamReader;,0)#41
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Dup(1,0)#42
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#43
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(SPECIAL,Ljava/io/InputStreamReader;,<init>,(Ljava/io/InputStream;)V)#44
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(SPECIAL,Ljava/io/BufferedReader;,<init>,(Ljava/io/Reader;)V)#45
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,6)#46
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#New(Ljava/io/PrintWriter;,0)#47
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Dup(1,0)#48
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,5)#49
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(SPECIAL,Ljava/io/PrintWriter;,<init>,(Ljava/io/File;)V)#50
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,7)#51
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Goto(56)#52
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,6)#56
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/io/BufferedReader;,readLine,()Ljava/lang/String;)#57
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Dup(1,0)#58
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,8)#59
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Constant(L;,null)#60
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(Ljava/lang/Object;,ne,53)#61
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,7)#53
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,8)#54
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/io/PrintWriter;,println,(Ljava/lang/String;)V)#55
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,6)#62
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/io/BufferedReader;,close,()V)#63
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,7)#64
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/io/PrintWriter;,close,()V)#65
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Goto(70)#66
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,5)#70
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/io/File;,getAbsolutePath,()Ljava/lang/String;)#71
chord.project.OutDirUtils.copyResource(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#72
chord.project.OutDirUtils.copyResourceByPath(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#8
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#LocalStore(Ljava/lang/Object;,8)#93
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,0)#94
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,8)#95
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#Invoke(SPECIAL,Lchord/project/TaskParser;,processDlogAnalysis,(Ljava/lang/String;)V)#96
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#New(Lchord/project/analyses/DlogAnalysis;,0)#0
chord.project.analyses.JavaAnalysis.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@aaf50582)#0
chord.project.analyses.JavaAnalysis.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.project.analyses.JavaAnalysis.<clinit>()V#Constant(I,0)#2
chord.project.analyses.JavaAnalysis.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.project.analyses.JavaAnalysis.<clinit>()V#Constant(I,0)#6
chord.project.analyses.JavaAnalysis.<clinit>()V#Put(Z,STATIC,Lchord/project/analyses/JavaAnalysis;,$assertionsDisabled)#7
chord.project.analyses.JavaAnalysis.<clinit>()V#Return(V)#8
chord.project.analyses.DlogAnalysis.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@ffcbd04)#0
chord.project.analyses.DlogAnalysis.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.project.analyses.DlogAnalysis.<clinit>()V#Constant(I,0)#2
chord.project.analyses.DlogAnalysis.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.project.analyses.DlogAnalysis.<clinit>()V#Constant(I,0)#6
chord.project.analyses.DlogAnalysis.<clinit>()V#Put(Z,STATIC,Lchord/project/analyses/DlogAnalysis;,$assertionsDisabled)#7
chord.project.analyses.DlogAnalysis.<clinit>()V#Return(V)#8
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Dup(1,0)#1
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(SPECIAL,Lchord/project/analyses/DlogAnalysis;,<init>,()V)#2
chord.project.analyses.DlogAnalysis.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.analyses.DlogAnalysis.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/JavaAnalysis;,<init>,()V)#1
chord.project.analyses.JavaAnalysis.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.analyses.JavaAnalysis.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
chord.project.analyses.JavaAnalysis.<init>()V#Return(V)#2
chord.project.analyses.DlogAnalysis.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
chord.project.analyses.DlogAnalysis.<init>()V#Constant(I,1)#3
chord.project.analyses.DlogAnalysis.<init>()V#Put(Z,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,hasNoErrors)#4
chord.project.analyses.DlogAnalysis.<init>()V#Return(V)#5
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,2)#3
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#4
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#5
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(VIRTUAL,Lchord/project/analyses/DlogAnalysis;,parse,(Ljava/lang/String;)Z)#6
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Get(Z,STATIC,Lchord/project/analyses/DlogAnalysis;,$assertionsDisabled)#0
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#1
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(I,ne,11)#2
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#3
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,fileName)#4
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(L;,null)#5
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(Ljava/lang/Object;,eq,11)#6
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#11
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#12
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Put(Ljava/lang/String;,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,fileName)#13
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#14
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#New(Ljava/util/HashSet;,0)#15
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Dup(1,0)#16
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#17
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Put(Ljava/util/Set;,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,majorDomNames)#18
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#19
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#New(Ljava/util/HashMap;,0)#20
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Dup(1,0)#21
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#22
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Put(Ljava/util/Map;,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,consumedRels)#23
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#24
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#New(Ljava/util/HashMap;,0)#25
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Dup(1,0)#26
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#27
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Put(Ljava/util/Map;,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,producedRels)#28
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#29
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#New(Ljava/util/ArrayList;,0)#30
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Dup(1,0)#31
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#32
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Put(Ljava/util/List;,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,minorDomNames)#33
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(L;,null)#34
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,2)#35
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#New(Ljava/io/BufferedReader;,0)#36
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Dup(1,0)#37
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#New(Ljava/io/FileReader;,0)#38
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Dup(1,0)#39
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#40
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(SPECIAL,Ljava/io/FileReader;,<init>,(Ljava/lang/String;)V)#41
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(SPECIAL,Ljava/io/BufferedReader;,<init>,(Ljava/io/Reader;)V)#42
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,2)#43
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Goto(53)#44
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"(\w)+\((\w)+:(\w)+(,(\w)+:(\w)+)*\)((input)|(output))")#53
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(STATIC,Ljava/util/regex/Pattern;,compile,(Ljava/lang/String;)Ljava/util/regex/Pattern;)#54
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,3)#55
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#56
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,1)#57
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Put(I,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,lineNum)#58
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,2)#59
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/io/BufferedReader;,readLine,()Ljava/lang/String;)#60
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,4)#61
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Goto(71)#62
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,4)#71
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(L;,null)#72
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(Ljava/lang/Object;,ne,75)#73
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,4)#75
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"#")#76
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,startsWith,(Ljava/lang/String;)Z)#77
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#78
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(I,eq,100)#79
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,4)#80
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"# name=")#81
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,startsWith,(Ljava/lang/String;)Z)#82
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#83
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(I,eq,604)#84
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#604
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Dup(1,0)#605
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Get(I,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,lineNum)#606
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,1)#607
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#BinaryOp(I,add)#608
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Put(I,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,lineNum)#609
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Goto(59)#610
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,4)#100
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,35)#101
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,indexOf,(I)I)#102
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(I,5)#103
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,5)#104
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,-1)#105
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(I,eq,112)#106
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,4)#112
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,trim,()Ljava/lang/String;)#113
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,4)#114
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,4)#115
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#116
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#117
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(I,ne,120)#118
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Goto(604)#119
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#85
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,dlogName)#86
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(L;,null)#87
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(Ljava/lang/Object;,ne,96)#88
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#89
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,4)#90
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,trim,()Ljava/lang/String;)#91
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,7)#92
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,substring,(I)Ljava/lang/String;)#93
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Put(Ljava/lang/String;,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,dlogName)#94
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Goto(604)#95
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#New(Ljava/lang/StringBuffer;,0)#120
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Dup(1,0)#121
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,4)#122
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#123
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(SPECIAL,Ljava/lang/StringBuffer;,<init>,(I)V)#124
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,6)#125
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#126
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(I,7)#127
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Goto(145)#128
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,7)#145
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,4)#146
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#147
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(I,lt,129)#148
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,4)#129
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,7)#130
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#131
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(I,8)#132
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,8)#133
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(STATIC,Ljava/lang/Character;,isWhitespace,(C)Z)#134
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#135
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(I,ne,141)#136
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,6)#137
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,8)#138
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,append,(C)Ljava/lang/StringBuffer;)#139
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Pop(1)#140
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,7)#141
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,1)#142
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#BinaryOp(I,add)#143
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(I,7)#144
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,6)#149
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/StringBuffer;,toString,()Ljava/lang/String;)#150
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,4)#151
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,4)#152
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(Ljava/lang/String;,".bddvarorder")#153
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,startsWith,(Ljava/lang/String;)Z)#154
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#155
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(I,eq,228)#156
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,3)#228
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,4)#229
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/util/regex/Pattern;,matcher,(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;)#230
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,7)#231
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,7)#232
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/util/regex/Matcher;,matches,()Z)#233
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#234
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(I,ne,237)#235
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Goto(604)#236
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#157
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,order)#158
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(L;,null)#159
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(Ljava/lang/Object;,eq,165)#160
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#165
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,4)#166
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,12)#167
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,substring,(I)Ljava/lang/String;)#168
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Put(Ljava/lang/String;,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,order)#169
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#170
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,order)#171
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"_|x")#172
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,split,(Ljava/lang/String;)[Ljava/lang/String;)#173
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,7)#174
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,7)#175
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Dup(1,0)#176
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,11)#177
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ArrayLength()#178
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(I,10)#179
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#180
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(I,9)#181
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Goto(224)#182
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,9)#224
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,10)#225
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(I,lt,183)#226
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,11)#183
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,9)#184
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ArrayLoad(Ljava/lang/Object;)#185
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,8)#186
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#187
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Get(Ljava/util/List;,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,minorDomNames)#188
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,8)#189
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/List;,contains,(Ljava/lang/Object;)Z)#190
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#191
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(I,eq,207)#192
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#207
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Get(Ljava/util/List;,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,minorDomNames)#208
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,8)#209
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#210
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Pop(1)#211
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,8)#212
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(STATIC,Lchord/util/Utils;,trimNumSuffix,(Ljava/lang/String;)Ljava/lang/String;)#213
chord.util.Utils.trimNumSuffix(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.Utils.trimNumSuffix(Ljava/lang/String;)Ljava/lang/String;#Constant(L;,null)#1
chord.util.Utils.trimNumSuffix(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(Ljava/lang/Object;,ne,7)#2
chord.util.Utils.trimNumSuffix(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#7
chord.util.Utils.trimNumSuffix(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#8
chord.util.Utils.trimNumSuffix(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#9
chord.util.Utils.trimNumSuffix(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ne,13)#10
chord.util.Utils.trimNumSuffix(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#13
chord.util.Utils.trimNumSuffix(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#14
chord.util.Utils.trimNumSuffix(Ljava/lang/String;)Ljava/lang/String;#Constant(I,1)#15
chord.util.Utils.trimNumSuffix(Ljava/lang/String;)Ljava/lang/String;#BinaryOp(I,sub)#16
chord.util.Utils.trimNumSuffix(Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,1)#17
chord.util.Utils.trimNumSuffix(Ljava/lang/String;)Ljava/lang/String;#Goto(23)#18
chord.util.Utils.trimNumSuffix(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#23
chord.util.Utils.trimNumSuffix(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,1)#24
chord.util.Utils.trimNumSuffix(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#25
chord.util.Utils.trimNumSuffix(Ljava/lang/String;)Ljava/lang/String;#Invoke(STATIC,Ljava/lang/Character;,isDigit,(C)Z)#26
chord.util.Utils.trimNumSuffix(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#27
chord.util.Utils.trimNumSuffix(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ne,19)#28
chord.util.Utils.trimNumSuffix(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,1)#19
chord.util.Utils.trimNumSuffix(Ljava/lang/String;)Ljava/lang/String;#Constant(I,-1)#20
chord.util.Utils.trimNumSuffix(Ljava/lang/String;)Ljava/lang/String;#BinaryOp(I,add)#21
chord.util.Utils.trimNumSuffix(Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,1)#22
chord.util.Utils.trimNumSuffix(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#29
chord.util.Utils.trimNumSuffix(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#30
chord.util.Utils.trimNumSuffix(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,1)#31
chord.util.Utils.trimNumSuffix(Ljava/lang/String;)Ljava/lang/String;#Constant(I,1)#32
chord.util.Utils.trimNumSuffix(Ljava/lang/String;)Ljava/lang/String;#BinaryOp(I,add)#33
chord.util.Utils.trimNumSuffix(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,substring,(II)Ljava/lang/String;)#34
chord.util.Utils.trimNumSuffix(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#35
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,12)#214
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#215
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Get(Ljava/util/Set;,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,majorDomNames)#216
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,12)#217
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#218
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Pop(1)#219
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,9)#220
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,1)#221
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#BinaryOp(I,add)#222
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(I,9)#223
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Goto(604)#227
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#237
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,order)#238
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(L;,null)#239
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(Ljava/lang/Object;,ne,246)#240
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,4)#246
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,40)#247
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,indexOf,(I)I)#248
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(I,8)#249
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,4)#250
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#251
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,8)#252
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,substring,(II)Ljava/lang/String;)#253
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,9)#254
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#255
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,consumedRels)#256
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,9)#257
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#258
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#259
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(I,eq,273)#260
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#273
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,producedRels)#274
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,9)#275
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#276
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#277
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(I,eq,291)#278
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,4)#291
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,8)#292
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,1)#293
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#BinaryOp(I,add)#294
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,substring,(I)Ljava/lang/String;)#295
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,4)#296
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#297
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(I,10)#298
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#299
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(I,11)#300
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#New(Ljava/util/ArrayList;,0)#301
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Dup(1,0)#302
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#303
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,12)#304
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#New(Ljava/util/ArrayList;,0)#305
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Dup(1,0)#306
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#307
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,13)#308
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#New(Lgnu/trove/TIntArrayList;,0)#309
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Dup(1,0)#310
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(SPECIAL,Lgnu/trove/TIntArrayList;,<init>,()V)#311
gnu.trove.TIntArrayList.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
gnu.trove.TIntArrayList.<init>()V#Constant(I,10)#1
gnu.trove.TIntArrayList.<init>()V#Invoke(SPECIAL,Lgnu/trove/TIntArrayList;,<init>,(I)V)#2
gnu.trove.TIntArrayList.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#0
gnu.trove.TIntArrayList.<init>(I)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
gnu.trove.TIntArrayList.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#2
gnu.trove.TIntArrayList.<init>(I)V#LocalLoad(I,1)#3
gnu.trove.TIntArrayList.<init>(I)V#New([I,1)#4
gnu.trove.TIntArrayList.<init>(I)V#Put([I,NONSTATIC,Lgnu/trove/TIntArrayList;,_data)#5
gnu.trove.TIntArrayList.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#6
gnu.trove.TIntArrayList.<init>(I)V#Constant(I,0)#7
gnu.trove.TIntArrayList.<init>(I)V#Put(I,NONSTATIC,Lgnu/trove/TIntArrayList;,_pos)#8
gnu.trove.TIntArrayList.<init>(I)V#Return(V)#9
gnu.trove.TIntArrayList.<init>()V#Return(V)#3
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,14)#312
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Goto(525)#313
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,10)#525
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#526
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(I,eq,314)#527
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,4)#314
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,58)#315
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,indexOf,(I)I)#316
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(I,8)#317
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Get(Z,STATIC,Lchord/project/analyses/DlogAnalysis;,$assertionsDisabled)#318
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#319
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(I,ne,328)#320
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,8)#321
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,-1)#322
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(I,ne,328)#323
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,4)#328
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,8)#329
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,1)#330
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#BinaryOp(I,add)#331
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,substring,(I)Ljava/lang/String;)#332
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,4)#333
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,4)#334
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,44)#335
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,indexOf,(I)I)#336
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(I,8)#337
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,8)#338
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,-1)#339
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(I,ne,357)#340
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,4)#357
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#358
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,8)#359
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,substring,(II)Ljava/lang/String;)#360
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,15)#361
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,15)#362
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,8)#363
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,1)#364
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#BinaryOp(I,sub)#365
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#366
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(STATIC,Ljava/lang/Character;,isDigit,(C)Z)#367
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#368
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(I,ne,424)#369
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,15)#370
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,17)#371
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#372
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(I,18)#373
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,14)#374
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Lgnu/trove/TIntArrayList;,size,()I)#375
gnu.trove.TIntArrayList.size()I#LocalLoad(Ljava/lang/Object;,0)#0
gnu.trove.TIntArrayList.size()I#Get(I,NONSTATIC,Lgnu/trove/TIntArrayList;,_pos)#1
gnu.trove.TIntArrayList.size()I#Return(I)#2
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(I,19)#376
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#377
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(I,20)#378
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,13)#379
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#380
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,22)#381
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Goto(406)#382
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,22)#406
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#407
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#408
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(I,ne,383)#409
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,20)#410
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,19)#411
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(I,ne,377)#412
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#New(Ljava/lang/StringBuilder;,0)#413
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Dup(1,0)#414
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,17)#415
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#416
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#417
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,18)#418
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(STATIC,Ljava/lang/Integer;,toString,(I)Ljava/lang/String;)#419
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#420
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#421
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,16)#422
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Goto(458)#423
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,12)#458
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,16)#459
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/List;,contains,(Ljava/lang/Object;)Z)#460
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#461
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(I,eq,483)#462
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#483
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Get(Ljava/util/List;,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,minorDomNames)#484
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,16)#485
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/List;,contains,(Ljava/lang/Object;)Z)#486
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#487
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(I,ne,507)#488
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,12)#507
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,16)#508
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#509
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Pop(1)#510
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,13)#511
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,17)#512
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#513
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Pop(1)#514
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,14)#515
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,18)#516
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Lgnu/trove/TIntArrayList;,add,(I)Z)#517
gnu.trove.TIntArrayList.add(I)Z#LocalLoad(Ljava/lang/Object;,0)#0
gnu.trove.TIntArrayList.add(I)Z#LocalLoad(Ljava/lang/Object;,0)#1
gnu.trove.TIntArrayList.add(I)Z#Get(I,NONSTATIC,Lgnu/trove/TIntArrayList;,_pos)#2
gnu.trove.TIntArrayList.add(I)Z#Constant(I,1)#3
gnu.trove.TIntArrayList.add(I)Z#BinaryOp(I,add)#4
gnu.trove.TIntArrayList.add(I)Z#Invoke(VIRTUAL,Lgnu/trove/TIntArrayList;,ensureCapacity,(I)V)#5
gnu.trove.TIntArrayList.ensureCapacity(I)V#LocalLoad(I,1)#0
gnu.trove.TIntArrayList.ensureCapacity(I)V#LocalLoad(Ljava/lang/Object;,0)#1
gnu.trove.TIntArrayList.ensureCapacity(I)V#Get([I,NONSTATIC,Lgnu/trove/TIntArrayList;,_data)#2
gnu.trove.TIntArrayList.ensureCapacity(I)V#ArrayLength()#3
gnu.trove.TIntArrayList.ensureCapacity(I)V#ConditionalBranch(I,le,28)#4
gnu.trove.TIntArrayList.ensureCapacity(I)V#Return(V)#28
gnu.trove.TIntArrayList.add(I)Z#LocalLoad(Ljava/lang/Object;,0)#6
gnu.trove.TIntArrayList.add(I)Z#Get([I,NONSTATIC,Lgnu/trove/TIntArrayList;,_data)#7
gnu.trove.TIntArrayList.add(I)Z#LocalLoad(Ljava/lang/Object;,0)#8
gnu.trove.TIntArrayList.add(I)Z#Dup(1,0)#9
gnu.trove.TIntArrayList.add(I)Z#Get(I,NONSTATIC,Lgnu/trove/TIntArrayList;,_pos)#10
gnu.trove.TIntArrayList.add(I)Z#Dup(1,1)#11
gnu.trove.TIntArrayList.add(I)Z#Constant(I,1)#12
gnu.trove.TIntArrayList.add(I)Z#BinaryOp(I,add)#13
gnu.trove.TIntArrayList.add(I)Z#Put(I,NONSTATIC,Lgnu/trove/TIntArrayList;,_pos)#14
gnu.trove.TIntArrayList.add(I)Z#LocalLoad(I,1)#15
gnu.trove.TIntArrayList.add(I)Z#ArrayStore(I)#16
gnu.trove.TIntArrayList.add(I)Z#Constant(I,1)#17
gnu.trove.TIntArrayList.add(I)Z#Return(I)#18
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Pop(1)#518
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,4)#519
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,8)#520
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,1)#521
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#BinaryOp(I,add)#522
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,substring,(I)Ljava/lang/String;)#523
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,4)#524
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,4)#341
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,41)#342
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,indexOf,(I)I)#343
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(I,8)#344
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Get(Z,STATIC,Lchord/project/analyses/DlogAnalysis;,$assertionsDisabled)#345
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#346
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(I,ne,355)#347
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,8)#348
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,-1)#349
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(I,ne,355)#350
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,1)#355
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(I,10)#356
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,22)#383
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#384
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#CheckCast(Ljava/lang/String;)#385
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,21)#386
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,21)#387
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,17)#388
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#389
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#390
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(I,eq,402)#391
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,20)#402
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,1)#403
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#BinaryOp(I,add)#404
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(I,20)#405
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,11)#528
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#529
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(I,eq,532)#530
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,12)#532
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/List;,size,()I)#533
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(I,15)#534
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,15)#535
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#New([Ljava/lang/String;,1)#536
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,16)#537
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#538
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,12)#539
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(SPECIAL,Lchord/project/analyses/DlogAnalysis;,getSubOrder,(Ljava/util/List;)Ljava/lang/String;)#540
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,order)#1
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#2
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalStore(I,2)#3
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#Constant(L;,null)#4
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,3)#5
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#Constant(I,32)#6
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalStore(I,4)#7
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#Constant(I,0)#8
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalStore(I,5)#9
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#10
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#Get(Ljava/util/List;,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,minorDomNames)#11
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#12
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,7)#13
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#Goto(70)#14
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,7)#70
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#71
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#Constant(I,0)#72
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#ConditionalBranch(I,ne,15)#73
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,7)#15
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#16
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#CheckCast(Ljava/lang/String;)#17
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,6)#18
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalLoad(I,5)#19
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,6)#20
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#21
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#BinaryOp(I,add)#22
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalStore(I,5)#23
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#24
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,6)#25
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/List;,contains,(Ljava/lang/Object;)Z)#26
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#Constant(I,0)#27
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#ConditionalBranch(I,eq,55)#28
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#29
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#Constant(L;,null)#30
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#ConditionalBranch(Ljava/lang/Object;,ne,35)#31
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,6)#32
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,3)#33
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#Goto(46)#34
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalLoad(I,5)#46
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalLoad(I,2)#47
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#ConditionalBranch(I,eq,66)#48
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#49
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,order)#50
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalLoad(I,5)#51
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#52
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalStore(I,4)#53
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#Goto(66)#54
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalLoad(I,5)#66
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#Constant(I,1)#67
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#BinaryOp(I,add)#68
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalStore(I,5)#69
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#New(Ljava/lang/StringBuilder;,0)#35
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#Dup(1,0)#36
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#37
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#38
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#39
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalLoad(I,4)#40
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(C)Ljava/lang/StringBuilder;)#41
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,6)#42
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#43
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#44
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,3)#45
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalLoad(I,5)#55
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalLoad(I,2)#56
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#ConditionalBranch(I,eq,66)#57
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#74
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#Return(Ljava/lang/Object;)#75
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,17)#541
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#542
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(I,18)#543
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Goto(556)#544
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,18)#556
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,15)#557
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(I,lt,545)#558
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,16)#545
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,18)#546
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,12)#547
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,18)#548
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#549
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#CheckCast(Ljava/lang/String;)#550
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ArrayStore(Ljava/lang/Object;)#551
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,18)#552
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,1)#553
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#BinaryOp(I,add)#554
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(I,18)#555
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(L;,null)#559
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,18)#560
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,4)#561
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"input")#562
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#563
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#564
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(I,eq,570)#565
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#566
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,consumedRels)#567
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,18)#568
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Goto(586)#569
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#New(Lchord/bddbddb/RelSign;,0)#586
chord.bddbddb.RelSign.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@8d8fd1b0)#0
chord.bddbddb.RelSign.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.bddbddb.RelSign.<clinit>()V#Constant(I,0)#2
chord.bddbddb.RelSign.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.bddbddb.RelSign.<clinit>()V#Constant(I,0)#6
chord.bddbddb.RelSign.<clinit>()V#Put(Z,STATIC,Lchord/bddbddb/RelSign;,$assertionsDisabled)#7
chord.bddbddb.RelSign.<clinit>()V#Return(V)#8
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Dup(1,0)#587
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,16)#588
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,17)#589
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(SPECIAL,Lchord/bddbddb/RelSign;,<init>,([Ljava/lang/String;Ljava/lang/String;)V)#590
chord.bddbddb.RelSign.<init>([Ljava/lang/String;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.bddbddb.RelSign.<init>([Ljava/lang/String;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#1
chord.bddbddb.RelSign.<init>([Ljava/lang/String;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#2
chord.bddbddb.RelSign.<init>([Ljava/lang/String;Ljava/lang/String;)V#Invoke(SPECIAL,Lchord/util/tuple/object/Pair;,<init>,(Ljava/lang/Object;Ljava/lang/Object;)V)#3
chord.util.tuple.object.Pair.<init>(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.tuple.object.Pair.<init>(Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
chord.util.tuple.object.Pair.<init>(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#2
chord.util.tuple.object.Pair.<init>(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#3
chord.util.tuple.object.Pair.<init>(Ljava/lang/Object;Ljava/lang/Object;)V#Put(Ljava/lang/Object;,NONSTATIC,Lchord/util/tuple/object/Pair;,val0)#4
chord.util.tuple.object.Pair.<init>(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#5
chord.util.tuple.object.Pair.<init>(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,2)#6
chord.util.tuple.object.Pair.<init>(Ljava/lang/Object;Ljava/lang/Object;)V#Put(Ljava/lang/Object;,NONSTATIC,Lchord/util/tuple/object/Pair;,val1)#7
chord.util.tuple.object.Pair.<init>(Ljava/lang/Object;Ljava/lang/Object;)V#Return(V)#8
chord.bddbddb.RelSign.<init>([Ljava/lang/String;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#4
chord.bddbddb.RelSign.<init>([Ljava/lang/String;Ljava/lang/String;)V#Invoke(SPECIAL,Lchord/bddbddb/RelSign;,validate,()V)#5
chord.bddbddb.RelSign.validate()V#Get(Z,STATIC,Lchord/bddbddb/RelSign;,$assertionsDisabled)#0
chord.bddbddb.RelSign.validate()V#Constant(I,0)#1
chord.bddbddb.RelSign.validate()V#ConditionalBranch(I,ne,11)#2
chord.bddbddb.RelSign.validate()V#LocalLoad(Ljava/lang/Object;,0)#3
chord.bddbddb.RelSign.validate()V#Get(Ljava/lang/Object;,NONSTATIC,Lchord/bddbddb/RelSign;,val0)#4
chord.bddbddb.RelSign.validate()V#Constant(L;,null)#5
chord.bddbddb.RelSign.validate()V#ConditionalBranch(Ljava/lang/Object;,ne,11)#6
chord.bddbddb.RelSign.validate()V#Get(Z,STATIC,Lchord/bddbddb/RelSign;,$assertionsDisabled)#11
chord.bddbddb.RelSign.validate()V#Constant(I,0)#12
chord.bddbddb.RelSign.validate()V#ConditionalBranch(I,ne,24)#13
chord.bddbddb.RelSign.validate()V#LocalLoad(Ljava/lang/Object;,0)#14
chord.bddbddb.RelSign.validate()V#Get(Ljava/lang/Object;,NONSTATIC,Lchord/bddbddb/RelSign;,val0)#15
chord.bddbddb.RelSign.validate()V#CheckCast([Ljava/lang/String;)#16
chord.bddbddb.RelSign.validate()V#Invoke(STATIC,Lchord/util/Utils;,hasDuplicates,([Ljava/lang/Object;)Z)#17
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#Constant(L;,null)#1
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,7)#2
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#Constant(I,0)#7
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#LocalStore(I,1)#8
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#Goto(42)#9
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#LocalLoad(I,1)#42
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#43
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#ArrayLength()#44
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#Constant(I,1)#45
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#BinaryOp(I,sub)#46
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#ConditionalBranch(I,lt,10)#47
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#10
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#LocalLoad(I,1)#11
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#ArrayLoad(Ljava/lang/Object;)#12
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#LocalStore(Ljava/lang/Object;,2)#13
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#LocalLoad(I,1)#14
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#Constant(I,1)#15
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#BinaryOp(I,add)#16
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#LocalStore(I,3)#17
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#Goto(34)#18
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#LocalLoad(I,3)#34
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#35
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#ArrayLength()#36
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#ConditionalBranch(I,lt,19)#37
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#19
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#LocalLoad(I,3)#20
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#ArrayLoad(Ljava/lang/Object;)#21
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#LocalStore(Ljava/lang/Object;,4)#22
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,2)#23
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,4)#24
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/lang/Object;,equals,(Ljava/lang/Object;)Z)#25
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#Constant(I,0)#26
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#ConditionalBranch(I,eq,30)#27
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#LocalLoad(I,3)#30
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#Constant(I,1)#31
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#BinaryOp(I,add)#32
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#LocalStore(I,3)#33
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#LocalLoad(I,1)#38
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#Constant(I,1)#39
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#BinaryOp(I,add)#40
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#LocalStore(I,1)#41
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#Constant(I,0)#48
chord.util.Utils.hasDuplicates([Ljava/lang/Object;)Z#Return(I)#49
chord.bddbddb.RelSign.validate()V#Constant(I,0)#18
chord.bddbddb.RelSign.validate()V#ConditionalBranch(I,eq,24)#19
chord.bddbddb.RelSign.validate()V#LocalLoad(Ljava/lang/Object;,0)#24
chord.bddbddb.RelSign.validate()V#Get(Ljava/lang/Object;,NONSTATIC,Lchord/bddbddb/RelSign;,val1)#25
chord.bddbddb.RelSign.validate()V#Constant(L;,null)#26
chord.bddbddb.RelSign.validate()V#ConditionalBranch(Ljava/lang/Object;,ne,29)#27
chord.bddbddb.RelSign.validate()V#LocalLoad(Ljava/lang/Object;,0)#29
chord.bddbddb.RelSign.validate()V#Get(Ljava/lang/Object;,NONSTATIC,Lchord/bddbddb/RelSign;,val1)#30
chord.bddbddb.RelSign.validate()V#CheckCast(Ljava/lang/String;)#31
chord.bddbddb.RelSign.validate()V#Constant(Ljava/lang/String;,"_|x")#32
chord.bddbddb.RelSign.validate()V#Invoke(VIRTUAL,Ljava/lang/String;,split,(Ljava/lang/String;)[Ljava/lang/String;)#33
chord.bddbddb.RelSign.validate()V#LocalStore(Ljava/lang/Object;,1)#34
chord.bddbddb.RelSign.validate()V#LocalLoad(Ljava/lang/Object;,0)#35
chord.bddbddb.RelSign.validate()V#Get(Ljava/lang/Object;,NONSTATIC,Lchord/bddbddb/RelSign;,val0)#36
chord.bddbddb.RelSign.validate()V#CheckCast([Ljava/lang/String;)#37
chord.bddbddb.RelSign.validate()V#ArrayLength()#38
chord.bddbddb.RelSign.validate()V#LocalLoad(Ljava/lang/Object;,1)#39
chord.bddbddb.RelSign.validate()V#ArrayLength()#40
chord.bddbddb.RelSign.validate()V#ConditionalBranch(I,eq,55)#41
chord.bddbddb.RelSign.validate()V#Get(Z,STATIC,Lchord/bddbddb/RelSign;,$assertionsDisabled)#55
chord.bddbddb.RelSign.validate()V#Constant(I,0)#56
chord.bddbddb.RelSign.validate()V#ConditionalBranch(I,ne,66)#57
chord.bddbddb.RelSign.validate()V#LocalLoad(Ljava/lang/Object;,1)#58
chord.bddbddb.RelSign.validate()V#Invoke(STATIC,Lchord/util/Utils;,hasDuplicates,([Ljava/lang/Object;)Z)#59
chord.bddbddb.RelSign.validate()V#Constant(I,0)#60
chord.bddbddb.RelSign.validate()V#ConditionalBranch(I,eq,66)#61
chord.bddbddb.RelSign.validate()V#LocalLoad(Ljava/lang/Object;,0)#66
chord.bddbddb.RelSign.validate()V#Get(Ljava/lang/Object;,NONSTATIC,Lchord/bddbddb/RelSign;,val0)#67
chord.bddbddb.RelSign.validate()V#CheckCast([Ljava/lang/String;)#68
chord.bddbddb.RelSign.validate()V#Dup(1,0)#69
chord.bddbddb.RelSign.validate()V#LocalStore(Ljava/lang/Object;,5)#70
chord.bddbddb.RelSign.validate()V#ArrayLength()#71
chord.bddbddb.RelSign.validate()V#LocalStore(I,4)#72
chord.bddbddb.RelSign.validate()V#Constant(I,0)#73
chord.bddbddb.RelSign.validate()V#LocalStore(I,3)#74
chord.bddbddb.RelSign.validate()V#Goto(132)#75
chord.bddbddb.RelSign.validate()V#LocalLoad(I,3)#132
chord.bddbddb.RelSign.validate()V#LocalLoad(I,4)#133
chord.bddbddb.RelSign.validate()V#ConditionalBranch(I,lt,76)#134
chord.bddbddb.RelSign.validate()V#LocalLoad(Ljava/lang/Object;,5)#76
chord.bddbddb.RelSign.validate()V#LocalLoad(I,3)#77
chord.bddbddb.RelSign.validate()V#ArrayLoad(Ljava/lang/Object;)#78
chord.bddbddb.RelSign.validate()V#LocalStore(Ljava/lang/Object;,2)#79
chord.bddbddb.RelSign.validate()V#Constant(I,0)#80
chord.bddbddb.RelSign.validate()V#LocalStore(I,6)#81
chord.bddbddb.RelSign.validate()V#LocalLoad(Ljava/lang/Object;,1)#82
chord.bddbddb.RelSign.validate()V#Dup(1,0)#83
chord.bddbddb.RelSign.validate()V#LocalStore(Ljava/lang/Object;,10)#84
chord.bddbddb.RelSign.validate()V#ArrayLength()#85
chord.bddbddb.RelSign.validate()V#LocalStore(I,9)#86
chord.bddbddb.RelSign.validate()V#Constant(I,0)#87
chord.bddbddb.RelSign.validate()V#LocalStore(I,8)#88
chord.bddbddb.RelSign.validate()V#Goto(105)#89
chord.bddbddb.RelSign.validate()V#LocalLoad(I,8)#105
chord.bddbddb.RelSign.validate()V#LocalLoad(I,9)#106
chord.bddbddb.RelSign.validate()V#ConditionalBranch(I,lt,90)#107
chord.bddbddb.RelSign.validate()V#LocalLoad(Ljava/lang/Object;,10)#90
chord.bddbddb.RelSign.validate()V#LocalLoad(I,8)#91
chord.bddbddb.RelSign.validate()V#ArrayLoad(Ljava/lang/Object;)#92
chord.bddbddb.RelSign.validate()V#LocalStore(Ljava/lang/Object;,7)#93
chord.bddbddb.RelSign.validate()V#LocalLoad(Ljava/lang/Object;,7)#94
chord.bddbddb.RelSign.validate()V#LocalLoad(Ljava/lang/Object;,2)#95
chord.bddbddb.RelSign.validate()V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#96
chord.bddbddb.RelSign.validate()V#Constant(I,0)#97
chord.bddbddb.RelSign.validate()V#ConditionalBranch(I,eq,101)#98
chord.bddbddb.RelSign.validate()V#Constant(I,1)#99
chord.bddbddb.RelSign.validate()V#LocalStore(I,6)#100
chord.bddbddb.RelSign.validate()V#LocalLoad(I,8)#101
chord.bddbddb.RelSign.validate()V#Constant(I,1)#102
chord.bddbddb.RelSign.validate()V#BinaryOp(I,add)#103
chord.bddbddb.RelSign.validate()V#LocalStore(I,8)#104
chord.bddbddb.RelSign.validate()V#LocalLoad(I,6)#108
chord.bddbddb.RelSign.validate()V#Constant(I,0)#109
chord.bddbddb.RelSign.validate()V#ConditionalBranch(I,ne,128)#110
chord.bddbddb.RelSign.validate()V#LocalLoad(I,3)#128
chord.bddbddb.RelSign.validate()V#Constant(I,1)#129
chord.bddbddb.RelSign.validate()V#BinaryOp(I,add)#130
chord.bddbddb.RelSign.validate()V#LocalStore(I,3)#131
chord.bddbddb.RelSign.validate()V#Return(V)#135
chord.bddbddb.RelSign.<init>([Ljava/lang/String;Ljava/lang/String;)V#Return(V)#6
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,19)#591
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Goto(599)#592
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,18)#599
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,9)#600
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,19)#601
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#602
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Pop(1)#603
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#58
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,order)#59
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalLoad(I,5)#60
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#61
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#Constant(I,95)#62
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#ConditionalBranch(I,ne,66)#63
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#Constant(I,95)#64
chord.project.analyses.DlogAnalysis.getSubOrder(Ljava/util/List;)Ljava/lang/String;#LocalStore(I,4)#65
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,4)#570
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"output")#571
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#572
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#573
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(I,eq,579)#574
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#575
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,producedRels)#576
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,18)#577
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Goto(586)#578
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Goto(611)#74
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#611
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Get(Z,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,hasNoErrors)#612
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Return(I)#613
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalStore(I,3)#7
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(I,3)#8
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Constant(I,0)#9
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#ConditionalBranch(I,ne,15)#10
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#15
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(VIRTUAL,Lchord/project/analyses/DlogAnalysis;,getDlogName,()Ljava/lang/String;)#16
chord.project.analyses.DlogAnalysis.getDlogName()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.analyses.DlogAnalysis.getDlogName()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,dlogName)#1
chord.project.analyses.DlogAnalysis.getDlogName()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,4)#17
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,4)#18
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Constant(L;,null)#19
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,ne,34)#20
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#34
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/TaskParser;,nameToDlogTaskMap)#35
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,4)#36
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#37
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#CheckCast(Lchord/project/analyses/DlogAnalysis;)#38
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,5)#39
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,5)#40
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Constant(L;,null)#41
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,eq,50)#42
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#50
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/TaskParser;,nameToJavaTaskMap)#51
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,4)#52
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#53
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#CheckCast(Ljava/lang/Class;)#54
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,6)#55
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,6)#56
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Constant(L;,null)#57
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,eq,66)#58
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#66
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(VIRTUAL,Lchord/project/analyses/DlogAnalysis;,getDomNames,()Ljava/util/Set;)#67
chord.project.analyses.DlogAnalysis.getDomNames()Ljava/util/Set;#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.analyses.DlogAnalysis.getDomNames()Ljava/util/Set;#Get(Ljava/util/Set;,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,majorDomNames)#1
chord.project.analyses.DlogAnalysis.getDomNames()Ljava/util/Set;#Return(Ljava/lang/Object;)#2
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,7)#68
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,7)#69
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#70
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,9)#71
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Goto(82)#72
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,9)#82
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#83
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Constant(I,0)#84
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#ConditionalBranch(I,ne,73)#85
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,9)#73
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#74
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#CheckCast(Ljava/lang/String;)#75
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,8)#76
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#77
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,8)#78
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@3acd5e02)#79
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#80
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(SPECIAL,Lchord/project/TaskParser;,createTrgt,(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)V)#81
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)V#New(Lchord/project/TrgtInfo;,0)#0
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)V#Dup(1,0)#1
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#2
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#3
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)V#Constant(L;,null)#4
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)V#Invoke(SPECIAL,Lchord/project/TrgtInfo;,<init>,(Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V)#5
chord.project.TrgtInfo.<init>(Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.TrgtInfo.<init>(Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
chord.project.TrgtInfo.<init>(Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#LocalLoad(Ljava/lang/Object;,0)#2
chord.project.TrgtInfo.<init>(Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#LocalLoad(Ljava/lang/Object;,1)#3
chord.project.TrgtInfo.<init>(Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#Put(Ljava/lang/Class;,NONSTATIC,Lchord/project/TrgtInfo;,type)#4
chord.project.TrgtInfo.<init>(Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#LocalLoad(Ljava/lang/Object;,0)#5
chord.project.TrgtInfo.<init>(Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#LocalLoad(Ljava/lang/Object;,2)#6
chord.project.TrgtInfo.<init>(Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#Put(Ljava/lang/String;,NONSTATIC,Lchord/project/TrgtInfo;,location)#7
chord.project.TrgtInfo.<init>(Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#LocalLoad(Ljava/lang/Object;,0)#8
chord.project.TrgtInfo.<init>(Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#LocalLoad(Ljava/lang/Object;,3)#9
chord.project.TrgtInfo.<init>(Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#Put(Lchord/bddbddb/RelSign;,NONSTATIC,Lchord/project/TrgtInfo;,sign)#10
chord.project.TrgtInfo.<init>(Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#Return(V)#11
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,4)#6
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#7
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#8
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,4)#9
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)V#Invoke(SPECIAL,Lchord/project/TaskParser;,createTrgt,(Ljava/lang/String;Lchord/project/TrgtInfo;)V)#10
chord.project.TaskParser.createTrgt(Ljava/lang/String;Lchord/project/TrgtInfo;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.TaskParser.createTrgt(Ljava/lang/String;Lchord/project/TrgtInfo;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/TaskParser;,nameToTrgtInfosMap)#1
chord.project.TaskParser.createTrgt(Ljava/lang/String;Lchord/project/TrgtInfo;)V#LocalLoad(Ljava/lang/Object;,1)#2
chord.project.TaskParser.createTrgt(Ljava/lang/String;Lchord/project/TrgtInfo;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
chord.project.TaskParser.createTrgt(Ljava/lang/String;Lchord/project/TrgtInfo;)V#CheckCast(Ljava/util/Set;)#4
chord.project.TaskParser.createTrgt(Ljava/lang/String;Lchord/project/TrgtInfo;)V#LocalStore(Ljava/lang/Object;,3)#5
chord.project.TaskParser.createTrgt(Ljava/lang/String;Lchord/project/TrgtInfo;)V#LocalLoad(Ljava/lang/Object;,3)#6
chord.project.TaskParser.createTrgt(Ljava/lang/String;Lchord/project/TrgtInfo;)V#Constant(L;,null)#7
chord.project.TaskParser.createTrgt(Ljava/lang/String;Lchord/project/TrgtInfo;)V#ConditionalBranch(Ljava/lang/Object;,ne,19)#8
chord.project.TaskParser.createTrgt(Ljava/lang/String;Lchord/project/TrgtInfo;)V#New(Ljava/util/HashSet;,0)#9
chord.project.TaskParser.createTrgt(Ljava/lang/String;Lchord/project/TrgtInfo;)V#Dup(1,0)#10
chord.project.TaskParser.createTrgt(Ljava/lang/String;Lchord/project/TrgtInfo;)V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#11
chord.project.TaskParser.createTrgt(Ljava/lang/String;Lchord/project/TrgtInfo;)V#LocalStore(Ljava/lang/Object;,3)#12
chord.project.TaskParser.createTrgt(Ljava/lang/String;Lchord/project/TrgtInfo;)V#LocalLoad(Ljava/lang/Object;,0)#13
chord.project.TaskParser.createTrgt(Ljava/lang/String;Lchord/project/TrgtInfo;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/TaskParser;,nameToTrgtInfosMap)#14
chord.project.TaskParser.createTrgt(Ljava/lang/String;Lchord/project/TrgtInfo;)V#LocalLoad(Ljava/lang/Object;,1)#15
chord.project.TaskParser.createTrgt(Ljava/lang/String;Lchord/project/TrgtInfo;)V#LocalLoad(Ljava/lang/Object;,3)#16
chord.project.TaskParser.createTrgt(Ljava/lang/String;Lchord/project/TrgtInfo;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#17
chord.project.TaskParser.createTrgt(Ljava/lang/String;Lchord/project/TrgtInfo;)V#Pop(1)#18
chord.project.TaskParser.createTrgt(Ljava/lang/String;Lchord/project/TrgtInfo;)V#LocalLoad(Ljava/lang/Object;,3)#19
chord.project.TaskParser.createTrgt(Ljava/lang/String;Lchord/project/TrgtInfo;)V#LocalLoad(Ljava/lang/Object;,2)#20
chord.project.TaskParser.createTrgt(Ljava/lang/String;Lchord/project/TrgtInfo;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#21
chord.project.TaskParser.createTrgt(Ljava/lang/String;Lchord/project/TrgtInfo;)V#Pop(1)#22
chord.project.TaskParser.createTrgt(Ljava/lang/String;Lchord/project/TrgtInfo;)V#Return(V)#23
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)V#Return(V)#11
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#86
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(VIRTUAL,Lchord/project/analyses/DlogAnalysis;,getConsumedRels,()Ljava/util/Map;)#87
chord.project.analyses.DlogAnalysis.getConsumedRels()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.analyses.DlogAnalysis.getConsumedRels()Ljava/util/Map;#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,consumedRels)#1
chord.project.analyses.DlogAnalysis.getConsumedRels()Ljava/util/Map;#Return(Ljava/lang/Object;)#2
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,8)#88
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,8)#89
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,entrySet,()Ljava/util/Set;)#90
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#91
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,10)#92
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Goto(112)#93
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,10)#112
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#113
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Constant(I,0)#114
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#ConditionalBranch(I,ne,94)#115
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,10)#94
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#95
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#CheckCast(Ljava/util/Map$Entry;)#96
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,9)#97
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,9)#98
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map$Entry;,getKey,()Ljava/lang/Object;)#99
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#CheckCast(Ljava/lang/String;)#100
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,11)#101
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,9)#102
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map$Entry;,getValue,()Ljava/lang/Object;)#103
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#CheckCast(Lchord/bddbddb/RelSign;)#104
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,12)#105
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#106
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,11)#107
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@3ad3958b)#108
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#109
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,12)#110
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(SPECIAL,Lchord/project/TaskParser;,createTrgt,(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V)#111
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#LocalLoad(Ljava/lang/Object;,4)#0
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#Invoke(VIRTUAL,Lchord/bddbddb/RelSign;,getDomKinds,()[Ljava/lang/String;)#1
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#New(Ljava/util/ArrayList;,0)#0
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#Dup(1,0)#1
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#2
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#Get(Ljava/lang/Object;,NONSTATIC,Lchord/bddbddb/RelSign;,val0)#3
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#CheckCast([Ljava/lang/String;)#4
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#ArrayLength()#5
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,(I)V)#6
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#LocalStore(Ljava/lang/Object;,1)#7
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#8
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#Get(Ljava/lang/Object;,NONSTATIC,Lchord/bddbddb/RelSign;,val0)#9
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#CheckCast([Ljava/lang/String;)#10
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#Dup(1,0)#11
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#LocalStore(Ljava/lang/Object;,5)#12
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#ArrayLength()#13
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#LocalStore(I,4)#14
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#Constant(I,0)#15
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#LocalStore(I,3)#16
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#Goto(38)#17
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#LocalLoad(I,3)#38
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#LocalLoad(I,4)#39
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#ConditionalBranch(I,lt,18)#40
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,5)#18
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#LocalLoad(I,3)#19
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#ArrayLoad(Ljava/lang/Object;)#20
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#LocalStore(Ljava/lang/Object;,2)#21
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#22
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#Invoke(STATIC,Lchord/util/Utils;,trimNumSuffix,(Ljava/lang/String;)Ljava/lang/String;)#23
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#LocalStore(Ljava/lang/Object;,6)#24
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#25
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,6)#26
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/List;,contains,(Ljava/lang/Object;)Z)#27
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#Constant(I,0)#28
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#ConditionalBranch(I,ne,34)#29
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#30
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,6)#31
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#32
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#Pop(1)#33
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#LocalLoad(I,3)#34
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#Constant(I,1)#35
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#BinaryOp(I,add)#36
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#LocalStore(I,3)#37
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#41
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/List;,size,()I)#42
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#New([Ljava/lang/String;,1)#43
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#LocalStore(Ljava/lang/Object;,2)#44
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#45
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#46
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/List;,toArray,([Ljava/lang/Object;)[Ljava/lang/Object;)#47
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#Pop(1)#48
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#49
chord.bddbddb.RelSign.getDomKinds()[Ljava/lang/String;#Return(Ljava/lang/Object;)#50
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#Dup(1,0)#2
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#LocalStore(Ljava/lang/Object;,8)#3
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#ArrayLength()#4
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#LocalStore(I,7)#5
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#Constant(I,0)#6
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#LocalStore(I,6)#7
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#Goto(22)#8
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#LocalLoad(I,6)#22
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#LocalLoad(I,7)#23
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#ConditionalBranch(I,lt,9)#24
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#LocalLoad(Ljava/lang/Object;,8)#9
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#LocalLoad(I,6)#10
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#ArrayLoad(Ljava/lang/Object;)#11
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#LocalStore(Ljava/lang/Object;,5)#12
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#LocalLoad(Ljava/lang/Object;,0)#13
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#LocalLoad(Ljava/lang/Object;,5)#14
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@3acd5e02)#15
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#LocalLoad(Ljava/lang/Object;,3)#16
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#Invoke(SPECIAL,Lchord/project/TaskParser;,createTrgt,(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)V)#17
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#LocalLoad(I,6)#18
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#Constant(I,1)#19
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#BinaryOp(I,add)#20
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#LocalStore(I,6)#21
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#New(Lchord/project/TrgtInfo;,0)#25
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#Dup(1,0)#26
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#LocalLoad(Ljava/lang/Object;,2)#27
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#LocalLoad(Ljava/lang/Object;,3)#28
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#LocalLoad(Ljava/lang/Object;,4)#29
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#Invoke(SPECIAL,Lchord/project/TrgtInfo;,<init>,(Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V)#30
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#LocalStore(Ljava/lang/Object;,5)#31
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#LocalLoad(Ljava/lang/Object;,0)#32
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#LocalLoad(Ljava/lang/Object;,1)#33
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#LocalLoad(Ljava/lang/Object;,5)#34
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#Invoke(SPECIAL,Lchord/project/TaskParser;,createTrgt,(Ljava/lang/String;Lchord/project/TrgtInfo;)V)#35
chord.project.TaskParser.createTrgt(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V#Return(V)#36
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#116
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(VIRTUAL,Lchord/project/analyses/DlogAnalysis;,getProducedRels,()Ljava/util/Map;)#117
chord.project.analyses.DlogAnalysis.getProducedRels()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.analyses.DlogAnalysis.getProducedRels()Ljava/util/Map;#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,producedRels)#1
chord.project.analyses.DlogAnalysis.getProducedRels()Ljava/util/Map;#Return(Ljava/lang/Object;)#2
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,9)#118
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,9)#119
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,entrySet,()Ljava/util/Set;)#120
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#121
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,11)#122
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Goto(142)#123
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,11)#142
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#143
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Constant(I,0)#144
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#ConditionalBranch(I,ne,124)#145
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,11)#124
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#125
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#CheckCast(Ljava/util/Map$Entry;)#126
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,10)#127
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,10)#128
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map$Entry;,getKey,()Ljava/lang/Object;)#129
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#CheckCast(Ljava/lang/String;)#130
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,12)#131
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,10)#132
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map$Entry;,getValue,()Ljava/lang/Object;)#133
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#CheckCast(Lchord/bddbddb/RelSign;)#134
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,13)#135
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#136
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,12)#137
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@3ad3958b)#138
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#139
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,13)#140
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(SPECIAL,Lchord/project/TaskParser;,createTrgt,(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V)#141
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#146
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,4)#147
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(VIRTUAL,Lchord/project/analyses/DlogAnalysis;,setName,(Ljava/lang/String;)V)#148
chord.project.analyses.JavaAnalysis.setName(Ljava/lang/String;)V#Get(Z,STATIC,Lchord/project/analyses/JavaAnalysis;,$assertionsDisabled)#0
chord.project.analyses.JavaAnalysis.setName(Ljava/lang/String;)V#Constant(I,0)#1
chord.project.analyses.JavaAnalysis.setName(Ljava/lang/String;)V#ConditionalBranch(I,ne,10)#2
chord.project.analyses.JavaAnalysis.setName(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#3
chord.project.analyses.JavaAnalysis.setName(Ljava/lang/String;)V#Constant(L;,null)#4
chord.project.analyses.JavaAnalysis.setName(Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,ne,10)#5
chord.project.analyses.JavaAnalysis.setName(Ljava/lang/String;)V#Get(Z,STATIC,Lchord/project/analyses/JavaAnalysis;,$assertionsDisabled)#10
chord.project.analyses.JavaAnalysis.setName(Ljava/lang/String;)V#Constant(I,0)#11
chord.project.analyses.JavaAnalysis.setName(Ljava/lang/String;)V#ConditionalBranch(I,ne,21)#12
chord.project.analyses.JavaAnalysis.setName(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#13
chord.project.analyses.JavaAnalysis.setName(Ljava/lang/String;)V#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/analyses/JavaAnalysis;,name)#14
chord.project.analyses.JavaAnalysis.setName(Ljava/lang/String;)V#Constant(L;,null)#15
chord.project.analyses.JavaAnalysis.setName(Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,eq,21)#16
chord.project.analyses.JavaAnalysis.setName(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#21
chord.project.analyses.JavaAnalysis.setName(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#22
chord.project.analyses.JavaAnalysis.setName(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lchord/project/analyses/JavaAnalysis;,name)#23
chord.project.analyses.JavaAnalysis.setName(Ljava/lang/String;)V#Return(V)#24
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#149
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/TaskParser;,nameToPrescriberNameMap)#150
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,4)#151
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,4)#152
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#153
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Pop(1)#154
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#New(Ljava/util/ArrayList;,0)#155
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Dup(1,0)#156
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#157
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,10)#158
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,10)#159
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,7)#160
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,addAll,(Ljava/util/Collection;)Z)#161
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Pop(1)#162
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,10)#163
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,8)#164
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,keySet,()Ljava/util/Set;)#165
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,addAll,(Ljava/util/Collection;)Z)#166
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Pop(1)#167
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#168
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/TaskParser;,nameToConsumeNamesMap)#169
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,4)#170
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,10)#171
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#172
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Pop(1)#173
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#New(Ljava/util/ArrayList;,0)#174
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Dup(1,0)#175
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#176
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,11)#177
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,11)#178
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,9)#179
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,keySet,()Ljava/util/Set;)#180
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,addAll,(Ljava/util/Collection;)Z)#181
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Pop(1)#182
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#183
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/TaskParser;,nameToProduceNamesMap)#184
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,4)#185
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,11)#186
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#187
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Pop(1)#188
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Get(Ljava/util/List;,STATIC,Ljava/util/Collections;,EMPTY_LIST)#189
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,12)#190
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#191
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/TaskParser;,nameToControlNamesMap)#192
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,4)#193
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,12)#194
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#195
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Pop(1)#196
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#197
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/TaskParser;,nameToDlogTaskMap)#198
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,4)#199
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#200
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#201
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Pop(1)#202
chord.project.TaskParser.processDlogAnalysis(Ljava/lang/String;)V#Return(V)#203
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,15)#424
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,16)#425
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,8)#426
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,1)#427
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#BinaryOp(I,sub)#428
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(I,19)#429
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,15)#430
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,19)#431
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#432
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(I,20)#433
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,20)#434
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(STATIC,Ljava/lang/Character;,isDigit,(C)Z)#435
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#436
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(I,eq,443)#437
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,19)#438
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,-1)#439
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#BinaryOp(I,add)#440
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(I,19)#441
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Goto(430)#442
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,15)#443
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#444
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,19)#445
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,1)#446
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#BinaryOp(I,add)#447
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,substring,(II)Ljava/lang/String;)#448
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,17)#449
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,15)#450
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,19)#451
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,1)#452
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#BinaryOp(I,add)#453
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,8)#454
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,substring,(II)Ljava/lang/String;)#455
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(STATIC,Ljava/lang/Integer;,parseInt,(Ljava/lang/String;)I)#456
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(I,18)#457
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,14)#392
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,20)#393
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Lgnu/trove/TIntArrayList;,get,(I)I)#394
gnu.trove.TIntArrayList.get(I)I#LocalLoad(I,1)#0
gnu.trove.TIntArrayList.get(I)I#LocalLoad(Ljava/lang/Object;,0)#1
gnu.trove.TIntArrayList.get(I)I#Get(I,NONSTATIC,Lgnu/trove/TIntArrayList;,_pos)#2
gnu.trove.TIntArrayList.get(I)I#ConditionalBranch(I,lt,9)#3
gnu.trove.TIntArrayList.get(I)I#LocalLoad(Ljava/lang/Object;,0)#9
gnu.trove.TIntArrayList.get(I)I#Get([I,NONSTATIC,Lgnu/trove/TIntArrayList;,_data)#10
gnu.trove.TIntArrayList.get(I)I#LocalLoad(I,1)#11
gnu.trove.TIntArrayList.get(I)I#ArrayLoad(I)#12
gnu.trove.TIntArrayList.get(I)I#Return(I)#13
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,18)#395
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#ConditionalBranch(I,ne,402)#396
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,18)#397
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,1)#398
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#BinaryOp(I,add)#399
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(I,18)#400
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Goto(410)#401
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,4)#107
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Constant(I,0)#108
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalLoad(I,5)#109
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,substring,(II)Ljava/lang/String;)#110
chord.project.analyses.DlogAnalysis.parse(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,4)#111
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#Goto(157)#101
chord.project.TaskParser.processDlogAnalysis(Ljava/io/File;)V#Return(V)#157
chord.project.TaskParser.buildDlogAnalysisMap()V#LocalLoad(I,4)#41
chord.project.TaskParser.buildDlogAnalysisMap()V#Constant(I,1)#42
chord.project.TaskParser.buildDlogAnalysisMap()V#BinaryOp(I,add)#43
chord.project.TaskParser.buildDlogAnalysisMap()V#LocalStore(I,4)#44
chord.project.TaskParser.buildDlogAnalysisMap()V#Return(V)#48
chord.project.TaskParser.run()Z#LocalLoad(Ljava/lang/Object;,0)#2
chord.project.TaskParser.run()Z#Invoke(SPECIAL,Lchord/project/TaskParser;,buildJavaAnalysisMap,()V)#3
chord.project.TaskParser.buildJavaAnalysisMap()V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,javaAnalysisPathName)#0
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalStore(Ljava/lang/Object;,1)#1
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalLoad(Ljava/lang/Object;,1)#2
chord.project.TaskParser.buildJavaAnalysisMap()V#Constant(Ljava/lang/String;,"")#3
chord.project.TaskParser.buildJavaAnalysisMap()V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#4
chord.project.TaskParser.buildJavaAnalysisMap()V#Constant(I,0)#5
chord.project.TaskParser.buildJavaAnalysisMap()V#ConditionalBranch(I,eq,8)#6
chord.project.TaskParser.buildJavaAnalysisMap()V#New(Ljava/util/ArrayList;,0)#8
chord.project.TaskParser.buildJavaAnalysisMap()V#Dup(1,0)#9
chord.project.TaskParser.buildJavaAnalysisMap()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#10
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalStore(Ljava/lang/Object;,2)#11
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalLoad(Ljava/lang/Object;,1)#12
chord.project.TaskParser.buildJavaAnalysisMap()V#Get(Ljava/lang/String;,STATIC,Lchord/util/Utils;,PATH_SEPARATOR)#13
chord.project.TaskParser.buildJavaAnalysisMap()V#Invoke(VIRTUAL,Ljava/lang/String;,split,(Ljava/lang/String;)[Ljava/lang/String;)#14
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalStore(Ljava/lang/Object;,3)#15
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalLoad(Ljava/lang/Object;,3)#16
chord.project.TaskParser.buildJavaAnalysisMap()V#Dup(1,0)#17
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalStore(Ljava/lang/Object;,7)#18
chord.project.TaskParser.buildJavaAnalysisMap()V#ArrayLength()#19
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalStore(I,6)#20
chord.project.TaskParser.buildJavaAnalysisMap()V#Constant(I,0)#21
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalStore(I,5)#22
chord.project.TaskParser.buildJavaAnalysisMap()V#Goto(59)#23
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalLoad(I,5)#59
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalLoad(I,6)#60
chord.project.TaskParser.buildJavaAnalysisMap()V#ConditionalBranch(I,lt,24)#61
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalLoad(Ljava/lang/Object;,7)#24
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalLoad(I,5)#25
chord.project.TaskParser.buildJavaAnalysisMap()V#ArrayLoad(Ljava/lang/Object;)#26
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalStore(Ljava/lang/Object;,4)#27
chord.project.TaskParser.buildJavaAnalysisMap()V#New(Ljava/io/File;,0)#28
chord.project.TaskParser.buildJavaAnalysisMap()V#Dup(1,0)#29
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalLoad(Ljava/lang/Object;,4)#30
chord.project.TaskParser.buildJavaAnalysisMap()V#Invoke(SPECIAL,Ljava/io/File;,<init>,(Ljava/lang/String;)V)#31
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalStore(Ljava/lang/Object;,8)#32
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalLoad(Ljava/lang/Object;,8)#33
chord.project.TaskParser.buildJavaAnalysisMap()V#Invoke(VIRTUAL,Ljava/io/File;,exists,()Z)#34
chord.project.TaskParser.buildJavaAnalysisMap()V#Constant(I,0)#35
chord.project.TaskParser.buildJavaAnalysisMap()V#ConditionalBranch(I,ne,42)#36
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalLoad(Ljava/lang/Object;,2)#42
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalLoad(Ljava/lang/Object;,8)#43
chord.project.TaskParser.buildJavaAnalysisMap()V#Invoke(VIRTUAL,Ljava/io/File;,toURL,()Ljava/net/URL;)#44
chord.project.TaskParser.buildJavaAnalysisMap()V#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#45
chord.project.TaskParser.buildJavaAnalysisMap()V#Pop(1)#46
chord.project.TaskParser.buildJavaAnalysisMap()V#Goto(55)#47
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalLoad(I,5)#55
chord.project.TaskParser.buildJavaAnalysisMap()V#Constant(I,1)#56
chord.project.TaskParser.buildJavaAnalysisMap()V#BinaryOp(I,add)#57
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalStore(I,5)#58
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalLoad(Ljava/lang/Object;,2)#62
chord.project.TaskParser.buildJavaAnalysisMap()V#Invoke(VIRTUAL,Ljava/util/ArrayList;,size,()I)#63
chord.project.TaskParser.buildJavaAnalysisMap()V#New([Ljava/net/URL;,1)#64
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalStore(Ljava/lang/Object;,4)#65
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalLoad(Ljava/lang/Object;,2)#66
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalLoad(Ljava/lang/Object;,4)#67
chord.project.TaskParser.buildJavaAnalysisMap()V#Invoke(VIRTUAL,Ljava/util/ArrayList;,toArray,([Ljava/lang/Object;)[Ljava/lang/Object;)#68
chord.project.TaskParser.buildJavaAnalysisMap()V#Pop(1)#69
chord.project.TaskParser.buildJavaAnalysisMap()V#New(Lorg/scannotation/AnnotationDB;,0)#70
chord.project.TaskParser.buildJavaAnalysisMap()V#Dup(1,0)#71
chord.project.TaskParser.buildJavaAnalysisMap()V#Invoke(SPECIAL,Lorg/scannotation/AnnotationDB;,<init>,()V)#72
org.scannotation.AnnotationDB.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
org.scannotation.AnnotationDB.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
org.scannotation.AnnotationDB.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
org.scannotation.AnnotationDB.<init>()V#New(Ljava/util/HashMap;,0)#3
org.scannotation.AnnotationDB.<init>()V#Dup(1,0)#4
org.scannotation.AnnotationDB.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#5
org.scannotation.AnnotationDB.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lorg/scannotation/AnnotationDB;,annotationIndex)#6
org.scannotation.AnnotationDB.<init>()V#LocalLoad(Ljava/lang/Object;,0)#7
org.scannotation.AnnotationDB.<init>()V#New(Ljava/util/HashMap;,0)#8
org.scannotation.AnnotationDB.<init>()V#Dup(1,0)#9
org.scannotation.AnnotationDB.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#10
org.scannotation.AnnotationDB.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lorg/scannotation/AnnotationDB;,implementsIndex)#11
org.scannotation.AnnotationDB.<init>()V#LocalLoad(Ljava/lang/Object;,0)#12
org.scannotation.AnnotationDB.<init>()V#New(Ljava/util/HashMap;,0)#13
org.scannotation.AnnotationDB.<init>()V#Dup(1,0)#14
org.scannotation.AnnotationDB.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#15
org.scannotation.AnnotationDB.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lorg/scannotation/AnnotationDB;,classIndex)#16
org.scannotation.AnnotationDB.<init>()V#LocalLoad(Ljava/lang/Object;,0)#17
org.scannotation.AnnotationDB.<init>()V#Constant(I,1)#18
org.scannotation.AnnotationDB.<init>()V#Put(Z,NONSTATIC,Lorg/scannotation/AnnotationDB;,scanClassAnnotations)#19
org.scannotation.AnnotationDB.<init>()V#LocalLoad(Ljava/lang/Object;,0)#20
org.scannotation.AnnotationDB.<init>()V#Constant(I,1)#21
org.scannotation.AnnotationDB.<init>()V#Put(Z,NONSTATIC,Lorg/scannotation/AnnotationDB;,scanMethodAnnotations)#22
org.scannotation.AnnotationDB.<init>()V#LocalLoad(Ljava/lang/Object;,0)#23
org.scannotation.AnnotationDB.<init>()V#Constant(I,1)#24
org.scannotation.AnnotationDB.<init>()V#Put(Z,NONSTATIC,Lorg/scannotation/AnnotationDB;,scanParameterAnnotations)#25
org.scannotation.AnnotationDB.<init>()V#LocalLoad(Ljava/lang/Object;,0)#26
org.scannotation.AnnotationDB.<init>()V#Constant(I,1)#27
org.scannotation.AnnotationDB.<init>()V#Put(Z,NONSTATIC,Lorg/scannotation/AnnotationDB;,scanFieldAnnotations)#28
org.scannotation.AnnotationDB.<init>()V#LocalLoad(Ljava/lang/Object;,0)#29
org.scannotation.AnnotationDB.<init>()V#Constant(I,5)#30
org.scannotation.AnnotationDB.<init>()V#New([Ljava/lang/String;,1)#31
org.scannotation.AnnotationDB.<init>()V#Dup(1,0)#32
org.scannotation.AnnotationDB.<init>()V#Constant(I,0)#33
org.scannotation.AnnotationDB.<init>()V#Constant(Ljava/lang/String;,"javax")#34
org.scannotation.AnnotationDB.<init>()V#ArrayStore(Ljava/lang/Object;)#35
org.scannotation.AnnotationDB.<init>()V#Dup(1,0)#36
org.scannotation.AnnotationDB.<init>()V#Constant(I,1)#37
org.scannotation.AnnotationDB.<init>()V#Constant(Ljava/lang/String;,"java")#38
org.scannotation.AnnotationDB.<init>()V#ArrayStore(Ljava/lang/Object;)#39
org.scannotation.AnnotationDB.<init>()V#Dup(1,0)#40
org.scannotation.AnnotationDB.<init>()V#Constant(I,2)#41
org.scannotation.AnnotationDB.<init>()V#Constant(Ljava/lang/String;,"sun")#42
org.scannotation.AnnotationDB.<init>()V#ArrayStore(Ljava/lang/Object;)#43
org.scannotation.AnnotationDB.<init>()V#Dup(1,0)#44
org.scannotation.AnnotationDB.<init>()V#Constant(I,3)#45
org.scannotation.AnnotationDB.<init>()V#Constant(Ljava/lang/String;,"com.sun")#46
org.scannotation.AnnotationDB.<init>()V#ArrayStore(Ljava/lang/Object;)#47
org.scannotation.AnnotationDB.<init>()V#Dup(1,0)#48
org.scannotation.AnnotationDB.<init>()V#Constant(I,4)#49
org.scannotation.AnnotationDB.<init>()V#Constant(Ljava/lang/String;,"javassist")#50
org.scannotation.AnnotationDB.<init>()V#ArrayStore(Ljava/lang/Object;)#51
org.scannotation.AnnotationDB.<init>()V#Put([Ljava/lang/String;,NONSTATIC,Lorg/scannotation/AnnotationDB;,ignoredPackages)#52
org.scannotation.AnnotationDB.<init>()V#Return(V)#53
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalStore(Ljava/lang/Object;,5)#73
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalLoad(Ljava/lang/Object;,5)#74
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalLoad(Ljava/lang/Object;,4)#75
chord.project.TaskParser.buildJavaAnalysisMap()V#Invoke(VIRTUAL,Lorg/scannotation/AnnotationDB;,scanArchives,([Ljava/net/URL;)V)#76
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#LocalLoad(Ljava/lang/Object;,1)#0
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#LocalStore(Ljava/lang/Object;,2)#1
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#LocalLoad(Ljava/lang/Object;,2)#2
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#ArrayLength()#3
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#LocalStore(I,3)#4
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#Constant(I,0)#5
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#LocalStore(I,4)#6
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#LocalLoad(I,4)#7
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#LocalLoad(I,3)#8
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#ConditionalBranch(I,ge,38)#9
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#LocalLoad(Ljava/lang/Object;,2)#10
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#LocalLoad(I,4)#11
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#ArrayLoad(Ljava/lang/Object;)#12
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#LocalStore(Ljava/lang/Object;,5)#13
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#New(Lorg/scannotation/AnnotationDB$1;,0)#14
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#Dup(1,0)#15
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#LocalLoad(Ljava/lang/Object;,0)#16
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#Invoke(SPECIAL,Lorg/scannotation/AnnotationDB$1;,<init>,(Lorg/scannotation/AnnotationDB;)V)#17
org.scannotation.AnnotationDB$1.<init>(Lorg/scannotation/AnnotationDB;)V#LocalLoad(Ljava/lang/Object;,0)#0
org.scannotation.AnnotationDB$1.<init>(Lorg/scannotation/AnnotationDB;)V#LocalLoad(Ljava/lang/Object;,1)#1
org.scannotation.AnnotationDB$1.<init>(Lorg/scannotation/AnnotationDB;)V#Put(Lorg/scannotation/AnnotationDB;,NONSTATIC,Lorg/scannotation/AnnotationDB$1;,this$0)#2
org.scannotation.AnnotationDB$1.<init>(Lorg/scannotation/AnnotationDB;)V#LocalLoad(Ljava/lang/Object;,0)#3
org.scannotation.AnnotationDB$1.<init>(Lorg/scannotation/AnnotationDB;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#4
org.scannotation.AnnotationDB$1.<init>(Lorg/scannotation/AnnotationDB;)V#Return(V)#5
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#LocalStore(Ljava/lang/Object;,6)#18
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#LocalLoad(Ljava/lang/Object;,5)#19
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#LocalLoad(Ljava/lang/Object;,6)#20
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#Invoke(STATIC,Lorg/scannotation/archiveiterator/IteratorFactory;,create,(Ljava/net/URL;Lorg/scannotation/archiveiterator/Filter;)Lorg/scannotation/archiveiterator/StreamIterator;)#21
org.scannotation.archiveiterator.IteratorFactory.<clinit>()V#New(Ljava/util/concurrent/ConcurrentHashMap;,0)#0
org.scannotation.archiveiterator.IteratorFactory.<clinit>()V#Dup(1,0)#1
org.scannotation.archiveiterator.IteratorFactory.<clinit>()V#Invoke(SPECIAL,Ljava/util/concurrent/ConcurrentHashMap;,<init>,()V)#2
org.scannotation.archiveiterator.IteratorFactory.<clinit>()V#Put(Ljava/util/concurrent/ConcurrentHashMap;,STATIC,Lorg/scannotation/archiveiterator/IteratorFactory;,registry)#3
org.scannotation.archiveiterator.IteratorFactory.<clinit>()V#Get(Ljava/util/concurrent/ConcurrentHashMap;,STATIC,Lorg/scannotation/archiveiterator/IteratorFactory;,registry)#4
org.scannotation.archiveiterator.IteratorFactory.<clinit>()V#Constant(Ljava/lang/String;,"file")#5
org.scannotation.archiveiterator.IteratorFactory.<clinit>()V#New(Lorg/scannotation/archiveiterator/FileProtocolIteratorFactory;,0)#6
org.scannotation.archiveiterator.IteratorFactory.<clinit>()V#Dup(1,0)#7
org.scannotation.archiveiterator.IteratorFactory.<clinit>()V#Invoke(SPECIAL,Lorg/scannotation/archiveiterator/FileProtocolIteratorFactory;,<init>,()V)#8
org.scannotation.archiveiterator.FileProtocolIteratorFactory.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
org.scannotation.archiveiterator.FileProtocolIteratorFactory.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
org.scannotation.archiveiterator.FileProtocolIteratorFactory.<init>()V#Return(V)#2
org.scannotation.archiveiterator.IteratorFactory.<clinit>()V#Invoke(VIRTUAL,Ljava/util/concurrent/ConcurrentHashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#9
org.scannotation.archiveiterator.IteratorFactory.<clinit>()V#Pop(1)#10
org.scannotation.archiveiterator.IteratorFactory.<clinit>()V#Return(V)#11
org.scannotation.archiveiterator.IteratorFactory.create(Ljava/net/URL;Lorg/scannotation/archiveiterator/Filter;)Lorg/scannotation/archiveiterator/StreamIterator;#LocalLoad(Ljava/lang/Object;,0)#0
org.scannotation.archiveiterator.IteratorFactory.create(Ljava/net/URL;Lorg/scannotation/archiveiterator/Filter;)Lorg/scannotation/archiveiterator/StreamIterator;#Invoke(VIRTUAL,Ljava/net/URL;,toString,()Ljava/lang/String;)#1
org.scannotation.archiveiterator.IteratorFactory.create(Ljava/net/URL;Lorg/scannotation/archiveiterator/Filter;)Lorg/scannotation/archiveiterator/StreamIterator;#LocalStore(Ljava/lang/Object;,2)#2
org.scannotation.archiveiterator.IteratorFactory.create(Ljava/net/URL;Lorg/scannotation/archiveiterator/Filter;)Lorg/scannotation/archiveiterator/StreamIterator;#LocalLoad(Ljava/lang/Object;,2)#3
org.scannotation.archiveiterator.IteratorFactory.create(Ljava/net/URL;Lorg/scannotation/archiveiterator/Filter;)Lorg/scannotation/archiveiterator/StreamIterator;#Constant(Ljava/lang/String;,"!/")#4
org.scannotation.archiveiterator.IteratorFactory.create(Ljava/net/URL;Lorg/scannotation/archiveiterator/Filter;)Lorg/scannotation/archiveiterator/StreamIterator;#Invoke(VIRTUAL,Ljava/lang/String;,endsWith,(Ljava/lang/String;)Z)#5
org.scannotation.archiveiterator.IteratorFactory.create(Ljava/net/URL;Lorg/scannotation/archiveiterator/Filter;)Lorg/scannotation/archiveiterator/StreamIterator;#Constant(I,0)#6
org.scannotation.archiveiterator.IteratorFactory.create(Ljava/net/URL;Lorg/scannotation/archiveiterator/Filter;)Lorg/scannotation/archiveiterator/StreamIterator;#ConditionalBranch(I,eq,25)#7
org.scannotation.archiveiterator.IteratorFactory.create(Ljava/net/URL;Lorg/scannotation/archiveiterator/Filter;)Lorg/scannotation/archiveiterator/StreamIterator;#LocalLoad(Ljava/lang/Object;,2)#25
org.scannotation.archiveiterator.IteratorFactory.create(Ljava/net/URL;Lorg/scannotation/archiveiterator/Filter;)Lorg/scannotation/archiveiterator/StreamIterator;#Constant(Ljava/lang/String;,"/")#26
org.scannotation.archiveiterator.IteratorFactory.create(Ljava/net/URL;Lorg/scannotation/archiveiterator/Filter;)Lorg/scannotation/archiveiterator/StreamIterator;#Invoke(VIRTUAL,Ljava/lang/String;,endsWith,(Ljava/lang/String;)Z)#27
org.scannotation.archiveiterator.IteratorFactory.create(Ljava/net/URL;Lorg/scannotation/archiveiterator/Filter;)Lorg/scannotation/archiveiterator/StreamIterator;#Constant(I,0)#28
org.scannotation.archiveiterator.IteratorFactory.create(Ljava/net/URL;Lorg/scannotation/archiveiterator/Filter;)Lorg/scannotation/archiveiterator/StreamIterator;#ConditionalBranch(I,ne,37)#29
org.scannotation.archiveiterator.IteratorFactory.create(Ljava/net/URL;Lorg/scannotation/archiveiterator/Filter;)Lorg/scannotation/archiveiterator/StreamIterator;#New(Lorg/scannotation/archiveiterator/JarIterator;,0)#30
org.scannotation.archiveiterator.IteratorFactory.create(Ljava/net/URL;Lorg/scannotation/archiveiterator/Filter;)Lorg/scannotation/archiveiterator/StreamIterator;#Dup(1,0)#31
org.scannotation.archiveiterator.IteratorFactory.create(Ljava/net/URL;Lorg/scannotation/archiveiterator/Filter;)Lorg/scannotation/archiveiterator/StreamIterator;#LocalLoad(Ljava/lang/Object;,0)#32
org.scannotation.archiveiterator.IteratorFactory.create(Ljava/net/URL;Lorg/scannotation/archiveiterator/Filter;)Lorg/scannotation/archiveiterator/StreamIterator;#Invoke(VIRTUAL,Ljava/net/URL;,openStream,()Ljava/io/InputStream;)#33
org.scannotation.archiveiterator.IteratorFactory.create(Ljava/net/URL;Lorg/scannotation/archiveiterator/Filter;)Lorg/scannotation/archiveiterator/StreamIterator;#LocalLoad(Ljava/lang/Object;,1)#34
org.scannotation.archiveiterator.IteratorFactory.create(Ljava/net/URL;Lorg/scannotation/archiveiterator/Filter;)Lorg/scannotation/archiveiterator/StreamIterator;#Invoke(SPECIAL,Lorg/scannotation/archiveiterator/JarIterator;,<init>,(Ljava/io/InputStream;Lorg/scannotation/archiveiterator/Filter;)V)#35
org.scannotation.archiveiterator.JarIterator.<init>(Ljava/io/InputStream;Lorg/scannotation/archiveiterator/Filter;)V#LocalLoad(Ljava/lang/Object;,0)#0
org.scannotation.archiveiterator.JarIterator.<init>(Ljava/io/InputStream;Lorg/scannotation/archiveiterator/Filter;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
org.scannotation.archiveiterator.JarIterator.<init>(Ljava/io/InputStream;Lorg/scannotation/archiveiterator/Filter;)V#LocalLoad(Ljava/lang/Object;,0)#2
org.scannotation.archiveiterator.JarIterator.<init>(Ljava/io/InputStream;Lorg/scannotation/archiveiterator/Filter;)V#Constant(I,1)#3
org.scannotation.archiveiterator.JarIterator.<init>(Ljava/io/InputStream;Lorg/scannotation/archiveiterator/Filter;)V#Put(Z,NONSTATIC,Lorg/scannotation/archiveiterator/JarIterator;,initial)#4
org.scannotation.archiveiterator.JarIterator.<init>(Ljava/io/InputStream;Lorg/scannotation/archiveiterator/Filter;)V#LocalLoad(Ljava/lang/Object;,0)#5
org.scannotation.archiveiterator.JarIterator.<init>(Ljava/io/InputStream;Lorg/scannotation/archiveiterator/Filter;)V#Constant(I,0)#6
org.scannotation.archiveiterator.JarIterator.<init>(Ljava/io/InputStream;Lorg/scannotation/archiveiterator/Filter;)V#Put(Z,NONSTATIC,Lorg/scannotation/archiveiterator/JarIterator;,closed)#7
org.scannotation.archiveiterator.JarIterator.<init>(Ljava/io/InputStream;Lorg/scannotation/archiveiterator/Filter;)V#LocalLoad(Ljava/lang/Object;,0)#8
org.scannotation.archiveiterator.JarIterator.<init>(Ljava/io/InputStream;Lorg/scannotation/archiveiterator/Filter;)V#LocalLoad(Ljava/lang/Object;,2)#9
org.scannotation.archiveiterator.JarIterator.<init>(Ljava/io/InputStream;Lorg/scannotation/archiveiterator/Filter;)V#Put(Lorg/scannotation/archiveiterator/Filter;,NONSTATIC,Lorg/scannotation/archiveiterator/JarIterator;,filter)#10
org.scannotation.archiveiterator.JarIterator.<init>(Ljava/io/InputStream;Lorg/scannotation/archiveiterator/Filter;)V#LocalLoad(Ljava/lang/Object;,0)#11
org.scannotation.archiveiterator.JarIterator.<init>(Ljava/io/InputStream;Lorg/scannotation/archiveiterator/Filter;)V#New(Ljava/util/jar/JarInputStream;,0)#12
org.scannotation.archiveiterator.JarIterator.<init>(Ljava/io/InputStream;Lorg/scannotation/archiveiterator/Filter;)V#Dup(1,0)#13
org.scannotation.archiveiterator.JarIterator.<init>(Ljava/io/InputStream;Lorg/scannotation/archiveiterator/Filter;)V#LocalLoad(Ljava/lang/Object;,1)#14
org.scannotation.archiveiterator.JarIterator.<init>(Ljava/io/InputStream;Lorg/scannotation/archiveiterator/Filter;)V#Invoke(SPECIAL,Ljava/util/jar/JarInputStream;,<init>,(Ljava/io/InputStream;)V)#15
org.scannotation.archiveiterator.JarIterator.<init>(Ljava/io/InputStream;Lorg/scannotation/archiveiterator/Filter;)V#Put(Ljava/util/jar/JarInputStream;,NONSTATIC,Lorg/scannotation/archiveiterator/JarIterator;,jar)#16
org.scannotation.archiveiterator.JarIterator.<init>(Ljava/io/InputStream;Lorg/scannotation/archiveiterator/Filter;)V#Return(V)#17
org.scannotation.archiveiterator.IteratorFactory.create(Ljava/net/URL;Lorg/scannotation/archiveiterator/Filter;)Lorg/scannotation/archiveiterator/StreamIterator;#Return(Ljava/lang/Object;)#36
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#LocalStore(Ljava/lang/Object;,7)#22
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#LocalLoad(Ljava/lang/Object;,7)#23
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#Invoke(INTERFACE,Lorg/scannotation/archiveiterator/StreamIterator;,next,()Ljava/io/InputStream;)#24
org.scannotation.archiveiterator.JarIterator.next()Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,0)#0
org.scannotation.archiveiterator.JarIterator.next()Ljava/io/InputStream;#Get(Z,NONSTATIC,Lorg/scannotation/archiveiterator/JarIterator;,closed)#1
org.scannotation.archiveiterator.JarIterator.next()Ljava/io/InputStream;#Constant(I,0)#2
org.scannotation.archiveiterator.JarIterator.next()Ljava/io/InputStream;#ConditionalBranch(I,ne,12)#3
org.scannotation.archiveiterator.JarIterator.next()Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,0)#4
org.scannotation.archiveiterator.JarIterator.next()Ljava/io/InputStream;#Get(Ljava/util/jar/JarEntry;,NONSTATIC,Lorg/scannotation/archiveiterator/JarIterator;,next)#5
org.scannotation.archiveiterator.JarIterator.next()Ljava/io/InputStream;#Constant(L;,null)#6
org.scannotation.archiveiterator.JarIterator.next()Ljava/io/InputStream;#ConditionalBranch(Ljava/lang/Object;,ne,14)#7
org.scannotation.archiveiterator.JarIterator.next()Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,0)#8
org.scannotation.archiveiterator.JarIterator.next()Ljava/io/InputStream;#Get(Z,NONSTATIC,Lorg/scannotation/archiveiterator/JarIterator;,initial)#9
org.scannotation.archiveiterator.JarIterator.next()Ljava/io/InputStream;#Constant(I,0)#10
org.scannotation.archiveiterator.JarIterator.next()Ljava/io/InputStream;#ConditionalBranch(I,ne,14)#11
org.scannotation.archiveiterator.JarIterator.next()Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,0)#14
org.scannotation.archiveiterator.JarIterator.next()Ljava/io/InputStream;#Invoke(SPECIAL,Lorg/scannotation/archiveiterator/JarIterator;,setNext,()V)#15
org.scannotation.archiveiterator.JarIterator.setNext()V#LocalLoad(Ljava/lang/Object;,0)#0
org.scannotation.archiveiterator.JarIterator.setNext()V#Constant(I,1)#1
org.scannotation.archiveiterator.JarIterator.setNext()V#Put(Z,NONSTATIC,Lorg/scannotation/archiveiterator/JarIterator;,initial)#2
org.scannotation.archiveiterator.JarIterator.setNext()V#LocalLoad(Ljava/lang/Object;,0)#3
org.scannotation.archiveiterator.JarIterator.setNext()V#Get(Ljava/util/jar/JarEntry;,NONSTATIC,Lorg/scannotation/archiveiterator/JarIterator;,next)#4
org.scannotation.archiveiterator.JarIterator.setNext()V#Constant(L;,null)#5
org.scannotation.archiveiterator.JarIterator.setNext()V#ConditionalBranch(Ljava/lang/Object;,eq,10)#6
org.scannotation.archiveiterator.JarIterator.setNext()V#LocalLoad(Ljava/lang/Object;,0)#10
org.scannotation.archiveiterator.JarIterator.setNext()V#Constant(L;,null)#11
org.scannotation.archiveiterator.JarIterator.setNext()V#Put(Ljava/util/jar/JarEntry;,NONSTATIC,Lorg/scannotation/archiveiterator/JarIterator;,next)#12
org.scannotation.archiveiterator.JarIterator.setNext()V#LocalLoad(Ljava/lang/Object;,0)#13
org.scannotation.archiveiterator.JarIterator.setNext()V#LocalLoad(Ljava/lang/Object;,0)#14
org.scannotation.archiveiterator.JarIterator.setNext()V#Get(Ljava/util/jar/JarInputStream;,NONSTATIC,Lorg/scannotation/archiveiterator/JarIterator;,jar)#15
org.scannotation.archiveiterator.JarIterator.setNext()V#Invoke(VIRTUAL,Ljava/util/jar/JarInputStream;,getNextJarEntry,()Ljava/util/jar/JarEntry;)#16
org.scannotation.archiveiterator.JarIterator.setNext()V#Put(Ljava/util/jar/JarEntry;,NONSTATIC,Lorg/scannotation/archiveiterator/JarIterator;,next)#17
org.scannotation.archiveiterator.JarIterator.setNext()V#LocalLoad(Ljava/lang/Object;,0)#18
org.scannotation.archiveiterator.JarIterator.setNext()V#Get(Ljava/util/jar/JarEntry;,NONSTATIC,Lorg/scannotation/archiveiterator/JarIterator;,next)#19
org.scannotation.archiveiterator.JarIterator.setNext()V#Constant(L;,null)#20
org.scannotation.archiveiterator.JarIterator.setNext()V#ConditionalBranch(Ljava/lang/Object;,eq,39)#21
org.scannotation.archiveiterator.JarIterator.setNext()V#LocalLoad(Ljava/lang/Object;,0)#22
org.scannotation.archiveiterator.JarIterator.setNext()V#Get(Ljava/util/jar/JarEntry;,NONSTATIC,Lorg/scannotation/archiveiterator/JarIterator;,next)#23
org.scannotation.archiveiterator.JarIterator.setNext()V#Invoke(VIRTUAL,Ljava/util/jar/JarEntry;,isDirectory,()Z)#24
org.scannotation.archiveiterator.JarIterator.setNext()V#Constant(I,0)#25
org.scannotation.archiveiterator.JarIterator.setNext()V#ConditionalBranch(I,ne,13)#26
org.scannotation.archiveiterator.JarIterator.setNext()V#LocalLoad(Ljava/lang/Object;,0)#27
org.scannotation.archiveiterator.JarIterator.setNext()V#Get(Lorg/scannotation/archiveiterator/Filter;,NONSTATIC,Lorg/scannotation/archiveiterator/JarIterator;,filter)#28
org.scannotation.archiveiterator.JarIterator.setNext()V#Constant(L;,null)#29
org.scannotation.archiveiterator.JarIterator.setNext()V#ConditionalBranch(Ljava/lang/Object;,eq,13)#30
org.scannotation.archiveiterator.JarIterator.setNext()V#LocalLoad(Ljava/lang/Object;,0)#31
org.scannotation.archiveiterator.JarIterator.setNext()V#Get(Lorg/scannotation/archiveiterator/Filter;,NONSTATIC,Lorg/scannotation/archiveiterator/JarIterator;,filter)#32
org.scannotation.archiveiterator.JarIterator.setNext()V#LocalLoad(Ljava/lang/Object;,0)#33
org.scannotation.archiveiterator.JarIterator.setNext()V#Get(Ljava/util/jar/JarEntry;,NONSTATIC,Lorg/scannotation/archiveiterator/JarIterator;,next)#34
org.scannotation.archiveiterator.JarIterator.setNext()V#Invoke(VIRTUAL,Ljava/util/jar/JarEntry;,getName,()Ljava/lang/String;)#35
org.scannotation.archiveiterator.JarIterator.setNext()V#Invoke(INTERFACE,Lorg/scannotation/archiveiterator/Filter;,accepts,(Ljava/lang/String;)Z)#36
org.scannotation.AnnotationDB$1.accepts(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#0
org.scannotation.AnnotationDB$1.accepts(Ljava/lang/String;)Z#Constant(Ljava/lang/String;,".class")#1
org.scannotation.AnnotationDB$1.accepts(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,endsWith,(Ljava/lang/String;)Z)#2
org.scannotation.AnnotationDB$1.accepts(Ljava/lang/String;)Z#Constant(I,0)#3
org.scannotation.AnnotationDB$1.accepts(Ljava/lang/String;)Z#ConditionalBranch(I,eq,25)#4
org.scannotation.AnnotationDB$1.accepts(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#5
org.scannotation.AnnotationDB$1.accepts(Ljava/lang/String;)Z#Constant(Ljava/lang/String;,"/")#6
org.scannotation.AnnotationDB$1.accepts(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,startsWith,(Ljava/lang/String;)Z)#7
org.scannotation.AnnotationDB$1.accepts(Ljava/lang/String;)Z#Constant(I,0)#8
org.scannotation.AnnotationDB$1.accepts(Ljava/lang/String;)Z#ConditionalBranch(I,eq,14)#9
org.scannotation.AnnotationDB$1.accepts(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#14
org.scannotation.AnnotationDB$1.accepts(Ljava/lang/String;)Z#Get(Lorg/scannotation/AnnotationDB;,NONSTATIC,Lorg/scannotation/AnnotationDB$1;,this$0)#15
org.scannotation.AnnotationDB$1.accepts(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#16
org.scannotation.AnnotationDB$1.accepts(Ljava/lang/String;)Z#Constant(I,47)#17
org.scannotation.AnnotationDB$1.accepts(Ljava/lang/String;)Z#Constant(I,46)#18
org.scannotation.AnnotationDB$1.accepts(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,replace,(CC)Ljava/lang/String;)#19
org.scannotation.AnnotationDB$1.accepts(Ljava/lang/String;)Z#Invoke(STATIC,Lorg/scannotation/AnnotationDB;,access$000,(Lorg/scannotation/AnnotationDB;Ljava/lang/String;)Z)#20
org.scannotation.AnnotationDB.access$000(Lorg/scannotation/AnnotationDB;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#0
org.scannotation.AnnotationDB.access$000(Lorg/scannotation/AnnotationDB;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#1
org.scannotation.AnnotationDB.access$000(Lorg/scannotation/AnnotationDB;Ljava/lang/String;)Z#Invoke(SPECIAL,Lorg/scannotation/AnnotationDB;,ignoreScan,(Ljava/lang/String;)Z)#2
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,0)#0
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#Get([Ljava/lang/String;,NONSTATIC,Lorg/scannotation/AnnotationDB;,ignoredPackages)#1
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,2)#2
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,2)#3
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#ArrayLength()#4
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#LocalStore(I,3)#5
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#Constant(I,0)#6
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#LocalStore(I,4)#7
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#LocalLoad(I,4)#8
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#LocalLoad(I,3)#9
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#ConditionalBranch(I,ge,34)#10
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,2)#11
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#LocalLoad(I,4)#12
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#ArrayLoad(Ljava/lang/Object;)#13
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#LocalStore(Ljava/lang/Object;,5)#14
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#15
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#New(Ljava/lang/StringBuilder;,0)#16
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#Dup(1,0)#17
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#18
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,5)#19
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#20
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#Constant(Ljava/lang/String;,".")#21
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#22
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#23
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,startsWith,(Ljava/lang/String;)Z)#24
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#Constant(I,0)#25
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#ConditionalBranch(I,eq,29)#26
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#LocalLoad(I,4)#29
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#Constant(I,1)#30
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#BinaryOp(I,add)#31
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#LocalStore(I,4)#32
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#Goto(8)#33
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#Constant(I,0)#34
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#Return(I)#35
org.scannotation.AnnotationDB.access$000(Lorg/scannotation/AnnotationDB;Ljava/lang/String;)Z#Return(I)#3
org.scannotation.AnnotationDB$1.accepts(Ljava/lang/String;)Z#Constant(I,0)#21
org.scannotation.AnnotationDB$1.accepts(Ljava/lang/String;)Z#ConditionalBranch(I,ne,25)#22
org.scannotation.AnnotationDB$1.accepts(Ljava/lang/String;)Z#Constant(I,1)#23
org.scannotation.AnnotationDB$1.accepts(Ljava/lang/String;)Z#Return(I)#24
org.scannotation.archiveiterator.JarIterator.setNext()V#Constant(I,0)#37
org.scannotation.archiveiterator.JarIterator.setNext()V#ConditionalBranch(I,eq,13)#38
org.scannotation.archiveiterator.JarIterator.setNext()V#LocalLoad(Ljava/lang/Object;,0)#39
org.scannotation.archiveiterator.JarIterator.setNext()V#Get(Ljava/util/jar/JarEntry;,NONSTATIC,Lorg/scannotation/archiveiterator/JarIterator;,next)#40
org.scannotation.archiveiterator.JarIterator.setNext()V#Constant(L;,null)#41
org.scannotation.archiveiterator.JarIterator.setNext()V#ConditionalBranch(Ljava/lang/Object;,ne,45)#42
org.scannotation.archiveiterator.JarIterator.setNext()V#Goto(53)#45
org.scannotation.archiveiterator.JarIterator.setNext()V#Return(V)#53
org.scannotation.archiveiterator.JarIterator.next()Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,0)#16
org.scannotation.archiveiterator.JarIterator.next()Ljava/io/InputStream;#Get(Ljava/util/jar/JarEntry;,NONSTATIC,Lorg/scannotation/archiveiterator/JarIterator;,next)#17
org.scannotation.archiveiterator.JarIterator.next()Ljava/io/InputStream;#Constant(L;,null)#18
org.scannotation.archiveiterator.JarIterator.next()Ljava/io/InputStream;#ConditionalBranch(Ljava/lang/Object;,ne,22)#19
org.scannotation.archiveiterator.JarIterator.next()Ljava/io/InputStream;#New(Lorg/scannotation/archiveiterator/InputStreamWrapper;,0)#22
org.scannotation.archiveiterator.JarIterator.next()Ljava/io/InputStream;#Dup(1,0)#23
org.scannotation.archiveiterator.JarIterator.next()Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,0)#24
org.scannotation.archiveiterator.JarIterator.next()Ljava/io/InputStream;#Get(Ljava/util/jar/JarInputStream;,NONSTATIC,Lorg/scannotation/archiveiterator/JarIterator;,jar)#25
org.scannotation.archiveiterator.JarIterator.next()Ljava/io/InputStream;#Invoke(SPECIAL,Lorg/scannotation/archiveiterator/InputStreamWrapper;,<init>,(Ljava/io/InputStream;)V)#26
org.scannotation.archiveiterator.InputStreamWrapper.<init>(Ljava/io/InputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
org.scannotation.archiveiterator.InputStreamWrapper.<init>(Ljava/io/InputStream;)V#Invoke(SPECIAL,Ljava/io/InputStream;,<init>,()V)#1
org.scannotation.archiveiterator.InputStreamWrapper.<init>(Ljava/io/InputStream;)V#LocalLoad(Ljava/lang/Object;,0)#2
org.scannotation.archiveiterator.InputStreamWrapper.<init>(Ljava/io/InputStream;)V#LocalLoad(Ljava/lang/Object;,1)#3
org.scannotation.archiveiterator.InputStreamWrapper.<init>(Ljava/io/InputStream;)V#Put(Ljava/io/InputStream;,NONSTATIC,Lorg/scannotation/archiveiterator/InputStreamWrapper;,delegate)#4
org.scannotation.archiveiterator.InputStreamWrapper.<init>(Ljava/io/InputStream;)V#Return(V)#5
org.scannotation.archiveiterator.JarIterator.next()Ljava/io/InputStream;#Return(Ljava/lang/Object;)#27
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#Dup(1,0)#25
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#LocalStore(Ljava/lang/Object;,8)#26
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#Constant(L;,null)#27
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#ConditionalBranch(Ljava/lang/Object;,eq,33)#28
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#LocalLoad(Ljava/lang/Object;,0)#29
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#LocalLoad(Ljava/lang/Object;,8)#30
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#Invoke(VIRTUAL,Lorg/scannotation/AnnotationDB;,scanClass,(Ljava/io/InputStream;)V)#31
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#New(Ljava/io/DataInputStream;,0)#0
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Dup(1,0)#1
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#New(Ljava/io/BufferedInputStream;,0)#2
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Dup(1,0)#3
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalLoad(Ljava/lang/Object;,1)#4
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Invoke(SPECIAL,Ljava/io/BufferedInputStream;,<init>,(Ljava/io/InputStream;)V)#5
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Invoke(SPECIAL,Ljava/io/DataInputStream;,<init>,(Ljava/io/InputStream;)V)#6
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalStore(Ljava/lang/Object;,2)#7
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Constant(L;,null)#8
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalStore(Ljava/lang/Object;,3)#9
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#New(Ljavassist/bytecode/ClassFile;,0)#10
javassist.bytecode.ClassFile.<clinit>()V#Constant(I,47)#0
javassist.bytecode.ClassFile.<clinit>()V#Put(I,STATIC,Ljavassist/bytecode/ClassFile;,MAJOR_VERSION)#1
javassist.bytecode.ClassFile.<clinit>()V#Constant(Ljava/lang/String;,"java.lang.StringBuilder")#2
javassist.bytecode.ClassFile.<clinit>()V#Invoke(STATIC,Ljava/lang/Class;,forName,(Ljava/lang/String;)Ljava/lang/Class;)#3
javassist.bytecode.ClassFile.<clinit>()V#Pop(1)#4
javassist.bytecode.ClassFile.<clinit>()V#Constant(I,49)#5
javassist.bytecode.ClassFile.<clinit>()V#Put(I,STATIC,Ljavassist/bytecode/ClassFile;,MAJOR_VERSION)#6
javassist.bytecode.ClassFile.<clinit>()V#Goto(9)#7
javassist.bytecode.ClassFile.<clinit>()V#Return(V)#9
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Dup(1,0)#11
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalLoad(Ljava/lang/Object;,2)#12
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/ClassFile;,<init>,(Ljava/io/DataInputStream;)V)#13
javassist.bytecode.ClassFile.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.ClassFile.<init>(Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
javassist.bytecode.ClassFile.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#2
javassist.bytecode.ClassFile.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#3
javassist.bytecode.ClassFile.<init>(Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/ClassFile;,read,(Ljava/io/DataInputStream;)V)#4
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#0
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readInt,()I)#1
org.scannotation.archiveiterator.InputStreamWrapper.read([BII)I#LocalLoad(Ljava/lang/Object;,0)#0
org.scannotation.archiveiterator.InputStreamWrapper.read([BII)I#Get(Ljava/io/InputStream;,NONSTATIC,Lorg/scannotation/archiveiterator/InputStreamWrapper;,delegate)#1
org.scannotation.archiveiterator.InputStreamWrapper.read([BII)I#LocalLoad(Ljava/lang/Object;,1)#2
org.scannotation.archiveiterator.InputStreamWrapper.read([BII)I#LocalLoad(I,2)#3
org.scannotation.archiveiterator.InputStreamWrapper.read([BII)I#LocalLoad(I,3)#4
org.scannotation.archiveiterator.InputStreamWrapper.read([BII)I#Invoke(VIRTUAL,Ljava/io/InputStream;,read,([BII)I)#5
org.scannotation.archiveiterator.InputStreamWrapper.read([BII)I#Return(I)#6
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalStore(I,4)#2
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(I,4)#3
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Constant(I,-889275714)#4
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#ConditionalBranch(I,eq,19)#5
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#19
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#20
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#21
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Put(I,NONSTATIC,Ljavassist/bytecode/ClassFile;,minor)#22
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#23
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#24
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#25
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Put(I,NONSTATIC,Ljavassist/bytecode/ClassFile;,major)#26
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#27
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#New(Ljavassist/bytecode/ConstPool;,0)#28
javassist.bytecode.ConstPool.<clinit>()V#Constant(L;,null)#0
javassist.bytecode.ConstPool.<clinit>()V#Put(Ljavassist/CtClass;,STATIC,Ljavassist/bytecode/ConstPool;,THIS)#1
javassist.bytecode.ConstPool.<clinit>()V#Return(V)#2
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Dup(1,0)#29
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#30
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/ConstPool;,<init>,(Ljava/io/DataInputStream;)V)#31
javassist.bytecode.ConstPool.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.ConstPool.<init>(Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
javassist.bytecode.ConstPool.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#2
javassist.bytecode.ConstPool.<init>(Ljava/io/DataInputStream;)V#New(Ljava/util/HashMap;,0)#3
javassist.bytecode.ConstPool.<init>(Ljava/io/DataInputStream;)V#Dup(1,0)#4
javassist.bytecode.ConstPool.<init>(Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#5
javassist.bytecode.ConstPool.<init>(Ljava/io/DataInputStream;)V#Put(Ljava/util/HashMap;,NONSTATIC,Ljavassist/bytecode/ConstPool;,classes)#6
javassist.bytecode.ConstPool.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#7
javassist.bytecode.ConstPool.<init>(Ljava/io/DataInputStream;)V#New(Ljava/util/HashMap;,0)#8
javassist.bytecode.ConstPool.<init>(Ljava/io/DataInputStream;)V#Dup(1,0)#9
javassist.bytecode.ConstPool.<init>(Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#10
javassist.bytecode.ConstPool.<init>(Ljava/io/DataInputStream;)V#Put(Ljava/util/HashMap;,NONSTATIC,Ljavassist/bytecode/ConstPool;,strings)#11
javassist.bytecode.ConstPool.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#12
javassist.bytecode.ConstPool.<init>(Ljava/io/DataInputStream;)V#Constant(I,32)#13
javassist.bytecode.ConstPool.<init>(Ljava/io/DataInputStream;)V#New([Ljavassist/bytecode/ConstInfo;,1)#14
javassist.bytecode.ConstPool.<init>(Ljava/io/DataInputStream;)V#Put([Ljavassist/bytecode/ConstInfo;,NONSTATIC,Ljavassist/bytecode/ConstPool;,constInfoCache)#15
javassist.bytecode.ConstPool.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#16
javassist.bytecode.ConstPool.<init>(Ljava/io/DataInputStream;)V#Constant(I,32)#17
javassist.bytecode.ConstPool.<init>(Ljava/io/DataInputStream;)V#New([I,1)#18
javassist.bytecode.ConstPool.<init>(Ljava/io/DataInputStream;)V#Put([I,NONSTATIC,Ljavassist/bytecode/ConstPool;,constInfoIndexCache)#19
javassist.bytecode.ConstPool.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#20
javassist.bytecode.ConstPool.<init>(Ljava/io/DataInputStream;)V#Constant(I,0)#21
javassist.bytecode.ConstPool.<init>(Ljava/io/DataInputStream;)V#Put(I,NONSTATIC,Ljavassist/bytecode/ConstPool;,thisClassInfo)#22
javassist.bytecode.ConstPool.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#23
javassist.bytecode.ConstPool.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#24
javassist.bytecode.ConstPool.<init>(Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/ConstPool;,read,(Ljava/io/DataInputStream;)V)#25
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#0
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#1
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#LocalStore(I,2)#2
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#3
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#New(Ljavassist/bytecode/LongVector;,0)#4
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#Dup(1,0)#5
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#LocalLoad(I,2)#6
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/LongVector;,<init>,(I)V)#7
javassist.bytecode.LongVector.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.LongVector.<init>(I)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
javassist.bytecode.LongVector.<init>(I)V#LocalLoad(I,1)#2
javassist.bytecode.LongVector.<init>(I)V#Constant(I,7)#3
javassist.bytecode.LongVector.<init>(I)V#Shift(I,SHR)#4
javassist.bytecode.LongVector.<init>(I)V#Constant(I,-8)#5
javassist.bytecode.LongVector.<init>(I)V#BinaryOp(I,and)#6
javassist.bytecode.LongVector.<init>(I)V#Constant(I,8)#7
javassist.bytecode.LongVector.<init>(I)V#BinaryOp(I,add)#8
javassist.bytecode.LongVector.<init>(I)V#LocalStore(I,2)#9
javassist.bytecode.LongVector.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#10
javassist.bytecode.LongVector.<init>(I)V#LocalLoad(I,2)#11
javassist.bytecode.LongVector.<init>(I)V#New([[Ljavassist/bytecode/ConstInfo;,1)#12
javassist.bytecode.LongVector.<init>(I)V#Put([[Ljavassist/bytecode/ConstInfo;,NONSTATIC,Ljavassist/bytecode/LongVector;,objects)#13
javassist.bytecode.LongVector.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#14
javassist.bytecode.LongVector.<init>(I)V#Constant(I,0)#15
javassist.bytecode.LongVector.<init>(I)V#Put(I,NONSTATIC,Ljavassist/bytecode/LongVector;,elements)#16
javassist.bytecode.LongVector.<init>(I)V#Return(V)#17
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#Put(Ljavassist/bytecode/LongVector;,NONSTATIC,Ljavassist/bytecode/ConstPool;,items)#8
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#9
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#Constant(I,0)#10
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#Put(I,NONSTATIC,Ljavassist/bytecode/ConstPool;,numOfItems)#11
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#12
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#Constant(L;,null)#13
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/ConstPool;,addItem,(Ljavassist/bytecode/ConstInfo;)I)#14
javassist.bytecode.ConstPool.addItem(Ljavassist/bytecode/ConstInfo;)I#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.ConstPool.addItem(Ljavassist/bytecode/ConstInfo;)I#Get(Ljavassist/bytecode/LongVector;,NONSTATIC,Ljavassist/bytecode/ConstPool;,items)#1
javassist.bytecode.ConstPool.addItem(Ljavassist/bytecode/ConstInfo;)I#LocalLoad(Ljava/lang/Object;,1)#2
javassist.bytecode.ConstPool.addItem(Ljavassist/bytecode/ConstInfo;)I#Invoke(VIRTUAL,Ljavassist/bytecode/LongVector;,addElement,(Ljavassist/bytecode/ConstInfo;)V)#3
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#Get(I,NONSTATIC,Ljavassist/bytecode/LongVector;,elements)#1
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#Constant(I,7)#2
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#Shift(I,SHR)#3
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#LocalStore(I,2)#4
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#LocalLoad(Ljava/lang/Object;,0)#5
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#Get(I,NONSTATIC,Ljavassist/bytecode/LongVector;,elements)#6
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#Constant(I,127)#7
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#BinaryOp(I,and)#8
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#LocalStore(I,3)#9
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#LocalLoad(Ljava/lang/Object;,0)#10
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#Get([[Ljavassist/bytecode/ConstInfo;,NONSTATIC,Ljavassist/bytecode/LongVector;,objects)#11
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#ArrayLength()#12
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#LocalStore(I,4)#13
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#LocalLoad(I,2)#14
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#LocalLoad(I,4)#15
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#ConditionalBranch(I,lt,32)#16
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#LocalLoad(Ljava/lang/Object;,0)#32
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#Get([[Ljavassist/bytecode/ConstInfo;,NONSTATIC,Ljavassist/bytecode/LongVector;,objects)#33
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#LocalLoad(I,2)#34
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#ArrayLoad(Ljava/lang/Object;)#35
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#Constant(L;,null)#36
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#ConditionalBranch(Ljava/lang/Object;,ne,44)#37
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#LocalLoad(Ljava/lang/Object;,0)#38
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#Get([[Ljavassist/bytecode/ConstInfo;,NONSTATIC,Ljavassist/bytecode/LongVector;,objects)#39
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#LocalLoad(I,2)#40
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#Constant(I,128)#41
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#New([Ljavassist/bytecode/ConstInfo;,1)#42
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#ArrayStore(Ljava/lang/Object;)#43
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#LocalLoad(Ljava/lang/Object;,0)#44
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#Get([[Ljavassist/bytecode/ConstInfo;,NONSTATIC,Ljavassist/bytecode/LongVector;,objects)#45
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#LocalLoad(I,2)#46
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#ArrayLoad(Ljava/lang/Object;)#47
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#LocalLoad(I,3)#48
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#LocalLoad(Ljava/lang/Object;,1)#49
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#ArrayStore(Ljava/lang/Object;)#50
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#LocalLoad(Ljava/lang/Object;,0)#51
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#Dup(1,0)#52
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#Get(I,NONSTATIC,Ljavassist/bytecode/LongVector;,elements)#53
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#Constant(I,1)#54
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#BinaryOp(I,add)#55
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#Put(I,NONSTATIC,Ljavassist/bytecode/LongVector;,elements)#56
javassist.bytecode.LongVector.addElement(Ljavassist/bytecode/ConstInfo;)V#Return(V)#57
javassist.bytecode.ConstPool.addItem(Ljavassist/bytecode/ConstInfo;)I#LocalLoad(Ljava/lang/Object;,0)#4
javassist.bytecode.ConstPool.addItem(Ljavassist/bytecode/ConstInfo;)I#Dup(1,0)#5
javassist.bytecode.ConstPool.addItem(Ljavassist/bytecode/ConstInfo;)I#Get(I,NONSTATIC,Ljavassist/bytecode/ConstPool;,numOfItems)#6
javassist.bytecode.ConstPool.addItem(Ljavassist/bytecode/ConstInfo;)I#Dup(1,1)#7
javassist.bytecode.ConstPool.addItem(Ljavassist/bytecode/ConstInfo;)I#Constant(I,1)#8
javassist.bytecode.ConstPool.addItem(Ljavassist/bytecode/ConstInfo;)I#BinaryOp(I,add)#9
javassist.bytecode.ConstPool.addItem(Ljavassist/bytecode/ConstInfo;)I#Put(I,NONSTATIC,Ljavassist/bytecode/ConstPool;,numOfItems)#10
javassist.bytecode.ConstPool.addItem(Ljavassist/bytecode/ConstInfo;)I#Return(I)#11
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#Pop(1)#15
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#LocalLoad(I,2)#16
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#Constant(I,-1)#17
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#BinaryOp(I,add)#18
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#LocalStore(I,2)#19
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#LocalLoad(I,2)#20
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#Constant(I,0)#21
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#ConditionalBranch(I,le,44)#22
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#23
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#24
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/ConstPool;,readOne,(Ljava/io/DataInputStream;)I)#25
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalLoad(Ljava/lang/Object;,1)#0
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedByte,()I)#1
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalStore(I,3)#2
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalLoad(I,3)#3
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Switch(83,1,5,2,83,3,21,4,27,5,33,6,39,7,45,8,53,9,59,10,65,11,71,12,77)#4
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#New(Ljavassist/bytecode/ClassInfo;,0)#45
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Dup(1,0)#46
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalLoad(Ljava/lang/Object;,1)#47
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalLoad(Ljava/lang/Object;,0)#48
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Get(I,NONSTATIC,Ljavassist/bytecode/ConstPool;,numOfItems)#49
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Invoke(SPECIAL,Ljavassist/bytecode/ClassInfo;,<init>,(Ljava/io/DataInputStream;I)V)#50
javassist.bytecode.ClassInfo.<init>(Ljava/io/DataInputStream;I)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.ClassInfo.<init>(Ljava/io/DataInputStream;I)V#Invoke(SPECIAL,Ljavassist/bytecode/ConstInfo;,<init>,()V)#1
javassist.bytecode.ConstInfo.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.ConstInfo.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
javassist.bytecode.ConstInfo.<init>()V#Return(V)#2
javassist.bytecode.ClassInfo.<init>(Ljava/io/DataInputStream;I)V#LocalLoad(Ljava/lang/Object;,0)#2
javassist.bytecode.ClassInfo.<init>(Ljava/io/DataInputStream;I)V#LocalLoad(Ljava/lang/Object;,1)#3
javassist.bytecode.ClassInfo.<init>(Ljava/io/DataInputStream;I)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#4
javassist.bytecode.ClassInfo.<init>(Ljava/io/DataInputStream;I)V#Put(I,NONSTATIC,Ljavassist/bytecode/ClassInfo;,name)#5
javassist.bytecode.ClassInfo.<init>(Ljava/io/DataInputStream;I)V#LocalLoad(Ljava/lang/Object;,0)#6
javassist.bytecode.ClassInfo.<init>(Ljava/io/DataInputStream;I)V#LocalLoad(I,2)#7
javassist.bytecode.ClassInfo.<init>(Ljava/io/DataInputStream;I)V#Put(I,NONSTATIC,Ljavassist/bytecode/ClassInfo;,index)#8
javassist.bytecode.ClassInfo.<init>(Ljava/io/DataInputStream;I)V#Return(V)#9
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalStore(Ljava/lang/Object;,2)#51
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Goto(95)#52
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalLoad(Ljava/lang/Object;,0)#95
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalLoad(Ljava/lang/Object;,2)#96
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Invoke(SPECIAL,Ljavassist/bytecode/ConstPool;,addItem,(Ljavassist/bytecode/ConstInfo;)I)#97
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Pop(1)#98
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalLoad(I,3)#99
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Return(I)#100
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#LocalStore(I,3)#26
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#LocalLoad(I,3)#27
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#Constant(I,5)#28
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#ConditionalBranch(I,eq,33)#29
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#LocalLoad(I,3)#30
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#Constant(I,6)#31
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#ConditionalBranch(I,ne,43)#32
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#Goto(16)#43
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#New(Ljavassist/bytecode/Utf8Info;,0)#5
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Dup(1,0)#6
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalLoad(Ljava/lang/Object;,1)#7
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalLoad(Ljava/lang/Object;,0)#8
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Get(I,NONSTATIC,Ljavassist/bytecode/ConstPool;,numOfItems)#9
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Invoke(SPECIAL,Ljavassist/bytecode/Utf8Info;,<init>,(Ljava/io/DataInputStream;I)V)#10
javassist.bytecode.Utf8Info.<init>(Ljava/io/DataInputStream;I)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.Utf8Info.<init>(Ljava/io/DataInputStream;I)V#Invoke(SPECIAL,Ljavassist/bytecode/ConstInfo;,<init>,()V)#1
javassist.bytecode.Utf8Info.<init>(Ljava/io/DataInputStream;I)V#LocalLoad(Ljava/lang/Object;,0)#2
javassist.bytecode.Utf8Info.<init>(Ljava/io/DataInputStream;I)V#LocalLoad(Ljava/lang/Object;,1)#3
javassist.bytecode.Utf8Info.<init>(Ljava/io/DataInputStream;I)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUTF,()Ljava/lang/String;)#4
javassist.bytecode.Utf8Info.<init>(Ljava/io/DataInputStream;I)V#Put(Ljava/lang/String;,NONSTATIC,Ljavassist/bytecode/Utf8Info;,string)#5
javassist.bytecode.Utf8Info.<init>(Ljava/io/DataInputStream;I)V#LocalLoad(Ljava/lang/Object;,0)#6
javassist.bytecode.Utf8Info.<init>(Ljava/io/DataInputStream;I)V#LocalLoad(I,2)#7
javassist.bytecode.Utf8Info.<init>(Ljava/io/DataInputStream;I)V#Put(I,NONSTATIC,Ljavassist/bytecode/Utf8Info;,index)#8
javassist.bytecode.Utf8Info.<init>(Ljava/io/DataInputStream;I)V#Return(V)#9
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalStore(Ljava/lang/Object;,2)#11
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalLoad(Ljava/lang/Object;,0)#12
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Get(Ljava/util/HashMap;,NONSTATIC,Ljavassist/bytecode/ConstPool;,strings)#13
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalLoad(Ljava/lang/Object;,2)#14
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#CheckCast(Ljavassist/bytecode/Utf8Info;)#15
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Get(Ljava/lang/String;,NONSTATIC,Ljavassist/bytecode/Utf8Info;,string)#16
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalLoad(Ljava/lang/Object;,2)#17
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Invoke(VIRTUAL,Ljava/util/HashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#18
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Pop(1)#19
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Goto(95)#20
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#New(Ljavassist/bytecode/MethodrefInfo;,0)#65
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Dup(1,0)#66
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalLoad(Ljava/lang/Object;,1)#67
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Invoke(SPECIAL,Ljavassist/bytecode/MethodrefInfo;,<init>,(Ljava/io/DataInputStream;)V)#68
javassist.bytecode.MethodrefInfo.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.MethodrefInfo.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#1
javassist.bytecode.MethodrefInfo.<init>(Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/MemberrefInfo;,<init>,(Ljava/io/DataInputStream;)V)#2
javassist.bytecode.MemberrefInfo.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.MemberrefInfo.<init>(Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/ConstInfo;,<init>,()V)#1
javassist.bytecode.MemberrefInfo.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#2
javassist.bytecode.MemberrefInfo.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#3
javassist.bytecode.MemberrefInfo.<init>(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#4
javassist.bytecode.MemberrefInfo.<init>(Ljava/io/DataInputStream;)V#Put(I,NONSTATIC,Ljavassist/bytecode/MemberrefInfo;,classIndex)#5
javassist.bytecode.MemberrefInfo.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#6
javassist.bytecode.MemberrefInfo.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#7
javassist.bytecode.MemberrefInfo.<init>(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#8
javassist.bytecode.MemberrefInfo.<init>(Ljava/io/DataInputStream;)V#Put(I,NONSTATIC,Ljavassist/bytecode/MemberrefInfo;,nameAndTypeIndex)#9
javassist.bytecode.MemberrefInfo.<init>(Ljava/io/DataInputStream;)V#Return(V)#10
javassist.bytecode.MethodrefInfo.<init>(Ljava/io/DataInputStream;)V#Return(V)#3
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalStore(Ljava/lang/Object;,2)#69
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Goto(95)#70
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#New(Ljavassist/bytecode/NameAndTypeInfo;,0)#77
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Dup(1,0)#78
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalLoad(Ljava/lang/Object;,1)#79
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Invoke(SPECIAL,Ljavassist/bytecode/NameAndTypeInfo;,<init>,(Ljava/io/DataInputStream;)V)#80
javassist.bytecode.NameAndTypeInfo.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.NameAndTypeInfo.<init>(Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/ConstInfo;,<init>,()V)#1
javassist.bytecode.NameAndTypeInfo.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#2
javassist.bytecode.NameAndTypeInfo.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#3
javassist.bytecode.NameAndTypeInfo.<init>(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#4
javassist.bytecode.NameAndTypeInfo.<init>(Ljava/io/DataInputStream;)V#Put(I,NONSTATIC,Ljavassist/bytecode/NameAndTypeInfo;,memberName)#5
javassist.bytecode.NameAndTypeInfo.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#6
javassist.bytecode.NameAndTypeInfo.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#7
javassist.bytecode.NameAndTypeInfo.<init>(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#8
javassist.bytecode.NameAndTypeInfo.<init>(Ljava/io/DataInputStream;)V#Put(I,NONSTATIC,Ljavassist/bytecode/NameAndTypeInfo;,typeDescriptor)#9
javassist.bytecode.NameAndTypeInfo.<init>(Ljava/io/DataInputStream;)V#Return(V)#10
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalStore(Ljava/lang/Object;,2)#81
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Goto(95)#82
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#New(Ljavassist/bytecode/FieldrefInfo;,0)#59
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Dup(1,0)#60
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalLoad(Ljava/lang/Object;,1)#61
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Invoke(SPECIAL,Ljavassist/bytecode/FieldrefInfo;,<init>,(Ljava/io/DataInputStream;)V)#62
javassist.bytecode.FieldrefInfo.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.FieldrefInfo.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#1
javassist.bytecode.FieldrefInfo.<init>(Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/MemberrefInfo;,<init>,(Ljava/io/DataInputStream;)V)#2
javassist.bytecode.FieldrefInfo.<init>(Ljava/io/DataInputStream;)V#Return(V)#3
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalStore(Ljava/lang/Object;,2)#63
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Goto(95)#64
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#New(Ljavassist/bytecode/InterfaceMethodrefInfo;,0)#71
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Dup(1,0)#72
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalLoad(Ljava/lang/Object;,1)#73
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Invoke(SPECIAL,Ljavassist/bytecode/InterfaceMethodrefInfo;,<init>,(Ljava/io/DataInputStream;)V)#74
javassist.bytecode.InterfaceMethodrefInfo.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.InterfaceMethodrefInfo.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#1
javassist.bytecode.InterfaceMethodrefInfo.<init>(Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/MemberrefInfo;,<init>,(Ljava/io/DataInputStream;)V)#2
javassist.bytecode.InterfaceMethodrefInfo.<init>(Ljava/io/DataInputStream;)V#Return(V)#3
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalStore(Ljava/lang/Object;,2)#75
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Goto(95)#76
org.scannotation.archiveiterator.InputStreamWrapper.available()I#LocalLoad(Ljava/lang/Object;,0)#0
org.scannotation.archiveiterator.InputStreamWrapper.available()I#Get(Ljava/io/InputStream;,NONSTATIC,Lorg/scannotation/archiveiterator/InputStreamWrapper;,delegate)#1
org.scannotation.archiveiterator.InputStreamWrapper.available()I#Invoke(VIRTUAL,Ljava/io/InputStream;,available,()I)#2
org.scannotation.archiveiterator.InputStreamWrapper.available()I#Return(I)#3
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#New(Ljavassist/bytecode/StringInfo;,0)#53
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Dup(1,0)#54
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalLoad(Ljava/lang/Object;,1)#55
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Invoke(SPECIAL,Ljavassist/bytecode/StringInfo;,<init>,(Ljava/io/DataInputStream;)V)#56
javassist.bytecode.StringInfo.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.StringInfo.<init>(Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/ConstInfo;,<init>,()V)#1
javassist.bytecode.StringInfo.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#2
javassist.bytecode.StringInfo.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#3
javassist.bytecode.StringInfo.<init>(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#4
javassist.bytecode.StringInfo.<init>(Ljava/io/DataInputStream;)V#Put(I,NONSTATIC,Ljavassist/bytecode/StringInfo;,string)#5
javassist.bytecode.StringInfo.<init>(Ljava/io/DataInputStream;)V#Return(V)#6
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalStore(Ljava/lang/Object;,2)#57
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Goto(95)#58
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#Constant(I,1)#44
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#LocalStore(I,3)#45
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#46
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#Get(Ljavassist/bytecode/LongVector;,NONSTATIC,Ljavassist/bytecode/ConstPool;,items)#47
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#LocalLoad(I,3)#48
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#LocalLoad(I,3)#49
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#Constant(I,1)#50
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#BinaryOp(I,add)#51
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#LocalStore(I,3)#52
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljavassist/bytecode/LongVector;,elementAt,(I)Ljavassist/bytecode/ConstInfo;)#53
javassist.bytecode.LongVector.elementAt(I)Ljavassist/bytecode/ConstInfo;#LocalLoad(I,1)#0
javassist.bytecode.LongVector.elementAt(I)Ljavassist/bytecode/ConstInfo;#Constant(I,0)#1
javassist.bytecode.LongVector.elementAt(I)Ljavassist/bytecode/ConstInfo;#ConditionalBranch(I,lt,7)#2
javassist.bytecode.LongVector.elementAt(I)Ljavassist/bytecode/ConstInfo;#LocalLoad(Ljava/lang/Object;,0)#3
javassist.bytecode.LongVector.elementAt(I)Ljavassist/bytecode/ConstInfo;#Get(I,NONSTATIC,Ljavassist/bytecode/LongVector;,elements)#4
javassist.bytecode.LongVector.elementAt(I)Ljavassist/bytecode/ConstInfo;#LocalLoad(I,1)#5
javassist.bytecode.LongVector.elementAt(I)Ljavassist/bytecode/ConstInfo;#ConditionalBranch(I,gt,9)#6
javassist.bytecode.LongVector.elementAt(I)Ljavassist/bytecode/ConstInfo;#LocalLoad(Ljava/lang/Object;,0)#9
javassist.bytecode.LongVector.elementAt(I)Ljavassist/bytecode/ConstInfo;#Get([[Ljavassist/bytecode/ConstInfo;,NONSTATIC,Ljavassist/bytecode/LongVector;,objects)#10
javassist.bytecode.LongVector.elementAt(I)Ljavassist/bytecode/ConstInfo;#LocalLoad(I,1)#11
javassist.bytecode.LongVector.elementAt(I)Ljavassist/bytecode/ConstInfo;#Constant(I,7)#12
javassist.bytecode.LongVector.elementAt(I)Ljavassist/bytecode/ConstInfo;#Shift(I,SHR)#13
javassist.bytecode.LongVector.elementAt(I)Ljavassist/bytecode/ConstInfo;#ArrayLoad(Ljava/lang/Object;)#14
javassist.bytecode.LongVector.elementAt(I)Ljavassist/bytecode/ConstInfo;#LocalLoad(I,1)#15
javassist.bytecode.LongVector.elementAt(I)Ljavassist/bytecode/ConstInfo;#Constant(I,127)#16
javassist.bytecode.LongVector.elementAt(I)Ljavassist/bytecode/ConstInfo;#BinaryOp(I,and)#17
javassist.bytecode.LongVector.elementAt(I)Ljavassist/bytecode/ConstInfo;#ArrayLoad(Ljava/lang/Object;)#18
javassist.bytecode.LongVector.elementAt(I)Ljavassist/bytecode/ConstInfo;#Return(Ljava/lang/Object;)#19
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#LocalStore(Ljava/lang/Object;,4)#54
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,4)#55
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#Constant(L;,null)#56
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#ConditionalBranch(Ljava/lang/Object;,ne,59)#57
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,4)#59
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#60
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljavassist/bytecode/ConstInfo;,makeHashtable,(Ljavassist/bytecode/ConstPool;)V)#61
javassist.bytecode.ClassInfo.makeHashtable(Ljavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.ClassInfo.makeHashtable(Ljavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,1)#1
javassist.bytecode.ClassInfo.makeHashtable(Ljavassist/bytecode/ConstPool;)V#Invoke(VIRTUAL,Ljavassist/bytecode/ClassInfo;,getClassName,(Ljavassist/bytecode/ConstPool;)Ljava/lang/String;)#2
javassist.bytecode.ClassInfo.getClassName(Ljavassist/bytecode/ConstPool;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#0
javassist.bytecode.ClassInfo.getClassName(Ljavassist/bytecode/ConstPool;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#1
javassist.bytecode.ClassInfo.getClassName(Ljavassist/bytecode/ConstPool;)Ljava/lang/String;#Get(I,NONSTATIC,Ljavassist/bytecode/ClassInfo;,name)#2
javassist.bytecode.ClassInfo.getClassName(Ljavassist/bytecode/ConstPool;)Ljava/lang/String;#Invoke(VIRTUAL,Ljavassist/bytecode/ConstPool;,getUtf8Info,(I)Ljava/lang/String;)#3
javassist.bytecode.ConstPool.getUtf8Info(I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.ConstPool.getUtf8Info(I)Ljava/lang/String;#LocalLoad(I,1)#1
javassist.bytecode.ConstPool.getUtf8Info(I)Ljava/lang/String;#Invoke(VIRTUAL,Ljavassist/bytecode/ConstPool;,getItem,(I)Ljavassist/bytecode/ConstInfo;)#2
javassist.bytecode.ConstPool.getItem(I)Ljavassist/bytecode/ConstInfo;#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.ConstPool.getItem(I)Ljavassist/bytecode/ConstInfo;#Get(Ljavassist/bytecode/LongVector;,NONSTATIC,Ljavassist/bytecode/ConstPool;,items)#1
javassist.bytecode.ConstPool.getItem(I)Ljavassist/bytecode/ConstInfo;#LocalLoad(I,1)#2
javassist.bytecode.ConstPool.getItem(I)Ljavassist/bytecode/ConstInfo;#Invoke(VIRTUAL,Ljavassist/bytecode/LongVector;,elementAt,(I)Ljavassist/bytecode/ConstInfo;)#3
javassist.bytecode.ConstPool.getItem(I)Ljavassist/bytecode/ConstInfo;#Return(Ljava/lang/Object;)#4
javassist.bytecode.ConstPool.getUtf8Info(I)Ljava/lang/String;#CheckCast(Ljavassist/bytecode/Utf8Info;)#3
javassist.bytecode.ConstPool.getUtf8Info(I)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,2)#4
javassist.bytecode.ConstPool.getUtf8Info(I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#5
javassist.bytecode.ConstPool.getUtf8Info(I)Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Ljavassist/bytecode/Utf8Info;,string)#6
javassist.bytecode.ConstPool.getUtf8Info(I)Ljava/lang/String;#Return(Ljava/lang/Object;)#7
javassist.bytecode.ClassInfo.getClassName(Ljavassist/bytecode/ConstPool;)Ljava/lang/String;#Return(Ljava/lang/Object;)#4
javassist.bytecode.ClassInfo.makeHashtable(Ljavassist/bytecode/ConstPool;)V#Invoke(STATIC,Ljavassist/bytecode/Descriptor;,toJavaName,(Ljava/lang/String;)Ljava/lang/String;)#3
javassist.bytecode.Descriptor.toJavaName(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.Descriptor.toJavaName(Ljava/lang/String;)Ljava/lang/String;#Constant(I,47)#1
javassist.bytecode.Descriptor.toJavaName(Ljava/lang/String;)Ljava/lang/String;#Constant(I,46)#2
javassist.bytecode.Descriptor.toJavaName(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,replace,(CC)Ljava/lang/String;)#3
javassist.bytecode.Descriptor.toJavaName(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#4
javassist.bytecode.ClassInfo.makeHashtable(Ljavassist/bytecode/ConstPool;)V#LocalStore(Ljava/lang/Object;,2)#4
javassist.bytecode.ClassInfo.makeHashtable(Ljavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,1)#5
javassist.bytecode.ClassInfo.makeHashtable(Ljavassist/bytecode/ConstPool;)V#Get(Ljava/util/HashMap;,NONSTATIC,Ljavassist/bytecode/ConstPool;,classes)#6
javassist.bytecode.ClassInfo.makeHashtable(Ljavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,2)#7
javassist.bytecode.ClassInfo.makeHashtable(Ljavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,0)#8
javassist.bytecode.ClassInfo.makeHashtable(Ljavassist/bytecode/ConstPool;)V#Invoke(VIRTUAL,Ljava/util/HashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#9
javassist.bytecode.ClassInfo.makeHashtable(Ljavassist/bytecode/ConstPool;)V#Pop(1)#10
javassist.bytecode.ClassInfo.makeHashtable(Ljavassist/bytecode/ConstPool;)V#Return(V)#11
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#Goto(46)#62
javassist.bytecode.ConstInfo.makeHashtable(Ljavassist/bytecode/ConstPool;)V#Return(V)#0
javassist.bytecode.LongVector.elementAt(I)Ljavassist/bytecode/ConstInfo;#Constant(L;,null)#7
javassist.bytecode.LongVector.elementAt(I)Ljavassist/bytecode/ConstInfo;#Return(Ljava/lang/Object;)#8
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#Goto(63)#58
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#Return(V)#63
javassist.bytecode.ConstPool.<init>(Ljava/io/DataInputStream;)V#Return(V)#26
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Put(Ljavassist/bytecode/ConstPool;,NONSTATIC,Ljavassist/bytecode/ClassFile;,constPool)#32
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#33
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#34
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#35
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Put(I,NONSTATIC,Ljavassist/bytecode/ClassFile;,accessFlags)#36
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#37
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#38
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#39
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Put(I,NONSTATIC,Ljavassist/bytecode/ClassFile;,thisClass)#40
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#41
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Get(Ljavassist/bytecode/ConstPool;,NONSTATIC,Ljavassist/bytecode/ClassFile;,constPool)#42
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#43
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Get(I,NONSTATIC,Ljavassist/bytecode/ClassFile;,thisClass)#44
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljavassist/bytecode/ConstPool;,setThisClassInfo,(I)V)#45
javassist.bytecode.ConstPool.setThisClassInfo(I)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.ConstPool.setThisClassInfo(I)V#LocalLoad(I,1)#1
javassist.bytecode.ConstPool.setThisClassInfo(I)V#Put(I,NONSTATIC,Ljavassist/bytecode/ConstPool;,thisClassInfo)#2
javassist.bytecode.ConstPool.setThisClassInfo(I)V#Return(V)#3
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#46
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#47
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#48
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Put(I,NONSTATIC,Ljavassist/bytecode/ClassFile;,superClass)#49
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#50
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#51
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalStore(I,3)#52
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(I,3)#53
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Constant(I,0)#54
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#ConditionalBranch(I,ne,60)#55
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#60
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(I,3)#61
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#New([I,1)#62
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Put([I,NONSTATIC,Ljavassist/bytecode/ClassFile;,interfaces)#63
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Constant(I,0)#64
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalStore(I,2)#65
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(I,2)#66
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(I,3)#67
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#ConditionalBranch(I,ge,80)#68
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#69
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Get([I,NONSTATIC,Ljavassist/bytecode/ClassFile;,interfaces)#70
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(I,2)#71
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#72
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#73
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#ArrayStore(I)#74
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(I,2)#75
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Constant(I,1)#76
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#BinaryOp(I,add)#77
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalStore(I,2)#78
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Goto(66)#79
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#80
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Get(Ljavassist/bytecode/ConstPool;,NONSTATIC,Ljavassist/bytecode/ClassFile;,constPool)#81
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalStore(Ljava/lang/Object;,5)#82
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#83
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#84
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalStore(I,3)#85
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#86
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#New(Ljava/util/ArrayList;,0)#87
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Dup(1,0)#88
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#89
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Put(Ljava/util/ArrayList;,NONSTATIC,Ljavassist/bytecode/ClassFile;,fields)#90
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Constant(I,0)#91
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalStore(I,2)#92
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(I,2)#93
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(I,3)#94
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#ConditionalBranch(I,ge,108)#95
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#96
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#New(Ljavassist/bytecode/FieldInfo;,0)#97
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Dup(1,0)#98
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,5)#99
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#100
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/FieldInfo;,<init>,(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V)#101
javassist.bytecode.FieldInfo.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.FieldInfo.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#1
javassist.bytecode.FieldInfo.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/FieldInfo;,<init>,(Ljavassist/bytecode/ConstPool;)V)#2
javassist.bytecode.FieldInfo.<init>(Ljavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.FieldInfo.<init>(Ljavassist/bytecode/ConstPool;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
javassist.bytecode.FieldInfo.<init>(Ljavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,0)#2
javassist.bytecode.FieldInfo.<init>(Ljavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,1)#3
javassist.bytecode.FieldInfo.<init>(Ljavassist/bytecode/ConstPool;)V#Put(Ljavassist/bytecode/ConstPool;,NONSTATIC,Ljavassist/bytecode/FieldInfo;,constPool)#4
javassist.bytecode.FieldInfo.<init>(Ljavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,0)#5
javassist.bytecode.FieldInfo.<init>(Ljavassist/bytecode/ConstPool;)V#Constant(I,0)#6
javassist.bytecode.FieldInfo.<init>(Ljavassist/bytecode/ConstPool;)V#Put(I,NONSTATIC,Ljavassist/bytecode/FieldInfo;,accessFlags)#7
javassist.bytecode.FieldInfo.<init>(Ljavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,0)#8
javassist.bytecode.FieldInfo.<init>(Ljavassist/bytecode/ConstPool;)V#Constant(L;,null)#9
javassist.bytecode.FieldInfo.<init>(Ljavassist/bytecode/ConstPool;)V#Put(Ljava/util/ArrayList;,NONSTATIC,Ljavassist/bytecode/FieldInfo;,attribute)#10
javassist.bytecode.FieldInfo.<init>(Ljavassist/bytecode/ConstPool;)V#Return(V)#11
javassist.bytecode.FieldInfo.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#3
javassist.bytecode.FieldInfo.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,2)#4
javassist.bytecode.FieldInfo.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/FieldInfo;,read,(Ljava/io/DataInputStream;)V)#5
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#1
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#2
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#Put(I,NONSTATIC,Ljavassist/bytecode/FieldInfo;,accessFlags)#3
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#4
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#5
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#6
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#Put(I,NONSTATIC,Ljavassist/bytecode/FieldInfo;,name)#7
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#8
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#9
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#10
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#Put(I,NONSTATIC,Ljavassist/bytecode/FieldInfo;,descriptor)#11
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#12
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#13
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#LocalStore(I,2)#14
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#15
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#New(Ljava/util/ArrayList;,0)#16
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#Dup(1,0)#17
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#18
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#Put(Ljava/util/ArrayList;,NONSTATIC,Ljavassist/bytecode/FieldInfo;,attribute)#19
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#Constant(I,0)#20
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#LocalStore(I,3)#21
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#LocalLoad(I,3)#22
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#LocalLoad(I,2)#23
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#ConditionalBranch(I,ge,38)#24
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#Return(V)#38
javassist.bytecode.FieldInfo.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#Return(V)#6
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljavassist/bytecode/ClassFile;,addField2,(Ljavassist/bytecode/FieldInfo;)V)#102
javassist.bytecode.ClassFile.addField2(Ljavassist/bytecode/FieldInfo;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.ClassFile.addField2(Ljavassist/bytecode/FieldInfo;)V#Get(Ljava/util/ArrayList;,NONSTATIC,Ljavassist/bytecode/ClassFile;,fields)#1
javassist.bytecode.ClassFile.addField2(Ljavassist/bytecode/FieldInfo;)V#LocalLoad(Ljava/lang/Object;,1)#2
javassist.bytecode.ClassFile.addField2(Ljavassist/bytecode/FieldInfo;)V#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#3
javassist.bytecode.ClassFile.addField2(Ljavassist/bytecode/FieldInfo;)V#Pop(1)#4
javassist.bytecode.ClassFile.addField2(Ljavassist/bytecode/FieldInfo;)V#Return(V)#5
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(I,2)#103
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Constant(I,1)#104
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#BinaryOp(I,add)#105
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalStore(I,2)#106
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Goto(93)#107
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#108
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#109
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalStore(I,3)#110
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#111
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#New(Ljava/util/ArrayList;,0)#112
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Dup(1,0)#113
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#114
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Put(Ljava/util/ArrayList;,NONSTATIC,Ljavassist/bytecode/ClassFile;,methods)#115
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Constant(I,0)#116
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalStore(I,2)#117
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(I,2)#118
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(I,3)#119
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#ConditionalBranch(I,ge,133)#120
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#121
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#New(Ljavassist/bytecode/MethodInfo;,0)#122
javassist.bytecode.MethodInfo.<clinit>()V#Constant(I,0)#0
javassist.bytecode.MethodInfo.<clinit>()V#Put(Z,STATIC,Ljavassist/bytecode/MethodInfo;,doPreverify)#1
javassist.bytecode.MethodInfo.<clinit>()V#Return(V)#2
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Dup(1,0)#123
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,5)#124
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#125
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/MethodInfo;,<init>,(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V)#126
javassist.bytecode.MethodInfo.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.MethodInfo.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#1
javassist.bytecode.MethodInfo.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/MethodInfo;,<init>,(Ljavassist/bytecode/ConstPool;)V)#2
javassist.bytecode.MethodInfo.<init>(Ljavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.MethodInfo.<init>(Ljavassist/bytecode/ConstPool;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
javassist.bytecode.MethodInfo.<init>(Ljavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,0)#2
javassist.bytecode.MethodInfo.<init>(Ljavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,1)#3
javassist.bytecode.MethodInfo.<init>(Ljavassist/bytecode/ConstPool;)V#Put(Ljavassist/bytecode/ConstPool;,NONSTATIC,Ljavassist/bytecode/MethodInfo;,constPool)#4
javassist.bytecode.MethodInfo.<init>(Ljavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,0)#5
javassist.bytecode.MethodInfo.<init>(Ljavassist/bytecode/ConstPool;)V#Constant(L;,null)#6
javassist.bytecode.MethodInfo.<init>(Ljavassist/bytecode/ConstPool;)V#Put(Ljava/util/ArrayList;,NONSTATIC,Ljavassist/bytecode/MethodInfo;,attribute)#7
javassist.bytecode.MethodInfo.<init>(Ljavassist/bytecode/ConstPool;)V#Return(V)#8
javassist.bytecode.MethodInfo.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#3
javassist.bytecode.MethodInfo.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,2)#4
javassist.bytecode.MethodInfo.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/MethodInfo;,read,(Ljava/io/DataInputStream;)V)#5
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#1
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#2
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#Put(I,NONSTATIC,Ljavassist/bytecode/MethodInfo;,accessFlags)#3
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#4
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#5
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#6
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#Put(I,NONSTATIC,Ljavassist/bytecode/MethodInfo;,name)#7
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#8
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#9
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#10
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#Put(I,NONSTATIC,Ljavassist/bytecode/MethodInfo;,descriptor)#11
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#12
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#13
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#LocalStore(I,2)#14
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#15
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#New(Ljava/util/ArrayList;,0)#16
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#Dup(1,0)#17
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#18
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#Put(Ljava/util/ArrayList;,NONSTATIC,Ljavassist/bytecode/MethodInfo;,attribute)#19
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#Constant(I,0)#20
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#LocalStore(I,3)#21
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#LocalLoad(I,3)#22
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#LocalLoad(I,2)#23
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#ConditionalBranch(I,ge,38)#24
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#25
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#Get(Ljava/util/ArrayList;,NONSTATIC,Ljavassist/bytecode/MethodInfo;,attribute)#26
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#27
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#Get(Ljavassist/bytecode/ConstPool;,NONSTATIC,Ljavassist/bytecode/MethodInfo;,constPool)#28
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#29
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#Invoke(STATIC,Ljavassist/bytecode/AttributeInfo;,read,(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;)#30
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,1)#0
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#1
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalStore(I,2)#2
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,0)#3
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(I,2)#4
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(VIRTUAL,Ljavassist/bytecode/ConstPool;,getUtf8Info,(I)Ljava/lang/String;)#5
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalStore(Ljava/lang/Object;,3)#6
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,3)#7
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(I,0)#8
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#9
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(I,76)#10
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#ConditionalBranch(I,ge,96)#11
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,3)#12
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(Ljava/lang/String;,"AnnotationDefault")#13
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#14
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(I,0)#15
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#ConditionalBranch(I,eq,24)#16
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,3)#24
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(Ljava/lang/String;,"Code")#25
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#26
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(I,0)#27
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#ConditionalBranch(I,eq,36)#28
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#New(Ljavassist/bytecode/CodeAttribute;,0)#29
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Dup(1,0)#30
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,0)#31
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(I,2)#32
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,1)#33
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(SPECIAL,Ljavassist/bytecode/CodeAttribute;,<init>,(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V)#34
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#1
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(I,2)#2
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Constant(L;,null)#3
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#CheckCast([B)#4
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/AttributeInfo;,<init>,(Ljavassist/bytecode/ConstPool;I[B)V)#5
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;I[B)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;I[B)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;I[B)V#LocalLoad(Ljava/lang/Object;,0)#2
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;I[B)V#LocalLoad(Ljava/lang/Object;,1)#3
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;I[B)V#Put(Ljavassist/bytecode/ConstPool;,NONSTATIC,Ljavassist/bytecode/AttributeInfo;,constPool)#4
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;I[B)V#LocalLoad(Ljava/lang/Object;,0)#5
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;I[B)V#LocalLoad(I,2)#6
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;I[B)V#Put(I,NONSTATIC,Ljavassist/bytecode/AttributeInfo;,name)#7
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;I[B)V#LocalLoad(Ljava/lang/Object;,0)#8
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;I[B)V#LocalLoad(Ljava/lang/Object;,3)#9
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;I[B)V#Put([B,NONSTATIC,Ljavassist/bytecode/AttributeInfo;,info)#10
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;I[B)V#Return(V)#11
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,3)#6
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readInt,()I)#7
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalStore(I,4)#8
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#9
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,3)#10
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#11
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Put(I,NONSTATIC,Ljavassist/bytecode/CodeAttribute;,maxStack)#12
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#13
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,3)#14
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#15
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Put(I,NONSTATIC,Ljavassist/bytecode/CodeAttribute;,maxLocals)#16
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,3)#17
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readInt,()I)#18
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalStore(I,5)#19
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#20
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(I,5)#21
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#New([B,1)#22
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Put([B,NONSTATIC,Ljavassist/bytecode/CodeAttribute;,info)#23
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,3)#24
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#25
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Get([B,NONSTATIC,Ljavassist/bytecode/CodeAttribute;,info)#26
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readFully,([B)V)#27
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#28
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#New(Ljavassist/bytecode/ExceptionTable;,0)#29
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Dup(1,0)#30
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#31
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,3)#32
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/ExceptionTable;,<init>,(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V)#33
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#2
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#3
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#Put(Ljavassist/bytecode/ConstPool;,NONSTATIC,Ljavassist/bytecode/ExceptionTable;,constPool)#4
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,2)#5
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#6
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalStore(I,3)#7
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#New(Ljava/util/ArrayList;,0)#8
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#Dup(1,0)#9
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalLoad(I,3)#10
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,(I)V)#11
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalStore(Ljava/lang/Object;,4)#12
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#Constant(I,0)#13
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalStore(I,5)#14
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalLoad(I,5)#15
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalLoad(I,3)#16
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#ConditionalBranch(I,ge,45)#17
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#45
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,4)#46
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#Put(Ljava/util/ArrayList;,NONSTATIC,Ljavassist/bytecode/ExceptionTable;,entries)#47
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#Return(V)#48
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Put(Ljavassist/bytecode/ExceptionTable;,NONSTATIC,Ljavassist/bytecode/CodeAttribute;,exceptions)#34
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#35
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#New(Ljava/util/ArrayList;,0)#36
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Dup(1,0)#37
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#38
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Put(Ljava/util/ArrayList;,NONSTATIC,Ljavassist/bytecode/CodeAttribute;,attributes)#39
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,3)#40
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#41
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalStore(I,6)#42
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Constant(I,0)#43
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalStore(I,7)#44
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(I,7)#45
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(I,6)#46
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#ConditionalBranch(I,ge,60)#47
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#48
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Get(Ljava/util/ArrayList;,NONSTATIC,Ljavassist/bytecode/CodeAttribute;,attributes)#49
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#50
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,3)#51
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Invoke(STATIC,Ljavassist/bytecode/AttributeInfo;,read,(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;)#52
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,3)#96
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(Ljava/lang/String;,"LineNumberTable")#97
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#98
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(I,0)#99
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#ConditionalBranch(I,eq,108)#100
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#New(Ljavassist/bytecode/LineNumberAttribute;,0)#101
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Dup(1,0)#102
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,0)#103
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(I,2)#104
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,1)#105
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(SPECIAL,Ljavassist/bytecode/LineNumberAttribute;,<init>,(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V)#106
javassist.bytecode.LineNumberAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.LineNumberAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#1
javassist.bytecode.LineNumberAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(I,2)#2
javassist.bytecode.LineNumberAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,3)#3
javassist.bytecode.LineNumberAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/AttributeInfo;,<init>,(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V)#4
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#2
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#3
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Put(Ljavassist/bytecode/ConstPool;,NONSTATIC,Ljavassist/bytecode/AttributeInfo;,constPool)#4
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#5
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(I,2)#6
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Put(I,NONSTATIC,Ljavassist/bytecode/AttributeInfo;,name)#7
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,3)#8
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readInt,()I)#9
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalStore(I,4)#10
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#11
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(I,4)#12
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#New([B,1)#13
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Put([B,NONSTATIC,Ljavassist/bytecode/AttributeInfo;,info)#14
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(I,4)#15
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Constant(I,0)#16
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#ConditionalBranch(I,le,22)#17
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,3)#18
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#19
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Get([B,NONSTATIC,Ljavassist/bytecode/AttributeInfo;,info)#20
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readFully,([B)V)#21
javassist.bytecode.AttributeInfo.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Return(V)#22
javassist.bytecode.LineNumberAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Return(V)#5
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Return(Ljava/lang/Object;)#107
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#53
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Pop(1)#54
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(I,7)#55
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Constant(I,1)#56
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#BinaryOp(I,add)#57
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalStore(I,7)#58
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Goto(45)#59
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,3)#108
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(Ljava/lang/String;,"LocalVariableTable")#109
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#110
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(I,0)#111
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#ConditionalBranch(I,eq,120)#112
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#New(Ljavassist/bytecode/LocalVariableAttribute;,0)#113
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Dup(1,0)#114
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,0)#115
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(I,2)#116
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,1)#117
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(SPECIAL,Ljavassist/bytecode/LocalVariableAttribute;,<init>,(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V)#118
javassist.bytecode.LocalVariableAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.LocalVariableAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#1
javassist.bytecode.LocalVariableAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(I,2)#2
javassist.bytecode.LocalVariableAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,3)#3
javassist.bytecode.LocalVariableAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/AttributeInfo;,<init>,(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V)#4
javassist.bytecode.LocalVariableAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Return(V)#5
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Return(Ljava/lang/Object;)#119
javassist.bytecode.CodeAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Return(V)#60
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Return(Ljava/lang/Object;)#35
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#31
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#Pop(1)#32
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#LocalLoad(I,3)#33
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#Constant(I,1)#34
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#BinaryOp(I,add)#35
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#LocalStore(I,3)#36
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#Goto(22)#37
javassist.bytecode.MethodInfo.read(Ljava/io/DataInputStream;)V#Return(V)#38
javassist.bytecode.MethodInfo.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#Return(V)#6
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljavassist/bytecode/ClassFile;,addMethod2,(Ljavassist/bytecode/MethodInfo;)V)#127
javassist.bytecode.ClassFile.addMethod2(Ljavassist/bytecode/MethodInfo;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.ClassFile.addMethod2(Ljavassist/bytecode/MethodInfo;)V#Get(Ljava/util/ArrayList;,NONSTATIC,Ljavassist/bytecode/ClassFile;,methods)#1
javassist.bytecode.ClassFile.addMethod2(Ljavassist/bytecode/MethodInfo;)V#LocalLoad(Ljava/lang/Object;,1)#2
javassist.bytecode.ClassFile.addMethod2(Ljavassist/bytecode/MethodInfo;)V#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#3
javassist.bytecode.ClassFile.addMethod2(Ljavassist/bytecode/MethodInfo;)V#Pop(1)#4
javassist.bytecode.ClassFile.addMethod2(Ljavassist/bytecode/MethodInfo;)V#Return(V)#5
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(I,2)#128
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Constant(I,1)#129
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#BinaryOp(I,add)#130
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalStore(I,2)#131
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Goto(118)#132
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,3)#120
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(Ljava/lang/String;,"LocalVariableTypeTable")#121
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#122
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(I,0)#123
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#ConditionalBranch(I,eq,132)#124
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,3)#132
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(Ljava/lang/String;,"RuntimeVisibleAnnotations")#133
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#134
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(I,0)#135
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#ConditionalBranch(I,ne,142)#136
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,3)#137
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(Ljava/lang/String;,"RuntimeInvisibleAnnotations")#138
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#139
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(I,0)#140
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#ConditionalBranch(I,eq,149)#141
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,3)#149
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(Ljava/lang/String;,"RuntimeVisibleParameterAnnotations")#150
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#151
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(I,0)#152
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#ConditionalBranch(I,ne,159)#153
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,3)#154
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(Ljava/lang/String;,"RuntimeInvisibleParameterAnnotations")#155
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#156
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(I,0)#157
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#ConditionalBranch(I,eq,166)#158
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,3)#166
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(Ljava/lang/String;,"Signature")#167
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#168
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(I,0)#169
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#ConditionalBranch(I,eq,178)#170
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#New(Ljavassist/bytecode/SignatureAttribute;,0)#171
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Dup(1,0)#172
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,0)#173
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(I,2)#174
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,1)#175
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(SPECIAL,Ljavassist/bytecode/SignatureAttribute;,<init>,(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V)#176
javassist.bytecode.SignatureAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.SignatureAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#1
javassist.bytecode.SignatureAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(I,2)#2
javassist.bytecode.SignatureAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,3)#3
javassist.bytecode.SignatureAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/AttributeInfo;,<init>,(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V)#4
javassist.bytecode.SignatureAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Return(V)#5
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Return(Ljava/lang/Object;)#177
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#133
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#New(Ljava/util/ArrayList;,0)#134
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Dup(1,0)#135
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#136
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Put(Ljava/util/ArrayList;,NONSTATIC,Ljavassist/bytecode/ClassFile;,attributes)#137
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#138
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#139
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalStore(I,3)#140
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Constant(I,0)#141
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalStore(I,2)#142
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(I,2)#143
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(I,3)#144
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#ConditionalBranch(I,ge,156)#145
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#146
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,5)#147
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#148
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Invoke(STATIC,Ljavassist/bytecode/AttributeInfo;,read,(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;)#149
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,3)#178
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(Ljava/lang/String;,"SourceFile")#179
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#180
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(I,0)#181
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#ConditionalBranch(I,eq,190)#182
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#New(Ljavassist/bytecode/SourceFileAttribute;,0)#183
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Dup(1,0)#184
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,0)#185
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(I,2)#186
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,1)#187
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(SPECIAL,Ljavassist/bytecode/SourceFileAttribute;,<init>,(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V)#188
javassist.bytecode.SourceFileAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.SourceFileAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#1
javassist.bytecode.SourceFileAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(I,2)#2
javassist.bytecode.SourceFileAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,3)#3
javassist.bytecode.SourceFileAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/AttributeInfo;,<init>,(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V)#4
javassist.bytecode.SourceFileAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Return(V)#5
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Return(Ljava/lang/Object;)#189
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljavassist/bytecode/ClassFile;,addAttribute,(Ljavassist/bytecode/AttributeInfo;)V)#150
javassist.bytecode.ClassFile.addAttribute(Ljavassist/bytecode/AttributeInfo;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.ClassFile.addAttribute(Ljavassist/bytecode/AttributeInfo;)V#Get(Ljava/util/ArrayList;,NONSTATIC,Ljavassist/bytecode/ClassFile;,attributes)#1
javassist.bytecode.ClassFile.addAttribute(Ljavassist/bytecode/AttributeInfo;)V#LocalLoad(Ljava/lang/Object;,1)#2
javassist.bytecode.ClassFile.addAttribute(Ljavassist/bytecode/AttributeInfo;)V#Invoke(VIRTUAL,Ljavassist/bytecode/AttributeInfo;,getName,()Ljava/lang/String;)#3
javassist.bytecode.AttributeInfo.getName()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.AttributeInfo.getName()Ljava/lang/String;#Get(Ljavassist/bytecode/ConstPool;,NONSTATIC,Ljavassist/bytecode/AttributeInfo;,constPool)#1
javassist.bytecode.AttributeInfo.getName()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#2
javassist.bytecode.AttributeInfo.getName()Ljava/lang/String;#Get(I,NONSTATIC,Ljavassist/bytecode/AttributeInfo;,name)#3
javassist.bytecode.AttributeInfo.getName()Ljava/lang/String;#Invoke(VIRTUAL,Ljavassist/bytecode/ConstPool;,getUtf8Info,(I)Ljava/lang/String;)#4
javassist.bytecode.AttributeInfo.getName()Ljava/lang/String;#Return(Ljava/lang/Object;)#5
javassist.bytecode.ClassFile.addAttribute(Ljavassist/bytecode/AttributeInfo;)V#Invoke(STATIC,Ljavassist/bytecode/AttributeInfo;,remove,(Ljava/util/ArrayList;Ljava/lang/String;)V)#4
javassist.bytecode.AttributeInfo.remove(Ljava/util/ArrayList;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.AttributeInfo.remove(Ljava/util/ArrayList;Ljava/lang/String;)V#Constant(L;,null)#1
javassist.bytecode.AttributeInfo.remove(Ljava/util/ArrayList;Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,ne,4)#2
javassist.bytecode.AttributeInfo.remove(Ljava/util/ArrayList;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#4
javassist.bytecode.AttributeInfo.remove(Ljava/util/ArrayList;Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/ArrayList;,listIterator,()Ljava/util/ListIterator;)#5
javassist.bytecode.AttributeInfo.remove(Ljava/util/ArrayList;Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,2)#6
javassist.bytecode.AttributeInfo.remove(Ljava/util/ArrayList;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#7
javassist.bytecode.AttributeInfo.remove(Ljava/util/ArrayList;Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/ListIterator;,hasNext,()Z)#8
javassist.bytecode.AttributeInfo.remove(Ljava/util/ArrayList;Ljava/lang/String;)V#Constant(I,0)#9
javassist.bytecode.AttributeInfo.remove(Ljava/util/ArrayList;Ljava/lang/String;)V#ConditionalBranch(I,eq,24)#10
javassist.bytecode.AttributeInfo.remove(Ljava/util/ArrayList;Ljava/lang/String;)V#Return(V)#24
javassist.bytecode.ClassFile.addAttribute(Ljavassist/bytecode/AttributeInfo;)V#LocalLoad(Ljava/lang/Object;,0)#5
javassist.bytecode.ClassFile.addAttribute(Ljavassist/bytecode/AttributeInfo;)V#Get(Ljava/util/ArrayList;,NONSTATIC,Ljavassist/bytecode/ClassFile;,attributes)#6
javassist.bytecode.ClassFile.addAttribute(Ljavassist/bytecode/AttributeInfo;)V#LocalLoad(Ljava/lang/Object;,1)#7
javassist.bytecode.ClassFile.addAttribute(Ljavassist/bytecode/AttributeInfo;)V#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#8
javassist.bytecode.ClassFile.addAttribute(Ljavassist/bytecode/AttributeInfo;)V#Pop(1)#9
javassist.bytecode.ClassFile.addAttribute(Ljavassist/bytecode/AttributeInfo;)V#Return(V)#10
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(I,2)#151
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Constant(I,1)#152
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#BinaryOp(I,add)#153
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalStore(I,2)#154
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Goto(143)#155
javassist.bytecode.AttributeInfo.remove(Ljava/util/ArrayList;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#11
javassist.bytecode.AttributeInfo.remove(Ljava/util/ArrayList;Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/ListIterator;,next,()Ljava/lang/Object;)#12
javassist.bytecode.AttributeInfo.remove(Ljava/util/ArrayList;Ljava/lang/String;)V#CheckCast(Ljavassist/bytecode/AttributeInfo;)#13
javassist.bytecode.AttributeInfo.remove(Ljava/util/ArrayList;Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,3)#14
javassist.bytecode.AttributeInfo.remove(Ljava/util/ArrayList;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#15
javassist.bytecode.AttributeInfo.remove(Ljava/util/ArrayList;Ljava/lang/String;)V#Invoke(VIRTUAL,Ljavassist/bytecode/AttributeInfo;,getName,()Ljava/lang/String;)#16
javassist.bytecode.AttributeInfo.remove(Ljava/util/ArrayList;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#17
javassist.bytecode.AttributeInfo.remove(Ljava/util/ArrayList;Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#18
javassist.bytecode.AttributeInfo.remove(Ljava/util/ArrayList;Ljava/lang/String;)V#Constant(I,0)#19
javassist.bytecode.AttributeInfo.remove(Ljava/util/ArrayList;Ljava/lang/String;)V#ConditionalBranch(I,eq,23)#20
javassist.bytecode.AttributeInfo.remove(Ljava/util/ArrayList;Ljava/lang/String;)V#Goto(7)#23
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,3)#36
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(Ljava/lang/String;,"ConstantValue")#37
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#38
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(I,0)#39
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#ConditionalBranch(I,eq,48)#40
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,3)#48
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(Ljava/lang/String;,"Deprecated")#49
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#50
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(I,0)#51
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#ConditionalBranch(I,eq,60)#52
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,3)#60
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(Ljava/lang/String;,"EnclosingMethod")#61
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#62
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(I,0)#63
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#ConditionalBranch(I,eq,72)#64
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,3)#72
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(Ljava/lang/String;,"Exceptions")#73
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#74
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(I,0)#75
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#ConditionalBranch(I,eq,84)#76
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,3)#84
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(Ljava/lang/String;,"InnerClasses")#85
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#86
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(I,0)#87
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#ConditionalBranch(I,eq,226)#88
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#New(Ljavassist/bytecode/InnerClassesAttribute;,0)#89
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Dup(1,0)#90
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,0)#91
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(I,2)#92
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,1)#93
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(SPECIAL,Ljavassist/bytecode/InnerClassesAttribute;,<init>,(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V)#94
javassist.bytecode.InnerClassesAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.InnerClassesAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#1
javassist.bytecode.InnerClassesAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(I,2)#2
javassist.bytecode.InnerClassesAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,3)#3
javassist.bytecode.InnerClassesAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/AttributeInfo;,<init>,(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V)#4
javassist.bytecode.InnerClassesAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Return(V)#5
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Return(Ljava/lang/Object;)#95
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#156
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#157
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Get(Ljavassist/bytecode/ConstPool;,NONSTATIC,Ljavassist/bytecode/ClassFile;,constPool)#158
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#159
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Get(I,NONSTATIC,Ljavassist/bytecode/ClassFile;,thisClass)#160
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljavassist/bytecode/ConstPool;,getClassInfo,(I)Ljava/lang/String;)#161
javassist.bytecode.ConstPool.getClassInfo(I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.ConstPool.getClassInfo(I)Ljava/lang/String;#LocalLoad(I,1)#1
javassist.bytecode.ConstPool.getClassInfo(I)Ljava/lang/String;#Invoke(VIRTUAL,Ljavassist/bytecode/ConstPool;,getItem,(I)Ljavassist/bytecode/ConstInfo;)#2
javassist.bytecode.ConstPool.getClassInfo(I)Ljava/lang/String;#CheckCast(Ljavassist/bytecode/ClassInfo;)#3
javassist.bytecode.ConstPool.getClassInfo(I)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,2)#4
javassist.bytecode.ConstPool.getClassInfo(I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#5
javassist.bytecode.ConstPool.getClassInfo(I)Ljava/lang/String;#Constant(L;,null)#6
javassist.bytecode.ConstPool.getClassInfo(I)Ljava/lang/String;#ConditionalBranch(Ljava/lang/Object;,ne,10)#7
javassist.bytecode.ConstPool.getClassInfo(I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#10
javassist.bytecode.ConstPool.getClassInfo(I)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#11
javassist.bytecode.ConstPool.getClassInfo(I)Ljava/lang/String;#Get(I,NONSTATIC,Ljavassist/bytecode/ClassInfo;,name)#12
javassist.bytecode.ConstPool.getClassInfo(I)Ljava/lang/String;#Invoke(VIRTUAL,Ljavassist/bytecode/ConstPool;,getUtf8Info,(I)Ljava/lang/String;)#13
javassist.bytecode.ConstPool.getClassInfo(I)Ljava/lang/String;#Invoke(STATIC,Ljavassist/bytecode/Descriptor;,toJavaName,(Ljava/lang/String;)Ljava/lang/String;)#14
javassist.bytecode.ConstPool.getClassInfo(I)Ljava/lang/String;#Return(Ljava/lang/Object;)#15
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Put(Ljava/lang/String;,NONSTATIC,Ljavassist/bytecode/ClassFile;,thisclassname)#162
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Return(V)#163
javassist.bytecode.ClassFile.<init>(Ljava/io/DataInputStream;)V#Return(V)#5
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalStore(Ljava/lang/Object;,3)#14
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalLoad(Ljava/lang/Object;,0)#15
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Get(Ljava/util/Map;,NONSTATIC,Lorg/scannotation/AnnotationDB;,classIndex)#16
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalLoad(Ljava/lang/Object;,3)#17
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Invoke(VIRTUAL,Ljavassist/bytecode/ClassFile;,getName,()Ljava/lang/String;)#18
javassist.bytecode.ClassFile.getName()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.ClassFile.getName()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Ljavassist/bytecode/ClassFile;,thisclassname)#1
javassist.bytecode.ClassFile.getName()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#New(Ljava/util/HashSet;,0)#19
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Dup(1,0)#20
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#21
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#22
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Pop(1)#23
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalLoad(Ljava/lang/Object;,0)#24
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Get(Z,NONSTATIC,Lorg/scannotation/AnnotationDB;,scanClassAnnotations)#25
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Constant(I,0)#26
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#ConditionalBranch(I,eq,28)#27
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalLoad(Ljava/lang/Object;,0)#28
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalLoad(Ljava/lang/Object;,3)#29
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Invoke(VIRTUAL,Lorg/scannotation/AnnotationDB;,scanClass,(Ljavassist/bytecode/ClassFile;)V)#30
org.scannotation.AnnotationDB.scanClass(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,1)#0
org.scannotation.AnnotationDB.scanClass(Ljavassist/bytecode/ClassFile;)V#Invoke(VIRTUAL,Ljavassist/bytecode/ClassFile;,getName,()Ljava/lang/String;)#1
org.scannotation.AnnotationDB.scanClass(Ljavassist/bytecode/ClassFile;)V#LocalStore(Ljava/lang/Object;,2)#2
org.scannotation.AnnotationDB.scanClass(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,1)#3
org.scannotation.AnnotationDB.scanClass(Ljavassist/bytecode/ClassFile;)V#Constant(Ljava/lang/String;,"RuntimeVisibleAnnotations")#4
org.scannotation.AnnotationDB.scanClass(Ljavassist/bytecode/ClassFile;)V#Invoke(VIRTUAL,Ljavassist/bytecode/ClassFile;,getAttribute,(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;)#5
javassist.bytecode.ClassFile.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.ClassFile.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#Get(Ljava/util/ArrayList;,NONSTATIC,Ljavassist/bytecode/ClassFile;,attributes)#1
javassist.bytecode.ClassFile.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#LocalStore(Ljava/lang/Object;,2)#2
javassist.bytecode.ClassFile.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,2)#3
javassist.bytecode.ClassFile.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#Invoke(VIRTUAL,Ljava/util/ArrayList;,size,()I)#4
javassist.bytecode.ClassFile.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#LocalStore(I,3)#5
javassist.bytecode.ClassFile.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#Constant(I,0)#6
javassist.bytecode.ClassFile.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#LocalStore(I,4)#7
javassist.bytecode.ClassFile.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(I,4)#8
javassist.bytecode.ClassFile.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(I,3)#9
javassist.bytecode.ClassFile.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#ConditionalBranch(I,ge,29)#10
javassist.bytecode.ClassFile.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,2)#11
javassist.bytecode.ClassFile.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(I,4)#12
javassist.bytecode.ClassFile.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#Invoke(VIRTUAL,Ljava/util/ArrayList;,get,(I)Ljava/lang/Object;)#13
javassist.bytecode.ClassFile.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#CheckCast(Ljavassist/bytecode/AttributeInfo;)#14
javassist.bytecode.ClassFile.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#LocalStore(Ljava/lang/Object;,5)#15
javassist.bytecode.ClassFile.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,5)#16
javassist.bytecode.ClassFile.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#Invoke(VIRTUAL,Ljavassist/bytecode/AttributeInfo;,getName,()Ljava/lang/String;)#17
javassist.bytecode.ClassFile.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,1)#18
javassist.bytecode.ClassFile.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#19
javassist.bytecode.ClassFile.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#Constant(I,0)#20
javassist.bytecode.ClassFile.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#ConditionalBranch(I,eq,24)#21
javassist.bytecode.ClassFile.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(I,4)#24
javassist.bytecode.ClassFile.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#Constant(I,1)#25
javassist.bytecode.ClassFile.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#BinaryOp(I,add)#26
javassist.bytecode.ClassFile.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#LocalStore(I,4)#27
javassist.bytecode.ClassFile.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#Goto(8)#28
javassist.bytecode.ClassFile.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#Constant(L;,null)#29
javassist.bytecode.ClassFile.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#Return(Ljava/lang/Object;)#30
org.scannotation.AnnotationDB.scanClass(Ljavassist/bytecode/ClassFile;)V#CheckCast(Ljavassist/bytecode/AnnotationsAttribute;)#6
org.scannotation.AnnotationDB.scanClass(Ljavassist/bytecode/ClassFile;)V#LocalStore(Ljava/lang/Object;,3)#7
org.scannotation.AnnotationDB.scanClass(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,1)#8
org.scannotation.AnnotationDB.scanClass(Ljavassist/bytecode/ClassFile;)V#Constant(Ljava/lang/String;,"RuntimeInvisibleAnnotations")#9
org.scannotation.AnnotationDB.scanClass(Ljavassist/bytecode/ClassFile;)V#Invoke(VIRTUAL,Ljavassist/bytecode/ClassFile;,getAttribute,(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;)#10
org.scannotation.AnnotationDB.scanClass(Ljavassist/bytecode/ClassFile;)V#CheckCast(Ljavassist/bytecode/AnnotationsAttribute;)#11
org.scannotation.AnnotationDB.scanClass(Ljavassist/bytecode/ClassFile;)V#LocalStore(Ljava/lang/Object;,4)#12
org.scannotation.AnnotationDB.scanClass(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,3)#13
org.scannotation.AnnotationDB.scanClass(Ljavassist/bytecode/ClassFile;)V#Constant(L;,null)#14
org.scannotation.AnnotationDB.scanClass(Ljavassist/bytecode/ClassFile;)V#ConditionalBranch(Ljava/lang/Object;,eq,21)#15
org.scannotation.AnnotationDB.scanClass(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,4)#21
org.scannotation.AnnotationDB.scanClass(Ljavassist/bytecode/ClassFile;)V#Constant(L;,null)#22
org.scannotation.AnnotationDB.scanClass(Ljavassist/bytecode/ClassFile;)V#ConditionalBranch(Ljava/lang/Object;,eq,29)#23
org.scannotation.AnnotationDB.scanClass(Ljavassist/bytecode/ClassFile;)V#Return(V)#29
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalLoad(Ljava/lang/Object;,0)#31
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Get(Z,NONSTATIC,Lorg/scannotation/AnnotationDB;,scanMethodAnnotations)#32
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Constant(I,0)#33
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#ConditionalBranch(I,ne,39)#34
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalLoad(Ljava/lang/Object;,0)#39
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalLoad(Ljava/lang/Object;,3)#40
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Invoke(VIRTUAL,Lorg/scannotation/AnnotationDB;,scanMethods,(Ljavassist/bytecode/ClassFile;)V)#41
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,1)#0
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#Invoke(VIRTUAL,Ljavassist/bytecode/ClassFile;,getMethods,()Ljava/util/List;)#1
javassist.bytecode.ClassFile.getMethods()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.ClassFile.getMethods()Ljava/util/List;#Get(Ljava/util/ArrayList;,NONSTATIC,Ljavassist/bytecode/ClassFile;,methods)#1
javassist.bytecode.ClassFile.getMethods()Ljava/util/List;#Return(Ljava/lang/Object;)#2
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#LocalStore(Ljava/lang/Object;,2)#2
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,2)#3
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#Constant(L;,null)#4
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#ConditionalBranch(Ljava/lang/Object;,ne,7)#5
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,2)#7
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#8
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#LocalStore(Ljava/lang/Object;,3)#9
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,3)#10
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#11
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#Constant(I,0)#12
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#ConditionalBranch(I,eq,131)#13
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,3)#14
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#15
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#LocalStore(Ljava/lang/Object;,4)#16
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,4)#17
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#CheckCast(Ljavassist/bytecode/MethodInfo;)#18
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#LocalStore(Ljava/lang/Object;,5)#19
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,0)#20
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#Get(Z,NONSTATIC,Lorg/scannotation/AnnotationDB;,scanMethodAnnotations)#21
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#Constant(I,0)#22
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#ConditionalBranch(I,eq,52)#23
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,5)#24
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#Constant(Ljava/lang/String;,"RuntimeVisibleAnnotations")#25
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#Invoke(VIRTUAL,Ljavassist/bytecode/MethodInfo;,getAttribute,(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;)#26
javassist.bytecode.MethodInfo.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.MethodInfo.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#Get(Ljava/util/ArrayList;,NONSTATIC,Ljavassist/bytecode/MethodInfo;,attribute)#1
javassist.bytecode.MethodInfo.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,1)#2
javassist.bytecode.MethodInfo.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#Invoke(STATIC,Ljavassist/bytecode/AttributeInfo;,lookup,(Ljava/util/ArrayList;Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;)#3
javassist.bytecode.AttributeInfo.lookup(Ljava/util/ArrayList;Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.AttributeInfo.lookup(Ljava/util/ArrayList;Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#Constant(L;,null)#1
javassist.bytecode.AttributeInfo.lookup(Ljava/util/ArrayList;Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#ConditionalBranch(Ljava/lang/Object;,ne,5)#2
javassist.bytecode.AttributeInfo.lookup(Ljava/util/ArrayList;Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,0)#5
javassist.bytecode.AttributeInfo.lookup(Ljava/util/ArrayList;Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#Invoke(VIRTUAL,Ljava/util/ArrayList;,listIterator,()Ljava/util/ListIterator;)#6
javassist.bytecode.AttributeInfo.lookup(Ljava/util/ArrayList;Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#LocalStore(Ljava/lang/Object;,2)#7
javassist.bytecode.AttributeInfo.lookup(Ljava/util/ArrayList;Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,2)#8
javassist.bytecode.AttributeInfo.lookup(Ljava/util/ArrayList;Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#Invoke(INTERFACE,Ljava/util/ListIterator;,hasNext,()Z)#9
javassist.bytecode.AttributeInfo.lookup(Ljava/util/ArrayList;Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#Constant(I,0)#10
javassist.bytecode.AttributeInfo.lookup(Ljava/util/ArrayList;Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#ConditionalBranch(I,eq,25)#11
javassist.bytecode.AttributeInfo.lookup(Ljava/util/ArrayList;Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,2)#12
javassist.bytecode.AttributeInfo.lookup(Ljava/util/ArrayList;Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#Invoke(INTERFACE,Ljava/util/ListIterator;,next,()Ljava/lang/Object;)#13
javassist.bytecode.AttributeInfo.lookup(Ljava/util/ArrayList;Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#CheckCast(Ljavassist/bytecode/AttributeInfo;)#14
javassist.bytecode.AttributeInfo.lookup(Ljava/util/ArrayList;Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#LocalStore(Ljava/lang/Object;,3)#15
javassist.bytecode.AttributeInfo.lookup(Ljava/util/ArrayList;Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,3)#16
javassist.bytecode.AttributeInfo.lookup(Ljava/util/ArrayList;Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#Invoke(VIRTUAL,Ljavassist/bytecode/AttributeInfo;,getName,()Ljava/lang/String;)#17
javassist.bytecode.AttributeInfo.lookup(Ljava/util/ArrayList;Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,1)#18
javassist.bytecode.AttributeInfo.lookup(Ljava/util/ArrayList;Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#19
javassist.bytecode.AttributeInfo.lookup(Ljava/util/ArrayList;Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#Constant(I,0)#20
javassist.bytecode.AttributeInfo.lookup(Ljava/util/ArrayList;Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#ConditionalBranch(I,eq,24)#21
javassist.bytecode.AttributeInfo.lookup(Ljava/util/ArrayList;Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#Goto(8)#24
javassist.bytecode.AttributeInfo.lookup(Ljava/util/ArrayList;Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#Constant(L;,null)#25
javassist.bytecode.AttributeInfo.lookup(Ljava/util/ArrayList;Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#Return(Ljava/lang/Object;)#26
javassist.bytecode.MethodInfo.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#Return(Ljava/lang/Object;)#4
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#CheckCast(Ljavassist/bytecode/AnnotationsAttribute;)#27
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#LocalStore(Ljava/lang/Object;,6)#28
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,5)#29
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#Constant(Ljava/lang/String;,"RuntimeInvisibleAnnotations")#30
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#Invoke(VIRTUAL,Ljavassist/bytecode/MethodInfo;,getAttribute,(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;)#31
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#CheckCast(Ljavassist/bytecode/AnnotationsAttribute;)#32
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#LocalStore(Ljava/lang/Object;,7)#33
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,6)#34
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#Constant(L;,null)#35
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#ConditionalBranch(Ljava/lang/Object;,eq,43)#36
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,7)#43
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#Constant(L;,null)#44
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#ConditionalBranch(Ljava/lang/Object;,eq,52)#45
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,0)#52
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#Get(Z,NONSTATIC,Lorg/scannotation/AnnotationDB;,scanParameterAnnotations)#53
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#Constant(I,0)#54
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#ConditionalBranch(I,eq,130)#55
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,5)#56
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#Constant(Ljava/lang/String;,"RuntimeVisibleParameterAnnotations")#57
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#Invoke(VIRTUAL,Ljavassist/bytecode/MethodInfo;,getAttribute,(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;)#58
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#CheckCast(Ljavassist/bytecode/ParameterAnnotationsAttribute;)#59
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#LocalStore(Ljava/lang/Object;,6)#60
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,5)#61
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#Constant(Ljava/lang/String;,"RuntimeInvisibleParameterAnnotations")#62
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#Invoke(VIRTUAL,Ljavassist/bytecode/MethodInfo;,getAttribute,(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;)#63
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#CheckCast(Ljavassist/bytecode/ParameterAnnotationsAttribute;)#64
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#LocalStore(Ljava/lang/Object;,7)#65
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,6)#66
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#Constant(L;,null)#67
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#ConditionalBranch(Ljava/lang/Object;,eq,98)#68
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,7)#98
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#Constant(L;,null)#99
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#ConditionalBranch(Ljava/lang/Object;,eq,130)#100
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#Goto(10)#130
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#Return(V)#131
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalLoad(Ljava/lang/Object;,0)#42
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Get(Z,NONSTATIC,Lorg/scannotation/AnnotationDB;,scanFieldAnnotations)#43
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Constant(I,0)#44
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#ConditionalBranch(I,eq,49)#45
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalLoad(Ljava/lang/Object;,0)#46
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalLoad(Ljava/lang/Object;,3)#47
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Invoke(VIRTUAL,Lorg/scannotation/AnnotationDB;,scanFields,(Ljavassist/bytecode/ClassFile;)V)#48
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,1)#0
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#Invoke(VIRTUAL,Ljavassist/bytecode/ClassFile;,getFields,()Ljava/util/List;)#1
javassist.bytecode.ClassFile.getFields()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.ClassFile.getFields()Ljava/util/List;#Get(Ljava/util/ArrayList;,NONSTATIC,Ljavassist/bytecode/ClassFile;,fields)#1
javassist.bytecode.ClassFile.getFields()Ljava/util/List;#Return(Ljava/lang/Object;)#2
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#LocalStore(Ljava/lang/Object;,2)#2
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,2)#3
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#Constant(L;,null)#4
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#ConditionalBranch(Ljava/lang/Object;,ne,7)#5
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,2)#7
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#8
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#LocalStore(Ljava/lang/Object;,3)#9
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,3)#10
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#11
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#Constant(I,0)#12
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#ConditionalBranch(I,eq,49)#13
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,3)#14
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#15
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#LocalStore(Ljava/lang/Object;,4)#16
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,4)#17
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#CheckCast(Ljavassist/bytecode/FieldInfo;)#18
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#LocalStore(Ljava/lang/Object;,5)#19
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,5)#20
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#Constant(Ljava/lang/String;,"RuntimeVisibleAnnotations")#21
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#Invoke(VIRTUAL,Ljavassist/bytecode/FieldInfo;,getAttribute,(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;)#22
javassist.bytecode.FieldInfo.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.FieldInfo.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#Get(Ljava/util/ArrayList;,NONSTATIC,Ljavassist/bytecode/FieldInfo;,attribute)#1
javassist.bytecode.FieldInfo.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,1)#2
javassist.bytecode.FieldInfo.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#Invoke(STATIC,Ljavassist/bytecode/AttributeInfo;,lookup,(Ljava/util/ArrayList;Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;)#3
javassist.bytecode.FieldInfo.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#Return(Ljava/lang/Object;)#4
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#CheckCast(Ljavassist/bytecode/AnnotationsAttribute;)#23
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#LocalStore(Ljava/lang/Object;,6)#24
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,5)#25
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#Constant(Ljava/lang/String;,"RuntimeInvisibleAnnotations")#26
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#Invoke(VIRTUAL,Ljavassist/bytecode/FieldInfo;,getAttribute,(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;)#27
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#CheckCast(Ljavassist/bytecode/AnnotationsAttribute;)#28
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#LocalStore(Ljava/lang/Object;,7)#29
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,6)#30
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#Constant(L;,null)#31
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#ConditionalBranch(Ljava/lang/Object;,eq,39)#32
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,7)#39
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#Constant(L;,null)#40
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#ConditionalBranch(Ljava/lang/Object;,eq,48)#41
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#Goto(10)#48
org.scannotation.AnnotationDB.scanFields(Ljavassist/bytecode/ClassFile;)V#Return(V)#49
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalLoad(Ljava/lang/Object;,3)#49
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Invoke(VIRTUAL,Ljavassist/bytecode/ClassFile;,getInterfaces,()[Ljava/lang/String;)#50
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#Get([Ljava/lang/String;,NONSTATIC,Ljavassist/bytecode/ClassFile;,cachedInterfaces)#1
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#Constant(L;,null)#2
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#ConditionalBranch(Ljava/lang/Object;,eq,7)#3
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#Constant(L;,null)#7
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#LocalStore(Ljava/lang/Object;,1)#8
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#9
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#Get([I,NONSTATIC,Ljavassist/bytecode/ClassFile;,interfaces)#10
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#Constant(L;,null)#11
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#ConditionalBranch(Ljava/lang/Object;,ne,17)#12
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#17
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#Get([I,NONSTATIC,Ljavassist/bytecode/ClassFile;,interfaces)#18
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#ArrayLength()#19
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#LocalStore(I,2)#20
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#LocalLoad(I,2)#21
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#New([Ljava/lang/String;,1)#22
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#LocalStore(Ljava/lang/Object;,3)#23
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#Constant(I,0)#24
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#LocalStore(I,4)#25
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#LocalLoad(I,4)#26
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#LocalLoad(I,2)#27
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#ConditionalBranch(I,ge,44)#28
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#29
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#LocalLoad(I,4)#30
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#31
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#Get(Ljavassist/bytecode/ConstPool;,NONSTATIC,Ljavassist/bytecode/ClassFile;,constPool)#32
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#33
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#Get([I,NONSTATIC,Ljavassist/bytecode/ClassFile;,interfaces)#34
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#LocalLoad(I,4)#35
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#ArrayLoad(I)#36
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#Invoke(VIRTUAL,Ljavassist/bytecode/ConstPool;,getClassInfo,(I)Ljava/lang/String;)#37
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#ArrayStore(Ljava/lang/Object;)#38
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#LocalLoad(I,4)#39
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#Constant(I,1)#40
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#BinaryOp(I,add)#41
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#LocalStore(I,4)#42
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#Goto(26)#43
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#44
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#LocalStore(Ljava/lang/Object;,1)#45
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#46
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#47
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#Put([Ljava/lang/String;,NONSTATIC,Ljavassist/bytecode/ClassFile;,cachedInterfaces)#48
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#49
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#Return(Ljava/lang/Object;)#50
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Constant(L;,null)#51
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#ConditionalBranch(Ljava/lang/Object;,eq,88)#52
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#New(Ljava/util/HashSet;,0)#53
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Dup(1,0)#54
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#55
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalStore(Ljava/lang/Object;,4)#56
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalLoad(Ljava/lang/Object;,3)#57
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Invoke(VIRTUAL,Ljavassist/bytecode/ClassFile;,getInterfaces,()[Ljava/lang/String;)#58
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#4
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#Get([Ljava/lang/String;,NONSTATIC,Ljavassist/bytecode/ClassFile;,cachedInterfaces)#5
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#Return(Ljava/lang/Object;)#6
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalStore(Ljava/lang/Object;,5)#59
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalLoad(Ljava/lang/Object;,5)#60
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#ArrayLength()#61
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalStore(I,6)#62
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Constant(I,0)#63
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalStore(I,7)#64
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalLoad(I,7)#65
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalLoad(I,6)#66
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#ConditionalBranch(I,ge,81)#67
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalLoad(Ljava/lang/Object;,5)#68
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalLoad(I,7)#69
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#ArrayLoad(Ljava/lang/Object;)#70
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalStore(Ljava/lang/Object;,8)#71
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalLoad(Ljava/lang/Object;,4)#72
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalLoad(Ljava/lang/Object;,8)#73
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#74
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Pop(1)#75
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalLoad(I,7)#76
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Constant(I,1)#77
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#BinaryOp(I,add)#78
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalStore(I,7)#79
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Goto(65)#80
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalLoad(Ljava/lang/Object;,0)#81
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Get(Ljava/util/Map;,NONSTATIC,Lorg/scannotation/AnnotationDB;,implementsIndex)#82
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalLoad(Ljava/lang/Object;,3)#83
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Invoke(VIRTUAL,Ljavassist/bytecode/ClassFile;,getName,()Ljava/lang/String;)#84
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalLoad(Ljava/lang/Object;,4)#85
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#86
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Pop(1)#87
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalLoad(Ljava/lang/Object;,2)#88
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,close,()V)#89
org.scannotation.archiveiterator.InputStreamWrapper.close()V#Return(V)#0
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#LocalLoad(Ljava/lang/Object;,1)#90
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Invoke(VIRTUAL,Ljava/io/InputStream;,close,()V)#91
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Goto(100)#92
org.scannotation.AnnotationDB.scanClass(Ljava/io/InputStream;)V#Return(V)#100
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#Goto(23)#32
org.scannotation.archiveiterator.JarIterator.setNext()V#LocalLoad(Ljava/lang/Object;,0)#7
org.scannotation.archiveiterator.JarIterator.setNext()V#Get(Ljava/util/jar/JarInputStream;,NONSTATIC,Lorg/scannotation/archiveiterator/JarIterator;,jar)#8
org.scannotation.archiveiterator.JarIterator.setNext()V#Invoke(VIRTUAL,Ljava/util/jar/JarInputStream;,closeEntry,()V)#9
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#56
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Constant(L;,null)#57
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Put([I,NONSTATIC,Ljavassist/bytecode/ClassFile;,interfaces)#58
javassist.bytecode.ClassFile.read(Ljava/io/DataInputStream;)V#Goto(80)#59
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#New(Ljavassist/bytecode/AnnotationsAttribute;,0)#142
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Dup(1,0)#143
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,0)#144
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(I,2)#145
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,1)#146
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(SPECIAL,Ljavassist/bytecode/AnnotationsAttribute;,<init>,(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V)#147
javassist.bytecode.AnnotationsAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.AnnotationsAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#1
javassist.bytecode.AnnotationsAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(I,2)#2
javassist.bytecode.AnnotationsAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,3)#3
javassist.bytecode.AnnotationsAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/AttributeInfo;,<init>,(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V)#4
javassist.bytecode.AnnotationsAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Return(V)#5
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Return(Ljava/lang/Object;)#148
javassist.bytecode.ClassFile.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,5)#22
javassist.bytecode.ClassFile.getAttribute(Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#Return(Ljava/lang/Object;)#23
org.scannotation.AnnotationDB.scanClass(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,0)#16
org.scannotation.AnnotationDB.scanClass(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,3)#17
org.scannotation.AnnotationDB.scanClass(Ljavassist/bytecode/ClassFile;)V#Invoke(VIRTUAL,Ljavassist/bytecode/AnnotationsAttribute;,getAnnotations,()[Ljavassist/bytecode/annotation/Annotation;)#18
javassist.bytecode.AnnotationsAttribute.getAnnotations()[Ljavassist/bytecode/annotation/Annotation;#New(Ljavassist/bytecode/AnnotationsAttribute$Parser;,0)#0
javassist.bytecode.AnnotationsAttribute.getAnnotations()[Ljavassist/bytecode/annotation/Annotation;#Dup(1,0)#1
javassist.bytecode.AnnotationsAttribute.getAnnotations()[Ljavassist/bytecode/annotation/Annotation;#LocalLoad(Ljava/lang/Object;,0)#2
javassist.bytecode.AnnotationsAttribute.getAnnotations()[Ljavassist/bytecode/annotation/Annotation;#Get([B,NONSTATIC,Ljavassist/bytecode/AnnotationsAttribute;,info)#3
javassist.bytecode.AnnotationsAttribute.getAnnotations()[Ljavassist/bytecode/annotation/Annotation;#LocalLoad(Ljava/lang/Object;,0)#4
javassist.bytecode.AnnotationsAttribute.getAnnotations()[Ljavassist/bytecode/annotation/Annotation;#Get(Ljavassist/bytecode/ConstPool;,NONSTATIC,Ljavassist/bytecode/AnnotationsAttribute;,constPool)#5
javassist.bytecode.AnnotationsAttribute.getAnnotations()[Ljavassist/bytecode/annotation/Annotation;#Invoke(SPECIAL,Ljavassist/bytecode/AnnotationsAttribute$Parser;,<init>,([BLjavassist/bytecode/ConstPool;)V)#6
javassist.bytecode.AnnotationsAttribute$Parser.<init>([BLjavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.AnnotationsAttribute$Parser.<init>([BLjavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,1)#1
javassist.bytecode.AnnotationsAttribute$Parser.<init>([BLjavassist/bytecode/ConstPool;)V#Invoke(SPECIAL,Ljavassist/bytecode/AnnotationsAttribute$Walker;,<init>,([B)V)#2
javassist.bytecode.AnnotationsAttribute$Walker.<init>([B)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.AnnotationsAttribute$Walker.<init>([B)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
javassist.bytecode.AnnotationsAttribute$Walker.<init>([B)V#LocalLoad(Ljava/lang/Object;,0)#2
javassist.bytecode.AnnotationsAttribute$Walker.<init>([B)V#LocalLoad(Ljava/lang/Object;,1)#3
javassist.bytecode.AnnotationsAttribute$Walker.<init>([B)V#Put([B,NONSTATIC,Ljavassist/bytecode/AnnotationsAttribute$Walker;,info)#4
javassist.bytecode.AnnotationsAttribute$Walker.<init>([B)V#Return(V)#5
javassist.bytecode.AnnotationsAttribute$Parser.<init>([BLjavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,0)#3
javassist.bytecode.AnnotationsAttribute$Parser.<init>([BLjavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,2)#4
javassist.bytecode.AnnotationsAttribute$Parser.<init>([BLjavassist/bytecode/ConstPool;)V#Put(Ljavassist/bytecode/ConstPool;,NONSTATIC,Ljavassist/bytecode/AnnotationsAttribute$Parser;,pool)#5
javassist.bytecode.AnnotationsAttribute$Parser.<init>([BLjavassist/bytecode/ConstPool;)V#Return(V)#6
javassist.bytecode.AnnotationsAttribute.getAnnotations()[Ljavassist/bytecode/annotation/Annotation;#Invoke(VIRTUAL,Ljavassist/bytecode/AnnotationsAttribute$Parser;,parseAnnotations,()[Ljavassist/bytecode/annotation/Annotation;)#7
javassist.bytecode.AnnotationsAttribute$Parser.parseAnnotations()[Ljavassist/bytecode/annotation/Annotation;#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.AnnotationsAttribute$Parser.parseAnnotations()[Ljavassist/bytecode/annotation/Annotation;#Invoke(VIRTUAL,Ljavassist/bytecode/AnnotationsAttribute$Parser;,annotationArray,()V)#1
javassist.bytecode.AnnotationsAttribute$Walker.annotationArray()V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.AnnotationsAttribute$Walker.annotationArray()V#Constant(I,0)#1
javassist.bytecode.AnnotationsAttribute$Walker.annotationArray()V#Invoke(VIRTUAL,Ljavassist/bytecode/AnnotationsAttribute$Walker;,annotationArray,(I)I)#2
javassist.bytecode.AnnotationsAttribute$Walker.annotationArray(I)I#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.AnnotationsAttribute$Walker.annotationArray(I)I#Get([B,NONSTATIC,Ljavassist/bytecode/AnnotationsAttribute$Walker;,info)#1
javassist.bytecode.AnnotationsAttribute$Walker.annotationArray(I)I#LocalLoad(I,1)#2
javassist.bytecode.AnnotationsAttribute$Walker.annotationArray(I)I#Invoke(STATIC,Ljavassist/bytecode/ByteArray;,readU16bit,([BI)I)#3
javassist.bytecode.ByteArray.readU16bit([BI)I#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.ByteArray.readU16bit([BI)I#LocalLoad(I,1)#1
javassist.bytecode.ByteArray.readU16bit([BI)I#ArrayLoad(B)#2
javassist.bytecode.ByteArray.readU16bit([BI)I#Constant(I,255)#3
javassist.bytecode.ByteArray.readU16bit([BI)I#BinaryOp(I,and)#4
javassist.bytecode.ByteArray.readU16bit([BI)I#Constant(I,8)#5
javassist.bytecode.ByteArray.readU16bit([BI)I#Shift(I,SHL)#6
javassist.bytecode.ByteArray.readU16bit([BI)I#LocalLoad(Ljava/lang/Object;,0)#7
javassist.bytecode.ByteArray.readU16bit([BI)I#LocalLoad(I,1)#8
javassist.bytecode.ByteArray.readU16bit([BI)I#Constant(I,1)#9
javassist.bytecode.ByteArray.readU16bit([BI)I#BinaryOp(I,add)#10
javassist.bytecode.ByteArray.readU16bit([BI)I#ArrayLoad(B)#11
javassist.bytecode.ByteArray.readU16bit([BI)I#Constant(I,255)#12
javassist.bytecode.ByteArray.readU16bit([BI)I#BinaryOp(I,and)#13
javassist.bytecode.ByteArray.readU16bit([BI)I#BinaryOp(I,or)#14
javassist.bytecode.ByteArray.readU16bit([BI)I#Return(I)#15
javassist.bytecode.AnnotationsAttribute$Walker.annotationArray(I)I#LocalStore(I,2)#4
javassist.bytecode.AnnotationsAttribute$Walker.annotationArray(I)I#LocalLoad(Ljava/lang/Object;,0)#5
javassist.bytecode.AnnotationsAttribute$Walker.annotationArray(I)I#LocalLoad(I,1)#6
javassist.bytecode.AnnotationsAttribute$Walker.annotationArray(I)I#Constant(I,2)#7
javassist.bytecode.AnnotationsAttribute$Walker.annotationArray(I)I#BinaryOp(I,add)#8
javassist.bytecode.AnnotationsAttribute$Walker.annotationArray(I)I#LocalLoad(I,2)#9
javassist.bytecode.AnnotationsAttribute$Walker.annotationArray(I)I#Invoke(VIRTUAL,Ljavassist/bytecode/AnnotationsAttribute$Walker;,annotationArray,(II)I)#10
javassist.bytecode.AnnotationsAttribute$Parser.annotationArray(II)I#LocalLoad(I,2)#0
javassist.bytecode.AnnotationsAttribute$Parser.annotationArray(II)I#New([Ljavassist/bytecode/annotation/Annotation;,1)#1
javassist.bytecode.AnnotationsAttribute$Parser.annotationArray(II)I#LocalStore(Ljava/lang/Object;,3)#2
javassist.bytecode.AnnotationsAttribute$Parser.annotationArray(II)I#Constant(I,0)#3
javassist.bytecode.AnnotationsAttribute$Parser.annotationArray(II)I#LocalStore(I,4)#4
javassist.bytecode.AnnotationsAttribute$Parser.annotationArray(II)I#LocalLoad(I,4)#5
javassist.bytecode.AnnotationsAttribute$Parser.annotationArray(II)I#LocalLoad(I,2)#6
javassist.bytecode.AnnotationsAttribute$Parser.annotationArray(II)I#ConditionalBranch(I,ge,22)#7
javassist.bytecode.AnnotationsAttribute$Parser.annotationArray(II)I#LocalLoad(Ljava/lang/Object;,0)#8
javassist.bytecode.AnnotationsAttribute$Parser.annotationArray(II)I#LocalLoad(I,1)#9
javassist.bytecode.AnnotationsAttribute$Parser.annotationArray(II)I#Invoke(VIRTUAL,Ljavassist/bytecode/AnnotationsAttribute$Parser;,annotation,(I)I)#10
javassist.bytecode.AnnotationsAttribute$Walker.annotation(I)I#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.AnnotationsAttribute$Walker.annotation(I)I#Get([B,NONSTATIC,Ljavassist/bytecode/AnnotationsAttribute$Walker;,info)#1
javassist.bytecode.AnnotationsAttribute$Walker.annotation(I)I#LocalLoad(I,1)#2
javassist.bytecode.AnnotationsAttribute$Walker.annotation(I)I#Invoke(STATIC,Ljavassist/bytecode/ByteArray;,readU16bit,([BI)I)#3
javassist.bytecode.AnnotationsAttribute$Walker.annotation(I)I#LocalStore(I,2)#4
javassist.bytecode.AnnotationsAttribute$Walker.annotation(I)I#LocalLoad(Ljava/lang/Object;,0)#5
javassist.bytecode.AnnotationsAttribute$Walker.annotation(I)I#Get([B,NONSTATIC,Ljavassist/bytecode/AnnotationsAttribute$Walker;,info)#6
javassist.bytecode.AnnotationsAttribute$Walker.annotation(I)I#LocalLoad(I,1)#7
javassist.bytecode.AnnotationsAttribute$Walker.annotation(I)I#Constant(I,2)#8
javassist.bytecode.AnnotationsAttribute$Walker.annotation(I)I#BinaryOp(I,add)#9
javassist.bytecode.AnnotationsAttribute$Walker.annotation(I)I#Invoke(STATIC,Ljavassist/bytecode/ByteArray;,readU16bit,([BI)I)#10
javassist.bytecode.AnnotationsAttribute$Walker.annotation(I)I#LocalStore(I,3)#11
javassist.bytecode.AnnotationsAttribute$Walker.annotation(I)I#LocalLoad(Ljava/lang/Object;,0)#12
javassist.bytecode.AnnotationsAttribute$Walker.annotation(I)I#LocalLoad(I,1)#13
javassist.bytecode.AnnotationsAttribute$Walker.annotation(I)I#Constant(I,4)#14
javassist.bytecode.AnnotationsAttribute$Walker.annotation(I)I#BinaryOp(I,add)#15
javassist.bytecode.AnnotationsAttribute$Walker.annotation(I)I#LocalLoad(I,2)#16
javassist.bytecode.AnnotationsAttribute$Walker.annotation(I)I#LocalLoad(I,3)#17
javassist.bytecode.AnnotationsAttribute$Walker.annotation(I)I#Invoke(VIRTUAL,Ljavassist/bytecode/AnnotationsAttribute$Walker;,annotation,(III)I)#18
javassist.bytecode.AnnotationsAttribute$Parser.annotation(III)I#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.AnnotationsAttribute$Parser.annotation(III)I#New(Ljavassist/bytecode/annotation/Annotation;,0)#1
javassist.bytecode.AnnotationsAttribute$Parser.annotation(III)I#Dup(1,0)#2
javassist.bytecode.AnnotationsAttribute$Parser.annotation(III)I#LocalLoad(I,2)#3
javassist.bytecode.AnnotationsAttribute$Parser.annotation(III)I#LocalLoad(Ljava/lang/Object;,0)#4
javassist.bytecode.AnnotationsAttribute$Parser.annotation(III)I#Get(Ljavassist/bytecode/ConstPool;,NONSTATIC,Ljavassist/bytecode/AnnotationsAttribute$Parser;,pool)#5
javassist.bytecode.AnnotationsAttribute$Parser.annotation(III)I#Invoke(SPECIAL,Ljavassist/bytecode/annotation/Annotation;,<init>,(ILjavassist/bytecode/ConstPool;)V)#6
javassist.bytecode.annotation.Annotation.<init>(ILjavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.annotation.Annotation.<init>(ILjavassist/bytecode/ConstPool;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
javassist.bytecode.annotation.Annotation.<init>(ILjavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,0)#2
javassist.bytecode.annotation.Annotation.<init>(ILjavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,2)#3
javassist.bytecode.annotation.Annotation.<init>(ILjavassist/bytecode/ConstPool;)V#Put(Ljavassist/bytecode/ConstPool;,NONSTATIC,Ljavassist/bytecode/annotation/Annotation;,pool)#4
javassist.bytecode.annotation.Annotation.<init>(ILjavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,0)#5
javassist.bytecode.annotation.Annotation.<init>(ILjavassist/bytecode/ConstPool;)V#LocalLoad(I,1)#6
javassist.bytecode.annotation.Annotation.<init>(ILjavassist/bytecode/ConstPool;)V#Put(I,NONSTATIC,Ljavassist/bytecode/annotation/Annotation;,typeIndex)#7
javassist.bytecode.annotation.Annotation.<init>(ILjavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,0)#8
javassist.bytecode.annotation.Annotation.<init>(ILjavassist/bytecode/ConstPool;)V#Constant(L;,null)#9
javassist.bytecode.annotation.Annotation.<init>(ILjavassist/bytecode/ConstPool;)V#Put(Ljava/util/LinkedHashMap;,NONSTATIC,Ljavassist/bytecode/annotation/Annotation;,members)#10
javassist.bytecode.annotation.Annotation.<init>(ILjavassist/bytecode/ConstPool;)V#Return(V)#11
javassist.bytecode.AnnotationsAttribute$Parser.annotation(III)I#Put(Ljavassist/bytecode/annotation/Annotation;,NONSTATIC,Ljavassist/bytecode/AnnotationsAttribute$Parser;,currentAnno)#7
javassist.bytecode.AnnotationsAttribute$Parser.annotation(III)I#LocalLoad(Ljava/lang/Object;,0)#8
javassist.bytecode.AnnotationsAttribute$Parser.annotation(III)I#LocalLoad(I,1)#9
javassist.bytecode.AnnotationsAttribute$Parser.annotation(III)I#LocalLoad(I,2)#10
javassist.bytecode.AnnotationsAttribute$Parser.annotation(III)I#LocalLoad(I,3)#11
javassist.bytecode.AnnotationsAttribute$Parser.annotation(III)I#Invoke(SPECIAL,Ljavassist/bytecode/AnnotationsAttribute$Walker;,annotation,(III)I)#12
javassist.bytecode.AnnotationsAttribute$Walker.annotation(III)I#Constant(I,0)#0
javassist.bytecode.AnnotationsAttribute$Walker.annotation(III)I#LocalStore(I,4)#1
javassist.bytecode.AnnotationsAttribute$Walker.annotation(III)I#LocalLoad(I,4)#2
javassist.bytecode.AnnotationsAttribute$Walker.annotation(III)I#LocalLoad(I,3)#3
javassist.bytecode.AnnotationsAttribute$Walker.annotation(III)I#ConditionalBranch(I,ge,14)#4
javassist.bytecode.AnnotationsAttribute$Walker.annotation(III)I#LocalLoad(Ljava/lang/Object;,0)#5
javassist.bytecode.AnnotationsAttribute$Walker.annotation(III)I#LocalLoad(I,1)#6
javassist.bytecode.AnnotationsAttribute$Walker.annotation(III)I#Invoke(VIRTUAL,Ljavassist/bytecode/AnnotationsAttribute$Walker;,memberValuePair,(I)I)#7
javassist.bytecode.AnnotationsAttribute$Walker.memberValuePair(I)I#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.AnnotationsAttribute$Walker.memberValuePair(I)I#Get([B,NONSTATIC,Ljavassist/bytecode/AnnotationsAttribute$Walker;,info)#1
javassist.bytecode.AnnotationsAttribute$Walker.memberValuePair(I)I#LocalLoad(I,1)#2
javassist.bytecode.AnnotationsAttribute$Walker.memberValuePair(I)I#Invoke(STATIC,Ljavassist/bytecode/ByteArray;,readU16bit,([BI)I)#3
javassist.bytecode.AnnotationsAttribute$Walker.memberValuePair(I)I#LocalStore(I,2)#4
javassist.bytecode.AnnotationsAttribute$Walker.memberValuePair(I)I#LocalLoad(Ljava/lang/Object;,0)#5
javassist.bytecode.AnnotationsAttribute$Walker.memberValuePair(I)I#LocalLoad(I,1)#6
javassist.bytecode.AnnotationsAttribute$Walker.memberValuePair(I)I#Constant(I,2)#7
javassist.bytecode.AnnotationsAttribute$Walker.memberValuePair(I)I#BinaryOp(I,add)#8
javassist.bytecode.AnnotationsAttribute$Walker.memberValuePair(I)I#LocalLoad(I,2)#9
javassist.bytecode.AnnotationsAttribute$Walker.memberValuePair(I)I#Invoke(VIRTUAL,Ljavassist/bytecode/AnnotationsAttribute$Walker;,memberValuePair,(II)I)#10
javassist.bytecode.AnnotationsAttribute$Parser.memberValuePair(II)I#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.AnnotationsAttribute$Parser.memberValuePair(II)I#LocalLoad(I,1)#1
javassist.bytecode.AnnotationsAttribute$Parser.memberValuePair(II)I#LocalLoad(I,2)#2
javassist.bytecode.AnnotationsAttribute$Parser.memberValuePair(II)I#Invoke(SPECIAL,Ljavassist/bytecode/AnnotationsAttribute$Walker;,memberValuePair,(II)I)#3
javassist.bytecode.AnnotationsAttribute$Walker.memberValuePair(II)I#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.AnnotationsAttribute$Walker.memberValuePair(II)I#LocalLoad(I,1)#1
javassist.bytecode.AnnotationsAttribute$Walker.memberValuePair(II)I#Invoke(VIRTUAL,Ljavassist/bytecode/AnnotationsAttribute$Walker;,memberValue,(I)I)#2
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Get([B,NONSTATIC,Ljavassist/bytecode/AnnotationsAttribute$Walker;,info)#1
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalLoad(I,1)#2
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#ArrayLoad(B)#3
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Constant(I,255)#4
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#BinaryOp(I,and)#5
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalStore(I,2)#6
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalLoad(I,2)#7
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Constant(I,101)#8
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#ConditionalBranch(I,ne,32)#9
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalLoad(I,2)#32
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Constant(I,99)#33
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#ConditionalBranch(I,ne,49)#34
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalLoad(I,2)#49
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Constant(I,64)#50
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#ConditionalBranch(I,ne,58)#51
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalLoad(I,2)#58
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Constant(I,91)#59
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#ConditionalBranch(I,ne,75)#60
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalLoad(Ljava/lang/Object;,0)#75
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Get([B,NONSTATIC,Ljavassist/bytecode/AnnotationsAttribute$Walker;,info)#76
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalLoad(I,1)#77
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Constant(I,1)#78
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#BinaryOp(I,add)#79
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Invoke(STATIC,Ljavassist/bytecode/ByteArray;,readU16bit,([BI)I)#80
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalStore(I,3)#81
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalLoad(Ljava/lang/Object;,0)#82
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalLoad(I,2)#83
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalLoad(I,3)#84
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Invoke(VIRTUAL,Ljavassist/bytecode/AnnotationsAttribute$Walker;,constValueMember,(II)V)#85
javassist.bytecode.AnnotationsAttribute$Parser.constValueMember(II)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.AnnotationsAttribute$Parser.constValueMember(II)V#Get(Ljavassist/bytecode/ConstPool;,NONSTATIC,Ljavassist/bytecode/AnnotationsAttribute$Parser;,pool)#1
javassist.bytecode.AnnotationsAttribute$Parser.constValueMember(II)V#LocalStore(Ljava/lang/Object;,4)#2
javassist.bytecode.AnnotationsAttribute$Parser.constValueMember(II)V#LocalLoad(I,1)#3
javassist.bytecode.AnnotationsAttribute$Parser.constValueMember(II)V#Switch(68,66,5,67,12,68,19,70,26,73,33,74,40,83,47,90,54,115,61)#4
javassist.bytecode.AnnotationsAttribute$Parser.constValueMember(II)V#New(Ljavassist/bytecode/annotation/StringMemberValue;,0)#61
javassist.bytecode.AnnotationsAttribute$Parser.constValueMember(II)V#Dup(1,0)#62
javassist.bytecode.AnnotationsAttribute$Parser.constValueMember(II)V#LocalLoad(I,2)#63
javassist.bytecode.AnnotationsAttribute$Parser.constValueMember(II)V#LocalLoad(Ljava/lang/Object;,4)#64
javassist.bytecode.AnnotationsAttribute$Parser.constValueMember(II)V#Invoke(SPECIAL,Ljavassist/bytecode/annotation/StringMemberValue;,<init>,(ILjavassist/bytecode/ConstPool;)V)#65
javassist.bytecode.annotation.StringMemberValue.<init>(ILjavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.annotation.StringMemberValue.<init>(ILjavassist/bytecode/ConstPool;)V#Constant(I,115)#1
javassist.bytecode.annotation.StringMemberValue.<init>(ILjavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,2)#2
javassist.bytecode.annotation.StringMemberValue.<init>(ILjavassist/bytecode/ConstPool;)V#Invoke(SPECIAL,Ljavassist/bytecode/annotation/MemberValue;,<init>,(CLjavassist/bytecode/ConstPool;)V)#3
javassist.bytecode.annotation.MemberValue.<init>(CLjavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.annotation.MemberValue.<init>(CLjavassist/bytecode/ConstPool;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
javassist.bytecode.annotation.MemberValue.<init>(CLjavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,0)#2
javassist.bytecode.annotation.MemberValue.<init>(CLjavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,2)#3
javassist.bytecode.annotation.MemberValue.<init>(CLjavassist/bytecode/ConstPool;)V#Put(Ljavassist/bytecode/ConstPool;,NONSTATIC,Ljavassist/bytecode/annotation/MemberValue;,cp)#4
javassist.bytecode.annotation.MemberValue.<init>(CLjavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,0)#5
javassist.bytecode.annotation.MemberValue.<init>(CLjavassist/bytecode/ConstPool;)V#LocalLoad(I,1)#6
javassist.bytecode.annotation.MemberValue.<init>(CLjavassist/bytecode/ConstPool;)V#Put(C,NONSTATIC,Ljavassist/bytecode/annotation/MemberValue;,tag)#7
javassist.bytecode.annotation.MemberValue.<init>(CLjavassist/bytecode/ConstPool;)V#Return(V)#8
javassist.bytecode.annotation.StringMemberValue.<init>(ILjavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,0)#4
javassist.bytecode.annotation.StringMemberValue.<init>(ILjavassist/bytecode/ConstPool;)V#LocalLoad(I,1)#5
javassist.bytecode.annotation.StringMemberValue.<init>(ILjavassist/bytecode/ConstPool;)V#Put(I,NONSTATIC,Ljavassist/bytecode/annotation/StringMemberValue;,valueIndex)#6
javassist.bytecode.annotation.StringMemberValue.<init>(ILjavassist/bytecode/ConstPool;)V#Return(V)#7
javassist.bytecode.AnnotationsAttribute$Parser.constValueMember(II)V#LocalStore(Ljava/lang/Object;,3)#66
javassist.bytecode.AnnotationsAttribute$Parser.constValueMember(II)V#Goto(80)#67
javassist.bytecode.AnnotationsAttribute$Parser.constValueMember(II)V#LocalLoad(Ljava/lang/Object;,0)#80
javassist.bytecode.AnnotationsAttribute$Parser.constValueMember(II)V#LocalLoad(Ljava/lang/Object;,3)#81
javassist.bytecode.AnnotationsAttribute$Parser.constValueMember(II)V#Put(Ljavassist/bytecode/annotation/MemberValue;,NONSTATIC,Ljavassist/bytecode/AnnotationsAttribute$Parser;,currentMember)#82
javassist.bytecode.AnnotationsAttribute$Parser.constValueMember(II)V#LocalLoad(Ljava/lang/Object;,0)#83
javassist.bytecode.AnnotationsAttribute$Parser.constValueMember(II)V#LocalLoad(I,1)#84
javassist.bytecode.AnnotationsAttribute$Parser.constValueMember(II)V#LocalLoad(I,2)#85
javassist.bytecode.AnnotationsAttribute$Parser.constValueMember(II)V#Invoke(SPECIAL,Ljavassist/bytecode/AnnotationsAttribute$Walker;,constValueMember,(II)V)#86
javassist.bytecode.AnnotationsAttribute$Walker.constValueMember(II)V#Return(V)#0
javassist.bytecode.AnnotationsAttribute$Parser.constValueMember(II)V#Return(V)#87
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalLoad(I,1)#86
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Constant(I,3)#87
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#BinaryOp(I,add)#88
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Return(I)#89
javassist.bytecode.AnnotationsAttribute$Walker.memberValuePair(II)I#Return(I)#3
javassist.bytecode.AnnotationsAttribute$Parser.memberValuePair(II)I#LocalStore(I,1)#4
javassist.bytecode.AnnotationsAttribute$Parser.memberValuePair(II)I#LocalLoad(Ljava/lang/Object;,0)#5
javassist.bytecode.AnnotationsAttribute$Parser.memberValuePair(II)I#Get(Ljavassist/bytecode/annotation/Annotation;,NONSTATIC,Ljavassist/bytecode/AnnotationsAttribute$Parser;,currentAnno)#6
javassist.bytecode.AnnotationsAttribute$Parser.memberValuePair(II)I#LocalLoad(I,2)#7
javassist.bytecode.AnnotationsAttribute$Parser.memberValuePair(II)I#LocalLoad(Ljava/lang/Object;,0)#8
javassist.bytecode.AnnotationsAttribute$Parser.memberValuePair(II)I#Get(Ljavassist/bytecode/annotation/MemberValue;,NONSTATIC,Ljavassist/bytecode/AnnotationsAttribute$Parser;,currentMember)#9
javassist.bytecode.AnnotationsAttribute$Parser.memberValuePair(II)I#Invoke(VIRTUAL,Ljavassist/bytecode/annotation/Annotation;,addMemberValue,(ILjavassist/bytecode/annotation/MemberValue;)V)#10
javassist.bytecode.annotation.Annotation.addMemberValue(ILjavassist/bytecode/annotation/MemberValue;)V#New(Ljavassist/bytecode/annotation/Annotation$Pair;,0)#0
javassist.bytecode.annotation.Annotation.addMemberValue(ILjavassist/bytecode/annotation/MemberValue;)V#Dup(1,0)#1
javassist.bytecode.annotation.Annotation.addMemberValue(ILjavassist/bytecode/annotation/MemberValue;)V#Invoke(SPECIAL,Ljavassist/bytecode/annotation/Annotation$Pair;,<init>,()V)#2
javassist.bytecode.annotation.Annotation$Pair.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.annotation.Annotation$Pair.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
javassist.bytecode.annotation.Annotation$Pair.<init>()V#Return(V)#2
javassist.bytecode.annotation.Annotation.addMemberValue(ILjavassist/bytecode/annotation/MemberValue;)V#LocalStore(Ljava/lang/Object;,3)#3
javassist.bytecode.annotation.Annotation.addMemberValue(ILjavassist/bytecode/annotation/MemberValue;)V#LocalLoad(Ljava/lang/Object;,3)#4
javassist.bytecode.annotation.Annotation.addMemberValue(ILjavassist/bytecode/annotation/MemberValue;)V#LocalLoad(I,1)#5
javassist.bytecode.annotation.Annotation.addMemberValue(ILjavassist/bytecode/annotation/MemberValue;)V#Put(I,NONSTATIC,Ljavassist/bytecode/annotation/Annotation$Pair;,name)#6
javassist.bytecode.annotation.Annotation.addMemberValue(ILjavassist/bytecode/annotation/MemberValue;)V#LocalLoad(Ljava/lang/Object;,3)#7
javassist.bytecode.annotation.Annotation.addMemberValue(ILjavassist/bytecode/annotation/MemberValue;)V#LocalLoad(Ljava/lang/Object;,2)#8
javassist.bytecode.annotation.Annotation.addMemberValue(ILjavassist/bytecode/annotation/MemberValue;)V#Put(Ljavassist/bytecode/annotation/MemberValue;,NONSTATIC,Ljavassist/bytecode/annotation/Annotation$Pair;,value)#9
javassist.bytecode.annotation.Annotation.addMemberValue(ILjavassist/bytecode/annotation/MemberValue;)V#LocalLoad(Ljava/lang/Object;,0)#10
javassist.bytecode.annotation.Annotation.addMemberValue(ILjavassist/bytecode/annotation/MemberValue;)V#LocalLoad(Ljava/lang/Object;,3)#11
javassist.bytecode.annotation.Annotation.addMemberValue(ILjavassist/bytecode/annotation/MemberValue;)V#Invoke(SPECIAL,Ljavassist/bytecode/annotation/Annotation;,addMemberValue,(Ljavassist/bytecode/annotation/Annotation$Pair;)V)#12
javassist.bytecode.annotation.Annotation.addMemberValue(Ljavassist/bytecode/annotation/Annotation$Pair;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.annotation.Annotation.addMemberValue(Ljavassist/bytecode/annotation/Annotation$Pair;)V#Get(Ljavassist/bytecode/ConstPool;,NONSTATIC,Ljavassist/bytecode/annotation/Annotation;,pool)#1
javassist.bytecode.annotation.Annotation.addMemberValue(Ljavassist/bytecode/annotation/Annotation$Pair;)V#LocalLoad(Ljava/lang/Object;,1)#2
javassist.bytecode.annotation.Annotation.addMemberValue(Ljavassist/bytecode/annotation/Annotation$Pair;)V#Get(I,NONSTATIC,Ljavassist/bytecode/annotation/Annotation$Pair;,name)#3
javassist.bytecode.annotation.Annotation.addMemberValue(Ljavassist/bytecode/annotation/Annotation$Pair;)V#Invoke(VIRTUAL,Ljavassist/bytecode/ConstPool;,getUtf8Info,(I)Ljava/lang/String;)#4
javassist.bytecode.annotation.Annotation.addMemberValue(Ljavassist/bytecode/annotation/Annotation$Pair;)V#LocalStore(Ljava/lang/Object;,2)#5
javassist.bytecode.annotation.Annotation.addMemberValue(Ljavassist/bytecode/annotation/Annotation$Pair;)V#LocalLoad(Ljava/lang/Object;,0)#6
javassist.bytecode.annotation.Annotation.addMemberValue(Ljavassist/bytecode/annotation/Annotation$Pair;)V#Get(Ljava/util/LinkedHashMap;,NONSTATIC,Ljavassist/bytecode/annotation/Annotation;,members)#7
javassist.bytecode.annotation.Annotation.addMemberValue(Ljavassist/bytecode/annotation/Annotation$Pair;)V#Constant(L;,null)#8
javassist.bytecode.annotation.Annotation.addMemberValue(Ljavassist/bytecode/annotation/Annotation$Pair;)V#ConditionalBranch(Ljava/lang/Object;,ne,15)#9
javassist.bytecode.annotation.Annotation.addMemberValue(Ljavassist/bytecode/annotation/Annotation$Pair;)V#LocalLoad(Ljava/lang/Object;,0)#10
javassist.bytecode.annotation.Annotation.addMemberValue(Ljavassist/bytecode/annotation/Annotation$Pair;)V#New(Ljava/util/LinkedHashMap;,0)#11
javassist.bytecode.annotation.Annotation.addMemberValue(Ljavassist/bytecode/annotation/Annotation$Pair;)V#Dup(1,0)#12
javassist.bytecode.annotation.Annotation.addMemberValue(Ljavassist/bytecode/annotation/Annotation$Pair;)V#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#13
javassist.bytecode.annotation.Annotation.addMemberValue(Ljavassist/bytecode/annotation/Annotation$Pair;)V#Put(Ljava/util/LinkedHashMap;,NONSTATIC,Ljavassist/bytecode/annotation/Annotation;,members)#14
javassist.bytecode.annotation.Annotation.addMemberValue(Ljavassist/bytecode/annotation/Annotation$Pair;)V#LocalLoad(Ljava/lang/Object;,0)#15
javassist.bytecode.annotation.Annotation.addMemberValue(Ljavassist/bytecode/annotation/Annotation$Pair;)V#Get(Ljava/util/LinkedHashMap;,NONSTATIC,Ljavassist/bytecode/annotation/Annotation;,members)#16
javassist.bytecode.annotation.Annotation.addMemberValue(Ljavassist/bytecode/annotation/Annotation$Pair;)V#LocalLoad(Ljava/lang/Object;,2)#17
javassist.bytecode.annotation.Annotation.addMemberValue(Ljavassist/bytecode/annotation/Annotation$Pair;)V#LocalLoad(Ljava/lang/Object;,1)#18
javassist.bytecode.annotation.Annotation.addMemberValue(Ljavassist/bytecode/annotation/Annotation$Pair;)V#Invoke(VIRTUAL,Ljava/util/LinkedHashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#19
javassist.bytecode.annotation.Annotation.addMemberValue(Ljavassist/bytecode/annotation/Annotation$Pair;)V#Pop(1)#20
javassist.bytecode.annotation.Annotation.addMemberValue(Ljavassist/bytecode/annotation/Annotation$Pair;)V#Return(V)#21
javassist.bytecode.annotation.Annotation.addMemberValue(ILjavassist/bytecode/annotation/MemberValue;)V#Return(V)#13
javassist.bytecode.AnnotationsAttribute$Parser.memberValuePair(II)I#LocalLoad(I,1)#11
javassist.bytecode.AnnotationsAttribute$Parser.memberValuePair(II)I#Return(I)#12
javassist.bytecode.AnnotationsAttribute$Walker.memberValuePair(I)I#Return(I)#11
javassist.bytecode.AnnotationsAttribute$Walker.annotation(III)I#LocalStore(I,1)#8
javassist.bytecode.AnnotationsAttribute$Walker.annotation(III)I#LocalLoad(I,4)#9
javassist.bytecode.AnnotationsAttribute$Walker.annotation(III)I#Constant(I,1)#10
javassist.bytecode.AnnotationsAttribute$Walker.annotation(III)I#BinaryOp(I,add)#11
javassist.bytecode.AnnotationsAttribute$Walker.annotation(III)I#LocalStore(I,4)#12
javassist.bytecode.AnnotationsAttribute$Walker.annotation(III)I#Goto(2)#13
javassist.bytecode.AnnotationsAttribute$Walker.annotation(III)I#LocalLoad(I,1)#14
javassist.bytecode.AnnotationsAttribute$Walker.annotation(III)I#Return(I)#15
javassist.bytecode.AnnotationsAttribute$Parser.annotation(III)I#Return(I)#13
javassist.bytecode.AnnotationsAttribute$Walker.annotation(I)I#Return(I)#19
javassist.bytecode.AnnotationsAttribute$Parser.annotationArray(II)I#LocalStore(I,1)#11
javassist.bytecode.AnnotationsAttribute$Parser.annotationArray(II)I#LocalLoad(Ljava/lang/Object;,3)#12
javassist.bytecode.AnnotationsAttribute$Parser.annotationArray(II)I#LocalLoad(I,4)#13
javassist.bytecode.AnnotationsAttribute$Parser.annotationArray(II)I#LocalLoad(Ljava/lang/Object;,0)#14
javassist.bytecode.AnnotationsAttribute$Parser.annotationArray(II)I#Get(Ljavassist/bytecode/annotation/Annotation;,NONSTATIC,Ljavassist/bytecode/AnnotationsAttribute$Parser;,currentAnno)#15
javassist.bytecode.AnnotationsAttribute$Parser.annotationArray(II)I#ArrayStore(Ljava/lang/Object;)#16
javassist.bytecode.AnnotationsAttribute$Parser.annotationArray(II)I#LocalLoad(I,4)#17
javassist.bytecode.AnnotationsAttribute$Parser.annotationArray(II)I#Constant(I,1)#18
javassist.bytecode.AnnotationsAttribute$Parser.annotationArray(II)I#BinaryOp(I,add)#19
javassist.bytecode.AnnotationsAttribute$Parser.annotationArray(II)I#LocalStore(I,4)#20
javassist.bytecode.AnnotationsAttribute$Parser.annotationArray(II)I#Goto(5)#21
javassist.bytecode.AnnotationsAttribute$Parser.annotationArray(II)I#LocalLoad(Ljava/lang/Object;,0)#22
javassist.bytecode.AnnotationsAttribute$Parser.annotationArray(II)I#LocalLoad(Ljava/lang/Object;,3)#23
javassist.bytecode.AnnotationsAttribute$Parser.annotationArray(II)I#Put([Ljavassist/bytecode/annotation/Annotation;,NONSTATIC,Ljavassist/bytecode/AnnotationsAttribute$Parser;,allAnno)#24
javassist.bytecode.AnnotationsAttribute$Parser.annotationArray(II)I#LocalLoad(I,1)#25
javassist.bytecode.AnnotationsAttribute$Parser.annotationArray(II)I#Return(I)#26
javassist.bytecode.AnnotationsAttribute$Walker.annotationArray(I)I#Return(I)#11
javassist.bytecode.AnnotationsAttribute$Walker.annotationArray()V#Pop(1)#3
javassist.bytecode.AnnotationsAttribute$Walker.annotationArray()V#Return(V)#4
javassist.bytecode.AnnotationsAttribute$Parser.parseAnnotations()[Ljavassist/bytecode/annotation/Annotation;#LocalLoad(Ljava/lang/Object;,0)#2
javassist.bytecode.AnnotationsAttribute$Parser.parseAnnotations()[Ljavassist/bytecode/annotation/Annotation;#Get([Ljavassist/bytecode/annotation/Annotation;,NONSTATIC,Ljavassist/bytecode/AnnotationsAttribute$Parser;,allAnno)#3
javassist.bytecode.AnnotationsAttribute$Parser.parseAnnotations()[Ljavassist/bytecode/annotation/Annotation;#Return(Ljava/lang/Object;)#4
javassist.bytecode.AnnotationsAttribute.getAnnotations()[Ljavassist/bytecode/annotation/Annotation;#Return(Ljava/lang/Object;)#8
org.scannotation.AnnotationDB.scanClass(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,2)#19
org.scannotation.AnnotationDB.scanClass(Ljavassist/bytecode/ClassFile;)V#Invoke(VIRTUAL,Lorg/scannotation/AnnotationDB;,populate,([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V)#20
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#0
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#Constant(L;,null)#1
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,ne,4)#2
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#4
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#Get(Ljava/util/Map;,NONSTATIC,Lorg/scannotation/AnnotationDB;,classIndex)#5
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#6
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#7
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#CheckCast(Ljava/util/Set;)#8
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,3)#9
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#10
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,4)#11
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,4)#12
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#ArrayLength()#13
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#LocalStore(I,5)#14
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#Constant(I,0)#15
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#LocalStore(I,6)#16
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#LocalLoad(I,6)#17
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#LocalLoad(I,5)#18
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#ConditionalBranch(I,ge,59)#19
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,4)#20
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#LocalLoad(I,6)#21
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#ArrayLoad(Ljava/lang/Object;)#22
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,7)#23
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#24
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#Get(Ljava/util/Map;,NONSTATIC,Lorg/scannotation/AnnotationDB;,annotationIndex)#25
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,7)#26
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#Invoke(VIRTUAL,Ljavassist/bytecode/annotation/Annotation;,getTypeName,()Ljava/lang/String;)#27
javassist.bytecode.annotation.Annotation.getTypeName()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.annotation.Annotation.getTypeName()Ljava/lang/String;#Get(Ljavassist/bytecode/ConstPool;,NONSTATIC,Ljavassist/bytecode/annotation/Annotation;,pool)#1
javassist.bytecode.annotation.Annotation.getTypeName()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#2
javassist.bytecode.annotation.Annotation.getTypeName()Ljava/lang/String;#Get(I,NONSTATIC,Ljavassist/bytecode/annotation/Annotation;,typeIndex)#3
javassist.bytecode.annotation.Annotation.getTypeName()Ljava/lang/String;#Invoke(VIRTUAL,Ljavassist/bytecode/ConstPool;,getUtf8Info,(I)Ljava/lang/String;)#4
javassist.bytecode.annotation.Annotation.getTypeName()Ljava/lang/String;#Invoke(STATIC,Ljavassist/bytecode/Descriptor;,toClassName,(Ljava/lang/String;)Ljava/lang/String;)#5
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#0
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,1)#1
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#2
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,2)#3
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#4
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#5
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#6
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,3)#7
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,3)#8
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#Constant(I,91)#9
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ne,24)#10
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,3)#24
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#Constant(I,76)#25
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ne,47)#26
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#27
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#Constant(I,59)#28
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,2)#29
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,2)#30
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#Constant(I,1)#31
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#BinaryOp(I,add)#32
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,2)#33
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,indexOf,(II)I)#34
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,5)#35
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#36
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,2)#37
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,5)#38
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,substring,(II)Ljava/lang/String;)#39
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#Constant(I,47)#40
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#Constant(I,46)#41
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,replace,(CC)Ljava/lang/String;)#42
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,4)#43
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,5)#44
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,2)#45
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#Goto(113)#46
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,2)#113
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#Constant(I,1)#114
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#BinaryOp(I,add)#115
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#116
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#117
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,131)#118
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,1)#131
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#132
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ne,136)#133
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,4)#134
javassist.bytecode.Descriptor.toClassName(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#135
javassist.bytecode.annotation.Annotation.getTypeName()Ljava/lang/String;#Return(Ljava/lang/Object;)#6
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#28
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#CheckCast(Ljava/util/Set;)#29
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,8)#30
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,8)#31
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#Constant(L;,null)#32
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,ne,45)#33
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#New(Ljava/util/HashSet;,0)#34
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#Dup(1,0)#35
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#36
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,8)#37
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#38
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#Get(Ljava/util/Map;,NONSTATIC,Lorg/scannotation/AnnotationDB;,annotationIndex)#39
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,7)#40
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#Invoke(VIRTUAL,Ljavassist/bytecode/annotation/Annotation;,getTypeName,()Ljava/lang/String;)#41
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,8)#42
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#43
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#Pop(1)#44
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,8)#45
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#46
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#47
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#Pop(1)#48
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#49
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,7)#50
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#Invoke(VIRTUAL,Ljavassist/bytecode/annotation/Annotation;,getTypeName,()Ljava/lang/String;)#51
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#52
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#Pop(1)#53
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#LocalLoad(I,6)#54
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#Constant(I,1)#55
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#BinaryOp(I,add)#56
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#LocalStore(I,6)#57
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#Goto(17)#58
org.scannotation.AnnotationDB.populate([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V#Return(V)#59
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#Constant(I,0)#13
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#New([Ljava/lang/String;,1)#14
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#LocalStore(Ljava/lang/Object;,1)#15
javassist.bytecode.ClassFile.getInterfaces()[Ljava/lang/String;#Goto(46)#16
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalLoad(Ljava/lang/Object;,0)#61
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Get([B,NONSTATIC,Ljavassist/bytecode/AnnotationsAttribute$Walker;,info)#62
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalLoad(I,1)#63
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Constant(I,1)#64
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#BinaryOp(I,add)#65
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Invoke(STATIC,Ljavassist/bytecode/ByteArray;,readU16bit,([BI)I)#66
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalStore(I,3)#67
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalLoad(Ljava/lang/Object;,0)#68
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalLoad(I,1)#69
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Constant(I,3)#70
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#BinaryOp(I,add)#71
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalLoad(I,3)#72
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Invoke(VIRTUAL,Ljavassist/bytecode/AnnotationsAttribute$Walker;,arrayMemberValue,(II)I)#73
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#New(Ljavassist/bytecode/annotation/ArrayMemberValue;,0)#0
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#Dup(1,0)#1
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#LocalLoad(Ljava/lang/Object;,0)#2
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#Get(Ljavassist/bytecode/ConstPool;,NONSTATIC,Ljavassist/bytecode/AnnotationsAttribute$Parser;,pool)#3
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#Invoke(SPECIAL,Ljavassist/bytecode/annotation/ArrayMemberValue;,<init>,(Ljavassist/bytecode/ConstPool;)V)#4
javassist.bytecode.annotation.ArrayMemberValue.<init>(Ljavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.annotation.ArrayMemberValue.<init>(Ljavassist/bytecode/ConstPool;)V#Constant(I,91)#1
javassist.bytecode.annotation.ArrayMemberValue.<init>(Ljavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,1)#2
javassist.bytecode.annotation.ArrayMemberValue.<init>(Ljavassist/bytecode/ConstPool;)V#Invoke(SPECIAL,Ljavassist/bytecode/annotation/MemberValue;,<init>,(CLjavassist/bytecode/ConstPool;)V)#3
javassist.bytecode.annotation.ArrayMemberValue.<init>(Ljavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,0)#4
javassist.bytecode.annotation.ArrayMemberValue.<init>(Ljavassist/bytecode/ConstPool;)V#Constant(L;,null)#5
javassist.bytecode.annotation.ArrayMemberValue.<init>(Ljavassist/bytecode/ConstPool;)V#Put(Ljavassist/bytecode/annotation/MemberValue;,NONSTATIC,Ljavassist/bytecode/annotation/ArrayMemberValue;,type)#6
javassist.bytecode.annotation.ArrayMemberValue.<init>(Ljavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,0)#7
javassist.bytecode.annotation.ArrayMemberValue.<init>(Ljavassist/bytecode/ConstPool;)V#Constant(L;,null)#8
javassist.bytecode.annotation.ArrayMemberValue.<init>(Ljavassist/bytecode/ConstPool;)V#Put([Ljavassist/bytecode/annotation/MemberValue;,NONSTATIC,Ljavassist/bytecode/annotation/ArrayMemberValue;,values)#9
javassist.bytecode.annotation.ArrayMemberValue.<init>(Ljavassist/bytecode/ConstPool;)V#Return(V)#10
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#LocalStore(Ljava/lang/Object;,3)#5
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#LocalLoad(I,2)#6
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#New([Ljavassist/bytecode/annotation/MemberValue;,1)#7
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#LocalStore(Ljava/lang/Object;,4)#8
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#Constant(I,0)#9
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#LocalStore(I,5)#10
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#LocalLoad(I,5)#11
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#LocalLoad(I,2)#12
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#ConditionalBranch(I,ge,28)#13
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#LocalLoad(Ljava/lang/Object;,0)#14
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#LocalLoad(I,1)#15
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#Invoke(VIRTUAL,Ljavassist/bytecode/AnnotationsAttribute$Parser;,memberValue,(I)I)#16
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#LocalStore(I,1)#17
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#LocalLoad(Ljava/lang/Object;,4)#18
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#LocalLoad(I,5)#19
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#LocalLoad(Ljava/lang/Object;,0)#20
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#Get(Ljavassist/bytecode/annotation/MemberValue;,NONSTATIC,Ljavassist/bytecode/AnnotationsAttribute$Parser;,currentMember)#21
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#ArrayStore(Ljava/lang/Object;)#22
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#LocalLoad(I,5)#23
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#Constant(I,1)#24
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#BinaryOp(I,add)#25
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#LocalStore(I,5)#26
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#Goto(11)#27
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#LocalLoad(Ljava/lang/Object;,3)#28
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#LocalLoad(Ljava/lang/Object;,4)#29
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#Invoke(VIRTUAL,Ljavassist/bytecode/annotation/ArrayMemberValue;,setValue,([Ljavassist/bytecode/annotation/MemberValue;)V)#30
javassist.bytecode.annotation.ArrayMemberValue.setValue([Ljavassist/bytecode/annotation/MemberValue;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.annotation.ArrayMemberValue.setValue([Ljavassist/bytecode/annotation/MemberValue;)V#LocalLoad(Ljava/lang/Object;,1)#1
javassist.bytecode.annotation.ArrayMemberValue.setValue([Ljavassist/bytecode/annotation/MemberValue;)V#Put([Ljavassist/bytecode/annotation/MemberValue;,NONSTATIC,Ljavassist/bytecode/annotation/ArrayMemberValue;,values)#2
javassist.bytecode.annotation.ArrayMemberValue.setValue([Ljavassist/bytecode/annotation/MemberValue;)V#LocalLoad(Ljava/lang/Object;,1)#3
javassist.bytecode.annotation.ArrayMemberValue.setValue([Ljavassist/bytecode/annotation/MemberValue;)V#Constant(L;,null)#4
javassist.bytecode.annotation.ArrayMemberValue.setValue([Ljavassist/bytecode/annotation/MemberValue;)V#ConditionalBranch(Ljava/lang/Object;,eq,15)#5
javassist.bytecode.annotation.ArrayMemberValue.setValue([Ljavassist/bytecode/annotation/MemberValue;)V#LocalLoad(Ljava/lang/Object;,1)#6
javassist.bytecode.annotation.ArrayMemberValue.setValue([Ljavassist/bytecode/annotation/MemberValue;)V#ArrayLength()#7
javassist.bytecode.annotation.ArrayMemberValue.setValue([Ljavassist/bytecode/annotation/MemberValue;)V#Constant(I,0)#8
javassist.bytecode.annotation.ArrayMemberValue.setValue([Ljavassist/bytecode/annotation/MemberValue;)V#ConditionalBranch(I,le,15)#9
javassist.bytecode.annotation.ArrayMemberValue.setValue([Ljavassist/bytecode/annotation/MemberValue;)V#LocalLoad(Ljava/lang/Object;,0)#10
javassist.bytecode.annotation.ArrayMemberValue.setValue([Ljavassist/bytecode/annotation/MemberValue;)V#LocalLoad(Ljava/lang/Object;,1)#11
javassist.bytecode.annotation.ArrayMemberValue.setValue([Ljavassist/bytecode/annotation/MemberValue;)V#Constant(I,0)#12
javassist.bytecode.annotation.ArrayMemberValue.setValue([Ljavassist/bytecode/annotation/MemberValue;)V#ArrayLoad(Ljava/lang/Object;)#13
javassist.bytecode.annotation.ArrayMemberValue.setValue([Ljavassist/bytecode/annotation/MemberValue;)V#Put(Ljavassist/bytecode/annotation/MemberValue;,NONSTATIC,Ljavassist/bytecode/annotation/ArrayMemberValue;,type)#14
javassist.bytecode.annotation.ArrayMemberValue.setValue([Ljavassist/bytecode/annotation/MemberValue;)V#Return(V)#15
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#LocalLoad(Ljava/lang/Object;,0)#31
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#LocalLoad(Ljava/lang/Object;,3)#32
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#Put(Ljavassist/bytecode/annotation/MemberValue;,NONSTATIC,Ljavassist/bytecode/AnnotationsAttribute$Parser;,currentMember)#33
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#LocalLoad(I,1)#34
javassist.bytecode.AnnotationsAttribute$Parser.arrayMemberValue(II)I#Return(I)#35
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Return(I)#74
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#25
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#Get(Ljava/util/ArrayList;,NONSTATIC,Ljavassist/bytecode/FieldInfo;,attribute)#26
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#27
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#Get(Ljavassist/bytecode/ConstPool;,NONSTATIC,Ljavassist/bytecode/FieldInfo;,constPool)#28
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#29
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#Invoke(STATIC,Ljavassist/bytecode/AttributeInfo;,read,(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;)#30
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#31
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#Pop(1)#32
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#LocalLoad(I,3)#33
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#Constant(I,1)#34
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#BinaryOp(I,add)#35
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#LocalStore(I,3)#36
javassist.bytecode.FieldInfo.read(Ljava/io/DataInputStream;)V#Goto(22)#37
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#New(Ljavassist/bytecode/IntegerInfo;,0)#21
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Dup(1,0)#22
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalLoad(Ljava/lang/Object;,1)#23
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Invoke(SPECIAL,Ljavassist/bytecode/IntegerInfo;,<init>,(Ljava/io/DataInputStream;)V)#24
javassist.bytecode.IntegerInfo.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.IntegerInfo.<init>(Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/ConstInfo;,<init>,()V)#1
javassist.bytecode.IntegerInfo.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#2
javassist.bytecode.IntegerInfo.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#3
javassist.bytecode.IntegerInfo.<init>(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readInt,()I)#4
javassist.bytecode.IntegerInfo.<init>(Ljava/io/DataInputStream;)V#Put(I,NONSTATIC,Ljavassist/bytecode/IntegerInfo;,value)#5
javassist.bytecode.IntegerInfo.<init>(Ljava/io/DataInputStream;)V#Return(V)#6
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalStore(Ljava/lang/Object;,2)#25
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Goto(95)#26
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#New(Ljavassist/bytecode/ConstantAttribute;,0)#41
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Dup(1,0)#42
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,0)#43
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(I,2)#44
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,1)#45
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(SPECIAL,Ljavassist/bytecode/ConstantAttribute;,<init>,(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V)#46
javassist.bytecode.ConstantAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.ConstantAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#1
javassist.bytecode.ConstantAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(I,2)#2
javassist.bytecode.ConstantAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,3)#3
javassist.bytecode.ConstantAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/AttributeInfo;,<init>,(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V)#4
javassist.bytecode.ConstantAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Return(V)#5
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Return(Ljava/lang/Object;)#47
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,2)#18
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#19
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalStore(I,6)#20
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,2)#21
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#22
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalStore(I,7)#23
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,2)#24
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#25
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalStore(I,8)#26
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,2)#27
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readUnsignedShort,()I)#28
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalStore(I,9)#29
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,4)#30
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#New(Ljavassist/bytecode/ExceptionTableEntry;,0)#31
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#Dup(1,0)#32
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalLoad(I,6)#33
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalLoad(I,7)#34
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalLoad(I,8)#35
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalLoad(I,9)#36
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/ExceptionTableEntry;,<init>,(IIII)V)#37
javassist.bytecode.ExceptionTableEntry.<init>(IIII)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.ExceptionTableEntry.<init>(IIII)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
javassist.bytecode.ExceptionTableEntry.<init>(IIII)V#LocalLoad(Ljava/lang/Object;,0)#2
javassist.bytecode.ExceptionTableEntry.<init>(IIII)V#LocalLoad(I,1)#3
javassist.bytecode.ExceptionTableEntry.<init>(IIII)V#Put(I,NONSTATIC,Ljavassist/bytecode/ExceptionTableEntry;,startPc)#4
javassist.bytecode.ExceptionTableEntry.<init>(IIII)V#LocalLoad(Ljava/lang/Object;,0)#5
javassist.bytecode.ExceptionTableEntry.<init>(IIII)V#LocalLoad(I,2)#6
javassist.bytecode.ExceptionTableEntry.<init>(IIII)V#Put(I,NONSTATIC,Ljavassist/bytecode/ExceptionTableEntry;,endPc)#7
javassist.bytecode.ExceptionTableEntry.<init>(IIII)V#LocalLoad(Ljava/lang/Object;,0)#8
javassist.bytecode.ExceptionTableEntry.<init>(IIII)V#LocalLoad(I,3)#9
javassist.bytecode.ExceptionTableEntry.<init>(IIII)V#Put(I,NONSTATIC,Ljavassist/bytecode/ExceptionTableEntry;,handlerPc)#10
javassist.bytecode.ExceptionTableEntry.<init>(IIII)V#LocalLoad(Ljava/lang/Object;,0)#11
javassist.bytecode.ExceptionTableEntry.<init>(IIII)V#LocalLoad(I,4)#12
javassist.bytecode.ExceptionTableEntry.<init>(IIII)V#Put(I,NONSTATIC,Ljavassist/bytecode/ExceptionTableEntry;,catchType)#13
javassist.bytecode.ExceptionTableEntry.<init>(IIII)V#Return(V)#14
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#38
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#Pop(1)#39
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalLoad(I,5)#40
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#Constant(I,1)#41
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#BinaryOp(I,add)#42
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#LocalStore(I,5)#43
javassist.bytecode.ExceptionTable.<init>(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)V#Goto(15)#44
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalLoad(Ljava/lang/Object;,0)#35
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Get([B,NONSTATIC,Ljavassist/bytecode/AnnotationsAttribute$Walker;,info)#36
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalLoad(I,1)#37
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Constant(I,1)#38
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#BinaryOp(I,add)#39
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Invoke(STATIC,Ljavassist/bytecode/ByteArray;,readU16bit,([BI)I)#40
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalStore(I,3)#41
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalLoad(Ljava/lang/Object;,0)#42
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalLoad(I,3)#43
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Invoke(VIRTUAL,Ljavassist/bytecode/AnnotationsAttribute$Walker;,classMemberValue,(I)V)#44
javassist.bytecode.AnnotationsAttribute$Parser.classMemberValue(I)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.AnnotationsAttribute$Parser.classMemberValue(I)V#New(Ljavassist/bytecode/annotation/ClassMemberValue;,0)#1
javassist.bytecode.AnnotationsAttribute$Parser.classMemberValue(I)V#Dup(1,0)#2
javassist.bytecode.AnnotationsAttribute$Parser.classMemberValue(I)V#LocalLoad(I,1)#3
javassist.bytecode.AnnotationsAttribute$Parser.classMemberValue(I)V#LocalLoad(Ljava/lang/Object;,0)#4
javassist.bytecode.AnnotationsAttribute$Parser.classMemberValue(I)V#Get(Ljavassist/bytecode/ConstPool;,NONSTATIC,Ljavassist/bytecode/AnnotationsAttribute$Parser;,pool)#5
javassist.bytecode.AnnotationsAttribute$Parser.classMemberValue(I)V#Invoke(SPECIAL,Ljavassist/bytecode/annotation/ClassMemberValue;,<init>,(ILjavassist/bytecode/ConstPool;)V)#6
javassist.bytecode.annotation.ClassMemberValue.<init>(ILjavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.annotation.ClassMemberValue.<init>(ILjavassist/bytecode/ConstPool;)V#Constant(I,99)#1
javassist.bytecode.annotation.ClassMemberValue.<init>(ILjavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,2)#2
javassist.bytecode.annotation.ClassMemberValue.<init>(ILjavassist/bytecode/ConstPool;)V#Invoke(SPECIAL,Ljavassist/bytecode/annotation/MemberValue;,<init>,(CLjavassist/bytecode/ConstPool;)V)#3
javassist.bytecode.annotation.ClassMemberValue.<init>(ILjavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,0)#4
javassist.bytecode.annotation.ClassMemberValue.<init>(ILjavassist/bytecode/ConstPool;)V#LocalLoad(I,1)#5
javassist.bytecode.annotation.ClassMemberValue.<init>(ILjavassist/bytecode/ConstPool;)V#Put(I,NONSTATIC,Ljavassist/bytecode/annotation/ClassMemberValue;,valueIndex)#6
javassist.bytecode.annotation.ClassMemberValue.<init>(ILjavassist/bytecode/ConstPool;)V#Return(V)#7
javassist.bytecode.AnnotationsAttribute$Parser.classMemberValue(I)V#Put(Ljavassist/bytecode/annotation/MemberValue;,NONSTATIC,Ljavassist/bytecode/AnnotationsAttribute$Parser;,currentMember)#7
javassist.bytecode.AnnotationsAttribute$Parser.classMemberValue(I)V#LocalLoad(Ljava/lang/Object;,0)#8
javassist.bytecode.AnnotationsAttribute$Parser.classMemberValue(I)V#LocalLoad(I,1)#9
javassist.bytecode.AnnotationsAttribute$Parser.classMemberValue(I)V#Invoke(SPECIAL,Ljavassist/bytecode/AnnotationsAttribute$Walker;,classMemberValue,(I)V)#10
javassist.bytecode.AnnotationsAttribute$Walker.classMemberValue(I)V#Return(V)#0
javassist.bytecode.AnnotationsAttribute$Parser.classMemberValue(I)V#Return(V)#11
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalLoad(I,1)#45
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Constant(I,3)#46
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#BinaryOp(I,add)#47
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Return(I)#48
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#New(Ljavassist/bytecode/EnclosingMethodAttribute;,0)#65
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Dup(1,0)#66
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,0)#67
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(I,2)#68
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,1)#69
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(SPECIAL,Ljavassist/bytecode/EnclosingMethodAttribute;,<init>,(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V)#70
javassist.bytecode.EnclosingMethodAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.EnclosingMethodAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#1
javassist.bytecode.EnclosingMethodAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(I,2)#2
javassist.bytecode.EnclosingMethodAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,3)#3
javassist.bytecode.EnclosingMethodAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/AttributeInfo;,<init>,(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V)#4
javassist.bytecode.EnclosingMethodAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Return(V)#5
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Return(Ljava/lang/Object;)#71
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#New(Ljavassist/bytecode/ExceptionsAttribute;,0)#77
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Dup(1,0)#78
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,0)#79
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(I,2)#80
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,1)#81
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(SPECIAL,Ljavassist/bytecode/ExceptionsAttribute;,<init>,(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V)#82
javassist.bytecode.ExceptionsAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.ExceptionsAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#1
javassist.bytecode.ExceptionsAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(I,2)#2
javassist.bytecode.ExceptionsAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,3)#3
javassist.bytecode.ExceptionsAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/AttributeInfo;,<init>,(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V)#4
javassist.bytecode.ExceptionsAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Return(V)#5
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Return(Ljava/lang/Object;)#83
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#New(Ljavassist/bytecode/DoubleInfo;,0)#39
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Dup(1,0)#40
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalLoad(Ljava/lang/Object;,1)#41
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Invoke(SPECIAL,Ljavassist/bytecode/DoubleInfo;,<init>,(Ljava/io/DataInputStream;)V)#42
javassist.bytecode.DoubleInfo.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.DoubleInfo.<init>(Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/ConstInfo;,<init>,()V)#1
javassist.bytecode.DoubleInfo.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#2
javassist.bytecode.DoubleInfo.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#3
javassist.bytecode.DoubleInfo.<init>(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readDouble,()D)#4
javassist.bytecode.DoubleInfo.<init>(Ljava/io/DataInputStream;)V#Put(D,NONSTATIC,Ljavassist/bytecode/DoubleInfo;,value)#5
javassist.bytecode.DoubleInfo.<init>(Ljava/io/DataInputStream;)V#Return(V)#6
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalStore(Ljava/lang/Object;,2)#43
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Goto(95)#44
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#33
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#New(Ljavassist/bytecode/ConstInfoPadding;,0)#34
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#Dup(1,0)#35
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/ConstInfoPadding;,<init>,()V)#36
javassist.bytecode.ConstInfoPadding.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.ConstInfoPadding.<init>()V#Invoke(SPECIAL,Ljavassist/bytecode/ConstInfo;,<init>,()V)#1
javassist.bytecode.ConstInfoPadding.<init>()V#Return(V)#2
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/ConstPool;,addItem,(Ljavassist/bytecode/ConstInfo;)I)#37
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#Pop(1)#38
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#LocalLoad(I,2)#39
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#Constant(I,-1)#40
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#BinaryOp(I,add)#41
javassist.bytecode.ConstPool.read(Ljava/io/DataInputStream;)V#LocalStore(I,2)#42
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#New(Ljavassist/bytecode/LongInfo;,0)#33
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Dup(1,0)#34
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalLoad(Ljava/lang/Object;,1)#35
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Invoke(SPECIAL,Ljavassist/bytecode/LongInfo;,<init>,(Ljava/io/DataInputStream;)V)#36
javassist.bytecode.LongInfo.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.LongInfo.<init>(Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/ConstInfo;,<init>,()V)#1
javassist.bytecode.LongInfo.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#2
javassist.bytecode.LongInfo.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#3
javassist.bytecode.LongInfo.<init>(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readLong,()J)#4
javassist.bytecode.LongInfo.<init>(Ljava/io/DataInputStream;)V#Put(J,NONSTATIC,Ljavassist/bytecode/LongInfo;,value)#5
javassist.bytecode.LongInfo.<init>(Ljava/io/DataInputStream;)V#Return(V)#6
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalStore(Ljava/lang/Object;,2)#37
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Goto(95)#38
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#New(Ljavassist/bytecode/FloatInfo;,0)#27
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Dup(1,0)#28
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalLoad(Ljava/lang/Object;,1)#29
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Invoke(SPECIAL,Ljavassist/bytecode/FloatInfo;,<init>,(Ljava/io/DataInputStream;)V)#30
javassist.bytecode.FloatInfo.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.FloatInfo.<init>(Ljava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/ConstInfo;,<init>,()V)#1
javassist.bytecode.FloatInfo.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#2
javassist.bytecode.FloatInfo.<init>(Ljava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#3
javassist.bytecode.FloatInfo.<init>(Ljava/io/DataInputStream;)V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,readFloat,()F)#4
javassist.bytecode.FloatInfo.<init>(Ljava/io/DataInputStream;)V#Put(F,NONSTATIC,Ljavassist/bytecode/FloatInfo;,value)#5
javassist.bytecode.FloatInfo.<init>(Ljava/io/DataInputStream;)V#Return(V)#6
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#LocalStore(Ljava/lang/Object;,2)#31
javassist.bytecode.ConstPool.readOne(Ljava/io/DataInputStream;)I#Goto(95)#32
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#New(Ljavassist/bytecode/DeprecatedAttribute;,0)#53
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Dup(1,0)#54
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,0)#55
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(I,2)#56
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,1)#57
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(SPECIAL,Ljavassist/bytecode/DeprecatedAttribute;,<init>,(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V)#58
javassist.bytecode.DeprecatedAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.DeprecatedAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#1
javassist.bytecode.DeprecatedAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(I,2)#2
javassist.bytecode.DeprecatedAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,3)#3
javassist.bytecode.DeprecatedAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/AttributeInfo;,<init>,(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V)#4
javassist.bytecode.DeprecatedAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Return(V)#5
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Return(Ljava/lang/Object;)#59
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,3)#190
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(Ljava/lang/String;,"Synthetic")#191
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#192
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Constant(I,0)#193
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#ConditionalBranch(I,eq,202)#194
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#New(Ljavassist/bytecode/SyntheticAttribute;,0)#195
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Dup(1,0)#196
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,0)#197
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(I,2)#198
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,1)#199
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(SPECIAL,Ljavassist/bytecode/SyntheticAttribute;,<init>,(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V)#200
javassist.bytecode.SyntheticAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.SyntheticAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#1
javassist.bytecode.SyntheticAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(I,2)#2
javassist.bytecode.SyntheticAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,3)#3
javassist.bytecode.SyntheticAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/AttributeInfo;,<init>,(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V)#4
javassist.bytecode.SyntheticAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Return(V)#5
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Return(Ljava/lang/Object;)#201
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#Constant(I,1)#27
org.scannotation.AnnotationDB.ignoreScan(Ljava/lang/String;)Z#Return(I)#28
org.scannotation.AnnotationDB$1.accepts(Ljava/lang/String;)Z#Constant(I,0)#25
org.scannotation.AnnotationDB$1.accepts(Ljava/lang/String;)Z#Return(I)#26
javassist.bytecode.AttributeInfo.lookup(Ljava/util/ArrayList;Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,3)#22
javassist.bytecode.AttributeInfo.lookup(Ljava/util/ArrayList;Ljava/lang/String;)Ljavassist/bytecode/AttributeInfo;#Return(Ljava/lang/Object;)#23
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,0)#37
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,6)#38
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#Invoke(VIRTUAL,Ljavassist/bytecode/AnnotationsAttribute;,getAnnotations,()[Ljavassist/bytecode/annotation/Annotation;)#39
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#LocalLoad(Ljava/lang/Object;,1)#40
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#Invoke(VIRTUAL,Ljavassist/bytecode/ClassFile;,getName,()Ljava/lang/String;)#41
org.scannotation.AnnotationDB.scanMethods(Ljavassist/bytecode/ClassFile;)V#Invoke(VIRTUAL,Lorg/scannotation/AnnotationDB;,populate,([Ljavassist/bytecode/annotation/Annotation;Ljava/lang/String;)V)#42
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#New(Ljavassist/bytecode/AnnotationDefaultAttribute;,0)#17
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Dup(1,0)#18
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,0)#19
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(I,2)#20
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#LocalLoad(Ljava/lang/Object;,1)#21
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Invoke(SPECIAL,Ljavassist/bytecode/AnnotationDefaultAttribute;,<init>,(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V)#22
javassist.bytecode.AnnotationDefaultAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.AnnotationDefaultAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,1)#1
javassist.bytecode.AnnotationDefaultAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(I,2)#2
javassist.bytecode.AnnotationDefaultAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#LocalLoad(Ljava/lang/Object;,3)#3
javassist.bytecode.AnnotationDefaultAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Invoke(SPECIAL,Ljavassist/bytecode/AttributeInfo;,<init>,(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V)#4
javassist.bytecode.AnnotationDefaultAttribute.<init>(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V#Return(V)#5
javassist.bytecode.AttributeInfo.read(Ljavassist/bytecode/ConstPool;Ljava/io/DataInputStream;)Ljavassist/bytecode/AttributeInfo;#Return(Ljava/lang/Object;)#23
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalLoad(Ljava/lang/Object;,0)#10
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Get([B,NONSTATIC,Ljavassist/bytecode/AnnotationsAttribute$Walker;,info)#11
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalLoad(I,1)#12
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Constant(I,1)#13
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#BinaryOp(I,add)#14
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Invoke(STATIC,Ljavassist/bytecode/ByteArray;,readU16bit,([BI)I)#15
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalStore(I,3)#16
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalLoad(Ljava/lang/Object;,0)#17
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Get([B,NONSTATIC,Ljavassist/bytecode/AnnotationsAttribute$Walker;,info)#18
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalLoad(I,1)#19
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Constant(I,3)#20
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#BinaryOp(I,add)#21
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Invoke(STATIC,Ljavassist/bytecode/ByteArray;,readU16bit,([BI)I)#22
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalStore(I,4)#23
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalLoad(Ljava/lang/Object;,0)#24
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalLoad(I,3)#25
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalLoad(I,4)#26
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Invoke(VIRTUAL,Ljavassist/bytecode/AnnotationsAttribute$Walker;,enumMemberValue,(II)V)#27
javassist.bytecode.AnnotationsAttribute$Parser.enumMemberValue(II)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.AnnotationsAttribute$Parser.enumMemberValue(II)V#New(Ljavassist/bytecode/annotation/EnumMemberValue;,0)#1
javassist.bytecode.AnnotationsAttribute$Parser.enumMemberValue(II)V#Dup(1,0)#2
javassist.bytecode.AnnotationsAttribute$Parser.enumMemberValue(II)V#LocalLoad(I,1)#3
javassist.bytecode.AnnotationsAttribute$Parser.enumMemberValue(II)V#LocalLoad(I,2)#4
javassist.bytecode.AnnotationsAttribute$Parser.enumMemberValue(II)V#LocalLoad(Ljava/lang/Object;,0)#5
javassist.bytecode.AnnotationsAttribute$Parser.enumMemberValue(II)V#Get(Ljavassist/bytecode/ConstPool;,NONSTATIC,Ljavassist/bytecode/AnnotationsAttribute$Parser;,pool)#6
javassist.bytecode.AnnotationsAttribute$Parser.enumMemberValue(II)V#Invoke(SPECIAL,Ljavassist/bytecode/annotation/EnumMemberValue;,<init>,(IILjavassist/bytecode/ConstPool;)V)#7
javassist.bytecode.annotation.EnumMemberValue.<init>(IILjavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,0)#0
javassist.bytecode.annotation.EnumMemberValue.<init>(IILjavassist/bytecode/ConstPool;)V#Constant(I,101)#1
javassist.bytecode.annotation.EnumMemberValue.<init>(IILjavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,3)#2
javassist.bytecode.annotation.EnumMemberValue.<init>(IILjavassist/bytecode/ConstPool;)V#Invoke(SPECIAL,Ljavassist/bytecode/annotation/MemberValue;,<init>,(CLjavassist/bytecode/ConstPool;)V)#3
javassist.bytecode.annotation.EnumMemberValue.<init>(IILjavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,0)#4
javassist.bytecode.annotation.EnumMemberValue.<init>(IILjavassist/bytecode/ConstPool;)V#LocalLoad(I,1)#5
javassist.bytecode.annotation.EnumMemberValue.<init>(IILjavassist/bytecode/ConstPool;)V#Put(I,NONSTATIC,Ljavassist/bytecode/annotation/EnumMemberValue;,typeIndex)#6
javassist.bytecode.annotation.EnumMemberValue.<init>(IILjavassist/bytecode/ConstPool;)V#LocalLoad(Ljava/lang/Object;,0)#7
javassist.bytecode.annotation.EnumMemberValue.<init>(IILjavassist/bytecode/ConstPool;)V#LocalLoad(I,2)#8
javassist.bytecode.annotation.EnumMemberValue.<init>(IILjavassist/bytecode/ConstPool;)V#Put(I,NONSTATIC,Ljavassist/bytecode/annotation/EnumMemberValue;,valueIndex)#9
javassist.bytecode.annotation.EnumMemberValue.<init>(IILjavassist/bytecode/ConstPool;)V#Return(V)#10
javassist.bytecode.AnnotationsAttribute$Parser.enumMemberValue(II)V#Put(Ljavassist/bytecode/annotation/MemberValue;,NONSTATIC,Ljavassist/bytecode/AnnotationsAttribute$Parser;,currentMember)#8
javassist.bytecode.AnnotationsAttribute$Parser.enumMemberValue(II)V#LocalLoad(Ljava/lang/Object;,0)#9
javassist.bytecode.AnnotationsAttribute$Parser.enumMemberValue(II)V#LocalLoad(I,1)#10
javassist.bytecode.AnnotationsAttribute$Parser.enumMemberValue(II)V#LocalLoad(I,2)#11
javassist.bytecode.AnnotationsAttribute$Parser.enumMemberValue(II)V#Invoke(SPECIAL,Ljavassist/bytecode/AnnotationsAttribute$Walker;,enumMemberValue,(II)V)#12
javassist.bytecode.AnnotationsAttribute$Walker.enumMemberValue(II)V#Return(V)#0
javassist.bytecode.AnnotationsAttribute$Parser.enumMemberValue(II)V#Return(V)#13
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#LocalLoad(I,1)#28
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Constant(I,5)#29
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#BinaryOp(I,add)#30
javassist.bytecode.AnnotationsAttribute$Walker.memberValue(I)I#Return(I)#31
org.scannotation.archiveiterator.JarIterator.setNext()V#LocalLoad(Ljava/lang/Object;,0)#43
org.scannotation.archiveiterator.JarIterator.setNext()V#Invoke(VIRTUAL,Lorg/scannotation/archiveiterator/JarIterator;,close,()V)#44
org.scannotation.archiveiterator.JarIterator.close()V#LocalLoad(Ljava/lang/Object;,0)#0
org.scannotation.archiveiterator.JarIterator.close()V#Constant(I,1)#1
org.scannotation.archiveiterator.JarIterator.close()V#Put(Z,NONSTATIC,Lorg/scannotation/archiveiterator/JarIterator;,closed)#2
org.scannotation.archiveiterator.JarIterator.close()V#LocalLoad(Ljava/lang/Object;,0)#3
org.scannotation.archiveiterator.JarIterator.close()V#Get(Ljava/util/jar/JarInputStream;,NONSTATIC,Lorg/scannotation/archiveiterator/JarIterator;,jar)#4
org.scannotation.archiveiterator.JarIterator.close()V#Invoke(VIRTUAL,Ljava/util/jar/JarInputStream;,close,()V)#5
org.scannotation.archiveiterator.JarIterator.close()V#Goto(8)#6
org.scannotation.archiveiterator.JarIterator.close()V#Return(V)#8
org.scannotation.archiveiterator.JarIterator.next()Ljava/io/InputStream;#Constant(L;,null)#20
org.scannotation.archiveiterator.JarIterator.next()Ljava/io/InputStream;#Return(Ljava/lang/Object;)#21
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#LocalLoad(I,4)#33
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#Constant(I,1)#34
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#BinaryOp(I,add)#35
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#LocalStore(I,4)#36
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#Goto(7)#37
org.scannotation.AnnotationDB.scanArchives([Ljava/net/URL;)V#Return(V)#38
chord.project.TaskParser.buildJavaAnalysisMap()V#Goto(81)#77
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalLoad(Ljava/lang/Object;,5)#81
chord.project.TaskParser.buildJavaAnalysisMap()V#Invoke(VIRTUAL,Lorg/scannotation/AnnotationDB;,getAnnotationIndex,()Ljava/util/Map;)#82
org.scannotation.AnnotationDB.getAnnotationIndex()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#0
org.scannotation.AnnotationDB.getAnnotationIndex()Ljava/util/Map;#Get(Ljava/util/Map;,NONSTATIC,Lorg/scannotation/AnnotationDB;,annotationIndex)#1
org.scannotation.AnnotationDB.getAnnotationIndex()Ljava/util/Map;#Return(Ljava/lang/Object;)#2
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalStore(Ljava/lang/Object;,6)#83
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalLoad(Ljava/lang/Object;,6)#84
chord.project.TaskParser.buildJavaAnalysisMap()V#Constant(L;,null)#85
chord.project.TaskParser.buildJavaAnalysisMap()V#ConditionalBranch(Ljava/lang/Object;,ne,88)#86
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalLoad(Ljava/lang/Object;,6)#88
chord.project.TaskParser.buildJavaAnalysisMap()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@9d7997b3)#89
chord.project.TaskParser.buildJavaAnalysisMap()V#Invoke(VIRTUAL,Ljava/lang/Class;,getName,()Ljava/lang/String;)#90
chord.project.TaskParser.buildJavaAnalysisMap()V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#91
chord.project.TaskParser.buildJavaAnalysisMap()V#CheckCast(Ljava/util/Set;)#92
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalStore(Ljava/lang/Object;,7)#93
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalLoad(Ljava/lang/Object;,7)#94
chord.project.TaskParser.buildJavaAnalysisMap()V#Constant(L;,null)#95
chord.project.TaskParser.buildJavaAnalysisMap()V#ConditionalBranch(Ljava/lang/Object;,ne,98)#96
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalLoad(Ljava/lang/Object;,7)#98
chord.project.TaskParser.buildJavaAnalysisMap()V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#99
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalStore(Ljava/lang/Object;,9)#100
chord.project.TaskParser.buildJavaAnalysisMap()V#Goto(109)#101
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalLoad(Ljava/lang/Object;,9)#109
chord.project.TaskParser.buildJavaAnalysisMap()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#110
chord.project.TaskParser.buildJavaAnalysisMap()V#Constant(I,0)#111
chord.project.TaskParser.buildJavaAnalysisMap()V#ConditionalBranch(I,ne,102)#112
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalLoad(Ljava/lang/Object;,9)#102
chord.project.TaskParser.buildJavaAnalysisMap()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#103
chord.project.TaskParser.buildJavaAnalysisMap()V#CheckCast(Ljava/lang/String;)#104
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalStore(Ljava/lang/Object;,8)#105
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalLoad(Ljava/lang/Object;,0)#106
chord.project.TaskParser.buildJavaAnalysisMap()V#LocalLoad(Ljava/lang/Object;,8)#107
chord.project.TaskParser.buildJavaAnalysisMap()V#Invoke(SPECIAL,Lchord/project/TaskParser;,processJavaAnalysis,(Ljava/lang/String;)V)#108
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Constant(L;,null)#0
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,2)#1
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#2
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(STATIC,Ljava/lang/Class;,forName,(Ljava/lang/String;)Ljava/lang/Class;)#3
chord.bddbddb.Rel.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@e0bda96d)#0
chord.bddbddb.Rel.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.bddbddb.Rel.<clinit>()V#Constant(I,0)#2
chord.bddbddb.Rel.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.bddbddb.Rel.<clinit>()V#Constant(I,0)#6
chord.bddbddb.Rel.<clinit>()V#Put(Z,STATIC,Lchord/bddbddb/Rel;,$assertionsDisabled)#7
chord.bddbddb.Rel.<clinit>()V#Return(V)#8
chord.project.analyses.ProgramRel.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@3ad3958b)#0
chord.project.analyses.ProgramRel.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.project.analyses.ProgramRel.<clinit>()V#Constant(I,0)#2
chord.project.analyses.ProgramRel.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.project.analyses.ProgramRel.<clinit>()V#Constant(I,0)#6
chord.project.analyses.ProgramRel.<clinit>()V#Put(Z,STATIC,Lchord/project/analyses/ProgramRel;,$assertionsDisabled)#7
chord.project.analyses.ProgramRel.<clinit>()V#Return(V)#8
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,2)#4
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Goto(9)#5
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#New(Lchord/project/ChordAnnotParser;,0)#9
chord.project.ChordAnnotParser.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@57cc44dc)#0
chord.project.ChordAnnotParser.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.project.ChordAnnotParser.<clinit>()V#Constant(I,0)#2
chord.project.ChordAnnotParser.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.project.ChordAnnotParser.<clinit>()V#Constant(I,0)#6
chord.project.ChordAnnotParser.<clinit>()V#Put(Z,STATIC,Lchord/project/ChordAnnotParser;,$assertionsDisabled)#7
chord.project.ChordAnnotParser.<clinit>()V#Return(V)#8
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Dup(1,0)#10
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#11
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(SPECIAL,Lchord/project/ChordAnnotParser;,<init>,(Ljava/lang/Class;)V)#12
chord.project.ChordAnnotParser.<init>(Ljava/lang/Class;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.ChordAnnotParser.<init>(Ljava/lang/Class;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
chord.project.ChordAnnotParser.<init>(Ljava/lang/Class;)V#LocalLoad(Ljava/lang/Object;,0)#2
chord.project.ChordAnnotParser.<init>(Ljava/lang/Class;)V#LocalLoad(Ljava/lang/Object;,1)#3
chord.project.ChordAnnotParser.<init>(Ljava/lang/Class;)V#Put(Ljava/lang/Class;,NONSTATIC,Lchord/project/ChordAnnotParser;,type)#4
chord.project.ChordAnnotParser.<init>(Ljava/lang/Class;)V#Return(V)#5
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,3)#13
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#14
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(VIRTUAL,Lchord/project/ChordAnnotParser;,parse,()Z)#15
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.ChordAnnotParser.parse()Z#Get(Ljava/lang/Class;,NONSTATIC,Lchord/project/ChordAnnotParser;,type)#1
chord.project.ChordAnnotParser.parse()Z#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@9d7997b3)#2
chord.project.ChordAnnotParser.parse()Z#Invoke(VIRTUAL,Ljava/lang/Class;,getAnnotation,(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;)#3
chord.project.ChordAnnotParser.parse()Z#CheckCast(Lchord/project/Chord;)#4
chord.project.ChordAnnotParser.parse()Z#LocalStore(Ljava/lang/Object;,1)#5
chord.project.ChordAnnotParser.parse()Z#Get(Z,STATIC,Lchord/project/ChordAnnotParser;,$assertionsDisabled)#6
chord.project.ChordAnnotParser.parse()Z#Constant(I,0)#7
chord.project.ChordAnnotParser.parse()Z#ConditionalBranch(I,ne,16)#8
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,1)#9
chord.project.ChordAnnotParser.parse()Z#Constant(L;,null)#10
chord.project.ChordAnnotParser.parse()Z#ConditionalBranch(Ljava/lang/Object;,ne,16)#11
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#16
chord.project.ChordAnnotParser.parse()Z#Constant(I,1)#17
chord.project.ChordAnnotParser.parse()Z#Put(Z,NONSTATIC,Lchord/project/ChordAnnotParser;,hasNoErrors)#18
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#19
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,1)#20
chord.project.ChordAnnotParser.parse()Z#Invoke(INTERFACE,Lchord/project/Chord;,name,()Ljava/lang/String;)#21
chord.project.ChordAnnotParser.parse()Z#Put(Ljava/lang/String;,NONSTATIC,Lchord/project/ChordAnnotParser;,name)#22
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#23
chord.project.ChordAnnotParser.parse()Z#New(Ljava/util/HashMap;,0)#24
chord.project.ChordAnnotParser.parse()Z#Dup(1,0)#25
chord.project.ChordAnnotParser.parse()Z#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#26
chord.project.ChordAnnotParser.parse()Z#Put(Ljava/util/Map;,NONSTATIC,Lchord/project/ChordAnnotParser;,nameToTypeMap)#27
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#28
chord.project.ChordAnnotParser.parse()Z#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ChordAnnotParser;,nameToTypeMap)#29
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#30
chord.project.ChordAnnotParser.parse()Z#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/ChordAnnotParser;,name)#31
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#32
chord.project.ChordAnnotParser.parse()Z#Get(Ljava/lang/Class;,NONSTATIC,Lchord/project/ChordAnnotParser;,type)#33
chord.project.ChordAnnotParser.parse()Z#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#34
chord.project.ChordAnnotParser.parse()Z#Pop(1)#35
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#36
chord.project.ChordAnnotParser.parse()Z#New(Ljava/util/HashMap;,0)#37
chord.project.ChordAnnotParser.parse()Z#Dup(1,0)#38
chord.project.ChordAnnotParser.parse()Z#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#39
chord.project.ChordAnnotParser.parse()Z#Put(Ljava/util/Map;,NONSTATIC,Lchord/project/ChordAnnotParser;,nameToSignMap)#40
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,1)#41
chord.project.ChordAnnotParser.parse()Z#Invoke(INTERFACE,Lchord/project/Chord;,sign,()Ljava/lang/String;)#42
chord.project.ChordAnnotParser.parse()Z#LocalStore(Ljava/lang/Object;,2)#43
chord.project.ChordAnnotParser.parse()Z#Constant(L;,null)#44
chord.project.ChordAnnotParser.parse()Z#LocalStore(Ljava/lang/Object;,3)#45
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#46
chord.project.ChordAnnotParser.parse()Z#Get(Ljava/lang/Class;,NONSTATIC,Lchord/project/ChordAnnotParser;,type)#47
chord.project.ChordAnnotParser.parse()Z#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@3ad3958b)#48
chord.project.ChordAnnotParser.parse()Z#Invoke(STATIC,Lchord/util/Utils;,isSubclass,(Ljava/lang/Class;Ljava/lang/Class;)Z)#49
chord.util.Utils.isSubclass(Ljava/lang/Class;Ljava/lang/Class;)Z#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.Utils.isSubclass(Ljava/lang/Class;Ljava/lang/Class;)Z#LocalLoad(Ljava/lang/Object;,1)#1
chord.util.Utils.isSubclass(Ljava/lang/Class;Ljava/lang/Class;)Z#Invoke(VIRTUAL,Ljava/lang/Class;,asSubclass,(Ljava/lang/Class;)Ljava/lang/Class;)#2
chord.util.Utils.isSubclass(Ljava/lang/Class;Ljava/lang/Class;)Z#Pop(1)#3
chord.util.Utils.isSubclass(Ljava/lang/Class;Ljava/lang/Class;)Z#Goto(8)#4
chord.util.Utils.isSubclass(Ljava/lang/Class;Ljava/lang/Class;)Z#Constant(I,1)#8
chord.util.Utils.isSubclass(Ljava/lang/Class;Ljava/lang/Class;)Z#Return(I)#9
chord.project.ChordAnnotParser.parse()Z#Constant(I,0)#50
chord.project.ChordAnnotParser.parse()Z#ConditionalBranch(I,eq,75)#51
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,2)#52
chord.project.ChordAnnotParser.parse()Z#Constant(Ljava/lang/String;,"")#53
chord.project.ChordAnnotParser.parse()Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#54
chord.project.ChordAnnotParser.parse()Z#Constant(I,0)#55
chord.project.ChordAnnotParser.parse()Z#ConditionalBranch(I,eq,63)#56
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#63
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,2)#64
chord.project.ChordAnnotParser.parse()Z#Invoke(SPECIAL,Lchord/project/ChordAnnotParser;,parseRelSign,(Ljava/lang/String;)Lchord/bddbddb/RelSign;)#65
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#LocalLoad(Ljava/lang/Object;,1)#0
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#Constant(I,58)#1
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#Invoke(VIRTUAL,Ljava/lang/String;,indexOf,(I)I)#2
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#LocalStore(I,2)#3
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#LocalLoad(I,2)#4
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#Constant(I,-1)#5
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#ConditionalBranch(I,eq,19)#6
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#LocalLoad(Ljava/lang/Object;,1)#7
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#LocalLoad(I,2)#8
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#Constant(I,1)#9
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#BinaryOp(I,add)#10
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#Invoke(VIRTUAL,Ljava/lang/String;,substring,(I)Ljava/lang/String;)#11
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#LocalStore(Ljava/lang/Object;,3)#12
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#LocalLoad(Ljava/lang/Object;,1)#13
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#Constant(I,0)#14
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#LocalLoad(I,2)#15
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#Invoke(VIRTUAL,Ljava/lang/String;,substring,(II)Ljava/lang/String;)#16
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#LocalStore(Ljava/lang/Object;,1)#17
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#Goto(21)#18
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#LocalLoad(Ljava/lang/Object;,1)#21
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#Constant(Ljava/lang/String;,",")#22
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#Invoke(VIRTUAL,Ljava/lang/String;,split,(Ljava/lang/String;)[Ljava/lang/String;)#23
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#LocalStore(Ljava/lang/Object;,4)#24
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#LocalLoad(Ljava/lang/Object;,4)#25
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#ArrayLength()#26
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#Constant(I,1)#27
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#ConditionalBranch(I,ne,33)#28
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#New(Lchord/bddbddb/RelSign;,0)#33
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#Dup(1,0)#34
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#LocalLoad(Ljava/lang/Object;,4)#35
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#LocalLoad(Ljava/lang/Object;,3)#36
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#Invoke(SPECIAL,Lchord/bddbddb/RelSign;,<init>,([Ljava/lang/String;Ljava/lang/String;)V)#37
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#Return(Ljava/lang/Object;)#38
chord.project.ChordAnnotParser.parse()Z#LocalStore(Ljava/lang/Object;,3)#66
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#67
chord.project.ChordAnnotParser.parse()Z#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ChordAnnotParser;,nameToSignMap)#68
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#69
chord.project.ChordAnnotParser.parse()Z#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/ChordAnnotParser;,name)#70
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,3)#71
chord.project.ChordAnnotParser.parse()Z#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#72
chord.project.ChordAnnotParser.parse()Z#Pop(1)#73
chord.project.ChordAnnotParser.parse()Z#Goto(85)#74
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#85
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,1)#86
chord.project.ChordAnnotParser.parse()Z#Invoke(INTERFACE,Lchord/project/Chord;,prescriber,()Ljava/lang/String;)#87
chord.project.ChordAnnotParser.parse()Z#Put(Ljava/lang/String;,NONSTATIC,Lchord/project/ChordAnnotParser;,prescriber)#88
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#89
chord.project.ChordAnnotParser.parse()Z#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/ChordAnnotParser;,prescriber)#90
chord.project.ChordAnnotParser.parse()Z#Constant(Ljava/lang/String;,"")#91
chord.project.ChordAnnotParser.parse()Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#92
chord.project.ChordAnnotParser.parse()Z#Constant(I,0)#93
chord.project.ChordAnnotParser.parse()Z#ConditionalBranch(I,eq,99)#94
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#95
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#96
chord.project.ChordAnnotParser.parse()Z#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/ChordAnnotParser;,name)#97
chord.project.ChordAnnotParser.parse()Z#Put(Ljava/lang/String;,NONSTATIC,Lchord/project/ChordAnnotParser;,prescriber)#98
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,1)#99
chord.project.ChordAnnotParser.parse()Z#Invoke(INTERFACE,Lchord/project/Chord;,consumes,()[Ljava/lang/String;)#100
chord.project.ChordAnnotParser.parse()Z#LocalStore(Ljava/lang/Object;,4)#101
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#102
chord.project.ChordAnnotParser.parse()Z#New(Ljava/util/ArrayList;,0)#103
chord.project.ChordAnnotParser.parse()Z#Dup(1,0)#104
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,4)#105
chord.project.ChordAnnotParser.parse()Z#ArrayLength()#106
chord.project.ChordAnnotParser.parse()Z#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,(I)V)#107
chord.project.ChordAnnotParser.parse()Z#Put(Ljava/util/List;,NONSTATIC,Lchord/project/ChordAnnotParser;,consumes)#108
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,3)#109
chord.project.ChordAnnotParser.parse()Z#Constant(L;,null)#110
chord.project.ChordAnnotParser.parse()Z#ConditionalBranch(Ljava/lang/Object;,eq,137)#111
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,3)#112
chord.project.ChordAnnotParser.parse()Z#Invoke(VIRTUAL,Lchord/bddbddb/RelSign;,getDomKinds,()[Ljava/lang/String;)#113
chord.project.ChordAnnotParser.parse()Z#Dup(1,0)#114
chord.project.ChordAnnotParser.parse()Z#LocalStore(Ljava/lang/Object;,8)#115
chord.project.ChordAnnotParser.parse()Z#ArrayLength()#116
chord.project.ChordAnnotParser.parse()Z#LocalStore(I,7)#117
chord.project.ChordAnnotParser.parse()Z#Constant(I,0)#118
chord.project.ChordAnnotParser.parse()Z#LocalStore(I,6)#119
chord.project.ChordAnnotParser.parse()Z#Goto(134)#120
chord.project.ChordAnnotParser.parse()Z#LocalLoad(I,6)#134
chord.project.ChordAnnotParser.parse()Z#LocalLoad(I,7)#135
chord.project.ChordAnnotParser.parse()Z#ConditionalBranch(I,lt,121)#136
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,8)#121
chord.project.ChordAnnotParser.parse()Z#LocalLoad(I,6)#122
chord.project.ChordAnnotParser.parse()Z#ArrayLoad(Ljava/lang/Object;)#123
chord.project.ChordAnnotParser.parse()Z#LocalStore(Ljava/lang/Object;,5)#124
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#125
chord.project.ChordAnnotParser.parse()Z#Get(Ljava/util/List;,NONSTATIC,Lchord/project/ChordAnnotParser;,consumes)#126
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,5)#127
chord.project.ChordAnnotParser.parse()Z#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#128
chord.project.ChordAnnotParser.parse()Z#Pop(1)#129
chord.project.ChordAnnotParser.parse()Z#LocalLoad(I,6)#130
chord.project.ChordAnnotParser.parse()Z#Constant(I,1)#131
chord.project.ChordAnnotParser.parse()Z#BinaryOp(I,add)#132
chord.project.ChordAnnotParser.parse()Z#LocalStore(I,6)#133
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,4)#137
chord.project.ChordAnnotParser.parse()Z#Dup(1,0)#138
chord.project.ChordAnnotParser.parse()Z#LocalStore(Ljava/lang/Object;,8)#139
chord.project.ChordAnnotParser.parse()Z#ArrayLength()#140
chord.project.ChordAnnotParser.parse()Z#LocalStore(I,7)#141
chord.project.ChordAnnotParser.parse()Z#Constant(I,0)#142
chord.project.ChordAnnotParser.parse()Z#LocalStore(I,6)#143
chord.project.ChordAnnotParser.parse()Z#Goto(160)#144
chord.project.ChordAnnotParser.parse()Z#LocalLoad(I,6)#160
chord.project.ChordAnnotParser.parse()Z#LocalLoad(I,7)#161
chord.project.ChordAnnotParser.parse()Z#ConditionalBranch(I,lt,145)#162
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,1)#163
chord.project.ChordAnnotParser.parse()Z#Invoke(INTERFACE,Lchord/project/Chord;,produces,()[Ljava/lang/String;)#164
chord.project.ChordAnnotParser.parse()Z#LocalStore(Ljava/lang/Object;,4)#165
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#166
chord.project.ChordAnnotParser.parse()Z#New(Ljava/util/ArrayList;,0)#167
chord.project.ChordAnnotParser.parse()Z#Dup(1,0)#168
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,4)#169
chord.project.ChordAnnotParser.parse()Z#ArrayLength()#170
chord.project.ChordAnnotParser.parse()Z#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,(I)V)#171
chord.project.ChordAnnotParser.parse()Z#Put(Ljava/util/List;,NONSTATIC,Lchord/project/ChordAnnotParser;,produces)#172
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,4)#173
chord.project.ChordAnnotParser.parse()Z#Dup(1,0)#174
chord.project.ChordAnnotParser.parse()Z#LocalStore(Ljava/lang/Object;,8)#175
chord.project.ChordAnnotParser.parse()Z#ArrayLength()#176
chord.project.ChordAnnotParser.parse()Z#LocalStore(I,7)#177
chord.project.ChordAnnotParser.parse()Z#Constant(I,0)#178
chord.project.ChordAnnotParser.parse()Z#LocalStore(I,6)#179
chord.project.ChordAnnotParser.parse()Z#Goto(196)#180
chord.project.ChordAnnotParser.parse()Z#LocalLoad(I,6)#196
chord.project.ChordAnnotParser.parse()Z#LocalLoad(I,7)#197
chord.project.ChordAnnotParser.parse()Z#ConditionalBranch(I,lt,181)#198
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,1)#199
chord.project.ChordAnnotParser.parse()Z#Invoke(INTERFACE,Lchord/project/Chord;,controls,()[Ljava/lang/String;)#200
chord.project.ChordAnnotParser.parse()Z#LocalStore(Ljava/lang/Object;,4)#201
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#202
chord.project.ChordAnnotParser.parse()Z#New(Ljava/util/ArrayList;,0)#203
chord.project.ChordAnnotParser.parse()Z#Dup(1,0)#204
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,4)#205
chord.project.ChordAnnotParser.parse()Z#ArrayLength()#206
chord.project.ChordAnnotParser.parse()Z#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,(I)V)#207
chord.project.ChordAnnotParser.parse()Z#Put(Ljava/util/List;,NONSTATIC,Lchord/project/ChordAnnotParser;,controls)#208
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,4)#209
chord.project.ChordAnnotParser.parse()Z#Dup(1,0)#210
chord.project.ChordAnnotParser.parse()Z#LocalStore(Ljava/lang/Object;,8)#211
chord.project.ChordAnnotParser.parse()Z#ArrayLength()#212
chord.project.ChordAnnotParser.parse()Z#LocalStore(I,7)#213
chord.project.ChordAnnotParser.parse()Z#Constant(I,0)#214
chord.project.ChordAnnotParser.parse()Z#LocalStore(I,6)#215
chord.project.ChordAnnotParser.parse()Z#Goto(232)#216
chord.project.ChordAnnotParser.parse()Z#LocalLoad(I,6)#232
chord.project.ChordAnnotParser.parse()Z#LocalLoad(I,7)#233
chord.project.ChordAnnotParser.parse()Z#ConditionalBranch(I,lt,217)#234
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#235
chord.project.ChordAnnotParser.parse()Z#Get(Ljava/lang/Class;,NONSTATIC,Lchord/project/ChordAnnotParser;,type)#236
chord.project.ChordAnnotParser.parse()Z#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@3ad3958b)#237
chord.project.ChordAnnotParser.parse()Z#Invoke(STATIC,Lchord/util/Utils;,isSubclass,(Ljava/lang/Class;Ljava/lang/Class;)Z)#238
chord.project.ChordAnnotParser.parse()Z#Constant(I,0)#239
chord.project.ChordAnnotParser.parse()Z#ConditionalBranch(I,ne,247)#240
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#247
chord.project.ChordAnnotParser.parse()Z#Get(Ljava/util/List;,NONSTATIC,Lchord/project/ChordAnnotParser;,produces)#248
chord.project.ChordAnnotParser.parse()Z#Invoke(INTERFACE,Ljava/util/List;,size,()I)#249
chord.project.ChordAnnotParser.parse()Z#Constant(I,0)#250
chord.project.ChordAnnotParser.parse()Z#ConditionalBranch(I,le,260)#251
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#260
chord.project.ChordAnnotParser.parse()Z#Get(Ljava/util/List;,NONSTATIC,Lchord/project/ChordAnnotParser;,produces)#261
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#262
chord.project.ChordAnnotParser.parse()Z#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/ChordAnnotParser;,name)#263
chord.project.ChordAnnotParser.parse()Z#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#264
chord.project.ChordAnnotParser.parse()Z#Pop(1)#265
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#266
chord.project.ChordAnnotParser.parse()Z#Get(Ljava/util/List;,NONSTATIC,Lchord/project/ChordAnnotParser;,controls)#267
chord.project.ChordAnnotParser.parse()Z#Invoke(INTERFACE,Ljava/util/List;,size,()I)#268
chord.project.ChordAnnotParser.parse()Z#Constant(I,0)#269
chord.project.ChordAnnotParser.parse()Z#ConditionalBranch(I,le,279)#270
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,1)#279
chord.project.ChordAnnotParser.parse()Z#Invoke(INTERFACE,Lchord/project/Chord;,namesOfTypes,()[Ljava/lang/String;)#280
chord.project.ChordAnnotParser.parse()Z#LocalStore(Ljava/lang/Object;,4)#281
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,1)#282
chord.project.ChordAnnotParser.parse()Z#Invoke(INTERFACE,Lchord/project/Chord;,types,()[Ljava/lang/Class;)#283
chord.project.ChordAnnotParser.parse()Z#LocalStore(Ljava/lang/Object;,5)#284
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,4)#285
chord.project.ChordAnnotParser.parse()Z#ArrayLength()#286
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,5)#287
chord.project.ChordAnnotParser.parse()Z#ArrayLength()#288
chord.project.ChordAnnotParser.parse()Z#ConditionalBranch(I,eq,296)#289
chord.project.ChordAnnotParser.parse()Z#Constant(I,0)#296
chord.project.ChordAnnotParser.parse()Z#LocalStore(I,6)#297
chord.project.ChordAnnotParser.parse()Z#Goto(348)#298
chord.project.ChordAnnotParser.parse()Z#LocalLoad(I,6)#348
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,4)#349
chord.project.ChordAnnotParser.parse()Z#ArrayLength()#350
chord.project.ChordAnnotParser.parse()Z#ConditionalBranch(I,lt,299)#351
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,1)#352
chord.project.ChordAnnotParser.parse()Z#Invoke(INTERFACE,Lchord/project/Chord;,namesOfSigns,()[Ljava/lang/String;)#353
chord.project.ChordAnnotParser.parse()Z#LocalStore(Ljava/lang/Object;,6)#354
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,1)#355
chord.project.ChordAnnotParser.parse()Z#Invoke(INTERFACE,Lchord/project/Chord;,signs,()[Ljava/lang/String;)#356
chord.project.ChordAnnotParser.parse()Z#LocalStore(Ljava/lang/Object;,7)#357
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,6)#358
chord.project.ChordAnnotParser.parse()Z#ArrayLength()#359
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,7)#360
chord.project.ChordAnnotParser.parse()Z#ArrayLength()#361
chord.project.ChordAnnotParser.parse()Z#ConditionalBranch(I,eq,369)#362
chord.project.ChordAnnotParser.parse()Z#Constant(I,0)#369
chord.project.ChordAnnotParser.parse()Z#LocalStore(I,8)#370
chord.project.ChordAnnotParser.parse()Z#Goto(462)#371
chord.project.ChordAnnotParser.parse()Z#LocalLoad(I,8)#462
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,6)#463
chord.project.ChordAnnotParser.parse()Z#ArrayLength()#464
chord.project.ChordAnnotParser.parse()Z#ConditionalBranch(I,lt,372)#465
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#466
chord.project.ChordAnnotParser.parse()Z#Get(Z,NONSTATIC,Lchord/project/ChordAnnotParser;,hasNoErrors)#467
chord.project.ChordAnnotParser.parse()Z#Return(I)#468
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalStore(I,4)#16
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(I,4)#17
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Constant(I,0)#18
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#ConditionalBranch(I,ne,24)#19
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#24
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(VIRTUAL,Lchord/project/ChordAnnotParser;,getName,()Ljava/lang/String;)#25
chord.project.ChordAnnotParser.getName()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.ChordAnnotParser.getName()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/ChordAnnotParser;,name)#1
chord.project.ChordAnnotParser.getName()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,5)#26
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,5)#27
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"")#28
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#29
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Constant(I,0)#30
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#ConditionalBranch(I,eq,45)#31
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#45
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/TaskParser;,nameToDlogTaskMap)#46
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,5)#47
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#48
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#CheckCast(Lchord/project/analyses/DlogAnalysis;)#49
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,6)#50
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,6)#51
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Constant(L;,null)#52
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,eq,61)#53
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#61
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/TaskParser;,nameToJavaTaskMap)#62
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,5)#63
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#64
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#CheckCast(Ljava/lang/Class;)#65
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,7)#66
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,7)#67
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Constant(L;,null)#68
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,eq,77)#69
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#77
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(VIRTUAL,Lchord/project/ChordAnnotParser;,getNameToTypeMap,()Ljava/util/Map;)#78
chord.project.ChordAnnotParser.getNameToTypeMap()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.ChordAnnotParser.getNameToTypeMap()Ljava/util/Map;#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ChordAnnotParser;,nameToTypeMap)#1
chord.project.ChordAnnotParser.getNameToTypeMap()Ljava/util/Map;#Return(Ljava/lang/Object;)#2
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,8)#79
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#80
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(VIRTUAL,Lchord/project/ChordAnnotParser;,getNameToSignMap,()Ljava/util/Map;)#81
chord.project.ChordAnnotParser.getNameToSignMap()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.ChordAnnotParser.getNameToSignMap()Ljava/util/Map;#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ChordAnnotParser;,nameToSignMap)#1
chord.project.ChordAnnotParser.getNameToSignMap()Ljava/util/Map;#Return(Ljava/lang/Object;)#2
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,9)#82
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,8)#83
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,entrySet,()Ljava/util/Set;)#84
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#85
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,11)#86
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Goto(120)#87
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,11)#120
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#121
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Constant(I,0)#122
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#ConditionalBranch(I,ne,88)#123
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,11)#88
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#89
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#CheckCast(Ljava/util/Map$Entry;)#90
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,10)#91
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,10)#92
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map$Entry;,getKey,()Ljava/lang/Object;)#93
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#CheckCast(Ljava/lang/String;)#94
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,12)#95
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,10)#96
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map$Entry;,getValue,()Ljava/lang/Object;)#97
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#CheckCast(Ljava/lang/Class;)#98
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,13)#99
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,9)#100
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,12)#101
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#102
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#CheckCast(Lchord/bddbddb/RelSign;)#103
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,14)#104
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,14)#105
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Constant(L;,null)#106
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,eq,115)#107
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#108
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,12)#109
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,13)#110
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#111
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,14)#112
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(SPECIAL,Lchord/project/TaskParser;,createTrgt,(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V)#113
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Goto(120)#114
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,9)#124
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,entrySet,()Ljava/util/Set;)#125
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#126
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,11)#127
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Goto(153)#128
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,11)#153
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#154
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Constant(I,0)#155
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#ConditionalBranch(I,ne,129)#156
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,11)#129
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#130
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#CheckCast(Ljava/util/Map$Entry;)#131
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,10)#132
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,10)#133
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map$Entry;,getKey,()Ljava/lang/Object;)#134
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#CheckCast(Ljava/lang/String;)#135
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,12)#136
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,8)#137
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,12)#138
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#139
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Constant(I,0)#140
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#ConditionalBranch(I,eq,143)#141
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Goto(153)#142
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#157
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(VIRTUAL,Lchord/project/ChordAnnotParser;,getPrescriber,()Ljava/lang/String;)#158
chord.project.ChordAnnotParser.getPrescriber()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.ChordAnnotParser.getPrescriber()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/ChordAnnotParser;,prescriber)#1
chord.project.ChordAnnotParser.getPrescriber()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,10)#159
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#160
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/TaskParser;,nameToPrescriberNameMap)#161
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,5)#162
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,10)#163
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#164
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Pop(1)#165
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#166
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(VIRTUAL,Lchord/project/ChordAnnotParser;,getConsumes,()Ljava/util/List;)#167
chord.project.ChordAnnotParser.getConsumes()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.ChordAnnotParser.getConsumes()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lchord/project/ChordAnnotParser;,consumes)#1
chord.project.ChordAnnotParser.getConsumes()Ljava/util/List;#Return(Ljava/lang/Object;)#2
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,11)#168
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#169
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/TaskParser;,nameToConsumeNamesMap)#170
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,5)#171
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,11)#172
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#173
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Pop(1)#174
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#175
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(VIRTUAL,Lchord/project/ChordAnnotParser;,getProduces,()Ljava/util/List;)#176
chord.project.ChordAnnotParser.getProduces()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.ChordAnnotParser.getProduces()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lchord/project/ChordAnnotParser;,produces)#1
chord.project.ChordAnnotParser.getProduces()Ljava/util/List;#Return(Ljava/lang/Object;)#2
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,12)#177
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#178
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/TaskParser;,nameToProduceNamesMap)#179
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,5)#180
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,12)#181
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#182
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Pop(1)#183
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#184
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(VIRTUAL,Lchord/project/ChordAnnotParser;,getControls,()Ljava/util/List;)#185
chord.project.ChordAnnotParser.getControls()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.ChordAnnotParser.getControls()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lchord/project/ChordAnnotParser;,controls)#1
chord.project.ChordAnnotParser.getControls()Ljava/util/List;#Return(Ljava/lang/Object;)#2
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,13)#186
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#187
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/TaskParser;,nameToControlNamesMap)#188
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,5)#189
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,13)#190
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#191
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Pop(1)#192
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,11)#193
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#194
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,15)#195
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Goto(216)#196
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,15)#216
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#217
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Constant(I,0)#218
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#ConditionalBranch(I,ne,197)#219
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,15)#197
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#198
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#CheckCast(Ljava/lang/String;)#199
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,14)#200
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,8)#201
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,14)#202
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#203
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Constant(I,0)#204
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#ConditionalBranch(I,ne,216)#205
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,9)#206
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,14)#207
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#208
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Constant(I,0)#209
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#ConditionalBranch(I,ne,216)#210
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#211
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,14)#212
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Constant(L;,null)#213
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#214
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(SPECIAL,Lchord/project/TaskParser;,createTrgt,(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)V)#215
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,12)#220
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#221
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,15)#222
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Goto(243)#223
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,15)#243
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#244
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Constant(I,0)#245
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#ConditionalBranch(I,ne,224)#246
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,15)#224
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#225
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#CheckCast(Ljava/lang/String;)#226
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,14)#227
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,8)#228
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,14)#229
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#230
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Constant(I,0)#231
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#ConditionalBranch(I,ne,243)#232
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#247
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/TaskParser;,nameToJavaTaskMap)#248
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,5)#249
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#250
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#251
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Pop(1)#252
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Return(V)#253
chord.analyses.inst.RelMgetInstFldInst.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@b2434b45)#0
chord.analyses.inst.RelMgetInstFldInst.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.inst.RelMgetInstFldInst.<clinit>()V#Constant(I,0)#2
chord.analyses.inst.RelMgetInstFldInst.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.inst.RelMgetInstFldInst.<clinit>()V#Constant(I,0)#6
chord.analyses.inst.RelMgetInstFldInst.<clinit>()V#Put(Z,STATIC,Lchord/analyses/inst/RelMgetInstFldInst;,$assertionsDisabled)#7
chord.analyses.inst.RelMgetInstFldInst.<clinit>()V#Return(V)#8
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#Constant(L;,null)#19
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#LocalStore(Ljava/lang/Object;,3)#20
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#LocalLoad(Ljava/lang/Object;,4)#29
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#Constant(I,0)#30
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#ArrayLoad(Ljava/lang/Object;)#31
chord.project.ChordAnnotParser.parseRelSign(Ljava/lang/String;)Lchord/bddbddb/RelSign;#LocalStore(Ljava/lang/Object;,3)#32
chord.analyses.datarace.RelExcludeInitMethods.<clinit>()V#Constant(Ljava/lang/String;,"chord.datarace.exclude.init")#0
chord.analyses.datarace.RelExcludeInitMethods.<clinit>()V#Constant(Ljava/lang/String;,"true")#1
chord.analyses.datarace.RelExcludeInitMethods.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#2
chord.analyses.datarace.RelExcludeInitMethods.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/analyses/datarace/RelExcludeInitMethods;,init)#3
chord.analyses.datarace.RelExcludeInitMethods.<clinit>()V#Return(V)#4
chord.bddbddb.Dom.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@e0b771e4)#0
chord.bddbddb.Dom.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.bddbddb.Dom.<clinit>()V#Constant(I,0)#2
chord.bddbddb.Dom.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.bddbddb.Dom.<clinit>()V#Constant(I,0)#6
chord.bddbddb.Dom.<clinit>()V#Put(Z,STATIC,Lchord/bddbddb/Dom;,$assertionsDisabled)#7
chord.bddbddb.Dom.<clinit>()V#Return(V)#8
chord.util.Utils.isSubclass(Ljava/lang/Class;Ljava/lang/Class;)Z#LocalStore(Ljava/lang/Object;,2)#5
chord.util.Utils.isSubclass(Ljava/lang/Class;Ljava/lang/Class;)Z#Constant(I,0)#6
chord.util.Utils.isSubclass(Ljava/lang/Class;Ljava/lang/Class;)Z#Return(I)#7
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,2)#75
chord.project.ChordAnnotParser.parse()Z#Constant(Ljava/lang/String;,"")#76
chord.project.ChordAnnotParser.parse()Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#77
chord.project.ChordAnnotParser.parse()Z#Constant(I,0)#78
chord.project.ChordAnnotParser.parse()Z#ConditionalBranch(I,ne,85)#79
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,8)#145
chord.project.ChordAnnotParser.parse()Z#LocalLoad(I,6)#146
chord.project.ChordAnnotParser.parse()Z#ArrayLoad(Ljava/lang/Object;)#147
chord.project.ChordAnnotParser.parse()Z#LocalStore(Ljava/lang/Object;,5)#148
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#149
chord.project.ChordAnnotParser.parse()Z#Get(Ljava/util/List;,NONSTATIC,Lchord/project/ChordAnnotParser;,consumes)#150
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#151
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,5)#152
chord.project.ChordAnnotParser.parse()Z#Invoke(SPECIAL,Lchord/project/ChordAnnotParser;,processName,(Ljava/lang/String;)Ljava/lang/String;)#153
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#0
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#Constant(I,33)#1
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,indexOf,(I)I)#2
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#LocalStore(I,2)#3
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,2)#4
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#Constant(I,-1)#5
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ne,10)#6
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#7
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,3)#8
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#Goto(38)#9
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#38
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#39
chord.project.ChordAnnotParser.parse()Z#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#154
chord.project.ChordAnnotParser.parse()Z#Pop(1)#155
chord.project.ChordAnnotParser.parse()Z#LocalLoad(I,6)#156
chord.project.ChordAnnotParser.parse()Z#Constant(I,1)#157
chord.project.ChordAnnotParser.parse()Z#BinaryOp(I,add)#158
chord.project.ChordAnnotParser.parse()Z#LocalStore(I,6)#159
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#241
chord.project.ChordAnnotParser.parse()Z#Get(Ljava/lang/Class;,NONSTATIC,Lchord/project/ChordAnnotParser;,type)#242
chord.project.ChordAnnotParser.parse()Z#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@3acd5e02)#243
chord.project.ChordAnnotParser.parse()Z#Invoke(STATIC,Lchord/util/Utils;,isSubclass,(Ljava/lang/Class;Ljava/lang/Class;)Z)#244
chord.project.ChordAnnotParser.parse()Z#Constant(I,0)#245
chord.project.ChordAnnotParser.parse()Z#ConditionalBranch(I,eq,279)#246
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#115
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,12)#116
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,13)#117
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#118
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(SPECIAL,Lchord/project/TaskParser;,createTrgt,(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)V)#119
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,8)#181
chord.project.ChordAnnotParser.parse()Z#LocalLoad(I,6)#182
chord.project.ChordAnnotParser.parse()Z#ArrayLoad(Ljava/lang/Object;)#183
chord.project.ChordAnnotParser.parse()Z#LocalStore(Ljava/lang/Object;,5)#184
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#185
chord.project.ChordAnnotParser.parse()Z#Get(Ljava/util/List;,NONSTATIC,Lchord/project/ChordAnnotParser;,produces)#186
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#187
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,5)#188
chord.project.ChordAnnotParser.parse()Z#Invoke(SPECIAL,Lchord/project/ChordAnnotParser;,processName,(Ljava/lang/String;)Ljava/lang/String;)#189
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#10
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#11
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,2)#12
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,substring,(II)Ljava/lang/String;)#13
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,3)#14
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#15
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(I,2)#16
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#Constant(I,1)#17
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#BinaryOp(I,add)#18
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,substring,(I)Ljava/lang/String;)#19
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,4)#20
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,4)#21
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"sign=")#22
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,startsWith,(Ljava/lang/String;)Z)#23
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#24
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,38)#25
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#26
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,4)#27
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#Constant(I,5)#28
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,substring,(I)Ljava/lang/String;)#29
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#Invoke(SPECIAL,Lchord/project/ChordAnnotParser;,parseRelSign,(Ljava/lang/String;)Lchord/bddbddb/RelSign;)#30
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,5)#31
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#32
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ChordAnnotParser;,nameToSignMap)#33
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#34
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,5)#35
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#36
chord.project.ChordAnnotParser.processName(Ljava/lang/String;)Ljava/lang/String;#Pop(1)#37
chord.project.ChordAnnotParser.parse()Z#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#190
chord.project.ChordAnnotParser.parse()Z#Pop(1)#191
chord.project.ChordAnnotParser.parse()Z#LocalLoad(I,6)#192
chord.project.ChordAnnotParser.parse()Z#Constant(I,1)#193
chord.project.ChordAnnotParser.parse()Z#BinaryOp(I,add)#194
chord.project.ChordAnnotParser.parse()Z#LocalStore(I,6)#195
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,10)#143
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map$Entry;,getValue,()Ljava/lang/Object;)#144
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#CheckCast(Lchord/bddbddb/RelSign;)#145
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,13)#146
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#147
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,12)#148
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@3ad3958b)#149
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#150
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,13)#151
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(SPECIAL,Lchord/project/TaskParser;,createTrgt,(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lchord/bddbddb/RelSign;)V)#152
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,9)#233
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,14)#234
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#235
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Constant(I,0)#236
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#ConditionalBranch(I,ne,243)#237
chord.analyses.invk.RelPI.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@fabe3f6d)#0
chord.analyses.invk.RelPI.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.invk.RelPI.<clinit>()V#Constant(I,0)#2
chord.analyses.invk.RelPI.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.invk.RelPI.<clinit>()V#Constant(I,0)#6
chord.analyses.invk.RelPI.<clinit>()V#Put(Z,STATIC,Lchord/analyses/invk/RelPI;,$assertionsDisabled)#7
chord.analyses.invk.RelPI.<clinit>()V#Return(V)#8
chord.analyses.point.DomP.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@b5f7955d)#0
chord.analyses.point.DomP.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.point.DomP.<clinit>()V#Constant(I,0)#2
chord.analyses.point.DomP.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.point.DomP.<clinit>()V#Constant(I,0)#6
chord.analyses.point.DomP.<clinit>()V#Put(Z,STATIC,Lchord/analyses/point/DomP;,$assertionsDisabled)#7
chord.analyses.point.DomP.<clinit>()V#Return(V)#8
chord.analyses.inst.RelPputInstFldInst.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@9d8c3b1b)#0
chord.analyses.inst.RelPputInstFldInst.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.inst.RelPputInstFldInst.<clinit>()V#Constant(I,0)#2
chord.analyses.inst.RelPputInstFldInst.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.inst.RelPputInstFldInst.<clinit>()V#Constant(I,0)#6
chord.analyses.inst.RelPputInstFldInst.<clinit>()V#Put(Z,STATIC,Lchord/analyses/inst/RelPputInstFldInst;,$assertionsDisabled)#7
chord.analyses.inst.RelPputInstFldInst.<clinit>()V#Return(V)#8
chord.analyses.lock.RelML.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@aca180d6)#0
chord.analyses.lock.RelML.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.lock.RelML.<clinit>()V#Constant(I,0)#2
chord.analyses.lock.RelML.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.lock.RelML.<clinit>()V#Constant(I,0)#6
chord.analyses.lock.RelML.<clinit>()V#Put(Z,STATIC,Lchord/analyses/lock/RelML;,$assertionsDisabled)#7
chord.analyses.lock.RelML.<clinit>()V#Return(V)#8
chord.analyses.lock.RelSyncLM.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@17209b19)#0
chord.analyses.lock.RelSyncLM.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.lock.RelSyncLM.<clinit>()V#Constant(I,0)#2
chord.analyses.lock.RelSyncLM.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.lock.RelSyncLM.<clinit>()V#Constant(I,0)#6
chord.analyses.lock.RelSyncLM.<clinit>()V#Put(Z,STATIC,Lchord/analyses/lock/RelSyncLM;,$assertionsDisabled)#7
chord.analyses.lock.RelSyncLM.<clinit>()V#Return(V)#8
chord.analyses.inst.RelMgetClassInvkInst.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@e663a14b)#0
chord.analyses.inst.RelMgetClassInvkInst.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.inst.RelMgetClassInvkInst.<clinit>()V#Constant(I,0)#2
chord.analyses.inst.RelMgetClassInvkInst.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.inst.RelMgetClassInvkInst.<clinit>()V#Constant(I,0)#6
chord.analyses.inst.RelMgetClassInvkInst.<clinit>()V#Put(Z,STATIC,Lchord/analyses/inst/RelMgetClassInvkInst;,$assertionsDisabled)#7
chord.analyses.inst.RelMgetClassInvkInst.<clinit>()V#Return(V)#8
chord.analyses.heapacc.RelPE.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@6d057c36)#0
chord.analyses.heapacc.RelPE.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.heapacc.RelPE.<clinit>()V#Constant(I,0)#2
chord.analyses.heapacc.RelPE.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.heapacc.RelPE.<clinit>()V#Constant(I,0)#6
chord.analyses.heapacc.RelPE.<clinit>()V#Put(Z,STATIC,Lchord/analyses/heapacc/RelPE;,$assertionsDisabled)#7
chord.analyses.heapacc.RelPE.<clinit>()V#Return(V)#8
chord.analyses.alloc.RelMH.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@79678130)#0
chord.analyses.alloc.RelMH.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.alloc.RelMH.<clinit>()V#Constant(I,0)#2
chord.analyses.alloc.RelMH.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.alloc.RelMH.<clinit>()V#Constant(I,0)#6
chord.analyses.alloc.RelMH.<clinit>()V#Put(Z,STATIC,Lchord/analyses/alloc/RelMH;,$assertionsDisabled)#7
chord.analyses.alloc.RelMH.<clinit>()V#Return(V)#8
chord.analyses.reflect.RelClsTH.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@db0557f3)#0
chord.analyses.reflect.RelClsTH.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.reflect.RelClsTH.<clinit>()V#Constant(I,0)#2
chord.analyses.reflect.RelClsTH.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.reflect.RelClsTH.<clinit>()V#Constant(I,0)#6
chord.analyses.reflect.RelClsTH.<clinit>()V#Put(Z,STATIC,Lchord/analyses/reflect/RelClsTH;,$assertionsDisabled)#7
chord.analyses.reflect.RelClsTH.<clinit>()V#Return(V)#8
chord.analyses.thread.RelExcludeThreadStartI.<clinit>()V#Constant(Ljava/lang/String;,"chord.thread.exclude")#0
chord.analyses.thread.RelExcludeThreadStartI.<clinit>()V#Constant(Ljava/lang/String;,"sun.,java.")#1
chord.analyses.thread.RelExcludeThreadStartI.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#2
chord.analyses.thread.RelExcludeThreadStartI.<clinit>()V#LocalStore(Ljava/lang/Object;,0)#3
chord.analyses.thread.RelExcludeThreadStartI.<clinit>()V#LocalLoad(Ljava/lang/Object;,0)#4
chord.analyses.thread.RelExcludeThreadStartI.<clinit>()V#Invoke(STATIC,Lchord/util/Utils;,toArray,(Ljava/lang/String;)[Ljava/lang/String;)#5
chord.analyses.thread.RelExcludeThreadStartI.<clinit>()V#Put([Ljava/lang/String;,STATIC,Lchord/analyses/thread/RelExcludeThreadStartI;,threadExcludeAry)#6
chord.analyses.thread.RelExcludeThreadStartI.<clinit>()V#Return(V)#7
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@90f23487)#0
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#Constant(I,0)#2
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#Constant(I,0)#6
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#Put(Z,STATIC,Lchord/analyses/alias/CtxtsAnalysis;,$assertionsDisabled)#7
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#Constant(Ljava/lang/String;,"percy")#8
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#Constant(Ljava/lang/String;,"false")#9
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#10
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#Constant(Ljava/lang/String;,"true")#11
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#12
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#Put(Z,STATIC,Lchord/analyses/alias/CtxtsAnalysis;,percy)#13
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#Invoke(STATIC,Ljava/util/Collections;,emptySet,()Ljava/util/Set;)#14
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#Put(Ljava/util/Set;,STATIC,Lchord/analyses/alias/CtxtsAnalysis;,emptyCtxtSet)#15
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#Invoke(STATIC,Ljava/util/Collections;,emptySet,()Ljava/util/Set;)#16
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#Put(Ljava/util/Set;,STATIC,Lchord/analyses/alias/CtxtsAnalysis;,emptyMethSet)#17
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#Constant(I,0)#18
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#New([Ljoeq/Compiler/Quad/Quad;,1)#19
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#Put([Ljoeq/Compiler/Quad/Quad;,STATIC,Lchord/analyses/alias/CtxtsAnalysis;,emptyElems)#20
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#Constant(Ljava/lang/String;,"chord.kobj.k")#21
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#Constant(I,1)#22
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#Invoke(STATIC,Ljava/lang/Integer;,getInteger,(Ljava/lang/String;I)Ljava/lang/Integer;)#23
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#24
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#Put(I,STATIC,Lchord/analyses/alias/CtxtsAnalysis;,kobj_K)#25
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#Constant(Ljava/lang/String;,"chord.kcfa.k")#26
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#Constant(I,1)#27
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#Invoke(STATIC,Ljava/lang/Integer;,getInteger,(Ljava/lang/String;I)Ljava/lang/Integer;)#28
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#29
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#Put(I,STATIC,Lchord/analyses/alias/CtxtsAnalysis;,kcfa_K)#30
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#Constant(Ljava/lang/String;,"chord.ctxt.kind")#31
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#Constant(Ljava/lang/String;,"ci")#32
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#33
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/analyses/alias/CtxtsAnalysis;,ctxtKind)#34
chord.analyses.alias.CtxtsAnalysis.<clinit>()V#Return(V)#35
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,4)#299
chord.project.ChordAnnotParser.parse()Z#LocalLoad(I,6)#300
chord.project.ChordAnnotParser.parse()Z#ArrayLoad(Ljava/lang/Object;)#301
chord.project.ChordAnnotParser.parse()Z#LocalStore(Ljava/lang/Object;,7)#302
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,7)#303
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#304
chord.project.ChordAnnotParser.parse()Z#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/ChordAnnotParser;,name)#305
chord.project.ChordAnnotParser.parse()Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#306
chord.project.ChordAnnotParser.parse()Z#Constant(I,0)#307
chord.project.ChordAnnotParser.parse()Z#ConditionalBranch(I,ne,314)#308
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,7)#309
chord.project.ChordAnnotParser.parse()Z#Constant(Ljava/lang/String;,".")#310
chord.project.ChordAnnotParser.parse()Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#311
chord.project.ChordAnnotParser.parse()Z#Constant(I,0)#312
chord.project.ChordAnnotParser.parse()Z#ConditionalBranch(I,eq,320)#313
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#320
chord.project.ChordAnnotParser.parse()Z#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ChordAnnotParser;,nameToTypeMap)#321
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,7)#322
chord.project.ChordAnnotParser.parse()Z#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#323
chord.project.ChordAnnotParser.parse()Z#Constant(I,0)#324
chord.project.ChordAnnotParser.parse()Z#ConditionalBranch(I,eq,336)#325
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#336
chord.project.ChordAnnotParser.parse()Z#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ChordAnnotParser;,nameToTypeMap)#337
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,7)#338
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,5)#339
chord.project.ChordAnnotParser.parse()Z#LocalLoad(I,6)#340
chord.project.ChordAnnotParser.parse()Z#ArrayLoad(Ljava/lang/Object;)#341
chord.project.ChordAnnotParser.parse()Z#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#342
chord.project.ChordAnnotParser.parse()Z#Pop(1)#343
chord.project.ChordAnnotParser.parse()Z#LocalLoad(I,6)#344
chord.project.ChordAnnotParser.parse()Z#Constant(I,1)#345
chord.project.ChordAnnotParser.parse()Z#BinaryOp(I,add)#346
chord.project.ChordAnnotParser.parse()Z#LocalStore(I,6)#347
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#238
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,14)#239
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Constant(L;,null)#240
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#241
chord.project.TaskParser.processJavaAnalysis(Ljava/lang/String;)V#Invoke(SPECIAL,Lchord/project/TaskParser;,createTrgt,(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)V)#242
chord.analyses.heapacc.RelEV.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@6d0554fa)#0
chord.analyses.heapacc.RelEV.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.heapacc.RelEV.<clinit>()V#Constant(I,0)#2
chord.analyses.heapacc.RelEV.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.heapacc.RelEV.<clinit>()V#Constant(I,0)#6
chord.analyses.heapacc.RelEV.<clinit>()V#Put(Z,STATIC,Lchord/analyses/heapacc/RelEV;,$assertionsDisabled)#7
chord.analyses.heapacc.RelEV.<clinit>()V#Return(V)#8
chord.analyses.argret.DomK.<clinit>()V#Constant(Ljava/lang/String;,"chord.domK.size")#0
chord.analyses.argret.DomK.<clinit>()V#Constant(I,32)#1
chord.analyses.argret.DomK.<clinit>()V#Invoke(STATIC,Ljava/lang/Integer;,getInteger,(Ljava/lang/String;I)Ljava/lang/Integer;)#2
chord.analyses.argret.DomK.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#3
chord.analyses.argret.DomK.<clinit>()V#Put(I,STATIC,Lchord/analyses/argret/DomK;,MAXZ)#4
chord.analyses.argret.DomK.<clinit>()V#Return(V)#5
chord.analyses.heapacc.RelEF.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@6d05530a)#0
chord.analyses.heapacc.RelEF.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.heapacc.RelEF.<clinit>()V#Constant(I,0)#2
chord.analyses.heapacc.RelEF.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.heapacc.RelEF.<clinit>()V#Constant(I,0)#6
chord.analyses.heapacc.RelEF.<clinit>()V#Put(Z,STATIC,Lchord/analyses/heapacc/RelEF;,$assertionsDisabled)#7
chord.analyses.heapacc.RelEF.<clinit>()V#Return(V)#8
chord.analyses.inst.RelPgetInstFldInst.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@56f8e4e2)#0
chord.analyses.inst.RelPgetInstFldInst.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.inst.RelPgetInstFldInst.<clinit>()V#Constant(I,0)#2
chord.analyses.inst.RelPgetInstFldInst.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.inst.RelPgetInstFldInst.<clinit>()V#Constant(I,0)#6
chord.analyses.inst.RelPgetInstFldInst.<clinit>()V#Put(Z,STATIC,Lchord/analyses/inst/RelPgetInstFldInst;,$assertionsDisabled)#7
chord.analyses.inst.RelPgetInstFldInst.<clinit>()V#Return(V)#8
chord.analyses.lock.RelPL.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@aca18c19)#0
chord.analyses.lock.RelPL.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.lock.RelPL.<clinit>()V#Constant(I,0)#2
chord.analyses.lock.RelPL.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.lock.RelPL.<clinit>()V#Constant(I,0)#6
chord.analyses.lock.RelPL.<clinit>()V#Put(Z,STATIC,Lchord/analyses/lock/RelPL;,$assertionsDisabled)#7
chord.analyses.lock.RelPL.<clinit>()V#Return(V)#8
chord.analyses.datarace.DataraceAnalysis.<clinit>()V#Constant(Ljava/lang/String;,"chord.datarace.exclude.parallel")#0
chord.analyses.datarace.DataraceAnalysis.<clinit>()V#Invoke(STATIC,Ljava/lang/Boolean;,getBoolean,(Ljava/lang/String;)Z)#1
chord.analyses.datarace.DataraceAnalysis.<clinit>()V#Put(Z,STATIC,Lchord/analyses/datarace/DataraceAnalysis;,excludeParallel)#2
chord.analyses.datarace.DataraceAnalysis.<clinit>()V#Constant(Ljava/lang/String;,"chord.datarace.exclude.escaping")#3
chord.analyses.datarace.DataraceAnalysis.<clinit>()V#Invoke(STATIC,Ljava/lang/Boolean;,getBoolean,(Ljava/lang/String;)Z)#4
chord.analyses.datarace.DataraceAnalysis.<clinit>()V#Put(Z,STATIC,Lchord/analyses/datarace/DataraceAnalysis;,excludeEscaping)#5
chord.analyses.datarace.DataraceAnalysis.<clinit>()V#Constant(Ljava/lang/String;,"chord.datarace.exclude.nongrded")#6
chord.analyses.datarace.DataraceAnalysis.<clinit>()V#Invoke(STATIC,Ljava/lang/Boolean;,getBoolean,(Ljava/lang/String;)Z)#7
chord.analyses.datarace.DataraceAnalysis.<clinit>()V#Put(Z,STATIC,Lchord/analyses/datarace/DataraceAnalysis;,excludeNongrded)#8
chord.analyses.datarace.DataraceAnalysis.<clinit>()V#Return(V)#9
chord.analyses.inst.RelMputStatFldInst.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@95f9538c)#0
chord.analyses.inst.RelMputStatFldInst.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.inst.RelMputStatFldInst.<clinit>()V#Constant(I,0)#2
chord.analyses.inst.RelMputStatFldInst.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.inst.RelMputStatFldInst.<clinit>()V#Constant(I,0)#6
chord.analyses.inst.RelMputStatFldInst.<clinit>()V#Put(Z,STATIC,Lchord/analyses/inst/RelMputStatFldInst;,$assertionsDisabled)#7
chord.analyses.inst.RelMputStatFldInst.<clinit>()V#Return(V)#8
chord.analyses.argret.RelMmethRet.<clinit>()V#New(Ljava/lang/Integer;,0)#0
chord.analyses.argret.RelMmethRet.<clinit>()V#Dup(1,0)#1
chord.analyses.argret.RelMmethRet.<clinit>()V#Constant(I,0)#2
chord.analyses.argret.RelMmethRet.<clinit>()V#Invoke(SPECIAL,Ljava/lang/Integer;,<init>,(I)V)#3
chord.analyses.argret.RelMmethRet.<clinit>()V#Put(Ljava/lang/Integer;,STATIC,Lchord/analyses/argret/RelMmethRet;,ZERO)#4
chord.analyses.argret.RelMmethRet.<clinit>()V#Return(V)#5
chord.analyses.inst.RelMobjValAsgnInst.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@72514d84)#0
chord.analyses.inst.RelMobjValAsgnInst.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.inst.RelMobjValAsgnInst.<clinit>()V#Constant(I,0)#2
chord.analyses.inst.RelMobjValAsgnInst.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.inst.RelMobjValAsgnInst.<clinit>()V#Constant(I,0)#6
chord.analyses.inst.RelMobjValAsgnInst.<clinit>()V#Put(Z,STATIC,Lchord/analyses/inst/RelMobjValAsgnInst;,$assertionsDisabled)#7
chord.analyses.inst.RelMobjValAsgnInst.<clinit>()V#Return(V)#8
chord.analyses.alloc.DomH.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@c119524a)#0
chord.analyses.alloc.DomH.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.alloc.DomH.<clinit>()V#Constant(I,0)#2
chord.analyses.alloc.DomH.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.alloc.DomH.<clinit>()V#Constant(I,0)#6
chord.analyses.alloc.DomH.<clinit>()V#Put(Z,STATIC,Lchord/analyses/alloc/DomH;,$assertionsDisabled)#7
chord.analyses.alloc.DomH.<clinit>()V#Constant(I,1)#8
chord.analyses.alloc.DomH.<clinit>()V#Put(Z,STATIC,Lchord/analyses/alloc/DomH;,PHANTOM_CLASSES)#9
chord.analyses.alloc.DomH.<clinit>()V#Constant(Ljava/lang/String;,"chord.add.phantom.classes")#10
chord.analyses.alloc.DomH.<clinit>()V#Constant(I,0)#11
chord.analyses.alloc.DomH.<clinit>()V#Invoke(STATIC,Lchord/util/Utils;,buildBoolProperty,(Ljava/lang/String;Z)Z)#12
chord.analyses.alloc.DomH.<clinit>()V#Put(Z,STATIC,Lchord/analyses/alloc/DomH;,phanton_classes)#13
chord.analyses.alloc.DomH.<clinit>()V#Return(V)#14
chord.analyses.inst.RelMclsValAsgnInst.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@714d6d37)#0
chord.analyses.inst.RelMclsValAsgnInst.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.inst.RelMclsValAsgnInst.<clinit>()V#Constant(I,0)#2
chord.analyses.inst.RelMclsValAsgnInst.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.inst.RelMclsValAsgnInst.<clinit>()V#Constant(I,0)#6
chord.analyses.inst.RelMclsValAsgnInst.<clinit>()V#Put(Z,STATIC,Lchord/analyses/inst/RelMclsValAsgnInst;,$assertionsDisabled)#7
chord.analyses.inst.RelMclsValAsgnInst.<clinit>()V#Return(V)#8
chord.analyses.deadlock.DeadlockAnalysis.<clinit>()V#Constant(Ljava/lang/String;,"chord.deadlock.exclude.parallel")#0
chord.analyses.deadlock.DeadlockAnalysis.<clinit>()V#Invoke(STATIC,Ljava/lang/Boolean;,getBoolean,(Ljava/lang/String;)Z)#1
chord.analyses.deadlock.DeadlockAnalysis.<clinit>()V#Put(Z,STATIC,Lchord/analyses/deadlock/DeadlockAnalysis;,excludeParallel)#2
chord.analyses.deadlock.DeadlockAnalysis.<clinit>()V#Constant(Ljava/lang/String;,"chord.deadlock.exclude.escaping")#3
chord.analyses.deadlock.DeadlockAnalysis.<clinit>()V#Invoke(STATIC,Ljava/lang/Boolean;,getBoolean,(Ljava/lang/String;)Z)#4
chord.analyses.deadlock.DeadlockAnalysis.<clinit>()V#Put(Z,STATIC,Lchord/analyses/deadlock/DeadlockAnalysis;,excludeEscaping)#5
chord.analyses.deadlock.DeadlockAnalysis.<clinit>()V#Constant(Ljava/lang/String;,"chord.deadlock.exclude.nonreent")#6
chord.analyses.deadlock.DeadlockAnalysis.<clinit>()V#Invoke(STATIC,Ljava/lang/Boolean;,getBoolean,(Ljava/lang/String;)Z)#7
chord.analyses.deadlock.DeadlockAnalysis.<clinit>()V#Put(Z,STATIC,Lchord/analyses/deadlock/DeadlockAnalysis;,excludeNonreent)#8
chord.analyses.deadlock.DeadlockAnalysis.<clinit>()V#Constant(Ljava/lang/String;,"chord.deadlock.exclude.nongrded")#9
chord.analyses.deadlock.DeadlockAnalysis.<clinit>()V#Invoke(STATIC,Ljava/lang/Boolean;,getBoolean,(Ljava/lang/String;)Z)#10
chord.analyses.deadlock.DeadlockAnalysis.<clinit>()V#Put(Z,STATIC,Lchord/analyses/deadlock/DeadlockAnalysis;,excludeNongrded)#11
chord.analyses.deadlock.DeadlockAnalysis.<clinit>()V#Return(V)#12
chord.analyses.reflect.RelClsForNameIT.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@87b8790e)#0
chord.analyses.reflect.RelClsForNameIT.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.reflect.RelClsForNameIT.<clinit>()V#Constant(I,0)#2
chord.analyses.reflect.RelClsForNameIT.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.reflect.RelClsForNameIT.<clinit>()V#Constant(I,0)#6
chord.analyses.reflect.RelClsForNameIT.<clinit>()V#Put(Z,STATIC,Lchord/analyses/reflect/RelClsForNameIT;,$assertionsDisabled)#7
chord.analyses.reflect.RelClsForNameIT.<clinit>()V#Return(V)#8
chord.analyses.argret.RelIinvkRet.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@31302d77)#0
chord.analyses.argret.RelIinvkRet.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.argret.RelIinvkRet.<clinit>()V#Constant(I,0)#2
chord.analyses.argret.RelIinvkRet.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.argret.RelIinvkRet.<clinit>()V#Constant(I,0)#6
chord.analyses.argret.RelIinvkRet.<clinit>()V#Put(Z,STATIC,Lchord/analyses/argret/RelIinvkRet;,$assertionsDisabled)#7
chord.analyses.argret.RelIinvkRet.<clinit>()V#Return(V)#8
chord.analyses.inst.RelPobjValAsgnInst.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@1706e721)#0
chord.analyses.inst.RelPobjValAsgnInst.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.inst.RelPobjValAsgnInst.<clinit>()V#Constant(I,0)#2
chord.analyses.inst.RelPobjValAsgnInst.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.inst.RelPobjValAsgnInst.<clinit>()V#Constant(I,0)#6
chord.analyses.inst.RelPobjValAsgnInst.<clinit>()V#Put(Z,STATIC,Lchord/analyses/inst/RelPobjValAsgnInst;,$assertionsDisabled)#7
chord.analyses.inst.RelPobjValAsgnInst.<clinit>()V#Return(V)#8
chord.analyses.argret.RelThisMV.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@82061fae)#0
chord.analyses.argret.RelThisMV.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.argret.RelThisMV.<clinit>()V#Constant(I,0)#2
chord.analyses.argret.RelThisMV.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.argret.RelThisMV.<clinit>()V#Constant(I,0)#6
chord.analyses.argret.RelThisMV.<clinit>()V#Put(Z,STATIC,Lchord/analyses/argret/RelThisMV;,$assertionsDisabled)#7
chord.analyses.argret.RelThisMV.<clinit>()V#Return(V)#8
chord.analyses.inst.RelPgetStatFldInst.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@f41b96f0)#0
chord.analyses.inst.RelPgetStatFldInst.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.inst.RelPgetStatFldInst.<clinit>()V#Constant(I,0)#2
chord.analyses.inst.RelPgetStatFldInst.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.inst.RelPgetStatFldInst.<clinit>()V#Constant(I,0)#6
chord.analyses.inst.RelPgetStatFldInst.<clinit>()V#Put(Z,STATIC,Lchord/analyses/inst/RelPgetStatFldInst;,$assertionsDisabled)#7
chord.analyses.inst.RelPgetStatFldInst.<clinit>()V#Return(V)#8
chord.analyses.heapacc.RelME.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@6d0570f3)#0
chord.analyses.heapacc.RelME.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.heapacc.RelME.<clinit>()V#Constant(I,0)#2
chord.analyses.heapacc.RelME.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.heapacc.RelME.<clinit>()V#Constant(I,0)#6
chord.analyses.heapacc.RelME.<clinit>()V#Put(Z,STATIC,Lchord/analyses/heapacc/RelME;,$assertionsDisabled)#7
chord.analyses.heapacc.RelME.<clinit>()V#Return(V)#8
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,6)#372
chord.project.ChordAnnotParser.parse()Z#LocalLoad(I,8)#373
chord.project.ChordAnnotParser.parse()Z#ArrayLoad(Ljava/lang/Object;)#374
chord.project.ChordAnnotParser.parse()Z#LocalStore(Ljava/lang/Object;,9)#375
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,9)#376
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#377
chord.project.ChordAnnotParser.parse()Z#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/ChordAnnotParser;,name)#378
chord.project.ChordAnnotParser.parse()Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#379
chord.project.ChordAnnotParser.parse()Z#Constant(I,0)#380
chord.project.ChordAnnotParser.parse()Z#ConditionalBranch(I,ne,387)#381
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,9)#382
chord.project.ChordAnnotParser.parse()Z#Constant(Ljava/lang/String;,".")#383
chord.project.ChordAnnotParser.parse()Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#384
chord.project.ChordAnnotParser.parse()Z#Constant(I,0)#385
chord.project.ChordAnnotParser.parse()Z#ConditionalBranch(I,eq,393)#386
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#393
chord.project.ChordAnnotParser.parse()Z#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ChordAnnotParser;,nameToSignMap)#394
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,9)#395
chord.project.ChordAnnotParser.parse()Z#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#396
chord.project.ChordAnnotParser.parse()Z#Constant(I,0)#397
chord.project.ChordAnnotParser.parse()Z#ConditionalBranch(I,eq,409)#398
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#409
chord.project.ChordAnnotParser.parse()Z#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ChordAnnotParser;,nameToTypeMap)#410
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,9)#411
chord.project.ChordAnnotParser.parse()Z#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#412
chord.project.ChordAnnotParser.parse()Z#CheckCast(Ljava/lang/Class;)#413
chord.project.ChordAnnotParser.parse()Z#LocalStore(Ljava/lang/Object;,10)#414
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,10)#415
chord.project.ChordAnnotParser.parse()Z#Constant(L;,null)#416
chord.project.ChordAnnotParser.parse()Z#ConditionalBranch(Ljava/lang/Object;,eq,443)#417
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#443
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,7)#444
chord.project.ChordAnnotParser.parse()Z#LocalLoad(I,8)#445
chord.project.ChordAnnotParser.parse()Z#ArrayLoad(Ljava/lang/Object;)#446
chord.project.ChordAnnotParser.parse()Z#Invoke(SPECIAL,Lchord/project/ChordAnnotParser;,parseRelSign,(Ljava/lang/String;)Lchord/bddbddb/RelSign;)#447
chord.project.ChordAnnotParser.parse()Z#LocalStore(Ljava/lang/Object;,11)#448
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,11)#449
chord.project.ChordAnnotParser.parse()Z#Constant(L;,null)#450
chord.project.ChordAnnotParser.parse()Z#ConditionalBranch(Ljava/lang/Object;,eq,458)#451
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,0)#452
chord.project.ChordAnnotParser.parse()Z#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ChordAnnotParser;,nameToSignMap)#453
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,9)#454
chord.project.ChordAnnotParser.parse()Z#LocalLoad(Ljava/lang/Object;,11)#455
chord.project.ChordAnnotParser.parse()Z#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#456
chord.project.ChordAnnotParser.parse()Z#Pop(1)#457
chord.project.ChordAnnotParser.parse()Z#LocalLoad(I,8)#458
chord.project.ChordAnnotParser.parse()Z#Constant(I,1)#459
chord.project.ChordAnnotParser.parse()Z#BinaryOp(I,add)#460
chord.project.ChordAnnotParser.parse()Z#LocalStore(I,8)#461
chord.analyses.argret.RelIinvkArg0.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@f3eba522)#0
chord.analyses.argret.RelIinvkArg0.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.argret.RelIinvkArg0.<clinit>()V#Constant(I,0)#2
chord.analyses.argret.RelIinvkArg0.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.argret.RelIinvkArg0.<clinit>()V#Constant(I,0)#6
chord.analyses.argret.RelIinvkArg0.<clinit>()V#Put(Z,STATIC,Lchord/analyses/argret/RelIinvkArg0;,$assertionsDisabled)#7
chord.analyses.argret.RelIinvkArg0.<clinit>()V#Return(V)#8
chord.analyses.inst.RelPputStatFldInst.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@3aaeed29)#0
chord.analyses.inst.RelPputStatFldInst.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.inst.RelPputStatFldInst.<clinit>()V#Constant(I,0)#2
chord.analyses.inst.RelPputStatFldInst.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.inst.RelPputStatFldInst.<clinit>()V#Constant(I,0)#6
chord.analyses.inst.RelPputStatFldInst.<clinit>()V#Put(Z,STATIC,Lchord/analyses/inst/RelPputStatFldInst;,$assertionsDisabled)#7
chord.analyses.inst.RelPputStatFldInst.<clinit>()V#Return(V)#8
chord.analyses.argret.RelIinvkArg.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@3128a262)#0
chord.analyses.argret.RelIinvkArg.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.argret.RelIinvkArg.<clinit>()V#Constant(I,0)#2
chord.analyses.argret.RelIinvkArg.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.argret.RelIinvkArg.<clinit>()V#Constant(I,0)#6
chord.analyses.argret.RelIinvkArg.<clinit>()V#Put(Z,STATIC,Lchord/analyses/argret/RelIinvkArg;,$assertionsDisabled)#7
chord.analyses.argret.RelIinvkArg.<clinit>()V#Return(V)#8
chord.analyses.inst.RelMputInstFldInst.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@f8d6a17e)#0
chord.analyses.inst.RelMputInstFldInst.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.inst.RelMputInstFldInst.<clinit>()V#Constant(I,0)#2
chord.analyses.inst.RelMputInstFldInst.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.inst.RelMputInstFldInst.<clinit>()V#Constant(I,0)#6
chord.analyses.inst.RelMputInstFldInst.<clinit>()V#Put(Z,STATIC,Lchord/analyses/inst/RelMputInstFldInst;,$assertionsDisabled)#7
chord.analyses.inst.RelMputInstFldInst.<clinit>()V#Return(V)#8
chord.analyses.alloc.RelHT.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@79676fdf)#0
chord.analyses.alloc.RelHT.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.alloc.RelHT.<clinit>()V#Constant(I,0)#2
chord.analyses.alloc.RelHT.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.alloc.RelHT.<clinit>()V#Constant(I,0)#6
chord.analyses.alloc.RelHT.<clinit>()V#Put(Z,STATIC,Lchord/analyses/alloc/RelHT;,$assertionsDisabled)#7
chord.analyses.alloc.RelHT.<clinit>()V#Return(V)#8
chord.analyses.invk.RelMI.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@fabe342a)#0
chord.analyses.invk.RelMI.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.invk.RelMI.<clinit>()V#Constant(I,0)#2
chord.analyses.invk.RelMI.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.invk.RelMI.<clinit>()V#Constant(I,0)#6
chord.analyses.invk.RelMI.<clinit>()V#Put(Z,STATIC,Lchord/analyses/invk/RelMI;,$assertionsDisabled)#7
chord.analyses.invk.RelMI.<clinit>()V#Return(V)#8
chord.analyses.reflect.ObjNewInstAnalysis.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@452fc82d)#0
chord.analyses.reflect.ObjNewInstAnalysis.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.reflect.ObjNewInstAnalysis.<clinit>()V#Constant(I,0)#2
chord.analyses.reflect.ObjNewInstAnalysis.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.reflect.ObjNewInstAnalysis.<clinit>()V#Constant(I,0)#6
chord.analyses.reflect.ObjNewInstAnalysis.<clinit>()V#Put(Z,STATIC,Lchord/analyses/reflect/ObjNewInstAnalysis;,$assertionsDisabled)#7
chord.analyses.reflect.ObjNewInstAnalysis.<clinit>()V#Return(V)#8
chord.project.analyses.BasicDynamicAnalysis.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@e606f653)#0
chord.project.analyses.BasicDynamicAnalysis.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.project.analyses.BasicDynamicAnalysis.<clinit>()V#Constant(I,0)#2
chord.project.analyses.BasicDynamicAnalysis.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.project.analyses.BasicDynamicAnalysis.<clinit>()V#Constant(I,0)#6
chord.project.analyses.BasicDynamicAnalysis.<clinit>()V#Put(Z,STATIC,Lchord/project/analyses/BasicDynamicAnalysis;,$assertionsDisabled)#7
chord.project.analyses.BasicDynamicAnalysis.<clinit>()V#Constant(Ljava/lang/String;,"chord.dynamic.runBeforeCmd")#8
chord.project.analyses.BasicDynamicAnalysis.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#9
chord.project.analyses.BasicDynamicAnalysis.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/project/analyses/BasicDynamicAnalysis;,runBefore)#10
chord.project.analyses.BasicDynamicAnalysis.<clinit>()V#Return(V)#11
chord.project.analyses.DynamicAnalysis.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@cd6c8939)#0
chord.project.analyses.DynamicAnalysis.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.project.analyses.DynamicAnalysis.<clinit>()V#Constant(I,0)#2
chord.project.analyses.DynamicAnalysis.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.project.analyses.DynamicAnalysis.<clinit>()V#Constant(I,0)#6
chord.project.analyses.DynamicAnalysis.<clinit>()V#Put(Z,STATIC,Lchord/project/analyses/DynamicAnalysis;,$assertionsDisabled)#7
chord.project.analyses.DynamicAnalysis.<clinit>()V#Return(V)#8
chord.analyses.dynamic.DynamicHeapAnalysis.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@3b14f473)#0
chord.analyses.dynamic.DynamicHeapAnalysis.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.dynamic.DynamicHeapAnalysis.<clinit>()V#Constant(I,0)#2
chord.analyses.dynamic.DynamicHeapAnalysis.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.dynamic.DynamicHeapAnalysis.<clinit>()V#Constant(I,0)#6
chord.analyses.dynamic.DynamicHeapAnalysis.<clinit>()V#Put(Z,STATIC,Lchord/analyses/dynamic/DynamicHeapAnalysis;,$assertionsDisabled)#7
chord.analyses.dynamic.DynamicHeapAnalysis.<clinit>()V#Return(V)#8
chord.analyses.var.RelVT.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@d552d03b)#0
chord.analyses.var.RelVT.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.var.RelVT.<clinit>()V#Constant(I,0)#2
chord.analyses.var.RelVT.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.var.RelVT.<clinit>()V#Constant(I,0)#6
chord.analyses.var.RelVT.<clinit>()V#Put(Z,STATIC,Lchord/analyses/var/RelVT;,$assertionsDisabled)#7
chord.analyses.var.RelVT.<clinit>()V#Return(V)#8
chord.analyses.method.RelExtraEntryPoints.<clinit>()V#Constant(Ljava/lang/String;,"chord.entrypoints.file")#0
chord.analyses.method.RelExtraEntryPoints.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#1
chord.analyses.method.RelExtraEntryPoints.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/analyses/method/RelExtraEntryPoints;,extraMethodsFile)#2
chord.analyses.method.RelExtraEntryPoints.<clinit>()V#Constant(Ljava/lang/String;,"chord.entrypoints")#3
chord.analyses.method.RelExtraEntryPoints.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#4
chord.analyses.method.RelExtraEntryPoints.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/analyses/method/RelExtraEntryPoints;,extraMethodsList)#5
chord.analyses.method.RelExtraEntryPoints.<clinit>()V#Return(V)#6
chord.analyses.argret.RelMmethArg.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@421304d8)#0
chord.analyses.argret.RelMmethArg.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.argret.RelMmethArg.<clinit>()V#Constant(I,0)#2
chord.analyses.argret.RelMmethArg.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.argret.RelMmethArg.<clinit>()V#Constant(I,0)#6
chord.analyses.argret.RelMmethArg.<clinit>()V#Put(Z,STATIC,Lchord/analyses/argret/RelMmethArg;,$assertionsDisabled)#7
chord.analyses.argret.RelMmethArg.<clinit>()V#Return(V)#8
chord.analyses.type.RelCHA.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@e4264792)#0
chord.analyses.type.RelCHA.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.type.RelCHA.<clinit>()V#Constant(I,0)#2
chord.analyses.type.RelCHA.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.type.RelCHA.<clinit>()V#Constant(I,0)#6
chord.analyses.type.RelCHA.<clinit>()V#Put(Z,STATIC,Lchord/analyses/type/RelCHA;,$assertionsDisabled)#7
chord.analyses.type.RelCHA.<clinit>()V#Return(V)#8
chord.analyses.inst.RelMcheckCastInst.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@f731b0fa)#0
chord.analyses.inst.RelMcheckCastInst.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.inst.RelMcheckCastInst.<clinit>()V#Constant(I,0)#2
chord.analyses.inst.RelMcheckCastInst.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.inst.RelMcheckCastInst.<clinit>()V#Constant(I,0)#6
chord.analyses.inst.RelMcheckCastInst.<clinit>()V#Put(Z,STATIC,Lchord/analyses/inst/RelMcheckCastInst;,$assertionsDisabled)#7
chord.analyses.inst.RelMcheckCastInst.<clinit>()V#Return(V)#8
chord.analyses.lock.RelLP.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@aca17d91)#0
chord.analyses.lock.RelLP.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.lock.RelLP.<clinit>()V#Constant(I,0)#2
chord.analyses.lock.RelLP.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.lock.RelLP.<clinit>()V#Constant(I,0)#6
chord.analyses.lock.RelLP.<clinit>()V#Put(Z,STATIC,Lchord/analyses/lock/RelLP;,$assertionsDisabled)#7
chord.analyses.lock.RelLP.<clinit>()V#Return(V)#8
chord.analyses.reflect.ConNewInstAnalysis.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@df4326b8)#0
chord.analyses.reflect.ConNewInstAnalysis.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.reflect.ConNewInstAnalysis.<clinit>()V#Constant(I,0)#2
chord.analyses.reflect.ConNewInstAnalysis.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.reflect.ConNewInstAnalysis.<clinit>()V#Constant(I,0)#6
chord.analyses.reflect.ConNewInstAnalysis.<clinit>()V#Put(Z,STATIC,Lchord/analyses/reflect/ConNewInstAnalysis;,$assertionsDisabled)#7
chord.analyses.reflect.ConNewInstAnalysis.<clinit>()V#Return(V)#8
chord.analyses.lock.RelLL.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@aca17d15)#0
chord.analyses.lock.RelLL.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.lock.RelLL.<clinit>()V#Constant(I,0)#2
chord.analyses.lock.RelLL.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.lock.RelLL.<clinit>()V#Constant(I,0)#6
chord.analyses.lock.RelLL.<clinit>()V#Put(Z,STATIC,Lchord/analyses/lock/RelLL;,$assertionsDisabled)#7
chord.analyses.lock.RelLL.<clinit>()V#Return(V)#8
chord.analyses.datarace.RelExcludeSameThread.<clinit>()V#Constant(Ljava/lang/String;,"chord.datarace.exclude.eqth")#0
chord.analyses.datarace.RelExcludeSameThread.<clinit>()V#Constant(Ljava/lang/String;,"true")#1
chord.analyses.datarace.RelExcludeSameThread.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#2
chord.analyses.datarace.RelExcludeSameThread.<clinit>()V#Put(Ljava/lang/String;,STATIC,Lchord/analyses/datarace/RelExcludeSameThread;,eqth)#3
chord.analyses.datarace.RelExcludeSameThread.<clinit>()V#Return(V)#4
chord.analyses.method.DomM.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@ec966db1)#0
chord.analyses.method.DomM.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.method.DomM.<clinit>()V#Constant(I,0)#2
chord.analyses.method.DomM.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.method.DomM.<clinit>()V#Constant(I,0)#6
chord.analyses.method.DomM.<clinit>()V#Put(Z,STATIC,Lchord/analyses/method/DomM;,$assertionsDisabled)#7
chord.analyses.method.DomM.<clinit>()V#Return(V)#8
chord.analyses.reflect.RelAryNewInstIH.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@4348c506)#0
chord.analyses.reflect.RelAryNewInstIH.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.reflect.RelAryNewInstIH.<clinit>()V#Constant(I,0)#2
chord.analyses.reflect.RelAryNewInstIH.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.reflect.RelAryNewInstIH.<clinit>()V#Constant(I,0)#6
chord.analyses.reflect.RelAryNewInstIH.<clinit>()V#Put(Z,STATIC,Lchord/analyses/reflect/RelAryNewInstIH;,$assertionsDisabled)#7
chord.analyses.reflect.RelAryNewInstIH.<clinit>()V#Return(V)#8
chord.analyses.inst.RelMgetStatFldInst.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@4f65fd53)#0
chord.analyses.inst.RelMgetStatFldInst.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.inst.RelMgetStatFldInst.<clinit>()V#Constant(I,0)#2
chord.analyses.inst.RelMgetStatFldInst.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.inst.RelMgetStatFldInst.<clinit>()V#Constant(I,0)#6
chord.analyses.inst.RelMgetStatFldInst.<clinit>()V#Put(Z,STATIC,Lchord/analyses/inst/RelMgetStatFldInst;,$assertionsDisabled)#7
chord.analyses.inst.RelMgetStatFldInst.<clinit>()V#Return(V)#8
chord.analyses.basicblock.RelSuccBB.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@97a402bf)#0
chord.analyses.basicblock.RelSuccBB.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.basicblock.RelSuccBB.<clinit>()V#Constant(I,0)#2
chord.analyses.basicblock.RelSuccBB.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.basicblock.RelSuccBB.<clinit>()V#Constant(I,0)#6
chord.analyses.basicblock.RelSuccBB.<clinit>()V#Put(Z,STATIC,Lchord/analyses/basicblock/RelSuccBB;,$assertionsDisabled)#7
chord.analyses.basicblock.RelSuccBB.<clinit>()V#Return(V)#8
chord.analyses.point.RelPP.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@20518eb0)#0
chord.analyses.point.RelPP.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.point.RelPP.<clinit>()V#Constant(I,0)#2
chord.analyses.point.RelPP.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.point.RelPP.<clinit>()V#Constant(I,0)#6
chord.analyses.point.RelPP.<clinit>()V#Put(Z,STATIC,Lchord/analyses/point/RelPP;,$assertionsDisabled)#7
chord.analyses.point.RelPP.<clinit>()V#Return(V)#8
chord.project.TaskParser.buildJavaAnalysisMap()V#Return(V)#113
chord.project.TaskParser.run()Z#LocalLoad(Ljava/lang/Object;,0)#4
chord.project.TaskParser.run()Z#Get(Z,NONSTATIC,Lchord/project/TaskParser;,hasNoErrors)#5
chord.project.TaskParser.run()Z#Return(I)#6
chord.project.ClassicProject.build()V#Constant(I,0)#11
chord.project.ClassicProject.build()V#ConditionalBranch(I,ne,15)#12
chord.project.ClassicProject.build()V#LocalLoad(Ljava/lang/Object;,1)#15
chord.project.ClassicProject.build()V#Invoke(VIRTUAL,Lchord/project/TaskParser;,getNameToJavaTaskMap,()Ljava/util/Map;)#16
chord.project.TaskParser.getNameToJavaTaskMap()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.TaskParser.getNameToJavaTaskMap()Ljava/util/Map;#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/TaskParser;,nameToJavaTaskMap)#1
chord.project.TaskParser.getNameToJavaTaskMap()Ljava/util/Map;#Return(Ljava/lang/Object;)#2
chord.project.ClassicProject.build()V#LocalStore(Ljava/lang/Object;,2)#17
chord.project.ClassicProject.build()V#LocalLoad(Ljava/lang/Object;,1)#18
chord.project.ClassicProject.build()V#Invoke(VIRTUAL,Lchord/project/TaskParser;,getNameToDlogTaskMap,()Ljava/util/Map;)#19
chord.project.TaskParser.getNameToDlogTaskMap()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.TaskParser.getNameToDlogTaskMap()Ljava/util/Map;#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/TaskParser;,nameToDlogTaskMap)#1
chord.project.TaskParser.getNameToDlogTaskMap()Ljava/util/Map;#Return(Ljava/lang/Object;)#2
chord.project.ClassicProject.build()V#LocalStore(Ljava/lang/Object;,3)#20
chord.project.ClassicProject.build()V#LocalLoad(Ljava/lang/Object;,0)#21
chord.project.ClassicProject.build()V#LocalLoad(Ljava/lang/Object;,2)#22
chord.project.ClassicProject.build()V#LocalLoad(Ljava/lang/Object;,3)#23
chord.project.ClassicProject.build()V#Invoke(SPECIAL,Lchord/project/ClassicProject;,buildNameToTaskMap,(Ljava/util/Map;Ljava/util/Map;)Z)#24
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Constant(I,1)#0
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalStore(I,3)#1
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,1)#2
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Invoke(INTERFACE,Ljava/util/Map;,entrySet,()Ljava/util/Set;)#3
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#4
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalStore(Ljava/lang/Object;,5)#5
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Goto(73)#6
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,5)#73
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#74
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Constant(I,0)#75
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#ConditionalBranch(I,ne,7)#76
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,5)#7
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#8
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#CheckCast(Ljava/util/Map$Entry;)#9
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalStore(Ljava/lang/Object;,4)#10
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,4)#11
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Invoke(INTERFACE,Ljava/util/Map$Entry;,getKey,()Ljava/lang/Object;)#12
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#CheckCast(Ljava/lang/String;)#13
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalStore(Ljava/lang/Object;,6)#14
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,4)#15
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Invoke(INTERFACE,Ljava/util/Map$Entry;,getValue,()Ljava/lang/Object;)#16
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#CheckCast(Ljava/lang/Class;)#17
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalStore(Ljava/lang/Object;,7)#18
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Constant(L;,null)#19
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalStore(Ljava/lang/Object;,8)#20
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Constant(L;,null)#21
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalStore(Ljava/lang/Object;,9)#22
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,7)#23
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Invoke(VIRTUAL,Ljava/lang/Class;,newInstance,()Ljava/lang/Object;)#24
chord.analyses.var.RelVT.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.var.RelVT.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.project.analyses.ProgramRel.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.analyses.ProgramRel.<init>()V#Invoke(SPECIAL,Lchord/bddbddb/Rel;,<init>,()V)#1
chord.bddbddb.Rel.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.bddbddb.Rel.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
chord.bddbddb.Rel.<init>()V#Return(V)#2
chord.project.analyses.ProgramRel.<init>()V#Return(V)#2
chord.analyses.var.RelVT.<init>()V#Return(V)#2
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#CheckCast(Lchord/project/ITask;)#25
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalStore(Ljava/lang/Object;,8)#26
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Goto(35)#27
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,9)#35
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Constant(L;,null)#36
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#ConditionalBranch(Ljava/lang/Object;,eq,54)#37
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Get(Z,STATIC,Lchord/project/ClassicProject;,$assertionsDisabled)#54
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Constant(I,0)#55
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#ConditionalBranch(I,ne,64)#56
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,8)#57
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Constant(L;,null)#58
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#ConditionalBranch(Ljava/lang/Object;,ne,64)#59
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,8)#64
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,6)#65
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Invoke(INTERFACE,Lchord/project/ITask;,setName,(Ljava/lang/String;)V)#66
chord.bddbddb.Rel.setName(Ljava/lang/String;)V#Get(Z,STATIC,Lchord/bddbddb/Rel;,$assertionsDisabled)#0
chord.bddbddb.Rel.setName(Ljava/lang/String;)V#Constant(I,0)#1
chord.bddbddb.Rel.setName(Ljava/lang/String;)V#ConditionalBranch(I,ne,10)#2
chord.bddbddb.Rel.setName(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#3
chord.bddbddb.Rel.setName(Ljava/lang/String;)V#Constant(L;,null)#4
chord.bddbddb.Rel.setName(Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,ne,10)#5
chord.bddbddb.Rel.setName(Ljava/lang/String;)V#Get(Z,STATIC,Lchord/bddbddb/Rel;,$assertionsDisabled)#10
chord.bddbddb.Rel.setName(Ljava/lang/String;)V#Constant(I,0)#11
chord.bddbddb.Rel.setName(Ljava/lang/String;)V#ConditionalBranch(I,ne,21)#12
chord.bddbddb.Rel.setName(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#13
chord.bddbddb.Rel.setName(Ljava/lang/String;)V#Get(Ljava/lang/String;,NONSTATIC,Lchord/bddbddb/Rel;,name)#14
chord.bddbddb.Rel.setName(Ljava/lang/String;)V#Constant(L;,null)#15
chord.bddbddb.Rel.setName(Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,eq,21)#16
chord.bddbddb.Rel.setName(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#21
chord.bddbddb.Rel.setName(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#22
chord.bddbddb.Rel.setName(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lchord/bddbddb/Rel;,name)#23
chord.bddbddb.Rel.setName(Ljava/lang/String;)V#Return(V)#24
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,0)#67
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ClassicProject;,nameToTaskMap)#68
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,6)#69
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,8)#70
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#71
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Pop(1)#72
chord.analyses.inst.RelMcheckCastInst.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.inst.RelMcheckCastInst.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.inst.RelMcheckCastInst.<init>()V#Return(V)#2
chord.analyses.argret.RelThisMV.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.argret.RelThisMV.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.argret.RelThisMV.<init>()V#Return(V)#2
chord.analyses.escape.RelQueryE.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.escape.RelQueryE.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.escape.RelQueryE.<init>()V#Return(V)#2
chord.analyses.method.RelPrivateM.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.method.RelPrivateM.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.method.RelPrivateM.<init>()V#Return(V)#2
chord.analyses.deadlock.DeadlockAnalysis.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.deadlock.DeadlockAnalysis.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/JavaAnalysis;,<init>,()V)#1
chord.analyses.deadlock.DeadlockAnalysis.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
chord.analyses.deadlock.DeadlockAnalysis.<init>()V#New(Ljava/util/HashMap;,0)#3
chord.analyses.deadlock.DeadlockAnalysis.<init>()V#Dup(1,0)#4
chord.analyses.deadlock.DeadlockAnalysis.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#5
chord.analyses.deadlock.DeadlockAnalysis.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lchord/analyses/deadlock/DeadlockAnalysis;,MMmap)#6
chord.analyses.deadlock.DeadlockAnalysis.<init>()V#Return(V)#7
chord.analyses.method.RelStatTM.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.method.RelStatTM.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.method.RelStatTM.<init>()V#Return(V)#2
chord.analyses.lock.RelLL.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.lock.RelLL.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.lock.RelLL.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
chord.analyses.lock.RelLL.<init>()V#New(Ljava/util/HashSet;,0)#3
chord.analyses.lock.RelLL.<init>()V#Dup(1,0)#4
chord.analyses.lock.RelLL.<init>()V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#5
chord.analyses.lock.RelLL.<init>()V#Put(Ljava/util/Set;,NONSTATIC,Lchord/analyses/lock/RelLL;,visited)#6
chord.analyses.lock.RelLL.<init>()V#Return(V)#7
chord.analyses.field.RelStatTF.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.field.RelStatTF.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.field.RelStatTF.<init>()V#Return(V)#2
chord.analyses.lock.RelLP.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.lock.RelLP.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.lock.RelLP.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
chord.analyses.lock.RelLP.<init>()V#New(Ljava/util/HashSet;,0)#3
chord.analyses.lock.RelLP.<init>()V#Dup(1,0)#4
chord.analyses.lock.RelLP.<init>()V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#5
chord.analyses.lock.RelLP.<init>()V#Put(Ljava/util/Set;,NONSTATIC,Lchord/analyses/lock/RelLP;,visited)#6
chord.analyses.lock.RelLP.<init>()V#Return(V)#7
chord.analyses.method.RelSyncM.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.method.RelSyncM.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.method.RelSyncM.<init>()V#Return(V)#2
chord.analyses.alloc.RelMH.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.alloc.RelMH.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.alloc.RelMH.<init>()V#Return(V)#2
chord.analyses.heapacc.RelME.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.heapacc.RelME.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.heapacc.RelME.<init>()V#Return(V)#2
chord.analyses.lock.RelML.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.lock.RelML.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.lock.RelML.<init>()V#Return(V)#2
chord.analyses.invk.RelMI.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.invk.RelMI.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.invk.RelMI.<init>()V#Return(V)#2
chord.analyses.inst.RelMobjValAsgnInst.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.inst.RelMobjValAsgnInst.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.inst.RelMobjValAsgnInst.<init>()V#Return(V)#2
chord.analyses.method.RelClinitM.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.method.RelClinitM.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.method.RelClinitM.<init>()V#Return(V)#2
chord.analyses.var.RelMV.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.var.RelMV.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.var.RelMV.<init>()V#Return(V)#2
chord.analyses.field.RelStatF.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.field.RelStatF.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.field.RelStatF.<init>()V#Return(V)#2
chord.analyses.datarace.DataraceAnalysis.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.datarace.DataraceAnalysis.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/JavaAnalysis;,<init>,()V)#1
chord.analyses.datarace.DataraceAnalysis.<init>()V#Return(V)#2
chord.analyses.point.RelMP.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.point.RelMP.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.point.RelMP.<init>()V#Return(V)#2
chord.analyses.heapacc.RelEV.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.heapacc.RelEV.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.heapacc.RelEV.<init>()V#Return(V)#2
chord.analyses.method.RelStatM.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.method.RelStatM.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.method.RelStatM.<init>()V#Return(V)#2
chord.analyses.inst.RelMputInstFldInst.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.inst.RelMputInstFldInst.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.inst.RelMputInstFldInst.<init>()V#Return(V)#2
chord.analyses.inst.PhiInstAnalysis.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.inst.PhiInstAnalysis.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/JavaAnalysis;,<init>,()V)#1
chord.analyses.inst.PhiInstAnalysis.<init>()V#Return(V)#2
chord.analyses.alias.CICG2DotGraphAnalysis.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.alias.CICG2DotGraphAnalysis.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/JavaAnalysis;,<init>,()V)#1
chord.analyses.alias.CICG2DotGraphAnalysis.<init>()V#Return(V)#2
chord.analyses.basicblock.RelPostDomBB.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.basicblock.RelPostDomBB.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.basicblock.RelPostDomBB.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
chord.analyses.basicblock.RelPostDomBB.<init>()V#New(Ljava/util/HashMap;,0)#3
chord.analyses.basicblock.RelPostDomBB.<init>()V#Dup(1,0)#4
chord.analyses.basicblock.RelPostDomBB.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#5
chord.analyses.basicblock.RelPostDomBB.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Lchord/analyses/basicblock/RelPostDomBB;,pdomMap)#6
chord.analyses.basicblock.RelPostDomBB.<init>()V#Return(V)#7
chord.analyses.method.RelInitM.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.method.RelInitM.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.method.RelInitM.<init>()V#Return(V)#2
chord.analyses.heapacc.RelEF.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.heapacc.RelEF.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.heapacc.RelEF.<init>()V#Return(V)#2
chord.analyses.datarace.RelExcludeInitMethods.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.datarace.RelExcludeInitMethods.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.datarace.RelExcludeInitMethods.<init>()V#Return(V)#2
chord.analyses.escape.dynamic.DynamicThreadEscapeAnalysis.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.escape.dynamic.DynamicThreadEscapeAnalysis.<init>()V#Invoke(SPECIAL,Lchord/analyses/dynamic/DynamicHeapAnalysis;,<init>,()V)#1
chord.analyses.dynamic.DynamicHeapAnalysis.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.dynamic.DynamicHeapAnalysis.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/DynamicAnalysis;,<init>,()V)#1
chord.project.analyses.DynamicAnalysis.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.analyses.DynamicAnalysis.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/BasicDynamicAnalysis;,<init>,()V)#1
chord.project.analyses.BasicDynamicAnalysis.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.analyses.BasicDynamicAnalysis.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/JavaAnalysis;,<init>,()V)#1
chord.project.analyses.BasicDynamicAnalysis.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
chord.project.analyses.BasicDynamicAnalysis.<init>()V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,runIDs)#3
chord.project.analyses.BasicDynamicAnalysis.<init>()V#Constant(Ljava/lang/String;,",|:|;")#4
chord.project.analyses.BasicDynamicAnalysis.<init>()V#Invoke(VIRTUAL,Ljava/lang/String;,split,(Ljava/lang/String;)[Ljava/lang/String;)#5
chord.project.analyses.BasicDynamicAnalysis.<init>()V#Put([Ljava/lang/String;,NONSTATIC,Lchord/project/analyses/BasicDynamicAnalysis;,runIDs)#6
chord.project.analyses.BasicDynamicAnalysis.<init>()V#Return(V)#7
chord.project.analyses.DynamicAnalysis.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
chord.project.analyses.DynamicAnalysis.<init>()V#New(Lgnu/trove/TIntObjectHashMap;,0)#3
chord.project.analyses.DynamicAnalysis.<init>()V#Dup(1,0)#4
chord.project.analyses.DynamicAnalysis.<init>()V#Constant(I,1)#5
chord.project.analyses.DynamicAnalysis.<init>()V#Invoke(SPECIAL,Lgnu/trove/TIntObjectHashMap;,<init>,(I)V)#6
gnu.trove.TIntObjectHashMap.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#0
gnu.trove.TIntObjectHashMap.<init>(I)V#LocalLoad(I,1)#1
gnu.trove.TIntObjectHashMap.<init>(I)V#Invoke(SPECIAL,Lgnu/trove/TIntHash;,<init>,(I)V)#2
gnu.trove.TIntHash.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#0
gnu.trove.TIntHash.<init>(I)V#LocalLoad(I,1)#1
gnu.trove.TIntHash.<init>(I)V#Invoke(SPECIAL,Lgnu/trove/TPrimitiveHash;,<init>,(I)V)#2
gnu.trove.TPrimitiveHash.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#0
gnu.trove.TPrimitiveHash.<init>(I)V#LocalLoad(I,1)#1
gnu.trove.TPrimitiveHash.<init>(I)V#Constant(F,0.5)#2
gnu.trove.TPrimitiveHash.<init>(I)V#Invoke(SPECIAL,Lgnu/trove/TPrimitiveHash;,<init>,(IF)V)#3
gnu.trove.TPrimitiveHash.<init>(IF)V#LocalLoad(Ljava/lang/Object;,0)#0
gnu.trove.TPrimitiveHash.<init>(IF)V#Invoke(SPECIAL,Lgnu/trove/THash;,<init>,()V)#1
gnu.trove.THash.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
gnu.trove.THash.<init>()V#Constant(I,10)#1
gnu.trove.THash.<init>()V#Constant(F,0.5)#2
gnu.trove.THash.<init>()V#Invoke(SPECIAL,Lgnu/trove/THash;,<init>,(IF)V)#3
gnu.trove.THash.<init>(IF)V#LocalLoad(Ljava/lang/Object;,0)#0
gnu.trove.THash.<init>(IF)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
gnu.trove.THash.<init>(IF)V#LocalLoad(Ljava/lang/Object;,0)#2
gnu.trove.THash.<init>(IF)V#Constant(I,0)#3
gnu.trove.THash.<init>(IF)V#Put(Z,NONSTATIC,Lgnu/trove/THash;,_autoCompactTemporaryDisable)#4
gnu.trove.THash.<init>(IF)V#LocalLoad(Ljava/lang/Object;,0)#5
gnu.trove.THash.<init>(IF)V#LocalLoad(F,2)#6
gnu.trove.THash.<init>(IF)V#Put(F,NONSTATIC,Lgnu/trove/THash;,_loadFactor)#7
gnu.trove.THash.<init>(IF)V#LocalLoad(Ljava/lang/Object;,0)#8
gnu.trove.THash.<init>(IF)V#LocalLoad(F,2)#9
gnu.trove.THash.<init>(IF)V#Put(F,NONSTATIC,Lgnu/trove/THash;,_autoCompactionFactor)#10
gnu.trove.THash.<init>(IF)V#LocalLoad(Ljava/lang/Object;,0)#11
gnu.trove.THash.<init>(IF)V#LocalLoad(I,1)#12
gnu.trove.THash.<init>(IF)V#Conversion(I,F)#13
gnu.trove.THash.<init>(IF)V#LocalLoad(F,2)#14
gnu.trove.THash.<init>(IF)V#BinaryOp(F,div)#15
gnu.trove.THash.<init>(IF)V#Conversion(F,D)#16
gnu.trove.THash.<init>(IF)V#Invoke(STATIC,Ljava/lang/Math;,ceil,(D)D)#17
gnu.trove.THash.<init>(IF)V#Conversion(D,I)#18
gnu.trove.THash.<init>(IF)V#Invoke(VIRTUAL,Lgnu/trove/THash;,setUp,(I)I)#19
gnu.trove.TIntObjectHashMap.setUp(I)I#LocalLoad(Ljava/lang/Object;,0)#0
gnu.trove.TIntObjectHashMap.setUp(I)I#LocalLoad(I,1)#1
gnu.trove.TIntObjectHashMap.setUp(I)I#Invoke(SPECIAL,Lgnu/trove/TIntHash;,setUp,(I)I)#2
gnu.trove.TIntHash.setUp(I)I#LocalLoad(Ljava/lang/Object;,0)#0
gnu.trove.TIntHash.setUp(I)I#LocalLoad(I,1)#1
gnu.trove.TIntHash.setUp(I)I#Invoke(SPECIAL,Lgnu/trove/TPrimitiveHash;,setUp,(I)I)#2
gnu.trove.TPrimitiveHash.setUp(I)I#LocalLoad(Ljava/lang/Object;,0)#0
gnu.trove.TPrimitiveHash.setUp(I)I#LocalLoad(I,1)#1
gnu.trove.TPrimitiveHash.setUp(I)I#Invoke(SPECIAL,Lgnu/trove/THash;,setUp,(I)I)#2
gnu.trove.THash.setUp(I)I#LocalLoad(I,1)#0
gnu.trove.THash.setUp(I)I#Invoke(STATIC,Lgnu/trove/PrimeFinder;,nextPrime,(I)I)#1
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,245)#0
gnu.trove.PrimeFinder.<clinit>()V#New([I,1)#1
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#2
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,0)#3
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,2147483647)#4
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#5
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#6
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,1)#7
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,5)#8
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#9
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#10
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,2)#11
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,11)#12
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#13
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#14
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,3)#15
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,23)#16
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#17
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#18
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,4)#19
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,47)#20
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#21
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#22
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,5)#23
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,97)#24
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#25
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#26
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,6)#27
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,197)#28
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#29
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#30
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,7)#31
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,397)#32
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#33
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#34
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,8)#35
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,797)#36
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#37
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#38
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,9)#39
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,1597)#40
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#41
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#42
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,10)#43
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,3203)#44
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#45
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#46
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,11)#47
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,6421)#48
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#49
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#50
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,12)#51
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,12853)#52
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#53
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#54
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,13)#55
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,25717)#56
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#57
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#58
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,14)#59
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,51437)#60
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#61
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#62
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,15)#63
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,102877)#64
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#65
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#66
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,16)#67
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,205759)#68
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#69
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#70
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,17)#71
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,411527)#72
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#73
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#74
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,18)#75
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,823117)#76
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#77
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#78
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,19)#79
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,1646237)#80
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#81
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#82
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,20)#83
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,3292489)#84
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#85
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#86
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,21)#87
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,6584983)#88
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#89
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#90
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,22)#91
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,13169977)#92
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#93
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#94
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,23)#95
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,26339969)#96
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#97
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#98
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,24)#99
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,52679969)#100
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#101
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#102
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,25)#103
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,105359939)#104
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#105
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#106
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,26)#107
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,210719881)#108
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#109
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#110
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,27)#111
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,421439783)#112
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#113
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#114
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,28)#115
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,842879579)#116
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#117
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#118
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,29)#119
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,1685759167)#120
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#121
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#122
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,30)#123
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,433)#124
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#125
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#126
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,31)#127
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,877)#128
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#129
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#130
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,32)#131
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,1759)#132
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#133
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#134
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,33)#135
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,3527)#136
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#137
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#138
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,34)#139
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,7057)#140
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#141
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#142
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,35)#143
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,14143)#144
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#145
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#146
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,36)#147
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,28289)#148
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#149
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#150
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,37)#151
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,56591)#152
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#153
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#154
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,38)#155
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,113189)#156
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#157
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#158
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,39)#159
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,226379)#160
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#161
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#162
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,40)#163
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,452759)#164
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#165
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#166
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,41)#167
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,905551)#168
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#169
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#170
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,42)#171
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,1811107)#172
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#173
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#174
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,43)#175
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,3622219)#176
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#177
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#178
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,44)#179
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,7244441)#180
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#181
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#182
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,45)#183
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,14488931)#184
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#185
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#186
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,46)#187
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,28977863)#188
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#189
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#190
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,47)#191
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,57955739)#192
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#193
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#194
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,48)#195
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,115911563)#196
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#197
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#198
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,49)#199
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,231823147)#200
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#201
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#202
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,50)#203
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,463646329)#204
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#205
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#206
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,51)#207
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,927292699)#208
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#209
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#210
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,52)#211
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,1854585413)#212
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#213
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#214
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,53)#215
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,953)#216
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#217
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#218
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,54)#219
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,1907)#220
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#221
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#222
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,55)#223
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,3821)#224
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#225
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#226
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,56)#227
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,7643)#228
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#229
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#230
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,57)#231
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,15287)#232
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#233
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#234
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,58)#235
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,30577)#236
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#237
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#238
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,59)#239
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,61169)#240
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#241
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#242
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,60)#243
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,122347)#244
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#245
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#246
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,61)#247
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,244703)#248
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#249
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#250
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,62)#251
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,489407)#252
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#253
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#254
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,63)#255
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,978821)#256
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#257
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#258
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,64)#259
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,1957651)#260
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#261
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#262
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,65)#263
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,3915341)#264
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#265
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#266
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,66)#267
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,7830701)#268
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#269
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#270
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,67)#271
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,15661423)#272
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#273
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#274
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,68)#275
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,31322867)#276
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#277
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#278
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,69)#279
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,62645741)#280
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#281
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#282
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,70)#283
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,125291483)#284
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#285
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#286
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,71)#287
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,250582987)#288
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#289
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#290
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,72)#291
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,501165979)#292
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#293
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#294
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,73)#295
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,1002331963)#296
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#297
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#298
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,74)#299
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,2004663929)#300
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#301
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#302
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,75)#303
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,1039)#304
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#305
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#306
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,76)#307
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,2081)#308
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#309
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#310
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,77)#311
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,4177)#312
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#313
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#314
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,78)#315
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,8363)#316
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#317
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#318
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,79)#319
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,16729)#320
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#321
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#322
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,80)#323
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,33461)#324
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#325
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#326
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,81)#327
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,66923)#328
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#329
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#330
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,82)#331
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,133853)#332
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#333
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#334
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,83)#335
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,267713)#336
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#337
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#338
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,84)#339
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,535481)#340
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#341
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#342
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,85)#343
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,1070981)#344
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#345
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#346
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,86)#347
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,2141977)#348
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#349
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#350
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,87)#351
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,4283963)#352
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#353
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#354
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,88)#355
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,8567929)#356
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#357
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#358
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,89)#359
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,17135863)#360
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#361
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#362
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,90)#363
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,34271747)#364
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#365
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#366
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,91)#367
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,68543509)#368
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#369
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#370
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,92)#371
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,137087021)#372
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#373
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#374
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,93)#375
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,274174111)#376
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#377
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#378
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,94)#379
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,548348231)#380
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#381
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#382
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,95)#383
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,1096696463)#384
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#385
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#386
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,96)#387
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,31)#388
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#389
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#390
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,97)#391
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,67)#392
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#393
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#394
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,98)#395
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,137)#396
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#397
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#398
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,99)#399
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,277)#400
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#401
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#402
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,100)#403
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,557)#404
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#405
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#406
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,101)#407
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,1117)#408
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#409
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#410
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,102)#411
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,2237)#412
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#413
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#414
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,103)#415
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,4481)#416
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#417
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#418
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,104)#419
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,8963)#420
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#421
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#422
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,105)#423
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,17929)#424
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#425
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#426
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,106)#427
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,35863)#428
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#429
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#430
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,107)#431
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,71741)#432
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#433
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#434
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,108)#435
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,143483)#436
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#437
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#438
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,109)#439
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,286973)#440
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#441
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#442
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,110)#443
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,573953)#444
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#445
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#446
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,111)#447
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,1147921)#448
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#449
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#450
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,112)#451
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,2295859)#452
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#453
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#454
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,113)#455
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,4591721)#456
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#457
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#458
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,114)#459
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,9183457)#460
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#461
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#462
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,115)#463
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,18366923)#464
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#465
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#466
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,116)#467
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,36733847)#468
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#469
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#470
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,117)#471
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,73467739)#472
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#473
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#474
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,118)#475
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,146935499)#476
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#477
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#478
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,119)#479
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,293871013)#480
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#481
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#482
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,120)#483
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,587742049)#484
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#485
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#486
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,121)#487
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,1175484103)#488
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#489
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#490
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,122)#491
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,599)#492
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#493
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#494
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,123)#495
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,1201)#496
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#497
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#498
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,124)#499
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,2411)#500
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#501
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#502
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,125)#503
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,4831)#504
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#505
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#506
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,126)#507
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,9677)#508
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#509
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#510
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,127)#511
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,19373)#512
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#513
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#514
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,128)#515
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,38747)#516
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#517
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#518
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,129)#519
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,77509)#520
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#521
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#522
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,130)#523
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,155027)#524
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#525
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#526
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,131)#527
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,310081)#528
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#529
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#530
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,132)#531
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,620171)#532
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#533
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#534
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,133)#535
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,1240361)#536
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#537
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#538
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,134)#539
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,2480729)#540
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#541
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#542
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,135)#543
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,4961459)#544
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#545
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#546
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,136)#547
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,9922933)#548
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#549
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#550
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,137)#551
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,19845871)#552
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#553
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#554
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,138)#555
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,39691759)#556
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#557
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#558
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,139)#559
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,79383533)#560
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#561
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#562
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,140)#563
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,158767069)#564
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#565
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#566
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,141)#567
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,317534141)#568
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#569
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#570
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,142)#571
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,635068283)#572
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#573
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#574
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,143)#575
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,1270136683)#576
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#577
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#578
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,144)#579
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,311)#580
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#581
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#582
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,145)#583
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,631)#584
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#585
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#586
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,146)#587
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,1277)#588
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#589
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#590
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,147)#591
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,2557)#592
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#593
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#594
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,148)#595
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,5119)#596
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#597
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#598
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,149)#599
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,10243)#600
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#601
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#602
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,150)#603
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,20507)#604
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#605
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#606
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,151)#607
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,41017)#608
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#609
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#610
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,152)#611
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,82037)#612
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#613
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#614
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,153)#615
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,164089)#616
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#617
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#618
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,154)#619
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,328213)#620
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#621
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#622
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,155)#623
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,656429)#624
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#625
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#626
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,156)#627
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,1312867)#628
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#629
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#630
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,157)#631
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,2625761)#632
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#633
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#634
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,158)#635
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,5251529)#636
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#637
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#638
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,159)#639
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,10503061)#640
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#641
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#642
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,160)#643
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,21006137)#644
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#645
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#646
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,161)#647
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,42012281)#648
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#649
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#650
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,162)#651
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,84024581)#652
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#653
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#654
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,163)#655
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,168049163)#656
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#657
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#658
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,164)#659
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,336098327)#660
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#661
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#662
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,165)#663
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,672196673)#664
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#665
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#666
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,166)#667
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,1344393353)#668
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#669
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#670
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,167)#671
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,3)#672
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#673
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#674
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,168)#675
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,7)#676
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#677
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#678
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,169)#679
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,17)#680
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#681
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#682
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,170)#683
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,37)#684
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#685
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#686
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,171)#687
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,79)#688
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#689
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#690
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,172)#691
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,163)#692
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#693
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#694
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,173)#695
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,331)#696
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#697
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#698
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,174)#699
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,673)#700
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#701
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#702
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,175)#703
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,1361)#704
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#705
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#706
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,176)#707
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,2729)#708
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#709
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#710
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,177)#711
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,5471)#712
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#713
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#714
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,178)#715
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,10949)#716
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#717
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#718
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,179)#719
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,21911)#720
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#721
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#722
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,180)#723
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,43853)#724
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#725
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#726
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,181)#727
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,87719)#728
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#729
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#730
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,182)#731
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,175447)#732
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#733
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#734
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,183)#735
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,350899)#736
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#737
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#738
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,184)#739
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,701819)#740
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#741
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#742
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,185)#743
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,1403641)#744
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#745
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#746
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,186)#747
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,2807303)#748
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#749
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#750
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,187)#751
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,5614657)#752
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#753
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#754
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,188)#755
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,11229331)#756
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#757
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#758
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,189)#759
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,22458671)#760
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#761
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#762
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,190)#763
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,44917381)#764
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#765
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#766
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,191)#767
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,89834777)#768
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#769
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#770
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,192)#771
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,179669557)#772
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#773
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#774
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,193)#775
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,359339171)#776
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#777
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#778
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,194)#779
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,718678369)#780
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#781
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#782
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,195)#783
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,1437356741)#784
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#785
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#786
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,196)#787
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,43)#788
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#789
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#790
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,197)#791
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,89)#792
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#793
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#794
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,198)#795
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,179)#796
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#797
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#798
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,199)#799
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,359)#800
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#801
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#802
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,200)#803
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,719)#804
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#805
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#806
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,201)#807
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,1439)#808
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#809
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#810
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,202)#811
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,2879)#812
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#813
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#814
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,203)#815
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,5779)#816
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#817
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#818
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,204)#819
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,11579)#820
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#821
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#822
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,205)#823
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,23159)#824
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#825
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#826
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,206)#827
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,46327)#828
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#829
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#830
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,207)#831
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,92657)#832
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#833
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#834
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,208)#835
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,185323)#836
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#837
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#838
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,209)#839
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,370661)#840
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#841
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#842
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,210)#843
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,741337)#844
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#845
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#846
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,211)#847
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,1482707)#848
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#849
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#850
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,212)#851
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,2965421)#852
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#853
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#854
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,213)#855
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,5930887)#856
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#857
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#858
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,214)#859
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,11861791)#860
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#861
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#862
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,215)#863
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,23723597)#864
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#865
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#866
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,216)#867
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,47447201)#868
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#869
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#870
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,217)#871
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,94894427)#872
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#873
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#874
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,218)#875
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,189788857)#876
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#877
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#878
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,219)#879
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,379577741)#880
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#881
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#882
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,220)#883
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,759155483)#884
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#885
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#886
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,221)#887
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,1518310967)#888
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#889
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#890
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,222)#891
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,379)#892
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#893
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#894
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,223)#895
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,761)#896
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#897
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#898
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,224)#899
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,1523)#900
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#901
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#902
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,225)#903
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,3049)#904
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#905
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#906
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,226)#907
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,6101)#908
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#909
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#910
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,227)#911
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,12203)#912
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#913
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#914
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,228)#915
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,24407)#916
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#917
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#918
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,229)#919
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,48817)#920
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#921
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#922
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,230)#923
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,97649)#924
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#925
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#926
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,231)#927
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,195311)#928
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#929
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#930
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,232)#931
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,390647)#932
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#933
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#934
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,233)#935
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,781301)#936
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#937
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#938
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,234)#939
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,1562611)#940
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#941
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#942
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,235)#943
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,3125257)#944
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#945
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#946
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,236)#947
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,6250537)#948
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#949
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#950
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,237)#951
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,12501169)#952
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#953
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#954
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,238)#955
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,25002389)#956
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#957
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#958
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,239)#959
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,50004791)#960
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#961
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#962
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,240)#963
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,100009607)#964
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#965
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#966
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,241)#967
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,200019221)#968
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#969
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#970
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,242)#971
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,400038451)#972
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#973
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#974
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,243)#975
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,800076929)#976
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#977
gnu.trove.PrimeFinder.<clinit>()V#Dup(1,0)#978
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,244)#979
gnu.trove.PrimeFinder.<clinit>()V#Constant(I,1600153859)#980
gnu.trove.PrimeFinder.<clinit>()V#ArrayStore(I)#981
gnu.trove.PrimeFinder.<clinit>()V#Put([I,STATIC,Lgnu/trove/PrimeFinder;,primeCapacities)#982
gnu.trove.PrimeFinder.<clinit>()V#Get([I,STATIC,Lgnu/trove/PrimeFinder;,primeCapacities)#983
gnu.trove.PrimeFinder.<clinit>()V#Invoke(STATIC,Ljava/util/Arrays;,sort,([I)V)#984
gnu.trove.PrimeFinder.<clinit>()V#Return(V)#985
gnu.trove.PrimeFinder.nextPrime(I)I#Get([I,STATIC,Lgnu/trove/PrimeFinder;,primeCapacities)#0
gnu.trove.PrimeFinder.nextPrime(I)I#LocalLoad(I,0)#1
gnu.trove.PrimeFinder.nextPrime(I)I#Invoke(STATIC,Ljava/util/Arrays;,binarySearch,([II)I)#2
gnu.trove.PrimeFinder.nextPrime(I)I#LocalStore(I,1)#3
gnu.trove.PrimeFinder.nextPrime(I)I#LocalLoad(I,1)#4
gnu.trove.PrimeFinder.nextPrime(I)I#Constant(I,0)#5
gnu.trove.PrimeFinder.nextPrime(I)I#ConditionalBranch(I,ge,12)#6
gnu.trove.PrimeFinder.nextPrime(I)I#LocalLoad(I,1)#7
gnu.trove.PrimeFinder.nextPrime(I)I#UnaryOp(I,neg)#8
gnu.trove.PrimeFinder.nextPrime(I)I#Constant(I,1)#9
gnu.trove.PrimeFinder.nextPrime(I)I#BinaryOp(I,sub)#10
gnu.trove.PrimeFinder.nextPrime(I)I#LocalStore(I,1)#11
gnu.trove.PrimeFinder.nextPrime(I)I#Get([I,STATIC,Lgnu/trove/PrimeFinder;,primeCapacities)#12
gnu.trove.PrimeFinder.nextPrime(I)I#LocalLoad(I,1)#13
gnu.trove.PrimeFinder.nextPrime(I)I#ArrayLoad(I)#14
gnu.trove.PrimeFinder.nextPrime(I)I#Return(I)#15
gnu.trove.THash.setUp(I)I#LocalStore(I,2)#2
gnu.trove.THash.setUp(I)I#LocalLoad(Ljava/lang/Object;,0)#3
gnu.trove.THash.setUp(I)I#LocalLoad(I,2)#4
gnu.trove.THash.setUp(I)I#Invoke(SPECIAL,Lgnu/trove/THash;,computeMaxSize,(I)V)#5
gnu.trove.THash.computeMaxSize(I)V#LocalLoad(Ljava/lang/Object;,0)#0
gnu.trove.THash.computeMaxSize(I)V#LocalLoad(I,1)#1
gnu.trove.THash.computeMaxSize(I)V#Constant(I,1)#2
gnu.trove.THash.computeMaxSize(I)V#BinaryOp(I,sub)#3
gnu.trove.THash.computeMaxSize(I)V#LocalLoad(I,1)#4
gnu.trove.THash.computeMaxSize(I)V#Conversion(I,F)#5
gnu.trove.THash.computeMaxSize(I)V#LocalLoad(Ljava/lang/Object;,0)#6
gnu.trove.THash.computeMaxSize(I)V#Get(F,NONSTATIC,Lgnu/trove/THash;,_loadFactor)#7
gnu.trove.THash.computeMaxSize(I)V#BinaryOp(F,mul)#8
gnu.trove.THash.computeMaxSize(I)V#Conversion(F,D)#9
gnu.trove.THash.computeMaxSize(I)V#Invoke(STATIC,Ljava/lang/Math;,floor,(D)D)#10
gnu.trove.THash.computeMaxSize(I)V#Conversion(D,I)#11
gnu.trove.THash.computeMaxSize(I)V#Invoke(STATIC,Ljava/lang/Math;,min,(II)I)#12
gnu.trove.THash.computeMaxSize(I)V#Put(I,NONSTATIC,Lgnu/trove/THash;,_maxSize)#13
gnu.trove.THash.computeMaxSize(I)V#LocalLoad(Ljava/lang/Object;,0)#14
gnu.trove.THash.computeMaxSize(I)V#LocalLoad(I,1)#15
gnu.trove.THash.computeMaxSize(I)V#LocalLoad(Ljava/lang/Object;,0)#16
gnu.trove.THash.computeMaxSize(I)V#Get(I,NONSTATIC,Lgnu/trove/THash;,_size)#17
gnu.trove.THash.computeMaxSize(I)V#BinaryOp(I,sub)#18
gnu.trove.THash.computeMaxSize(I)V#Put(I,NONSTATIC,Lgnu/trove/THash;,_free)#19
gnu.trove.THash.computeMaxSize(I)V#Return(V)#20
gnu.trove.THash.setUp(I)I#LocalLoad(Ljava/lang/Object;,0)#6
gnu.trove.THash.setUp(I)I#LocalLoad(I,1)#7
gnu.trove.THash.setUp(I)I#Invoke(SPECIAL,Lgnu/trove/THash;,computeNextAutoCompactionAmount,(I)V)#8
gnu.trove.THash.computeNextAutoCompactionAmount(I)V#LocalLoad(Ljava/lang/Object;,0)#0
gnu.trove.THash.computeNextAutoCompactionAmount(I)V#Get(F,NONSTATIC,Lgnu/trove/THash;,_autoCompactionFactor)#1
gnu.trove.THash.computeNextAutoCompactionAmount(I)V#Constant(F,0.0)#2
gnu.trove.THash.computeNextAutoCompactionAmount(I)V#Comparison(F,cmpl)#3
gnu.trove.THash.computeNextAutoCompactionAmount(I)V#Constant(I,0)#4
gnu.trove.THash.computeNextAutoCompactionAmount(I)V#ConditionalBranch(I,eq,14)#5
gnu.trove.THash.computeNextAutoCompactionAmount(I)V#LocalLoad(Ljava/lang/Object;,0)#6
gnu.trove.THash.computeNextAutoCompactionAmount(I)V#LocalLoad(I,1)#7
gnu.trove.THash.computeNextAutoCompactionAmount(I)V#Conversion(I,F)#8
gnu.trove.THash.computeNextAutoCompactionAmount(I)V#LocalLoad(Ljava/lang/Object;,0)#9
gnu.trove.THash.computeNextAutoCompactionAmount(I)V#Get(F,NONSTATIC,Lgnu/trove/THash;,_autoCompactionFactor)#10
gnu.trove.THash.computeNextAutoCompactionAmount(I)V#BinaryOp(F,mul)#11
gnu.trove.THash.computeNextAutoCompactionAmount(I)V#Invoke(STATIC,Ljava/lang/Math;,round,(F)I)#12
gnu.trove.THash.computeNextAutoCompactionAmount(I)V#Put(I,NONSTATIC,Lgnu/trove/THash;,_autoCompactRemovesRemaining)#13
gnu.trove.THash.computeNextAutoCompactionAmount(I)V#Return(V)#14
gnu.trove.THash.setUp(I)I#LocalLoad(I,2)#9
gnu.trove.THash.setUp(I)I#Return(I)#10
gnu.trove.TPrimitiveHash.setUp(I)I#LocalStore(I,2)#3
gnu.trove.TPrimitiveHash.setUp(I)I#LocalLoad(Ljava/lang/Object;,0)#4
gnu.trove.TPrimitiveHash.setUp(I)I#LocalLoad(I,2)#5
gnu.trove.TPrimitiveHash.setUp(I)I#New([B,1)#6
gnu.trove.TPrimitiveHash.setUp(I)I#Put([B,NONSTATIC,Lgnu/trove/TPrimitiveHash;,_states)#7
gnu.trove.TPrimitiveHash.setUp(I)I#LocalLoad(I,2)#8
gnu.trove.TPrimitiveHash.setUp(I)I#Return(I)#9
gnu.trove.TIntHash.setUp(I)I#LocalStore(I,2)#3
gnu.trove.TIntHash.setUp(I)I#LocalLoad(Ljava/lang/Object;,0)#4
gnu.trove.TIntHash.setUp(I)I#LocalLoad(I,2)#5
gnu.trove.TIntHash.setUp(I)I#New([I,1)#6
gnu.trove.TIntHash.setUp(I)I#Put([I,NONSTATIC,Lgnu/trove/TIntHash;,_set)#7
gnu.trove.TIntHash.setUp(I)I#LocalLoad(I,2)#8
gnu.trove.TIntHash.setUp(I)I#Return(I)#9
gnu.trove.TIntObjectHashMap.setUp(I)I#LocalStore(I,2)#3
gnu.trove.TIntObjectHashMap.setUp(I)I#LocalLoad(Ljava/lang/Object;,0)#4
gnu.trove.TIntObjectHashMap.setUp(I)I#LocalLoad(I,2)#5
gnu.trove.TIntObjectHashMap.setUp(I)I#New([Ljava/lang/Object;,1)#6
gnu.trove.TIntObjectHashMap.setUp(I)I#CheckCast([Ljava/lang/Object;)#7
gnu.trove.TIntObjectHashMap.setUp(I)I#Put([Ljava/lang/Object;,NONSTATIC,Lgnu/trove/TIntObjectHashMap;,_values)#8
gnu.trove.TIntObjectHashMap.setUp(I)I#LocalLoad(I,2)#9
gnu.trove.TIntObjectHashMap.setUp(I)I#Return(I)#10
gnu.trove.THash.<init>(IF)V#Pop(1)#20
gnu.trove.THash.<init>(IF)V#Return(V)#21
gnu.trove.THash.<init>()V#Return(V)#4
gnu.trove.TPrimitiveHash.<init>(IF)V#LocalLoad(Ljava/lang/Object;,0)#2
gnu.trove.TPrimitiveHash.<init>(IF)V#LocalLoad(F,2)#3
gnu.trove.TPrimitiveHash.<init>(IF)V#Put(F,NONSTATIC,Lgnu/trove/TPrimitiveHash;,_loadFactor)#4
gnu.trove.TPrimitiveHash.<init>(IF)V#LocalLoad(Ljava/lang/Object;,0)#5
gnu.trove.TPrimitiveHash.<init>(IF)V#LocalLoad(I,1)#6
gnu.trove.TPrimitiveHash.<init>(IF)V#Conversion(I,F)#7
gnu.trove.TPrimitiveHash.<init>(IF)V#LocalLoad(F,2)#8
gnu.trove.TPrimitiveHash.<init>(IF)V#BinaryOp(F,div)#9
gnu.trove.TPrimitiveHash.<init>(IF)V#Conversion(F,D)#10
gnu.trove.TPrimitiveHash.<init>(IF)V#Invoke(STATIC,Ljava/lang/Math;,ceil,(D)D)#11
gnu.trove.TPrimitiveHash.<init>(IF)V#Conversion(D,I)#12
gnu.trove.TPrimitiveHash.<init>(IF)V#Invoke(VIRTUAL,Lgnu/trove/TPrimitiveHash;,setUp,(I)I)#13
gnu.trove.TPrimitiveHash.<init>(IF)V#Pop(1)#14
gnu.trove.TPrimitiveHash.<init>(IF)V#Return(V)#15
gnu.trove.TPrimitiveHash.<init>(I)V#Return(V)#4
gnu.trove.TIntHash.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#3
gnu.trove.TIntHash.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#4
gnu.trove.TIntHash.<init>(I)V#Put(Lgnu/trove/TIntHashingStrategy;,NONSTATIC,Lgnu/trove/TIntHash;,_hashingStrategy)#5
gnu.trove.TIntHash.<init>(I)V#Return(V)#6
gnu.trove.TIntObjectHashMap.<init>(I)V#Return(V)#3
chord.project.analyses.DynamicAnalysis.<init>()V#Put(Lgnu/trove/TIntObjectHashMap;,NONSTATIC,Lchord/project/analyses/DynamicAnalysis;,stacks)#7
chord.project.analyses.DynamicAnalysis.<init>()V#LocalLoad(Ljava/lang/Object;,0)#8
chord.project.analyses.DynamicAnalysis.<init>()V#New(Lgnu/trove/TIntObjectHashMap;,0)#9
chord.project.analyses.DynamicAnalysis.<init>()V#Dup(1,0)#10
chord.project.analyses.DynamicAnalysis.<init>()V#Constant(I,16)#11
chord.project.analyses.DynamicAnalysis.<init>()V#Invoke(SPECIAL,Lgnu/trove/TIntObjectHashMap;,<init>,(I)V)#12
chord.project.analyses.DynamicAnalysis.<init>()V#Put(Lgnu/trove/TIntObjectHashMap;,NONSTATIC,Lchord/project/analyses/DynamicAnalysis;,loopHead2body)#13
chord.project.analyses.DynamicAnalysis.<init>()V#LocalLoad(Ljava/lang/Object;,0)#14
chord.project.analyses.DynamicAnalysis.<init>()V#New(Lgnu/trove/TIntHashSet;,0)#15
chord.project.analyses.DynamicAnalysis.<init>()V#Dup(1,0)#16
chord.project.analyses.DynamicAnalysis.<init>()V#Invoke(SPECIAL,Lgnu/trove/TIntHashSet;,<init>,()V)#17
gnu.trove.TIntHashSet.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
gnu.trove.TIntHashSet.<init>()V#Invoke(SPECIAL,Lgnu/trove/TIntHash;,<init>,()V)#1
gnu.trove.TIntHash.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
gnu.trove.TIntHash.<init>()V#Invoke(SPECIAL,Lgnu/trove/TPrimitiveHash;,<init>,()V)#1
gnu.trove.TPrimitiveHash.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
gnu.trove.TPrimitiveHash.<init>()V#Invoke(SPECIAL,Lgnu/trove/THash;,<init>,()V)#1
gnu.trove.TPrimitiveHash.<init>()V#Return(V)#2
gnu.trove.TIntHash.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
gnu.trove.TIntHash.<init>()V#LocalLoad(Ljava/lang/Object;,0)#3
gnu.trove.TIntHash.<init>()V#Put(Lgnu/trove/TIntHashingStrategy;,NONSTATIC,Lgnu/trove/TIntHash;,_hashingStrategy)#4
gnu.trove.TIntHash.<init>()V#Return(V)#5
gnu.trove.TIntHashSet.<init>()V#Return(V)#2
chord.project.analyses.DynamicAnalysis.<init>()V#Put(Lgnu/trove/TIntHashSet;,NONSTATIC,Lchord/project/analyses/DynamicAnalysis;,visited4loops)#18
chord.project.analyses.DynamicAnalysis.<init>()V#Return(V)#19
chord.analyses.dynamic.DynamicHeapAnalysis.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
chord.analyses.dynamic.DynamicHeapAnalysis.<init>()V#Constant(Ljava/lang/String;,"chord.dyn.strong.updates")#3
chord.analyses.dynamic.DynamicHeapAnalysis.<init>()V#Constant(Ljava/lang/String;,"true")#4
chord.analyses.dynamic.DynamicHeapAnalysis.<init>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#5
chord.analyses.dynamic.DynamicHeapAnalysis.<init>()V#Constant(Ljava/lang/String;,"true")#6
chord.analyses.dynamic.DynamicHeapAnalysis.<init>()V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#7
chord.analyses.dynamic.DynamicHeapAnalysis.<init>()V#Put(Z,NONSTATIC,Lchord/analyses/dynamic/DynamicHeapAnalysis;,doStrongUpdates)#8
chord.analyses.dynamic.DynamicHeapAnalysis.<init>()V#LocalLoad(Ljava/lang/Object;,0)#9
chord.analyses.dynamic.DynamicHeapAnalysis.<init>()V#Constant(Ljava/lang/String;,"chord.dyn.smash.aryelems")#10
chord.analyses.dynamic.DynamicHeapAnalysis.<init>()V#Constant(Ljava/lang/String;,"false")#11
chord.analyses.dynamic.DynamicHeapAnalysis.<init>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#12
chord.analyses.dynamic.DynamicHeapAnalysis.<init>()V#Constant(Ljava/lang/String;,"true")#13
chord.analyses.dynamic.DynamicHeapAnalysis.<init>()V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#14
chord.analyses.dynamic.DynamicHeapAnalysis.<init>()V#Put(Z,NONSTATIC,Lchord/analyses/dynamic/DynamicHeapAnalysis;,smashArrayElems)#15
chord.analyses.dynamic.DynamicHeapAnalysis.<init>()V#Return(V)#16
chord.analyses.escape.dynamic.DynamicThreadEscapeAnalysis.<init>()V#Return(V)#2
chord.analyses.heapacc.RelAryElemE.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.heapacc.RelAryElemE.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.heapacc.RelAryElemE.<init>()V#Return(V)#2
chord.analyses.thread.RelExcludeThreadStartI.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.thread.RelExcludeThreadStartI.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.thread.RelExcludeThreadStartI.<init>()V#Return(V)#2
chord.analyses.heapacc.DomE.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.heapacc.DomE.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramDom;,<init>,()V)#1
chord.project.analyses.ProgramDom.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.analyses.ProgramDom.<init>()V#Invoke(SPECIAL,Lchord/bddbddb/Dom;,<init>,()V)#1
chord.bddbddb.Dom.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.bddbddb.Dom.<init>()V#Invoke(SPECIAL,Lchord/util/IndexMap;,<init>,()V)#1
chord.util.IndexMap.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.IndexMap.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
chord.util.IndexMap.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
chord.util.IndexMap.<init>()V#New(Ljava/util/ArrayList;,0)#3
chord.util.IndexMap.<init>()V#Dup(1,0)#4
chord.util.IndexMap.<init>()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#5
chord.util.IndexMap.<init>()V#Put(Ljava/util/List;,NONSTATIC,Lchord/util/IndexMap;,list)#6
chord.util.IndexMap.<init>()V#LocalLoad(Ljava/lang/Object;,0)#7
chord.util.IndexMap.<init>()V#New(Ljava/util/HashMap;,0)#8
chord.util.IndexMap.<init>()V#Dup(1,0)#9
chord.util.IndexMap.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#10
chord.util.IndexMap.<init>()V#Put(Ljava/util/HashMap;,NONSTATIC,Lchord/util/IndexMap;,hmap)#11
chord.util.IndexMap.<init>()V#Return(V)#12
chord.bddbddb.Dom.<init>()V#Return(V)#2
chord.project.analyses.ProgramDom.<init>()V#Return(V)#2
chord.analyses.heapacc.DomE.<init>()V#Return(V)#2
chord.bddbddb.Dom.setName(Ljava/lang/String;)V#Get(Z,STATIC,Lchord/bddbddb/Dom;,$assertionsDisabled)#0
chord.bddbddb.Dom.setName(Ljava/lang/String;)V#Constant(I,0)#1
chord.bddbddb.Dom.setName(Ljava/lang/String;)V#ConditionalBranch(I,ne,10)#2
chord.bddbddb.Dom.setName(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#3
chord.bddbddb.Dom.setName(Ljava/lang/String;)V#Constant(L;,null)#4
chord.bddbddb.Dom.setName(Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,ne,10)#5
chord.bddbddb.Dom.setName(Ljava/lang/String;)V#Get(Z,STATIC,Lchord/bddbddb/Dom;,$assertionsDisabled)#10
chord.bddbddb.Dom.setName(Ljava/lang/String;)V#Constant(I,0)#11
chord.bddbddb.Dom.setName(Ljava/lang/String;)V#ConditionalBranch(I,ne,21)#12
chord.bddbddb.Dom.setName(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#13
chord.bddbddb.Dom.setName(Ljava/lang/String;)V#Get(Ljava/lang/String;,NONSTATIC,Lchord/bddbddb/Dom;,name)#14
chord.bddbddb.Dom.setName(Ljava/lang/String;)V#Constant(L;,null)#15
chord.bddbddb.Dom.setName(Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,eq,21)#16
chord.bddbddb.Dom.setName(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#21
chord.bddbddb.Dom.setName(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#22
chord.bddbddb.Dom.setName(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lchord/bddbddb/Dom;,name)#23
chord.bddbddb.Dom.setName(Ljava/lang/String;)V#Return(V)#24
chord.analyses.point.RelMPhead.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.point.RelMPhead.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.point.RelMPhead.<init>()V#Return(V)#2
chord.analyses.field.DomF.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.field.DomF.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramDom;,<init>,()V)#1
chord.analyses.field.DomF.<init>()V#Return(V)#2
chord.analyses.basicblock.DomB.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.basicblock.DomB.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramDom;,<init>,()V)#1
chord.analyses.basicblock.DomB.<init>()V#Return(V)#2
chord.analyses.lock.DomL.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.lock.DomL.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramDom;,<init>,()V)#1
chord.analyses.lock.DomL.<init>()V#Return(V)#2
chord.analyses.method.DomM.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.method.DomM.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramDom;,<init>,()V)#1
chord.analyses.method.DomM.<init>()V#Return(V)#2
chord.analyses.heapacc.RelInstFldE.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.heapacc.RelInstFldE.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.heapacc.RelInstFldE.<init>()V#Return(V)#2
chord.analyses.inst.RelMclsValAsgnInst.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.inst.RelMclsValAsgnInst.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.inst.RelMclsValAsgnInst.<init>()V#Return(V)#2
chord.analyses.alloc.DomH.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.alloc.DomH.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramDom;,<init>,()V)#1
chord.analyses.alloc.DomH.<init>()V#Return(V)#2
chord.analyses.reflect.RelClsTH.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.reflect.RelClsTH.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.reflect.RelClsTH.<init>()V#Return(V)#2
chord.analyses.invk.DomI.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.invk.DomI.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramDom;,<init>,()V)#1
chord.analyses.invk.DomI.<init>()V#Return(V)#2
chord.analyses.alias.CSCGAnalysis.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.alias.CSCGAnalysis.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/JavaAnalysis;,<init>,()V)#1
chord.analyses.alias.CSCGAnalysis.<init>()V#Return(V)#2
chord.analyses.argret.DomK.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.argret.DomK.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramDom;,<init>,()V)#1
chord.analyses.argret.DomK.<init>()V#Return(V)#2
chord.analyses.inst.RelPgetStatFldInst.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.inst.RelPgetStatFldInst.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.inst.RelPgetStatFldInst.<init>()V#Return(V)#2
chord.analyses.type.DomT.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.type.DomT.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramDom;,<init>,()V)#1
chord.analyses.type.DomT.<init>()V#Return(V)#2
chord.analyses.reflect.ConNewInstAnalysis.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.reflect.ConNewInstAnalysis.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/JavaAnalysis;,<init>,()V)#1
chord.analyses.reflect.ConNewInstAnalysis.<init>()V#Return(V)#2
chord.analyses.field.RelFT.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.field.RelFT.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.field.RelFT.<init>()V#Return(V)#2
chord.analyses.var.DomV.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.var.DomV.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramDom;,<init>,()V)#1
chord.analyses.var.DomV.<init>()V#Return(V)#2
chord.analyses.point.DomP.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.point.DomP.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramDom;,<init>,()V)#1
chord.analyses.point.DomP.<init>()V#Return(V)#2
chord.analyses.lock.DomR.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.lock.DomR.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramDom;,<init>,()V)#1
chord.analyses.lock.DomR.<init>()V#Return(V)#2
chord.analyses.argret.DomZ.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.argret.DomZ.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramDom;,<init>,()V)#1
chord.analyses.argret.DomZ.<init>()V#Return(V)#2
chord.analyses.type.RelCheckExcludedT.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.type.RelCheckExcludedT.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.type.RelCheckExcludedT.<init>()V#Return(V)#2
chord.analyses.method.RelScopeExcludedM.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.method.RelScopeExcludedM.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.method.RelScopeExcludedM.<init>()V#Return(V)#2
chord.analyses.argret.RelIinvkArg.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.argret.RelIinvkArg.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.argret.RelIinvkArg.<init>()V#Return(V)#2
chord.analyses.point.RelMPtail.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.point.RelMPtail.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.point.RelMPtail.<init>()V#Return(V)#2
chord.analyses.lock.RelPL.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.lock.RelPL.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.lock.RelPL.<init>()V#Return(V)#2
chord.analyses.type.RelScopeExcludedT.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.type.RelScopeExcludedT.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.type.RelScopeExcludedT.<init>()V#Return(V)#2
chord.analyses.inst.RelPobjVarCastInst.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.inst.RelPobjVarCastInst.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.inst.RelPobjVarCastInst.<init>()V#Return(V)#2
chord.analyses.invk.RelPI.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.invk.RelPI.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.invk.RelPI.<init>()V#Return(V)#2
chord.analyses.inst.RelMputStatFldInst.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.inst.RelMputStatFldInst.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.inst.RelMputStatFldInst.<init>()V#Return(V)#2
chord.analyses.heapacc.RelPE.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.heapacc.RelPE.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.heapacc.RelPE.<init>()V#Return(V)#2
chord.analyses.invk.RelStatIM.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.invk.RelStatIM.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.invk.RelStatIM.<init>()V#Return(V)#2
chord.analyses.type.RelInterfaceT.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.type.RelInterfaceT.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.type.RelInterfaceT.<init>()V#Return(V)#2
chord.analyses.field.RelInstF.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.field.RelInstF.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.field.RelInstF.<init>()V#Return(V)#2
chord.analyses.invk.RelInstI.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.invk.RelInstI.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.invk.RelInstI.<init>()V#Return(V)#2
chord.analyses.method.RelInstM.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.method.RelInstM.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.method.RelInstM.<init>()V#Return(V)#2
chord.analyses.basicblock.RelSuccBB.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.basicblock.RelSuccBB.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.basicblock.RelSuccBB.<init>()V#Return(V)#2
chord.analyses.reflect.RelAryNewInstIH.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.reflect.RelAryNewInstIH.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.reflect.RelAryNewInstIH.<init>()V#Return(V)#2
chord.analyses.inst.RelMgetStatFldInst.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.inst.RelMgetStatFldInst.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.inst.RelMgetStatFldInst.<init>()V#Return(V)#2
chord.analyses.inst.RelPobjValAsgnInst.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.inst.RelPobjValAsgnInst.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.inst.RelPobjValAsgnInst.<init>()V#Return(V)#2
chord.analyses.type.RelCHA.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.type.RelCHA.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.type.RelCHA.<init>()V#Return(V)#2
chord.analyses.alloc.RelHT.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.alloc.RelHT.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.alloc.RelHT.<init>()V#Return(V)#2
chord.analyses.inst.RelPgetInstFldInst.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.inst.RelPgetInstFldInst.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.inst.RelPgetInstFldInst.<init>()V#Return(V)#2
chord.analyses.inst.RelPputInstFldInst.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.inst.RelPputInstFldInst.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.inst.RelPputInstFldInst.<init>()V#Return(V)#2
chord.analyses.lock.RelSyncLM.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.lock.RelSyncLM.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.lock.RelSyncLM.<init>()V#Return(V)#2
chord.analyses.inst.RelMobjVarAsgnInst.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.inst.RelMobjVarAsgnInst.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.inst.RelMobjVarAsgnInst.<init>()V#Return(V)#2
chord.analyses.argret.RelIinvkArg0.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.argret.RelIinvkArg0.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.argret.RelIinvkArg0.<init>()V#Return(V)#2
chord.analyses.inst.RelPobjVarMoveInst.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.inst.RelPobjVarMoveInst.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.inst.RelPobjVarMoveInst.<init>()V#Return(V)#2
chord.analyses.lock.RelSyncLV.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.lock.RelSyncLV.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.lock.RelSyncLV.<init>()V#Return(V)#2
chord.analyses.thread.RelThreadStartI.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.thread.RelThreadStartI.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.thread.RelThreadStartI.<init>()V#Return(V)#2
chord.analyses.heapacc.RelWriteE.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.heapacc.RelWriteE.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.heapacc.RelWriteE.<init>()V#Return(V)#2
chord.analyses.reflect.RelClsForNameIT.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.reflect.RelClsForNameIT.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.reflect.RelClsForNameIT.<init>()V#Return(V)#2
chord.analyses.thread.ThreadAnalysis.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.thread.ThreadAnalysis.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/JavaAnalysis;,<init>,()V)#1
chord.analyses.thread.ThreadAnalysis.<init>()V#Return(V)#2
chord.analyses.point.RelPP.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.point.RelPP.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.point.RelPP.<init>()V#Return(V)#2
chord.analyses.alias.CtxtsAnalysis.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.alias.CtxtsAnalysis.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/JavaAnalysis;,<init>,()V)#1
chord.analyses.alias.CtxtsAnalysis.<init>()V#Return(V)#2
chord.analyses.argret.RelMmethArg.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.argret.RelMmethArg.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.argret.RelMmethArg.<init>()V#Return(V)#2
chord.analyses.invk.RelVirtIM.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.invk.RelVirtIM.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.invk.RelVirtIM.<init>()V#Return(V)#2
chord.analyses.alias.CICGAnalysis.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.alias.CICGAnalysis.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/JavaAnalysis;,<init>,()V)#1
chord.analyses.alias.CICGAnalysis.<init>()V#Return(V)#2
chord.analyses.heapacc.RelStatFldE.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.heapacc.RelStatFldE.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.heapacc.RelStatFldE.<init>()V#Return(V)#2
chord.analyses.type.RelSub.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.type.RelSub.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.type.RelSub.<init>()V#Return(V)#2
chord.analyses.argret.RelIinvkRet.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.argret.RelIinvkRet.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.argret.RelIinvkRet.<init>()V#Return(V)#2
chord.analyses.thread.ThrSenCICGAnalysis.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.thread.ThrSenCICGAnalysis.<init>()V#Invoke(SPECIAL,Lchord/analyses/alias/CICGAnalysis;,<init>,()V)#1
chord.analyses.thread.ThrSenCICGAnalysis.<init>()V#Return(V)#2
chord.analyses.alias.CIPAAnalysis.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.alias.CIPAAnalysis.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/JavaAnalysis;,<init>,()V)#1
chord.analyses.alias.CIPAAnalysis.<init>()V#Return(V)#2
chord.analyses.method.RelTM.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.method.RelTM.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.method.RelTM.<init>()V#Return(V)#2
chord.analyses.inst.RelMgetInstFldInst.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.inst.RelMgetInstFldInst.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.inst.RelMgetInstFldInst.<init>()V#Return(V)#2
chord.analyses.reflect.ObjNewInstAnalysis.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.reflect.ObjNewInstAnalysis.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/JavaAnalysis;,<init>,()V)#1
chord.analyses.reflect.ObjNewInstAnalysis.<init>()V#Return(V)#2
chord.analyses.invk.RelSpecIM.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.invk.RelSpecIM.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.invk.RelSpecIM.<init>()V#Return(V)#2
chord.analyses.type.RelClassT.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.type.RelClassT.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.type.RelClassT.<init>()V#Return(V)#2
chord.analyses.method.RelClinitTM.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.method.RelClinitTM.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.method.RelClinitTM.<init>()V#Return(V)#2
chord.analyses.inst.RelMgetClassInvkInst.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.inst.RelMgetClassInvkInst.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.inst.RelMgetClassInvkInst.<init>()V#Return(V)#2
chord.analyses.inst.RelPputStatFldInst.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.inst.RelPputStatFldInst.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.inst.RelPputStatFldInst.<init>()V#Return(V)#2
chord.analyses.datarace.RelExcludeSameThread.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.datarace.RelExcludeSameThread.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.datarace.RelExcludeSameThread.<init>()V#Return(V)#2
chord.analyses.thread.RelThreadAllocI.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.thread.RelThreadAllocI.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.thread.RelThreadAllocI.<init>()V#Return(V)#2
chord.analyses.argret.RelMmethRet.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.argret.RelMmethRet.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.argret.RelMmethRet.<init>()V#Return(V)#2
chord.analyses.method.RelExtraEntryPoints.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.method.RelExtraEntryPoints.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramRel;,<init>,()V)#1
chord.analyses.method.RelExtraEntryPoints.<init>()V#Return(V)#2
chord.analyses.alias.CSPAAnalysis.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.alias.CSPAAnalysis.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/JavaAnalysis;,<init>,()V)#1
chord.analyses.alias.CSPAAnalysis.<init>()V#Return(V)#2
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,2)#77
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Invoke(INTERFACE,Ljava/util/Map;,entrySet,()Ljava/util/Set;)#78
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#79
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalStore(Ljava/lang/Object;,5)#80
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Goto(100)#81
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,5)#100
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#101
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Constant(I,0)#102
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#ConditionalBranch(I,ne,82)#103
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,5)#82
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#83
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#CheckCast(Ljava/util/Map$Entry;)#84
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalStore(Ljava/lang/Object;,4)#85
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,4)#86
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Invoke(INTERFACE,Ljava/util/Map$Entry;,getKey,()Ljava/lang/Object;)#87
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#CheckCast(Ljava/lang/String;)#88
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalStore(Ljava/lang/Object;,6)#89
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,4)#90
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Invoke(INTERFACE,Ljava/util/Map$Entry;,getValue,()Ljava/lang/Object;)#91
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#CheckCast(Lchord/project/analyses/DlogAnalysis;)#92
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalStore(Ljava/lang/Object;,7)#93
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,0)#94
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ClassicProject;,nameToTaskMap)#95
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,6)#96
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,7)#97
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#98
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Pop(1)#99
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#LocalLoad(I,3)#104
chord.project.ClassicProject.buildNameToTaskMap(Ljava/util/Map;Ljava/util/Map;)Z#Return(I)#105
chord.project.ClassicProject.build()V#Constant(I,0)#25
chord.project.ClassicProject.build()V#ConditionalBranch(I,ne,29)#26
chord.project.ClassicProject.build()V#LocalLoad(Ljava/lang/Object;,1)#29
chord.project.ClassicProject.build()V#Invoke(VIRTUAL,Lchord/project/TaskParser;,getNameToTrgtInfosMap,()Ljava/util/Map;)#30
chord.project.TaskParser.getNameToTrgtInfosMap()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.TaskParser.getNameToTrgtInfosMap()Ljava/util/Map;#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/TaskParser;,nameToTrgtInfosMap)#1
chord.project.TaskParser.getNameToTrgtInfosMap()Ljava/util/Map;#Return(Ljava/lang/Object;)#2
chord.project.ClassicProject.build()V#LocalStore(Ljava/lang/Object;,4)#31
chord.project.ClassicProject.build()V#New(Lchord/project/TrgtParser;,0)#32
chord.project.ClassicProject.build()V#Dup(1,0)#33
chord.project.ClassicProject.build()V#LocalLoad(Ljava/lang/Object;,4)#34
chord.project.ClassicProject.build()V#Invoke(SPECIAL,Lchord/project/TrgtParser;,<init>,(Ljava/util/Map;)V)#35
chord.project.TrgtParser.<init>(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.TrgtParser.<init>(Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
chord.project.TrgtParser.<init>(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#2
chord.project.TrgtParser.<init>(Ljava/util/Map;)V#New(Ljava/util/HashMap;,0)#3
chord.project.TrgtParser.<init>(Ljava/util/Map;)V#Dup(1,0)#4
chord.project.TrgtParser.<init>(Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#5
chord.project.TrgtParser.<init>(Ljava/util/Map;)V#Put(Ljava/util/Map;,NONSTATIC,Lchord/project/TrgtParser;,nameToTrgtTypeMap)#6
chord.project.TrgtParser.<init>(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#7
chord.project.TrgtParser.<init>(Ljava/util/Map;)V#New(Ljava/util/HashMap;,0)#8
chord.project.TrgtParser.<init>(Ljava/util/Map;)V#Dup(1,0)#9
chord.project.TrgtParser.<init>(Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#10
chord.project.TrgtParser.<init>(Ljava/util/Map;)V#Put(Ljava/util/Map;,NONSTATIC,Lchord/project/TrgtParser;,nameToTrgtSignMap)#11
chord.project.TrgtParser.<init>(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#12
chord.project.TrgtParser.<init>(Ljava/util/Map;)V#Constant(I,1)#13
chord.project.TrgtParser.<init>(Ljava/util/Map;)V#Put(Z,NONSTATIC,Lchord/project/TrgtParser;,hasNoErrors)#14
chord.project.TrgtParser.<init>(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#15
chord.project.TrgtParser.<init>(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#16
chord.project.TrgtParser.<init>(Ljava/util/Map;)V#Put(Ljava/util/Map;,NONSTATIC,Lchord/project/TrgtParser;,nameToTrgtInfosMap)#17
chord.project.TrgtParser.<init>(Ljava/util/Map;)V#Return(V)#18
chord.project.ClassicProject.build()V#LocalStore(Ljava/lang/Object;,5)#36
chord.project.ClassicProject.build()V#LocalLoad(Ljava/lang/Object;,5)#37
chord.project.ClassicProject.build()V#Invoke(VIRTUAL,Lchord/project/TrgtParser;,run,()Z)#38
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.TrgtParser.run()Z#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/TrgtParser;,nameToTrgtInfosMap)#1
chord.project.TrgtParser.run()Z#Invoke(INTERFACE,Ljava/util/Map;,entrySet,()Ljava/util/Set;)#2
chord.project.TrgtParser.run()Z#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#3
chord.project.TrgtParser.run()Z#LocalStore(Ljava/lang/Object;,2)#4
chord.project.TrgtParser.run()Z#Goto(231)#5
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,2)#231
chord.project.TrgtParser.run()Z#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#232
chord.project.TrgtParser.run()Z#Constant(I,0)#233
chord.project.TrgtParser.run()Z#ConditionalBranch(I,ne,6)#234
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,2)#6
chord.project.TrgtParser.run()Z#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#7
chord.project.TrgtParser.run()Z#CheckCast(Ljava/util/Map$Entry;)#8
chord.project.TrgtParser.run()Z#LocalStore(Ljava/lang/Object;,1)#9
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,1)#10
chord.project.TrgtParser.run()Z#Invoke(INTERFACE,Ljava/util/Map$Entry;,getKey,()Ljava/lang/Object;)#11
chord.project.TrgtParser.run()Z#CheckCast(Ljava/lang/String;)#12
chord.project.TrgtParser.run()Z#LocalStore(Ljava/lang/Object;,3)#13
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,1)#14
chord.project.TrgtParser.run()Z#Invoke(INTERFACE,Ljava/util/Map$Entry;,getValue,()Ljava/lang/Object;)#15
chord.project.TrgtParser.run()Z#CheckCast(Ljava/util/Set;)#16
chord.project.TrgtParser.run()Z#LocalStore(Ljava/lang/Object;,4)#17
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,4)#18
chord.project.TrgtParser.run()Z#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#19
chord.project.TrgtParser.run()Z#LocalStore(Ljava/lang/Object;,5)#20
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,5)#21
chord.project.TrgtParser.run()Z#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#22
chord.project.TrgtParser.run()Z#CheckCast(Lchord/project/TrgtInfo;)#23
chord.project.TrgtParser.run()Z#LocalStore(Ljava/lang/Object;,6)#24
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,6)#25
chord.project.TrgtParser.run()Z#Get(Ljava/lang/Class;,NONSTATIC,Lchord/project/TrgtInfo;,type)#26
chord.project.TrgtParser.run()Z#LocalStore(Ljava/lang/Object;,7)#27
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,6)#28
chord.project.TrgtParser.run()Z#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/TrgtInfo;,location)#29
chord.project.TrgtParser.run()Z#LocalStore(Ljava/lang/Object;,8)#30
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,6)#31
chord.project.TrgtParser.run()Z#Get(Lchord/bddbddb/RelSign;,NONSTATIC,Lchord/project/TrgtInfo;,sign)#32
chord.project.TrgtParser.run()Z#Constant(L;,null)#33
chord.project.TrgtParser.run()Z#ConditionalBranch(Ljava/lang/Object;,eq,46)#34
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,6)#35
chord.project.TrgtParser.run()Z#Get(Lchord/bddbddb/RelSign;,NONSTATIC,Lchord/project/TrgtInfo;,sign)#36
chord.project.TrgtParser.run()Z#Get(Ljava/lang/Object;,NONSTATIC,Lchord/bddbddb/RelSign;,val0)#37
chord.project.TrgtParser.run()Z#CheckCast([Ljava/lang/String;)#38
chord.project.TrgtParser.run()Z#LocalStore(Ljava/lang/Object;,9)#39
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,6)#40
chord.project.TrgtParser.run()Z#Get(Lchord/bddbddb/RelSign;,NONSTATIC,Lchord/project/TrgtInfo;,sign)#41
chord.project.TrgtParser.run()Z#Get(Ljava/lang/Object;,NONSTATIC,Lchord/bddbddb/RelSign;,val1)#42
chord.project.TrgtParser.run()Z#CheckCast(Ljava/lang/String;)#43
chord.project.TrgtParser.run()Z#LocalStore(Ljava/lang/Object;,10)#44
chord.project.TrgtParser.run()Z#Goto(51)#45
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,6)#51
chord.project.TrgtParser.run()Z#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/TrgtInfo;,location)#52
chord.project.TrgtParser.run()Z#LocalStore(Ljava/lang/Object;,11)#53
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,6)#54
chord.project.TrgtParser.run()Z#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/TrgtInfo;,location)#55
chord.project.TrgtParser.run()Z#LocalStore(Ljava/lang/Object;,12)#56
chord.project.TrgtParser.run()Z#Constant(I,0)#57
chord.project.TrgtParser.run()Z#LocalStore(I,13)#58
chord.project.TrgtParser.run()Z#Goto(174)#59
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,5)#174
chord.project.TrgtParser.run()Z#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#175
chord.project.TrgtParser.run()Z#Constant(I,0)#176
chord.project.TrgtParser.run()Z#ConditionalBranch(I,ne,60)#177
chord.project.TrgtParser.run()Z#LocalLoad(I,13)#178
chord.project.TrgtParser.run()Z#Constant(I,0)#179
chord.project.TrgtParser.run()Z#ConditionalBranch(I,eq,182)#180
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,7)#182
chord.project.TrgtParser.run()Z#Constant(L;,null)#183
chord.project.TrgtParser.run()Z#ConditionalBranch(Ljava/lang/Object;,ne,189)#184
chord.project.TrgtParser.run()Z#Constant(L;,null)#189
chord.project.TrgtParser.run()Z#LocalStore(Ljava/lang/Object;,14)#190
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,7)#191
chord.project.TrgtParser.run()Z#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@3ad3958b)#192
chord.project.TrgtParser.run()Z#Invoke(STATIC,Lchord/util/Utils;,isSubclass,(Ljava/lang/Class;Ljava/lang/Class;)Z)#193
chord.project.TrgtParser.run()Z#Constant(I,0)#194
chord.project.TrgtParser.run()Z#ConditionalBranch(I,eq,216)#195
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,9)#196
chord.project.TrgtParser.run()Z#Constant(L;,null)#197
chord.project.TrgtParser.run()Z#ConditionalBranch(Ljava/lang/Object;,ne,203)#198
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,10)#203
chord.project.TrgtParser.run()Z#Constant(L;,null)#204
chord.project.TrgtParser.run()Z#ConditionalBranch(Ljava/lang/Object;,ne,210)#205
chord.project.TrgtParser.run()Z#New(Lchord/bddbddb/RelSign;,0)#210
chord.project.TrgtParser.run()Z#Dup(1,0)#211
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,9)#212
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,10)#213
chord.project.TrgtParser.run()Z#Invoke(SPECIAL,Lchord/bddbddb/RelSign;,<init>,([Ljava/lang/String;Ljava/lang/String;)V)#214
chord.project.TrgtParser.run()Z#LocalStore(Ljava/lang/Object;,14)#215
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,0)#216
chord.project.TrgtParser.run()Z#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/TrgtParser;,nameToTrgtTypeMap)#217
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,3)#218
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,7)#219
chord.project.TrgtParser.run()Z#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#220
chord.project.TrgtParser.run()Z#Pop(1)#221
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,14)#222
chord.project.TrgtParser.run()Z#Constant(L;,null)#223
chord.project.TrgtParser.run()Z#ConditionalBranch(Ljava/lang/Object;,eq,231)#224
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,0)#225
chord.project.TrgtParser.run()Z#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/TrgtParser;,nameToTrgtSignMap)#226
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,3)#227
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,14)#228
chord.project.TrgtParser.run()Z#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#229
chord.project.TrgtParser.run()Z#Pop(1)#230
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,5)#60
chord.project.TrgtParser.run()Z#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#61
chord.project.TrgtParser.run()Z#CheckCast(Lchord/project/TrgtInfo;)#62
chord.project.TrgtParser.run()Z#LocalStore(Ljava/lang/Object;,14)#63
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,14)#64
chord.project.TrgtParser.run()Z#Get(Ljava/lang/Class;,NONSTATIC,Lchord/project/TrgtInfo;,type)#65
chord.project.TrgtParser.run()Z#LocalStore(Ljava/lang/Object;,15)#66
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,15)#67
chord.project.TrgtParser.run()Z#Constant(L;,null)#68
chord.project.TrgtParser.run()Z#ConditionalBranch(Ljava/lang/Object;,eq,108)#69
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,7)#70
chord.project.TrgtParser.run()Z#Constant(L;,null)#71
chord.project.TrgtParser.run()Z#ConditionalBranch(Ljava/lang/Object;,ne,79)#72
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,15)#79
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,7)#80
chord.project.TrgtParser.run()Z#Invoke(STATIC,Lchord/util/Utils;,isSubclass,(Ljava/lang/Class;Ljava/lang/Class;)Z)#81
chord.project.TrgtParser.run()Z#Constant(I,0)#82
chord.project.TrgtParser.run()Z#ConditionalBranch(I,eq,90)#83
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,7)#90
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,15)#91
chord.project.TrgtParser.run()Z#Invoke(STATIC,Lchord/util/Utils;,isSubclass,(Ljava/lang/Class;Ljava/lang/Class;)Z)#92
chord.project.TrgtParser.run()Z#Constant(I,0)#93
chord.project.TrgtParser.run()Z#ConditionalBranch(I,ne,108)#94
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,14)#108
chord.project.TrgtParser.run()Z#Get(Lchord/bddbddb/RelSign;,NONSTATIC,Lchord/project/TrgtInfo;,sign)#109
chord.project.TrgtParser.run()Z#LocalStore(Ljava/lang/Object;,16)#110
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,16)#111
chord.project.TrgtParser.run()Z#Constant(L;,null)#112
chord.project.TrgtParser.run()Z#ConditionalBranch(Ljava/lang/Object;,eq,174)#113
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,16)#114
chord.project.TrgtParser.run()Z#Get(Ljava/lang/Object;,NONSTATIC,Lchord/bddbddb/RelSign;,val0)#115
chord.project.TrgtParser.run()Z#CheckCast([Ljava/lang/String;)#116
chord.project.TrgtParser.run()Z#LocalStore(Ljava/lang/Object;,17)#117
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,9)#118
chord.project.TrgtParser.run()Z#Constant(L;,null)#119
chord.project.TrgtParser.run()Z#ConditionalBranch(Ljava/lang/Object;,ne,127)#120
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,9)#127
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,17)#128
chord.project.TrgtParser.run()Z#Invoke(STATIC,Ljava/util/Arrays;,equals,([Ljava/lang/Object;[Ljava/lang/Object;)Z)#129
chord.project.TrgtParser.run()Z#Constant(I,0)#130
chord.project.TrgtParser.run()Z#ConditionalBranch(I,ne,145)#131
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,16)#145
chord.project.TrgtParser.run()Z#Get(Ljava/lang/Object;,NONSTATIC,Lchord/bddbddb/RelSign;,val1)#146
chord.project.TrgtParser.run()Z#CheckCast(Ljava/lang/String;)#147
chord.project.TrgtParser.run()Z#LocalStore(Ljava/lang/Object;,18)#148
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,18)#149
chord.project.TrgtParser.run()Z#Constant(L;,null)#150
chord.project.TrgtParser.run()Z#ConditionalBranch(Ljava/lang/Object;,eq,174)#151
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,10)#152
chord.project.TrgtParser.run()Z#Constant(L;,null)#153
chord.project.TrgtParser.run()Z#ConditionalBranch(Ljava/lang/Object;,ne,161)#154
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,10)#161
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,18)#162
chord.project.TrgtParser.run()Z#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#163
chord.project.TrgtParser.run()Z#Constant(I,0)#164
chord.project.TrgtParser.run()Z#ConditionalBranch(I,ne,174)#165
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,15)#84
chord.project.TrgtParser.run()Z#LocalStore(Ljava/lang/Object;,7)#85
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,14)#86
chord.project.TrgtParser.run()Z#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/TrgtInfo;,location)#87
chord.project.TrgtParser.run()Z#LocalStore(Ljava/lang/Object;,8)#88
chord.project.TrgtParser.run()Z#Goto(108)#89
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,0)#166
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,3)#167
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,10)#168
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,18)#169
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,12)#170
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,14)#171
chord.project.TrgtParser.run()Z#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/TrgtInfo;,location)#172
chord.project.TrgtParser.run()Z#Invoke(SPECIAL,Lchord/project/TrgtParser;,inconsistentDomOrders,(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V)#173
chord.project.TrgtParser.inconsistentDomOrders(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V#Get(I,STATIC,Lchord/project/Config;,verbose)#0
chord.project.TrgtParser.inconsistentDomOrders(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V#Constant(I,2)#1
chord.project.TrgtParser.inconsistentDomOrders(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V#ConditionalBranch(I,lt,27)#2
chord.project.TrgtParser.inconsistentDomOrders(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V#Return(V)#27
chord.project.TrgtParser.run()Z#Constant(L;,null)#46
chord.project.TrgtParser.run()Z#CheckCast([Ljava/lang/String;)#47
chord.project.TrgtParser.run()Z#LocalStore(Ljava/lang/Object;,9)#48
chord.project.TrgtParser.run()Z#Constant(L;,null)#49
chord.project.TrgtParser.run()Z#LocalStore(Ljava/lang/Object;,10)#50
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,15)#73
chord.project.TrgtParser.run()Z#LocalStore(Ljava/lang/Object;,7)#74
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,14)#75
chord.project.TrgtParser.run()Z#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/TrgtInfo;,location)#76
chord.project.TrgtParser.run()Z#LocalStore(Ljava/lang/Object;,8)#77
chord.project.TrgtParser.run()Z#Goto(108)#78
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,17)#121
chord.project.TrgtParser.run()Z#LocalStore(Ljava/lang/Object;,9)#122
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,14)#123
chord.project.TrgtParser.run()Z#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/TrgtInfo;,location)#124
chord.project.TrgtParser.run()Z#LocalStore(Ljava/lang/Object;,11)#125
chord.project.TrgtParser.run()Z#Goto(145)#126
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,18)#155
chord.project.TrgtParser.run()Z#LocalStore(Ljava/lang/Object;,10)#156
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,14)#157
chord.project.TrgtParser.run()Z#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/TrgtInfo;,location)#158
chord.project.TrgtParser.run()Z#LocalStore(Ljava/lang/Object;,12)#159
chord.project.TrgtParser.run()Z#Goto(174)#160
chord.project.TrgtParser.run()Z#LocalLoad(Ljava/lang/Object;,0)#235
chord.project.TrgtParser.run()Z#Get(Z,NONSTATIC,Lchord/project/TrgtParser;,hasNoErrors)#236
chord.project.TrgtParser.run()Z#Return(I)#237
chord.project.ClassicProject.build()V#Constant(I,0)#39
chord.project.ClassicProject.build()V#ConditionalBranch(I,ne,43)#40
chord.project.ClassicProject.build()V#LocalLoad(Ljava/lang/Object;,5)#43
chord.project.ClassicProject.build()V#Invoke(VIRTUAL,Lchord/project/TrgtParser;,getNameToTrgtTypeMap,()Ljava/util/Map;)#44
chord.project.TrgtParser.getNameToTrgtTypeMap()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.TrgtParser.getNameToTrgtTypeMap()Ljava/util/Map;#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/TrgtParser;,nameToTrgtTypeMap)#1
chord.project.TrgtParser.getNameToTrgtTypeMap()Ljava/util/Map;#Return(Ljava/lang/Object;)#2
chord.project.ClassicProject.build()V#LocalStore(Ljava/lang/Object;,6)#45
chord.project.ClassicProject.build()V#LocalLoad(Ljava/lang/Object;,0)#46
chord.project.ClassicProject.build()V#LocalLoad(Ljava/lang/Object;,6)#47
chord.project.ClassicProject.build()V#Invoke(SPECIAL,Lchord/project/ClassicProject;,buildNameToTrgtMap,(Ljava/util/Map;)Z)#48
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#Constant(I,1)#0
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#LocalStore(I,2)#1
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,1)#2
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#Invoke(INTERFACE,Ljava/util/Map;,entrySet,()Ljava/util/Set;)#3
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#4
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#LocalStore(Ljava/lang/Object;,4)#5
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#Goto(92)#6
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,4)#92
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#93
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#Constant(I,0)#94
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#ConditionalBranch(I,ne,7)#95
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,4)#7
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#8
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#CheckCast(Ljava/util/Map$Entry;)#9
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#LocalStore(Ljava/lang/Object;,3)#10
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,3)#11
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#Invoke(INTERFACE,Ljava/util/Map$Entry;,getKey,()Ljava/lang/Object;)#12
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#CheckCast(Ljava/lang/String;)#13
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#LocalStore(Ljava/lang/Object;,5)#14
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,0)#15
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ClassicProject;,nameToTaskMap)#16
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,5)#17
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#18
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#LocalStore(Ljava/lang/Object;,6)#19
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,6)#20
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#Constant(L;,null)#21
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#ConditionalBranch(Ljava/lang/Object;,eq,30)#22
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,0)#23
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ClassicProject;,nameToTrgtMap)#24
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,5)#25
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,6)#26
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#27
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#Pop(1)#28
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#Goto(92)#29
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,3)#30
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#Invoke(INTERFACE,Ljava/util/Map$Entry;,getValue,()Ljava/lang/Object;)#31
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#CheckCast(Ljava/lang/Class;)#32
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#LocalStore(Ljava/lang/Object;,7)#33
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#Constant(L;,null)#34
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#LocalStore(Ljava/lang/Object;,8)#35
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,7)#36
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#Invoke(VIRTUAL,Ljava/lang/Class;,newInstance,()Ljava/lang/Object;)#37
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#LocalStore(Ljava/lang/Object;,6)#38
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#Goto(47)#39
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,8)#47
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#Constant(L;,null)#48
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#ConditionalBranch(Ljava/lang/Object;,eq,66)#49
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#Get(Z,STATIC,Lchord/project/ClassicProject;,$assertionsDisabled)#66
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#Constant(I,0)#67
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#ConditionalBranch(I,ne,76)#68
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,6)#69
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#Constant(L;,null)#70
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#ConditionalBranch(Ljava/lang/Object;,ne,76)#71
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,0)#76
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ClassicProject;,nameToTrgtMap)#77
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,5)#78
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,6)#79
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#80
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#Pop(1)#81
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,6)#82
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#Instanceof(Lchord/project/ITask;)#83
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#Constant(I,0)#84
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#ConditionalBranch(I,eq,92)#85
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,6)#86
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#CheckCast(Lchord/project/ITask;)#87
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#LocalStore(Ljava/lang/Object;,9)#88
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,9)#89
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#LocalLoad(Ljava/lang/Object;,5)#90
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#Invoke(INTERFACE,Lchord/project/ITask;,setName,(Ljava/lang/String;)V)#91
chord.analyses.thread.DomA.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.thread.DomA.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramDom;,<init>,()V)#1
chord.analyses.thread.DomA.<init>()V#Return(V)#2
chord.analyses.alias.DomC.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@a45f448a)#0
chord.analyses.alias.DomC.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.alias.DomC.<clinit>()V#Constant(I,0)#2
chord.analyses.alias.DomC.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.alias.DomC.<clinit>()V#Constant(I,0)#6
chord.analyses.alias.DomC.<clinit>()V#Put(Z,STATIC,Lchord/analyses/alias/DomC;,$assertionsDisabled)#7
chord.analyses.alias.DomC.<clinit>()V#Return(V)#8
chord.analyses.alias.DomC.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.alias.DomC.<init>()V#Invoke(SPECIAL,Lchord/project/analyses/ProgramDom;,<init>,()V)#1
chord.analyses.alias.DomC.<init>()V#Return(V)#2
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#LocalLoad(I,2)#96
chord.project.ClassicProject.buildNameToTrgtMap(Ljava/util/Map;)Z#Return(I)#97
chord.project.ClassicProject.build()V#Constant(I,0)#49
chord.project.ClassicProject.build()V#ConditionalBranch(I,ne,53)#50
chord.project.ClassicProject.build()V#LocalLoad(Ljava/lang/Object;,5)#53
chord.project.ClassicProject.build()V#Invoke(VIRTUAL,Lchord/project/TrgtParser;,getNameToTrgtSignMap,()Ljava/util/Map;)#54
chord.project.TrgtParser.getNameToTrgtSignMap()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.TrgtParser.getNameToTrgtSignMap()Ljava/util/Map;#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/TrgtParser;,nameToTrgtSignMap)#1
chord.project.TrgtParser.getNameToTrgtSignMap()Ljava/util/Map;#Return(Ljava/lang/Object;)#2
chord.project.ClassicProject.build()V#LocalStore(Ljava/lang/Object;,7)#55
chord.project.ClassicProject.build()V#LocalLoad(Ljava/lang/Object;,0)#56
chord.project.ClassicProject.build()V#LocalLoad(Ljava/lang/Object;,7)#57
chord.project.ClassicProject.build()V#Invoke(SPECIAL,Lchord/project/ClassicProject;,setRelSignsAndDoms,(Ljava/util/Map;)V)#58
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#0
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,entrySet,()Ljava/util/Set;)#1
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#2
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,3)#3
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#Goto(83)#4
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#83
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#84
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#Constant(I,0)#85
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#ConditionalBranch(I,ne,5)#86
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#5
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#6
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#CheckCast(Ljava/util/Map$Entry;)#7
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,2)#8
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,2)#9
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map$Entry;,getKey,()Ljava/lang/Object;)#10
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#CheckCast(Ljava/lang/String;)#11
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,4)#12
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,2)#13
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map$Entry;,getValue,()Ljava/lang/Object;)#14
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#CheckCast(Lchord/bddbddb/RelSign;)#15
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,5)#16
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#17
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ClassicProject;,nameToTrgtMap)#18
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#19
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#20
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#CheckCast(Lchord/project/analyses/ProgramRel;)#21
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,6)#22
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#Get(Z,STATIC,Lchord/project/ClassicProject;,$assertionsDisabled)#23
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#Constant(I,0)#24
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#ConditionalBranch(I,ne,33)#25
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#26
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#Constant(L;,null)#27
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#ConditionalBranch(Ljava/lang/Object;,ne,33)#28
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#33
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#Invoke(VIRTUAL,Lchord/bddbddb/RelSign;,getDomNames,()[Ljava/lang/String;)#34
chord.bddbddb.RelSign.getDomNames()[Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
chord.bddbddb.RelSign.getDomNames()[Ljava/lang/String;#Get(Ljava/lang/Object;,NONSTATIC,Lchord/bddbddb/RelSign;,val0)#1
chord.bddbddb.RelSign.getDomNames()[Ljava/lang/String;#CheckCast([Ljava/lang/String;)#2
chord.bddbddb.RelSign.getDomNames()[Ljava/lang/String;#Return(Ljava/lang/Object;)#3
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,7)#35
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#36
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#ArrayLength()#37
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalStore(I,8)#38
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalLoad(I,8)#39
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#New([Lchord/project/analyses/ProgramDom;,1)#40
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,9)#41
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#Constant(I,0)#42
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalStore(I,10)#43
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#Goto(74)#44
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalLoad(I,10)#74
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalLoad(I,8)#75
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#ConditionalBranch(I,lt,45)#76
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#45
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalLoad(I,10)#46
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#ArrayLoad(Ljava/lang/Object;)#47
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#Invoke(STATIC,Lchord/util/Utils;,trimNumSuffix,(Ljava/lang/String;)Ljava/lang/String;)#48
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,11)#49
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#50
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ClassicProject;,nameToTrgtMap)#51
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#52
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#53
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#CheckCast(Lchord/project/analyses/ProgramDom;)#54
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,12)#55
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#Get(Z,STATIC,Lchord/project/ClassicProject;,$assertionsDisabled)#56
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#Constant(I,0)#57
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#ConditionalBranch(I,ne,66)#58
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#59
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#Constant(L;,null)#60
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#ConditionalBranch(Ljava/lang/Object;,ne,66)#61
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#66
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalLoad(I,10)#67
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#68
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#ArrayStore(Ljava/lang/Object;)#69
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalLoad(I,10)#70
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#Constant(I,1)#71
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#BinaryOp(I,add)#72
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalStore(I,10)#73
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#77
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#78
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#Invoke(VIRTUAL,Lchord/project/analyses/ProgramRel;,setSign,(Lchord/bddbddb/RelSign;)V)#79
chord.bddbddb.Rel.setSign(Lchord/bddbddb/RelSign;)V#Get(Z,STATIC,Lchord/bddbddb/Rel;,$assertionsDisabled)#0
chord.bddbddb.Rel.setSign(Lchord/bddbddb/RelSign;)V#Constant(I,0)#1
chord.bddbddb.Rel.setSign(Lchord/bddbddb/RelSign;)V#ConditionalBranch(I,ne,11)#2
chord.bddbddb.Rel.setSign(Lchord/bddbddb/RelSign;)V#LocalLoad(Ljava/lang/Object;,0)#3
chord.bddbddb.Rel.setSign(Lchord/bddbddb/RelSign;)V#Get(Lchord/bddbddb/RelSign;,NONSTATIC,Lchord/bddbddb/Rel;,sign)#4
chord.bddbddb.Rel.setSign(Lchord/bddbddb/RelSign;)V#Constant(L;,null)#5
chord.bddbddb.Rel.setSign(Lchord/bddbddb/RelSign;)V#ConditionalBranch(Ljava/lang/Object;,eq,11)#6
chord.bddbddb.Rel.setSign(Lchord/bddbddb/RelSign;)V#Get(Z,STATIC,Lchord/bddbddb/Rel;,$assertionsDisabled)#11
chord.bddbddb.Rel.setSign(Lchord/bddbddb/RelSign;)V#Constant(I,0)#12
chord.bddbddb.Rel.setSign(Lchord/bddbddb/RelSign;)V#ConditionalBranch(I,ne,21)#13
chord.bddbddb.Rel.setSign(Lchord/bddbddb/RelSign;)V#LocalLoad(Ljava/lang/Object;,1)#14
chord.bddbddb.Rel.setSign(Lchord/bddbddb/RelSign;)V#Constant(L;,null)#15
chord.bddbddb.Rel.setSign(Lchord/bddbddb/RelSign;)V#ConditionalBranch(Ljava/lang/Object;,ne,21)#16
chord.bddbddb.Rel.setSign(Lchord/bddbddb/RelSign;)V#Get(Z,STATIC,Lchord/bddbddb/Rel;,$assertionsDisabled)#21
chord.bddbddb.Rel.setSign(Lchord/bddbddb/RelSign;)V#Constant(I,0)#22
chord.bddbddb.Rel.setSign(Lchord/bddbddb/RelSign;)V#ConditionalBranch(I,ne,32)#23
chord.bddbddb.Rel.setSign(Lchord/bddbddb/RelSign;)V#LocalLoad(Ljava/lang/Object;,1)#24
chord.bddbddb.Rel.setSign(Lchord/bddbddb/RelSign;)V#Get(Ljava/lang/Object;,NONSTATIC,Lchord/bddbddb/RelSign;,val1)#25
chord.bddbddb.Rel.setSign(Lchord/bddbddb/RelSign;)V#Constant(L;,null)#26
chord.bddbddb.Rel.setSign(Lchord/bddbddb/RelSign;)V#ConditionalBranch(Ljava/lang/Object;,ne,32)#27
chord.bddbddb.Rel.setSign(Lchord/bddbddb/RelSign;)V#LocalLoad(Ljava/lang/Object;,0)#32
chord.bddbddb.Rel.setSign(Lchord/bddbddb/RelSign;)V#LocalLoad(Ljava/lang/Object;,1)#33
chord.bddbddb.Rel.setSign(Lchord/bddbddb/RelSign;)V#Put(Lchord/bddbddb/RelSign;,NONSTATIC,Lchord/bddbddb/Rel;,sign)#34
chord.bddbddb.Rel.setSign(Lchord/bddbddb/RelSign;)V#LocalLoad(Ljava/lang/Object;,0)#35
chord.bddbddb.Rel.setSign(Lchord/bddbddb/RelSign;)V#LocalLoad(Ljava/lang/Object;,1)#36
chord.bddbddb.Rel.setSign(Lchord/bddbddb/RelSign;)V#Get(Ljava/lang/Object;,NONSTATIC,Lchord/bddbddb/RelSign;,val0)#37
chord.bddbddb.Rel.setSign(Lchord/bddbddb/RelSign;)V#CheckCast([Ljava/lang/String;)#38
chord.bddbddb.Rel.setSign(Lchord/bddbddb/RelSign;)V#ArrayLength()#39
chord.bddbddb.Rel.setSign(Lchord/bddbddb/RelSign;)V#Put(I,NONSTATIC,Lchord/bddbddb/Rel;,numDoms)#40
chord.bddbddb.Rel.setSign(Lchord/bddbddb/RelSign;)V#Return(V)#41
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#80
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#81
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#Invoke(VIRTUAL,Lchord/project/analyses/ProgramRel;,setDoms,([Lchord/bddbddb/Dom;)V)#82
chord.bddbddb.Rel.setDoms([Lchord/bddbddb/Dom;)V#Get(Z,STATIC,Lchord/bddbddb/Rel;,$assertionsDisabled)#0
chord.bddbddb.Rel.setDoms([Lchord/bddbddb/Dom;)V#Constant(I,0)#1
chord.bddbddb.Rel.setDoms([Lchord/bddbddb/Dom;)V#ConditionalBranch(I,ne,11)#2
chord.bddbddb.Rel.setDoms([Lchord/bddbddb/Dom;)V#LocalLoad(Ljava/lang/Object;,0)#3
chord.bddbddb.Rel.setDoms([Lchord/bddbddb/Dom;)V#Get(Lchord/bddbddb/RelSign;,NONSTATIC,Lchord/bddbddb/Rel;,sign)#4
chord.bddbddb.Rel.setDoms([Lchord/bddbddb/Dom;)V#Constant(L;,null)#5
chord.bddbddb.Rel.setDoms([Lchord/bddbddb/Dom;)V#ConditionalBranch(Ljava/lang/Object;,ne,11)#6
chord.bddbddb.Rel.setDoms([Lchord/bddbddb/Dom;)V#Get(Z,STATIC,Lchord/bddbddb/Rel;,$assertionsDisabled)#11
chord.bddbddb.Rel.setDoms([Lchord/bddbddb/Dom;)V#Constant(I,0)#12
chord.bddbddb.Rel.setDoms([Lchord/bddbddb/Dom;)V#ConditionalBranch(I,ne,23)#13
chord.bddbddb.Rel.setDoms([Lchord/bddbddb/Dom;)V#LocalLoad(Ljava/lang/Object;,0)#14
chord.bddbddb.Rel.setDoms([Lchord/bddbddb/Dom;)V#Get(I,NONSTATIC,Lchord/bddbddb/Rel;,numDoms)#15
chord.bddbddb.Rel.setDoms([Lchord/bddbddb/Dom;)V#LocalLoad(Ljava/lang/Object;,1)#16
chord.bddbddb.Rel.setDoms([Lchord/bddbddb/Dom;)V#ArrayLength()#17
chord.bddbddb.Rel.setDoms([Lchord/bddbddb/Dom;)V#ConditionalBranch(I,eq,23)#18
chord.bddbddb.Rel.setDoms([Lchord/bddbddb/Dom;)V#LocalLoad(Ljava/lang/Object;,0)#23
chord.bddbddb.Rel.setDoms([Lchord/bddbddb/Dom;)V#LocalLoad(Ljava/lang/Object;,1)#24
chord.bddbddb.Rel.setDoms([Lchord/bddbddb/Dom;)V#Put([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/bddbddb/Rel;,doms)#25
chord.bddbddb.Rel.setDoms([Lchord/bddbddb/Dom;)V#Return(V)#26
chord.project.ClassicProject.setRelSignsAndDoms(Ljava/util/Map;)V#Return(V)#87
chord.project.ClassicProject.build()V#LocalLoad(Ljava/lang/Object;,1)#59
chord.project.ClassicProject.build()V#Invoke(VIRTUAL,Lchord/project/TaskParser;,getNameToConsumeNamesMap,()Ljava/util/Map;)#60
chord.project.TaskParser.getNameToConsumeNamesMap()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.TaskParser.getNameToConsumeNamesMap()Ljava/util/Map;#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/TaskParser;,nameToConsumeNamesMap)#1
chord.project.TaskParser.getNameToConsumeNamesMap()Ljava/util/Map;#Return(Ljava/lang/Object;)#2
chord.project.ClassicProject.build()V#LocalStore(Ljava/lang/Object;,8)#61
chord.project.ClassicProject.build()V#LocalLoad(Ljava/lang/Object;,1)#62
chord.project.ClassicProject.build()V#Invoke(VIRTUAL,Lchord/project/TaskParser;,getNameToProduceNamesMap,()Ljava/util/Map;)#63
chord.project.TaskParser.getNameToProduceNamesMap()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.TaskParser.getNameToProduceNamesMap()Ljava/util/Map;#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/TaskParser;,nameToProduceNamesMap)#1
chord.project.TaskParser.getNameToProduceNamesMap()Ljava/util/Map;#Return(Ljava/lang/Object;)#2
chord.project.ClassicProject.build()V#LocalStore(Ljava/lang/Object;,9)#64
chord.project.ClassicProject.build()V#LocalLoad(Ljava/lang/Object;,0)#65
chord.project.ClassicProject.build()V#LocalLoad(Ljava/lang/Object;,8)#66
chord.project.ClassicProject.build()V#LocalLoad(Ljava/lang/Object;,9)#67
chord.project.ClassicProject.build()V#Invoke(SPECIAL,Lchord/project/ClassicProject;,buildDerivedMaps,(Ljava/util/Map;Ljava/util/Map;)V)#68
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ClassicProject;,nameToTrgtMap)#1
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,values,()Ljava/util/Collection;)#2
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Collection;,iterator,()Ljava/util/Iterator;)#3
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,4)#4
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Goto(29)#5
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#29
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#30
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Constant(I,0)#31
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#ConditionalBranch(I,ne,6)#32
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#6
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#7
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,3)#8
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#New(Ljava/util/HashSet;,0)#9
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Dup(1,0)#10
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#11
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,5)#12
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#13
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ClassicProject;,trgtToConsumingTasksMap)#14
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#15
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#16
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#17
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Pop(1)#18
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#New(Ljava/util/HashSet;,0)#19
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Dup(1,0)#20
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#21
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,6)#22
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#23
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ClassicProject;,trgtToProducingTasksMap)#24
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#25
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#26
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#27
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Pop(1)#28
chord.bddbddb.Dom.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#0
chord.bddbddb.Dom.hashCode()I#Invoke(STATIC,Ljava/lang/System;,identityHashCode,(Ljava/lang/Object;)I)#1
chord.bddbddb.Dom.hashCode()I#Return(I)#2
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#33
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ClassicProject;,nameToTaskMap)#34
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,values,()Ljava/util/Collection;)#35
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Collection;,iterator,()Ljava/util/Iterator;)#36
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,4)#37
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Goto(161)#38
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#161
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#162
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Constant(I,0)#163
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#ConditionalBranch(I,ne,39)#164
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#39
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#40
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#CheckCast(Lchord/project/ITask;)#41
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,3)#42
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#43
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#44
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Lchord/project/ITask;,getName,()Ljava/lang/String;)#45
chord.bddbddb.Rel.getName()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
chord.bddbddb.Rel.getName()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lchord/bddbddb/Rel;,name)#1
chord.bddbddb.Rel.getName()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#46
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#CheckCast(Ljava/util/List;)#47
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,5)#48
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#New(Ljava/util/ArrayList;,0)#49
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Dup(1,0)#50
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#51
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#52
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,(I)V)#53
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,6)#54
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#55
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#56
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,8)#57
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Goto(92)#58
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#92
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#93
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Constant(I,0)#94
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#ConditionalBranch(I,ne,59)#95
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#59
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#60
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#CheckCast(Ljava/lang/String;)#61
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,7)#62
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#63
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ClassicProject;,nameToTrgtMap)#64
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#65
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#66
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,9)#67
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Get(Z,STATIC,Lchord/project/ClassicProject;,$assertionsDisabled)#68
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Constant(I,0)#69
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#ConditionalBranch(I,ne,78)#70
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#71
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Constant(L;,null)#72
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#ConditionalBranch(Ljava/lang/Object;,ne,78)#73
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#78
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#79
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#80
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Pop(1)#81
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#82
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ClassicProject;,trgtToConsumingTasksMap)#83
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#84
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#85
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#CheckCast(Ljava/util/Set;)#86
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,10)#87
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#88
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#89
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#90
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Pop(1)#91
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#96
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ClassicProject;,taskToConsumedTrgtsMap)#97
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#98
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#99
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#100
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Pop(1)#101
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,2)#102
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#103
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Lchord/project/ITask;,getName,()Ljava/lang/String;)#104
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#105
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#CheckCast(Ljava/util/List;)#106
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,7)#107
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#New(Ljava/util/ArrayList;,0)#108
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Dup(1,0)#109
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#110
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#111
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,(I)V)#112
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,8)#113
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,7)#114
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#115
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,10)#116
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Goto(151)#117
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#151
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#152
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Constant(I,0)#153
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#ConditionalBranch(I,ne,118)#154
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#118
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#119
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#CheckCast(Ljava/lang/String;)#120
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,9)#121
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#122
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ClassicProject;,nameToTrgtMap)#123
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#124
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#125
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,11)#126
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Get(Z,STATIC,Lchord/project/ClassicProject;,$assertionsDisabled)#127
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Constant(I,0)#128
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#ConditionalBranch(I,ne,137)#129
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#130
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Constant(L;,null)#131
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#ConditionalBranch(Ljava/lang/Object;,ne,137)#132
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#137
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#138
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#139
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Pop(1)#140
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#141
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ClassicProject;,trgtToProducingTasksMap)#142
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,11)#143
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#144
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#CheckCast(Ljava/util/Set;)#145
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,12)#146
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#147
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#148
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#149
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Pop(1)#150
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#155
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ClassicProject;,taskToProducedTrgtsMap)#156
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#157
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#158
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#159
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Pop(1)#160
chord.project.analyses.JavaAnalysis.getName()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.analyses.JavaAnalysis.getName()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/analyses/JavaAnalysis;,name)#1
chord.project.analyses.JavaAnalysis.getName()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
chord.bddbddb.Dom.getName()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
chord.bddbddb.Dom.getName()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lchord/bddbddb/Dom;,name)#1
chord.bddbddb.Dom.getName()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#165
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ClassicProject;,nameToTrgtMap)#166
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,keySet,()Ljava/util/Set;)#167
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#168
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,4)#169
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Goto(257)#170
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#257
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#258
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Constant(I,0)#259
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#ConditionalBranch(I,ne,171)#260
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,4)#171
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#172
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#CheckCast(Ljava/lang/String;)#173
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,3)#174
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#175
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ClassicProject;,nameToTrgtMap)#176
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#177
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#178
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,5)#179
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#180
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ClassicProject;,trgtToProducingTasksMap)#181
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#182
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#183
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#CheckCast(Ljava/util/Set;)#184
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,6)#185
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#186
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,size,()I)#187
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(I,7)#188
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(I,7)#189
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Constant(I,0)#190
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#ConditionalBranch(I,ne,228)#191
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(I,7)#228
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Constant(I,1)#229
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#ConditionalBranch(I,le,257)#230
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#New(Lchord/util/ArraySet;,0)#231
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Dup(1,0)#232
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(I,7)#233
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(SPECIAL,Lchord/util/ArraySet;,<init>,(I)V)#234
chord.util.ArraySet.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.ArraySet.<init>(I)V#LocalLoad(I,1)#1
chord.util.ArraySet.<init>(I)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,(I)V)#2
chord.util.ArraySet.<init>(I)V#Return(V)#3
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,8)#235
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#236
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#237
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,10)#238
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Goto(249)#239
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#249
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#250
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Constant(I,0)#251
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#ConditionalBranch(I,ne,240)#252
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#240
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#241
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#CheckCast(Lchord/project/ITask;)#242
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,9)#243
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#244
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,9)#245
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(STATIC,Lchord/project/ClassicProject;,getSourceName,(Lchord/project/ITask;)Ljava/lang/String;)#246
chord.project.ClassicProject.getSourceName(Lchord/project/ITask;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.ClassicProject.getSourceName(Lchord/project/ITask;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/Object;,getClass,()Ljava/lang/Class;)#1
chord.project.ClassicProject.getSourceName(Lchord/project/ITask;)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,1)#2
chord.project.ClassicProject.getSourceName(Lchord/project/ITask;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#3
chord.project.ClassicProject.getSourceName(Lchord/project/ITask;)Ljava/lang/String;#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@ffcbd04)#4
chord.project.ClassicProject.getSourceName(Lchord/project/ITask;)Ljava/lang/String;#ConditionalBranch(Ljava/lang/Object;,ne,10)#5
chord.project.ClassicProject.getSourceName(Lchord/project/ITask;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#6
chord.project.ClassicProject.getSourceName(Lchord/project/ITask;)Ljava/lang/String;#CheckCast(Lchord/project/analyses/DlogAnalysis;)#7
chord.project.ClassicProject.getSourceName(Lchord/project/ITask;)Ljava/lang/String;#Invoke(VIRTUAL,Lchord/project/analyses/DlogAnalysis;,getFileName,()Ljava/lang/String;)#8
chord.project.analyses.DlogAnalysis.getFileName()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.analyses.DlogAnalysis.getFileName()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,fileName)#1
chord.project.analyses.DlogAnalysis.getFileName()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,toString,()Ljava/lang/String;)#2
chord.project.analyses.DlogAnalysis.getFileName()Ljava/lang/String;#Return(Ljava/lang/Object;)#3
chord.project.ClassicProject.getSourceName(Lchord/project/ITask;)Ljava/lang/String;#Return(Ljava/lang/Object;)#9
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#247
chord.util.ArraySet.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.ArraySet.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#1
chord.util.ArraySet.add(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Lchord/util/ArraySet;,contains,(Ljava/lang/Object;)Z)#2
chord.util.ArraySet.add(Ljava/lang/Object;)Z#Constant(I,0)#3
chord.util.ArraySet.add(Ljava/lang/Object;)Z#ConditionalBranch(I,eq,7)#4
chord.util.ArraySet.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#7
chord.util.ArraySet.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#8
chord.util.ArraySet.add(Ljava/lang/Object;)Z#Invoke(SPECIAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#9
chord.util.ArraySet.add(Ljava/lang/Object;)Z#Return(I)#10
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Pop(1)#248
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#253
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#254
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#255
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(SPECIAL,Lchord/project/ClassicProject;,redefinedTarget,(Ljava/lang/String;Ljava/util/List;)V)#256
chord.project.ClassicProject.redefinedTarget(Ljava/lang/String;Ljava/util/List;)V#Get(I,STATIC,Lchord/project/Config;,verbose)#0
chord.project.ClassicProject.redefinedTarget(Ljava/lang/String;Ljava/util/List;)V#Constant(I,2)#1
chord.project.ClassicProject.redefinedTarget(Ljava/lang/String;Ljava/util/List;)V#ConditionalBranch(I,lt,42)#2
chord.project.ClassicProject.redefinedTarget(Ljava/lang/String;Ljava/util/List;)V#Return(V)#42
chord.project.ClassicProject.getSourceName(Lchord/project/ITask;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#10
chord.project.ClassicProject.getSourceName(Lchord/project/ITask;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/Class;,getName,()Ljava/lang/String;)#11
chord.project.ClassicProject.getSourceName(Lchord/project/ITask;)Ljava/lang/String;#Return(Ljava/lang/Object;)#12
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#192
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ClassicProject;,trgtToConsumingTasksMap)#193
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,5)#194
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#195
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#CheckCast(Ljava/util/Set;)#196
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,8)#197
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#198
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,size,()I)#199
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(I,9)#200
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#New(Lchord/util/ArraySet;,0)#201
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Dup(1,0)#202
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(I,9)#203
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(SPECIAL,Lchord/util/ArraySet;,<init>,(I)V)#204
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,10)#205
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#206
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#207
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,12)#208
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Goto(219)#209
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,12)#219
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#220
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Constant(I,0)#221
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#ConditionalBranch(I,ne,210)#222
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#223
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,3)#224
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,10)#225
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Invoke(SPECIAL,Lchord/project/ClassicProject;,undefinedTarget,(Ljava/lang/String;Ljava/util/List;)V)#226
chord.project.ClassicProject.undefinedTarget(Ljava/lang/String;Ljava/util/List;)V#Get(I,STATIC,Lchord/project/Config;,verbose)#0
chord.project.ClassicProject.undefinedTarget(Ljava/lang/String;Ljava/util/List;)V#Constant(I,2)#1
chord.project.ClassicProject.undefinedTarget(Ljava/lang/String;Ljava/util/List;)V#ConditionalBranch(I,lt,65)#2
chord.project.ClassicProject.undefinedTarget(Ljava/lang/String;Ljava/util/List;)V#Return(V)#65
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Goto(257)#227
chord.project.ClassicProject.buildDerivedMaps(Ljava/util/Map;Ljava/util/Map;)V#Return(V)#261
chord.project.ClassicProject.build()V#LocalLoad(Ljava/lang/Object;,0)#69
chord.project.ClassicProject.build()V#Constant(I,1)#70
chord.project.ClassicProject.build()V#Put(Z,NONSTATIC,Lchord/project/ClassicProject;,isBuilt)#71
chord.project.ClassicProject.build()V#Return(V)#72
chord.project.ClassicProject.getTask(Ljava/lang/String;)Lchord/project/ITask;#LocalLoad(Ljava/lang/Object;,0)#2
chord.project.ClassicProject.getTask(Ljava/lang/String;)Lchord/project/ITask;#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ClassicProject;,nameToTaskMap)#3
chord.project.ClassicProject.getTask(Ljava/lang/String;)Lchord/project/ITask;#LocalLoad(Ljava/lang/Object;,1)#4
chord.project.ClassicProject.getTask(Ljava/lang/String;)Lchord/project/ITask;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#5
chord.project.ClassicProject.getTask(Ljava/lang/String;)Lchord/project/ITask;#CheckCast(Lchord/project/ITask;)#6
chord.project.ClassicProject.getTask(Ljava/lang/String;)Lchord/project/ITask;#LocalStore(Ljava/lang/Object;,2)#7
chord.project.ClassicProject.getTask(Ljava/lang/String;)Lchord/project/ITask;#LocalLoad(Ljava/lang/Object;,2)#8
chord.project.ClassicProject.getTask(Ljava/lang/String;)Lchord/project/ITask;#Constant(L;,null)#9
chord.project.ClassicProject.getTask(Ljava/lang/String;)Lchord/project/ITask;#ConditionalBranch(Ljava/lang/Object;,ne,19)#10
chord.project.ClassicProject.getTask(Ljava/lang/String;)Lchord/project/ITask;#LocalLoad(Ljava/lang/Object;,2)#19
chord.project.ClassicProject.getTask(Ljava/lang/String;)Lchord/project/ITask;#Return(Ljava/lang/Object;)#20
chord.project.ClassicProject.runTask(Ljava/lang/String;)Lchord/project/ITask;#LocalStore(Ljava/lang/Object;,2)#3
chord.project.ClassicProject.runTask(Ljava/lang/String;)Lchord/project/ITask;#LocalLoad(Ljava/lang/Object;,0)#4
chord.project.ClassicProject.runTask(Ljava/lang/String;)Lchord/project/ITask;#LocalLoad(Ljava/lang/Object;,2)#5
chord.project.ClassicProject.runTask(Ljava/lang/String;)Lchord/project/ITask;#Invoke(VIRTUAL,Lchord/project/ClassicProject;,runTask,(Lchord/project/ITask;)V)#6
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,1)#1
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(VIRTUAL,Lchord/project/ClassicProject;,isTaskDone,(Lchord/project/ITask;)Z)#2
chord.project.ClassicProject.isTaskDone(Lchord/project/ITask;)Z#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.ClassicProject.isTaskDone(Lchord/project/ITask;)Z#Get(Ljava/util/Set;,NONSTATIC,Lchord/project/ClassicProject;,doneTasks)#1
chord.project.ClassicProject.isTaskDone(Lchord/project/ITask;)Z#LocalLoad(Ljava/lang/Object;,1)#2
chord.project.ClassicProject.isTaskDone(Lchord/project/ITask;)Z#Invoke(INTERFACE,Ljava/util/Set;,contains,(Ljava/lang/Object;)Z)#3
chord.project.ClassicProject.isTaskDone(Lchord/project/ITask;)Z#Return(I)#4
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Constant(I,0)#3
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#ConditionalBranch(I,eq,20)#4
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#New(Lchord/util/Timer;,0)#20
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Dup(1,0)#21
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,1)#22
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(INTERFACE,Lchord/project/ITask;,getName,()Ljava/lang/String;)#23
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(SPECIAL,Lchord/util/Timer;,<init>,(Ljava/lang/String;)V)#24
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalStore(Ljava/lang/Object;,2)#25
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Get(I,STATIC,Lchord/project/Config;,verbose)#26
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Constant(I,1)#27
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#ConditionalBranch(I,lt,44)#28
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Get(Ljava/io/PrintStream;,STATIC,Ljava/lang/System;,out)#29
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#New(Ljava/lang/StringBuilder;,0)#30
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Dup(1,0)#31
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Constant(Ljava/lang/String;,"ENTER: ")#32
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#33
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,1)#34
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#35
chord.project.analyses.JavaAnalysis.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.analyses.JavaAnalysis.toString()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/analyses/JavaAnalysis;,name)#1
chord.project.analyses.JavaAnalysis.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Constant(Ljava/lang/String;," at ")#36
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#37
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#New(Ljava/util/Date;,0)#38
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Dup(1,0)#39
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(SPECIAL,Ljava/util/Date;,<init>,()V)#40
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#41
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#42
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(VIRTUAL,Ljava/io/PrintStream;,println,(Ljava/lang/String;)V)#43
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,2)#44
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(VIRTUAL,Lchord/util/Timer;,init,()V)#45
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,2)#46
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(VIRTUAL,Lchord/util/Timer;,pause,()V)#47
chord.util.Timer.pause()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.Timer.pause()V#Invoke(SPECIAL,Lchord/util/Timer;,checkInitDate,()V)#1
chord.util.Timer.pause()V#LocalLoad(Ljava/lang/Object;,0)#2
chord.util.Timer.pause()V#Get(Z,NONSTATIC,Lchord/util/Timer;,isPaused)#3
chord.util.Timer.pause()V#Constant(I,0)#4
chord.util.Timer.pause()V#ConditionalBranch(I,eq,20)#5
chord.util.Timer.pause()V#LocalLoad(Ljava/lang/Object;,0)#20
chord.util.Timer.pause()V#Constant(I,1)#21
chord.util.Timer.pause()V#Put(Z,NONSTATIC,Lchord/util/Timer;,isPaused)#22
chord.util.Timer.pause()V#New(Ljava/util/Date;,0)#23
chord.util.Timer.pause()V#Dup(1,0)#24
chord.util.Timer.pause()V#Invoke(SPECIAL,Ljava/util/Date;,<init>,()V)#25
chord.util.Timer.pause()V#LocalStore(Ljava/lang/Object;,1)#26
chord.util.Timer.pause()V#LocalLoad(Ljava/lang/Object;,0)#27
chord.util.Timer.pause()V#Dup(1,0)#28
chord.util.Timer.pause()V#Get(J,NONSTATIC,Lchord/util/Timer;,elapsedExclusiveTime)#29
chord.util.Timer.pause()V#LocalLoad(Ljava/lang/Object;,1)#30
chord.util.Timer.pause()V#Invoke(VIRTUAL,Ljava/util/Date;,getTime,()J)#31
chord.util.Timer.pause()V#LocalLoad(Ljava/lang/Object;,0)#32
chord.util.Timer.pause()V#Get(Ljava/util/Date;,NONSTATIC,Lchord/util/Timer;,lastResumeDate)#33
chord.util.Timer.pause()V#Invoke(VIRTUAL,Ljava/util/Date;,getTime,()J)#34
chord.util.Timer.pause()V#BinaryOp(J,sub)#35
chord.util.Timer.pause()V#BinaryOp(J,add)#36
chord.util.Timer.pause()V#Put(J,NONSTATIC,Lchord/util/Timer;,elapsedExclusiveTime)#37
chord.util.Timer.pause()V#Return(V)#38
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,0)#48
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ClassicProject;,taskToConsumedTrgtsMap)#49
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,1)#50
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#51
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#CheckCast(Ljava/util/List;)#52
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalStore(Ljava/lang/Object;,3)#53
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,3)#54
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#55
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalStore(Ljava/lang/Object;,5)#56
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Goto(133)#57
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,5)#133
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#134
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Constant(I,0)#135
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#ConditionalBranch(I,ne,58)#136
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,5)#58
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#59
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalStore(Ljava/lang/Object;,4)#60
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,0)#61
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,4)#62
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(VIRTUAL,Lchord/project/ClassicProject;,isTrgtDone,(Ljava/lang/Object;)Z)#63
chord.project.ClassicProject.isTrgtDone(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.ClassicProject.isTrgtDone(Ljava/lang/Object;)Z#Get(Ljava/util/Set;,NONSTATIC,Lchord/project/ClassicProject;,doneTrgts)#1
chord.project.ClassicProject.isTrgtDone(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#2
chord.project.ClassicProject.isTrgtDone(Ljava/lang/Object;)Z#Invoke(INTERFACE,Ljava/util/Set;,contains,(Ljava/lang/Object;)Z)#3
chord.project.ClassicProject.isTrgtDone(Ljava/lang/Object;)Z#Return(I)#4
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Constant(I,0)#64
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#ConditionalBranch(I,eq,67)#65
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Get(Z,STATIC,Lchord/project/Config;,reuseRels)#67
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Constant(I,0)#68
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#ConditionalBranch(I,eq,126)#69
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,0)#126
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,4)#127
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(VIRTUAL,Lchord/project/ClassicProject;,getTaskProducingTrgt,(Ljava/lang/Object;)Lchord/project/ITask;)#128
chord.project.ClassicProject.getTaskProducingTrgt(Ljava/lang/Object;)Lchord/project/ITask;#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.ClassicProject.getTaskProducingTrgt(Ljava/lang/Object;)Lchord/project/ITask;#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ClassicProject;,trgtToProducingTasksMap)#1
chord.project.ClassicProject.getTaskProducingTrgt(Ljava/lang/Object;)Lchord/project/ITask;#LocalLoad(Ljava/lang/Object;,1)#2
chord.project.ClassicProject.getTaskProducingTrgt(Ljava/lang/Object;)Lchord/project/ITask;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
chord.project.ClassicProject.getTaskProducingTrgt(Ljava/lang/Object;)Lchord/project/ITask;#CheckCast(Ljava/util/Set;)#4
chord.project.ClassicProject.getTaskProducingTrgt(Ljava/lang/Object;)Lchord/project/ITask;#LocalStore(Ljava/lang/Object;,2)#5
chord.project.ClassicProject.getTaskProducingTrgt(Ljava/lang/Object;)Lchord/project/ITask;#LocalLoad(Ljava/lang/Object;,2)#6
chord.project.ClassicProject.getTaskProducingTrgt(Ljava/lang/Object;)Lchord/project/ITask;#Invoke(INTERFACE,Ljava/util/Set;,size,()I)#7
chord.project.ClassicProject.getTaskProducingTrgt(Ljava/lang/Object;)Lchord/project/ITask;#LocalStore(I,3)#8
chord.project.ClassicProject.getTaskProducingTrgt(Ljava/lang/Object;)Lchord/project/ITask;#LocalLoad(I,3)#9
chord.project.ClassicProject.getTaskProducingTrgt(Ljava/lang/Object;)Lchord/project/ITask;#Constant(I,1)#10
chord.project.ClassicProject.getTaskProducingTrgt(Ljava/lang/Object;)Lchord/project/ITask;#ConditionalBranch(I,le,53)#11
chord.project.ClassicProject.getTaskProducingTrgt(Ljava/lang/Object;)Lchord/project/ITask;#LocalLoad(I,3)#53
chord.project.ClassicProject.getTaskProducingTrgt(Ljava/lang/Object;)Lchord/project/ITask;#Constant(I,0)#54
chord.project.ClassicProject.getTaskProducingTrgt(Ljava/lang/Object;)Lchord/project/ITask;#ConditionalBranch(I,ne,65)#55
chord.project.ClassicProject.getTaskProducingTrgt(Ljava/lang/Object;)Lchord/project/ITask;#LocalLoad(Ljava/lang/Object;,2)#65
chord.project.ClassicProject.getTaskProducingTrgt(Ljava/lang/Object;)Lchord/project/ITask;#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#66
chord.project.ClassicProject.getTaskProducingTrgt(Ljava/lang/Object;)Lchord/project/ITask;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#67
chord.project.ClassicProject.getTaskProducingTrgt(Ljava/lang/Object;)Lchord/project/ITask;#CheckCast(Lchord/project/ITask;)#68
chord.project.ClassicProject.getTaskProducingTrgt(Ljava/lang/Object;)Lchord/project/ITask;#Return(Ljava/lang/Object;)#69
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalStore(Ljava/lang/Object;,6)#129
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,0)#130
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,6)#131
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(VIRTUAL,Lchord/project/ClassicProject;,runTask,(Lchord/project/ITask;)V)#132
chord.project.analyses.ProgramDom.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.analyses.ProgramDom.toString()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/analyses/ProgramDom;,name)#1
chord.project.analyses.ProgramDom.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,2)#137
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(VIRTUAL,Lchord/util/Timer;,resume,()V)#138
chord.util.Timer.resume()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.Timer.resume()V#Get(Z,NONSTATIC,Lchord/util/Timer;,isPaused)#1
chord.util.Timer.resume()V#Constant(I,0)#2
chord.util.Timer.resume()V#ConditionalBranch(I,ne,18)#3
chord.util.Timer.resume()V#LocalLoad(Ljava/lang/Object;,0)#18
chord.util.Timer.resume()V#Constant(I,0)#19
chord.util.Timer.resume()V#Put(Z,NONSTATIC,Lchord/util/Timer;,isPaused)#20
chord.util.Timer.resume()V#LocalLoad(Ljava/lang/Object;,0)#21
chord.util.Timer.resume()V#New(Ljava/util/Date;,0)#22
chord.util.Timer.resume()V#Dup(1,0)#23
chord.util.Timer.resume()V#Invoke(SPECIAL,Ljava/util/Date;,<init>,()V)#24
chord.util.Timer.resume()V#Put(Ljava/util/Date;,NONSTATIC,Lchord/util/Timer;,lastResumeDate)#25
chord.util.Timer.resume()V#Return(V)#26
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,1)#139
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(INTERFACE,Lchord/project/ITask;,run,()V)#140
chord.project.analyses.ProgramDom.run()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.analyses.ProgramDom.run()V#Invoke(VIRTUAL,Lchord/project/analyses/ProgramDom;,clear,()V)#1
chord.util.IndexMap.clear()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.IndexMap.clear()V#Get(Ljava/util/List;,NONSTATIC,Lchord/util/IndexMap;,list)#1
chord.util.IndexMap.clear()V#Invoke(INTERFACE,Ljava/util/List;,clear,()V)#2
chord.util.IndexMap.clear()V#LocalLoad(Ljava/lang/Object;,0)#3
chord.util.IndexMap.clear()V#Get(Ljava/util/HashMap;,NONSTATIC,Lchord/util/IndexMap;,hmap)#4
chord.util.IndexMap.clear()V#Invoke(VIRTUAL,Ljava/util/HashMap;,clear,()V)#5
chord.util.IndexMap.clear()V#Return(V)#6
chord.project.analyses.ProgramDom.run()V#LocalLoad(Ljava/lang/Object;,0)#2
chord.project.analyses.ProgramDom.run()V#Invoke(VIRTUAL,Lchord/project/analyses/ProgramDom;,init,()V)#3
chord.project.analyses.ProgramDom.init()V#Return(V)#0
chord.project.analyses.ProgramDom.run()V#LocalLoad(Ljava/lang/Object;,0)#4
chord.project.analyses.ProgramDom.run()V#Invoke(VIRTUAL,Lchord/project/analyses/ProgramDom;,fill,()V)#5
chord.analyses.type.DomT.fill()V#Invoke(STATIC,Lchord/program/Program;,g,()Lchord/program/Program;)#0
chord.analyses.type.DomT.fill()V#LocalStore(Ljava/lang/Object;,1)#1
chord.analyses.type.DomT.fill()V#LocalLoad(Ljava/lang/Object;,1)#2
chord.analyses.type.DomT.fill()V#Invoke(VIRTUAL,Lchord/program/Program;,getTypes,()Lchord/util/IndexSet;)#3
chord.program.Program.getTypes()Lchord/util/IndexSet;#LocalLoad(Ljava/lang/Object;,0)#0
chord.program.Program.getTypes()Lchord/util/IndexSet;#Get(Lchord/util/IndexSet;,NONSTATIC,Lchord/program/Program;,types)#1
chord.program.Program.getTypes()Lchord/util/IndexSet;#Constant(L;,null)#2
chord.program.Program.getTypes()Lchord/util/IndexSet;#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
chord.program.Program.getTypes()Lchord/util/IndexSet;#LocalLoad(Ljava/lang/Object;,0)#4
chord.program.Program.getTypes()Lchord/util/IndexSet;#Invoke(SPECIAL,Lchord/program/Program;,buildClasses,()V)#5
chord.program.Program.buildClasses()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.program.Program.buildClasses()V#Get(Lchord/util/IndexSet;,NONSTATIC,Lchord/program/Program;,methods)#1
chord.program.Program.buildClasses()V#Constant(L;,null)#2
chord.program.Program.buildClasses()V#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
chord.program.Program.buildClasses()V#LocalLoad(Ljava/lang/Object;,0)#4
chord.program.Program.buildClasses()V#Invoke(SPECIAL,Lchord/program/Program;,buildMethods,()V)#5
chord.program.Program.buildMethods()V#Get(Z,STATIC,Lchord/program/Program;,$assertionsDisabled)#0
chord.program.Program.buildMethods()V#Constant(I,0)#1
chord.program.Program.buildMethods()V#ConditionalBranch(I,ne,11)#2
chord.program.Program.buildMethods()V#LocalLoad(Ljava/lang/Object;,0)#3
chord.program.Program.buildMethods()V#Get(Lchord/util/IndexSet;,NONSTATIC,Lchord/program/Program;,methods)#4
chord.program.Program.buildMethods()V#Constant(L;,null)#5
chord.program.Program.buildMethods()V#ConditionalBranch(Ljava/lang/Object;,eq,11)#6
chord.program.Program.buildMethods()V#Get(Z,STATIC,Lchord/program/Program;,$assertionsDisabled)#11
chord.program.Program.buildMethods()V#Constant(I,0)#12
chord.program.Program.buildMethods()V#ConditionalBranch(I,ne,22)#13
chord.program.Program.buildMethods()V#LocalLoad(Ljava/lang/Object;,0)#14
chord.program.Program.buildMethods()V#Get(Lchord/program/Reflect;,NONSTATIC,Lchord/program/Program;,reflect)#15
chord.program.Program.buildMethods()V#Constant(L;,null)#16
chord.program.Program.buildMethods()V#ConditionalBranch(Ljava/lang/Object;,eq,22)#17
chord.program.Program.buildMethods()V#Get(Z,STATIC,Lchord/program/Program;,$assertionsDisabled)#22
chord.program.Program.buildMethods()V#Constant(I,0)#23
chord.program.Program.buildMethods()V#ConditionalBranch(I,ne,33)#24
chord.program.Program.buildMethods()V#LocalLoad(Ljava/lang/Object;,0)#25
chord.program.Program.buildMethods()V#Get(Ljava/util/Map;,NONSTATIC,Lchord/program/Program;,signToMethodMap)#26
chord.program.Program.buildMethods()V#Constant(L;,null)#27
chord.program.Program.buildMethods()V#ConditionalBranch(Ljava/lang/Object;,eq,33)#28
chord.program.Program.buildMethods()V#New(Ljava/io/File;,0)#33
chord.program.Program.buildMethods()V#Dup(1,0)#34
chord.program.Program.buildMethods()V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,methodsFileName)#35
chord.program.Program.buildMethods()V#Invoke(SPECIAL,Ljava/io/File;,<init>,(Ljava/lang/String;)V)#36
chord.program.Program.buildMethods()V#LocalStore(Ljava/lang/Object;,1)#37
chord.program.Program.buildMethods()V#New(Ljava/io/File;,0)#38
chord.program.Program.buildMethods()V#Dup(1,0)#39
chord.program.Program.buildMethods()V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,reflectFileName)#40
chord.program.Program.buildMethods()V#Invoke(SPECIAL,Ljava/io/File;,<init>,(Ljava/lang/String;)V)#41
chord.program.Program.buildMethods()V#LocalStore(Ljava/lang/Object;,2)#42
chord.program.Program.buildMethods()V#Get(Z,STATIC,Lchord/project/Config;,reuseScope)#43
chord.program.Program.buildMethods()V#Constant(I,0)#44
chord.program.Program.buildMethods()V#ConditionalBranch(I,eq,63)#45
chord.program.Program.buildMethods()V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,scopeKind)#63
chord.program.Program.buildMethods()V#LocalStore(Ljava/lang/Object;,3)#64
chord.program.Program.buildMethods()V#Constant(L;,null)#65
chord.program.Program.buildMethods()V#LocalStore(Ljava/lang/Object;,4)#66
chord.program.Program.buildMethods()V#LocalLoad(Ljava/lang/Object;,3)#67
chord.program.Program.buildMethods()V#Constant(Ljava/lang/String;,"rta")#68
chord.program.Program.buildMethods()V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#69
chord.program.Program.buildMethods()V#Constant(I,0)#70
chord.program.Program.buildMethods()V#ConditionalBranch(I,eq,78)#71
chord.program.Program.buildMethods()V#New(Lchord/program/RTA;,0)#72
chord.program.RTA.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@f7d74ec5)#0
chord.program.RTA.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.program.RTA.<clinit>()V#Constant(I,0)#2
chord.program.RTA.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.program.RTA.<clinit>()V#Constant(I,0)#6
chord.program.RTA.<clinit>()V#Put(Z,STATIC,Lchord/program/RTA;,$assertionsDisabled)#7
chord.program.RTA.<clinit>()V#Return(V)#8
chord.program.Program.buildMethods()V#Dup(1,0)#73
chord.program.Program.buildMethods()V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,reflectKind)#74
chord.program.Program.buildMethods()V#Invoke(SPECIAL,Lchord/program/RTA;,<init>,(Ljava/lang/String;)V)#75
chord.program.RTA.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.program.RTA.<init>(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
chord.program.RTA.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#2
chord.program.RTA.<init>(Ljava/lang/String;)V#Constant(I,1)#3
chord.program.RTA.<init>(Ljava/lang/String;)V#Put(Z,NONSTATIC,Lchord/program/RTA;,repeat)#4
chord.program.RTA.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#5
chord.program.RTA.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#6
chord.program.RTA.<init>(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lchord/program/RTA;,reflectKind)#7
chord.program.RTA.<init>(Ljava/lang/String;)V#Return(V)#8
chord.program.Program.buildMethods()V#LocalStore(Ljava/lang/Object;,4)#76
chord.program.Program.buildMethods()V#Goto(125)#77
chord.program.Program.buildMethods()V#LocalLoad(Ljava/lang/Object;,0)#125
chord.program.Program.buildMethods()V#LocalLoad(Ljava/lang/Object;,4)#126
chord.program.Program.buildMethods()V#Invoke(INTERFACE,Lchord/program/ScopeBuilder;,getMethods,()Lchord/util/IndexSet;)#127
chord.program.RTA.getMethods()Lchord/util/IndexSet;#LocalLoad(Ljava/lang/Object;,0)#0
chord.program.RTA.getMethods()Lchord/util/IndexSet;#Get(Lchord/util/IndexSet;,NONSTATIC,Lchord/program/RTA;,methods)#1
chord.program.RTA.getMethods()Lchord/util/IndexSet;#Constant(L;,null)#2
chord.program.RTA.getMethods()Lchord/util/IndexSet;#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
chord.program.RTA.getMethods()Lchord/util/IndexSet;#LocalLoad(Ljava/lang/Object;,0)#4
chord.program.RTA.getMethods()Lchord/util/IndexSet;#Invoke(VIRTUAL,Lchord/program/RTA;,build,()V)#5
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.program.RTA.build()V#New(Lchord/util/IndexSet;,0)#1
chord.program.RTA.build()V#Dup(1,0)#2
chord.program.RTA.build()V#Invoke(SPECIAL,Lchord/util/IndexSet;,<init>,()V)#3
chord.util.IndexSet.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.IndexSet.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
chord.util.IndexSet.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
chord.util.IndexSet.<init>()V#New(Ljava/util/ArrayList;,0)#3
chord.util.IndexSet.<init>()V#Dup(1,0)#4
chord.util.IndexSet.<init>()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#5
chord.util.IndexSet.<init>()V#Put(Ljava/util/List;,NONSTATIC,Lchord/util/IndexSet;,list)#6
chord.util.IndexSet.<init>()V#LocalLoad(Ljava/lang/Object;,0)#7
chord.util.IndexSet.<init>()V#New(Ljava/util/HashSet;,0)#8
chord.util.IndexSet.<init>()V#Dup(1,0)#9
chord.util.IndexSet.<init>()V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#10
chord.util.IndexSet.<init>()V#Put(Ljava/util/HashSet;,NONSTATIC,Lchord/util/IndexSet;,hset)#11
chord.util.IndexSet.<init>()V#Return(V)#12
chord.program.RTA.build()V#Put(Lchord/util/IndexSet;,NONSTATIC,Lchord/program/RTA;,classes)#4
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,0)#5
chord.program.RTA.build()V#New(Ljava/util/HashSet;,0)#6
chord.program.RTA.build()V#Dup(1,0)#7
chord.program.RTA.build()V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#8
chord.program.RTA.build()V#Put(Ljava/util/Set;,NONSTATIC,Lchord/program/RTA;,classesVisitedForClinit)#9
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,0)#10
chord.program.RTA.build()V#New(Lchord/util/IndexSet;,0)#11
chord.program.RTA.build()V#Dup(1,0)#12
chord.program.RTA.build()V#Invoke(SPECIAL,Lchord/util/IndexSet;,<init>,()V)#13
chord.program.RTA.build()V#Put(Lchord/util/IndexSet;,NONSTATIC,Lchord/program/RTA;,reachableAllocClasses)#14
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,0)#15
chord.program.RTA.build()V#New(Lchord/util/IndexSet;,0)#16
chord.program.RTA.build()V#Dup(1,0)#17
chord.program.RTA.build()V#Invoke(SPECIAL,Lchord/util/IndexSet;,<init>,()V)#18
chord.program.RTA.build()V#Put(Lchord/util/IndexSet;,NONSTATIC,Lchord/program/RTA;,methods)#19
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,0)#20
chord.program.RTA.build()V#New(Ljava/util/ArrayList;,0)#21
chord.program.RTA.build()V#Dup(1,0)#22
chord.program.RTA.build()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#23
chord.program.RTA.build()V#Put(Ljava/util/List;,NONSTATIC,Lchord/program/RTA;,methodWorklist)#24
chord.program.RTA.build()V#Get(I,STATIC,Lchord/project/Config;,verbose)#25
chord.program.RTA.build()V#Constant(I,1)#26
chord.program.RTA.build()V#ConditionalBranch(I,lt,31)#27
chord.program.RTA.build()V#Get(Ljava/io/PrintStream;,STATIC,Ljava/lang/System;,out)#28
chord.program.RTA.build()V#Constant(Ljava/lang/String;,"ENTER: RTA")#29
chord.program.RTA.build()V#Invoke(VIRTUAL,Ljava/io/PrintStream;,println,(Ljava/lang/String;)V)#30
chord.program.RTA.build()V#New(Lchord/util/Timer;,0)#31
chord.program.RTA.build()V#Dup(1,0)#32
chord.program.RTA.build()V#Invoke(SPECIAL,Lchord/util/Timer;,<init>,()V)#33
chord.util.Timer.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.Timer.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
chord.util.Timer.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
chord.util.Timer.<init>()V#Constant(J,0)#3
chord.util.Timer.<init>()V#Put(J,NONSTATIC,Lchord/util/Timer;,elapsedExclusiveTime)#4
chord.util.Timer.<init>()V#LocalLoad(Ljava/lang/Object;,0)#5
chord.util.Timer.<init>()V#Constant(L;,null)#6
chord.util.Timer.<init>()V#Put(Ljava/util/Date;,NONSTATIC,Lchord/util/Timer;,initDate)#7
chord.util.Timer.<init>()V#LocalLoad(Ljava/lang/Object;,0)#8
chord.util.Timer.<init>()V#Constant(L;,null)#9
chord.util.Timer.<init>()V#Put(Ljava/util/Date;,NONSTATIC,Lchord/util/Timer;,lastResumeDate)#10
chord.util.Timer.<init>()V#LocalLoad(Ljava/lang/Object;,0)#11
chord.util.Timer.<init>()V#Constant(L;,null)#12
chord.util.Timer.<init>()V#Put(Ljava/util/Date;,NONSTATIC,Lchord/util/Timer;,doneDate)#13
chord.util.Timer.<init>()V#LocalLoad(Ljava/lang/Object;,0)#14
chord.util.Timer.<init>()V#Constant(I,0)#15
chord.util.Timer.<init>()V#Put(Z,NONSTATIC,Lchord/util/Timer;,isPaused)#16
chord.util.Timer.<init>()V#LocalLoad(Ljava/lang/Object;,0)#17
chord.util.Timer.<init>()V#Constant(L;,null)#18
chord.util.Timer.<init>()V#Put(Ljava/lang/String;,NONSTATIC,Lchord/util/Timer;,name)#19
chord.util.Timer.<init>()V#Return(V)#20
chord.program.RTA.build()V#LocalStore(Ljava/lang/Object;,1)#34
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,1)#35
chord.program.RTA.build()V#Invoke(VIRTUAL,Lchord/util/Timer;,init,()V)#36
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,0)#37
chord.program.RTA.build()V#Get(Ljava/lang/String;,NONSTATIC,Lchord/program/RTA;,reflectKind)#38
chord.program.RTA.build()V#Constant(Ljava/lang/String;,"static")#39
chord.program.RTA.build()V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#40
chord.program.RTA.build()V#Constant(I,0)#41
chord.program.RTA.build()V#ConditionalBranch(I,eq,59)#42
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,0)#59
chord.program.RTA.build()V#Get(Ljava/lang/String;,NONSTATIC,Lchord/program/RTA;,reflectKind)#60
chord.program.RTA.build()V#Constant(Ljava/lang/String;,"static_cast")#61
chord.program.RTA.build()V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#62
chord.program.RTA.build()V#Constant(I,0)#63
chord.program.RTA.build()V#ConditionalBranch(I,eq,85)#64
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,0)#85
chord.program.RTA.build()V#Get(Ljava/lang/String;,NONSTATIC,Lchord/program/RTA;,reflectKind)#86
chord.program.RTA.build()V#Constant(Ljava/lang/String;,"dynamic")#87
chord.program.RTA.build()V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#88
chord.program.RTA.build()V#Constant(I,0)#89
chord.program.RTA.build()V#ConditionalBranch(I,eq,118)#90
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,0)#118
chord.program.RTA.build()V#New(Lchord/program/Reflect;,0)#119
chord.program.RTA.build()V#Dup(1,0)#120
chord.program.RTA.build()V#Invoke(SPECIAL,Lchord/program/Reflect;,<init>,()V)#121
chord.program.Reflect.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.program.Reflect.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
chord.program.Reflect.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
chord.program.Reflect.<init>()V#New(Ljava/util/ArrayList;,0)#3
chord.program.Reflect.<init>()V#Dup(1,0)#4
chord.program.Reflect.<init>()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#5
chord.program.Reflect.<init>()V#Put(Ljava/util/List;,NONSTATIC,Lchord/program/Reflect;,resolvedClsForNameSites)#6
chord.program.Reflect.<init>()V#LocalLoad(Ljava/lang/Object;,0)#7
chord.program.Reflect.<init>()V#New(Ljava/util/ArrayList;,0)#8
chord.program.Reflect.<init>()V#Dup(1,0)#9
chord.program.Reflect.<init>()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#10
chord.program.Reflect.<init>()V#Put(Ljava/util/List;,NONSTATIC,Lchord/program/Reflect;,resolvedObjNewInstSites)#11
chord.program.Reflect.<init>()V#LocalLoad(Ljava/lang/Object;,0)#12
chord.program.Reflect.<init>()V#New(Ljava/util/ArrayList;,0)#13
chord.program.Reflect.<init>()V#Dup(1,0)#14
chord.program.Reflect.<init>()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#15
chord.program.Reflect.<init>()V#Put(Ljava/util/List;,NONSTATIC,Lchord/program/Reflect;,resolvedConNewInstSites)#16
chord.program.Reflect.<init>()V#LocalLoad(Ljava/lang/Object;,0)#17
chord.program.Reflect.<init>()V#New(Ljava/util/ArrayList;,0)#18
chord.program.Reflect.<init>()V#Dup(1,0)#19
chord.program.Reflect.<init>()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#20
chord.program.Reflect.<init>()V#Put(Ljava/util/List;,NONSTATIC,Lchord/program/Reflect;,resolvedAryNewInstSites)#21
chord.program.Reflect.<init>()V#Return(V)#22
chord.program.RTA.build()V#Put(Lchord/program/Reflect;,NONSTATIC,Lchord/program/RTA;,reflect)#122
chord.program.RTA.build()V#Invoke(STATIC,Ljoeq/Main/HostedVM;,initialize,()V)#123
joeq.Main.HostedVM.<clinit>()V#New(Ljoeq/Main/HostedVM$BogusHeapAddress;,0)#0
joeq.Memory.Address.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#0
joeq.Memory.Address.<clinit>()V#Constant(Ljava/lang/String;,"Ljoeq/Memory/Address;")#1
joeq.Memory.Address.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#2
joeq.Memory.Address.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#3
joeq.Memory.Address.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Memory/Address;,_class)#4
joeq.Memory.Address.<clinit>()V#Return(V)#5
joeq.Memory.HeapAddress.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#0
joeq.Memory.HeapAddress.<clinit>()V#Constant(Ljava/lang/String;,"Ljoeq/Memory/HeapAddress;")#1
joeq.Memory.HeapAddress.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#2
joeq.Memory.HeapAddress.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#3
joeq.Memory.HeapAddress.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Memory/HeapAddress;,_class)#4
joeq.Memory.HeapAddress.<clinit>()V#Get(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Memory/HeapAddress;,_class)#5
joeq.Memory.HeapAddress.<clinit>()V#Constant(Ljava/lang/String;,"FACTORY")#6
joeq.Memory.HeapAddress.<clinit>()V#Constant(Ljava/lang/String;,"Ljoeq/Memory/HeapAddress$HeapAddressFactory;")#7
joeq.Memory.HeapAddress.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getOrCreateStaticField,(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_StaticField;)#8
joeq.Memory.HeapAddress.<clinit>()V#Put(Ljoeq/Class/jq_StaticField;,STATIC,Ljoeq/Memory/HeapAddress;,_FACTORY)#9
joeq.Memory.HeapAddress.<clinit>()V#Return(V)#10
joeq.Main.HostedVM.<clinit>()V#Dup(1,0)#1
joeq.Main.HostedVM.<clinit>()V#Constant(L;,null)#2
joeq.Main.HostedVM.<clinit>()V#Invoke(SPECIAL,Ljoeq/Main/HostedVM$BogusHeapAddress;,<init>,(Ljoeq/Main/HostedVM$1;)V)#3
joeq.Main.HostedVM$BogusHeapAddress.<init>(Ljoeq/Main/HostedVM$1;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Main.HostedVM$BogusHeapAddress.<init>(Ljoeq/Main/HostedVM$1;)V#Invoke(SPECIAL,Ljoeq/Main/HostedVM$BogusHeapAddress;,<init>,()V)#1
joeq.Main.HostedVM$BogusHeapAddress.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Main.HostedVM$BogusHeapAddress.<init>()V#Invoke(SPECIAL,Ljoeq/Memory/HeapAddress;,<init>,()V)#1
joeq.Memory.HeapAddress.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Memory.HeapAddress.<init>()V#Invoke(SPECIAL,Ljoeq/Memory/Address;,<init>,()V)#1
joeq.Memory.Address.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Memory.Address.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Memory.Address.<init>()V#Return(V)#2
joeq.Memory.HeapAddress.<init>()V#Return(V)#2
joeq.Main.HostedVM$BogusHeapAddress.<init>()V#Return(V)#2
joeq.Main.HostedVM$BogusHeapAddress.<init>(Ljoeq/Main/HostedVM$1;)V#Return(V)#2
joeq.Main.HostedVM.<clinit>()V#Put(Ljoeq/Main/HostedVM$BogusHeapAddress;,STATIC,Ljoeq/Main/HostedVM;,bogus_heap_address)#4
joeq.Main.HostedVM.<clinit>()V#Return(V)#5
joeq.Main.HostedVM.initialize()V#Get(Z,STATIC,Ljoeq/Main/jq;,RunningNative)#0
joeq.Main.HostedVM.initialize()V#Constant(I,0)#1
joeq.Main.HostedVM.initialize()V#ConditionalBranch(I,eq,4)#2
joeq.Main.HostedVM.initialize()V#Constant(I,1)#4
joeq.Main.HostedVM.initialize()V#Put(Z,STATIC,Ljoeq/Main/jq;,DontCompile)#5
joeq.Main.HostedVM.initialize()V#New(Ljoeq/Main/HostedVM$1;,0)#6
joeq.Main.HostedVM.initialize()V#Dup(1,0)#7
joeq.Main.HostedVM.initialize()V#Invoke(SPECIAL,Ljoeq/Main/HostedVM$1;,<init>,()V)#8
joeq.Main.HostedVM$1.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Main.HostedVM$1.<init>()V#Invoke(SPECIAL,Ljoeq/Memory/CodeAddress$CodeAddressFactory;,<init>,()V)#1
joeq.Memory.CodeAddress$CodeAddressFactory.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Memory.CodeAddress$CodeAddressFactory.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Memory.CodeAddress$CodeAddressFactory.<init>()V#Return(V)#2
joeq.Main.HostedVM$1.<init>()V#Return(V)#2
joeq.Main.HostedVM.initialize()V#Put(Ljoeq/Memory/CodeAddress$CodeAddressFactory;,STATIC,Ljoeq/Memory/CodeAddress;,FACTORY)#9
joeq.Memory.CodeAddress.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#0
joeq.Memory.CodeAddress.<clinit>()V#Constant(Ljava/lang/String;,"Ljoeq/Memory/CodeAddress;")#1
joeq.Memory.CodeAddress.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#2
joeq.Memory.CodeAddress.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#3
joeq.Memory.CodeAddress.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Memory/CodeAddress;,_class)#4
joeq.Memory.CodeAddress.<clinit>()V#Get(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Memory/CodeAddress;,_class)#5
joeq.Memory.CodeAddress.<clinit>()V#Constant(Ljava/lang/String;,"FACTORY")#6
joeq.Memory.CodeAddress.<clinit>()V#Constant(Ljava/lang/String;,"Ljoeq/Memory/CodeAddress$CodeAddressFactory;")#7
joeq.Memory.CodeAddress.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getOrCreateStaticField,(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_StaticField;)#8
joeq.Memory.CodeAddress.<clinit>()V#Put(Ljoeq/Class/jq_StaticField;,STATIC,Ljoeq/Memory/CodeAddress;,_FACTORY)#9
joeq.Memory.CodeAddress.<clinit>()V#Return(V)#10
joeq.Main.HostedVM.initialize()V#New(Ljoeq/Main/HostedVM$2;,0)#10
joeq.Main.HostedVM.initialize()V#Dup(1,0)#11
joeq.Main.HostedVM.initialize()V#Invoke(SPECIAL,Ljoeq/Main/HostedVM$2;,<init>,()V)#12
joeq.Main.HostedVM$2.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Main.HostedVM$2.<init>()V#Invoke(SPECIAL,Ljoeq/Memory/HeapAddress$HeapAddressFactory;,<init>,()V)#1
joeq.Memory.HeapAddress$HeapAddressFactory.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Memory.HeapAddress$HeapAddressFactory.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Memory.HeapAddress$HeapAddressFactory.<init>()V#Return(V)#2
joeq.Main.HostedVM$2.<init>()V#Return(V)#2
joeq.Main.HostedVM.initialize()V#Put(Ljoeq/Memory/HeapAddress$HeapAddressFactory;,STATIC,Ljoeq/Memory/HeapAddress;,FACTORY)#13
joeq.Main.HostedVM.initialize()V#New(Ljoeq/Main/HostedVM$3;,0)#14
joeq.Main.HostedVM.initialize()V#Dup(1,0)#15
joeq.Main.HostedVM.initialize()V#Invoke(SPECIAL,Ljoeq/Main/HostedVM$3;,<init>,()V)#16
joeq.Main.HostedVM$3.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Main.HostedVM$3.<init>()V#Invoke(SPECIAL,Ljoeq/Memory/StackAddress$StackAddressFactory;,<init>,()V)#1
joeq.Memory.StackAddress$StackAddressFactory.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Memory.StackAddress$StackAddressFactory.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Memory.StackAddress$StackAddressFactory.<init>()V#Return(V)#2
joeq.Main.HostedVM$3.<init>()V#Return(V)#2
joeq.Main.HostedVM.initialize()V#Put(Ljoeq/Memory/StackAddress$StackAddressFactory;,STATIC,Ljoeq/Memory/StackAddress;,FACTORY)#17
joeq.Memory.StackAddress.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#0
joeq.Memory.StackAddress.<clinit>()V#Constant(Ljava/lang/String;,"Ljoeq/Memory/StackAddress;")#1
joeq.Memory.StackAddress.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#2
joeq.Memory.StackAddress.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#3
joeq.Memory.StackAddress.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Memory/StackAddress;,_class)#4
joeq.Memory.StackAddress.<clinit>()V#Get(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Memory/StackAddress;,_class)#5
joeq.Memory.StackAddress.<clinit>()V#Constant(Ljava/lang/String;,"FACTORY")#6
joeq.Memory.StackAddress.<clinit>()V#Constant(Ljava/lang/String;,"Ljoeq/Memory/StackAddress$StackAddressFactory;")#7
joeq.Memory.StackAddress.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getOrCreateStaticField,(Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_StaticField;)#8
joeq.Memory.StackAddress.<clinit>()V#Put(Ljoeq/Class/jq_StaticField;,STATIC,Ljoeq/Memory/StackAddress;,_FACTORY)#9
joeq.Memory.StackAddress.<clinit>()V#Return(V)#10
joeq.Main.HostedVM.initialize()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#18
joeq.Main.HostedVM.initialize()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getClasspath,()Ljoeq/Class/Classpath;)#19
joeq.Class.PrimordialClassLoader.getClasspath()Ljoeq/Class/Classpath;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.PrimordialClassLoader.getClasspath()Ljoeq/Class/Classpath;#Get(Ljoeq/Class/Classpath;,NONSTATIC,Ljoeq/Class/PrimordialClassLoader;,classpath)#1
joeq.Class.PrimordialClassLoader.getClasspath()Ljoeq/Class/Classpath;#Return(Ljava/lang/Object;)#2
joeq.Main.HostedVM.initialize()V#Invoke(VIRTUAL,Ljoeq/Class/Classpath;,addFullClasspath,()V)#20
joeq.Class.Classpath.addFullClasspath()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.Classpath.addFullClasspath()V#Constant(Ljava/lang/String;,"sun.boot.class.path")#1
joeq.Class.Classpath.addFullClasspath()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#2
joeq.Class.Classpath.addFullClasspath()V#Invoke(VIRTUAL,Ljoeq/Class/Classpath;,addToClasspath,(Ljava/lang/String;)V)#3
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#0
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Invoke(STATIC,Ljoeq/Class/Classpath;,classpaths,(Ljava/lang/String;)Ljava/util/Iterator;)#1
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#Get(Ljava/lang/String;,STATIC,Ljoeq/Class/Classpath;,pathsep)#1
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#Invoke(VIRTUAL,Ljava/lang/String;,startsWith,(Ljava/lang/String;)Z)#2
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#Constant(I,0)#3
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#ConditionalBranch(I,ne,14)#4
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#New(Ljava/lang/StringBuilder;,0)#5
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#Dup(1,0)#6
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#7
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#Get(Ljava/lang/String;,STATIC,Ljoeq/Class/Classpath;,pathsep)#8
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#9
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#10
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#11
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#12
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#LocalStore(Ljava/lang/Object;,0)#13
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#14
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#Get(Ljava/lang/String;,STATIC,Ljoeq/Class/Classpath;,pathsep)#15
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#Invoke(VIRTUAL,Ljava/lang/String;,endsWith,(Ljava/lang/String;)Z)#16
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#Constant(I,0)#17
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#ConditionalBranch(I,ne,28)#18
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#New(Ljava/lang/StringBuilder;,0)#19
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#Dup(1,0)#20
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#21
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#22
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#23
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#Get(Ljava/lang/String;,STATIC,Ljoeq/Class/Classpath;,pathsep)#24
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#25
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#26
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#LocalStore(Ljava/lang/Object;,0)#27
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#28
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#LocalStore(Ljava/lang/Object;,1)#29
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#New(Ljoeq/Class/Classpath$2;,0)#30
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#Dup(1,0)#31
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,1)#32
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#Invoke(SPECIAL,Ljoeq/Class/Classpath$2;,<init>,(Ljava/lang/String;)V)#33
joeq.Class.Classpath$2.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.Classpath$2.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Class.Classpath$2.<init>(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Ljoeq/Class/Classpath$2;,val$cp)#2
joeq.Class.Classpath$2.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.Classpath$2.<init>(Ljava/lang/String;)V#Invoke(SPECIAL,Ljwutil/collections/UnmodifiableIterator;,<init>,()V)#4
joeq.Class.Classpath$2.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Class.Classpath$2.<init>(Ljava/lang/String;)V#Constant(I,0)#6
joeq.Class.Classpath$2.<init>(Ljava/lang/String;)V#Put(I,NONSTATIC,Ljoeq/Class/Classpath$2;,i)#7
joeq.Class.Classpath$2.<init>(Ljava/lang/String;)V#Return(V)#8
joeq.Class.Classpath.classpaths(Ljava/lang/String;)Ljava/util/Iterator;#Return(Ljava/lang/Object;)#34
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,2)#2
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#3
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#4
joeq.Class.Classpath$2.hasNext()Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.Classpath$2.hasNext()Z#Get(Ljava/lang/String;,NONSTATIC,Ljoeq/Class/Classpath$2;,val$cp)#1
joeq.Class.Classpath$2.hasNext()Z#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#2
joeq.Class.Classpath$2.hasNext()Z#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.Classpath$2.hasNext()Z#Get(I,NONSTATIC,Ljoeq/Class/Classpath$2;,i)#4
joeq.Class.Classpath$2.hasNext()Z#Get(Ljava/lang/String;,STATIC,Ljoeq/Class/Classpath;,pathsep)#5
joeq.Class.Classpath$2.hasNext()Z#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#6
joeq.Class.Classpath$2.hasNext()Z#BinaryOp(I,add)#7
joeq.Class.Classpath$2.hasNext()Z#ConditionalBranch(I,le,11)#8
joeq.Class.Classpath$2.hasNext()Z#Constant(I,1)#9
joeq.Class.Classpath$2.hasNext()Z#Goto(12)#10
joeq.Class.Classpath$2.hasNext()Z#Return(I)#12
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Constant(I,0)#5
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#ConditionalBranch(I,eq,82)#6
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#7
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#8
joeq.Class.Classpath$2.next()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.Classpath$2.next()Ljava/lang/Object;#Dup(1,0)#1
joeq.Class.Classpath$2.next()Ljava/lang/Object;#Get(I,NONSTATIC,Ljoeq/Class/Classpath$2;,i)#2
joeq.Class.Classpath$2.next()Ljava/lang/Object;#Get(Ljava/lang/String;,STATIC,Ljoeq/Class/Classpath;,pathsep)#3
joeq.Class.Classpath$2.next()Ljava/lang/Object;#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#4
joeq.Class.Classpath$2.next()Ljava/lang/Object;#BinaryOp(I,add)#5
joeq.Class.Classpath$2.next()Ljava/lang/Object;#Put(I,NONSTATIC,Ljoeq/Class/Classpath$2;,i)#6
joeq.Class.Classpath$2.next()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#7
joeq.Class.Classpath$2.next()Ljava/lang/Object;#Get(Ljava/lang/String;,NONSTATIC,Ljoeq/Class/Classpath$2;,val$cp)#8
joeq.Class.Classpath$2.next()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#9
joeq.Class.Classpath$2.next()Ljava/lang/Object;#Get(I,NONSTATIC,Ljoeq/Class/Classpath$2;,i)#10
joeq.Class.Classpath$2.next()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#11
joeq.Class.Classpath$2.next()Ljava/lang/Object;#Get(Ljava/lang/String;,NONSTATIC,Ljoeq/Class/Classpath$2;,val$cp)#12
joeq.Class.Classpath$2.next()Ljava/lang/Object;#Get(Ljava/lang/String;,STATIC,Ljoeq/Class/Classpath;,pathsep)#13
joeq.Class.Classpath$2.next()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#14
joeq.Class.Classpath$2.next()Ljava/lang/Object;#Get(I,NONSTATIC,Ljoeq/Class/Classpath$2;,i)#15
joeq.Class.Classpath$2.next()Ljava/lang/Object;#Invoke(VIRTUAL,Ljava/lang/String;,indexOf,(Ljava/lang/String;I)I)#16
joeq.Class.Classpath$2.next()Ljava/lang/Object;#Invoke(VIRTUAL,Ljava/lang/String;,substring,(II)Ljava/lang/String;)#17
joeq.Class.Classpath$2.next()Ljava/lang/Object;#LocalStore(Ljava/lang/Object;,1)#18
joeq.Class.Classpath$2.next()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#19
joeq.Class.Classpath$2.next()Ljava/lang/Object;#Dup(1,0)#20
joeq.Class.Classpath$2.next()Ljava/lang/Object;#Get(I,NONSTATIC,Ljoeq/Class/Classpath$2;,i)#21
joeq.Class.Classpath$2.next()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,1)#22
joeq.Class.Classpath$2.next()Ljava/lang/Object;#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#23
joeq.Class.Classpath$2.next()Ljava/lang/Object;#BinaryOp(I,add)#24
joeq.Class.Classpath$2.next()Ljava/lang/Object;#Put(I,NONSTATIC,Ljoeq/Class/Classpath$2;,i)#25
joeq.Class.Classpath$2.next()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,1)#26
joeq.Class.Classpath$2.next()Ljava/lang/Object;#Return(Ljava/lang/Object;)#27
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#CheckCast(Ljava/lang/String;)#9
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,3)#10
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#11
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Get(Ljava/util/Set;,NONSTATIC,Ljoeq/Class/Classpath;,duplicates)#12
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#13
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#14
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Constant(I,0)#15
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#ConditionalBranch(I,eq,81)#16
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#17
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,toLowerCase,()Ljava/lang/String;)#18
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Constant(Ljava/lang/String;,".zip")#19
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,endsWith,(Ljava/lang/String;)Z)#20
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Constant(I,0)#21
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#ConditionalBranch(I,ne,29)#22
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#23
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,toLowerCase,()Ljava/lang/String;)#24
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Constant(Ljava/lang/String;,".jar")#25
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,endsWith,(Ljava/lang/String;)Z)#26
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Constant(I,0)#27
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#ConditionalBranch(I,eq,58)#28
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Get(Z,STATIC,Ljoeq/Class/Classpath;,TRACE)#29
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Constant(I,0)#30
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#ConditionalBranch(I,eq,44)#31
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#44
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Get(Ljava/util/List;,NONSTATIC,Ljoeq/Class/Classpath;,classpathList)#45
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#New(Ljoeq/Class/ZipFileElement;,0)#46
joeq.Class.ClasspathElement.<clinit>()V#Constant(I,0)#0
joeq.Class.ClasspathElement.<clinit>()V#Put(Z,STATIC,Ljoeq/Class/ClasspathElement;,TRACE)#1
joeq.Class.ClasspathElement.<clinit>()V#Return(V)#2
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Dup(1,0)#47
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#New(Ljava/util/zip/ZipFile;,0)#48
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Dup(1,0)#49
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#50
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/util/zip/ZipFile;,<init>,(Ljava/lang/String;)V)#51
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Invoke(SPECIAL,Ljoeq/Class/ZipFileElement;,<init>,(Ljava/util/zip/ZipFile;)V)#52
joeq.Class.ZipFileElement.<init>(Ljava/util/zip/ZipFile;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.ZipFileElement.<init>(Ljava/util/zip/ZipFile;)V#Invoke(SPECIAL,Ljoeq/Class/ClasspathElement;,<init>,()V)#1
joeq.Class.ClasspathElement.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.ClasspathElement.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Class.ClasspathElement.<init>()V#Return(V)#2
joeq.Class.ZipFileElement.<init>(Ljava/util/zip/ZipFile;)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Class.ZipFileElement.<init>(Ljava/util/zip/ZipFile;)V#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Class.ZipFileElement.<init>(Ljava/util/zip/ZipFile;)V#Put(Ljava/util/zip/ZipFile;,NONSTATIC,Ljoeq/Class/ZipFileElement;,zf)#4
joeq.Class.ZipFileElement.<init>(Ljava/util/zip/ZipFile;)V#Return(V)#5
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#53
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Pop(1)#54
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Goto(81)#55
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Goto(3)#81
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,4)#56
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Goto(81)#57
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Get(Z,STATIC,Ljoeq/Class/Classpath;,TRACE)#58
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Constant(I,0)#59
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#ConditionalBranch(I,eq,73)#60
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#73
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Get(Ljava/util/List;,NONSTATIC,Ljoeq/Class/Classpath;,classpathList)#74
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#New(Ljoeq/Class/PathElement;,0)#75
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Dup(1,0)#76
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#77
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Invoke(SPECIAL,Ljoeq/Class/PathElement;,<init>,(Ljava/lang/String;)V)#78
joeq.Class.PathElement.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.PathElement.<init>(Ljava/lang/String;)V#Invoke(SPECIAL,Ljoeq/Class/ClasspathElement;,<init>,()V)#1
joeq.Class.PathElement.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Class.PathElement.<init>(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Class.PathElement.<init>(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Ljoeq/Class/PathElement;,path)#4
joeq.Class.PathElement.<init>(Ljava/lang/String;)V#Return(V)#5
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#79
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Pop(1)#80
joeq.Class.Classpath$2.hasNext()Z#Constant(I,0)#11
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#82
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Get(Ljava/util/List;,NONSTATIC,Ljoeq/Class/Classpath;,classpathList)#83
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#CheckCast(Ljava/util/ArrayList;)#84
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/util/ArrayList;,trimToSize,()V)#85
joeq.Class.Classpath.addToClasspath(Ljava/lang/String;)V#Return(V)#86
joeq.Class.Classpath.addFullClasspath()V#LocalLoad(Ljava/lang/Object;,0)#4
joeq.Class.Classpath.addFullClasspath()V#Invoke(VIRTUAL,Ljoeq/Class/Classpath;,addExtClasspath,()V)#5
joeq.Class.Classpath.addExtClasspath()V#Constant(Ljava/lang/String;,"java.home")#0
joeq.Class.Classpath.addExtClasspath()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#1
joeq.Class.Classpath.addExtClasspath()V#LocalStore(Ljava/lang/Object;,1)#2
joeq.Class.Classpath.addExtClasspath()V#Get(Z,STATIC,Ljoeq/Class/Classpath;,$assertionsDisabled)#3
joeq.Class.Classpath.addExtClasspath()V#Constant(I,0)#4
joeq.Class.Classpath.addExtClasspath()V#ConditionalBranch(I,ne,13)#5
joeq.Class.Classpath.addExtClasspath()V#LocalLoad(Ljava/lang/Object;,1)#6
joeq.Class.Classpath.addExtClasspath()V#Constant(L;,null)#7
joeq.Class.Classpath.addExtClasspath()V#ConditionalBranch(Ljava/lang/Object;,ne,13)#8
joeq.Class.Classpath.addExtClasspath()V#New(Ljava/io/File;,0)#13
joeq.Class.Classpath.addExtClasspath()V#Dup(1,0)#14
joeq.Class.Classpath.addExtClasspath()V#LocalLoad(Ljava/lang/Object;,1)#15
joeq.Class.Classpath.addExtClasspath()V#New(Ljava/lang/StringBuilder;,0)#16
joeq.Class.Classpath.addExtClasspath()V#Dup(1,0)#17
joeq.Class.Classpath.addExtClasspath()V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#18
joeq.Class.Classpath.addExtClasspath()V#Get(Ljava/lang/String;,STATIC,Ljava/io/File;,separator)#19
joeq.Class.Classpath.addExtClasspath()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#20
joeq.Class.Classpath.addExtClasspath()V#Constant(Ljava/lang/String;,"lib")#21
joeq.Class.Classpath.addExtClasspath()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#22
joeq.Class.Classpath.addExtClasspath()V#Get(Ljava/lang/String;,STATIC,Ljava/io/File;,separator)#23
joeq.Class.Classpath.addExtClasspath()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#24
joeq.Class.Classpath.addExtClasspath()V#Constant(Ljava/lang/String;,"ext")#25
joeq.Class.Classpath.addExtClasspath()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#26
joeq.Class.Classpath.addExtClasspath()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#27
joeq.Class.Classpath.addExtClasspath()V#Invoke(SPECIAL,Ljava/io/File;,<init>,(Ljava/lang/String;Ljava/lang/String;)V)#28
joeq.Class.Classpath.addExtClasspath()V#LocalStore(Ljava/lang/Object;,2)#29
joeq.Class.Classpath.addExtClasspath()V#LocalLoad(Ljava/lang/Object;,2)#30
joeq.Class.Classpath.addExtClasspath()V#Invoke(VIRTUAL,Ljava/io/File;,exists,()Z)#31
joeq.Class.Classpath.addExtClasspath()V#Constant(I,0)#32
joeq.Class.Classpath.addExtClasspath()V#ConditionalBranch(I,eq,68)#33
joeq.Class.Classpath.addExtClasspath()V#New(Ljoeq/Class/Classpath$1;,0)#34
joeq.Class.Classpath.addExtClasspath()V#Dup(1,0)#35
joeq.Class.Classpath.addExtClasspath()V#LocalLoad(Ljava/lang/Object;,0)#36
joeq.Class.Classpath.addExtClasspath()V#Invoke(SPECIAL,Ljoeq/Class/Classpath$1;,<init>,(Ljoeq/Class/Classpath;)V)#37
joeq.Class.Classpath$1.<init>(Ljoeq/Class/Classpath;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.Classpath$1.<init>(Ljoeq/Class/Classpath;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Class.Classpath$1.<init>(Ljoeq/Class/Classpath;)V#Put(Ljoeq/Class/Classpath;,NONSTATIC,Ljoeq/Class/Classpath$1;,this$0)#2
joeq.Class.Classpath$1.<init>(Ljoeq/Class/Classpath;)V#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.Classpath$1.<init>(Ljoeq/Class/Classpath;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#4
joeq.Class.Classpath$1.<init>(Ljoeq/Class/Classpath;)V#Return(V)#5
joeq.Class.Classpath.addExtClasspath()V#LocalStore(Ljava/lang/Object;,3)#38
joeq.Class.Classpath.addExtClasspath()V#LocalLoad(Ljava/lang/Object;,2)#39
joeq.Class.Classpath.addExtClasspath()V#LocalLoad(Ljava/lang/Object;,3)#40
joeq.Class.Classpath.addExtClasspath()V#Invoke(VIRTUAL,Ljava/io/File;,listFiles,(Ljava/io/FilenameFilter;)[Ljava/io/File;)#41
joeq.Class.Classpath$1.accept(Ljava/io/File;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,2)#0
joeq.Class.Classpath$1.accept(Ljava/io/File;Ljava/lang/String;)Z#Constant(Ljava/lang/String;,".jar")#1
joeq.Class.Classpath$1.accept(Ljava/io/File;Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/lang/String;,endsWith,(Ljava/lang/String;)Z)#2
joeq.Class.Classpath$1.accept(Ljava/io/File;Ljava/lang/String;)Z#Constant(I,0)#3
joeq.Class.Classpath$1.accept(Ljava/io/File;Ljava/lang/String;)Z#ConditionalBranch(I,eq,7)#4
joeq.Class.Classpath$1.accept(Ljava/io/File;Ljava/lang/String;)Z#Constant(I,1)#5
joeq.Class.Classpath$1.accept(Ljava/io/File;Ljava/lang/String;)Z#Return(I)#6
joeq.Class.Classpath$1.accept(Ljava/io/File;Ljava/lang/String;)Z#Constant(I,0)#7
joeq.Class.Classpath$1.accept(Ljava/io/File;Ljava/lang/String;)Z#Return(I)#8
joeq.Class.Classpath.addExtClasspath()V#LocalStore(Ljava/lang/Object;,4)#42
joeq.Class.Classpath.addExtClasspath()V#LocalLoad(Ljava/lang/Object;,4)#43
joeq.Class.Classpath.addExtClasspath()V#LocalStore(Ljava/lang/Object;,5)#44
joeq.Class.Classpath.addExtClasspath()V#LocalLoad(Ljava/lang/Object;,5)#45
joeq.Class.Classpath.addExtClasspath()V#ArrayLength()#46
joeq.Class.Classpath.addExtClasspath()V#LocalStore(I,6)#47
joeq.Class.Classpath.addExtClasspath()V#Constant(I,0)#48
joeq.Class.Classpath.addExtClasspath()V#LocalStore(I,7)#49
joeq.Class.Classpath.addExtClasspath()V#LocalLoad(I,7)#50
joeq.Class.Classpath.addExtClasspath()V#LocalLoad(I,6)#51
joeq.Class.Classpath.addExtClasspath()V#ConditionalBranch(I,ge,68)#52
joeq.Class.Classpath.addExtClasspath()V#LocalLoad(Ljava/lang/Object;,5)#53
joeq.Class.Classpath.addExtClasspath()V#LocalLoad(I,7)#54
joeq.Class.Classpath.addExtClasspath()V#ArrayLoad(Ljava/lang/Object;)#55
joeq.Class.Classpath.addExtClasspath()V#LocalStore(Ljava/lang/Object;,8)#56
joeq.Class.Classpath.addExtClasspath()V#LocalLoad(Ljava/lang/Object;,8)#57
joeq.Class.Classpath.addExtClasspath()V#Invoke(VIRTUAL,Ljava/io/File;,getAbsolutePath,()Ljava/lang/String;)#58
joeq.Class.Classpath.addExtClasspath()V#LocalStore(Ljava/lang/Object;,9)#59
joeq.Class.Classpath.addExtClasspath()V#LocalLoad(Ljava/lang/Object;,0)#60
joeq.Class.Classpath.addExtClasspath()V#LocalLoad(Ljava/lang/Object;,9)#61
joeq.Class.Classpath.addExtClasspath()V#Invoke(VIRTUAL,Ljoeq/Class/Classpath;,addToClasspath,(Ljava/lang/String;)V)#62
joeq.Class.Classpath.addExtClasspath()V#LocalLoad(I,7)#63
joeq.Class.Classpath.addExtClasspath()V#Constant(I,1)#64
joeq.Class.Classpath.addExtClasspath()V#BinaryOp(I,add)#65
joeq.Class.Classpath.addExtClasspath()V#LocalStore(I,7)#66
joeq.Class.Classpath.addExtClasspath()V#Goto(50)#67
joeq.Class.Classpath.addExtClasspath()V#Return(V)#68
joeq.Class.Classpath.addFullClasspath()V#LocalLoad(Ljava/lang/Object;,0)#6
joeq.Class.Classpath.addFullClasspath()V#Constant(Ljava/lang/String;,"java.class.path")#7
joeq.Class.Classpath.addFullClasspath()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#8
joeq.Class.Classpath.addFullClasspath()V#Invoke(VIRTUAL,Ljoeq/Class/Classpath;,addToClasspath,(Ljava/lang/String;)V)#9
joeq.Class.Classpath.addFullClasspath()V#Return(V)#10
joeq.Main.HostedVM.initialize()V#Get(Ljoeq/ClassLib/Common/Interface;,STATIC,Ljoeq/ClassLib/ClassLibInterface;,DEFAULT)#21
joeq.ClassLib.ClassLibInterface.<clinit>()V#Constant(L;,null)#0
joeq.ClassLib.ClassLibInterface.<clinit>()V#LocalStore(Ljava/lang/Object;,0)#1
joeq.ClassLib.ClassLibInterface.<clinit>()V#Constant(Ljava/lang/String;,"joeq.classlibinterface")#2
joeq.ClassLib.ClassLibInterface.<clinit>()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#3
joeq.ClassLib.ClassLibInterface.<clinit>()V#LocalStore(Ljava/lang/Object;,1)#4
joeq.ClassLib.ClassLibInterface.<clinit>()V#Get(Z,STATIC,Ljoeq/Main/jq;,nullVM)#5
joeq.ClassLib.ClassLibInterface.<clinit>()V#LocalStore(I,2)#6
joeq.ClassLib.ClassLibInterface.<clinit>()V#LocalLoad(Ljava/lang/Object;,1)#7
joeq.ClassLib.ClassLibInterface.<clinit>()V#Constant(L;,null)#8
joeq.ClassLib.ClassLibInterface.<clinit>()V#ConditionalBranch(Ljava/lang/Object;,eq,13)#9
joeq.ClassLib.ClassLibInterface.<clinit>()V#LocalLoad(I,2)#13
joeq.ClassLib.ClassLibInterface.<clinit>()V#Constant(I,0)#14
joeq.ClassLib.ClassLibInterface.<clinit>()V#ConditionalBranch(I,eq,20)#15
joeq.ClassLib.ClassLibInterface.<clinit>()V#New(Ljoeq/ClassLib/Common/NullInterfaceImpl;,0)#16
joeq.ClassLib.ClassLibInterface.<clinit>()V#Dup(1,0)#17
joeq.ClassLib.ClassLibInterface.<clinit>()V#Invoke(SPECIAL,Ljoeq/ClassLib/Common/NullInterfaceImpl;,<init>,()V)#18
joeq.ClassLib.Common.NullInterfaceImpl.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.ClassLib.Common.NullInterfaceImpl.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.ClassLib.Common.NullInterfaceImpl.<init>()V#Return(V)#2
joeq.ClassLib.ClassLibInterface.<clinit>()V#LocalStore(Ljava/lang/Object;,0)#19
joeq.ClassLib.ClassLibInterface.<clinit>()V#LocalLoad(Ljava/lang/Object;,0)#20
joeq.ClassLib.ClassLibInterface.<clinit>()V#Constant(L;,null)#21
joeq.ClassLib.ClassLibInterface.<clinit>()V#ConditionalBranch(Ljava/lang/Object;,ne,278)#22
joeq.ClassLib.ClassLibInterface.<clinit>()V#LocalLoad(Ljava/lang/Object;,0)#278
joeq.ClassLib.ClassLibInterface.<clinit>()V#Constant(L;,null)#279
joeq.ClassLib.ClassLibInterface.<clinit>()V#ConditionalBranch(Ljava/lang/Object;,ne,285)#280
joeq.ClassLib.ClassLibInterface.<clinit>()V#LocalLoad(Ljava/lang/Object;,0)#285
joeq.ClassLib.ClassLibInterface.<clinit>()V#Put(Ljoeq/ClassLib/Common/Interface;,STATIC,Ljoeq/ClassLib/ClassLibInterface;,DEFAULT)#286
joeq.ClassLib.ClassLibInterface.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#287
joeq.ClassLib.ClassLibInterface.<clinit>()V#Constant(Ljava/lang/String;,"Ljoeq/ClassLib/ClassLibInterface;")#288
joeq.ClassLib.ClassLibInterface.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#289
joeq.ClassLib.ClassLibInterface.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#290
joeq.ClassLib.ClassLibInterface.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/ClassLib/ClassLibInterface;,_class)#291
joeq.ClassLib.ClassLibInterface.<clinit>()V#Constant(I,0)#292
joeq.ClassLib.ClassLibInterface.<clinit>()V#Put(Z,STATIC,Ljoeq/ClassLib/ClassLibInterface;,TRACE)#293
joeq.ClassLib.ClassLibInterface.<clinit>()V#Return(V)#294
joeq.Main.HostedVM.initialize()V#Invoke(INTERFACE,Ljoeq/ClassLib/Common/Interface;,getObjectTraverser,()Ljoeq/Runtime/ObjectTraverser;)#22
joeq.ClassLib.Common.NullInterfaceImpl.getObjectTraverser()Ljoeq/Runtime/ObjectTraverser;#Get(Ljoeq/ClassLib/Common/NullInterfaceImpl$NullObjectTraverser;,STATIC,Ljoeq/ClassLib/Common/NullInterfaceImpl$NullObjectTraverser;,INSTANCE)#0
joeq.Runtime.ObjectTraverser.<clinit>()V#Constant(I,0)#0
joeq.Runtime.ObjectTraverser.<clinit>()V#Put(Z,STATIC,Ljoeq/Runtime/ObjectTraverser;,TRACE)#1
joeq.Runtime.ObjectTraverser.<clinit>()V#Get(Ljava/io/PrintStream;,STATIC,Ljava/lang/System;,out)#2
joeq.Runtime.ObjectTraverser.<clinit>()V#Put(Ljava/io/PrintStream;,STATIC,Ljoeq/Runtime/ObjectTraverser;,out)#3
joeq.Runtime.ObjectTraverser.<clinit>()V#New(Ljava/lang/Object;,0)#4
joeq.Runtime.ObjectTraverser.<clinit>()V#Dup(1,0)#5
joeq.Runtime.ObjectTraverser.<clinit>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#6
joeq.Runtime.ObjectTraverser.<clinit>()V#Put(Ljava/lang/Object;,STATIC,Ljoeq/Runtime/ObjectTraverser;,NO_OBJECT)#7
joeq.Runtime.ObjectTraverser.<clinit>()V#Return(V)#8
joeq.ClassLib.Common.NullInterfaceImpl$NullObjectTraverser.<clinit>()V#New(Ljoeq/ClassLib/Common/NullInterfaceImpl$NullObjectTraverser;,0)#0
joeq.ClassLib.Common.NullInterfaceImpl$NullObjectTraverser.<clinit>()V#Dup(1,0)#1
joeq.ClassLib.Common.NullInterfaceImpl$NullObjectTraverser.<clinit>()V#Invoke(SPECIAL,Ljoeq/ClassLib/Common/NullInterfaceImpl$NullObjectTraverser;,<init>,()V)#2
joeq.ClassLib.Common.NullInterfaceImpl$NullObjectTraverser.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.ClassLib.Common.NullInterfaceImpl$NullObjectTraverser.<init>()V#Invoke(SPECIAL,Ljoeq/Runtime/ObjectTraverser;,<init>,()V)#1
joeq.Runtime.ObjectTraverser.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Runtime.ObjectTraverser.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Runtime.ObjectTraverser.<init>()V#Return(V)#2
joeq.ClassLib.Common.NullInterfaceImpl$NullObjectTraverser.<init>()V#Return(V)#2
joeq.ClassLib.Common.NullInterfaceImpl$NullObjectTraverser.<clinit>()V#Put(Ljoeq/ClassLib/Common/NullInterfaceImpl$NullObjectTraverser;,STATIC,Ljoeq/ClassLib/Common/NullInterfaceImpl$NullObjectTraverser;,INSTANCE)#3
joeq.ClassLib.Common.NullInterfaceImpl$NullObjectTraverser.<clinit>()V#Return(V)#4
joeq.ClassLib.Common.NullInterfaceImpl.getObjectTraverser()Ljoeq/Runtime/ObjectTraverser;#Return(Ljava/lang/Object;)#1
joeq.Main.HostedVM.initialize()V#Put(Ljoeq/Runtime/ObjectTraverser;,STATIC,Ljoeq/Runtime/Reflection;,obj_trav)#23
joeq.Main.HostedVM.initialize()V#Get(Ljoeq/Runtime/ObjectTraverser;,STATIC,Ljoeq/Runtime/Reflection;,obj_trav)#24
joeq.Main.HostedVM.initialize()V#Invoke(VIRTUAL,Ljoeq/Runtime/ObjectTraverser;,initialize,()V)#25
joeq.ClassLib.Common.NullInterfaceImpl$NullObjectTraverser.initialize()V#Return(V)#0
joeq.Main.HostedVM.initialize()V#Return(V)#26
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,0)#124
chord.program.RTA.build()V#Invoke(STATIC,Ljoeq/Class/PrimordialClassLoader;,getJavaLangObject,()Ljoeq/Class/jq_Class;)#125
joeq.Class.PrimordialClassLoader.getJavaLangObject()Ljoeq/Class/jq_Class;#Get(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/PrimordialClassLoader;,JavaLangObject)#0
joeq.Class.PrimordialClassLoader.getJavaLangObject()Ljoeq/Class/jq_Class;#Return(Ljava/lang/Object;)#1
chord.program.RTA.build()V#Put(Ljoeq/Class/jq_Class;,NONSTATIC,Lchord/program/RTA;,javaLangObject)#126
chord.program.RTA.build()V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,mainClassName)#127
chord.program.RTA.build()V#LocalStore(Ljava/lang/Object;,2)#128
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,2)#129
chord.program.RTA.build()V#Constant(L;,null)#130
chord.program.RTA.build()V#ConditionalBranch(Ljava/lang/Object;,ne,136)#131
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,2)#136
chord.program.RTA.build()V#Invoke(STATIC,Ljoeq/Class/jq_Type;,parseType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#137
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Invoke(STATIC,Ljoeq/Class/jq_Type;,convertPrimitive,(Ljava/lang/String;)Ljava/lang/String;)#1
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"byte")#1
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#2
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#3
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,7)#4
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#7
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"char")#8
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#9
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#10
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,14)#11
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#14
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"double")#15
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#16
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#17
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,21)#18
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#21
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"float")#22
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#23
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#24
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,28)#25
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#28
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"int")#29
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#30
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#31
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,35)#32
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#35
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"long")#36
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#37
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#38
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,42)#39
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#42
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"short")#43
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#44
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#45
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,49)#46
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#49
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"void")#50
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#51
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#52
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,56)#53
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#56
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,"boolean")#57
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#58
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#59
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,eq,63)#60
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#63
joeq.Class.jq_Type.convertPrimitive(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#64
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#LocalStore(Ljava/lang/Object;,0)#2
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#4
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Constant(I,1)#5
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#ConditionalBranch(I,ne,29)#6
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#29
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Constant(I,46)#30
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Constant(I,47)#31
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Invoke(VIRTUAL,Ljava/lang/String;,replace,(CC)Ljava/lang/String;)#32
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#LocalStore(Ljava/lang/Object;,0)#33
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Constant(I,0)#34
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#LocalStore(I,1)#35
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#36
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Constant(Ljava/lang/String;,"[]")#37
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Invoke(VIRTUAL,Ljava/lang/String;,endsWith,(Ljava/lang/String;)Z)#38
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Constant(I,0)#39
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#ConditionalBranch(I,eq,54)#40
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#54
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Invoke(STATIC,Ljoeq/Class/jq_Type;,convertPrimitive,(Ljava/lang/String;)Ljava/lang/String;)#55
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#LocalStore(Ljava/lang/Object;,0)#56
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#57
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#58
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Constant(I,1)#59
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#ConditionalBranch(I,ne,81)#60
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#81
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Constant(Ljava/lang/String;,"[")#82
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Invoke(VIRTUAL,Ljava/lang/String;,startsWith,(Ljava/lang/String;)Z)#83
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Constant(I,0)#84
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#ConditionalBranch(I,ne,102)#85
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#86
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Constant(Ljava/lang/String;,";")#87
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Invoke(VIRTUAL,Ljava/lang/String;,endsWith,(Ljava/lang/String;)Z)#88
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Constant(I,0)#89
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#ConditionalBranch(I,ne,102)#90
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#New(Ljava/lang/StringBuilder;,0)#91
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Dup(1,0)#92
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#93
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Constant(Ljava/lang/String;,"L")#94
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#95
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#96
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#97
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Constant(Ljava/lang/String;,";")#98
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#99
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#100
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#LocalStore(Ljava/lang/Object;,0)#101
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#LocalLoad(I,1)#102
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Constant(I,-1)#103
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#BinaryOp(I,add)#104
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#LocalStore(I,1)#105
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#LocalLoad(I,1)#106
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Constant(I,0)#107
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#ConditionalBranch(I,lt,119)#108
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#119
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#120
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#121
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#CheckCast(Ljoeq/Class/jq_Reference;)#122
joeq.Class.jq_Type.parseType(Ljava/lang/String;)Ljoeq/Class/jq_Type;#Return(Ljava/lang/Object;)#123
chord.program.RTA.build()V#CheckCast(Ljoeq/Class/jq_Class;)#138
chord.program.RTA.build()V#LocalStore(Ljava/lang/Object;,3)#139
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,3)#140
chord.program.RTA.build()V#Constant(L;,null)#141
chord.program.RTA.build()V#ConditionalBranch(Ljava/lang/Object;,ne,151)#142
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,0)#151
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,3)#152
chord.program.RTA.build()V#Invoke(SPECIAL,Lchord/program/RTA;,prepareClass,(Ljoeq/Class/jq_Reference;)V)#153
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#Get(Lchord/util/IndexSet;,NONSTATIC,Lchord/program/RTA;,classes)#1
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#LocalLoad(Ljava/lang/Object;,1)#2
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#Invoke(VIRTUAL,Lchord/util/IndexSet;,add,(Ljava/lang/Object;)Z)#3
chord.util.IndexSet.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.IndexSet.add(Ljava/lang/Object;)Z#Get(Ljava/util/HashSet;,NONSTATIC,Lchord/util/IndexSet;,hset)#1
chord.util.IndexSet.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#2
chord.util.IndexSet.add(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/util/HashSet;,add,(Ljava/lang/Object;)Z)#3
joeq.Class.jq_Class.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.hashCode()I#Get(Ljoeq/UTF/Utf8;,NONSTATIC,Ljoeq/Class/jq_Class;,desc)#1
joeq.Class.jq_Class.hashCode()I#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,hashCode,()I)#2
joeq.Class.jq_Class.hashCode()I#Return(I)#3
chord.util.IndexSet.add(Ljava/lang/Object;)Z#Constant(I,0)#4
chord.util.IndexSet.add(Ljava/lang/Object;)Z#ConditionalBranch(I,eq,13)#5
chord.util.IndexSet.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#6
chord.util.IndexSet.add(Ljava/lang/Object;)Z#Get(Ljava/util/List;,NONSTATIC,Lchord/util/IndexSet;,list)#7
chord.util.IndexSet.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#8
chord.util.IndexSet.add(Ljava/lang/Object;)Z#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#9
chord.util.IndexSet.add(Ljava/lang/Object;)Z#Pop(1)#10
chord.util.IndexSet.add(Ljava/lang/Object;)Z#Constant(I,1)#11
chord.util.IndexSet.add(Ljava/lang/Object;)Z#Return(I)#12
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#Constant(I,0)#4
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#ConditionalBranch(I,eq,59)#5
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#LocalLoad(Ljava/lang/Object;,1)#6
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Reference;,prepare,()V)#7
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.prepare()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,isPrepared,()Z)#1
joeq.Class.jq_Reference.isPrepared()Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Reference.isPrepared()Z#Get(I,NONSTATIC,Ljoeq/Class/jq_Reference;,state)#1
joeq.Class.jq_Reference.isPrepared()Z#Constant(I,11)#2
joeq.Class.jq_Reference.isPrepared()Z#ConditionalBranch(I,lt,6)#3
joeq.Class.jq_Reference.isPrepared()Z#Constant(I,0)#6
joeq.Class.jq_Reference.isPrepared()Z#Return(I)#7
joeq.Class.jq_Class.prepare()V#Constant(I,0)#2
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,eq,5)#3
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Class.jq_Class.prepare()V#Dup(1,0)#6
joeq.Class.jq_Class.prepare()V#LocalStore(Ljava/lang/Object;,1)#7
joeq.Class.jq_Class.prepare()V#Monitor(ENTER)#8
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#9
joeq.Class.jq_Class.prepare()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,isPrepared,()Z)#10
joeq.Class.jq_Class.prepare()V#Constant(I,0)#11
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,eq,16)#12
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#16
joeq.Class.jq_Class.prepare()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,isVerified,()Z)#17
joeq.Class.jq_Reference.isVerified()Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Reference.isVerified()Z#Get(I,NONSTATIC,Ljoeq/Class/jq_Reference;,state)#1
joeq.Class.jq_Reference.isVerified()Z#Constant(I,8)#2
joeq.Class.jq_Reference.isVerified()Z#ConditionalBranch(I,lt,6)#3
joeq.Class.jq_Reference.isVerified()Z#Constant(I,0)#6
joeq.Class.jq_Reference.isVerified()Z#Return(I)#7
joeq.Class.jq_Class.prepare()V#Constant(I,0)#18
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,ne,22)#19
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#20
joeq.Class.jq_Class.prepare()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,verify,()V)#21
joeq.Class.jq_Class.verify()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.verify()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,isVerified,()Z)#1
joeq.Class.jq_Class.verify()V#Constant(I,0)#2
joeq.Class.jq_Class.verify()V#ConditionalBranch(I,eq,5)#3
joeq.Class.jq_Class.verify()V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Class.jq_Class.verify()V#Dup(1,0)#6
joeq.Class.jq_Class.verify()V#LocalStore(Ljava/lang/Object;,1)#7
joeq.Class.jq_Class.verify()V#Monitor(ENTER)#8
joeq.Class.jq_Class.verify()V#LocalLoad(Ljava/lang/Object;,0)#9
joeq.Class.jq_Class.verify()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,isVerified,()Z)#10
joeq.Class.jq_Class.verify()V#Constant(I,0)#11
joeq.Class.jq_Class.verify()V#ConditionalBranch(I,eq,16)#12
joeq.Class.jq_Class.verify()V#LocalLoad(Ljava/lang/Object;,0)#16
joeq.Class.jq_Class.verify()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,isLoaded,()Z)#17
joeq.Class.jq_Reference.isLoaded()Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Reference.isLoaded()Z#Get(I,NONSTATIC,Ljoeq/Class/jq_Reference;,state)#1
joeq.Class.jq_Reference.isLoaded()Z#Constant(I,5)#2
joeq.Class.jq_Reference.isLoaded()Z#ConditionalBranch(I,lt,6)#3
joeq.Class.jq_Reference.isLoaded()Z#Constant(I,0)#6
joeq.Class.jq_Reference.isLoaded()Z#Return(I)#7
joeq.Class.jq_Class.verify()V#Constant(I,0)#18
joeq.Class.jq_Class.verify()V#ConditionalBranch(I,ne,22)#19
joeq.Class.jq_Class.verify()V#LocalLoad(Ljava/lang/Object;,0)#20
joeq.Class.jq_Class.verify()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,load,()V)#21
joeq.Class.jq_Class.load()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.load()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,isLoaded,()Z)#1
joeq.Class.jq_Class.load()V#Constant(I,0)#2
joeq.Class.jq_Class.load()V#ConditionalBranch(I,eq,5)#3
joeq.Class.jq_Class.load()V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Class.jq_Class.load()V#Get(Ljava/lang/ClassLoader;,NONSTATIC,Ljoeq/Class/jq_Class;,class_loader)#6
joeq.Class.jq_Class.load()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#7
joeq.Class.jq_Class.load()V#ConditionalBranch(Ljava/lang/Object;,ne,11)#8
joeq.Class.jq_Class.load()V#Constant(I,1)#9
joeq.Class.jq_Class.load()V#Goto(12)#10
joeq.Class.jq_Class.load()V#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#12
joeq.Class.jq_Class.load()V#Constant(L;,null)#13
joeq.Class.jq_Class.load()V#LocalStore(Ljava/lang/Object;,1)#14
joeq.Class.jq_Class.load()V#LocalLoad(Ljava/lang/Object;,0)#15
joeq.Class.jq_Class.load()V#Get(Ljava/lang/ClassLoader;,NONSTATIC,Ljoeq/Class/jq_Class;,class_loader)#16
joeq.Class.jq_Class.load()V#CheckCast(Ljoeq/Class/PrimordialClassLoader;)#17
joeq.Class.jq_Class.load()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getClasspath,()Ljoeq/Class/Classpath;)#18
joeq.Class.jq_Class.load()V#LocalLoad(Ljava/lang/Object;,0)#19
joeq.Class.jq_Class.load()V#Get(Ljoeq/UTF/Utf8;,NONSTATIC,Ljoeq/Class/jq_Class;,desc)#20
joeq.Class.jq_Class.load()V#Invoke(VIRTUAL,Ljoeq/Class/Classpath;,getClassFileStream,(Ljoeq/UTF/Utf8;)Ljava/io/DataInputStream;)#21
joeq.Class.Classpath.getClassFileStream(Ljoeq/UTF/Utf8;)Ljava/io/DataInputStream;#LocalLoad(Ljava/lang/Object;,1)#0
joeq.Class.Classpath.getClassFileStream(Ljoeq/UTF/Utf8;)Ljava/io/DataInputStream;#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,toString,()Ljava/lang/String;)#1
joeq.Class.Classpath.getClassFileStream(Ljoeq/UTF/Utf8;)Ljava/io/DataInputStream;#Invoke(STATIC,Ljoeq/Class/Classpath;,descriptorToResource,(Ljava/lang/String;)Ljava/lang/String;)#2
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#Constant(I,0)#1
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#2
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#Constant(I,76)#3
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ne,7)#4
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#Constant(I,1)#5
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#Goto(8)#6
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#8
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#9
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#10
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#11
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#Constant(I,1)#12
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#BinaryOp(I,sub)#13
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#14
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#Constant(I,59)#15
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ne,19)#16
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#Constant(I,1)#17
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#Goto(20)#18
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#20
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#21
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#Constant(I,46)#22
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,indexOf,(I)I)#23
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#Constant(I,-1)#24
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#ConditionalBranch(I,ne,28)#25
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#Constant(I,1)#26
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#Goto(29)#27
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#29
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#New(Ljava/lang/StringBuilder;,0)#30
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#Dup(1,0)#31
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#32
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#33
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#Constant(I,1)#34
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#35
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#36
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#Constant(I,1)#37
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#BinaryOp(I,sub)#38
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,substring,(II)Ljava/lang/String;)#39
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#40
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#Constant(Ljava/lang/String;,".class")#41
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#42
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#43
joeq.Class.Classpath.descriptorToResource(Ljava/lang/String;)Ljava/lang/String;#Return(Ljava/lang/Object;)#44
joeq.Class.Classpath.getClassFileStream(Ljoeq/UTF/Utf8;)Ljava/io/DataInputStream;#LocalStore(Ljava/lang/Object;,2)#3
joeq.Class.Classpath.getClassFileStream(Ljoeq/UTF/Utf8;)Ljava/io/DataInputStream;#LocalLoad(Ljava/lang/Object;,0)#4
joeq.Class.Classpath.getClassFileStream(Ljoeq/UTF/Utf8;)Ljava/io/DataInputStream;#LocalLoad(Ljava/lang/Object;,2)#5
joeq.Class.Classpath.getClassFileStream(Ljoeq/UTF/Utf8;)Ljava/io/DataInputStream;#Invoke(VIRTUAL,Ljoeq/Class/Classpath;,getResourceAsStream,(Ljava/lang/String;)Ljava/io/InputStream;)#6
joeq.Class.Classpath.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.Classpath.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Get(Ljava/util/List;,NONSTATIC,Ljoeq/Class/Classpath;,classpathList)#1
joeq.Class.Classpath.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#2
joeq.Class.Classpath.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalStore(Ljava/lang/Object;,2)#3
joeq.Class.Classpath.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,2)#4
joeq.Class.Classpath.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#5
joeq.Class.Classpath.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Constant(I,0)#6
joeq.Class.Classpath.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#ConditionalBranch(I,eq,22)#7
joeq.Class.Classpath.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,2)#8
joeq.Class.Classpath.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#9
joeq.Class.Classpath.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#CheckCast(Ljoeq/Class/ClasspathElement;)#10
joeq.Class.Classpath.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalStore(Ljava/lang/Object;,3)#11
joeq.Class.Classpath.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,3)#12
joeq.Class.Classpath.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,1)#13
joeq.Class.Classpath.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Invoke(VIRTUAL,Ljoeq/Class/ClasspathElement;,getResourceAsStream,(Ljava/lang/String;)Ljava/io/InputStream;)#14
joeq.Class.ZipFileElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Get(Z,STATIC,Ljoeq/Class/ZipFileElement;,TRACE)#0
joeq.Class.ZipFileElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Constant(I,0)#1
joeq.Class.ZipFileElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#ConditionalBranch(I,eq,19)#2
joeq.Class.ZipFileElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,0)#19
joeq.Class.ZipFileElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Get(Ljava/util/Map;,NONSTATIC,Ljoeq/Class/ZipFileElement;,entries)#20
joeq.Class.ZipFileElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Constant(L;,null)#21
joeq.Class.ZipFileElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#ConditionalBranch(Ljava/lang/Object;,ne,25)#22
joeq.Class.ZipFileElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,0)#23
joeq.Class.ZipFileElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Invoke(SPECIAL,Ljoeq/Class/ZipFileElement;,initializeEntryMap,()V)#24
joeq.Class.ZipFileElement.initializeEntryMap()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.ZipFileElement.initializeEntryMap()V#Get(Ljava/util/zip/ZipFile;,NONSTATIC,Ljoeq/Class/ZipFileElement;,zf)#1
joeq.Class.ZipFileElement.initializeEntryMap()V#Invoke(VIRTUAL,Ljava/util/zip/ZipFile;,size,()I)#2
joeq.Class.ZipFileElement.initializeEntryMap()V#LocalStore(I,1)#3
joeq.Class.ZipFileElement.initializeEntryMap()V#LocalLoad(Ljava/lang/Object;,0)#4
joeq.Class.ZipFileElement.initializeEntryMap()V#New(Ljava/util/HashMap;,0)#5
joeq.Class.ZipFileElement.initializeEntryMap()V#Dup(1,0)#6
joeq.Class.ZipFileElement.initializeEntryMap()V#LocalLoad(I,1)#7
joeq.Class.ZipFileElement.initializeEntryMap()V#LocalLoad(I,1)#8
joeq.Class.ZipFileElement.initializeEntryMap()V#Constant(I,1)#9
joeq.Class.ZipFileElement.initializeEntryMap()V#Shift(I,SHR)#10
joeq.Class.ZipFileElement.initializeEntryMap()V#BinaryOp(I,add)#11
joeq.Class.ZipFileElement.initializeEntryMap()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(I)V)#12
joeq.Class.ZipFileElement.initializeEntryMap()V#Put(Ljava/util/Map;,NONSTATIC,Ljoeq/Class/ZipFileElement;,entries)#13
joeq.Class.ZipFileElement.initializeEntryMap()V#LocalLoad(I,1)#14
joeq.Class.ZipFileElement.initializeEntryMap()V#Constant(I,0)#15
joeq.Class.ZipFileElement.initializeEntryMap()V#ConditionalBranch(I,le,37)#16
joeq.Class.ZipFileElement.initializeEntryMap()V#LocalLoad(Ljava/lang/Object;,0)#17
joeq.Class.ZipFileElement.initializeEntryMap()V#Get(Ljava/util/zip/ZipFile;,NONSTATIC,Ljoeq/Class/ZipFileElement;,zf)#18
joeq.Class.ZipFileElement.initializeEntryMap()V#Invoke(VIRTUAL,Ljava/util/zip/ZipFile;,entries,()Ljava/util/Enumeration;)#19
joeq.Class.ZipFileElement.initializeEntryMap()V#LocalStore(Ljava/lang/Object;,2)#20
joeq.Class.ZipFileElement.initializeEntryMap()V#LocalLoad(Ljava/lang/Object;,2)#21
joeq.Class.ZipFileElement.initializeEntryMap()V#Invoke(INTERFACE,Ljava/util/Enumeration;,hasMoreElements,()Z)#22
joeq.Class.ZipFileElement.initializeEntryMap()V#Constant(I,0)#23
joeq.Class.ZipFileElement.initializeEntryMap()V#ConditionalBranch(I,eq,37)#24
joeq.Class.ZipFileElement.initializeEntryMap()V#LocalLoad(Ljava/lang/Object;,2)#25
joeq.Class.ZipFileElement.initializeEntryMap()V#Invoke(INTERFACE,Ljava/util/Enumeration;,nextElement,()Ljava/lang/Object;)#26
joeq.Class.ZipFileElement.initializeEntryMap()V#CheckCast(Ljava/util/zip/ZipEntry;)#27
joeq.Class.ZipFileElement.initializeEntryMap()V#LocalStore(Ljava/lang/Object;,3)#28
joeq.Class.ZipFileElement.initializeEntryMap()V#LocalLoad(Ljava/lang/Object;,0)#29
joeq.Class.ZipFileElement.initializeEntryMap()V#Get(Ljava/util/Map;,NONSTATIC,Ljoeq/Class/ZipFileElement;,entries)#30
joeq.Class.ZipFileElement.initializeEntryMap()V#LocalLoad(Ljava/lang/Object;,3)#31
joeq.Class.ZipFileElement.initializeEntryMap()V#Invoke(VIRTUAL,Ljava/util/zip/ZipEntry;,getName,()Ljava/lang/String;)#32
joeq.Class.ZipFileElement.initializeEntryMap()V#LocalLoad(Ljava/lang/Object;,3)#33
joeq.Class.ZipFileElement.initializeEntryMap()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#34
joeq.Class.ZipFileElement.initializeEntryMap()V#Pop(1)#35
joeq.Class.ZipFileElement.initializeEntryMap()V#Goto(21)#36
joeq.Class.ZipFileElement.initializeEntryMap()V#Get(Z,STATIC,Ljoeq/Class/ZipFileElement;,TRACE)#37
joeq.Class.ZipFileElement.initializeEntryMap()V#Constant(I,0)#38
joeq.Class.ZipFileElement.initializeEntryMap()V#ConditionalBranch(I,eq,54)#39
joeq.Class.ZipFileElement.initializeEntryMap()V#Return(V)#54
joeq.Class.ZipFileElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,1)#25
joeq.Class.ZipFileElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Constant(I,0)#26
joeq.Class.ZipFileElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#27
joeq.Class.ZipFileElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Constant(I,47)#28
joeq.Class.ZipFileElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#ConditionalBranch(I,ne,34)#29
joeq.Class.ZipFileElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,0)#34
joeq.Class.ZipFileElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Get(Ljava/util/Map;,NONSTATIC,Ljoeq/Class/ZipFileElement;,entries)#35
joeq.Class.ZipFileElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,1)#36
joeq.Class.ZipFileElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#37
joeq.Class.ZipFileElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#CheckCast(Ljava/util/zip/ZipEntry;)#38
joeq.Class.ZipFileElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalStore(Ljava/lang/Object;,2)#39
joeq.Class.ZipFileElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,2)#40
joeq.Class.ZipFileElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Constant(L;,null)#41
joeq.Class.ZipFileElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#ConditionalBranch(Ljava/lang/Object;,ne,45)#42
joeq.Class.ZipFileElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Constant(L;,null)#43
joeq.Class.ZipFileElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Goto(49)#44
joeq.Class.ZipFileElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Return(Ljava/lang/Object;)#49
joeq.Class.Classpath.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalStore(Ljava/lang/Object;,4)#15
joeq.Class.Classpath.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,4)#16
joeq.Class.Classpath.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Constant(L;,null)#17
joeq.Class.Classpath.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#ConditionalBranch(Ljava/lang/Object;,eq,21)#18
joeq.Class.Classpath.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Goto(4)#21
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Get(Z,STATIC,Ljoeq/Class/PathElement;,TRACE)#0
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Constant(I,0)#1
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#ConditionalBranch(I,eq,18)#2
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,0)#18
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Get(Ljava/util/Set;,NONSTATIC,Ljoeq/Class/PathElement;,entries)#19
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Constant(L;,null)#20
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#ConditionalBranch(Ljava/lang/Object;,ne,24)#21
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,0)#22
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Invoke(SPECIAL,Ljoeq/Class/PathElement;,initializeEntryMap,()V)#23
joeq.Class.PathElement.initializeEntryMap()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.PathElement.initializeEntryMap()V#New(Ljava/util/HashSet;,0)#1
joeq.Class.PathElement.initializeEntryMap()V#Dup(1,0)#2
joeq.Class.PathElement.initializeEntryMap()V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#3
joeq.Class.PathElement.initializeEntryMap()V#Put(Ljava/util/Set;,NONSTATIC,Ljoeq/Class/PathElement;,entries)#4
joeq.Class.PathElement.initializeEntryMap()V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Class.PathElement.initializeEntryMap()V#Constant(L;,null)#6
joeq.Class.PathElement.initializeEntryMap()V#Invoke(SPECIAL,Ljoeq/Class/PathElement;,buildEntries,(Ljava/lang/String;)V)#7
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#0
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Constant(L;,null)#1
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,ne,10)#2
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#New(Ljava/io/File;,0)#3
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Dup(1,0)#4
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Get(Ljava/lang/String;,NONSTATIC,Ljoeq/Class/PathElement;,path)#6
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/io/File;,<init>,(Ljava/lang/String;)V)#7
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,2)#8
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Goto(35)#9
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#35
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/io/File;,exists,()Z)#36
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Constant(I,0)#37
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#ConditionalBranch(I,eq,43)#38
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Return(V)#43
joeq.Class.PathElement.initializeEntryMap()V#Get(Z,STATIC,Ljoeq/Class/PathElement;,TRACE)#8
joeq.Class.PathElement.initializeEntryMap()V#Constant(I,0)#9
joeq.Class.PathElement.initializeEntryMap()V#ConditionalBranch(I,eq,24)#10
joeq.Class.PathElement.initializeEntryMap()V#Return(V)#24
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,1)#24
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Constant(I,0)#25
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#26
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Constant(I,47)#27
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#ConditionalBranch(I,ne,33)#28
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,0)#33
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Get(Ljava/util/Set;,NONSTATIC,Ljoeq/Class/PathElement;,entries)#34
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,1)#35
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Invoke(INTERFACE,Ljava/util/Set;,contains,(Ljava/lang/Object;)Z)#36
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Constant(I,0)#37
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#ConditionalBranch(I,ne,41)#38
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Constant(L;,null)#39
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Return(Ljava/lang/Object;)#40
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#39
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/io/File;,isDirectory,()Z)#40
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Constant(I,0)#41
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#ConditionalBranch(I,ne,44)#42
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#44
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#New(Ljoeq/Class/PathElement$3;,0)#45
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Dup(1,0)#46
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#47
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Invoke(SPECIAL,Ljoeq/Class/PathElement$3;,<init>,(Ljoeq/Class/PathElement;)V)#48
joeq.Class.PathElement$3.<init>(Ljoeq/Class/PathElement;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.PathElement$3.<init>(Ljoeq/Class/PathElement;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Class.PathElement$3.<init>(Ljoeq/Class/PathElement;)V#Put(Ljoeq/Class/PathElement;,NONSTATIC,Ljoeq/Class/PathElement$3;,this$0)#2
joeq.Class.PathElement$3.<init>(Ljoeq/Class/PathElement;)V#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.PathElement$3.<init>(Ljoeq/Class/PathElement;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#4
joeq.Class.PathElement$3.<init>(Ljoeq/Class/PathElement;)V#Return(V)#5
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/io/File;,list,(Ljava/io/FilenameFilter;)[Ljava/lang/String;)#49
joeq.Class.PathElement$3.accept(Ljava/io/File;Ljava/lang/String;)Z#New(Ljava/io/File;,0)#0
joeq.Class.PathElement$3.accept(Ljava/io/File;Ljava/lang/String;)Z#Dup(1,0)#1
joeq.Class.PathElement$3.accept(Ljava/io/File;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#2
joeq.Class.PathElement$3.accept(Ljava/io/File;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,2)#3
joeq.Class.PathElement$3.accept(Ljava/io/File;Ljava/lang/String;)Z#Invoke(SPECIAL,Ljava/io/File;,<init>,(Ljava/io/File;Ljava/lang/String;)V)#4
joeq.Class.PathElement$3.accept(Ljava/io/File;Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/io/File;,isDirectory,()Z)#5
joeq.Class.PathElement$3.accept(Ljava/io/File;Ljava/lang/String;)Z#Constant(I,0)#6
joeq.Class.PathElement$3.accept(Ljava/io/File;Ljava/lang/String;)Z#ConditionalBranch(I,ne,10)#7
joeq.Class.PathElement$3.accept(Ljava/io/File;Ljava/lang/String;)Z#Constant(I,1)#8
joeq.Class.PathElement$3.accept(Ljava/io/File;Ljava/lang/String;)Z#Goto(11)#9
joeq.Class.PathElement$3.accept(Ljava/io/File;Ljava/lang/String;)Z#Return(I)#11
joeq.Class.PathElement$3.accept(Ljava/io/File;Ljava/lang/String;)Z#Constant(I,0)#10
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,3)#50
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#51
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Constant(L;,null)#52
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,eq,88)#53
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Constant(I,0)#54
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalStore(I,4)#55
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(I,4)#56
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#57
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#ArrayLength()#58
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#ConditionalBranch(I,ge,88)#59
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#60
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Constant(L;,null)#61
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,ne,67)#62
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#63
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(I,4)#64
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#ArrayLoad(Ljava/lang/Object;)#65
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Goto(77)#66
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,5)#77
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#78
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Get(Ljava/util/Set;,NONSTATIC,Ljoeq/Class/PathElement;,entries)#79
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,5)#80
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#81
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Pop(1)#82
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(I,4)#83
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Constant(I,1)#84
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#BinaryOp(I,add)#85
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalStore(I,4)#86
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Goto(56)#87
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#88
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#New(Ljoeq/Class/PathElement$4;,0)#89
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Dup(1,0)#90
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#91
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Invoke(SPECIAL,Ljoeq/Class/PathElement$4;,<init>,(Ljoeq/Class/PathElement;)V)#92
joeq.Class.PathElement$4.<init>(Ljoeq/Class/PathElement;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.PathElement$4.<init>(Ljoeq/Class/PathElement;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Class.PathElement$4.<init>(Ljoeq/Class/PathElement;)V#Put(Ljoeq/Class/PathElement;,NONSTATIC,Ljoeq/Class/PathElement$4;,this$0)#2
joeq.Class.PathElement$4.<init>(Ljoeq/Class/PathElement;)V#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.PathElement$4.<init>(Ljoeq/Class/PathElement;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#4
joeq.Class.PathElement$4.<init>(Ljoeq/Class/PathElement;)V#Return(V)#5
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/io/File;,list,(Ljava/io/FilenameFilter;)[Ljava/lang/String;)#93
joeq.Class.PathElement$4.accept(Ljava/io/File;Ljava/lang/String;)Z#New(Ljava/io/File;,0)#0
joeq.Class.PathElement$4.accept(Ljava/io/File;Ljava/lang/String;)Z#Dup(1,0)#1
joeq.Class.PathElement$4.accept(Ljava/io/File;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,1)#2
joeq.Class.PathElement$4.accept(Ljava/io/File;Ljava/lang/String;)Z#LocalLoad(Ljava/lang/Object;,2)#3
joeq.Class.PathElement$4.accept(Ljava/io/File;Ljava/lang/String;)Z#Invoke(SPECIAL,Ljava/io/File;,<init>,(Ljava/io/File;Ljava/lang/String;)V)#4
joeq.Class.PathElement$4.accept(Ljava/io/File;Ljava/lang/String;)Z#Invoke(VIRTUAL,Ljava/io/File;,isDirectory,()Z)#5
joeq.Class.PathElement$4.accept(Ljava/io/File;Ljava/lang/String;)Z#Return(I)#6
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,4)#94
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,4)#95
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Constant(L;,null)#96
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,eq,135)#97
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Constant(I,0)#98
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalStore(I,5)#99
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(I,5)#100
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,4)#101
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#ArrayLength()#102
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#ConditionalBranch(I,ge,135)#103
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,4)#104
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(I,5)#105
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#ArrayLoad(Ljava/lang/Object;)#106
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,6)#107
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#108
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Constant(L;,null)#109
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,eq,120)#110
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#120
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#New(Ljava/lang/StringBuilder;,0)#121
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Dup(1,0)#122
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#123
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,6)#124
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#125
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Constant(I,47)#126
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(C)Ljava/lang/StringBuilder;)#127
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#128
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Invoke(SPECIAL,Ljoeq/Class/PathElement;,buildEntries,(Ljava/lang/String;)V)#129
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Get(Ljava/lang/String;,STATIC,Ljoeq/Class/Classpath;,filesep)#10
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Constant(I,0)#11
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#12
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Constant(I,47)#13
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#ConditionalBranch(I,ne,23)#14
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#New(Ljava/io/File;,0)#23
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Dup(1,0)#24
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#25
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Get(Ljava/lang/String;,NONSTATIC,Ljoeq/Class/PathElement;,path)#26
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#27
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Constant(I,47)#28
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Get(Ljava/lang/String;,STATIC,Ljoeq/Class/Classpath;,filesep)#29
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Constant(I,0)#30
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#31
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/String;,replace,(CC)Ljava/lang/String;)#32
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/io/File;,<init>,(Ljava/lang/String;Ljava/lang/String;)V)#33
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,2)#34
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#New(Ljava/lang/StringBuilder;,0)#111
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Dup(1,0)#112
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#113
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#114
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#115
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,6)#116
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#117
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#118
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,6)#119
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#New(Ljava/lang/StringBuilder;,0)#67
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Dup(1,0)#68
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#69
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#70
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#71
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#72
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(I,4)#73
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#ArrayLoad(Ljava/lang/Object;)#74
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#75
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#76
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Return(V)#135
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalLoad(I,5)#130
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Constant(I,1)#131
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#BinaryOp(I,add)#132
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#LocalStore(I,5)#133
joeq.Class.PathElement.buildEntries(Ljava/lang/String;)V#Goto(100)#134
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Get(Ljava/lang/String;,STATIC,Ljoeq/Class/Classpath;,filesep)#41
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Constant(I,0)#42
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#43
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Constant(I,47)#44
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#ConditionalBranch(I,eq,53)#45
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,1)#46
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Constant(I,47)#47
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Get(Ljava/lang/String;,STATIC,Ljoeq/Class/Classpath;,filesep)#48
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Constant(I,0)#49
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C)#50
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Invoke(VIRTUAL,Ljava/lang/String;,replace,(CC)Ljava/lang/String;)#51
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalStore(Ljava/lang/Object;,1)#52
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#New(Ljava/io/File;,0)#53
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Dup(1,0)#54
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,0)#55
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Get(Ljava/lang/String;,NONSTATIC,Ljoeq/Class/PathElement;,path)#56
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,1)#57
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Invoke(SPECIAL,Ljava/io/File;,<init>,(Ljava/lang/String;Ljava/lang/String;)V)#58
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalStore(Ljava/lang/Object;,2)#59
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#New(Ljava/io/FileInputStream;,0)#60
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Dup(1,0)#61
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,2)#62
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Invoke(SPECIAL,Ljava/io/FileInputStream;,<init>,(Ljava/io/File;)V)#63
joeq.Class.PathElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Return(Ljava/lang/Object;)#64
joeq.Class.Classpath.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,4)#19
joeq.Class.Classpath.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Return(Ljava/lang/Object;)#20
joeq.Class.Classpath.getClassFileStream(Ljoeq/UTF/Utf8;)Ljava/io/DataInputStream;#LocalStore(Ljava/lang/Object;,3)#7
joeq.Class.Classpath.getClassFileStream(Ljoeq/UTF/Utf8;)Ljava/io/DataInputStream;#LocalLoad(Ljava/lang/Object;,3)#8
joeq.Class.Classpath.getClassFileStream(Ljoeq/UTF/Utf8;)Ljava/io/DataInputStream;#Constant(L;,null)#9
joeq.Class.Classpath.getClassFileStream(Ljoeq/UTF/Utf8;)Ljava/io/DataInputStream;#ConditionalBranch(Ljava/lang/Object;,ne,13)#10
joeq.Class.Classpath.getClassFileStream(Ljoeq/UTF/Utf8;)Ljava/io/DataInputStream;#New(Ljava/io/DataInputStream;,0)#13
joeq.Class.Classpath.getClassFileStream(Ljoeq/UTF/Utf8;)Ljava/io/DataInputStream;#Dup(1,0)#14
joeq.Class.Classpath.getClassFileStream(Ljoeq/UTF/Utf8;)Ljava/io/DataInputStream;#LocalLoad(Ljava/lang/Object;,3)#15
joeq.Class.Classpath.getClassFileStream(Ljoeq/UTF/Utf8;)Ljava/io/DataInputStream;#Invoke(SPECIAL,Ljava/io/DataInputStream;,<init>,(Ljava/io/InputStream;)V)#16
joeq.Class.Classpath.getClassFileStream(Ljoeq/UTF/Utf8;)Ljava/io/DataInputStream;#Return(Ljava/lang/Object;)#17
joeq.Class.jq_Class.load()V#LocalStore(Ljava/lang/Object;,1)#22
joeq.Class.jq_Class.load()V#LocalLoad(Ljava/lang/Object;,1)#23
joeq.Class.jq_Class.load()V#Constant(L;,null)#24
joeq.Class.jq_Class.load()V#ConditionalBranch(Ljava/lang/Object;,ne,33)#25
joeq.Class.jq_Class.load()V#LocalLoad(Ljava/lang/Object;,0)#33
joeq.Class.jq_Class.load()V#LocalLoad(Ljava/lang/Object;,1)#34
joeq.Class.jq_Class.load()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,load,(Ljava/io/DataInput;)V)#35
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,isLoaded,()Z)#1
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,0)#2
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,eq,5)#3
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Get(I,NONSTATIC,Ljoeq/Class/jq_Class;,state)#6
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,4)#7
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,ne,13)#8
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#13
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Dup(1,0)#14
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(Ljava/lang/Object;,2)#15
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Monitor(ENTER)#16
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#17
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,isLoaded,()Z)#18
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,0)#19
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,eq,24)#20
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#24
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Get(I,NONSTATIC,Ljoeq/Class/jq_Class;,state)#25
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,1)#26
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,eq,36)#27
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#28
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Get(I,NONSTATIC,Ljoeq/Class/jq_Class;,state)#29
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,2)#30
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,eq,36)#31
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#32
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Get(I,NONSTATIC,Ljoeq/Class/jq_Class;,state)#33
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,3)#34
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,ne,42)#35
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#42
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,1)#43
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Put(I,NONSTATIC,Ljoeq/Class/jq_Class;,state)#44
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Get(Z,STATIC,Ljoeq/Class/jq_Class;,TRACE)#45
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,0)#46
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,eq,59)#47
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,1)#59
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(INTERFACE,Ljava/io/DataInput;,readInt,()I)#60
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,3)#61
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,3)#62
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,-889275714)#63
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,eq,78)#64
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#78
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,1)#79
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(INTERFACE,Ljava/io/DataInput;,readUnsignedShort,()I)#80
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Conversion(I,C)#81
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Put(C,NONSTATIC,Ljoeq/Class/jq_Class;,minor_version)#82
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#83
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,1)#84
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(INTERFACE,Ljava/io/DataInput;,readUnsignedShort,()I)#85
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Conversion(I,C)#86
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Put(C,NONSTATIC,Ljoeq/Class/jq_Class;,major_version)#87
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,1)#88
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(INTERFACE,Ljava/io/DataInput;,readUnsignedShort,()I)#89
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Conversion(I,C)#90
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,4)#91
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#92
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#New(Ljoeq/Class/jq_ConstantPool;,0)#93
joeq.Class.jq_ConstantPool.<clinit>()V#Constant(I,0)#0
joeq.Class.jq_ConstantPool.<clinit>()V#Put(Z,STATIC,Ljoeq/Class/jq_ConstantPool;,TRACE)#1
joeq.Class.jq_ConstantPool.<clinit>()V#Return(V)#2
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Dup(1,0)#94
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,4)#95
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(SPECIAL,Ljoeq/Class/jq_ConstantPool;,<init>,(I)V)#96
joeq.Class.jq_ConstantPool.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_ConstantPool.<init>(I)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Class.jq_ConstantPool.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Class.jq_ConstantPool.<init>(I)V#LocalLoad(I,1)#3
joeq.Class.jq_ConstantPool.<init>(I)V#New([Ljava/lang/Object;,1)#4
joeq.Class.jq_ConstantPool.<init>(I)V#Put([Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool)#5
joeq.Class.jq_ConstantPool.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#6
joeq.Class.jq_ConstantPool.<init>(I)V#LocalLoad(I,1)#7
joeq.Class.jq_ConstantPool.<init>(I)V#New([B,1)#8
joeq.Class.jq_ConstantPool.<init>(I)V#Put([B,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool_tags)#9
joeq.Class.jq_ConstantPool.<init>(I)V#Return(V)#10
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Put(Ljoeq/Class/jq_ConstantPool;,NONSTATIC,Ljoeq/Class/jq_Class;,const_pool)#97
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#98
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Get(Ljoeq/Class/jq_ConstantPool;,NONSTATIC,Ljoeq/Class/jq_Class;,const_pool)#99
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,1)#100
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_ConstantPool;,load,(Ljava/io/DataInput;)V)#101
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Get([Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool)#1
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#ArrayLength()#2
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#LocalStore(I,2)#3
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Constant(I,1)#4
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#LocalStore(I,3)#5
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#LocalLoad(I,3)#6
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#LocalLoad(I,2)#7
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#ConditionalBranch(I,ge,132)#8
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#9
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Get([B,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool_tags)#10
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#LocalLoad(I,3)#11
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,1)#12
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Invoke(INTERFACE,Ljava/io/DataInput;,readByte,()B)#13
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Dup(1,2)#14
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#ArrayStore(B)#15
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Switch(108,1,65,2,108,3,17,4,27,5,37,6,51,7,79,8,79,9,90,10,90,11,90,12,90)#16
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,1)#90
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Invoke(INTERFACE,Ljava/io/DataInput;,readUnsignedShort,()I)#91
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Conversion(I,C)#92
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#LocalStore(I,4)#93
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,1)#94
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Invoke(INTERFACE,Ljava/io/DataInput;,readUnsignedShort,()I)#95
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Conversion(I,C)#96
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#LocalStore(I,5)#97
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#98
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Get([Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool)#99
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#LocalLoad(I,3)#100
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#New(Ljoeq/Class/jq_ConstantPool$PairOfChars;,0)#101
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Dup(1,0)#102
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#LocalLoad(I,4)#103
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#LocalLoad(I,5)#104
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Invoke(SPECIAL,Ljoeq/Class/jq_ConstantPool$PairOfChars;,<init>,(CC)V)#105
joeq.Class.jq_ConstantPool$PairOfChars.<init>(CC)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_ConstantPool$PairOfChars.<init>(CC)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Class.jq_ConstantPool$PairOfChars.<init>(CC)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Class.jq_ConstantPool$PairOfChars.<init>(CC)V#LocalLoad(I,1)#3
joeq.Class.jq_ConstantPool$PairOfChars.<init>(CC)V#Put(C,NONSTATIC,Ljoeq/Class/jq_ConstantPool$PairOfChars;,c1)#4
joeq.Class.jq_ConstantPool$PairOfChars.<init>(CC)V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Class.jq_ConstantPool$PairOfChars.<init>(CC)V#LocalLoad(I,2)#6
joeq.Class.jq_ConstantPool$PairOfChars.<init>(CC)V#Put(C,NONSTATIC,Ljoeq/Class/jq_ConstantPool$PairOfChars;,c2)#7
joeq.Class.jq_ConstantPool$PairOfChars.<init>(CC)V#Return(V)#8
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#ArrayStore(Ljava/lang/Object;)#106
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Goto(127)#107
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#LocalLoad(I,3)#127
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Constant(I,1)#128
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#BinaryOp(I,add)#129
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#LocalStore(I,3)#130
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Goto(6)#131
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#79
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Get([Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool)#80
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#LocalLoad(I,3)#81
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#New(Ljava/lang/Character;,0)#82
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Dup(1,0)#83
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,1)#84
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Invoke(INTERFACE,Ljava/io/DataInput;,readUnsignedShort,()I)#85
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Conversion(I,C)#86
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Invoke(SPECIAL,Ljava/lang/Character;,<init>,(C)V)#87
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#ArrayStore(Ljava/lang/Object;)#88
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Goto(127)#89
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,1)#65
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Invoke(INTERFACE,Ljava/io/DataInput;,readUnsignedShort,()I)#66
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#New([B,1)#67
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#LocalStore(Ljava/lang/Object;,4)#68
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,1)#69
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,4)#70
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Invoke(INTERFACE,Ljava/io/DataInput;,readFully,([B)V)#71
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#72
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Get([Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool)#73
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#LocalLoad(I,3)#74
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,4)#75
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,([B)Ljoeq/UTF/Utf8;)#76
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#ArrayStore(Ljava/lang/Object;)#77
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Goto(127)#78
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Return(V)#132
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#102
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Get(Ljoeq/Class/jq_ConstantPool;,NONSTATIC,Ljoeq/Class/jq_Class;,const_pool)#103
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#104
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Get(Ljava/lang/ClassLoader;,NONSTATIC,Ljoeq/Class/jq_Class;,class_loader)#105
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_ConstantPool;,resolve,(Ljava/lang/ClassLoader;)V)#106
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Get([Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool)#1
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ArrayLength()#2
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalStore(I,2)#3
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Constant(I,1)#4
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalStore(I,3)#5
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(I,3)#6
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(I,2)#7
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ConditionalBranch(I,ge,460)#8
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,0)#9
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Get([B,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool_tags)#10
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(I,3)#11
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ArrayLoad(B)#12
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Switch(453,1,14,2,453,3,14,4,14,5,15,6,15,7,21,8,27,9,82,10,82,11,82,12,20,13,26)#13
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,0)#82
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Get([Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool)#83
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(I,3)#84
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ArrayLoad(Ljava/lang/Object;)#85
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#CheckCast(Ljoeq/Class/jq_ConstantPool$PairOfChars;)#86
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalStore(Ljava/lang/Object;,6)#87
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,6)#88
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_ConstantPool$PairOfChars;,getFirst,()C)#89
joeq.Class.jq_ConstantPool$PairOfChars.getFirst()C#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_ConstantPool$PairOfChars.getFirst()C#Get(C,NONSTATIC,Ljoeq/Class/jq_ConstantPool$PairOfChars;,c1)#1
joeq.Class.jq_ConstantPool$PairOfChars.getFirst()C#Return(I)#2
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalStore(I,7)#90
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,6)#91
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_ConstantPool$PairOfChars;,getSecond,()C)#92
joeq.Class.jq_ConstantPool$PairOfChars.getSecond()C#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_ConstantPool$PairOfChars.getSecond()C#Get(C,NONSTATIC,Ljoeq/Class/jq_ConstantPool$PairOfChars;,c2)#1
joeq.Class.jq_ConstantPool$PairOfChars.getSecond()C#Return(I)#2
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalStore(I,8)#93
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,0)#94
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Get([B,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool_tags)#95
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(I,7)#96
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ArrayLoad(B)#97
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Constant(I,13)#98
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ConditionalBranch(I,eq,142)#99
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,0)#100
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Get([B,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool_tags)#101
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(I,7)#102
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ArrayLoad(B)#103
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Constant(I,7)#104
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ConditionalBranch(I,eq,135)#105
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(I,7)#135
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(I,3)#136
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ConditionalBranch(I,le,142)#137
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,0)#138
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,1)#139
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(I,7)#140
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Invoke(SPECIAL,Ljoeq/Class/jq_ConstantPool;,resolveClass,(Ljava/lang/ClassLoader;I)V)#141
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#Get([Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool)#1
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#LocalLoad(I,2)#2
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#ArrayLoad(Ljava/lang/Object;)#3
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#CheckCast(Ljava/lang/Character;)#4
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#Invoke(VIRTUAL,Ljava/lang/Character;,charValue,()C)#5
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#LocalStore(I,3)#6
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#LocalLoad(Ljava/lang/Object;,0)#7
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#Get([B,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool_tags)#8
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#LocalLoad(I,3)#9
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#ArrayLoad(B)#10
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#Constant(I,1)#11
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#ConditionalBranch(I,eq,40)#12
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#LocalLoad(Ljava/lang/Object;,0)#40
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#Get([Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool)#41
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#LocalLoad(I,3)#42
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#ArrayLoad(Ljava/lang/Object;)#43
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#CheckCast(Ljoeq/UTF/Utf8;)#44
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#LocalStore(Ljava/lang/Object;,4)#45
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#LocalLoad(Ljava/lang/Object;,4)#46
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#Constant(I,91)#47
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,isDescriptor,(B)Z)#48
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#Constant(I,0)#49
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#ConditionalBranch(I,ne,54)#50
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#LocalLoad(Ljava/lang/Object;,4)#51
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,getAsClassDescriptor,()Ljoeq/UTF/Utf8;)#52
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#Get([B,NONSTATIC,Ljoeq/UTF/Utf8;,data)#1
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#Constant(I,0)#2
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#ArrayLoad(B)#3
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#Constant(I,91)#4
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#ConditionalBranch(I,eq,8)#5
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#Constant(I,1)#6
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#Goto(9)#7
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#9
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#10
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#Get([B,NONSTATIC,Ljoeq/UTF/Utf8;,data)#11
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#ArrayLength()#12
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#Constant(I,2)#13
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#BinaryOp(I,add)#14
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#New([B,1)#15
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#LocalStore(Ljava/lang/Object;,1)#16
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,1)#17
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#Constant(I,0)#18
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#Constant(I,76)#19
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#ArrayStore(B)#20
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#21
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#Get([B,NONSTATIC,Ljoeq/UTF/Utf8;,data)#22
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#Constant(I,0)#23
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,1)#24
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#Constant(I,1)#25
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#26
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#Get([B,NONSTATIC,Ljoeq/UTF/Utf8;,data)#27
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#ArrayLength()#28
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#Invoke(STATIC,Ljava/lang/System;,arraycopy,(Ljava/lang/Object;ILjava/lang/Object;II)V)#29
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,1)#30
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#31
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#Get([B,NONSTATIC,Ljoeq/UTF/Utf8;,data)#32
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#ArrayLength()#33
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#Constant(I,1)#34
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#BinaryOp(I,add)#35
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#Constant(I,59)#36
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#ArrayStore(B)#37
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,1)#38
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,([B)Ljoeq/UTF/Utf8;)#39
joeq.UTF.Utf8.getAsClassDescriptor()Ljoeq/UTF/Utf8;#Return(Ljava/lang/Object;)#40
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#LocalStore(Ljava/lang/Object;,4)#53
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#LocalLoad(Ljava/lang/Object;,0)#54
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#Get([Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool)#55
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#LocalLoad(I,2)#56
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#LocalLoad(Ljava/lang/Object;,1)#57
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#LocalLoad(Ljava/lang/Object;,4)#58
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#Invoke(STATIC,Ljoeq/Class/PrimordialClassLoader;,getOrCreateType,(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;)#59
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#ArrayStore(Ljava/lang/Object;)#60
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#LocalLoad(Ljava/lang/Object;,0)#61
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#Get([B,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool_tags)#62
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#LocalLoad(I,2)#63
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#Constant(I,13)#64
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#ArrayStore(B)#65
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#Get(Z,STATIC,Ljoeq/Class/jq_ConstantPool;,TRACE)#66
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#Constant(I,0)#67
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#ConditionalBranch(I,eq,85)#68
joeq.Class.jq_ConstantPool.resolveClass(Ljava/lang/ClassLoader;I)V#Return(V)#85
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,0)#142
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Get([Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool)#143
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(I,7)#144
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ArrayLoad(Ljava/lang/Object;)#145
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#CheckCast(Ljoeq/Class/jq_Reference;)#146
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalStore(Ljava/lang/Object;,9)#147
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,9)#148
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Instanceof(Ljoeq/Class/jq_Class;)#149
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Constant(I,0)#150
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ConditionalBranch(I,eq,156)#151
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,9)#152
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#CheckCast(Ljoeq/Class/jq_Class;)#153
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalStore(Ljava/lang/Object;,10)#154
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Goto(158)#155
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,0)#158
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Get([Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool)#159
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(I,8)#160
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ArrayLoad(Ljava/lang/Object;)#161
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#CheckCast(Ljoeq/Class/jq_ConstantPool$PairOfChars;)#162
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalStore(Ljava/lang/Object;,11)#163
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,11)#164
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_ConstantPool$PairOfChars;,getFirst,()C)#165
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalStore(I,12)#166
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,11)#167
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_ConstantPool$PairOfChars;,getSecond,()C)#168
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalStore(I,13)#169
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,0)#170
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Get([B,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool_tags)#171
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(I,12)#172
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ArrayLoad(B)#173
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Constant(I,1)#174
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ConditionalBranch(I,eq,205)#175
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,0)#205
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Get([B,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool_tags)#206
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(I,13)#207
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ArrayLoad(B)#208
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Constant(I,1)#209
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ConditionalBranch(I,eq,240)#210
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,0)#240
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Get([Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool)#241
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(I,12)#242
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ArrayLoad(Ljava/lang/Object;)#243
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#CheckCast(Ljoeq/UTF/Utf8;)#244
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalStore(Ljava/lang/Object;,14)#245
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,0)#246
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Get([Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool)#247
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(I,13)#248
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ArrayLoad(Ljava/lang/Object;)#249
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#CheckCast(Ljoeq/UTF/Utf8;)#250
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalStore(Ljava/lang/Object;,15)#251
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,0)#252
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Get([B,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool_tags)#253
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(I,3)#254
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ArrayLoad(B)#255
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Constant(I,9)#256
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ConditionalBranch(I,ne,274)#257
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,15)#274
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,isValidMethodDescriptor,()Z)#275
joeq.UTF.Utf8.isValidMethodDescriptor()Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.UTF.Utf8.isValidMethodDescriptor()Z#Get([B,NONSTATIC,Ljoeq/UTF/Utf8;,data)#1
joeq.UTF.Utf8.isValidMethodDescriptor()Z#ArrayLength()#2
joeq.UTF.Utf8.isValidMethodDescriptor()Z#Constant(I,3)#3
joeq.UTF.Utf8.isValidMethodDescriptor()Z#ConditionalBranch(I,ge,7)#4
joeq.UTF.Utf8.isValidMethodDescriptor()Z#LocalLoad(Ljava/lang/Object;,0)#7
joeq.UTF.Utf8.isValidMethodDescriptor()Z#Get([B,NONSTATIC,Ljoeq/UTF/Utf8;,data)#8
joeq.UTF.Utf8.isValidMethodDescriptor()Z#Constant(I,0)#9
joeq.UTF.Utf8.isValidMethodDescriptor()Z#ArrayLoad(B)#10
joeq.UTF.Utf8.isValidMethodDescriptor()Z#Constant(I,40)#11
joeq.UTF.Utf8.isValidMethodDescriptor()Z#ConditionalBranch(I,eq,15)#12
joeq.UTF.Utf8.isValidMethodDescriptor()Z#Constant(I,1)#15
joeq.UTF.Utf8.isValidMethodDescriptor()Z#LocalStore(I,1)#16
joeq.UTF.Utf8.isValidMethodDescriptor()Z#LocalLoad(Ljava/lang/Object;,0)#17
joeq.UTF.Utf8.isValidMethodDescriptor()Z#Get([B,NONSTATIC,Ljoeq/UTF/Utf8;,data)#18
joeq.UTF.Utf8.isValidMethodDescriptor()Z#LocalLoad(I,1)#19
joeq.UTF.Utf8.isValidMethodDescriptor()Z#ArrayLoad(B)#20
joeq.UTF.Utf8.isValidMethodDescriptor()Z#Constant(I,41)#21
joeq.UTF.Utf8.isValidMethodDescriptor()Z#ConditionalBranch(I,eq,60)#22
joeq.UTF.Utf8.isValidMethodDescriptor()Z#LocalLoad(I,1)#60
joeq.UTF.Utf8.isValidMethodDescriptor()Z#Constant(I,1)#61
joeq.UTF.Utf8.isValidMethodDescriptor()Z#BinaryOp(I,add)#62
joeq.UTF.Utf8.isValidMethodDescriptor()Z#LocalStore(I,1)#63
joeq.UTF.Utf8.isValidMethodDescriptor()Z#LocalLoad(Ljava/lang/Object;,0)#64
joeq.UTF.Utf8.isValidMethodDescriptor()Z#Get([B,NONSTATIC,Ljoeq/UTF/Utf8;,data)#65
joeq.UTF.Utf8.isValidMethodDescriptor()Z#LocalLoad(I,1)#66
joeq.UTF.Utf8.isValidMethodDescriptor()Z#ArrayLoad(B)#67
joeq.UTF.Utf8.isValidMethodDescriptor()Z#Constant(I,86)#68
joeq.UTF.Utf8.isValidMethodDescriptor()Z#ConditionalBranch(I,ne,77)#69
joeq.UTF.Utf8.isValidMethodDescriptor()Z#LocalLoad(I,1)#70
joeq.UTF.Utf8.isValidMethodDescriptor()Z#LocalLoad(Ljava/lang/Object;,0)#71
joeq.UTF.Utf8.isValidMethodDescriptor()Z#Get([B,NONSTATIC,Ljoeq/UTF/Utf8;,data)#72
joeq.UTF.Utf8.isValidMethodDescriptor()Z#ArrayLength()#73
joeq.UTF.Utf8.isValidMethodDescriptor()Z#Constant(I,1)#74
joeq.UTF.Utf8.isValidMethodDescriptor()Z#BinaryOp(I,sub)#75
joeq.UTF.Utf8.isValidMethodDescriptor()Z#ConditionalBranch(I,eq,82)#76
joeq.UTF.Utf8.isValidMethodDescriptor()Z#Constant(I,1)#82
joeq.UTF.Utf8.isValidMethodDescriptor()Z#Goto(85)#83
joeq.UTF.Utf8.isValidMethodDescriptor()Z#Return(I)#85
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Constant(I,0)#276
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ConditionalBranch(I,ne,290)#277
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#New(Ljoeq/Class/jq_NameAndDesc;,0)#290
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Dup(1,0)#291
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,14)#292
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,15)#293
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Invoke(SPECIAL,Ljoeq/Class/jq_NameAndDesc;,<init>,(Ljoeq/UTF/Utf8;Ljoeq/UTF/Utf8;)V)#294
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalStore(Ljava/lang/Object;,16)#295
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,10)#296
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,isLoaded,()Z)#297
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Constant(I,0)#298
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ConditionalBranch(I,eq,443)#299
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,0)#443
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Get([Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool)#444
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(I,3)#445
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#New(Ljoeq/Class/jq_MemberReference;,0)#446
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Dup(1,0)#447
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,10)#448
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,16)#449
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Invoke(SPECIAL,Ljoeq/Class/jq_MemberReference;,<init>,(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V)#450
joeq.Class.jq_MemberReference.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_MemberReference.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Class.jq_MemberReference.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Class.jq_MemberReference.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Class.jq_MemberReference.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Put(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_MemberReference;,clazz)#4
joeq.Class.jq_MemberReference.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Class.jq_MemberReference.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,2)#6
joeq.Class.jq_MemberReference.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Put(Ljoeq/Class/jq_NameAndDesc;,NONSTATIC,Ljoeq/Class/jq_MemberReference;,nd)#7
joeq.Class.jq_MemberReference.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Return(V)#8
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ArrayStore(Ljava/lang/Object;)#451
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Goto(455)#452
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(I,3)#455
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Constant(I,1)#456
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#BinaryOp(I,add)#457
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalStore(I,3)#458
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Goto(6)#459
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,0)#21
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,1)#22
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(I,3)#23
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Invoke(SPECIAL,Ljoeq/Class/jq_ConstantPool;,resolveClass,(Ljava/lang/ClassLoader;I)V)#24
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Goto(455)#25
joeq.UTF.Utf8.isValidMethodDescriptor()Z#LocalLoad(Ljava/lang/Object;,0)#23
joeq.UTF.Utf8.isValidMethodDescriptor()Z#Get([B,NONSTATIC,Ljoeq/UTF/Utf8;,data)#24
joeq.UTF.Utf8.isValidMethodDescriptor()Z#LocalLoad(I,1)#25
joeq.UTF.Utf8.isValidMethodDescriptor()Z#ArrayLoad(B)#26
joeq.UTF.Utf8.isValidMethodDescriptor()Z#Switch(47,66,28,67,28,68,28,69,47,70,28,71,47,72,47,73,28,74,28,75,47,76,29,77,47,78,47,79,47,80,47,81,47,82,47,83,28,84,47,85,47,86,47,87,47,88,47,89,47,90,28,91,28)#27
joeq.UTF.Utf8.isValidMethodDescriptor()Z#LocalLoad(I,1)#29
joeq.UTF.Utf8.isValidMethodDescriptor()Z#Constant(I,1)#30
joeq.UTF.Utf8.isValidMethodDescriptor()Z#BinaryOp(I,add)#31
joeq.UTF.Utf8.isValidMethodDescriptor()Z#LocalStore(I,1)#32
joeq.UTF.Utf8.isValidMethodDescriptor()Z#LocalLoad(I,1)#33
joeq.UTF.Utf8.isValidMethodDescriptor()Z#LocalLoad(Ljava/lang/Object;,0)#34
joeq.UTF.Utf8.isValidMethodDescriptor()Z#Get([B,NONSTATIC,Ljoeq/UTF/Utf8;,data)#35
joeq.UTF.Utf8.isValidMethodDescriptor()Z#ArrayLength()#36
joeq.UTF.Utf8.isValidMethodDescriptor()Z#ConditionalBranch(I,ne,40)#37
joeq.UTF.Utf8.isValidMethodDescriptor()Z#LocalLoad(Ljava/lang/Object;,0)#40
joeq.UTF.Utf8.isValidMethodDescriptor()Z#Get([B,NONSTATIC,Ljoeq/UTF/Utf8;,data)#41
joeq.UTF.Utf8.isValidMethodDescriptor()Z#LocalLoad(I,1)#42
joeq.UTF.Utf8.isValidMethodDescriptor()Z#ArrayLoad(B)#43
joeq.UTF.Utf8.isValidMethodDescriptor()Z#Constant(I,59)#44
joeq.UTF.Utf8.isValidMethodDescriptor()Z#ConditionalBranch(I,ne,29)#45
joeq.UTF.Utf8.isValidMethodDescriptor()Z#Goto(49)#46
joeq.UTF.Utf8.isValidMethodDescriptor()Z#LocalLoad(I,1)#49
joeq.UTF.Utf8.isValidMethodDescriptor()Z#Constant(I,1)#50
joeq.UTF.Utf8.isValidMethodDescriptor()Z#BinaryOp(I,add)#51
joeq.UTF.Utf8.isValidMethodDescriptor()Z#LocalStore(I,1)#52
joeq.UTF.Utf8.isValidMethodDescriptor()Z#LocalLoad(I,1)#53
joeq.UTF.Utf8.isValidMethodDescriptor()Z#LocalLoad(Ljava/lang/Object;,0)#54
joeq.UTF.Utf8.isValidMethodDescriptor()Z#Get([B,NONSTATIC,Ljoeq/UTF/Utf8;,data)#55
joeq.UTF.Utf8.isValidMethodDescriptor()Z#ArrayLength()#56
joeq.UTF.Utf8.isValidMethodDescriptor()Z#ConditionalBranch(I,ne,17)#57
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Goto(455)#26
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Goto(455)#14
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Goto(455)#20
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Return(V)#460
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Goto(144)#107
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#144
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,1)#145
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(INTERFACE,Ljava/io/DataInput;,readUnsignedShort,()I)#146
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Conversion(I,C)#147
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Put(C,NONSTATIC,Ljoeq/Class/jq_Class;,access_flags)#148
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#149
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,2)#150
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Put(I,NONSTATIC,Ljoeq/Class/jq_Class;,state)#151
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,1)#152
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(INTERFACE,Ljava/io/DataInput;,readUnsignedShort,()I)#153
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Conversion(I,C)#154
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,5)#155
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#156
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,5)#157
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getCPtag,(C)B)#158
joeq.Class.jq_Class.getCPtag(C)B#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.getCPtag(C)B#Constant(I,2)#1
joeq.Class.jq_Class.getCPtag(C)B#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,chkState,(B)V)#2
joeq.Class.jq_Reference.chkState(B)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Reference.chkState(B)V#Get(I,NONSTATIC,Ljoeq/Class/jq_Reference;,state)#1
joeq.Class.jq_Reference.chkState(B)V#LocalLoad(I,1)#2
joeq.Class.jq_Reference.chkState(B)V#ConditionalBranch(I,lt,5)#3
joeq.Class.jq_Reference.chkState(B)V#Return(V)#4
joeq.Class.jq_Class.getCPtag(C)B#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Class.getCPtag(C)B#Get(Ljoeq/Class/jq_ConstantPool;,NONSTATIC,Ljoeq/Class/jq_Class;,const_pool)#4
joeq.Class.jq_Class.getCPtag(C)B#LocalLoad(I,1)#5
joeq.Class.jq_Class.getCPtag(C)B#Invoke(VIRTUAL,Ljoeq/Class/jq_ConstantPool;,getTag,(C)B)#6
joeq.Class.jq_ConstantPool.getTag(C)B#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_ConstantPool.getTag(C)B#Get([B,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool_tags)#1
joeq.Class.jq_ConstantPool.getTag(C)B#LocalLoad(I,1)#2
joeq.Class.jq_ConstantPool.getTag(C)B#ArrayLoad(B)#3
joeq.Class.jq_ConstantPool.getTag(C)B#Return(I)#4
joeq.Class.jq_Class.getCPtag(C)B#Return(I)#7
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,13)#159
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,eq,187)#160
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#187
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,5)#188
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getCP,(C)Ljava/lang/Object;)#189
joeq.Class.jq_Class.getCP(C)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.getCP(C)Ljava/lang/Object;#Constant(I,2)#1
joeq.Class.jq_Class.getCP(C)Ljava/lang/Object;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,chkState,(B)V)#2
joeq.Class.jq_Class.getCP(C)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Class.getCP(C)Ljava/lang/Object;#Get(Ljoeq/Class/jq_ConstantPool;,NONSTATIC,Ljoeq/Class/jq_Class;,const_pool)#4
joeq.Class.jq_Class.getCP(C)Ljava/lang/Object;#LocalLoad(I,1)#5
joeq.Class.jq_Class.getCP(C)Ljava/lang/Object;#Invoke(VIRTUAL,Ljoeq/Class/jq_ConstantPool;,get,(C)Ljava/lang/Object;)#6
joeq.Class.jq_ConstantPool.get(C)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_ConstantPool.get(C)Ljava/lang/Object;#Get([Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool)#1
joeq.Class.jq_ConstantPool.get(C)Ljava/lang/Object;#LocalLoad(I,1)#2
joeq.Class.jq_ConstantPool.get(C)Ljava/lang/Object;#ArrayLoad(Ljava/lang/Object;)#3
joeq.Class.jq_ConstantPool.get(C)Ljava/lang/Object;#Return(Ljava/lang/Object;)#4
joeq.Class.jq_Class.getCP(C)Ljava/lang/Object;#Return(Ljava/lang/Object;)#7
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#190
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(Ljava/lang/Object;,eq,217)#191
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,1)#217
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(INTERFACE,Ljava/io/DataInput;,readUnsignedShort,()I)#218
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Conversion(I,C)#219
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,6)#220
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,6)#221
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,0)#222
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,eq,304)#223
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#224
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,6)#225
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getCPtag,(C)B)#226
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,13)#227
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,eq,255)#228
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#255
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,6)#256
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getCPasType,(C)Ljoeq/Class/jq_Type;)#257
joeq.Class.jq_Class.getCPasType(C)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.getCPasType(C)Ljoeq/Class/jq_Type;#Constant(I,2)#1
joeq.Class.jq_Class.getCPasType(C)Ljoeq/Class/jq_Type;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,chkState,(B)V)#2
joeq.Class.jq_Class.getCPasType(C)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Class.getCPasType(C)Ljoeq/Class/jq_Type;#Get(Ljoeq/Class/jq_ConstantPool;,NONSTATIC,Ljoeq/Class/jq_Class;,const_pool)#4
joeq.Class.jq_Class.getCPasType(C)Ljoeq/Class/jq_Type;#LocalLoad(I,1)#5
joeq.Class.jq_Class.getCPasType(C)Ljoeq/Class/jq_Type;#Invoke(VIRTUAL,Ljoeq/Class/jq_ConstantPool;,getAsType,(C)Ljoeq/Class/jq_Type;)#6
joeq.Class.jq_ConstantPool.getAsType(C)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_ConstantPool.getAsType(C)Ljoeq/Class/jq_Type;#Get([B,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool_tags)#1
joeq.Class.jq_ConstantPool.getAsType(C)Ljoeq/Class/jq_Type;#LocalLoad(I,1)#2
joeq.Class.jq_ConstantPool.getAsType(C)Ljoeq/Class/jq_Type;#ArrayLoad(B)#3
joeq.Class.jq_ConstantPool.getAsType(C)Ljoeq/Class/jq_Type;#Constant(I,13)#4
joeq.Class.jq_ConstantPool.getAsType(C)Ljoeq/Class/jq_Type;#ConditionalBranch(I,ne,8)#5
joeq.Class.jq_ConstantPool.getAsType(C)Ljoeq/Class/jq_Type;#Constant(I,1)#6
joeq.Class.jq_ConstantPool.getAsType(C)Ljoeq/Class/jq_Type;#Goto(9)#7
joeq.Class.jq_ConstantPool.getAsType(C)Ljoeq/Class/jq_Type;#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#9
joeq.Class.jq_ConstantPool.getAsType(C)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#10
joeq.Class.jq_ConstantPool.getAsType(C)Ljoeq/Class/jq_Type;#Get([Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool)#11
joeq.Class.jq_ConstantPool.getAsType(C)Ljoeq/Class/jq_Type;#LocalLoad(I,1)#12
joeq.Class.jq_ConstantPool.getAsType(C)Ljoeq/Class/jq_Type;#ArrayLoad(Ljava/lang/Object;)#13
joeq.Class.jq_ConstantPool.getAsType(C)Ljoeq/Class/jq_Type;#CheckCast(Ljoeq/Class/jq_Type;)#14
joeq.Class.jq_ConstantPool.getAsType(C)Ljoeq/Class/jq_Type;#Return(Ljava/lang/Object;)#15
joeq.Class.jq_Class.getCPasType(C)Ljoeq/Class/jq_Type;#Return(Ljava/lang/Object;)#7
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(Ljava/lang/Object;,7)#258
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,7)#259
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,isClassType,()Z)#260
joeq.Class.jq_Class.isClassType()Z#Constant(I,1)#0
joeq.Class.jq_Class.isClassType()Z#Return(I)#1
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,0)#261
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,ne,279)#262
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,7)#279
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#280
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(Ljava/lang/Object;,ne,295)#281
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#295
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,7)#296
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#CheckCast(Ljoeq/Class/jq_Class;)#297
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Put(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,super_class)#298
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#299
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,super_class)#300
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#301
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(SPECIAL,Ljoeq/Class/jq_Class;,addSubclass,(Ljoeq/Class/jq_Class;)V)#302
joeq.Class.jq_Class.addSubclass(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.addSubclass(Ljoeq/Class/jq_Class;)V#Get([Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,subclasses)#1
joeq.Class.jq_Class.addSubclass(Ljoeq/Class/jq_Class;)V#ArrayLength()#2
joeq.Class.jq_Class.addSubclass(Ljoeq/Class/jq_Class;)V#Constant(I,1)#3
joeq.Class.jq_Class.addSubclass(Ljoeq/Class/jq_Class;)V#BinaryOp(I,add)#4
joeq.Class.jq_Class.addSubclass(Ljoeq/Class/jq_Class;)V#New([Ljoeq/Class/jq_Class;,1)#5
joeq.Class.jq_Class.addSubclass(Ljoeq/Class/jq_Class;)V#LocalStore(Ljava/lang/Object;,2)#6
joeq.Class.jq_Class.addSubclass(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,0)#7
joeq.Class.jq_Class.addSubclass(Ljoeq/Class/jq_Class;)V#Get([Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,subclasses)#8
joeq.Class.jq_Class.addSubclass(Ljoeq/Class/jq_Class;)V#Constant(I,0)#9
joeq.Class.jq_Class.addSubclass(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,2)#10
joeq.Class.jq_Class.addSubclass(Ljoeq/Class/jq_Class;)V#Constant(I,0)#11
joeq.Class.jq_Class.addSubclass(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,0)#12
joeq.Class.jq_Class.addSubclass(Ljoeq/Class/jq_Class;)V#Get([Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,subclasses)#13
joeq.Class.jq_Class.addSubclass(Ljoeq/Class/jq_Class;)V#ArrayLength()#14
joeq.Class.jq_Class.addSubclass(Ljoeq/Class/jq_Class;)V#Invoke(STATIC,Ljava/lang/System;,arraycopy,(Ljava/lang/Object;ILjava/lang/Object;II)V)#15
joeq.Class.jq_Class.addSubclass(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,2)#16
joeq.Class.jq_Class.addSubclass(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,0)#17
joeq.Class.jq_Class.addSubclass(Ljoeq/Class/jq_Class;)V#Get([Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,subclasses)#18
joeq.Class.jq_Class.addSubclass(Ljoeq/Class/jq_Class;)V#ArrayLength()#19
joeq.Class.jq_Class.addSubclass(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,1)#20
joeq.Class.jq_Class.addSubclass(Ljoeq/Class/jq_Class;)V#ArrayStore(Ljava/lang/Object;)#21
joeq.Class.jq_Class.addSubclass(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,0)#22
joeq.Class.jq_Class.addSubclass(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,2)#23
joeq.Class.jq_Class.addSubclass(Ljoeq/Class/jq_Class;)V#Put([Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,subclasses)#24
joeq.Class.jq_Class.addSubclass(Ljoeq/Class/jq_Class;)V#Return(V)#25
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Goto(319)#303
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,1)#319
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(INTERFACE,Ljava/io/DataInput;,readUnsignedShort,()I)#320
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Conversion(I,C)#321
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,7)#322
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#323
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,7)#324
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#New([Ljoeq/Class/jq_Class;,1)#325
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Put([Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,declared_interfaces)#326
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,0)#327
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,8)#328
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,8)#329
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,7)#330
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,ge,452)#331
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,1)#452
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(INTERFACE,Ljava/io/DataInput;,readUnsignedShort,()I)#453
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Conversion(I,C)#454
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,8)#455
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,8)#456
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#New([C,1)#457
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(Ljava/lang/Object;,9)#458
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,8)#459
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#New([Ljoeq/Class/jq_Field;,1)#460
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(Ljava/lang/Object;,10)#461
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,0)#462
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,11)#463
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,0)#464
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,12)#465
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,0)#466
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,13)#467
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,13)#468
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,8)#469
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,ge,669)#470
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#669
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,0)#670
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Put(I,NONSTATIC,Ljoeq/Class/jq_Class;,static_data_size)#671
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#672
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,12)#673
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#New([Ljoeq/Class/jq_InstanceField;,1)#674
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Put([Ljoeq/Class/jq_InstanceField;,NONSTATIC,Ljoeq/Class/jq_Class;,declared_instance_fields)#675
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#676
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,11)#677
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#New([Ljoeq/Class/jq_StaticField;,1)#678
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Put([Ljoeq/Class/jq_StaticField;,NONSTATIC,Ljoeq/Class/jq_Class;,static_fields)#679
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,0)#680
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,13)#681
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,-1)#682
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,14)#683
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,-1)#684
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,15)#685
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,13)#686
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,8)#687
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,ge,736)#688
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#736
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Get(Z,NONSTATIC,Ljoeq/Class/jq_Class;,dont_align)#737
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,0)#738
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,ne,747)#739
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#740
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Get([Ljoeq/Class/jq_InstanceField;,NONSTATIC,Ljoeq/Class/jq_Class;,declared_instance_fields)#741
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#New(Ljoeq/Class/jq_Class$2;,0)#742
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Dup(1,0)#743
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#744
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(SPECIAL,Ljoeq/Class/jq_Class$2;,<init>,(Ljoeq/Class/jq_Class;)V)#745
joeq.Class.jq_Class$2.<init>(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class$2.<init>(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Class.jq_Class$2.<init>(Ljoeq/Class/jq_Class;)V#Put(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class$2;,this$0)#2
joeq.Class.jq_Class$2.<init>(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Class$2.<init>(Ljoeq/Class/jq_Class;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#4
joeq.Class.jq_Class$2.<init>(Ljoeq/Class/jq_Class;)V#Return(V)#5
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(STATIC,Ljava/util/Arrays;,sort,([Ljava/lang/Object;Ljava/util/Comparator;)V)#746
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,1)#747
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(INTERFACE,Ljava/io/DataInput;,readUnsignedShort,()I)#748
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Conversion(I,C)#749
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,13)#750
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,13)#751
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#New([C,1)#752
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(Ljava/lang/Object;,14)#753
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,13)#754
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#New([Ljoeq/Class/jq_Method;,1)#755
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(Ljava/lang/Object;,15)#756
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,0)#757
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,16)#758
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,0)#759
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,17)#760
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,0)#761
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,18)#762
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,18)#763
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,13)#764
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,ge,944)#765
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,14)#766
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,18)#767
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,1)#768
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(INTERFACE,Ljava/io/DataInput;,readUnsignedShort,()I)#769
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Conversion(I,C)#770
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ArrayStore(C)#771
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,1)#772
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(INTERFACE,Ljava/io/DataInput;,readUnsignedShort,()I)#773
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Conversion(I,C)#774
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,19)#775
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#776
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,19)#777
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getCPtag,(C)B)#778
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,1)#779
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,eq,809)#780
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#809
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,19)#810
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getCPasUtf8,(C)Ljoeq/UTF/Utf8;)#811
joeq.Class.jq_Class.getCPasUtf8(C)Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.getCPasUtf8(C)Ljoeq/UTF/Utf8;#Constant(I,2)#1
joeq.Class.jq_Class.getCPasUtf8(C)Ljoeq/UTF/Utf8;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,chkState,(B)V)#2
joeq.Class.jq_Class.getCPasUtf8(C)Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Class.getCPasUtf8(C)Ljoeq/UTF/Utf8;#Get(Ljoeq/Class/jq_ConstantPool;,NONSTATIC,Ljoeq/Class/jq_Class;,const_pool)#4
joeq.Class.jq_Class.getCPasUtf8(C)Ljoeq/UTF/Utf8;#LocalLoad(I,1)#5
joeq.Class.jq_Class.getCPasUtf8(C)Ljoeq/UTF/Utf8;#Invoke(VIRTUAL,Ljoeq/Class/jq_ConstantPool;,getAsUtf8,(C)Ljoeq/UTF/Utf8;)#6
joeq.Class.jq_ConstantPool.getAsUtf8(C)Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_ConstantPool.getAsUtf8(C)Ljoeq/UTF/Utf8;#Get([B,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool_tags)#1
joeq.Class.jq_ConstantPool.getAsUtf8(C)Ljoeq/UTF/Utf8;#LocalLoad(I,1)#2
joeq.Class.jq_ConstantPool.getAsUtf8(C)Ljoeq/UTF/Utf8;#ArrayLoad(B)#3
joeq.Class.jq_ConstantPool.getAsUtf8(C)Ljoeq/UTF/Utf8;#Constant(I,1)#4
joeq.Class.jq_ConstantPool.getAsUtf8(C)Ljoeq/UTF/Utf8;#ConditionalBranch(I,ne,8)#5
joeq.Class.jq_ConstantPool.getAsUtf8(C)Ljoeq/UTF/Utf8;#Constant(I,1)#6
joeq.Class.jq_ConstantPool.getAsUtf8(C)Ljoeq/UTF/Utf8;#Goto(9)#7
joeq.Class.jq_ConstantPool.getAsUtf8(C)Ljoeq/UTF/Utf8;#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#9
joeq.Class.jq_ConstantPool.getAsUtf8(C)Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#10
joeq.Class.jq_ConstantPool.getAsUtf8(C)Ljoeq/UTF/Utf8;#Get([Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool)#11
joeq.Class.jq_ConstantPool.getAsUtf8(C)Ljoeq/UTF/Utf8;#LocalLoad(I,1)#12
joeq.Class.jq_ConstantPool.getAsUtf8(C)Ljoeq/UTF/Utf8;#ArrayLoad(Ljava/lang/Object;)#13
joeq.Class.jq_ConstantPool.getAsUtf8(C)Ljoeq/UTF/Utf8;#CheckCast(Ljoeq/UTF/Utf8;)#14
joeq.Class.jq_ConstantPool.getAsUtf8(C)Ljoeq/UTF/Utf8;#Return(Ljava/lang/Object;)#15
joeq.Class.jq_Class.getCPasUtf8(C)Ljoeq/UTF/Utf8;#Return(Ljava/lang/Object;)#7
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(Ljava/lang/Object;,20)#812
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,1)#813
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(INTERFACE,Ljava/io/DataInput;,readUnsignedShort,()I)#814
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Conversion(I,C)#815
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,21)#816
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#817
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,21)#818
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getCPtag,(C)B)#819
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,1)#820
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,eq,850)#821
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#850
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,21)#851
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getCPasUtf8,(C)Ljoeq/UTF/Utf8;)#852
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(Ljava/lang/Object;,22)#853
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,22)#854
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,isValidMethodDescriptor,()Z)#855
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,0)#856
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,ne,870)#857
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#New(Ljoeq/Class/jq_NameAndDesc;,0)#870
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Dup(1,0)#871
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,20)#872
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,22)#873
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(SPECIAL,Ljoeq/Class/jq_NameAndDesc;,<init>,(Ljoeq/UTF/Utf8;Ljoeq/UTF/Utf8;)V)#874
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(Ljava/lang/Object;,23)#875
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#876
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,23)#877
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getDeclaredMember,(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;)#878
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#CheckCast(Ljoeq/Class/jq_Method;)#879
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(Ljava/lang/Object;,24)#880
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,14)#881
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,18)#882
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ArrayLoad(C)#883
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,8)#884
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#BinaryOp(I,and)#885
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,0)#886
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,eq,909)#887
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,24)#909
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(L;,null)#910
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(Ljava/lang/Object;,ne,917)#911
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#912
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,23)#913
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,createInstanceMethod,(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;)#914
joeq.Class.jq_Class.createInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,0)#14
joeq.Class.jq_Class.createInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,1)#15
joeq.Class.jq_Class.createInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#Invoke(STATIC,Ljoeq/Class/jq_Initializer;,newInitializer,(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Initializer;)#16
joeq.Class.jq_Initializer.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#0
joeq.Class.jq_Initializer.<clinit>()V#Constant(Ljava/lang/String;,"Ljoeq/Class/jq_Initializer;")#1
joeq.Class.jq_Initializer.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#2
joeq.Class.jq_Initializer.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#3
joeq.Class.jq_Initializer.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/jq_Initializer;,_class)#4
joeq.Class.jq_Initializer.<clinit>()V#Return(V)#5
joeq.Class.jq_Initializer.newInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Initializer;#LocalLoad(Ljava/lang/Object;,1)#0
joeq.Class.jq_Initializer.newInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Initializer;#Invoke(VIRTUAL,Ljoeq/Class/jq_NameAndDesc;,getName,()Ljoeq/UTF/Utf8;)#1
joeq.Class.jq_Initializer.newInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Initializer;#Constant(Ljava/lang/String;,"<init>")#2
joeq.Class.jq_Initializer.newInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Initializer;#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#3
joeq.Class.jq_Initializer.newInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Initializer;#ConditionalBranch(Ljava/lang/Object;,ne,7)#4
joeq.Class.jq_Initializer.newInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Initializer;#Constant(I,1)#5
joeq.Class.jq_Initializer.newInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Initializer;#Goto(8)#6
joeq.Class.jq_Initializer.newInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Initializer;#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#8
joeq.Class.jq_Initializer.newInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Initializer;#New(Ljoeq/Class/jq_Initializer;,0)#9
joeq.Class.jq_Initializer.newInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Initializer;#Dup(1,0)#10
joeq.Class.jq_Initializer.newInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Initializer;#LocalLoad(Ljava/lang/Object;,0)#11
joeq.Class.jq_Initializer.newInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Initializer;#LocalLoad(Ljava/lang/Object;,1)#12
joeq.Class.jq_Initializer.newInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Initializer;#Invoke(SPECIAL,Ljoeq/Class/jq_Initializer;,<init>,(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V)#13
joeq.Class.jq_Initializer.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Initializer.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Class.jq_Initializer.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,2)#2
joeq.Class.jq_Initializer.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Invoke(SPECIAL,Ljoeq/Class/jq_InstanceMethod;,<init>,(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V)#3
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Initializer.parseMethodSignature()V#Get(Ljoeq/Class/jq_NameAndDesc;,NONSTATIC,Ljoeq/Class/jq_Initializer;,nd)#1
joeq.Class.jq_Initializer.parseMethodSignature()V#Invoke(VIRTUAL,Ljoeq/Class/jq_NameAndDesc;,getDesc,()Ljoeq/UTF/Utf8;)#2
joeq.Class.jq_Initializer.parseMethodSignature()V#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,getParamDescriptors,()Ljoeq/UTF/Utf8$MethodDescriptorIterator;)#3
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalStore(Ljava/lang/Object;,1)#4
joeq.Class.jq_Initializer.parseMethodSignature()V#Constant(I,1)#5
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalStore(I,2)#6
joeq.Class.jq_Initializer.parseMethodSignature()V#Constant(I,1)#7
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalStore(I,3)#8
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,1)#9
joeq.Class.jq_Initializer.parseMethodSignature()V#Invoke(VIRTUAL,Ljoeq/UTF/Utf8$MethodDescriptorIterator;,hasNext,()Z)#10
joeq.Class.jq_Initializer.parseMethodSignature()V#Constant(I,0)#11
joeq.Class.jq_Initializer.parseMethodSignature()V#ConditionalBranch(I,eq,21)#12
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#21
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalLoad(I,2)#22
joeq.Class.jq_Initializer.parseMethodSignature()V#New([Ljoeq/Class/jq_Type;,1)#23
joeq.Class.jq_Initializer.parseMethodSignature()V#Put([Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_Initializer;,param_types)#24
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#25
joeq.Class.jq_Initializer.parseMethodSignature()V#Get([Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_Initializer;,param_types)#26
joeq.Class.jq_Initializer.parseMethodSignature()V#Constant(I,0)#27
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#28
joeq.Class.jq_Initializer.parseMethodSignature()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Initializer;,clazz)#29
joeq.Class.jq_Initializer.parseMethodSignature()V#ArrayStore(Ljava/lang/Object;)#30
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#31
joeq.Class.jq_Initializer.parseMethodSignature()V#Get(Ljoeq/Class/jq_NameAndDesc;,NONSTATIC,Ljoeq/Class/jq_Initializer;,nd)#32
joeq.Class.jq_Initializer.parseMethodSignature()V#Invoke(VIRTUAL,Ljoeq/Class/jq_NameAndDesc;,getDesc,()Ljoeq/UTF/Utf8;)#33
joeq.Class.jq_Initializer.parseMethodSignature()V#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,getParamDescriptors,()Ljoeq/UTF/Utf8$MethodDescriptorIterator;)#34
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalStore(Ljava/lang/Object;,1)#35
joeq.Class.jq_Initializer.parseMethodSignature()V#Constant(I,1)#36
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalStore(I,4)#37
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalLoad(I,4)#38
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalLoad(I,2)#39
joeq.Class.jq_Initializer.parseMethodSignature()V#ConditionalBranch(I,ge,78)#40
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#78
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalLoad(I,3)#79
joeq.Class.jq_Initializer.parseMethodSignature()V#Put(I,NONSTATIC,Ljoeq/Class/jq_Initializer;,param_words)#80
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#81
joeq.Class.jq_Initializer.parseMethodSignature()V#Get(Ljoeq/Class/jq_Primitive;,STATIC,Ljoeq/Class/jq_Primitive;,VOID)#82
joeq.Class.jq_Initializer.parseMethodSignature()V#Put(Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_Initializer;,return_type)#83
joeq.Class.jq_Initializer.parseMethodSignature()V#Return(V)#84
joeq.Class.jq_Initializer.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Return(V)#4
joeq.Class.jq_Initializer.newInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Initializer;#Return(Ljava/lang/Object;)#14
joeq.Class.jq_Class.createInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#LocalStore(Ljava/lang/Object;,2)#17
joeq.Class.jq_Class.createInstanceMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#Goto(23)#18
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(Ljava/lang/Object;,24)#915
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Goto(925)#916
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,17)#925
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,1)#926
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#BinaryOp(I,add)#927
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,17)#928
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,24)#929
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,14)#930
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,18)#931
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ArrayLoad(C)#932
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,1)#933
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,load,(CLjava/io/DataInput;)V)#934
joeq.Class.jq_Method.load(CLjava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Method.load(CLjava/io/DataInput;)V#LocalLoad(I,1)#1
joeq.Class.jq_Method.load(CLjava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,2)#2
joeq.Class.jq_Method.load(CLjava/io/DataInput;)V#Invoke(SPECIAL,Ljoeq/Class/jq_Member;,load,(CLjava/io/DataInput;)V)#3
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#Constant(I,1)#1
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#Put(B,NONSTATIC,Ljoeq/Class/jq_Member;,state)#2
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#LocalLoad(I,1)#4
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#Put(C,NONSTATIC,Ljoeq/Class/jq_Member;,access_flags)#5
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#6
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#New(Ljava/util/HashMap;,0)#7
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#Dup(1,0)#8
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#9
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#Put(Ljava/util/Map;,NONSTATIC,Ljoeq/Class/jq_Member;,attributes)#10
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,2)#11
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#Invoke(INTERFACE,Ljava/io/DataInput;,readUnsignedShort,()I)#12
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#Conversion(I,C)#13
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#LocalStore(I,3)#14
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#Constant(I,0)#15
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#LocalStore(I,4)#16
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#LocalLoad(I,4)#17
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#LocalLoad(I,3)#18
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#ConditionalBranch(I,ge,82)#19
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,2)#20
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#Invoke(INTERFACE,Ljava/io/DataInput;,readUnsignedShort,()I)#21
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#Conversion(I,C)#22
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#LocalStore(I,5)#23
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#24
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Member;,clazz)#25
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#LocalLoad(I,5)#26
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getCPtag,(C)B)#27
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#Constant(I,1)#28
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#ConditionalBranch(I,eq,57)#29
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#57
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Member;,clazz)#58
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#LocalLoad(I,5)#59
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getCPasUtf8,(C)Ljoeq/UTF/Utf8;)#60
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#LocalStore(Ljava/lang/Object;,6)#61
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,2)#62
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#Invoke(INTERFACE,Ljava/io/DataInput;,readInt,()I)#63
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#LocalStore(I,7)#64
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#LocalLoad(I,7)#65
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#New([B,1)#66
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#LocalStore(Ljava/lang/Object;,8)#67
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,2)#68
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,8)#69
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#Invoke(INTERFACE,Ljava/io/DataInput;,readFully,([B)V)#70
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#71
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#Get(Ljava/util/Map;,NONSTATIC,Ljoeq/Class/jq_Member;,attributes)#72
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,6)#73
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,8)#74
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#75
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#Pop(1)#76
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#LocalLoad(I,4)#77
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#Constant(I,1)#78
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#BinaryOp(I,add)#79
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#LocalStore(I,4)#80
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#Goto(17)#81
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#82
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#Constant(I,2)#83
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#Put(B,NONSTATIC,Ljoeq/Class/jq_Member;,state)#84
joeq.Class.jq_Member.load(CLjava/io/DataInput;)V#Return(V)#85
joeq.Class.jq_Method.load(CLjava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#4
joeq.Class.jq_Method.load(CLjava/io/DataInput;)V#Invoke(SPECIAL,Ljoeq/Class/jq_Method;,parseAttributes,()V)#5
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Method.parseAttributes()V#Constant(Ljava/lang/String;,"Code")#1
joeq.Class.jq_Method.parseAttributes()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getAttribute,(Ljava/lang/String;)[B)#2
joeq.Class.jq_Member.getAttribute(Ljava/lang/String;)[B#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Member.getAttribute(Ljava/lang/String;)[B#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Class.jq_Member.getAttribute(Ljava/lang/String;)[B#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#2
joeq.Class.jq_Member.getAttribute(Ljava/lang/String;)[B#Invoke(VIRTUAL,Ljoeq/Class/jq_Member;,getAttribute,(Ljoeq/UTF/Utf8;)[B)#3
joeq.Class.jq_Member.getAttribute(Ljoeq/UTF/Utf8;)[B#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Member.getAttribute(Ljoeq/UTF/Utf8;)[B#Constant(I,2)#1
joeq.Class.jq_Member.getAttribute(Ljoeq/UTF/Utf8;)[B#Invoke(VIRTUAL,Ljoeq/Class/jq_Member;,chkState,(I)V)#2
joeq.Class.jq_Member.chkState(I)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Member.chkState(I)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Member;,getState,()I)#1
joeq.Class.jq_Member.getState()I#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Member.getState()I#Get(B,NONSTATIC,Ljoeq/Class/jq_Member;,state)#1
joeq.Class.jq_Member.getState()I#Return(I)#2
joeq.Class.jq_Member.chkState(I)V#LocalLoad(I,1)#2
joeq.Class.jq_Member.chkState(I)V#ConditionalBranch(I,lt,5)#3
joeq.Class.jq_Member.chkState(I)V#Return(V)#4
joeq.Class.jq_Member.getAttribute(Ljoeq/UTF/Utf8;)[B#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Member.getAttribute(Ljoeq/UTF/Utf8;)[B#Get(Ljava/util/Map;,NONSTATIC,Ljoeq/Class/jq_Member;,attributes)#4
joeq.Class.jq_Member.getAttribute(Ljoeq/UTF/Utf8;)[B#LocalLoad(Ljava/lang/Object;,1)#5
joeq.Class.jq_Member.getAttribute(Ljoeq/UTF/Utf8;)[B#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#6
joeq.Class.jq_Member.getAttribute(Ljoeq/UTF/Utf8;)[B#CheckCast([B)#7
joeq.Class.jq_Member.getAttribute(Ljoeq/UTF/Utf8;)[B#CheckCast([B)#8
joeq.Class.jq_Member.getAttribute(Ljoeq/UTF/Utf8;)[B#Return(Ljava/lang/Object;)#9
joeq.Class.jq_Member.getAttribute(Ljava/lang/String;)[B#Return(Ljava/lang/Object;)#4
joeq.Class.jq_Method.parseAttributes()V#LocalStore(Ljava/lang/Object;,1)#3
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,1)#4
joeq.Class.jq_Method.parseAttributes()V#Constant(L;,null)#5
joeq.Class.jq_Method.parseAttributes()V#ConditionalBranch(Ljava/lang/Object;,eq,382)#6
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,0)#7
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,1)#8
joeq.Class.jq_Method.parseAttributes()V#Constant(I,0)#9
joeq.Class.jq_Method.parseAttributes()V#Invoke(STATIC,Ljwutil/util/Convert;,twoBytesToChar,([BI)C)#10
jwutil.util.Convert.twoBytesToChar([BI)C#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.util.Convert.twoBytesToChar([BI)C#LocalLoad(I,1)#1
jwutil.util.Convert.twoBytesToChar([BI)C#ArrayLoad(B)#2
jwutil.util.Convert.twoBytesToChar([BI)C#LocalLoad(Ljava/lang/Object;,0)#3
jwutil.util.Convert.twoBytesToChar([BI)C#LocalLoad(I,1)#4
jwutil.util.Convert.twoBytesToChar([BI)C#Constant(I,1)#5
jwutil.util.Convert.twoBytesToChar([BI)C#BinaryOp(I,add)#6
jwutil.util.Convert.twoBytesToChar([BI)C#ArrayLoad(B)#7
jwutil.util.Convert.twoBytesToChar([BI)C#Invoke(STATIC,Ljwutil/util/Convert;,twoBytesToChar,(BB)C)#8
jwutil.util.Convert.twoBytesToChar(BB)C#LocalLoad(I,0)#0
jwutil.util.Convert.twoBytesToChar(BB)C#Constant(I,8)#1
jwutil.util.Convert.twoBytesToChar(BB)C#Shift(I,SHL)#2
jwutil.util.Convert.twoBytesToChar(BB)C#LocalLoad(I,1)#3
jwutil.util.Convert.twoBytesToChar(BB)C#Constant(I,255)#4
jwutil.util.Convert.twoBytesToChar(BB)C#BinaryOp(I,and)#5
jwutil.util.Convert.twoBytesToChar(BB)C#BinaryOp(I,or)#6
jwutil.util.Convert.twoBytesToChar(BB)C#Conversion(I,C)#7
jwutil.util.Convert.twoBytesToChar(BB)C#Return(I)#8
jwutil.util.Convert.twoBytesToChar([BI)C#Return(I)#9
joeq.Class.jq_Method.parseAttributes()V#Put(C,NONSTATIC,Ljoeq/Class/jq_Method;,max_stack)#11
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,0)#12
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,1)#13
joeq.Class.jq_Method.parseAttributes()V#Constant(I,2)#14
joeq.Class.jq_Method.parseAttributes()V#Invoke(STATIC,Ljwutil/util/Convert;,twoBytesToChar,([BI)C)#15
joeq.Class.jq_Method.parseAttributes()V#Put(C,NONSTATIC,Ljoeq/Class/jq_Method;,max_locals)#16
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,1)#17
joeq.Class.jq_Method.parseAttributes()V#Constant(I,4)#18
joeq.Class.jq_Method.parseAttributes()V#Invoke(STATIC,Ljwutil/util/Convert;,fourBytesToInt,([BI)I)#19
jwutil.util.Convert.fourBytesToInt([BI)I#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.util.Convert.fourBytesToInt([BI)I#LocalLoad(I,1)#1
jwutil.util.Convert.fourBytesToInt([BI)I#ArrayLoad(B)#2
jwutil.util.Convert.fourBytesToInt([BI)I#LocalLoad(Ljava/lang/Object;,0)#3
jwutil.util.Convert.fourBytesToInt([BI)I#LocalLoad(I,1)#4
jwutil.util.Convert.fourBytesToInt([BI)I#Constant(I,1)#5
jwutil.util.Convert.fourBytesToInt([BI)I#BinaryOp(I,add)#6
jwutil.util.Convert.fourBytesToInt([BI)I#ArrayLoad(B)#7
jwutil.util.Convert.fourBytesToInt([BI)I#LocalLoad(Ljava/lang/Object;,0)#8
jwutil.util.Convert.fourBytesToInt([BI)I#LocalLoad(I,1)#9
jwutil.util.Convert.fourBytesToInt([BI)I#Constant(I,2)#10
jwutil.util.Convert.fourBytesToInt([BI)I#BinaryOp(I,add)#11
jwutil.util.Convert.fourBytesToInt([BI)I#ArrayLoad(B)#12
jwutil.util.Convert.fourBytesToInt([BI)I#LocalLoad(Ljava/lang/Object;,0)#13
jwutil.util.Convert.fourBytesToInt([BI)I#LocalLoad(I,1)#14
jwutil.util.Convert.fourBytesToInt([BI)I#Constant(I,3)#15
jwutil.util.Convert.fourBytesToInt([BI)I#BinaryOp(I,add)#16
jwutil.util.Convert.fourBytesToInt([BI)I#ArrayLoad(B)#17
jwutil.util.Convert.fourBytesToInt([BI)I#Invoke(STATIC,Ljwutil/util/Convert;,fourBytesToInt,(BBBB)I)#18
jwutil.util.Convert.fourBytesToInt(BBBB)I#LocalLoad(I,0)#0
jwutil.util.Convert.fourBytesToInt(BBBB)I#Constant(I,24)#1
jwutil.util.Convert.fourBytesToInt(BBBB)I#Shift(I,SHL)#2
jwutil.util.Convert.fourBytesToInt(BBBB)I#LocalLoad(I,1)#3
jwutil.util.Convert.fourBytesToInt(BBBB)I#Constant(I,255)#4
jwutil.util.Convert.fourBytesToInt(BBBB)I#BinaryOp(I,and)#5
jwutil.util.Convert.fourBytesToInt(BBBB)I#Constant(I,16)#6
jwutil.util.Convert.fourBytesToInt(BBBB)I#Shift(I,SHL)#7
jwutil.util.Convert.fourBytesToInt(BBBB)I#BinaryOp(I,or)#8
jwutil.util.Convert.fourBytesToInt(BBBB)I#LocalLoad(I,2)#9
jwutil.util.Convert.fourBytesToInt(BBBB)I#Constant(I,255)#10
jwutil.util.Convert.fourBytesToInt(BBBB)I#BinaryOp(I,and)#11
jwutil.util.Convert.fourBytesToInt(BBBB)I#Constant(I,8)#12
jwutil.util.Convert.fourBytesToInt(BBBB)I#Shift(I,SHL)#13
jwutil.util.Convert.fourBytesToInt(BBBB)I#BinaryOp(I,or)#14
jwutil.util.Convert.fourBytesToInt(BBBB)I#LocalLoad(I,3)#15
jwutil.util.Convert.fourBytesToInt(BBBB)I#Constant(I,255)#16
jwutil.util.Convert.fourBytesToInt(BBBB)I#BinaryOp(I,and)#17
jwutil.util.Convert.fourBytesToInt(BBBB)I#BinaryOp(I,or)#18
jwutil.util.Convert.fourBytesToInt(BBBB)I#Return(I)#19
jwutil.util.Convert.fourBytesToInt([BI)I#Return(I)#19
joeq.Class.jq_Method.parseAttributes()V#LocalStore(I,2)#20
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,2)#21
joeq.Class.jq_Method.parseAttributes()V#Constant(I,0)#22
joeq.Class.jq_Method.parseAttributes()V#ConditionalBranch(I,gt,28)#23
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,0)#28
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,2)#29
joeq.Class.jq_Method.parseAttributes()V#New([B,1)#30
joeq.Class.jq_Method.parseAttributes()V#Put([B,NONSTATIC,Ljoeq/Class/jq_Method;,bytecode)#31
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,1)#32
joeq.Class.jq_Method.parseAttributes()V#Constant(I,8)#33
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,0)#34
joeq.Class.jq_Method.parseAttributes()V#Get([B,NONSTATIC,Ljoeq/Class/jq_Method;,bytecode)#35
joeq.Class.jq_Method.parseAttributes()V#Constant(I,0)#36
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,2)#37
joeq.Class.jq_Method.parseAttributes()V#Invoke(STATIC,Ljava/lang/System;,arraycopy,(Ljava/lang/Object;ILjava/lang/Object;II)V)#38
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,1)#39
joeq.Class.jq_Method.parseAttributes()V#Constant(I,8)#40
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,2)#41
joeq.Class.jq_Method.parseAttributes()V#BinaryOp(I,add)#42
joeq.Class.jq_Method.parseAttributes()V#Invoke(STATIC,Ljwutil/util/Convert;,twoBytesToChar,([BI)C)#43
joeq.Class.jq_Method.parseAttributes()V#LocalStore(I,3)#44
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,0)#45
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,3)#46
joeq.Class.jq_Method.parseAttributes()V#New([Ljoeq/Class/jq_TryCatchBC;,1)#47
joeq.Class.jq_Method.parseAttributes()V#Put([Ljoeq/Class/jq_TryCatchBC;,NONSTATIC,Ljoeq/Class/jq_Method;,exception_table)#48
joeq.Class.jq_Method.parseAttributes()V#Constant(I,10)#49
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,2)#50
joeq.Class.jq_Method.parseAttributes()V#BinaryOp(I,add)#51
joeq.Class.jq_Method.parseAttributes()V#LocalStore(I,4)#52
joeq.Class.jq_Method.parseAttributes()V#Constant(I,0)#53
joeq.Class.jq_Method.parseAttributes()V#LocalStore(I,5)#54
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,5)#55
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,3)#56
joeq.Class.jq_Method.parseAttributes()V#ConditionalBranch(I,ge,109)#57
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,1)#109
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,4)#110
joeq.Class.jq_Method.parseAttributes()V#Invoke(STATIC,Ljwutil/util/Convert;,twoBytesToChar,([BI)C)#111
joeq.Class.jq_Method.parseAttributes()V#LocalStore(I,5)#112
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,0)#113
joeq.Class.jq_Method.parseAttributes()V#New(Ljava/util/HashMap;,0)#114
joeq.Class.jq_Method.parseAttributes()V#Dup(1,0)#115
joeq.Class.jq_Method.parseAttributes()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#116
joeq.Class.jq_Method.parseAttributes()V#Put(Ljava/util/Map;,NONSTATIC,Ljoeq/Class/jq_Method;,codeattribMap)#117
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,4)#118
joeq.Class.jq_Method.parseAttributes()V#Constant(I,2)#119
joeq.Class.jq_Method.parseAttributes()V#BinaryOp(I,add)#120
joeq.Class.jq_Method.parseAttributes()V#LocalStore(I,4)#121
joeq.Class.jq_Method.parseAttributes()V#Constant(I,0)#122
joeq.Class.jq_Method.parseAttributes()V#LocalStore(I,6)#123
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,6)#124
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,5)#125
joeq.Class.jq_Method.parseAttributes()V#ConditionalBranch(I,ge,180)#126
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,1)#127
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,4)#128
joeq.Class.jq_Method.parseAttributes()V#Invoke(STATIC,Ljwutil/util/Convert;,twoBytesToChar,([BI)C)#129
joeq.Class.jq_Method.parseAttributes()V#LocalStore(I,7)#130
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,0)#131
joeq.Class.jq_Method.parseAttributes()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Method;,clazz)#132
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,7)#133
joeq.Class.jq_Method.parseAttributes()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getCPtag,(C)B)#134
joeq.Class.jq_Method.parseAttributes()V#Constant(I,1)#135
joeq.Class.jq_Method.parseAttributes()V#ConditionalBranch(I,eq,141)#136
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,0)#141
joeq.Class.jq_Method.parseAttributes()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Method;,clazz)#142
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,7)#143
joeq.Class.jq_Method.parseAttributes()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getCPasUtf8,(C)Ljoeq/UTF/Utf8;)#144
joeq.Class.jq_Method.parseAttributes()V#LocalStore(Ljava/lang/Object;,8)#145
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,1)#146
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,4)#147
joeq.Class.jq_Method.parseAttributes()V#Constant(I,2)#148
joeq.Class.jq_Method.parseAttributes()V#BinaryOp(I,add)#149
joeq.Class.jq_Method.parseAttributes()V#Invoke(STATIC,Ljwutil/util/Convert;,fourBytesToInt,([BI)I)#150
joeq.Class.jq_Method.parseAttributes()V#LocalStore(I,9)#151
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,9)#152
joeq.Class.jq_Method.parseAttributes()V#New([B,1)#153
joeq.Class.jq_Method.parseAttributes()V#LocalStore(Ljava/lang/Object;,10)#154
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,1)#155
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,4)#156
joeq.Class.jq_Method.parseAttributes()V#Constant(I,6)#157
joeq.Class.jq_Method.parseAttributes()V#BinaryOp(I,add)#158
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,10)#159
joeq.Class.jq_Method.parseAttributes()V#Constant(I,0)#160
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,9)#161
joeq.Class.jq_Method.parseAttributes()V#Invoke(STATIC,Ljava/lang/System;,arraycopy,(Ljava/lang/Object;ILjava/lang/Object;II)V)#162
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,0)#163
joeq.Class.jq_Method.parseAttributes()V#Get(Ljava/util/Map;,NONSTATIC,Ljoeq/Class/jq_Method;,codeattribMap)#164
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,8)#165
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,10)#166
joeq.Class.jq_Method.parseAttributes()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#167
joeq.Class.jq_Method.parseAttributes()V#Pop(1)#168
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,4)#169
joeq.Class.jq_Method.parseAttributes()V#Constant(I,6)#170
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,9)#171
joeq.Class.jq_Method.parseAttributes()V#BinaryOp(I,add)#172
joeq.Class.jq_Method.parseAttributes()V#BinaryOp(I,add)#173
joeq.Class.jq_Method.parseAttributes()V#LocalStore(I,4)#174
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,6)#175
joeq.Class.jq_Method.parseAttributes()V#Constant(I,1)#176
joeq.Class.jq_Method.parseAttributes()V#BinaryOp(I,add)#177
joeq.Class.jq_Method.parseAttributes()V#LocalStore(I,6)#178
joeq.Class.jq_Method.parseAttributes()V#Goto(124)#179
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,4)#180
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,1)#181
joeq.Class.jq_Method.parseAttributes()V#ArrayLength()#182
joeq.Class.jq_Method.parseAttributes()V#ConditionalBranch(I,eq,188)#183
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,0)#188
joeq.Class.jq_Method.parseAttributes()V#Constant(Ljava/lang/String;,"LineNumberTable")#189
joeq.Class.jq_Method.parseAttributes()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#190
joeq.Class.jq_Method.parseAttributes()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getCodeAttribute,(Ljoeq/UTF/Utf8;)[B)#191
joeq.Class.jq_Method.getCodeAttribute(Ljoeq/UTF/Utf8;)[B#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Method.getCodeAttribute(Ljoeq/UTF/Utf8;)[B#Constant(I,2)#1
joeq.Class.jq_Method.getCodeAttribute(Ljoeq/UTF/Utf8;)[B#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,chkState,(I)V)#2
joeq.Class.jq_Method.getCodeAttribute(Ljoeq/UTF/Utf8;)[B#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Method.getCodeAttribute(Ljoeq/UTF/Utf8;)[B#Get(Ljava/util/Map;,NONSTATIC,Ljoeq/Class/jq_Method;,codeattribMap)#4
joeq.Class.jq_Method.getCodeAttribute(Ljoeq/UTF/Utf8;)[B#LocalLoad(Ljava/lang/Object;,1)#5
joeq.Class.jq_Method.getCodeAttribute(Ljoeq/UTF/Utf8;)[B#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#6
joeq.Class.jq_Method.getCodeAttribute(Ljoeq/UTF/Utf8;)[B#CheckCast([B)#7
joeq.Class.jq_Method.getCodeAttribute(Ljoeq/UTF/Utf8;)[B#CheckCast([B)#8
joeq.Class.jq_Method.getCodeAttribute(Ljoeq/UTF/Utf8;)[B#Return(Ljava/lang/Object;)#9
joeq.Class.jq_Method.parseAttributes()V#LocalStore(Ljava/lang/Object;,1)#192
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,1)#193
joeq.Class.jq_Method.parseAttributes()V#Constant(L;,null)#194
joeq.Class.jq_Method.parseAttributes()V#ConditionalBranch(Ljava/lang/Object;,eq,255)#195
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,1)#196
joeq.Class.jq_Method.parseAttributes()V#Constant(I,0)#197
joeq.Class.jq_Method.parseAttributes()V#Invoke(STATIC,Ljwutil/util/Convert;,twoBytesToChar,([BI)C)#198
joeq.Class.jq_Method.parseAttributes()V#LocalStore(I,6)#199
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,1)#200
joeq.Class.jq_Method.parseAttributes()V#ArrayLength()#201
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,6)#202
joeq.Class.jq_Method.parseAttributes()V#Constant(I,4)#203
joeq.Class.jq_Method.parseAttributes()V#BinaryOp(I,mul)#204
joeq.Class.jq_Method.parseAttributes()V#Constant(I,2)#205
joeq.Class.jq_Method.parseAttributes()V#BinaryOp(I,add)#206
joeq.Class.jq_Method.parseAttributes()V#ConditionalBranch(I,eq,212)#207
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,0)#212
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,6)#213
joeq.Class.jq_Method.parseAttributes()V#New([Ljoeq/Class/jq_LineNumberBC;,1)#214
joeq.Class.jq_Method.parseAttributes()V#Put([Ljoeq/Class/jq_LineNumberBC;,NONSTATIC,Ljoeq/Class/jq_Method;,line_num_table)#215
joeq.Class.jq_Method.parseAttributes()V#Constant(I,0)#216
joeq.Class.jq_Method.parseAttributes()V#LocalStore(I,7)#217
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,7)#218
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,6)#219
joeq.Class.jq_Method.parseAttributes()V#ConditionalBranch(I,ge,251)#220
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,1)#221
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,7)#222
joeq.Class.jq_Method.parseAttributes()V#Constant(I,4)#223
joeq.Class.jq_Method.parseAttributes()V#BinaryOp(I,mul)#224
joeq.Class.jq_Method.parseAttributes()V#Constant(I,2)#225
joeq.Class.jq_Method.parseAttributes()V#BinaryOp(I,add)#226
joeq.Class.jq_Method.parseAttributes()V#Invoke(STATIC,Ljwutil/util/Convert;,twoBytesToChar,([BI)C)#227
joeq.Class.jq_Method.parseAttributes()V#LocalStore(I,8)#228
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,1)#229
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,7)#230
joeq.Class.jq_Method.parseAttributes()V#Constant(I,4)#231
joeq.Class.jq_Method.parseAttributes()V#BinaryOp(I,mul)#232
joeq.Class.jq_Method.parseAttributes()V#Constant(I,4)#233
joeq.Class.jq_Method.parseAttributes()V#BinaryOp(I,add)#234
joeq.Class.jq_Method.parseAttributes()V#Invoke(STATIC,Ljwutil/util/Convert;,twoBytesToChar,([BI)C)#235
joeq.Class.jq_Method.parseAttributes()V#LocalStore(I,9)#236
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,0)#237
joeq.Class.jq_Method.parseAttributes()V#Get([Ljoeq/Class/jq_LineNumberBC;,NONSTATIC,Ljoeq/Class/jq_Method;,line_num_table)#238
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,7)#239
joeq.Class.jq_Method.parseAttributes()V#New(Ljoeq/Class/jq_LineNumberBC;,0)#240
joeq.Class.jq_Method.parseAttributes()V#Dup(1,0)#241
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,8)#242
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,9)#243
joeq.Class.jq_Method.parseAttributes()V#Invoke(SPECIAL,Ljoeq/Class/jq_LineNumberBC;,<init>,(CC)V)#244
joeq.Class.jq_LineNumberBC.<init>(CC)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_LineNumberBC.<init>(CC)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Class.jq_LineNumberBC.<init>(CC)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Class.jq_LineNumberBC.<init>(CC)V#LocalLoad(I,1)#3
joeq.Class.jq_LineNumberBC.<init>(CC)V#Put(C,NONSTATIC,Ljoeq/Class/jq_LineNumberBC;,startPC)#4
joeq.Class.jq_LineNumberBC.<init>(CC)V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Class.jq_LineNumberBC.<init>(CC)V#LocalLoad(I,2)#6
joeq.Class.jq_LineNumberBC.<init>(CC)V#Put(C,NONSTATIC,Ljoeq/Class/jq_LineNumberBC;,lineNum)#7
joeq.Class.jq_LineNumberBC.<init>(CC)V#Return(V)#8
joeq.Class.jq_Method.parseAttributes()V#ArrayStore(Ljava/lang/Object;)#245
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,7)#246
joeq.Class.jq_Method.parseAttributes()V#Constant(I,1)#247
joeq.Class.jq_Method.parseAttributes()V#BinaryOp(I,add)#248
joeq.Class.jq_Method.parseAttributes()V#LocalStore(I,7)#249
joeq.Class.jq_Method.parseAttributes()V#Goto(218)#250
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,0)#251
joeq.Class.jq_Method.parseAttributes()V#Get([Ljoeq/Class/jq_LineNumberBC;,NONSTATIC,Ljoeq/Class/jq_Method;,line_num_table)#252
joeq.Class.jq_Method.parseAttributes()V#Invoke(STATIC,Ljava/util/Arrays;,sort,([Ljava/lang/Object;)V)#253
joeq.Class.jq_Method.parseAttributes()V#Goto(259)#254
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,0)#259
joeq.Class.jq_Method.parseAttributes()V#Constant(Ljava/lang/String;,"LocalVariableTable")#260
joeq.Class.jq_Method.parseAttributes()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#261
joeq.Class.jq_Method.parseAttributes()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getCodeAttribute,(Ljoeq/UTF/Utf8;)[B)#262
joeq.Class.jq_Method.parseAttributes()V#LocalStore(Ljava/lang/Object;,1)#263
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,1)#264
joeq.Class.jq_Method.parseAttributes()V#Constant(L;,null)#265
joeq.Class.jq_Method.parseAttributes()V#ConditionalBranch(Ljava/lang/Object;,eq,381)#266
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,1)#267
joeq.Class.jq_Method.parseAttributes()V#Constant(I,0)#268
joeq.Class.jq_Method.parseAttributes()V#Invoke(STATIC,Ljwutil/util/Convert;,twoBytesToChar,([BI)C)#269
joeq.Class.jq_Method.parseAttributes()V#LocalStore(I,6)#270
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,1)#271
joeq.Class.jq_Method.parseAttributes()V#ArrayLength()#272
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,6)#273
joeq.Class.jq_Method.parseAttributes()V#Constant(I,10)#274
joeq.Class.jq_Method.parseAttributes()V#BinaryOp(I,mul)#275
joeq.Class.jq_Method.parseAttributes()V#Constant(I,2)#276
joeq.Class.jq_Method.parseAttributes()V#BinaryOp(I,add)#277
joeq.Class.jq_Method.parseAttributes()V#ConditionalBranch(I,eq,283)#278
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,0)#283
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,6)#284
joeq.Class.jq_Method.parseAttributes()V#New([Ljoeq/Class/jq_LocalVarTableEntry;,1)#285
joeq.Class.jq_Method.parseAttributes()V#Put([Ljoeq/Class/jq_LocalVarTableEntry;,NONSTATIC,Ljoeq/Class/jq_Method;,localvar_table)#286
joeq.Class.jq_Method.parseAttributes()V#Constant(I,0)#287
joeq.Class.jq_Method.parseAttributes()V#LocalStore(I,7)#288
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,7)#289
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,6)#290
joeq.Class.jq_Method.parseAttributes()V#ConditionalBranch(I,ge,378)#291
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,1)#292
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,7)#293
joeq.Class.jq_Method.parseAttributes()V#Constant(I,10)#294
joeq.Class.jq_Method.parseAttributes()V#BinaryOp(I,mul)#295
joeq.Class.jq_Method.parseAttributes()V#Constant(I,2)#296
joeq.Class.jq_Method.parseAttributes()V#BinaryOp(I,add)#297
joeq.Class.jq_Method.parseAttributes()V#Invoke(STATIC,Ljwutil/util/Convert;,twoBytesToChar,([BI)C)#298
joeq.Class.jq_Method.parseAttributes()V#LocalStore(I,8)#299
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,1)#300
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,7)#301
joeq.Class.jq_Method.parseAttributes()V#Constant(I,10)#302
joeq.Class.jq_Method.parseAttributes()V#BinaryOp(I,mul)#303
joeq.Class.jq_Method.parseAttributes()V#Constant(I,4)#304
joeq.Class.jq_Method.parseAttributes()V#BinaryOp(I,add)#305
joeq.Class.jq_Method.parseAttributes()V#Invoke(STATIC,Ljwutil/util/Convert;,twoBytesToChar,([BI)C)#306
joeq.Class.jq_Method.parseAttributes()V#LocalStore(I,9)#307
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,1)#308
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,7)#309
joeq.Class.jq_Method.parseAttributes()V#Constant(I,10)#310
joeq.Class.jq_Method.parseAttributes()V#BinaryOp(I,mul)#311
joeq.Class.jq_Method.parseAttributes()V#Constant(I,6)#312
joeq.Class.jq_Method.parseAttributes()V#BinaryOp(I,add)#313
joeq.Class.jq_Method.parseAttributes()V#Invoke(STATIC,Ljwutil/util/Convert;,twoBytesToChar,([BI)C)#314
joeq.Class.jq_Method.parseAttributes()V#LocalStore(I,10)#315
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,0)#316
joeq.Class.jq_Method.parseAttributes()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Method;,clazz)#317
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,10)#318
joeq.Class.jq_Method.parseAttributes()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getCPtag,(C)B)#319
joeq.Class.jq_Method.parseAttributes()V#Constant(I,1)#320
joeq.Class.jq_Method.parseAttributes()V#ConditionalBranch(I,eq,326)#321
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,1)#326
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,7)#327
joeq.Class.jq_Method.parseAttributes()V#Constant(I,10)#328
joeq.Class.jq_Method.parseAttributes()V#BinaryOp(I,mul)#329
joeq.Class.jq_Method.parseAttributes()V#Constant(I,8)#330
joeq.Class.jq_Method.parseAttributes()V#BinaryOp(I,add)#331
joeq.Class.jq_Method.parseAttributes()V#Invoke(STATIC,Ljwutil/util/Convert;,twoBytesToChar,([BI)C)#332
joeq.Class.jq_Method.parseAttributes()V#LocalStore(I,11)#333
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,0)#334
joeq.Class.jq_Method.parseAttributes()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Method;,clazz)#335
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,11)#336
joeq.Class.jq_Method.parseAttributes()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getCPtag,(C)B)#337
joeq.Class.jq_Method.parseAttributes()V#Constant(I,1)#338
joeq.Class.jq_Method.parseAttributes()V#ConditionalBranch(I,eq,344)#339
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,1)#344
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,7)#345
joeq.Class.jq_Method.parseAttributes()V#Constant(I,10)#346
joeq.Class.jq_Method.parseAttributes()V#BinaryOp(I,mul)#347
joeq.Class.jq_Method.parseAttributes()V#Constant(I,10)#348
joeq.Class.jq_Method.parseAttributes()V#BinaryOp(I,add)#349
joeq.Class.jq_Method.parseAttributes()V#Invoke(STATIC,Ljwutil/util/Convert;,twoBytesToChar,([BI)C)#350
joeq.Class.jq_Method.parseAttributes()V#LocalStore(I,12)#351
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,0)#352
joeq.Class.jq_Method.parseAttributes()V#Get([Ljoeq/Class/jq_LocalVarTableEntry;,NONSTATIC,Ljoeq/Class/jq_Method;,localvar_table)#353
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,7)#354
joeq.Class.jq_Method.parseAttributes()V#New(Ljoeq/Class/jq_LocalVarTableEntry;,0)#355
joeq.Class.jq_Method.parseAttributes()V#Dup(1,0)#356
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,8)#357
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,9)#358
joeq.Class.jq_Method.parseAttributes()V#New(Ljoeq/Class/jq_NameAndDesc;,0)#359
joeq.Class.jq_Method.parseAttributes()V#Dup(1,0)#360
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,0)#361
joeq.Class.jq_Method.parseAttributes()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Method;,clazz)#362
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,10)#363
joeq.Class.jq_Method.parseAttributes()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getCPasUtf8,(C)Ljoeq/UTF/Utf8;)#364
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,0)#365
joeq.Class.jq_Method.parseAttributes()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Method;,clazz)#366
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,11)#367
joeq.Class.jq_Method.parseAttributes()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getCPasUtf8,(C)Ljoeq/UTF/Utf8;)#368
joeq.Class.jq_Method.parseAttributes()V#Invoke(SPECIAL,Ljoeq/Class/jq_NameAndDesc;,<init>,(Ljoeq/UTF/Utf8;Ljoeq/UTF/Utf8;)V)#369
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,12)#370
joeq.Class.jq_Method.parseAttributes()V#Invoke(SPECIAL,Ljoeq/Class/jq_LocalVarTableEntry;,<init>,(CCLjoeq/Class/jq_NameAndDesc;C)V)#371
joeq.Class.jq_LocalVarTableEntry.<init>(CCLjoeq/Class/jq_NameAndDesc;C)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_LocalVarTableEntry.<init>(CCLjoeq/Class/jq_NameAndDesc;C)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Class.jq_LocalVarTableEntry.<init>(CCLjoeq/Class/jq_NameAndDesc;C)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Class.jq_LocalVarTableEntry.<init>(CCLjoeq/Class/jq_NameAndDesc;C)V#LocalLoad(I,1)#3
joeq.Class.jq_LocalVarTableEntry.<init>(CCLjoeq/Class/jq_NameAndDesc;C)V#Put(C,NONSTATIC,Ljoeq/Class/jq_LocalVarTableEntry;,startPC)#4
joeq.Class.jq_LocalVarTableEntry.<init>(CCLjoeq/Class/jq_NameAndDesc;C)V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Class.jq_LocalVarTableEntry.<init>(CCLjoeq/Class/jq_NameAndDesc;C)V#LocalLoad(I,2)#6
joeq.Class.jq_LocalVarTableEntry.<init>(CCLjoeq/Class/jq_NameAndDesc;C)V#Put(C,NONSTATIC,Ljoeq/Class/jq_LocalVarTableEntry;,length)#7
joeq.Class.jq_LocalVarTableEntry.<init>(CCLjoeq/Class/jq_NameAndDesc;C)V#LocalLoad(Ljava/lang/Object;,0)#8
joeq.Class.jq_LocalVarTableEntry.<init>(CCLjoeq/Class/jq_NameAndDesc;C)V#LocalLoad(Ljava/lang/Object;,3)#9
joeq.Class.jq_LocalVarTableEntry.<init>(CCLjoeq/Class/jq_NameAndDesc;C)V#Put(Ljoeq/Class/jq_NameAndDesc;,NONSTATIC,Ljoeq/Class/jq_LocalVarTableEntry;,nd)#10
joeq.Class.jq_LocalVarTableEntry.<init>(CCLjoeq/Class/jq_NameAndDesc;C)V#LocalLoad(Ljava/lang/Object;,0)#11
joeq.Class.jq_LocalVarTableEntry.<init>(CCLjoeq/Class/jq_NameAndDesc;C)V#LocalLoad(I,4)#12
joeq.Class.jq_LocalVarTableEntry.<init>(CCLjoeq/Class/jq_NameAndDesc;C)V#Put(C,NONSTATIC,Ljoeq/Class/jq_LocalVarTableEntry;,index)#13
joeq.Class.jq_LocalVarTableEntry.<init>(CCLjoeq/Class/jq_NameAndDesc;C)V#Return(V)#14
joeq.Class.jq_Method.parseAttributes()V#ArrayStore(Ljava/lang/Object;)#372
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,7)#373
joeq.Class.jq_Method.parseAttributes()V#Constant(I,1)#374
joeq.Class.jq_Method.parseAttributes()V#BinaryOp(I,add)#375
joeq.Class.jq_Method.parseAttributes()V#LocalStore(I,7)#376
joeq.Class.jq_Method.parseAttributes()V#Goto(289)#377
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,0)#378
joeq.Class.jq_Method.parseAttributes()V#Get([Ljoeq/Class/jq_LocalVarTableEntry;,NONSTATIC,Ljoeq/Class/jq_Method;,localvar_table)#379
joeq.Class.jq_Method.parseAttributes()V#Invoke(STATIC,Ljava/util/Arrays;,sort,([Ljava/lang/Object;)V)#380
joeq.Class.jq_Method.parseAttributes()V#Goto(394)#381
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,0)#394
joeq.Class.jq_Method.parseAttributes()V#Constant(Ljava/lang/String;,"Exceptions")#395
joeq.Class.jq_Method.parseAttributes()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getAttribute,(Ljava/lang/String;)[B)#396
joeq.Class.jq_Method.parseAttributes()V#LocalStore(Ljava/lang/Object;,1)#397
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,1)#398
joeq.Class.jq_Method.parseAttributes()V#Constant(L;,null)#399
joeq.Class.jq_Method.parseAttributes()V#ConditionalBranch(Ljava/lang/Object;,eq,434)#400
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,0)#434
joeq.Class.jq_Method.parseAttributes()V#Constant(I,5)#435
joeq.Class.jq_Method.parseAttributes()V#Put(B,NONSTATIC,Ljoeq/Class/jq_Method;,state)#436
joeq.Class.jq_Method.parseAttributes()V#Get(Z,STATIC,Ljoeq/Main/jq;,RunningNative)#437
joeq.Class.jq_Method.parseAttributes()V#Constant(I,0)#438
joeq.Class.jq_Method.parseAttributes()V#ConditionalBranch(I,eq,458)#439
joeq.Class.jq_Method.parseAttributes()V#Return(V)#458
joeq.Class.jq_Method.load(CLjava/io/DataInput;)V#Return(V)#6
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,15)#935
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,18)#936
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,24)#937
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ArrayStore(Ljava/lang/Object;)#938
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,18)#939
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,1)#940
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#BinaryOp(I,add)#941
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,18)#942
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Goto(763)#943
joeq.UTF.Utf8.isValidMethodDescriptor()Z#Goto(49)#28
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,24)#888
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(L;,null)#889
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(Ljava/lang/Object;,ne,896)#890
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#891
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,23)#892
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,createStaticMethod,(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;)#893
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getDeclaredMember,(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;)#2
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#Constant(L;,null)#3
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#ConditionalBranch(Ljava/lang/Object;,ne,7)#4
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#Constant(I,1)#5
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#Goto(8)#6
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#8
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,1)#9
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#Invoke(VIRTUAL,Ljoeq/Class/jq_NameAndDesc;,getName,()Ljoeq/UTF/Utf8;)#10
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#Constant(Ljava/lang/String;,"<clinit>")#11
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#12
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#ConditionalBranch(Ljava/lang/Object;,ne,24)#13
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,0)#24
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,1)#25
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#Invoke(STATIC,Ljoeq/Class/jq_StaticMethod;,newStaticMethod,(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;)#26
joeq.Class.jq_StaticMethod.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#0
joeq.Class.jq_StaticMethod.<clinit>()V#Constant(Ljava/lang/String;,"Ljoeq/Class/jq_StaticMethod;")#1
joeq.Class.jq_StaticMethod.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#2
joeq.Class.jq_StaticMethod.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#3
joeq.Class.jq_StaticMethod.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/jq_StaticMethod;,_class)#4
joeq.Class.jq_StaticMethod.<clinit>()V#Return(V)#5
joeq.Class.jq_StaticMethod.newStaticMethod(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#New(Ljoeq/Class/jq_StaticMethod;,0)#0
joeq.Class.jq_StaticMethod.newStaticMethod(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#Dup(1,0)#1
joeq.Class.jq_StaticMethod.newStaticMethod(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Class.jq_StaticMethod.newStaticMethod(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Class.jq_StaticMethod.newStaticMethod(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#Invoke(SPECIAL,Ljoeq/Class/jq_StaticMethod;,<init>,(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V)#4
joeq.Class.jq_StaticMethod.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_StaticMethod.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Class.jq_StaticMethod.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,2)#2
joeq.Class.jq_StaticMethod.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Invoke(SPECIAL,Ljoeq/Class/jq_Method;,<init>,(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V)#3
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Get(Ljoeq/Class/jq_NameAndDesc;,NONSTATIC,Ljoeq/Class/jq_StaticMethod;,nd)#1
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Invoke(VIRTUAL,Ljoeq/Class/jq_NameAndDesc;,getDesc,()Ljoeq/UTF/Utf8;)#2
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,getParamDescriptors,()Ljoeq/UTF/Utf8$MethodDescriptorIterator;)#3
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalStore(Ljava/lang/Object;,1)#4
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Constant(I,0)#5
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalStore(I,2)#6
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Constant(I,0)#7
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalStore(I,3)#8
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,1)#9
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Invoke(VIRTUAL,Ljoeq/UTF/Utf8$MethodDescriptorIterator;,hasNext,()Z)#10
joeq.UTF.Utf8$MethodDescriptorIterator.hasNext()Z#Constant(I,1)#10
joeq.UTF.Utf8$MethodDescriptorIterator.hasNext()Z#Goto(13)#11
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Constant(I,0)#11
joeq.Class.jq_StaticMethod.parseMethodSignature()V#ConditionalBranch(I,eq,21)#12
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,1)#13
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Invoke(VIRTUAL,Ljoeq/UTF/Utf8$MethodDescriptorIterator;,nextUtf8,()Ljoeq/UTF/Utf8;)#14
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Get(Ljoeq/UTF/Utf8;,NONSTATIC,Ljoeq/UTF/Utf8$MethodDescriptorIterator;,this$0)#1
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Invoke(STATIC,Ljoeq/UTF/Utf8;,access$000,(Ljoeq/UTF/Utf8;)[B)#2
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#3
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Dup(1,0)#4
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Get(I,NONSTATIC,Ljoeq/UTF/Utf8$MethodDescriptorIterator;,currentIndex)#5
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Constant(I,1)#6
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#BinaryOp(I,add)#7
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Dup(1,1)#8
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Put(I,NONSTATIC,Ljoeq/UTF/Utf8$MethodDescriptorIterator;,currentIndex)#9
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#ArrayLoad(B)#10
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#LocalStore(I,1)#11
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#12
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Get(I,NONSTATIC,Ljoeq/UTF/Utf8$MethodDescriptorIterator;,currentIndex)#13
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#LocalStore(I,2)#14
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#LocalLoad(I,1)#15
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Constant(I,91)#16
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#ConditionalBranch(I,ne,31)#17
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#18
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Get(Ljoeq/UTF/Utf8;,NONSTATIC,Ljoeq/UTF/Utf8$MethodDescriptorIterator;,this$0)#19
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Invoke(STATIC,Ljoeq/UTF/Utf8;,access$000,(Ljoeq/UTF/Utf8;)[B)#20
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#21
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Dup(1,0)#22
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Get(I,NONSTATIC,Ljoeq/UTF/Utf8$MethodDescriptorIterator;,currentIndex)#23
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Constant(I,1)#24
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#BinaryOp(I,add)#25
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Dup(1,1)#26
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Put(I,NONSTATIC,Ljoeq/UTF/Utf8$MethodDescriptorIterator;,currentIndex)#27
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#ArrayLoad(B)#28
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#LocalStore(I,1)#29
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Goto(15)#30
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#LocalLoad(I,1)#31
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Constant(I,76)#32
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#ConditionalBranch(I,ne,50)#33
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#LocalLoad(I,1)#34
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Constant(I,59)#35
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#ConditionalBranch(I,eq,94)#36
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#37
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Get(Ljoeq/UTF/Utf8;,NONSTATIC,Ljoeq/UTF/Utf8$MethodDescriptorIterator;,this$0)#38
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Invoke(STATIC,Ljoeq/UTF/Utf8;,access$000,(Ljoeq/UTF/Utf8;)[B)#39
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#40
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Dup(1,0)#41
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Get(I,NONSTATIC,Ljoeq/UTF/Utf8$MethodDescriptorIterator;,currentIndex)#42
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Constant(I,1)#43
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#BinaryOp(I,add)#44
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Dup(1,1)#45
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Put(I,NONSTATIC,Ljoeq/UTF/Utf8$MethodDescriptorIterator;,currentIndex)#46
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#ArrayLoad(B)#47
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#LocalStore(I,1)#48
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Goto(34)#49
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#94
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Get(Ljoeq/UTF/Utf8;,NONSTATIC,Ljoeq/UTF/Utf8$MethodDescriptorIterator;,this$0)#95
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Invoke(STATIC,Ljoeq/UTF/Utf8;,access$000,(Ljoeq/UTF/Utf8;)[B)#96
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#LocalLoad(I,2)#97
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#98
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Get(I,NONSTATIC,Ljoeq/UTF/Utf8$MethodDescriptorIterator;,currentIndex)#99
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Constant(I,1)#100
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#BinaryOp(I,add)#101
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,([BII)Ljoeq/UTF/Utf8;)#102
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Return(Ljava/lang/Object;)#103
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Pop(1)#15
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalLoad(I,2)#16
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Constant(I,1)#17
joeq.Class.jq_StaticMethod.parseMethodSignature()V#BinaryOp(I,add)#18
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalStore(I,2)#19
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Goto(9)#20
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#21
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalLoad(I,2)#22
joeq.Class.jq_StaticMethod.parseMethodSignature()V#New([Ljoeq/Class/jq_Type;,1)#23
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Put([Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_StaticMethod;,param_types)#24
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#25
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Get(Ljoeq/Class/jq_NameAndDesc;,NONSTATIC,Ljoeq/Class/jq_StaticMethod;,nd)#26
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Invoke(VIRTUAL,Ljoeq/Class/jq_NameAndDesc;,getDesc,()Ljoeq/UTF/Utf8;)#27
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,getParamDescriptors,()Ljoeq/UTF/Utf8$MethodDescriptorIterator;)#28
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalStore(Ljava/lang/Object;,1)#29
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Constant(I,0)#30
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalStore(I,4)#31
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalLoad(I,4)#32
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalLoad(I,2)#33
joeq.Class.jq_StaticMethod.parseMethodSignature()V#ConditionalBranch(I,ge,72)#34
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,1)#35
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Invoke(VIRTUAL,Ljoeq/UTF/Utf8$MethodDescriptorIterator;,nextUtf8,()Ljoeq/UTF/Utf8;)#36
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalStore(Ljava/lang/Object;,5)#37
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#38
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Get([Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_StaticMethod;,param_types)#39
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalLoad(I,4)#40
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#41
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_StaticMethod;,clazz)#42
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getClassLoader,()Ljava/lang/ClassLoader;)#43
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,5)#44
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Invoke(STATIC,Ljoeq/Class/PrimordialClassLoader;,getOrCreateType,(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;)#45
joeq.Class.jq_StaticMethod.parseMethodSignature()V#ArrayStore(Ljava/lang/Object;)#46
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalLoad(I,3)#47
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Constant(I,1)#48
joeq.Class.jq_StaticMethod.parseMethodSignature()V#BinaryOp(I,add)#49
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalStore(I,3)#50
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#51
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Get([Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_StaticMethod;,param_types)#52
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalLoad(I,4)#53
joeq.Class.jq_StaticMethod.parseMethodSignature()V#ArrayLoad(Ljava/lang/Object;)#54
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Get(Ljoeq/Class/jq_Primitive;,STATIC,Ljoeq/Class/jq_Primitive;,LONG)#55
joeq.Class.jq_StaticMethod.parseMethodSignature()V#ConditionalBranch(Ljava/lang/Object;,eq,63)#56
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#57
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Get([Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_StaticMethod;,param_types)#58
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalLoad(I,4)#59
joeq.Class.jq_StaticMethod.parseMethodSignature()V#ArrayLoad(Ljava/lang/Object;)#60
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Get(Ljoeq/Class/jq_Primitive;,STATIC,Ljoeq/Class/jq_Primitive;,DOUBLE)#61
joeq.Class.jq_StaticMethod.parseMethodSignature()V#ConditionalBranch(Ljava/lang/Object;,ne,67)#62
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalLoad(I,4)#67
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Constant(I,1)#68
joeq.Class.jq_StaticMethod.parseMethodSignature()V#BinaryOp(I,add)#69
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalStore(I,4)#70
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Goto(32)#71
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#72
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalLoad(I,3)#73
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Put(I,NONSTATIC,Ljoeq/Class/jq_StaticMethod;,param_words)#74
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,1)#75
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Invoke(VIRTUAL,Ljoeq/UTF/Utf8$MethodDescriptorIterator;,getReturnDescriptor,()Ljoeq/UTF/Utf8;)#76
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalStore(Ljava/lang/Object;,4)#77
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#78
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#79
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_StaticMethod;,clazz)#80
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getClassLoader,()Ljava/lang/ClassLoader;)#81
joeq.Class.jq_StaticMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,4)#82
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Invoke(STATIC,Ljoeq/Class/PrimordialClassLoader;,getOrCreateType,(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;)#83
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Put(Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_StaticMethod;,return_type)#84
joeq.Class.jq_StaticMethod.parseMethodSignature()V#Return(V)#85
joeq.Class.jq_StaticMethod.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Return(V)#4
joeq.Class.jq_StaticMethod.newStaticMethod(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#Return(Ljava/lang/Object;)#5
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#LocalStore(Ljava/lang/Object;,2)#27
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,0)#28
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,1)#29
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,2)#30
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#Invoke(SPECIAL,Ljoeq/Class/jq_Class;,addDeclaredMember,(Ljoeq/Class/jq_NameAndDesc;Ljoeq/Class/jq_Member;)V)#31
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,2)#32
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#Return(Ljava/lang/Object;)#33
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(Ljava/lang/Object;,24)#894
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Goto(904)#895
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,16)#904
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,1)#905
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#BinaryOp(I,add)#906
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,16)#907
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Goto(929)#908
joeq.Class.jq_LineNumberBC.compareTo(Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_LineNumberBC.compareTo(Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Class.jq_LineNumberBC.compareTo(Ljava/lang/Object;)I#CheckCast(Ljoeq/Class/jq_LineNumberBC;)#2
joeq.Class.jq_LineNumberBC.compareTo(Ljava/lang/Object;)I#Invoke(VIRTUAL,Ljoeq/Class/jq_LineNumberBC;,compareTo,(Ljoeq/Class/jq_LineNumberBC;)I)#3
joeq.Class.jq_LineNumberBC.compareTo(Ljoeq/Class/jq_LineNumberBC;)I#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_LineNumberBC.compareTo(Ljoeq/Class/jq_LineNumberBC;)I#Get(C,NONSTATIC,Ljoeq/Class/jq_LineNumberBC;,startPC)#1
joeq.Class.jq_LineNumberBC.compareTo(Ljoeq/Class/jq_LineNumberBC;)I#LocalLoad(Ljava/lang/Object;,1)#2
joeq.Class.jq_LineNumberBC.compareTo(Ljoeq/Class/jq_LineNumberBC;)I#Get(C,NONSTATIC,Ljoeq/Class/jq_LineNumberBC;,startPC)#3
joeq.Class.jq_LineNumberBC.compareTo(Ljoeq/Class/jq_LineNumberBC;)I#ConditionalBranch(I,ne,7)#4
joeq.Class.jq_LineNumberBC.compareTo(Ljoeq/Class/jq_LineNumberBC;)I#LocalLoad(Ljava/lang/Object;,0)#7
joeq.Class.jq_LineNumberBC.compareTo(Ljoeq/Class/jq_LineNumberBC;)I#Get(C,NONSTATIC,Ljoeq/Class/jq_LineNumberBC;,startPC)#8
joeq.Class.jq_LineNumberBC.compareTo(Ljoeq/Class/jq_LineNumberBC;)I#LocalLoad(Ljava/lang/Object;,1)#9
joeq.Class.jq_LineNumberBC.compareTo(Ljoeq/Class/jq_LineNumberBC;)I#Get(C,NONSTATIC,Ljoeq/Class/jq_LineNumberBC;,startPC)#10
joeq.Class.jq_LineNumberBC.compareTo(Ljoeq/Class/jq_LineNumberBC;)I#ConditionalBranch(I,ge,14)#11
joeq.Class.jq_LineNumberBC.compareTo(Ljoeq/Class/jq_LineNumberBC;)I#Constant(I,-1)#12
joeq.Class.jq_LineNumberBC.compareTo(Ljoeq/Class/jq_LineNumberBC;)I#Return(I)#13
joeq.Class.jq_LineNumberBC.compareTo(Ljava/lang/Object;)I#Return(I)#4
joeq.Class.jq_LocalVarTableEntry.compareTo(Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_LocalVarTableEntry.compareTo(Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Class.jq_LocalVarTableEntry.compareTo(Ljava/lang/Object;)I#CheckCast(Ljoeq/Class/jq_LocalVarTableEntry;)#2
joeq.Class.jq_LocalVarTableEntry.compareTo(Ljava/lang/Object;)I#Invoke(VIRTUAL,Ljoeq/Class/jq_LocalVarTableEntry;,compareTo,(Ljoeq/Class/jq_LocalVarTableEntry;)I)#3
joeq.Class.jq_LocalVarTableEntry.compareTo(Ljoeq/Class/jq_LocalVarTableEntry;)I#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_LocalVarTableEntry.compareTo(Ljoeq/Class/jq_LocalVarTableEntry;)I#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Class.jq_LocalVarTableEntry.compareTo(Ljoeq/Class/jq_LocalVarTableEntry;)I#Invoke(VIRTUAL,Ljoeq/Class/jq_LocalVarTableEntry;,equals,(Ljoeq/Class/jq_LocalVarTableEntry;)Z)#2
joeq.Class.jq_LocalVarTableEntry.equals(Ljoeq/Class/jq_LocalVarTableEntry;)Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_LocalVarTableEntry.equals(Ljoeq/Class/jq_LocalVarTableEntry;)Z#Get(C,NONSTATIC,Ljoeq/Class/jq_LocalVarTableEntry;,startPC)#1
joeq.Class.jq_LocalVarTableEntry.equals(Ljoeq/Class/jq_LocalVarTableEntry;)Z#LocalLoad(Ljava/lang/Object;,1)#2
joeq.Class.jq_LocalVarTableEntry.equals(Ljoeq/Class/jq_LocalVarTableEntry;)Z#Get(C,NONSTATIC,Ljoeq/Class/jq_LocalVarTableEntry;,startPC)#3
joeq.Class.jq_LocalVarTableEntry.equals(Ljoeq/Class/jq_LocalVarTableEntry;)Z#ConditionalBranch(I,ne,12)#4
joeq.Class.jq_LocalVarTableEntry.equals(Ljoeq/Class/jq_LocalVarTableEntry;)Z#Constant(I,0)#12
joeq.Class.jq_LocalVarTableEntry.equals(Ljoeq/Class/jq_LocalVarTableEntry;)Z#Return(I)#13
joeq.Class.jq_LocalVarTableEntry.compareTo(Ljoeq/Class/jq_LocalVarTableEntry;)I#Constant(I,0)#3
joeq.Class.jq_LocalVarTableEntry.compareTo(Ljoeq/Class/jq_LocalVarTableEntry;)I#ConditionalBranch(I,eq,7)#4
joeq.Class.jq_LocalVarTableEntry.compareTo(Ljoeq/Class/jq_LocalVarTableEntry;)I#LocalLoad(Ljava/lang/Object;,0)#7
joeq.Class.jq_LocalVarTableEntry.compareTo(Ljoeq/Class/jq_LocalVarTableEntry;)I#Get(C,NONSTATIC,Ljoeq/Class/jq_LocalVarTableEntry;,index)#8
joeq.Class.jq_LocalVarTableEntry.compareTo(Ljoeq/Class/jq_LocalVarTableEntry;)I#LocalLoad(Ljava/lang/Object;,1)#9
joeq.Class.jq_LocalVarTableEntry.compareTo(Ljoeq/Class/jq_LocalVarTableEntry;)I#Get(C,NONSTATIC,Ljoeq/Class/jq_LocalVarTableEntry;,index)#10
joeq.Class.jq_LocalVarTableEntry.compareTo(Ljoeq/Class/jq_LocalVarTableEntry;)I#ConditionalBranch(I,ge,14)#11
joeq.Class.jq_LocalVarTableEntry.compareTo(Ljoeq/Class/jq_LocalVarTableEntry;)I#Constant(I,-1)#12
joeq.Class.jq_LocalVarTableEntry.compareTo(Ljoeq/Class/jq_LocalVarTableEntry;)I#Return(I)#13
joeq.Class.jq_LocalVarTableEntry.compareTo(Ljava/lang/Object;)I#Return(I)#4
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#944
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,17)#945
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#New([Ljoeq/Class/jq_InstanceMethod;,1)#946
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Put([Ljoeq/Class/jq_InstanceMethod;,NONSTATIC,Ljoeq/Class/jq_Class;,declared_instance_methods)#947
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#948
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,16)#949
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#New([Ljoeq/Class/jq_StaticMethod;,1)#950
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Put([Ljoeq/Class/jq_StaticMethod;,NONSTATIC,Ljoeq/Class/jq_Class;,static_methods)#951
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,0)#952
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,18)#953
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,-1)#954
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,19)#955
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,-1)#956
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,20)#957
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,18)#958
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,13)#959
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,ge,998)#960
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,14)#961
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,18)#962
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ArrayLoad(C)#963
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,8)#964
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#BinaryOp(I,and)#965
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,0)#966
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,eq,981)#967
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#981
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Get([Ljoeq/Class/jq_InstanceMethod;,NONSTATIC,Ljoeq/Class/jq_Class;,declared_instance_methods)#982
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,19)#983
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,1)#984
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#BinaryOp(I,add)#985
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,19)#986
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,19)#987
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,15)#988
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,18)#989
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ArrayLoad(Ljava/lang/Object;)#990
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#CheckCast(Ljoeq/Class/jq_InstanceMethod;)#991
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ArrayStore(Ljava/lang/Object;)#992
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,18)#993
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,1)#994
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#BinaryOp(I,add)#995
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,18)#996
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Goto(958)#997
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#968
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Get([Ljoeq/Class/jq_StaticMethod;,NONSTATIC,Ljoeq/Class/jq_Class;,static_methods)#969
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,20)#970
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,1)#971
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#BinaryOp(I,add)#972
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,20)#973
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,20)#974
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,15)#975
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,18)#976
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ArrayLoad(Ljava/lang/Object;)#977
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#CheckCast(Ljoeq/Class/jq_StaticMethod;)#978
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ArrayStore(Ljava/lang/Object;)#979
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Goto(993)#980
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#998
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#New(Ljava/util/HashMap;,0)#999
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Dup(1,0)#1000
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#1001
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Put(Ljava/util/Map;,NONSTATIC,Ljoeq/Class/jq_Class;,attributes)#1002
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#1003
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,1)#1004
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#1005
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Get(Ljava/util/Map;,NONSTATIC,Ljoeq/Class/jq_Class;,attributes)#1006
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,readAttributes,(Ljava/io/DataInput;Ljava/util/Map;)V)#1007
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#0
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/io/DataInput;,readUnsignedShort,()I)#1
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#Conversion(I,C)#2
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#LocalStore(I,3)#3
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#Constant(I,0)#4
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#LocalStore(I,4)#5
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#LocalLoad(I,4)#6
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#LocalLoad(I,3)#7
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#ConditionalBranch(I,ge,67)#8
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#9
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/io/DataInput;,readUnsignedShort,()I)#10
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#Conversion(I,C)#11
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#LocalStore(I,5)#12
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#13
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#LocalLoad(I,5)#14
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getCPtag,(C)B)#15
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#Constant(I,1)#16
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#ConditionalBranch(I,eq,44)#17
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,0)#44
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#LocalLoad(I,5)#45
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getCPasUtf8,(C)Ljoeq/UTF/Utf8;)#46
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,6)#47
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#48
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/io/DataInput;,readInt,()I)#49
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#LocalStore(I,7)#50
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#LocalLoad(I,7)#51
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#New([B,1)#52
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#LocalStore(Ljava/lang/Object;,8)#53
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,1)#54
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#55
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/io/DataInput;,readFully,([B)V)#56
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,2)#57
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,6)#58
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#LocalLoad(Ljava/lang/Object;,8)#59
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#60
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#Pop(1)#61
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#LocalLoad(I,4)#62
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#Constant(I,1)#63
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#BinaryOp(I,add)#64
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#LocalStore(I,4)#65
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#Goto(6)#66
joeq.Class.jq_Class.readAttributes(Ljava/io/DataInput;Ljava/util/Map;)V#Return(V)#67
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#1008
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,3)#1009
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Put(I,NONSTATIC,Ljoeq/Class/jq_Class;,state)#1010
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Get(Ljoeq/ClassLib/Common/Interface;,STATIC,Ljoeq/ClassLib/ClassLibInterface;,DEFAULT)#1011
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#1012
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getDesc,()Ljoeq/UTF/Utf8;)#1013
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(INTERFACE,Ljoeq/ClassLib/Common/Interface;,getImplementationClassDescs,(Ljoeq/UTF/Utf8;)Ljava/util/Iterator;)#1014
joeq.ClassLib.Common.NullInterfaceImpl.getImplementationClassDescs(Ljoeq/UTF/Utf8;)Ljava/util/Iterator;#Get(Ljava/util/Set;,STATIC,Ljava/util/Collections;,EMPTY_SET)#0
joeq.ClassLib.Common.NullInterfaceImpl.getImplementationClassDescs(Ljoeq/UTF/Utf8;)Ljava/util/Iterator;#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#1
joeq.ClassLib.Common.NullInterfaceImpl.getImplementationClassDescs(Ljoeq/UTF/Utf8;)Ljava/util/Iterator;#Return(Ljava/lang/Object;)#2
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(Ljava/lang/Object;,18)#1015
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,18)#1016
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#1017
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,0)#1018
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,eq,1059)#1019
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#1059
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,isInClassLib,()Z)#1060
joeq.Class.jq_Class.isInClassLib()Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.isInClassLib()Z#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getDesc,()Ljoeq/UTF/Utf8;)#1
joeq.Class.jq_Class.isInClassLib()Z#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,toString,()Ljava/lang/String;)#2
joeq.Class.jq_Class.isInClassLib()Z#Constant(Ljava/lang/String;,"Ljoeq/ClassLib/")#3
joeq.Class.jq_Class.isInClassLib()Z#Invoke(VIRTUAL,Ljava/lang/String;,startsWith,(Ljava/lang/String;)Z)#4
joeq.Class.jq_Class.isInClassLib()Z#Constant(I,0)#5
joeq.Class.jq_Class.isInClassLib()Z#ConditionalBranch(I,eq,17)#6
joeq.Class.jq_Class.isInClassLib()Z#Constant(I,0)#17
joeq.Class.jq_Class.isInClassLib()Z#Return(I)#18
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,0)#1061
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,eq,1719)#1062
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#1719
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Get(Ljava/util/Map;,NONSTATIC,Ljoeq/Class/jq_Class;,members)#1720
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(INTERFACE,Ljava/util/Map;,entrySet,()Ljava/util/Set;)#1721
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(INTERFACE,Ljava/util/Set;,iterator,()Ljava/util/Iterator;)#1722
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(Ljava/lang/Object;,19)#1723
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,19)#1724
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#1725
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,0)#1726
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,eq,1766)#1727
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,19)#1728
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#1729
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#CheckCast(Ljava/util/Map$Entry;)#1730
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(Ljava/lang/Object;,20)#1731
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,20)#1732
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(INTERFACE,Ljava/util/Map$Entry;,getValue,()Ljava/lang/Object;)#1733
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#CheckCast(Ljoeq/Class/jq_Member;)#1734
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(Ljava/lang/Object;,21)#1735
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,21)#1736
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Member;,getState,()I)#1737
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,5)#1738
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,ge,1765)#1739
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Goto(1724)#1765
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Get(Z,STATIC,Ljoeq/Class/jq_Class;,TRACE)#1766
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,0)#1767
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,eq,1778)#1768
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#1778
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,5)#1779
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Put(I,NONSTATIC,Ljoeq/Class/jq_Class;,state)#1780
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#1781
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getDesc,()Ljoeq/UTF/Utf8;)#1782
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,toString,()Ljava/lang/String;)#1783
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(Ljava/lang/Object;,19)#1784
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,19)#1785
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(Ljava/lang/String;,"LREPLACE")#1786
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljava/lang/String;,startsWith,(Ljava/lang/String;)Z)#1787
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,0)#1788
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,eq,1841)#1789
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Goto(1879)#1841
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,2)#1879
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Monitor(EXIT)#1880
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Goto(1887)#1881
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Return(V)#1887
joeq.Class.jq_Class.load()V#Goto(42)#36
joeq.Class.jq_Class.load()V#LocalLoad(Ljava/lang/Object;,1)#42
joeq.Class.jq_Class.load()V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,close,()V)#43
joeq.Class.jq_Class.load()V#LocalLoad(Ljava/lang/Object;,1)#44
joeq.Class.jq_Class.load()V#Constant(L;,null)#45
joeq.Class.jq_Class.load()V#ConditionalBranch(Ljava/lang/Object;,eq,49)#46
joeq.Class.jq_Class.load()V#LocalLoad(Ljava/lang/Object;,1)#47
joeq.Class.jq_Class.load()V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,close,()V)#48
joeq.Class.jq_Class.load()V#Goto(71)#49
joeq.Class.jq_Class.load()V#Return(V)#71
joeq.Class.jq_Class.verify()V#LocalLoad(Ljava/lang/Object;,0)#22
joeq.Class.jq_Class.verify()V#Get(I,NONSTATIC,Ljoeq/Class/jq_Class;,state)#23
joeq.Class.jq_Class.verify()V#Constant(I,6)#24
joeq.Class.jq_Class.verify()V#ConditionalBranch(I,ne,32)#25
joeq.Class.jq_Class.verify()V#LocalLoad(Ljava/lang/Object;,0)#32
joeq.Class.jq_Class.verify()V#Get(I,NONSTATIC,Ljoeq/Class/jq_Class;,state)#33
joeq.Class.jq_Class.verify()V#Constant(I,7)#34
joeq.Class.jq_Class.verify()V#ConditionalBranch(I,ne,40)#35
joeq.Class.jq_Class.verify()V#LocalLoad(Ljava/lang/Object;,0)#40
joeq.Class.jq_Class.verify()V#Constant(I,6)#41
joeq.Class.jq_Class.verify()V#Put(I,NONSTATIC,Ljoeq/Class/jq_Class;,state)#42
joeq.Class.jq_Class.verify()V#Get(Z,STATIC,Ljoeq/Class/jq_Class;,TRACE)#43
joeq.Class.jq_Class.verify()V#Constant(I,0)#44
joeq.Class.jq_Class.verify()V#ConditionalBranch(I,eq,57)#45
joeq.Class.jq_Class.verify()V#LocalLoad(Ljava/lang/Object;,0)#57
joeq.Class.jq_Class.verify()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,super_class)#58
joeq.Class.jq_Class.verify()V#Constant(L;,null)#59
joeq.Class.jq_Class.verify()V#ConditionalBranch(Ljava/lang/Object;,eq,64)#60
joeq.Class.jq_Class.verify()V#LocalLoad(Ljava/lang/Object;,0)#61
joeq.Class.jq_Class.verify()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,super_class)#62
joeq.Class.jq_Class.verify()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,verify,()V)#63
joeq.Class.ZipFileElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,0)#45
joeq.Class.ZipFileElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Get(Ljava/util/zip/ZipFile;,NONSTATIC,Ljoeq/Class/ZipFileElement;,zf)#46
joeq.Class.ZipFileElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#LocalLoad(Ljava/lang/Object;,2)#47
joeq.Class.ZipFileElement.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;#Invoke(VIRTUAL,Ljava/util/zip/ZipFile;,getInputStream,(Ljava/util/zip/ZipEntry;)Ljava/io/InputStream;)#48
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#17
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Get([Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool)#18
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#LocalLoad(I,3)#19
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#New(Ljava/lang/Integer;,0)#20
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Dup(1,0)#21
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,1)#22
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Invoke(INTERFACE,Ljava/io/DataInput;,readInt,()I)#23
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Invoke(SPECIAL,Ljava/lang/Integer;,<init>,(I)V)#24
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#ArrayStore(Ljava/lang/Object;)#25
joeq.Class.jq_ConstantPool.load(Ljava/io/DataInput;)V#Goto(127)#26
joeq.UTF.Utf8.isValidMethodDescriptor()Z#LocalLoad(Ljava/lang/Object;,0)#77
joeq.UTF.Utf8.isValidMethodDescriptor()Z#LocalLoad(I,1)#78
joeq.UTF.Utf8.isValidMethodDescriptor()Z#Invoke(SPECIAL,Ljoeq/UTF/Utf8;,isValidTypeDescriptor,(I)Z)#79
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#Get([B,NONSTATIC,Ljoeq/UTF/Utf8;,data)#1
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#ArrayLength()#2
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#LocalLoad(I,1)#3
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#ConditionalBranch(I,ne,7)#4
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#LocalLoad(Ljava/lang/Object;,0)#7
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#Get([B,NONSTATIC,Ljoeq/UTF/Utf8;,data)#8
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#LocalLoad(I,1)#9
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#ArrayLoad(B)#10
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#Switch(56,66,12,67,12,68,12,69,56,70,12,71,56,72,56,73,12,74,12,75,56,76,28,77,56,78,56,79,56,80,56,81,56,82,56,83,12,84,56,85,56,86,56,87,56,88,56,89,56,90,12,91,23)#11
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#LocalLoad(I,1)#28
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#Constant(I,1)#29
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#BinaryOp(I,add)#30
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#LocalStore(I,1)#31
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#LocalLoad(I,1)#32
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#LocalLoad(Ljava/lang/Object;,0)#33
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#Get([B,NONSTATIC,Ljoeq/UTF/Utf8;,data)#34
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#ArrayLength()#35
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#ConditionalBranch(I,ne,39)#36
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#LocalLoad(Ljava/lang/Object;,0)#39
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#Get([B,NONSTATIC,Ljoeq/UTF/Utf8;,data)#40
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#LocalLoad(I,1)#41
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#ArrayLoad(B)#42
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#Constant(I,59)#43
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#ConditionalBranch(I,ne,28)#44
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#LocalLoad(I,1)#45
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#LocalLoad(Ljava/lang/Object;,0)#46
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#Get([B,NONSTATIC,Ljoeq/UTF/Utf8;,data)#47
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#ArrayLength()#48
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#Constant(I,1)#49
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#BinaryOp(I,sub)#50
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#ConditionalBranch(I,ne,54)#51
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#Constant(I,1)#52
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#Goto(55)#53
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#Return(I)#55
joeq.UTF.Utf8.isValidMethodDescriptor()Z#Constant(I,0)#80
joeq.UTF.Utf8.isValidMethodDescriptor()Z#ConditionalBranch(I,eq,84)#81
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,0)#27
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Get([Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool)#28
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(I,3)#29
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ArrayLoad(Ljava/lang/Object;)#30
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#CheckCast(Ljava/lang/Character;)#31
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Invoke(VIRTUAL,Ljava/lang/Character;,charValue,()C)#32
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalStore(I,4)#33
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,0)#34
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Get([B,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool_tags)#35
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(I,4)#36
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ArrayLoad(B)#37
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Constant(I,1)#38
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ConditionalBranch(I,eq,69)#39
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,0)#69
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Get([Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool)#70
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(I,4)#71
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ArrayLoad(Ljava/lang/Object;)#72
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#CheckCast(Ljoeq/UTF/Utf8;)#73
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalStore(Ljava/lang/Object;,5)#74
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,0)#75
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Get([Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool)#76
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(I,3)#77
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,5)#78
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,toString,()Ljava/lang/String;)#79
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ArrayStore(Ljava/lang/Object;)#80
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Goto(455)#81
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#LocalLoad(I,1)#12
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#LocalLoad(Ljava/lang/Object;,0)#13
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#Get([B,NONSTATIC,Ljoeq/UTF/Utf8;,data)#14
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#ArrayLength()#15
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#Constant(I,1)#16
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#BinaryOp(I,sub)#17
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#ConditionalBranch(I,ne,21)#18
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#Constant(I,1)#19
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#Goto(22)#20
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#Return(I)#22
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(STATIC,Ljoeq/Class/PrimordialClassLoader;,getJavaLangObject,()Ljoeq/Class/jq_Class;)#304
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#305
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(Ljava/lang/Object;,eq,319)#306
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,0)#382
joeq.Class.jq_Method.parseAttributes()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,isNative,()Z)#383
joeq.Class.jq_Method.isNative()Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Method.isNative()Z#Constant(I,256)#1
joeq.Class.jq_Method.isNative()Z#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,checkAccessFlag,(C)Z)#2
joeq.Class.jq_Member.checkAccessFlag(C)Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Member.checkAccessFlag(C)Z#Constant(I,2)#1
joeq.Class.jq_Member.checkAccessFlag(C)Z#Invoke(VIRTUAL,Ljoeq/Class/jq_Member;,chkState,(I)V)#2
joeq.Class.jq_Member.checkAccessFlag(C)Z#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Member.checkAccessFlag(C)Z#Get(C,NONSTATIC,Ljoeq/Class/jq_Member;,access_flags)#4
joeq.Class.jq_Member.checkAccessFlag(C)Z#LocalLoad(I,1)#5
joeq.Class.jq_Member.checkAccessFlag(C)Z#BinaryOp(I,and)#6
joeq.Class.jq_Member.checkAccessFlag(C)Z#Constant(I,0)#7
joeq.Class.jq_Member.checkAccessFlag(C)Z#ConditionalBranch(I,eq,11)#8
joeq.Class.jq_Member.checkAccessFlag(C)Z#Constant(I,1)#9
joeq.Class.jq_Member.checkAccessFlag(C)Z#Goto(12)#10
joeq.Class.jq_Member.checkAccessFlag(C)Z#Return(I)#12
joeq.Class.jq_Method.isNative()Z#Return(I)#3
joeq.Class.jq_Method.parseAttributes()V#Constant(I,0)#384
joeq.Class.jq_Method.parseAttributes()V#ConditionalBranch(I,ne,394)#385
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,1)#13
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Invoke(VIRTUAL,Ljoeq/UTF/Utf8$MethodDescriptorIterator;,nextUtf8,()Ljoeq/UTF/Utf8;)#14
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Pop(1)#15
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalLoad(I,2)#16
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Constant(I,1)#17
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#BinaryOp(I,add)#18
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalStore(I,2)#19
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Goto(9)#20
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,1)#41
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Invoke(VIRTUAL,Ljoeq/UTF/Utf8$MethodDescriptorIterator;,nextUtf8,()Ljoeq/UTF/Utf8;)#42
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalStore(Ljava/lang/Object;,5)#43
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#44
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Get([Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_InstanceMethod;,param_types)#45
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalLoad(I,4)#46
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#47
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_InstanceMethod;,clazz)#48
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getClassLoader,()Ljava/lang/ClassLoader;)#49
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,5)#50
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Invoke(STATIC,Ljoeq/Class/PrimordialClassLoader;,getOrCreateType,(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;)#51
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#ArrayStore(Ljava/lang/Object;)#52
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalLoad(I,3)#53
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Constant(I,1)#54
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#BinaryOp(I,add)#55
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalStore(I,3)#56
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#57
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Get([Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_InstanceMethod;,param_types)#58
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalLoad(I,4)#59
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#ArrayLoad(Ljava/lang/Object;)#60
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Get(Ljoeq/Class/jq_Primitive;,STATIC,Ljoeq/Class/jq_Primitive;,LONG)#61
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#ConditionalBranch(Ljava/lang/Object;,eq,69)#62
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#63
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Get([Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_InstanceMethod;,param_types)#64
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalLoad(I,4)#65
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#ArrayLoad(Ljava/lang/Object;)#66
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Get(Ljoeq/Class/jq_Primitive;,STATIC,Ljoeq/Class/jq_Primitive;,DOUBLE)#67
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#ConditionalBranch(Ljava/lang/Object;,ne,73)#68
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalLoad(I,4)#73
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Constant(I,1)#74
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#BinaryOp(I,add)#75
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalStore(I,4)#76
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Goto(38)#77
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,1)#401
joeq.Class.jq_Method.parseAttributes()V#Constant(I,0)#402
joeq.Class.jq_Method.parseAttributes()V#Invoke(STATIC,Ljwutil/util/Convert;,twoBytesToChar,([BI)C)#403
joeq.Class.jq_Method.parseAttributes()V#LocalStore(I,2)#404
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,0)#405
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,2)#406
joeq.Class.jq_Method.parseAttributes()V#New([Ljoeq/Class/jq_Class;,1)#407
joeq.Class.jq_Method.parseAttributes()V#Put([Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Method;,thrown_exceptions_table)#408
joeq.Class.jq_Method.parseAttributes()V#Constant(I,0)#409
joeq.Class.jq_Method.parseAttributes()V#LocalStore(I,3)#410
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,3)#411
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,2)#412
joeq.Class.jq_Method.parseAttributes()V#ConditionalBranch(I,ge,434)#413
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,1)#414
joeq.Class.jq_Method.parseAttributes()V#Constant(I,2)#415
joeq.Class.jq_Method.parseAttributes()V#Constant(I,2)#416
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,3)#417
joeq.Class.jq_Method.parseAttributes()V#BinaryOp(I,mul)#418
joeq.Class.jq_Method.parseAttributes()V#BinaryOp(I,add)#419
joeq.Class.jq_Method.parseAttributes()V#Invoke(STATIC,Ljwutil/util/Convert;,twoBytesToChar,([BI)C)#420
joeq.Class.jq_Method.parseAttributes()V#LocalStore(I,4)#421
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,0)#422
joeq.Class.jq_Method.parseAttributes()V#Get([Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Method;,thrown_exceptions_table)#423
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,3)#424
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(Ljava/lang/Object;,0)#425
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,4)#426
joeq.Class.jq_Method.parseAttributes()V#Invoke(SPECIAL,Ljoeq/Class/jq_Method;,getResolvedClassFromCP,(C)Ljoeq/Class/jq_Class;)#427
joeq.Class.jq_Method.getResolvedClassFromCP(C)Ljoeq/Class/jq_Class;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Method.getResolvedClassFromCP(C)Ljoeq/Class/jq_Class;#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Method;,clazz)#1
joeq.Class.jq_Method.getResolvedClassFromCP(C)Ljoeq/Class/jq_Class;#LocalLoad(I,1)#2
joeq.Class.jq_Method.getResolvedClassFromCP(C)Ljoeq/Class/jq_Class;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getCPtag,(C)B)#3
joeq.Class.jq_Method.getResolvedClassFromCP(C)Ljoeq/Class/jq_Class;#Constant(I,13)#4
joeq.Class.jq_Method.getResolvedClassFromCP(C)Ljoeq/Class/jq_Class;#ConditionalBranch(I,eq,10)#5
joeq.Class.jq_Method.getResolvedClassFromCP(C)Ljoeq/Class/jq_Class;#LocalLoad(Ljava/lang/Object;,0)#10
joeq.Class.jq_Method.getResolvedClassFromCP(C)Ljoeq/Class/jq_Class;#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Method;,clazz)#11
joeq.Class.jq_Method.getResolvedClassFromCP(C)Ljoeq/Class/jq_Class;#LocalLoad(I,1)#12
joeq.Class.jq_Method.getResolvedClassFromCP(C)Ljoeq/Class/jq_Class;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getCPasType,(C)Ljoeq/Class/jq_Type;)#13
joeq.Class.jq_Method.getResolvedClassFromCP(C)Ljoeq/Class/jq_Class;#LocalStore(Ljava/lang/Object;,2)#14
joeq.Class.jq_Method.getResolvedClassFromCP(C)Ljoeq/Class/jq_Class;#LocalLoad(Ljava/lang/Object;,2)#15
joeq.Class.jq_Method.getResolvedClassFromCP(C)Ljoeq/Class/jq_Class;#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,isClassType,()Z)#16
joeq.Class.jq_Method.getResolvedClassFromCP(C)Ljoeq/Class/jq_Class;#Constant(I,0)#17
joeq.Class.jq_Method.getResolvedClassFromCP(C)Ljoeq/Class/jq_Class;#ConditionalBranch(I,ne,23)#18
joeq.Class.jq_Method.getResolvedClassFromCP(C)Ljoeq/Class/jq_Class;#LocalLoad(Ljava/lang/Object;,2)#23
joeq.Class.jq_Method.getResolvedClassFromCP(C)Ljoeq/Class/jq_Class;#CheckCast(Ljoeq/Class/jq_Class;)#24
joeq.Class.jq_Method.getResolvedClassFromCP(C)Ljoeq/Class/jq_Class;#Return(Ljava/lang/Object;)#25
joeq.Class.jq_Method.parseAttributes()V#ArrayStore(Ljava/lang/Object;)#428
joeq.Class.jq_Method.parseAttributes()V#LocalLoad(I,3)#429
joeq.Class.jq_Method.parseAttributes()V#Constant(I,1)#430
joeq.Class.jq_Method.parseAttributes()V#BinaryOp(I,add)#431
joeq.Class.jq_Method.parseAttributes()V#LocalStore(I,3)#432
joeq.Class.jq_Method.parseAttributes()V#Goto(411)#433
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#LocalLoad(I,1)#50
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Constant(I,66)#51
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#ConditionalBranch(I,eq,94)#52
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#LocalLoad(I,1)#53
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Constant(I,67)#54
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#ConditionalBranch(I,eq,94)#55
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#LocalLoad(I,1)#56
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Constant(I,68)#57
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#ConditionalBranch(I,eq,94)#58
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#LocalLoad(I,1)#59
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Constant(I,70)#60
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#ConditionalBranch(I,eq,94)#61
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#LocalLoad(I,1)#62
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Constant(I,73)#63
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#ConditionalBranch(I,eq,94)#64
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#LocalLoad(I,1)#65
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#Constant(I,74)#66
joeq.UTF.Utf8$MethodDescriptorIterator.nextUtf8()Ljoeq/UTF/Utf8;#ConditionalBranch(I,eq,94)#67
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalLoad(I,3)#69
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#Constant(I,1)#70
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#BinaryOp(I,add)#71
joeq.Class.jq_InstanceMethod.parseMethodSignature()V#LocalStore(I,3)#72
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,1)#14
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#Invoke(VIRTUAL,Ljoeq/Class/jq_NameAndDesc;,getDesc,()Ljoeq/UTF/Utf8;)#15
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#Constant(Ljava/lang/String;,"()V")#16
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#17
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#ConditionalBranch(Ljava/lang/Object;,ne,24)#18
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,0)#19
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,1)#20
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#Invoke(STATIC,Ljoeq/Class/jq_ClassInitializer;,newClassInitializer,(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_ClassInitializer;)#21
joeq.Class.jq_ClassInitializer.<clinit>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#0
joeq.Class.jq_ClassInitializer.<clinit>()V#Constant(Ljava/lang/String;,"Ljoeq/Class/jq_ClassInitializer;")#1
joeq.Class.jq_ClassInitializer.<clinit>()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getOrCreateBSType,(Ljava/lang/String;)Ljoeq/Class/jq_Type;)#2
joeq.Class.jq_ClassInitializer.<clinit>()V#CheckCast(Ljoeq/Class/jq_Class;)#3
joeq.Class.jq_ClassInitializer.<clinit>()V#Put(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/jq_ClassInitializer;,_class)#4
joeq.Class.jq_ClassInitializer.<clinit>()V#Return(V)#5
joeq.Class.jq_ClassInitializer.newClassInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_ClassInitializer;#LocalLoad(Ljava/lang/Object;,1)#0
joeq.Class.jq_ClassInitializer.newClassInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_ClassInitializer;#Invoke(VIRTUAL,Ljoeq/Class/jq_NameAndDesc;,getName,()Ljoeq/UTF/Utf8;)#1
joeq.Class.jq_ClassInitializer.newClassInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_ClassInitializer;#Constant(Ljava/lang/String;,"<clinit>")#2
joeq.Class.jq_ClassInitializer.newClassInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_ClassInitializer;#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#3
joeq.Class.jq_ClassInitializer.newClassInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_ClassInitializer;#ConditionalBranch(Ljava/lang/Object;,ne,7)#4
joeq.Class.jq_ClassInitializer.newClassInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_ClassInitializer;#Constant(I,1)#5
joeq.Class.jq_ClassInitializer.newClassInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_ClassInitializer;#Goto(8)#6
joeq.Class.jq_ClassInitializer.newClassInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_ClassInitializer;#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#8
joeq.Class.jq_ClassInitializer.newClassInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_ClassInitializer;#LocalLoad(Ljava/lang/Object;,1)#9
joeq.Class.jq_ClassInitializer.newClassInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_ClassInitializer;#Invoke(VIRTUAL,Ljoeq/Class/jq_NameAndDesc;,getDesc,()Ljoeq/UTF/Utf8;)#10
joeq.Class.jq_ClassInitializer.newClassInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_ClassInitializer;#Constant(Ljava/lang/String;,"()V")#11
joeq.Class.jq_ClassInitializer.newClassInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_ClassInitializer;#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#12
joeq.Class.jq_ClassInitializer.newClassInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_ClassInitializer;#ConditionalBranch(Ljava/lang/Object;,ne,16)#13
joeq.Class.jq_ClassInitializer.newClassInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_ClassInitializer;#Constant(I,1)#14
joeq.Class.jq_ClassInitializer.newClassInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_ClassInitializer;#Goto(17)#15
joeq.Class.jq_ClassInitializer.newClassInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_ClassInitializer;#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#17
joeq.Class.jq_ClassInitializer.newClassInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_ClassInitializer;#New(Ljoeq/Class/jq_ClassInitializer;,0)#18
joeq.Class.jq_ClassInitializer.newClassInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_ClassInitializer;#Dup(1,0)#19
joeq.Class.jq_ClassInitializer.newClassInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_ClassInitializer;#LocalLoad(Ljava/lang/Object;,0)#20
joeq.Class.jq_ClassInitializer.newClassInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_ClassInitializer;#LocalLoad(Ljava/lang/Object;,1)#21
joeq.Class.jq_ClassInitializer.newClassInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_ClassInitializer;#Invoke(SPECIAL,Ljoeq/Class/jq_ClassInitializer;,<init>,(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V)#22
joeq.Class.jq_ClassInitializer.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_ClassInitializer.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Class.jq_ClassInitializer.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#LocalLoad(Ljava/lang/Object;,2)#2
joeq.Class.jq_ClassInitializer.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Invoke(SPECIAL,Ljoeq/Class/jq_StaticMethod;,<init>,(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V)#3
joeq.Class.jq_ClassInitializer.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_ClassInitializer.parseMethodSignature()V#Constant(I,0)#1
joeq.Class.jq_ClassInitializer.parseMethodSignature()V#New([Ljoeq/Class/jq_Type;,1)#2
joeq.Class.jq_ClassInitializer.parseMethodSignature()V#Put([Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_ClassInitializer;,param_types)#3
joeq.Class.jq_ClassInitializer.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#4
joeq.Class.jq_ClassInitializer.parseMethodSignature()V#Get(Ljoeq/Class/jq_Primitive;,STATIC,Ljoeq/Class/jq_Primitive;,VOID)#5
joeq.Class.jq_ClassInitializer.parseMethodSignature()V#Put(Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_ClassInitializer;,return_type)#6
joeq.Class.jq_ClassInitializer.parseMethodSignature()V#Return(V)#7
joeq.Class.jq_ClassInitializer.<init>(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)V#Return(V)#4
joeq.Class.jq_ClassInitializer.newClassInitializer(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_ClassInitializer;#Return(Ljava/lang/Object;)#23
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#LocalStore(Ljava/lang/Object;,2)#22
joeq.Class.jq_Class.createStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#Goto(28)#23
joeq.Class.jq_Class.verify()V#Get(Z,STATIC,Ljoeq/Class/jq_Class;,TRACE)#64
joeq.Class.jq_Class.verify()V#Constant(I,0)#65
joeq.Class.jq_Class.verify()V#ConditionalBranch(I,eq,76)#66
joeq.Class.jq_Class.verify()V#LocalLoad(Ljava/lang/Object;,0)#76
joeq.Class.jq_Class.verify()V#Constant(I,8)#77
joeq.Class.jq_Class.verify()V#Put(I,NONSTATIC,Ljoeq/Class/jq_Class;,state)#78
joeq.Class.jq_Class.verify()V#Goto(86)#79
joeq.Class.jq_Class.verify()V#LocalLoad(Ljava/lang/Object;,1)#86
joeq.Class.jq_Class.verify()V#Monitor(EXIT)#87
joeq.Class.jq_Class.verify()V#Goto(94)#88
joeq.Class.jq_Class.verify()V#Return(V)#94
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#22
joeq.Class.jq_Class.prepare()V#Get(I,NONSTATIC,Ljoeq/Class/jq_Class;,state)#23
joeq.Class.jq_Class.prepare()V#Constant(I,9)#24
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,ne,32)#25
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#32
joeq.Class.jq_Class.prepare()V#Get(I,NONSTATIC,Ljoeq/Class/jq_Class;,state)#33
joeq.Class.jq_Class.prepare()V#Constant(I,10)#34
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,ne,40)#35
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#40
joeq.Class.jq_Class.prepare()V#Constant(I,9)#41
joeq.Class.jq_Class.prepare()V#Put(I,NONSTATIC,Ljoeq/Class/jq_Class;,state)#42
joeq.Class.jq_Class.prepare()V#Get(Z,STATIC,Ljoeq/Class/jq_Class;,TRACE)#43
joeq.Class.jq_Class.prepare()V#Constant(I,0)#44
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,eq,57)#45
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#57
joeq.Class.jq_Class.prepare()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,super_class)#58
joeq.Class.jq_Class.prepare()V#Constant(L;,null)#59
joeq.Class.jq_Class.prepare()V#ConditionalBranch(Ljava/lang/Object;,eq,64)#60
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#61
joeq.Class.jq_Class.prepare()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,super_class)#62
joeq.Class.jq_Class.prepare()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,prepare,()V)#63
joeq.Class.jq_Reference.isVerified()Z#Constant(I,1)#4
joeq.Class.jq_Reference.isVerified()Z#Goto(7)#5
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#64
joeq.Class.jq_Class.prepare()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,super_class)#65
joeq.Class.jq_Class.prepare()V#Constant(L;,null)#66
joeq.Class.jq_Class.prepare()V#ConditionalBranch(Ljava/lang/Object;,eq,74)#67
joeq.Class.jq_Class.prepare()V#Constant(I,0)#74
joeq.Class.jq_Class.prepare()V#LocalStore(I,2)#75
joeq.Class.jq_Class.prepare()V#LocalLoad(I,2)#76
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#77
joeq.Class.jq_Class.prepare()V#Get([Ljoeq/Class/jq_InstanceField;,NONSTATIC,Ljoeq/Class/jq_Class;,declared_instance_fields)#78
joeq.Class.jq_Class.prepare()V#ArrayLength()#79
joeq.Class.jq_Class.prepare()V#BinaryOp(I,add)#80
joeq.Class.jq_Class.prepare()V#LocalStore(I,3)#81
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#82
joeq.Class.jq_Class.prepare()V#LocalLoad(I,3)#83
joeq.Class.jq_Class.prepare()V#New([Ljoeq/Class/jq_InstanceField;,1)#84
joeq.Class.jq_Class.prepare()V#Put([Ljoeq/Class/jq_InstanceField;,NONSTATIC,Ljoeq/Class/jq_Class;,instance_fields)#85
joeq.Class.jq_Class.prepare()V#LocalLoad(I,2)#86
joeq.Class.jq_Class.prepare()V#Constant(I,0)#87
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,le,98)#88
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#98
joeq.Class.jq_Class.prepare()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,super_class)#99
joeq.Class.jq_Class.prepare()V#Constant(L;,null)#100
joeq.Class.jq_Class.prepare()V#ConditionalBranch(Ljava/lang/Object;,eq,108)#101
joeq.Class.jq_Class.prepare()V#Constant(I,0)#108
joeq.Class.jq_Class.prepare()V#LocalStore(I,4)#109
joeq.Class.jq_Class.prepare()V#LocalLoad(I,4)#110
joeq.Class.jq_Class.prepare()V#LocalStore(I,5)#111
joeq.Class.jq_Class.prepare()V#LocalLoad(I,2)#112
joeq.Class.jq_Class.prepare()V#Constant(I,1)#113
joeq.Class.jq_Class.prepare()V#BinaryOp(I,sub)#114
joeq.Class.jq_Class.prepare()V#LocalStore(I,6)#115
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#116
joeq.Class.jq_Class.prepare()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,super_class)#117
joeq.Class.jq_Class.prepare()V#Constant(L;,null)#118
joeq.Class.jq_Class.prepare()V#ConditionalBranch(Ljava/lang/Object;,eq,125)#119
joeq.Class.jq_Class.prepare()V#Constant(I,8)#125
joeq.Class.jq_Class.prepare()V#LocalStore(I,7)#126
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#127
joeq.Class.jq_Class.prepare()V#Get([Ljoeq/Class/jq_InstanceField;,NONSTATIC,Ljoeq/Class/jq_Class;,declared_instance_fields)#128
joeq.Class.jq_Class.prepare()V#ArrayLength()#129
joeq.Class.jq_Class.prepare()V#Constant(I,0)#130
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,le,357)#131
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#357
joeq.Class.jq_Class.prepare()V#LocalLoad(I,7)#358
joeq.Class.jq_Class.prepare()V#Constant(I,3)#359
joeq.Class.jq_Class.prepare()V#BinaryOp(I,add)#360
joeq.Class.jq_Class.prepare()V#Constant(I,-4)#361
joeq.Class.jq_Class.prepare()V#BinaryOp(I,and)#362
joeq.Class.jq_Class.prepare()V#Put(I,NONSTATIC,Ljoeq/Class/jq_Class;,instance_size)#363
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#364
joeq.Class.jq_Class.prepare()V#LocalLoad(I,5)#365
joeq.Class.jq_Class.prepare()V#New([I,1)#366
joeq.Class.jq_Class.prepare()V#Put([I,NONSTATIC,Ljoeq/Class/jq_Class;,reference_offsets)#367
joeq.Class.jq_Class.prepare()V#Constant(I,-1)#368
joeq.Class.jq_Class.prepare()V#LocalStore(I,8)#369
joeq.Class.jq_Class.prepare()V#Constant(I,0)#370
joeq.Class.jq_Class.prepare()V#LocalStore(I,9)#371
joeq.Class.jq_Class.prepare()V#LocalLoad(I,9)#372
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#373
joeq.Class.jq_Class.prepare()V#Get([Ljoeq/Class/jq_InstanceField;,NONSTATIC,Ljoeq/Class/jq_Class;,instance_fields)#374
joeq.Class.jq_Class.prepare()V#ArrayLength()#375
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,ge,407)#376
joeq.Class.jq_Class.prepare()V#LocalLoad(I,8)#407
joeq.Class.jq_Class.prepare()V#Constant(I,1)#408
joeq.Class.jq_Class.prepare()V#BinaryOp(I,add)#409
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#410
joeq.Class.jq_Class.prepare()V#Get([I,NONSTATIC,Ljoeq/Class/jq_Class;,reference_offsets)#411
joeq.Class.jq_Class.prepare()V#ArrayLength()#412
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,ne,416)#413
joeq.Class.jq_Class.prepare()V#Constant(I,1)#414
joeq.Class.jq_Class.prepare()V#Goto(417)#415
joeq.Class.jq_Class.prepare()V#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#417
joeq.Class.jq_Class.prepare()V#Constant(I,0)#418
joeq.Class.jq_Class.prepare()V#LocalStore(I,9)#419
joeq.Class.jq_Class.prepare()V#Constant(I,0)#420
joeq.Class.jq_Class.prepare()V#LocalStore(I,10)#421
joeq.Class.jq_Class.prepare()V#LocalLoad(I,10)#422
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#423
joeq.Class.jq_Class.prepare()V#Get([Ljoeq/Class/jq_InstanceMethod;,NONSTATIC,Ljoeq/Class/jq_Class;,declared_instance_methods)#424
joeq.Class.jq_Class.prepare()V#ArrayLength()#425
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,ge,528)#426
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#427
joeq.Class.jq_Class.prepare()V#Get([Ljoeq/Class/jq_InstanceMethod;,NONSTATIC,Ljoeq/Class/jq_Class;,declared_instance_methods)#428
joeq.Class.jq_Class.prepare()V#LocalLoad(I,10)#429
joeq.Class.jq_Class.prepare()V#ArrayLoad(Ljava/lang/Object;)#430
joeq.Class.jq_Class.prepare()V#LocalStore(Ljava/lang/Object;,11)#431
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,11)#432
joeq.Class.jq_Class.prepare()V#Invoke(VIRTUAL,Ljoeq/Class/jq_InstanceMethod;,getState,()I)#433
joeq.Class.jq_Class.prepare()V#Constant(I,5)#434
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,ne,438)#435
joeq.Class.jq_Class.prepare()V#Constant(I,1)#436
joeq.Class.jq_Class.prepare()V#Goto(439)#437
joeq.Class.jq_Class.prepare()V#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#439
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,11)#440
joeq.Class.jq_Class.prepare()V#Invoke(VIRTUAL,Ljoeq/Class/jq_InstanceMethod;,isInitializer,()Z)#441
joeq.Class.jq_Initializer.isInitializer()Z#Constant(I,1)#0
joeq.Class.jq_Initializer.isInitializer()Z#Return(I)#1
joeq.Class.jq_Class.prepare()V#Constant(I,0)#442
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,eq,445)#443
joeq.Class.jq_Class.prepare()V#Goto(523)#444
joeq.Class.jq_Class.prepare()V#LocalLoad(I,10)#523
joeq.Class.jq_Class.prepare()V#Constant(I,1)#524
joeq.Class.jq_Class.prepare()V#BinaryOp(I,add)#525
joeq.Class.jq_Class.prepare()V#LocalStore(I,10)#526
joeq.Class.jq_Class.prepare()V#Goto(422)#527
joeq.Class.jq_InstanceMethod.isInitializer()Z#Constant(I,0)#0
joeq.Class.jq_InstanceMethod.isInitializer()Z#Return(I)#1
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#445
joeq.Class.jq_Class.prepare()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,super_class)#446
joeq.Class.jq_Class.prepare()V#Constant(L;,null)#447
joeq.Class.jq_Class.prepare()V#ConditionalBranch(Ljava/lang/Object;,eq,514)#448
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,11)#514
joeq.Class.jq_Class.prepare()V#Invoke(VIRTUAL,Ljoeq/Class/jq_InstanceMethod;,isPrivate,()Z)#515
joeq.Class.jq_Member.isPrivate()Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Member.isPrivate()Z#Constant(I,2)#1
joeq.Class.jq_Member.isPrivate()Z#Invoke(VIRTUAL,Ljoeq/Class/jq_Member;,checkAccessFlag,(C)Z)#2
joeq.Class.jq_Member.checkAccessFlag(C)Z#Constant(I,0)#11
joeq.Class.jq_Member.isPrivate()Z#Return(I)#3
joeq.Class.jq_Class.prepare()V#Constant(I,0)#516
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,eq,519)#517
joeq.Class.jq_Class.prepare()V#LocalLoad(I,9)#519
joeq.Class.jq_Class.prepare()V#Constant(I,1)#520
joeq.Class.jq_Class.prepare()V#BinaryOp(I,add)#521
joeq.Class.jq_Class.prepare()V#LocalStore(I,9)#522
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#528
joeq.Class.jq_Class.prepare()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,super_class)#529
joeq.Class.jq_Class.prepare()V#Constant(L;,null)#530
joeq.Class.jq_Class.prepare()V#ConditionalBranch(Ljava/lang/Object;,eq,538)#531
joeq.Class.jq_Class.prepare()V#Constant(I,0)#538
joeq.Class.jq_Class.prepare()V#LocalStore(I,10)#539
joeq.Class.jq_Class.prepare()V#LocalLoad(I,10)#540
joeq.Class.jq_Class.prepare()V#LocalLoad(I,9)#541
joeq.Class.jq_Class.prepare()V#BinaryOp(I,add)#542
joeq.Class.jq_Class.prepare()V#LocalStore(I,11)#543
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#544
joeq.Class.jq_Class.prepare()V#LocalLoad(I,11)#545
joeq.Class.jq_Class.prepare()V#New([Ljoeq/Class/jq_InstanceMethod;,1)#546
joeq.Class.jq_Class.prepare()V#Put([Ljoeq/Class/jq_InstanceMethod;,NONSTATIC,Ljoeq/Class/jq_Class;,virtual_methods)#547
joeq.Class.jq_Class.prepare()V#LocalLoad(I,10)#548
joeq.Class.jq_Class.prepare()V#Constant(I,0)#549
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,le,560)#550
joeq.Class.jq_Class.prepare()V#Constant(I,0)#560
joeq.Class.jq_Class.prepare()V#LocalStore(I,12)#561
joeq.Class.jq_Class.prepare()V#LocalLoad(I,10)#562
joeq.Class.jq_Class.prepare()V#Constant(I,1)#563
joeq.Class.jq_Class.prepare()V#BinaryOp(I,sub)#564
joeq.Class.jq_Class.prepare()V#LocalStore(I,13)#565
joeq.Class.jq_Class.prepare()V#LocalLoad(I,12)#566
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#567
joeq.Class.jq_Class.prepare()V#Get([Ljoeq/Class/jq_InstanceMethod;,NONSTATIC,Ljoeq/Class/jq_Class;,declared_instance_methods)#568
joeq.Class.jq_Class.prepare()V#ArrayLength()#569
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,ge,683)#570
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#571
joeq.Class.jq_Class.prepare()V#Get([Ljoeq/Class/jq_InstanceMethod;,NONSTATIC,Ljoeq/Class/jq_Class;,declared_instance_methods)#572
joeq.Class.jq_Class.prepare()V#LocalLoad(I,12)#573
joeq.Class.jq_Class.prepare()V#ArrayLoad(Ljava/lang/Object;)#574
joeq.Class.jq_Class.prepare()V#LocalStore(Ljava/lang/Object;,14)#575
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,14)#576
joeq.Class.jq_Class.prepare()V#Invoke(VIRTUAL,Ljoeq/Class/jq_InstanceMethod;,isInitializer,()Z)#577
joeq.Class.jq_Class.prepare()V#Constant(I,0)#578
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,ne,584)#579
joeq.Class.jq_Class.prepare()V#Get(Z,STATIC,Ljoeq/Class/jq_Class;,TRACE)#584
joeq.Class.jq_Class.prepare()V#Constant(I,0)#585
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,eq,598)#586
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,14)#598
joeq.Class.jq_Class.prepare()V#Invoke(VIRTUAL,Ljoeq/Class/jq_InstanceMethod;,prepare,()V)#599
joeq.Class.jq_InstanceMethod.prepare()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_InstanceMethod.prepare()V#Constant(I,-2147483648)#1
joeq.Class.jq_InstanceMethod.prepare()V#Invoke(VIRTUAL,Ljoeq/Class/jq_InstanceMethod;,prepare,(I)V)#2
joeq.Class.jq_InstanceMethod.prepare(I)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_InstanceMethod.prepare(I)V#Get(B,NONSTATIC,Ljoeq/Class/jq_InstanceMethod;,state)#1
joeq.Class.jq_InstanceMethod.prepare(I)V#Constant(I,5)#2
joeq.Class.jq_InstanceMethod.prepare(I)V#ConditionalBranch(I,ne,6)#3
joeq.Class.jq_InstanceMethod.prepare(I)V#Constant(I,1)#4
joeq.Class.jq_InstanceMethod.prepare(I)V#Goto(7)#5
joeq.Class.jq_InstanceMethod.prepare(I)V#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#7
joeq.Class.jq_InstanceMethod.prepare(I)V#LocalLoad(Ljava/lang/Object;,0)#8
joeq.Class.jq_InstanceMethod.prepare(I)V#Constant(I,11)#9
joeq.Class.jq_InstanceMethod.prepare(I)V#Put(B,NONSTATIC,Ljoeq/Class/jq_InstanceMethod;,state)#10
joeq.Class.jq_InstanceMethod.prepare(I)V#LocalLoad(Ljava/lang/Object;,0)#11
joeq.Class.jq_InstanceMethod.prepare(I)V#LocalLoad(I,1)#12
joeq.Class.jq_InstanceMethod.prepare(I)V#Put(I,NONSTATIC,Ljoeq/Class/jq_InstanceMethod;,offset)#13
joeq.Class.jq_InstanceMethod.prepare(I)V#Return(V)#14
joeq.Class.jq_InstanceMethod.prepare()V#Return(V)#3
joeq.Class.jq_Class.prepare()V#Goto(678)#600
joeq.Class.jq_Class.prepare()V#LocalLoad(I,12)#678
joeq.Class.jq_Class.prepare()V#Constant(I,1)#679
joeq.Class.jq_Class.prepare()V#BinaryOp(I,add)#680
joeq.Class.jq_Class.prepare()V#LocalStore(I,12)#681
joeq.Class.jq_Class.prepare()V#Goto(566)#682
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,14)#580
joeq.Class.jq_Class.prepare()V#Invoke(VIRTUAL,Ljoeq/Class/jq_InstanceMethod;,isPrivate,()Z)#581
joeq.Class.jq_Class.prepare()V#Constant(I,0)#582
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,eq,601)#583
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,14)#601
joeq.Class.jq_Class.prepare()V#Invoke(VIRTUAL,Ljoeq/Class/jq_InstanceMethod;,isOverriding,()Z)#602
joeq.Class.jq_InstanceMethod.isOverriding()Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_InstanceMethod.isOverriding()Z#Get(Z,NONSTATIC,Ljoeq/Class/jq_InstanceMethod;,isOverriding)#1
joeq.Class.jq_InstanceMethod.isOverriding()Z#Return(I)#2
joeq.Class.jq_Class.prepare()V#Constant(I,0)#603
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,eq,633)#604
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,14)#633
joeq.Class.jq_Class.prepare()V#Invoke(VIRTUAL,Ljoeq/Class/jq_InstanceMethod;,getState,()I)#634
joeq.Class.jq_Class.prepare()V#Constant(I,5)#635
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,ne,639)#636
joeq.Class.jq_Class.prepare()V#Constant(I,1)#637
joeq.Class.jq_Class.prepare()V#Goto(640)#638
joeq.Class.jq_Class.prepare()V#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#640
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#641
joeq.Class.jq_Class.prepare()V#Get([Ljoeq/Class/jq_InstanceMethod;,NONSTATIC,Ljoeq/Class/jq_Class;,virtual_methods)#642
joeq.Class.jq_Class.prepare()V#LocalLoad(I,13)#643
joeq.Class.jq_Class.prepare()V#Constant(I,1)#644
joeq.Class.jq_Class.prepare()V#BinaryOp(I,add)#645
joeq.Class.jq_Class.prepare()V#LocalStore(I,13)#646
joeq.Class.jq_Class.prepare()V#LocalLoad(I,13)#647
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,14)#648
joeq.Class.jq_Class.prepare()V#ArrayStore(Ljava/lang/Object;)#649
joeq.Class.jq_Class.prepare()V#Get(Z,STATIC,Ljoeq/Class/jq_Class;,TRACE)#650
joeq.Class.jq_Class.prepare()V#Constant(I,0)#651
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,eq,671)#652
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,14)#671
joeq.Class.jq_Class.prepare()V#LocalLoad(I,13)#672
joeq.Class.jq_Class.prepare()V#Constant(I,1)#673
joeq.Class.jq_Class.prepare()V#BinaryOp(I,add)#674
joeq.Class.jq_Class.prepare()V#Invoke(STATIC,Ljoeq/Memory/CodeAddress;,size,()I)#675
joeq.Memory.CodeAddress.size()I#Get(Ljoeq/Memory/CodeAddress$CodeAddressFactory;,STATIC,Ljoeq/Memory/CodeAddress;,FACTORY)#0
joeq.Memory.CodeAddress.size()I#Invoke(VIRTUAL,Ljoeq/Memory/CodeAddress$CodeAddressFactory;,size,()I)#1
joeq.Main.HostedVM$1.size()I#Constant(I,4)#0
joeq.Main.HostedVM$1.size()I#Return(I)#1
joeq.Memory.CodeAddress.size()I#Return(I)#2
joeq.Class.jq_Class.prepare()V#BinaryOp(I,mul)#676
joeq.Class.jq_Class.prepare()V#Invoke(VIRTUAL,Ljoeq/Class/jq_InstanceMethod;,prepare,(I)V)#677
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#683
joeq.Class.jq_Class.prepare()V#LocalLoad(I,11)#684
joeq.Class.jq_Class.prepare()V#Constant(I,1)#685
joeq.Class.jq_Class.prepare()V#BinaryOp(I,add)#686
joeq.Class.jq_Class.prepare()V#New([Ljoeq/Memory/Address;,1)#687
joeq.Class.jq_Class.prepare()V#Put(Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_Class;,vtable)#688
joeq.Class.jq_Class.prepare()V#Constant(I,0)#689
joeq.Class.jq_Class.prepare()V#LocalStore(I,12)#690
joeq.Class.jq_Class.prepare()V#LocalLoad(I,12)#691
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#692
joeq.Class.jq_Class.prepare()V#Get([Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,declared_interfaces)#693
joeq.Class.jq_Class.prepare()V#ArrayLength()#694
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,ge,706)#695
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#706
joeq.Class.jq_Class.prepare()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,super_class)#707
joeq.Class.jq_Class.prepare()V#Constant(L;,null)#708
joeq.Class.jq_Class.prepare()V#ConditionalBranch(Ljava/lang/Object;,eq,725)#709
joeq.Class.jq_Class.prepare()V#Constant(I,0)#725
joeq.Class.jq_Class.prepare()V#LocalStore(I,12)#726
joeq.Class.jq_Class.prepare()V#Constant(I,0)#727
joeq.Class.jq_Class.prepare()V#LocalStore(I,13)#728
joeq.Class.jq_Class.prepare()V#LocalLoad(I,13)#729
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#730
joeq.Class.jq_Class.prepare()V#Get([Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,declared_interfaces)#731
joeq.Class.jq_Class.prepare()V#ArrayLength()#732
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,ge,748)#733
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#748
joeq.Class.jq_Class.prepare()V#LocalLoad(I,12)#749
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#750
joeq.Class.jq_Class.prepare()V#Get([Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,declared_interfaces)#751
joeq.Class.jq_Class.prepare()V#ArrayLength()#752
joeq.Class.jq_Class.prepare()V#BinaryOp(I,add)#753
joeq.Class.jq_Class.prepare()V#New([Ljoeq/Class/jq_Class;,1)#754
joeq.Class.jq_Class.prepare()V#Put([Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,interfaces)#755
joeq.Class.jq_Class.prepare()V#Constant(I,0)#756
joeq.Class.jq_Class.prepare()V#LocalStore(I,13)#757
joeq.Class.jq_Class.prepare()V#LocalLoad(I,12)#758
joeq.Class.jq_Class.prepare()V#Constant(I,0)#759
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,le,832)#760
joeq.Class.jq_Class.prepare()V#LocalLoad(I,13)#832
joeq.Class.jq_Class.prepare()V#LocalLoad(I,12)#833
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,ne,837)#834
joeq.Class.jq_Class.prepare()V#Constant(I,1)#835
joeq.Class.jq_Class.prepare()V#Goto(838)#836
joeq.Class.jq_Class.prepare()V#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#838
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#839
joeq.Class.jq_Class.prepare()V#Get([Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,declared_interfaces)#840
joeq.Class.jq_Class.prepare()V#Constant(I,0)#841
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#842
joeq.Class.jq_Class.prepare()V#Get([Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,interfaces)#843
joeq.Class.jq_Class.prepare()V#LocalLoad(I,12)#844
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#845
joeq.Class.jq_Class.prepare()V#Get([Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,declared_interfaces)#846
joeq.Class.jq_Class.prepare()V#ArrayLength()#847
joeq.Class.jq_Class.prepare()V#Invoke(STATIC,Ljava/lang/System;,arraycopy,(Ljava/lang/Object;ILjava/lang/Object;II)V)#848
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#849
joeq.Class.jq_Class.prepare()V#Constant(I,10)#850
joeq.Class.jq_Class.prepare()V#New([Ljoeq/Class/jq_Type;,1)#851
joeq.Class.jq_Class.prepare()V#Put([Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_Class;,display)#852
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#853
joeq.Class.jq_Class.prepare()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,isInterface,()Z)#854
joeq.Class.jq_Class.isInterface()Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.isInterface()Z#Constant(I,2)#1
joeq.Class.jq_Class.isInterface()Z#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,chkState,(B)V)#2
joeq.Class.jq_Class.isInterface()Z#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Class.isInterface()Z#Get(C,NONSTATIC,Ljoeq/Class/jq_Class;,access_flags)#4
joeq.Class.jq_Class.isInterface()Z#Constant(I,512)#5
joeq.Class.jq_Class.isInterface()Z#BinaryOp(I,and)#6
joeq.Class.jq_Class.isInterface()Z#Constant(I,0)#7
joeq.Class.jq_Class.isInterface()Z#ConditionalBranch(I,eq,11)#8
joeq.Class.jq_Class.isInterface()Z#Constant(I,0)#11
joeq.Class.jq_Class.isInterface()Z#Return(I)#12
joeq.Class.jq_Class.prepare()V#Constant(I,0)#855
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,ne,907)#856
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#857
joeq.Class.jq_Class.prepare()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getDirectPrimarySupertype,()Ljoeq/Class/jq_Reference;)#858
joeq.Class.jq_Class.getDirectPrimarySupertype()Ljoeq/Class/jq_Reference;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.getDirectPrimarySupertype()Ljoeq/Class/jq_Reference;#Constant(I,3)#1
joeq.Class.jq_Class.getDirectPrimarySupertype()Ljoeq/Class/jq_Reference;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,chkState,(B)V)#2
joeq.Class.jq_Class.getDirectPrimarySupertype()Ljoeq/Class/jq_Reference;#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Class.getDirectPrimarySupertype()Ljoeq/Class/jq_Reference;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,isInterface,()Z)#4
joeq.Class.jq_Class.getDirectPrimarySupertype()Ljoeq/Class/jq_Reference;#Constant(I,0)#5
joeq.Class.jq_Class.getDirectPrimarySupertype()Ljoeq/Class/jq_Reference;#ConditionalBranch(I,eq,9)#6
joeq.Class.jq_Class.getDirectPrimarySupertype()Ljoeq/Class/jq_Reference;#LocalLoad(Ljava/lang/Object;,0)#9
joeq.Class.jq_Class.getDirectPrimarySupertype()Ljoeq/Class/jq_Reference;#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,super_class)#10
joeq.Class.jq_Class.getDirectPrimarySupertype()Ljoeq/Class/jq_Reference;#Return(Ljava/lang/Object;)#11
joeq.Class.jq_Class.prepare()V#LocalStore(Ljava/lang/Object;,14)#859
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,14)#860
joeq.Class.jq_Class.prepare()V#Constant(L;,null)#861
joeq.Class.jq_Class.prepare()V#ConditionalBranch(Ljava/lang/Object;,eq,897)#862
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#897
joeq.Class.jq_Class.prepare()V#Constant(I,2)#898
joeq.Class.jq_Class.prepare()V#Put(I,NONSTATIC,Ljoeq/Class/jq_Class;,offset)#899
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#900
joeq.Class.jq_Class.prepare()V#Get([Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_Class;,display)#901
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#902
joeq.Class.jq_Class.prepare()V#Get(I,NONSTATIC,Ljoeq/Class/jq_Class;,offset)#903
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#904
joeq.Class.jq_Class.prepare()V#ArrayStore(Ljava/lang/Object;)#905
joeq.Class.jq_Class.prepare()V#Goto(912)#906
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#912
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#913
joeq.Class.jq_Class.prepare()V#Get([Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,interfaces)#914
joeq.Class.jq_Class.prepare()V#Put([Ljoeq/Class/jq_Reference;,NONSTATIC,Ljoeq/Class/jq_Class;,s_s_array)#915
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#916
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#917
joeq.Class.jq_Class.prepare()V#Get([Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,interfaces)#918
joeq.Class.jq_Class.prepare()V#ArrayLength()#919
joeq.Class.jq_Class.prepare()V#Put(I,NONSTATIC,Ljoeq/Class/jq_Class;,s_s_array_length)#920
joeq.Class.jq_Class.prepare()V#Get(Z,STATIC,Ljoeq/Class/jq_Class;,TRACE)#921
joeq.Class.jq_Class.prepare()V#Constant(I,0)#922
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,eq,1002)#923
joeq.Class.jq_Class.prepare()V#Constant(I,0)#1002
joeq.Class.jq_Class.prepare()V#LocalStore(I,14)#1003
joeq.Class.jq_Class.prepare()V#LocalLoad(I,14)#1004
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#1005
joeq.Class.jq_Class.prepare()V#Get([Ljoeq/Class/jq_StaticMethod;,NONSTATIC,Ljoeq/Class/jq_Class;,static_methods)#1006
joeq.Class.jq_Class.prepare()V#ArrayLength()#1007
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,ge,1021)#1008
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#1009
joeq.Class.jq_Class.prepare()V#Get([Ljoeq/Class/jq_StaticMethod;,NONSTATIC,Ljoeq/Class/jq_Class;,static_methods)#1010
joeq.Class.jq_Class.prepare()V#LocalLoad(I,14)#1011
joeq.Class.jq_Class.prepare()V#ArrayLoad(Ljava/lang/Object;)#1012
joeq.Class.jq_Class.prepare()V#LocalStore(Ljava/lang/Object;,15)#1013
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,15)#1014
joeq.Class.jq_Class.prepare()V#Invoke(VIRTUAL,Ljoeq/Class/jq_StaticMethod;,prepare,()V)#1015
joeq.Class.jq_StaticMethod.prepare()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_StaticMethod.prepare()V#Get(B,NONSTATIC,Ljoeq/Class/jq_StaticMethod;,state)#1
joeq.Class.jq_StaticMethod.prepare()V#Constant(I,5)#2
joeq.Class.jq_StaticMethod.prepare()V#ConditionalBranch(I,ne,6)#3
joeq.Class.jq_StaticMethod.prepare()V#Constant(I,1)#4
joeq.Class.jq_StaticMethod.prepare()V#Goto(7)#5
joeq.Class.jq_StaticMethod.prepare()V#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#7
joeq.Class.jq_StaticMethod.prepare()V#LocalLoad(Ljava/lang/Object;,0)#8
joeq.Class.jq_StaticMethod.prepare()V#Constant(I,11)#9
joeq.Class.jq_StaticMethod.prepare()V#Put(B,NONSTATIC,Ljoeq/Class/jq_StaticMethod;,state)#10
joeq.Class.jq_StaticMethod.prepare()V#Return(V)#11
joeq.Class.jq_Class.prepare()V#LocalLoad(I,14)#1016
joeq.Class.jq_Class.prepare()V#Constant(I,1)#1017
joeq.Class.jq_Class.prepare()V#BinaryOp(I,add)#1018
joeq.Class.jq_Class.prepare()V#LocalStore(I,14)#1019
joeq.Class.jq_Class.prepare()V#Goto(1004)#1020
joeq.Class.jq_Class.prepare()V#Constant(I,0)#1021
joeq.Class.jq_Class.prepare()V#LocalStore(I,14)#1022
joeq.Class.jq_Class.prepare()V#LocalLoad(I,14)#1023
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#1024
joeq.Class.jq_Class.prepare()V#Get([Ljoeq/Class/jq_StaticField;,NONSTATIC,Ljoeq/Class/jq_Class;,static_fields)#1025
joeq.Class.jq_Class.prepare()V#ArrayLength()#1026
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,ge,1040)#1027
joeq.Class.jq_Class.prepare()V#Get(Z,STATIC,Ljoeq/Class/jq_Class;,TRACE)#1040
joeq.Class.jq_Class.prepare()V#Constant(I,0)#1041
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,eq,1052)#1042
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#1052
joeq.Class.jq_Class.prepare()V#Constant(I,11)#1053
joeq.Class.jq_Class.prepare()V#Put(I,NONSTATIC,Ljoeq/Class/jq_Class;,state)#1054
joeq.Class.jq_Class.prepare()V#Goto(1064)#1055
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,1)#1064
joeq.Class.jq_Class.prepare()V#Monitor(EXIT)#1065
joeq.Class.jq_Class.prepare()V#Goto(1072)#1066
joeq.Class.jq_Class.prepare()V#Return(V)#1072
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#68
joeq.Class.jq_Class.prepare()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,super_class)#69
joeq.Class.jq_Class.prepare()V#Get([Ljoeq/Class/jq_InstanceField;,NONSTATIC,Ljoeq/Class/jq_Class;,instance_fields)#70
joeq.Class.jq_Class.prepare()V#ArrayLength()#71
joeq.Class.jq_Class.prepare()V#LocalStore(I,2)#72
joeq.Class.jq_Class.prepare()V#Goto(76)#73
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#102
joeq.Class.jq_Class.prepare()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,super_class)#103
joeq.Class.jq_Class.prepare()V#Get([I,NONSTATIC,Ljoeq/Class/jq_Class;,reference_offsets)#104
joeq.Class.jq_Class.prepare()V#ArrayLength()#105
joeq.Class.jq_Class.prepare()V#LocalStore(I,4)#106
joeq.Class.jq_Class.prepare()V#Goto(110)#107
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#120
joeq.Class.jq_Class.prepare()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,super_class)#121
joeq.Class.jq_Class.prepare()V#Get(I,NONSTATIC,Ljoeq/Class/jq_Class;,instance_size)#122
joeq.Class.jq_Class.prepare()V#LocalStore(I,7)#123
joeq.Class.jq_Class.prepare()V#Goto(127)#124
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#532
joeq.Class.jq_Class.prepare()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,super_class)#533
joeq.Class.jq_Class.prepare()V#Get([Ljoeq/Class/jq_InstanceMethod;,NONSTATIC,Ljoeq/Class/jq_Class;,virtual_methods)#534
joeq.Class.jq_Class.prepare()V#ArrayLength()#535
joeq.Class.jq_Class.prepare()V#LocalStore(I,10)#536
joeq.Class.jq_Class.prepare()V#Goto(540)#537
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#551
joeq.Class.jq_Class.prepare()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,super_class)#552
joeq.Class.jq_Class.prepare()V#Get([Ljoeq/Class/jq_InstanceMethod;,NONSTATIC,Ljoeq/Class/jq_Class;,virtual_methods)#553
joeq.Class.jq_Class.prepare()V#Constant(I,0)#554
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#555
joeq.Class.jq_Class.prepare()V#Get([Ljoeq/Class/jq_InstanceMethod;,NONSTATIC,Ljoeq/Class/jq_Class;,virtual_methods)#556
joeq.Class.jq_Class.prepare()V#Constant(I,0)#557
joeq.Class.jq_Class.prepare()V#LocalLoad(I,10)#558
joeq.Class.jq_Class.prepare()V#Invoke(STATIC,Ljava/lang/System;,arraycopy,(Ljava/lang/Object;ILjava/lang/Object;II)V)#559
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#710
joeq.Class.jq_Class.prepare()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,super_class)#711
joeq.Class.jq_Class.prepare()V#Get([Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,interfaces)#712
joeq.Class.jq_Class.prepare()V#ArrayLength()#713
joeq.Class.jq_Class.prepare()V#LocalStore(I,12)#714
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#715
joeq.Class.jq_Class.prepare()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,super_class)#716
joeq.Class.jq_Class.prepare()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,isInterface,()Z)#717
joeq.Class.jq_Class.prepare()V#Constant(I,0)#718
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,eq,727)#719
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,14)#863
joeq.Class.jq_Class.prepare()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Reference;,isPrepared,()Z)#864
joeq.Class.jq_Reference.isPrepared()Z#Constant(I,1)#4
joeq.Class.jq_Reference.isPrepared()Z#Goto(7)#5
joeq.Class.jq_Class.prepare()V#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#865
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,14)#866
joeq.Class.jq_Class.prepare()V#Get(I,NONSTATIC,Ljoeq/Class/jq_Reference;,offset)#867
joeq.Class.jq_Class.prepare()V#LocalStore(I,15)#868
joeq.Class.jq_Class.prepare()V#LocalLoad(I,15)#869
joeq.Class.jq_Class.prepare()V#Constant(I,2)#870
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,ge,874)#871
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,14)#874
joeq.Class.jq_Class.prepare()V#Get([Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_Reference;,display)#875
joeq.Class.jq_Class.prepare()V#Constant(I,2)#876
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#877
joeq.Class.jq_Class.prepare()V#Get([Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_Class;,display)#878
joeq.Class.jq_Class.prepare()V#Constant(I,2)#879
joeq.Class.jq_Class.prepare()V#LocalLoad(I,15)#880
joeq.Class.jq_Class.prepare()V#Constant(I,1)#881
joeq.Class.jq_Class.prepare()V#BinaryOp(I,sub)#882
joeq.Class.jq_Class.prepare()V#Invoke(STATIC,Ljava/lang/System;,arraycopy,(Ljava/lang/Object;ILjava/lang/Object;II)V)#883
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#884
joeq.Class.jq_Class.prepare()V#LocalLoad(I,15)#885
joeq.Class.jq_Class.prepare()V#Constant(I,1)#886
joeq.Class.jq_Class.prepare()V#BinaryOp(I,add)#887
joeq.Class.jq_Class.prepare()V#Put(I,NONSTATIC,Ljoeq/Class/jq_Class;,offset)#888
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#889
joeq.Class.jq_Class.prepare()V#Get(I,NONSTATIC,Ljoeq/Class/jq_Class;,offset)#890
joeq.Class.jq_Class.prepare()V#Constant(I,10)#891
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,lt,896)#892
joeq.Class.jq_Class.prepare()V#Goto(900)#896
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#LocalLoad(Ljava/lang/Object;,1)#8
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#Instanceof(Ljoeq/Class/jq_Array;)#9
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#Constant(I,0)#10
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#ConditionalBranch(I,eq,13)#11
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#LocalLoad(Ljava/lang/Object;,1)#13
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#CheckCast(Ljoeq/Class/jq_Class;)#14
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#LocalStore(Ljava/lang/Object;,2)#15
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#LocalLoad(Ljava/lang/Object;,2)#16
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getSuperclass,()Ljoeq/Class/jq_Class;)#17
joeq.Class.jq_Class.getSuperclass()Ljoeq/Class/jq_Class;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.getSuperclass()Ljoeq/Class/jq_Class;#Constant(I,3)#1
joeq.Class.jq_Class.getSuperclass()Ljoeq/Class/jq_Class;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,chkState,(B)V)#2
joeq.Class.jq_Class.getSuperclass()Ljoeq/Class/jq_Class;#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Class.getSuperclass()Ljoeq/Class/jq_Class;#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,super_class)#4
joeq.Class.jq_Class.getSuperclass()Ljoeq/Class/jq_Class;#Return(Ljava/lang/Object;)#5
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#LocalStore(Ljava/lang/Object;,3)#18
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#LocalLoad(Ljava/lang/Object;,3)#19
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#Constant(L;,null)#20
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#ConditionalBranch(Ljava/lang/Object;,ne,33)#21
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#LocalLoad(Ljava/lang/Object;,0)#33
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#LocalLoad(Ljava/lang/Object;,3)#34
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#Invoke(SPECIAL,Lchord/program/RTA;,prepareClass,(Ljoeq/Class/jq_Reference;)V)#35
joeq.Class.jq_Class.prepare()V#Return(V)#4
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#Get(Z,STATIC,Lchord/program/RTA;,$assertionsDisabled)#22
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#Constant(I,0)#23
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#ConditionalBranch(I,ne,36)#24
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#LocalLoad(Ljava/lang/Object;,2)#25
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#LocalLoad(Ljava/lang/Object;,0)#26
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Lchord/program/RTA;,javaLangObject)#27
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#ConditionalBranch(Ljava/lang/Object;,eq,36)#28
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#LocalLoad(Ljava/lang/Object;,2)#36
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getDeclaredInterfaces,()[Ljoeq/Class/jq_Class;)#37
joeq.Class.jq_Class.getDeclaredInterfaces()[Ljoeq/Class/jq_Class;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.getDeclaredInterfaces()[Ljoeq/Class/jq_Class;#Constant(I,3)#1
joeq.Class.jq_Class.getDeclaredInterfaces()[Ljoeq/Class/jq_Class;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,chkState,(B)V)#2
joeq.Class.jq_Class.getDeclaredInterfaces()[Ljoeq/Class/jq_Class;#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Class.getDeclaredInterfaces()[Ljoeq/Class/jq_Class;#Get([Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,declared_interfaces)#4
joeq.Class.jq_Class.getDeclaredInterfaces()[Ljoeq/Class/jq_Class;#Return(Ljava/lang/Object;)#5
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#Dup(1,0)#38
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#LocalStore(Ljava/lang/Object;,7)#39
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#ArrayLength()#40
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#LocalStore(I,6)#41
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#Constant(I,0)#42
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#LocalStore(I,5)#43
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#Goto(56)#44
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#LocalLoad(I,5)#56
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#LocalLoad(I,6)#57
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#ConditionalBranch(I,lt,45)#58
chord.program.RTA.prepareClass(Ljoeq/Class/jq_Reference;)V#Return(V)#59
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,3)#154
chord.program.RTA.build()V#New(Ljoeq/Class/jq_NameAndDesc;,0)#155
chord.program.RTA.build()V#Dup(1,0)#156
chord.program.RTA.build()V#Constant(Ljava/lang/String;,"main")#157
chord.program.RTA.build()V#Constant(Ljava/lang/String;,"([Ljava/lang/String;)V")#158
chord.program.RTA.build()V#Invoke(SPECIAL,Ljoeq/Class/jq_NameAndDesc;,<init>,(Ljava/lang/String;Ljava/lang/String;)V)#159
joeq.Class.jq_NameAndDesc.<init>(Ljava/lang/String;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_NameAndDesc.<init>(Ljava/lang/String;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Class.jq_NameAndDesc.<init>(Ljava/lang/String;Ljava/lang/String;)V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#2
joeq.Class.jq_NameAndDesc.<init>(Ljava/lang/String;Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#3
joeq.Class.jq_NameAndDesc.<init>(Ljava/lang/String;Ljava/lang/String;)V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#4
joeq.Class.jq_NameAndDesc.<init>(Ljava/lang/String;Ljava/lang/String;)V#Invoke(SPECIAL,Ljoeq/Class/jq_NameAndDesc;,<init>,(Ljoeq/UTF/Utf8;Ljoeq/UTF/Utf8;)V)#5
joeq.Class.jq_NameAndDesc.<init>(Ljava/lang/String;Ljava/lang/String;)V#Return(V)#6
chord.program.RTA.build()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getDeclaredMember,(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;)#160
joeq.Class.jq_NameAndDesc.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_NameAndDesc.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Class.jq_NameAndDesc.equals(Ljava/lang/Object;)Z#CheckCast(Ljoeq/Class/jq_NameAndDesc;)#2
joeq.Class.jq_NameAndDesc.equals(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljoeq/Class/jq_NameAndDesc;,equals,(Ljoeq/Class/jq_NameAndDesc;)Z)#3
joeq.Class.jq_NameAndDesc.equals(Ljoeq/Class/jq_NameAndDesc;)Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_NameAndDesc.equals(Ljoeq/Class/jq_NameAndDesc;)Z#Get(Ljoeq/UTF/Utf8;,NONSTATIC,Ljoeq/Class/jq_NameAndDesc;,name)#1
joeq.Class.jq_NameAndDesc.equals(Ljoeq/Class/jq_NameAndDesc;)Z#LocalLoad(Ljava/lang/Object;,1)#2
joeq.Class.jq_NameAndDesc.equals(Ljoeq/Class/jq_NameAndDesc;)Z#Get(Ljoeq/UTF/Utf8;,NONSTATIC,Ljoeq/Class/jq_NameAndDesc;,name)#3
joeq.Class.jq_NameAndDesc.equals(Ljoeq/Class/jq_NameAndDesc;)Z#ConditionalBranch(Ljava/lang/Object;,ne,12)#4
joeq.Class.jq_NameAndDesc.equals(Ljoeq/Class/jq_NameAndDesc;)Z#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Class.jq_NameAndDesc.equals(Ljoeq/Class/jq_NameAndDesc;)Z#Get(Ljoeq/UTF/Utf8;,NONSTATIC,Ljoeq/Class/jq_NameAndDesc;,desc)#6
joeq.Class.jq_NameAndDesc.equals(Ljoeq/Class/jq_NameAndDesc;)Z#LocalLoad(Ljava/lang/Object;,1)#7
joeq.Class.jq_NameAndDesc.equals(Ljoeq/Class/jq_NameAndDesc;)Z#Get(Ljoeq/UTF/Utf8;,NONSTATIC,Ljoeq/Class/jq_NameAndDesc;,desc)#8
joeq.Class.jq_NameAndDesc.equals(Ljoeq/Class/jq_NameAndDesc;)Z#ConditionalBranch(Ljava/lang/Object;,ne,12)#9
joeq.Class.jq_NameAndDesc.equals(Ljoeq/Class/jq_NameAndDesc;)Z#Constant(I,1)#10
joeq.Class.jq_NameAndDesc.equals(Ljoeq/Class/jq_NameAndDesc;)Z#Goto(13)#11
joeq.Class.jq_NameAndDesc.equals(Ljoeq/Class/jq_NameAndDesc;)Z#Return(I)#13
joeq.Class.jq_NameAndDesc.equals(Ljava/lang/Object;)Z#Return(I)#4
chord.program.RTA.build()V#CheckCast(Ljoeq/Class/jq_Method;)#161
chord.program.RTA.build()V#LocalStore(Ljava/lang/Object;,4)#162
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,4)#163
chord.program.RTA.build()V#Constant(L;,null)#164
chord.program.RTA.build()V#ConditionalBranch(Ljava/lang/Object;,ne,174)#165
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,0)#174
chord.program.RTA.build()V#Invoke(VIRTUAL,Lchord/program/RTA;,prepAdditionalEntrypoints,()V)#175
chord.program.RTA.prepAdditionalEntrypoints()V#Return(V)#0
chord.program.RTA.build()V#Constant(I,0)#176
chord.program.RTA.build()V#LocalStore(I,5)#177
chord.program.RTA.build()V#Goto(260)#178
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,0)#260
chord.program.RTA.build()V#Get(Z,NONSTATIC,Lchord/program/RTA;,repeat)#261
chord.program.RTA.build()V#Constant(I,0)#262
chord.program.RTA.build()V#ConditionalBranch(I,ne,179)#263
chord.program.RTA.build()V#Get(I,STATIC,Lchord/project/Config;,verbose)#179
chord.program.RTA.build()V#Constant(I,1)#180
chord.program.RTA.build()V#ConditionalBranch(I,lt,191)#181
chord.program.RTA.build()V#Get(Ljava/io/PrintStream;,STATIC,Ljava/lang/System;,out)#182
chord.program.RTA.build()V#New(Ljava/lang/StringBuilder;,0)#183
chord.program.RTA.build()V#Dup(1,0)#184
chord.program.RTA.build()V#Constant(Ljava/lang/String;,"Iteration: ")#185
chord.program.RTA.build()V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#186
chord.program.RTA.build()V#LocalLoad(I,5)#187
chord.program.RTA.build()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#188
chord.program.RTA.build()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#189
chord.program.RTA.build()V#Invoke(VIRTUAL,Ljava/io/PrintStream;,println,(Ljava/lang/String;)V)#190
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,0)#191
chord.program.RTA.build()V#Constant(I,0)#192
chord.program.RTA.build()V#Put(Z,NONSTATIC,Lchord/program/RTA;,repeat)#193
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,0)#194
chord.program.RTA.build()V#Get(Ljava/util/Set;,NONSTATIC,Lchord/program/RTA;,classesVisitedForClinit)#195
chord.program.RTA.build()V#Invoke(INTERFACE,Ljava/util/Set;,clear,()V)#196
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,0)#197
chord.program.RTA.build()V#Get(Lchord/util/IndexSet;,NONSTATIC,Lchord/program/RTA;,methods)#198
chord.program.RTA.build()V#Invoke(VIRTUAL,Lchord/util/IndexSet;,clear,()V)#199
chord.util.IndexSet.clear()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.IndexSet.clear()V#Get(Ljava/util/List;,NONSTATIC,Lchord/util/IndexSet;,list)#1
chord.util.IndexSet.clear()V#Invoke(INTERFACE,Ljava/util/List;,clear,()V)#2
chord.util.IndexSet.clear()V#LocalLoad(Ljava/lang/Object;,0)#3
chord.util.IndexSet.clear()V#Get(Ljava/util/HashSet;,NONSTATIC,Lchord/util/IndexSet;,hset)#4
chord.util.IndexSet.clear()V#Invoke(VIRTUAL,Ljava/util/HashSet;,clear,()V)#5
chord.util.IndexSet.clear()V#Return(V)#6
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,0)#200
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,3)#201
chord.program.RTA.build()V#Invoke(VIRTUAL,Lchord/program/RTA;,visitClinits,(Ljoeq/Class/jq_Class;)V)#202
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#Get(Ljava/util/Set;,NONSTATIC,Lchord/program/RTA;,classesVisitedForClinit)#1
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,1)#2
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#3
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#Constant(I,0)#4
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#ConditionalBranch(I,eq,47)#5
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,1)#6
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getClassInitializer,()Ljoeq/Class/jq_ClassInitializer;)#7
joeq.Class.jq_Class.getClassInitializer()Ljoeq/Class/jq_ClassInitializer;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.getClassInitializer()Ljoeq/Class/jq_ClassInitializer;#Constant(I,3)#1
joeq.Class.jq_Class.getClassInitializer()Ljoeq/Class/jq_ClassInitializer;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,chkState,(B)V)#2
joeq.Class.jq_Class.getClassInitializer()Ljoeq/Class/jq_ClassInitializer;#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Class.getClassInitializer()Ljoeq/Class/jq_ClassInitializer;#New(Ljoeq/Class/jq_NameAndDesc;,0)#4
joeq.Class.jq_Class.getClassInitializer()Ljoeq/Class/jq_ClassInitializer;#Dup(1,0)#5
joeq.Class.jq_Class.getClassInitializer()Ljoeq/Class/jq_ClassInitializer;#Constant(Ljava/lang/String;,"<clinit>")#6
joeq.Class.jq_Class.getClassInitializer()Ljoeq/Class/jq_ClassInitializer;#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#7
joeq.Class.jq_Class.getClassInitializer()Ljoeq/Class/jq_ClassInitializer;#Constant(Ljava/lang/String;,"()V")#8
joeq.Class.jq_Class.getClassInitializer()Ljoeq/Class/jq_ClassInitializer;#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#9
joeq.Class.jq_Class.getClassInitializer()Ljoeq/Class/jq_ClassInitializer;#Invoke(SPECIAL,Ljoeq/Class/jq_NameAndDesc;,<init>,(Ljoeq/UTF/Utf8;Ljoeq/UTF/Utf8;)V)#10
joeq.Class.jq_Class.getClassInitializer()Ljoeq/Class/jq_ClassInitializer;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getDeclaredStaticMethod,(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;)#11
joeq.Class.jq_Class.getDeclaredStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.getDeclaredStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#Constant(I,3)#1
joeq.Class.jq_Class.getDeclaredStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,chkState,(B)V)#2
joeq.Class.jq_Class.getDeclaredStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Class.getDeclaredStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#Get([Ljoeq/Class/jq_StaticMethod;,NONSTATIC,Ljoeq/Class/jq_Class;,static_methods)#4
joeq.Class.jq_Class.getDeclaredStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,1)#5
joeq.Class.jq_Class.getDeclaredStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#Invoke(STATIC,Ljoeq/Class/jq_Class;,findByNameAndDesc,([Ljoeq/Class/jq_Member;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;)#6
joeq.Class.jq_Class.findByNameAndDesc([Ljoeq/Class/jq_Member;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;#Constant(I,0)#0
joeq.Class.jq_Class.findByNameAndDesc([Ljoeq/Class/jq_Member;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;#LocalStore(I,2)#1
joeq.Class.jq_Class.findByNameAndDesc([Ljoeq/Class/jq_Member;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;#LocalLoad(I,2)#2
joeq.Class.jq_Class.findByNameAndDesc([Ljoeq/Class/jq_Member;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Class.findByNameAndDesc([Ljoeq/Class/jq_Member;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;#ArrayLength()#4
joeq.Class.jq_Class.findByNameAndDesc([Ljoeq/Class/jq_Member;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;#ConditionalBranch(I,ge,23)#5
joeq.Class.jq_Class.findByNameAndDesc([Ljoeq/Class/jq_Member;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;#LocalLoad(Ljava/lang/Object;,0)#6
joeq.Class.jq_Class.findByNameAndDesc([Ljoeq/Class/jq_Member;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;#LocalLoad(I,2)#7
joeq.Class.jq_Class.findByNameAndDesc([Ljoeq/Class/jq_Member;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;#ArrayLoad(Ljava/lang/Object;)#8
joeq.Class.jq_Class.findByNameAndDesc([Ljoeq/Class/jq_Member;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;#LocalStore(Ljava/lang/Object;,3)#9
joeq.Class.jq_Class.findByNameAndDesc([Ljoeq/Class/jq_Member;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;#LocalLoad(Ljava/lang/Object;,3)#10
joeq.Class.jq_Class.findByNameAndDesc([Ljoeq/Class/jq_Member;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;#Invoke(VIRTUAL,Ljoeq/Class/jq_Member;,getNameAndDesc,()Ljoeq/Class/jq_NameAndDesc;)#11
joeq.Class.jq_Member.getNameAndDesc()Ljoeq/Class/jq_NameAndDesc;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Member.getNameAndDesc()Ljoeq/Class/jq_NameAndDesc;#Get(Ljoeq/Class/jq_NameAndDesc;,NONSTATIC,Ljoeq/Class/jq_Member;,nd)#1
joeq.Class.jq_Member.getNameAndDesc()Ljoeq/Class/jq_NameAndDesc;#Return(Ljava/lang/Object;)#2
joeq.Class.jq_Class.findByNameAndDesc([Ljoeq/Class/jq_Member;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;#LocalLoad(Ljava/lang/Object;,1)#12
joeq.Class.jq_Class.findByNameAndDesc([Ljoeq/Class/jq_Member;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;#Invoke(VIRTUAL,Ljoeq/Class/jq_NameAndDesc;,equals,(Ljoeq/Class/jq_NameAndDesc;)Z)#13
joeq.Class.jq_NameAndDesc.equals(Ljoeq/Class/jq_NameAndDesc;)Z#Constant(I,0)#12
joeq.Class.jq_Class.findByNameAndDesc([Ljoeq/Class/jq_Member;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;#Constant(I,0)#14
joeq.Class.jq_Class.findByNameAndDesc([Ljoeq/Class/jq_Member;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;#ConditionalBranch(I,eq,18)#15
joeq.Class.jq_Class.findByNameAndDesc([Ljoeq/Class/jq_Member;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;#LocalLoad(I,2)#18
joeq.Class.jq_Class.findByNameAndDesc([Ljoeq/Class/jq_Member;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;#Constant(I,1)#19
joeq.Class.jq_Class.findByNameAndDesc([Ljoeq/Class/jq_Member;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;#BinaryOp(I,add)#20
joeq.Class.jq_Class.findByNameAndDesc([Ljoeq/Class/jq_Member;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;#LocalStore(I,2)#21
joeq.Class.jq_Class.findByNameAndDesc([Ljoeq/Class/jq_Member;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;#Goto(2)#22
joeq.Class.jq_Class.findByNameAndDesc([Ljoeq/Class/jq_Member;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;#Constant(L;,null)#23
joeq.Class.jq_Class.findByNameAndDesc([Ljoeq/Class/jq_Member;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;#Return(Ljava/lang/Object;)#24
joeq.Class.jq_Class.getDeclaredStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#CheckCast(Ljoeq/Class/jq_StaticMethod;)#7
joeq.Class.jq_Class.getDeclaredStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#Return(Ljava/lang/Object;)#8
joeq.Class.jq_Class.getClassInitializer()Ljoeq/Class/jq_ClassInitializer;#CheckCast(Ljoeq/Class/jq_ClassInitializer;)#12
joeq.Class.jq_Class.getClassInitializer()Ljoeq/Class/jq_ClassInitializer;#Return(Ljava/lang/Object;)#13
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#LocalStore(Ljava/lang/Object;,2)#8
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,2)#9
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#Constant(L;,null)#10
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#ConditionalBranch(Ljava/lang/Object;,eq,15)#11
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,1)#15
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getSuperclass,()Ljoeq/Class/jq_Class;)#16
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#LocalStore(Ljava/lang/Object;,3)#17
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,3)#18
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#Constant(L;,null)#19
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#ConditionalBranch(Ljava/lang/Object;,eq,24)#20
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,0)#21
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,3)#22
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#Invoke(VIRTUAL,Lchord/program/RTA;,visitClinits,(Ljoeq/Class/jq_Class;)V)#23
joeq.Class.jq_Class.findByNameAndDesc([Ljoeq/Class/jq_Member;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;#LocalLoad(Ljava/lang/Object;,3)#16
joeq.Class.jq_Class.findByNameAndDesc([Ljoeq/Class/jq_Member;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;#Return(Ljava/lang/Object;)#17
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,0)#12
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,2)#13
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#Invoke(VIRTUAL,Lchord/program/RTA;,visitMethod,(Ljoeq/Class/jq_Method;)V)#14
chord.program.RTA.visitMethod(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.program.RTA.visitMethod(Ljoeq/Class/jq_Method;)V#Get(Lchord/util/IndexSet;,NONSTATIC,Lchord/program/RTA;,methods)#1
chord.program.RTA.visitMethod(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#2
chord.program.RTA.visitMethod(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Lchord/util/IndexSet;,add,(Ljava/lang/Object;)Z)#3
joeq.Class.jq_Member.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Member.hashCode()I#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Member;,clazz)#1
joeq.Class.jq_Member.hashCode()I#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,hashCode,()I)#2
joeq.Class.jq_Member.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Member.hashCode()I#Get(Ljoeq/Class/jq_NameAndDesc;,NONSTATIC,Ljoeq/Class/jq_Member;,nd)#4
joeq.Class.jq_Member.hashCode()I#Invoke(VIRTUAL,Ljoeq/Class/jq_NameAndDesc;,hashCode,()I)#5
joeq.Class.jq_Member.hashCode()I#BinaryOp(I,xor)#6
joeq.Class.jq_Member.hashCode()I#Return(I)#7
chord.program.RTA.visitMethod(Ljoeq/Class/jq_Method;)V#Constant(I,0)#4
chord.program.RTA.visitMethod(Ljoeq/Class/jq_Method;)V#ConditionalBranch(I,eq,15)#5
chord.program.RTA.visitMethod(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#6
chord.program.RTA.visitMethod(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,isAbstract,()Z)#7
joeq.Class.jq_Method.isAbstract()Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Method.isAbstract()Z#Constant(I,1024)#1
joeq.Class.jq_Method.isAbstract()Z#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,checkAccessFlag,(C)Z)#2
joeq.Class.jq_Method.isAbstract()Z#Return(I)#3
chord.program.RTA.visitMethod(Ljoeq/Class/jq_Method;)V#Constant(I,0)#8
chord.program.RTA.visitMethod(Ljoeq/Class/jq_Method;)V#ConditionalBranch(I,ne,15)#9
chord.program.RTA.visitMethod(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#10
chord.program.RTA.visitMethod(Ljoeq/Class/jq_Method;)V#Get(Ljava/util/List;,NONSTATIC,Lchord/program/RTA;,methodWorklist)#11
chord.program.RTA.visitMethod(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#12
chord.program.RTA.visitMethod(Ljoeq/Class/jq_Method;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#13
chord.program.RTA.visitMethod(Ljoeq/Class/jq_Method;)V#Pop(1)#14
chord.program.RTA.visitMethod(Ljoeq/Class/jq_Method;)V#Return(V)#15
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,1)#24
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getDeclaredInterfaces,()[Ljoeq/Class/jq_Class;)#25
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#Dup(1,0)#26
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#LocalStore(Ljava/lang/Object;,7)#27
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#ArrayLength()#28
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#LocalStore(I,6)#29
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#Constant(I,0)#30
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#LocalStore(I,5)#31
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#Goto(44)#32
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#LocalLoad(I,5)#44
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#LocalLoad(I,6)#45
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#ConditionalBranch(I,lt,33)#46
chord.program.RTA.visitClinits(Ljoeq/Class/jq_Class;)V#Return(V)#47
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,0)#203
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,4)#204
chord.program.RTA.build()V#Invoke(VIRTUAL,Lchord/program/RTA;,visitMethod,(Ljoeq/Class/jq_Method;)V)#205
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,0)#206
chord.program.RTA.build()V#Invoke(VIRTUAL,Lchord/program/RTA;,visitAdditionalEntrypoints,()V)#207
chord.program.RTA.visitAdditionalEntrypoints()V#Return(V)#0
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,0)#208
chord.program.RTA.build()V#Get(Ljava/util/LinkedHashSet;,NONSTATIC,Lchord/program/RTA;,reflectiveCtors)#209
chord.program.RTA.build()V#Constant(L;,null)#210
chord.program.RTA.build()V#ConditionalBranch(Ljava/lang/Object;,eq,244)#211
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,0)#244
chord.program.RTA.build()V#Get(Ljava/util/List;,NONSTATIC,Lchord/program/RTA;,methodWorklist)#245
chord.program.RTA.build()V#Invoke(INTERFACE,Ljava/util/List;,isEmpty,()Z)#246
chord.program.RTA.build()V#Constant(I,0)#247
chord.program.RTA.build()V#ConditionalBranch(I,eq,229)#248
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,0)#229
chord.program.RTA.build()V#Get(Ljava/util/List;,NONSTATIC,Lchord/program/RTA;,methodWorklist)#230
chord.program.RTA.build()V#Invoke(INTERFACE,Ljava/util/List;,size,()I)#231
chord.program.RTA.build()V#LocalStore(I,6)#232
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,0)#233
chord.program.RTA.build()V#Get(Ljava/util/List;,NONSTATIC,Lchord/program/RTA;,methodWorklist)#234
chord.program.RTA.build()V#LocalLoad(I,6)#235
chord.program.RTA.build()V#Constant(I,1)#236
chord.program.RTA.build()V#BinaryOp(I,sub)#237
chord.program.RTA.build()V#Invoke(INTERFACE,Ljava/util/List;,remove,(I)Ljava/lang/Object;)#238
chord.program.RTA.build()V#CheckCast(Ljoeq/Class/jq_Method;)#239
chord.program.RTA.build()V#LocalStore(Ljava/lang/Object;,7)#240
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,0)#241
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,7)#242
chord.program.RTA.build()V#Invoke(SPECIAL,Lchord/program/RTA;,processMethod,(Ljoeq/Class/jq_Method;)V)#243
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Get(Ljava/util/Set;,NONSTATIC,Lchord/program/RTA;,staticReflectResolved)#1
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Constant(L;,null)#2
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#ConditionalBranch(Ljava/lang/Object;,eq,62)#3
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#62
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getCFG,()Ljoeq/Compiler/Quad/ControlFlowGraph;)#63
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Z,STATIC,Ljoeq/Class/jq_Method;,$assertionsDisabled)#0
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(I,0)#1
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#ConditionalBranch(I,ne,11)#2
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,isAbstract,()Z)#4
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(I,0)#5
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#ConditionalBranch(I,eq,11)#6
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#11
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Class/jq_Method;,cfg)#12
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(L;,null)#13
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#ConditionalBranch(Ljava/lang/Object;,eq,18)#14
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#New(Ljava/lang/StringBuilder;,0)#18
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Dup(1,0)#19
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#20
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#21
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getName,()Ljoeq/UTF/Utf8;)#22
joeq.Class.jq_Member.getName()Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Member.getName()Ljoeq/UTF/Utf8;#Get(Ljoeq/Class/jq_NameAndDesc;,NONSTATIC,Ljoeq/Class/jq_Member;,nd)#1
joeq.Class.jq_Member.getName()Ljoeq/UTF/Utf8;#Invoke(VIRTUAL,Ljoeq/Class/jq_NameAndDesc;,getName,()Ljoeq/UTF/Utf8;)#2
joeq.Class.jq_Member.getName()Ljoeq/UTF/Utf8;#Return(Ljava/lang/Object;)#3
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,toString,()Ljava/lang/String;)#23
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#24
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(Ljava/lang/String;,":")#25
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#26
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#27
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getDesc,()Ljoeq/UTF/Utf8;)#28
joeq.Class.jq_Member.getDesc()Ljoeq/UTF/Utf8;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Member.getDesc()Ljoeq/UTF/Utf8;#Get(Ljoeq/Class/jq_NameAndDesc;,NONSTATIC,Ljoeq/Class/jq_Member;,nd)#1
joeq.Class.jq_Member.getDesc()Ljoeq/UTF/Utf8;#Invoke(VIRTUAL,Ljoeq/Class/jq_NameAndDesc;,getDesc,()Ljoeq/UTF/Utf8;)#2
joeq.Class.jq_Member.getDesc()Ljoeq/UTF/Utf8;#Return(Ljava/lang/Object;)#3
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,toString,()Ljava/lang/String;)#29
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#30
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(Ljava/lang/String;,"@")#31
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#32
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#33
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getDeclaringClass,()Ljoeq/Class/jq_Class;)#34
joeq.Class.jq_Member.getDeclaringClass()Ljoeq/Class/jq_Class;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Member.getDeclaringClass()Ljoeq/Class/jq_Class;#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Member;,clazz)#1
joeq.Class.jq_Member.getDeclaringClass()Ljoeq/Class/jq_Class;#Return(Ljava/lang/Object;)#2
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getName,()Ljava/lang/String;)#35
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#36
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#37
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalStore(Ljava/lang/Object;,1)#38
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Ljava/util/Map;,STATIC,Ljoeq/Class/jq_Method;,nativeCFGBuildersMap)#39
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,1)#40
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#41
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#CheckCast(Ljava/lang/String;)#42
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalStore(Ljava/lang/Object;,2)#43
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,2)#44
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(L;,null)#45
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#ConditionalBranch(Ljava/lang/Object;,eq,96)#46
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#96
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,isNative,()Z)#97
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(I,0)#98
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#ConditionalBranch(I,eq,118)#99
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#118
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,isExcluded,()Z)#119
joeq.Class.jq_Method.isExcluded()Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Method.isExcluded()Z#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getDeclaringClass,()Ljoeq/Class/jq_Class;)#1
joeq.Class.jq_Method.isExcluded()Z#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getName,()Ljava/lang/String;)#2
joeq.Class.jq_Method.isExcluded()Z#LocalStore(Ljava/lang/Object;,1)#3
joeq.Class.jq_Method.isExcluded()Z#Get([Ljava/lang/String;,STATIC,Ljoeq/Class/jq_Method;,scopeExcludedPrefixes)#4
joeq.Class.jq_Method.isExcluded()Z#LocalStore(Ljava/lang/Object;,2)#5
joeq.Class.jq_Method.isExcluded()Z#LocalLoad(Ljava/lang/Object;,2)#6
joeq.Class.jq_Method.isExcluded()Z#ArrayLength()#7
joeq.Class.jq_Method.isExcluded()Z#LocalStore(I,3)#8
joeq.Class.jq_Method.isExcluded()Z#Constant(I,0)#9
joeq.Class.jq_Method.isExcluded()Z#LocalStore(I,4)#10
joeq.Class.jq_Method.isExcluded()Z#LocalLoad(I,4)#11
joeq.Class.jq_Method.isExcluded()Z#LocalLoad(I,3)#12
joeq.Class.jq_Method.isExcluded()Z#ConditionalBranch(I,ge,30)#13
joeq.Class.jq_Method.isExcluded()Z#Constant(I,0)#30
joeq.Class.jq_Method.isExcluded()Z#Return(I)#31
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(I,0)#120
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#ConditionalBranch(I,eq,140)#121
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#140
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#141
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(STATIC,Ljoeq/Compiler/Quad/CodeCache;,getCode,(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;)#142
joeq.Compiler.Quad.CodeCache.<clinit>()V#New(Ljoeq/Compiler/Quad/CodeCache;,0)#0
joeq.Compiler.Quad.CodeCache.<clinit>()V#Dup(1,0)#1
joeq.Compiler.Quad.CodeCache.<clinit>()V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/CodeCache;,<init>,()V)#2
joeq.Compiler.Quad.CodeCache.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.CodeCache.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.Quad.CodeCache.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.CodeCache.<init>()V#New(Ljava/util/HashMap;,0)#3
joeq.Compiler.Quad.CodeCache.<init>()V#Dup(1,0)#4
joeq.Compiler.Quad.CodeCache.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#5
joeq.Compiler.Quad.CodeCache.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Ljoeq/Compiler/Quad/CodeCache;,map)#6
joeq.Compiler.Quad.CodeCache.<init>()V#LocalLoad(Ljava/lang/Object;,0)#7
joeq.Compiler.Quad.CodeCache.<init>()V#New(Ljava/util/HashMap;,0)#8
joeq.Compiler.Quad.CodeCache.<init>()V#Dup(1,0)#9
joeq.Compiler.Quad.CodeCache.<init>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#10
joeq.Compiler.Quad.CodeCache.<init>()V#Put(Ljava/util/Map;,NONSTATIC,Ljoeq/Compiler/Quad/CodeCache;,bcmap)#11
joeq.Compiler.Quad.CodeCache.<init>()V#Return(V)#12
joeq.Compiler.Quad.CodeCache.<clinit>()V#Put(Ljoeq/Compiler/Quad/CodeCache;,STATIC,Ljoeq/Compiler/Quad/CodeCache;,cache)#3
joeq.Compiler.Quad.CodeCache.<clinit>()V#New(Ljava/util/LinkedList;,0)#4
joeq.Compiler.Quad.CodeCache.<clinit>()V#Dup(1,0)#5
joeq.Compiler.Quad.CodeCache.<clinit>()V#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#6
joeq.Compiler.Quad.CodeCache.<clinit>()V#Put(Ljava/util/List;,STATIC,Ljoeq/Compiler/Quad/CodeCache;,passes)#7
joeq.Compiler.Quad.CodeCache.<clinit>()V#Constant(I,0)#8
joeq.Compiler.Quad.CodeCache.<clinit>()V#Put(Z,STATIC,Ljoeq/Compiler/Quad/CodeCache;,TRACE)#9
joeq.Compiler.Quad.CodeCache.<clinit>()V#Constant(I,1)#10
joeq.Compiler.Quad.CodeCache.<clinit>()V#Put(Z,STATIC,Ljoeq/Compiler/Quad/CodeCache;,AlwaysMap)#11
joeq.Compiler.Quad.CodeCache.<clinit>()V#Return(V)#12
joeq.Compiler.Quad.CodeCache.getCode(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Ljoeq/Compiler/Quad/CodeCache;,STATIC,Ljoeq/Compiler/Quad/CodeCache;,cache)#0
joeq.Compiler.Quad.CodeCache.getCode(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#1
joeq.Compiler.Quad.CodeCache.getCode(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/CodeCache;,_get,(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;)#2
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Ljava/util/Map;,NONSTATIC,Ljoeq/Compiler/Quad/CodeCache;,map)#1
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,1)#2
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#3
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(I,0)#4
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#ConditionalBranch(I,eq,12)#5
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Z,STATIC,Ljoeq/Compiler/Quad/CodeCache;,TRACE)#12
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(I,0)#13
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#ConditionalBranch(I,eq,25)#14
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#New(Ljoeq/Compiler/Quad/BytecodeToQuad;,0)#25
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,8)#0
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#New([Ljava/lang/String;,1)#1
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Dup(1,0)#2
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,0)#3
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(Ljava/lang/String;,"ADD")#4
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#ArrayStore(Ljava/lang/Object;)#5
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Dup(1,0)#6
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,1)#7
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(Ljava/lang/String;,"SUB")#8
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#ArrayStore(Ljava/lang/Object;)#9
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Dup(1,0)#10
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,2)#11
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(Ljava/lang/String;,"MUL")#12
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#ArrayStore(Ljava/lang/Object;)#13
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Dup(1,0)#14
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,3)#15
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(Ljava/lang/String;,"DIV")#16
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#ArrayStore(Ljava/lang/Object;)#17
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Dup(1,0)#18
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,4)#19
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(Ljava/lang/String;,"REM")#20
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#ArrayStore(Ljava/lang/Object;)#21
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Dup(1,0)#22
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,5)#23
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(Ljava/lang/String;,"AND")#24
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#ArrayStore(Ljava/lang/Object;)#25
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Dup(1,0)#26
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,6)#27
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(Ljava/lang/String;,"OR")#28
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#ArrayStore(Ljava/lang/Object;)#29
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Dup(1,0)#30
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,7)#31
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(Ljava/lang/String;,"XOR")#32
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#ArrayStore(Ljava/lang/Object;)#33
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Put([Ljava/lang/String;,STATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,binopnames)#34
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,1)#35
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#New([Ljava/lang/String;,1)#36
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Dup(1,0)#37
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,0)#38
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(Ljava/lang/String;,"NEG")#39
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#ArrayStore(Ljava/lang/Object;)#40
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Put([Ljava/lang/String;,STATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,unopnames)#41
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,3)#42
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#New([Ljava/lang/String;,1)#43
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Dup(1,0)#44
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,0)#45
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(Ljava/lang/String;,"LEFT")#46
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#ArrayStore(Ljava/lang/Object;)#47
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Dup(1,0)#48
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,1)#49
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(Ljava/lang/String;,"RIGHT")#50
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#ArrayStore(Ljava/lang/Object;)#51
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Dup(1,0)#52
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,2)#53
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(Ljava/lang/String;,"URIGHT")#54
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#ArrayStore(Ljava/lang/Object;)#55
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Put([Ljava/lang/String;,STATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,shiftopnames)#56
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,2)#57
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#New([Ljava/lang/String;,1)#58
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Dup(1,0)#59
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,0)#60
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(Ljava/lang/String;,"L")#61
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#ArrayStore(Ljava/lang/Object;)#62
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Dup(1,0)#63
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,1)#64
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(Ljava/lang/String;,"G")#65
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#ArrayStore(Ljava/lang/Object;)#66
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Put([Ljava/lang/String;,STATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,fcmpopnames)#67
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,8)#68
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#New([Ljava/lang/String;,1)#69
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Dup(1,0)#70
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,0)#71
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(Ljava/lang/String;,"EQ")#72
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#ArrayStore(Ljava/lang/Object;)#73
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Dup(1,0)#74
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,1)#75
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(Ljava/lang/String;,"NE")#76
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#ArrayStore(Ljava/lang/Object;)#77
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Dup(1,0)#78
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,2)#79
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(Ljava/lang/String;,"LT")#80
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#ArrayStore(Ljava/lang/Object;)#81
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Dup(1,0)#82
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,3)#83
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(Ljava/lang/String;,"GE")#84
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#ArrayStore(Ljava/lang/Object;)#85
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Dup(1,0)#86
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,4)#87
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(Ljava/lang/String;,"LE")#88
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#ArrayStore(Ljava/lang/Object;)#89
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Dup(1,0)#90
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,5)#91
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(Ljava/lang/String;,"GT")#92
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#ArrayStore(Ljava/lang/Object;)#93
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Dup(1,0)#94
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,6)#95
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(Ljava/lang/String;,"AE")#96
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#ArrayStore(Ljava/lang/Object;)#97
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Dup(1,0)#98
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,7)#99
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(Ljava/lang/String;,"UNCOND")#100
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#ArrayStore(Ljava/lang/Object;)#101
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Put([Ljava/lang/String;,STATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,cmpopnames)#102
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,4)#103
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#New([Ljava/lang/String;,1)#104
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Dup(1,0)#105
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,0)#106
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(Ljava/lang/String;,"VIRTUAL")#107
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#ArrayStore(Ljava/lang/Object;)#108
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Dup(1,0)#109
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,1)#110
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(Ljava/lang/String;,"STATIC")#111
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#ArrayStore(Ljava/lang/Object;)#112
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Dup(1,0)#113
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,2)#114
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(Ljava/lang/String;,"SPECIAL")#115
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#ArrayStore(Ljava/lang/Object;)#116
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Dup(1,0)#117
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,3)#118
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(Ljava/lang/String;,"INTERFACE")#119
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#ArrayStore(Ljava/lang/Object;)#120
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Put([Ljava/lang/String;,STATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,invokeopnames)#121
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,2)#122
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#New([Ljava/lang/String;,1)#123
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Dup(1,0)#124
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,0)#125
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(Ljava/lang/String;,"ENTER")#126
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#ArrayStore(Ljava/lang/Object;)#127
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Dup(1,0)#128
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(I,1)#129
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Constant(Ljava/lang/String;,"EXIT")#130
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#ArrayStore(Ljava/lang/Object;)#131
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Put([Ljava/lang/String;,STATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,monitoropnames)#132
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<clinit>()V#Return(V)#133
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(I,0)#0
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Z,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,ALWAYS_TRACE)#1
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(Ljava/lang/String;,"peek")#2
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#3
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,peek)#4
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(Ljava/lang/String;,"peek1")#5
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#6
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,peek1)#7
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(Ljava/lang/String;,"peek2")#8
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#9
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,peek2)#10
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(Ljava/lang/String;,"peek4")#11
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#12
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,peek4)#13
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(Ljava/lang/String;,"peek8")#14
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#15
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,peek8)#16
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(Ljava/lang/String;,"poke")#17
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#18
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,poke)#19
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(Ljava/lang/String;,"poke1")#20
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#21
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,poke1)#22
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(Ljava/lang/String;,"poke2")#23
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#24
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,poke2)#25
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(Ljava/lang/String;,"poke4")#26
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#27
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,poke4)#28
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(Ljava/lang/String;,"poke8")#29
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#30
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,poke8)#31
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(Ljava/lang/String;,"offset")#32
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#33
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,offset)#34
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(Ljava/lang/String;,"align")#35
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#36
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,align)#37
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(Ljava/lang/String;,"difference")#38
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#39
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,difference)#40
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(Ljava/lang/String;,"isNull")#41
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#42
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,isNull)#43
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(Ljava/lang/String;,"addressOf")#44
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#45
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,addressOf)#46
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(Ljava/lang/String;,"address32")#47
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#48
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,address32)#49
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(Ljava/lang/String;,"asObject")#50
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#51
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,asObject)#52
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(Ljava/lang/String;,"asReferenceType")#53
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#54
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,asReferenceType)#55
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(Ljava/lang/String;,"to32BitValue")#56
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#57
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,to32BitValue)#58
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(Ljava/lang/String;,"stringRep")#59
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#60
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,stringRep)#61
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(Ljava/lang/String;,"getNull")#62
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#63
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,getNull)#64
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(Ljava/lang/String;,"size")#65
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#66
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,size)#67
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(Ljava/lang/String;,"getBasePointer")#68
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#69
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,getBasePointer)#70
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(Ljava/lang/String;,"getStackPointer")#71
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#72
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,getStackPointer)#73
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(Ljava/lang/String;,"alloca")#74
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#75
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,alloca)#76
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(Ljava/lang/String;,"atomicAdd")#77
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#78
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,atomicAdd)#79
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(Ljava/lang/String;,"atomicSub")#80
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#81
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,atomicSub)#82
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(Ljava/lang/String;,"atomicCas4")#83
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#84
joeq.UTF.Utf8.memcmp([B[B)Z#Constant(I,0)#5
joeq.UTF.Utf8.memcmp([B[B)Z#Return(I)#6
joeq.UTF.Utf8.getID([B)I#LocalLoad(I,4)#62
joeq.UTF.Utf8.getID([B)I#Constant(I,1)#63
joeq.UTF.Utf8.getID([B)I#BinaryOp(I,add)#64
joeq.UTF.Utf8.getID([B)I#LocalStore(I,4)#65
joeq.UTF.Utf8.getID([B)I#Goto(31)#66
joeq.UTF.Utf8.getID([B)I#LocalLoad(Ljava/lang/Object;,0)#44
joeq.UTF.Utf8.getID([B)I#LocalLoad(I,1)#45
joeq.UTF.Utf8.getID([B)I#LocalLoad(Ljava/lang/Object;,3)#46
joeq.UTF.Utf8.getID([B)I#LocalLoad(I,4)#47
joeq.UTF.Utf8.getID([B)I#Invoke(STATIC,Ljoeq/UTF/Utf8;,addToTable_helper,([BI[II)I)#48
joeq.UTF.Utf8.getID([B)I#Return(I)#49
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,atomicCas4)#85
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(Ljava/lang/String;,"atomicCas8")#86
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#87
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,atomicCas8)#88
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(Ljava/lang/String;,"atomicAnd")#89
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#90
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,atomicAnd)#91
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(Ljava/lang/String;,"min")#92
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#93
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,min)#94
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(Ljava/lang/String;,"max")#95
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#96
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/UTF/Utf8;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,max)#97
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(L;,null)#98
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/Compiler/Quad/BytecodeToQuad$UnsafeHelper;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,_unsafe)#99
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Get(Z,STATIC,Ljoeq/Main/jq;,nullVM)#100
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#LocalStore(I,0)#101
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#LocalLoad(I,0)#102
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(I,0)#103
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#ConditionalBranch(I,ne,108)#104
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Get(Ljoeq/Compiler/Quad/BytecodeToQuad$UnsafeHelper;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,_unsafe)#108
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Constant(L;,null)#109
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#ConditionalBranch(Ljava/lang/Object;,ne,115)#110
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#New(Ljoeq/Compiler/Quad/B2QUnsafeIgnorer;,0)#111
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Dup(1,0)#112
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/B2QUnsafeIgnorer;,<init>,()V)#113
joeq.Compiler.Quad.B2QUnsafeIgnorer.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.B2QUnsafeIgnorer.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.Quad.B2QUnsafeIgnorer.<init>()V#Return(V)#2
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Put(Ljoeq/Compiler/Quad/BytecodeToQuad$UnsafeHelper;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,_unsafe)#114
joeq.Compiler.Quad.BytecodeToQuad.<clinit>()V#Return(V)#115
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#Dup(1,0)#26
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,1)#27
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(SPECIAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,<init>,(Ljoeq/Class/jq_Method;)V)#28
joeq.Compiler.Quad.BytecodeToQuad.<init>(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad.<init>(Ljoeq/Class/jq_Method;)V#Get(Ljoeq/Compiler/CompilationState;,STATIC,Ljoeq/Compiler/CompilationState;,DEFAULT)#1
joeq.Compiler.CompilationState.<clinit>()V#Get(Z,STATIC,Ljoeq/Main/jq;,nullVM)#0
joeq.Compiler.CompilationState.<clinit>()V#Constant(I,0)#1
joeq.Compiler.CompilationState.<clinit>()V#ConditionalBranch(I,eq,8)#2
joeq.Compiler.CompilationState.<clinit>()V#New(Ljoeq/Compiler/CompilationState$StaticCompilation;,0)#3
joeq.Compiler.CompilationState$StaticCompilation.<clinit>()V#Constant(I,1)#0
joeq.Compiler.CompilationState$StaticCompilation.<clinit>()V#Put(Z,STATIC,Ljoeq/Compiler/CompilationState$StaticCompilation;,ASSUME_CORRECT_EXCEPTIONS)#1
joeq.Compiler.CompilationState$StaticCompilation.<clinit>()V#New(Ljava/util/HashMap;,0)#2
joeq.Compiler.CompilationState$StaticCompilation.<clinit>()V#Dup(1,0)#3
joeq.Compiler.CompilationState$StaticCompilation.<clinit>()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#4
joeq.Compiler.CompilationState$StaticCompilation.<clinit>()V#Put(Ljava/util/HashMap;,STATIC,Ljoeq/Compiler/CompilationState$StaticCompilation;,cachedThrownExcListByMethod)#5
joeq.Compiler.CompilationState$StaticCompilation.<clinit>()V#Constant(I,2)#6
joeq.Compiler.CompilationState$StaticCompilation.<clinit>()V#New([Ljoeq/Class/jq_Class;,1)#7
joeq.Compiler.CompilationState$StaticCompilation.<clinit>()V#Dup(1,0)#8
joeq.Compiler.CompilationState$StaticCompilation.<clinit>()V#Constant(I,0)#9
joeq.Compiler.CompilationState$StaticCompilation.<clinit>()V#Invoke(STATIC,Ljoeq/Class/PrimordialClassLoader;,getJavaLangRuntimeException,()Ljoeq/Class/jq_Class;)#10
joeq.Class.PrimordialClassLoader.getJavaLangRuntimeException()Ljoeq/Class/jq_Class;#Get(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/PrimordialClassLoader;,JavaLangRuntimeException)#0
joeq.Class.PrimordialClassLoader.getJavaLangRuntimeException()Ljoeq/Class/jq_Class;#Return(Ljava/lang/Object;)#1
joeq.Compiler.CompilationState$StaticCompilation.<clinit>()V#ArrayStore(Ljava/lang/Object;)#11
joeq.Compiler.CompilationState$StaticCompilation.<clinit>()V#Dup(1,0)#12
joeq.Compiler.CompilationState$StaticCompilation.<clinit>()V#Constant(I,1)#13
joeq.Compiler.CompilationState$StaticCompilation.<clinit>()V#Invoke(STATIC,Ljoeq/Class/PrimordialClassLoader;,getJavaLangError,()Ljoeq/Class/jq_Class;)#14
joeq.Class.PrimordialClassLoader.getJavaLangError()Ljoeq/Class/jq_Class;#Get(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/PrimordialClassLoader;,JavaLangError)#0
joeq.Class.PrimordialClassLoader.getJavaLangError()Ljoeq/Class/jq_Class;#Return(Ljava/lang/Object;)#1
joeq.Compiler.CompilationState$StaticCompilation.<clinit>()V#ArrayStore(Ljava/lang/Object;)#15
joeq.Compiler.CompilationState$StaticCompilation.<clinit>()V#Put([Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Compiler/CompilationState$StaticCompilation;,defaultThrowables)#16
joeq.Compiler.CompilationState$StaticCompilation.<clinit>()V#Return(V)#17
joeq.Compiler.CompilationState.<clinit>()V#Dup(1,0)#4
joeq.Compiler.CompilationState.<clinit>()V#Invoke(SPECIAL,Ljoeq/Compiler/CompilationState$StaticCompilation;,<init>,()V)#5
joeq.Compiler.CompilationState$StaticCompilation.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.CompilationState$StaticCompilation.<init>()V#Invoke(SPECIAL,Ljoeq/Compiler/CompilationState;,<init>,()V)#1
joeq.Compiler.CompilationState.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.CompilationState.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.CompilationState.<init>()V#Return(V)#2
joeq.Compiler.CompilationState$StaticCompilation.<init>()V#Return(V)#2
joeq.Compiler.CompilationState.<clinit>()V#Put(Ljoeq/Compiler/CompilationState;,STATIC,Ljoeq/Compiler/CompilationState;,DEFAULT)#6
joeq.Compiler.CompilationState.<clinit>()V#Goto(20)#7
joeq.Compiler.CompilationState.<clinit>()V#Return(V)#20
joeq.Compiler.Quad.BytecodeToQuad.<init>(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#2
joeq.Compiler.Quad.BytecodeToQuad.<init>(Ljoeq/Class/jq_Method;)V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,<init>,(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V)#3
joeq.Compiler.Quad.BytecodeToQuad.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Compiler.Quad.BytecodeToQuad.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,2)#2
joeq.Compiler.Quad.BytecodeToQuad.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Invoke(SPECIAL,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,<init>,(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V)#3
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Constant(I,0)#3
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Put(Z,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,TRACE)#4
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Get(Ljava/io/PrintStream;,STATIC,Ljava/lang/System;,out)#6
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Put(Ljava/io/PrintStream;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,out)#7
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#8
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#9
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Put(Ljoeq/Compiler/CompilationState;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,state)#10
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#11
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,2)#12
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getDeclaringClass,()Ljoeq/Class/jq_Class;)#13
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Put(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,clazz)#14
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#15
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,2)#16
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Put(Ljoeq/Class/jq_Method;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,method)#17
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#18
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,2)#19
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getBytecode,()[B)#20
joeq.Class.jq_Method.getBytecode()[B#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Method.getBytecode()[B#Constant(I,5)#1
joeq.Class.jq_Method.getBytecode()[B#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,chkState,(I)V)#2
joeq.Class.jq_Method.getBytecode()[B#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Method.getBytecode()[B#Get([B,NONSTATIC,Ljoeq/Class/jq_Method;,bytecode)#4
joeq.Class.jq_Method.getBytecode()[B#Return(Ljava/lang/Object;)#5
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Put([B,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,bcs)#21
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#22
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Get([B,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,bcs)#23
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Constant(L;,null)#24
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#ConditionalBranch(Ljava/lang/Object;,eq,28)#25
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Constant(I,1)#26
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Goto(29)#27
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#New(Ljava/lang/StringBuilder;,0)#29
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Dup(1,0)#30
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#31
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Constant(Ljava/lang/String;,"Method ")#32
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#33
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#34
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Get(Ljoeq/Class/jq_Method;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,method)#35
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#36
joeq.Class.jq_Method.toString()Ljava/lang/String;#New(Ljava/lang/StringBuilder;,0)#0
joeq.Class.jq_Method.toString()Ljava/lang/String;#Dup(1,0)#1
joeq.Class.jq_Method.toString()Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#2
joeq.Class.jq_Method.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Method.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getName,()Ljoeq/UTF/Utf8;)#4
joeq.Class.jq_Method.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#5
joeq.Class.jq_Method.toString()Ljava/lang/String;#Constant(Ljava/lang/String;,":")#6
joeq.Class.jq_Method.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#7
joeq.Class.jq_Method.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#8
joeq.Class.jq_Method.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getDesc,()Ljoeq/UTF/Utf8;)#9
joeq.Class.jq_Method.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#10
joeq.Class.jq_Method.toString()Ljava/lang/String;#Constant(Ljava/lang/String;,"@")#11
joeq.Class.jq_Method.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#12
joeq.Class.jq_Method.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#13
joeq.Class.jq_Method.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getDeclaringClass,()Ljoeq/Class/jq_Class;)#14
joeq.Class.jq_Method.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#15
joeq.Class.jq_Type.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Type.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,getName,()Ljava/lang/String;)#1
joeq.Class.jq_Type.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
joeq.Class.jq_Method.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#16
joeq.Class.jq_Method.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#17
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Constant(Ljava/lang/String;," has no bytecode!")#37
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#38
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#39
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(ZLjava/lang/String;)V)#40
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Return(V)#41
joeq.Compiler.Quad.BytecodeToQuad.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#4
joeq.Compiler.Quad.BytecodeToQuad.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#New(Ljava/util/HashMap;,0)#5
joeq.Compiler.Quad.BytecodeToQuad.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Dup(1,0)#6
joeq.Compiler.Quad.BytecodeToQuad.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#7
joeq.Compiler.Quad.BytecodeToQuad.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Put(Ljava/util/HashMap;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad2bci)#8
joeq.Compiler.Quad.BytecodeToQuad.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#9
joeq.Compiler.Quad.BytecodeToQuad.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#New(Ljava/util/HashMap;,0)#10
joeq.Compiler.Quad.BytecodeToQuad.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Dup(1,0)#11
joeq.Compiler.Quad.BytecodeToQuad.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#12
joeq.Compiler.Quad.BytecodeToQuad.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Put(Ljava/util/Map;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,jsr_states)#13
joeq.Compiler.Quad.BytecodeToQuad.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#14
joeq.Compiler.Quad.BytecodeToQuad.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Get(Z,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,ALWAYS_TRACE)#15
joeq.Compiler.Quad.BytecodeToQuad.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Put(Z,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,TRACE)#16
joeq.Compiler.Quad.BytecodeToQuad.<init>(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V#Return(V)#17
joeq.Compiler.Quad.BytecodeToQuad.<init>(Ljoeq/Class/jq_Method;)V#Return(V)#4
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalStore(Ljava/lang/Object;,2)#29
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,2)#30
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,convert,()Ljoeq/Compiler/Quad/ControlFlowGraph;)#31
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#1
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Ljoeq/Class/jq_Method;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,method)#2
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(STATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,computeCFG,(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;)#3
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#New(Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$InitialPass;,0)#0
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Dup(1,0)#1
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Invoke(SPECIAL,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$InitialPass;,<init>,(Ljoeq/Class/jq_Method;)V)#3
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.<init>(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.<init>(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.<init>(Ljoeq/Class/jq_Method;)V#Invoke(SPECIAL,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,<init>,(Ljoeq/Class/jq_Method;)V)#2
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Class/jq_Method;)V#Get(Ljoeq/Compiler/CompilationState;,STATIC,Ljoeq/Compiler/CompilationState;,DEFAULT)#1
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#2
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Class/jq_Method;)V#Invoke(SPECIAL,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,<init>,(Ljoeq/Compiler/CompilationState;Ljoeq/Class/jq_Method;)V)#3
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.<init>(Ljoeq/Class/jq_Method;)V#Return(V)#4
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.<init>(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.<init>(Ljoeq/Class/jq_Method;)V#New(Ljwutil/math/BitString;,0)#4
jwutil.math.BitString.<clinit>()V#Constant(I,256)#0
jwutil.math.BitString.<clinit>()V#New([B,1)#1
jwutil.math.BitString.<clinit>()V#Dup(1,0)#2
jwutil.math.BitString.<clinit>()V#Constant(I,0)#3
jwutil.math.BitString.<clinit>()V#Constant(I,0)#4
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#5
jwutil.math.BitString.<clinit>()V#Dup(1,0)#6
jwutil.math.BitString.<clinit>()V#Constant(I,1)#7
jwutil.math.BitString.<clinit>()V#Constant(I,1)#8
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#9
jwutil.math.BitString.<clinit>()V#Dup(1,0)#10
jwutil.math.BitString.<clinit>()V#Constant(I,2)#11
jwutil.math.BitString.<clinit>()V#Constant(I,2)#12
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#13
jwutil.math.BitString.<clinit>()V#Dup(1,0)#14
jwutil.math.BitString.<clinit>()V#Constant(I,3)#15
jwutil.math.BitString.<clinit>()V#Constant(I,2)#16
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#17
jwutil.math.BitString.<clinit>()V#Dup(1,0)#18
jwutil.math.BitString.<clinit>()V#Constant(I,4)#19
jwutil.math.BitString.<clinit>()V#Constant(I,3)#20
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#21
jwutil.math.BitString.<clinit>()V#Dup(1,0)#22
jwutil.math.BitString.<clinit>()V#Constant(I,5)#23
jwutil.math.BitString.<clinit>()V#Constant(I,3)#24
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#25
jwutil.math.BitString.<clinit>()V#Dup(1,0)#26
jwutil.math.BitString.<clinit>()V#Constant(I,6)#27
jwutil.math.BitString.<clinit>()V#Constant(I,3)#28
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#29
jwutil.math.BitString.<clinit>()V#Dup(1,0)#30
jwutil.math.BitString.<clinit>()V#Constant(I,7)#31
jwutil.math.BitString.<clinit>()V#Constant(I,3)#32
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#33
jwutil.math.BitString.<clinit>()V#Dup(1,0)#34
jwutil.math.BitString.<clinit>()V#Constant(I,8)#35
jwutil.math.BitString.<clinit>()V#Constant(I,4)#36
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#37
jwutil.math.BitString.<clinit>()V#Dup(1,0)#38
jwutil.math.BitString.<clinit>()V#Constant(I,9)#39
jwutil.math.BitString.<clinit>()V#Constant(I,4)#40
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#41
jwutil.math.BitString.<clinit>()V#Dup(1,0)#42
jwutil.math.BitString.<clinit>()V#Constant(I,10)#43
jwutil.math.BitString.<clinit>()V#Constant(I,4)#44
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#45
jwutil.math.BitString.<clinit>()V#Dup(1,0)#46
jwutil.math.BitString.<clinit>()V#Constant(I,11)#47
jwutil.math.BitString.<clinit>()V#Constant(I,4)#48
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#49
jwutil.math.BitString.<clinit>()V#Dup(1,0)#50
jwutil.math.BitString.<clinit>()V#Constant(I,12)#51
jwutil.math.BitString.<clinit>()V#Constant(I,4)#52
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#53
jwutil.math.BitString.<clinit>()V#Dup(1,0)#54
jwutil.math.BitString.<clinit>()V#Constant(I,13)#55
jwutil.math.BitString.<clinit>()V#Constant(I,4)#56
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#57
jwutil.math.BitString.<clinit>()V#Dup(1,0)#58
jwutil.math.BitString.<clinit>()V#Constant(I,14)#59
jwutil.math.BitString.<clinit>()V#Constant(I,4)#60
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#61
jwutil.math.BitString.<clinit>()V#Dup(1,0)#62
jwutil.math.BitString.<clinit>()V#Constant(I,15)#63
jwutil.math.BitString.<clinit>()V#Constant(I,4)#64
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#65
jwutil.math.BitString.<clinit>()V#Dup(1,0)#66
jwutil.math.BitString.<clinit>()V#Constant(I,16)#67
jwutil.math.BitString.<clinit>()V#Constant(I,5)#68
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#69
jwutil.math.BitString.<clinit>()V#Dup(1,0)#70
jwutil.math.BitString.<clinit>()V#Constant(I,17)#71
jwutil.math.BitString.<clinit>()V#Constant(I,5)#72
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#73
jwutil.math.BitString.<clinit>()V#Dup(1,0)#74
jwutil.math.BitString.<clinit>()V#Constant(I,18)#75
jwutil.math.BitString.<clinit>()V#Constant(I,5)#76
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#77
jwutil.math.BitString.<clinit>()V#Dup(1,0)#78
jwutil.math.BitString.<clinit>()V#Constant(I,19)#79
jwutil.math.BitString.<clinit>()V#Constant(I,5)#80
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#81
jwutil.math.BitString.<clinit>()V#Dup(1,0)#82
jwutil.math.BitString.<clinit>()V#Constant(I,20)#83
jwutil.math.BitString.<clinit>()V#Constant(I,5)#84
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#85
jwutil.math.BitString.<clinit>()V#Dup(1,0)#86
jwutil.math.BitString.<clinit>()V#Constant(I,21)#87
jwutil.math.BitString.<clinit>()V#Constant(I,5)#88
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#89
jwutil.math.BitString.<clinit>()V#Dup(1,0)#90
jwutil.math.BitString.<clinit>()V#Constant(I,22)#91
jwutil.math.BitString.<clinit>()V#Constant(I,5)#92
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#93
jwutil.math.BitString.<clinit>()V#Dup(1,0)#94
jwutil.math.BitString.<clinit>()V#Constant(I,23)#95
jwutil.math.BitString.<clinit>()V#Constant(I,5)#96
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#97
jwutil.math.BitString.<clinit>()V#Dup(1,0)#98
jwutil.math.BitString.<clinit>()V#Constant(I,24)#99
jwutil.math.BitString.<clinit>()V#Constant(I,5)#100
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#101
jwutil.math.BitString.<clinit>()V#Dup(1,0)#102
jwutil.math.BitString.<clinit>()V#Constant(I,25)#103
jwutil.math.BitString.<clinit>()V#Constant(I,5)#104
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#105
jwutil.math.BitString.<clinit>()V#Dup(1,0)#106
jwutil.math.BitString.<clinit>()V#Constant(I,26)#107
jwutil.math.BitString.<clinit>()V#Constant(I,5)#108
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#109
jwutil.math.BitString.<clinit>()V#Dup(1,0)#110
jwutil.math.BitString.<clinit>()V#Constant(I,27)#111
jwutil.math.BitString.<clinit>()V#Constant(I,5)#112
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#113
jwutil.math.BitString.<clinit>()V#Dup(1,0)#114
jwutil.math.BitString.<clinit>()V#Constant(I,28)#115
jwutil.math.BitString.<clinit>()V#Constant(I,5)#116
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#117
jwutil.math.BitString.<clinit>()V#Dup(1,0)#118
jwutil.math.BitString.<clinit>()V#Constant(I,29)#119
jwutil.math.BitString.<clinit>()V#Constant(I,5)#120
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#121
jwutil.math.BitString.<clinit>()V#Dup(1,0)#122
jwutil.math.BitString.<clinit>()V#Constant(I,30)#123
jwutil.math.BitString.<clinit>()V#Constant(I,5)#124
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#125
jwutil.math.BitString.<clinit>()V#Dup(1,0)#126
jwutil.math.BitString.<clinit>()V#Constant(I,31)#127
jwutil.math.BitString.<clinit>()V#Constant(I,5)#128
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#129
jwutil.math.BitString.<clinit>()V#Dup(1,0)#130
jwutil.math.BitString.<clinit>()V#Constant(I,32)#131
jwutil.math.BitString.<clinit>()V#Constant(I,6)#132
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#133
jwutil.math.BitString.<clinit>()V#Dup(1,0)#134
jwutil.math.BitString.<clinit>()V#Constant(I,33)#135
jwutil.math.BitString.<clinit>()V#Constant(I,6)#136
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#137
jwutil.math.BitString.<clinit>()V#Dup(1,0)#138
jwutil.math.BitString.<clinit>()V#Constant(I,34)#139
jwutil.math.BitString.<clinit>()V#Constant(I,6)#140
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#141
jwutil.math.BitString.<clinit>()V#Dup(1,0)#142
jwutil.math.BitString.<clinit>()V#Constant(I,35)#143
jwutil.math.BitString.<clinit>()V#Constant(I,6)#144
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#145
jwutil.math.BitString.<clinit>()V#Dup(1,0)#146
jwutil.math.BitString.<clinit>()V#Constant(I,36)#147
jwutil.math.BitString.<clinit>()V#Constant(I,6)#148
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#149
jwutil.math.BitString.<clinit>()V#Dup(1,0)#150
jwutil.math.BitString.<clinit>()V#Constant(I,37)#151
jwutil.math.BitString.<clinit>()V#Constant(I,6)#152
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#153
jwutil.math.BitString.<clinit>()V#Dup(1,0)#154
jwutil.math.BitString.<clinit>()V#Constant(I,38)#155
jwutil.math.BitString.<clinit>()V#Constant(I,6)#156
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#157
jwutil.math.BitString.<clinit>()V#Dup(1,0)#158
jwutil.math.BitString.<clinit>()V#Constant(I,39)#159
jwutil.math.BitString.<clinit>()V#Constant(I,6)#160
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#161
jwutil.math.BitString.<clinit>()V#Dup(1,0)#162
jwutil.math.BitString.<clinit>()V#Constant(I,40)#163
jwutil.math.BitString.<clinit>()V#Constant(I,6)#164
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#165
jwutil.math.BitString.<clinit>()V#Dup(1,0)#166
jwutil.math.BitString.<clinit>()V#Constant(I,41)#167
jwutil.math.BitString.<clinit>()V#Constant(I,6)#168
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#169
jwutil.math.BitString.<clinit>()V#Dup(1,0)#170
jwutil.math.BitString.<clinit>()V#Constant(I,42)#171
jwutil.math.BitString.<clinit>()V#Constant(I,6)#172
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#173
jwutil.math.BitString.<clinit>()V#Dup(1,0)#174
jwutil.math.BitString.<clinit>()V#Constant(I,43)#175
jwutil.math.BitString.<clinit>()V#Constant(I,6)#176
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#177
jwutil.math.BitString.<clinit>()V#Dup(1,0)#178
jwutil.math.BitString.<clinit>()V#Constant(I,44)#179
jwutil.math.BitString.<clinit>()V#Constant(I,6)#180
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#181
jwutil.math.BitString.<clinit>()V#Dup(1,0)#182
jwutil.math.BitString.<clinit>()V#Constant(I,45)#183
jwutil.math.BitString.<clinit>()V#Constant(I,6)#184
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#185
jwutil.math.BitString.<clinit>()V#Dup(1,0)#186
jwutil.math.BitString.<clinit>()V#Constant(I,46)#187
jwutil.math.BitString.<clinit>()V#Constant(I,6)#188
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#189
jwutil.math.BitString.<clinit>()V#Dup(1,0)#190
jwutil.math.BitString.<clinit>()V#Constant(I,47)#191
jwutil.math.BitString.<clinit>()V#Constant(I,6)#192
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#193
jwutil.math.BitString.<clinit>()V#Dup(1,0)#194
jwutil.math.BitString.<clinit>()V#Constant(I,48)#195
jwutil.math.BitString.<clinit>()V#Constant(I,6)#196
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#197
jwutil.math.BitString.<clinit>()V#Dup(1,0)#198
jwutil.math.BitString.<clinit>()V#Constant(I,49)#199
jwutil.math.BitString.<clinit>()V#Constant(I,6)#200
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#201
jwutil.math.BitString.<clinit>()V#Dup(1,0)#202
jwutil.math.BitString.<clinit>()V#Constant(I,50)#203
jwutil.math.BitString.<clinit>()V#Constant(I,6)#204
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#205
jwutil.math.BitString.<clinit>()V#Dup(1,0)#206
jwutil.math.BitString.<clinit>()V#Constant(I,51)#207
jwutil.math.BitString.<clinit>()V#Constant(I,6)#208
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#209
jwutil.math.BitString.<clinit>()V#Dup(1,0)#210
jwutil.math.BitString.<clinit>()V#Constant(I,52)#211
jwutil.math.BitString.<clinit>()V#Constant(I,6)#212
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#213
jwutil.math.BitString.<clinit>()V#Dup(1,0)#214
jwutil.math.BitString.<clinit>()V#Constant(I,53)#215
jwutil.math.BitString.<clinit>()V#Constant(I,6)#216
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#217
jwutil.math.BitString.<clinit>()V#Dup(1,0)#218
jwutil.math.BitString.<clinit>()V#Constant(I,54)#219
jwutil.math.BitString.<clinit>()V#Constant(I,6)#220
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#221
jwutil.math.BitString.<clinit>()V#Dup(1,0)#222
jwutil.math.BitString.<clinit>()V#Constant(I,55)#223
jwutil.math.BitString.<clinit>()V#Constant(I,6)#224
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#225
jwutil.math.BitString.<clinit>()V#Dup(1,0)#226
jwutil.math.BitString.<clinit>()V#Constant(I,56)#227
jwutil.math.BitString.<clinit>()V#Constant(I,6)#228
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#229
jwutil.math.BitString.<clinit>()V#Dup(1,0)#230
jwutil.math.BitString.<clinit>()V#Constant(I,57)#231
jwutil.math.BitString.<clinit>()V#Constant(I,6)#232
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#233
jwutil.math.BitString.<clinit>()V#Dup(1,0)#234
jwutil.math.BitString.<clinit>()V#Constant(I,58)#235
jwutil.math.BitString.<clinit>()V#Constant(I,6)#236
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#237
jwutil.math.BitString.<clinit>()V#Dup(1,0)#238
jwutil.math.BitString.<clinit>()V#Constant(I,59)#239
jwutil.math.BitString.<clinit>()V#Constant(I,6)#240
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#241
jwutil.math.BitString.<clinit>()V#Dup(1,0)#242
jwutil.math.BitString.<clinit>()V#Constant(I,60)#243
jwutil.math.BitString.<clinit>()V#Constant(I,6)#244
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#245
jwutil.math.BitString.<clinit>()V#Dup(1,0)#246
jwutil.math.BitString.<clinit>()V#Constant(I,61)#247
jwutil.math.BitString.<clinit>()V#Constant(I,6)#248
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#249
jwutil.math.BitString.<clinit>()V#Dup(1,0)#250
jwutil.math.BitString.<clinit>()V#Constant(I,62)#251
jwutil.math.BitString.<clinit>()V#Constant(I,6)#252
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#253
jwutil.math.BitString.<clinit>()V#Dup(1,0)#254
jwutil.math.BitString.<clinit>()V#Constant(I,63)#255
jwutil.math.BitString.<clinit>()V#Constant(I,6)#256
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#257
jwutil.math.BitString.<clinit>()V#Dup(1,0)#258
jwutil.math.BitString.<clinit>()V#Constant(I,64)#259
jwutil.math.BitString.<clinit>()V#Constant(I,7)#260
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#261
jwutil.math.BitString.<clinit>()V#Dup(1,0)#262
jwutil.math.BitString.<clinit>()V#Constant(I,65)#263
jwutil.math.BitString.<clinit>()V#Constant(I,7)#264
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#265
jwutil.math.BitString.<clinit>()V#Dup(1,0)#266
jwutil.math.BitString.<clinit>()V#Constant(I,66)#267
jwutil.math.BitString.<clinit>()V#Constant(I,7)#268
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#269
jwutil.math.BitString.<clinit>()V#Dup(1,0)#270
jwutil.math.BitString.<clinit>()V#Constant(I,67)#271
jwutil.math.BitString.<clinit>()V#Constant(I,7)#272
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#273
jwutil.math.BitString.<clinit>()V#Dup(1,0)#274
jwutil.math.BitString.<clinit>()V#Constant(I,68)#275
jwutil.math.BitString.<clinit>()V#Constant(I,7)#276
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#277
jwutil.math.BitString.<clinit>()V#Dup(1,0)#278
jwutil.math.BitString.<clinit>()V#Constant(I,69)#279
jwutil.math.BitString.<clinit>()V#Constant(I,7)#280
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#281
jwutil.math.BitString.<clinit>()V#Dup(1,0)#282
jwutil.math.BitString.<clinit>()V#Constant(I,70)#283
jwutil.math.BitString.<clinit>()V#Constant(I,7)#284
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#285
jwutil.math.BitString.<clinit>()V#Dup(1,0)#286
jwutil.math.BitString.<clinit>()V#Constant(I,71)#287
jwutil.math.BitString.<clinit>()V#Constant(I,7)#288
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#289
jwutil.math.BitString.<clinit>()V#Dup(1,0)#290
jwutil.math.BitString.<clinit>()V#Constant(I,72)#291
jwutil.math.BitString.<clinit>()V#Constant(I,7)#292
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#293
jwutil.math.BitString.<clinit>()V#Dup(1,0)#294
jwutil.math.BitString.<clinit>()V#Constant(I,73)#295
jwutil.math.BitString.<clinit>()V#Constant(I,7)#296
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#297
jwutil.math.BitString.<clinit>()V#Dup(1,0)#298
jwutil.math.BitString.<clinit>()V#Constant(I,74)#299
jwutil.math.BitString.<clinit>()V#Constant(I,7)#300
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#301
jwutil.math.BitString.<clinit>()V#Dup(1,0)#302
jwutil.math.BitString.<clinit>()V#Constant(I,75)#303
jwutil.math.BitString.<clinit>()V#Constant(I,7)#304
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#305
jwutil.math.BitString.<clinit>()V#Dup(1,0)#306
jwutil.math.BitString.<clinit>()V#Constant(I,76)#307
jwutil.math.BitString.<clinit>()V#Constant(I,7)#308
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#309
jwutil.math.BitString.<clinit>()V#Dup(1,0)#310
jwutil.math.BitString.<clinit>()V#Constant(I,77)#311
jwutil.math.BitString.<clinit>()V#Constant(I,7)#312
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#313
jwutil.math.BitString.<clinit>()V#Dup(1,0)#314
jwutil.math.BitString.<clinit>()V#Constant(I,78)#315
jwutil.math.BitString.<clinit>()V#Constant(I,7)#316
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#317
jwutil.math.BitString.<clinit>()V#Dup(1,0)#318
jwutil.math.BitString.<clinit>()V#Constant(I,79)#319
jwutil.math.BitString.<clinit>()V#Constant(I,7)#320
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#321
jwutil.math.BitString.<clinit>()V#Dup(1,0)#322
jwutil.math.BitString.<clinit>()V#Constant(I,80)#323
jwutil.math.BitString.<clinit>()V#Constant(I,7)#324
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#325
jwutil.math.BitString.<clinit>()V#Dup(1,0)#326
jwutil.math.BitString.<clinit>()V#Constant(I,81)#327
jwutil.math.BitString.<clinit>()V#Constant(I,7)#328
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#329
jwutil.math.BitString.<clinit>()V#Dup(1,0)#330
jwutil.math.BitString.<clinit>()V#Constant(I,82)#331
jwutil.math.BitString.<clinit>()V#Constant(I,7)#332
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#333
jwutil.math.BitString.<clinit>()V#Dup(1,0)#334
jwutil.math.BitString.<clinit>()V#Constant(I,83)#335
jwutil.math.BitString.<clinit>()V#Constant(I,7)#336
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#337
jwutil.math.BitString.<clinit>()V#Dup(1,0)#338
jwutil.math.BitString.<clinit>()V#Constant(I,84)#339
jwutil.math.BitString.<clinit>()V#Constant(I,7)#340
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#341
jwutil.math.BitString.<clinit>()V#Dup(1,0)#342
jwutil.math.BitString.<clinit>()V#Constant(I,85)#343
jwutil.math.BitString.<clinit>()V#Constant(I,7)#344
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#345
jwutil.math.BitString.<clinit>()V#Dup(1,0)#346
jwutil.math.BitString.<clinit>()V#Constant(I,86)#347
jwutil.math.BitString.<clinit>()V#Constant(I,7)#348
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#349
jwutil.math.BitString.<clinit>()V#Dup(1,0)#350
jwutil.math.BitString.<clinit>()V#Constant(I,87)#351
jwutil.math.BitString.<clinit>()V#Constant(I,7)#352
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#353
jwutil.math.BitString.<clinit>()V#Dup(1,0)#354
jwutil.math.BitString.<clinit>()V#Constant(I,88)#355
jwutil.math.BitString.<clinit>()V#Constant(I,7)#356
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#357
jwutil.math.BitString.<clinit>()V#Dup(1,0)#358
jwutil.math.BitString.<clinit>()V#Constant(I,89)#359
jwutil.math.BitString.<clinit>()V#Constant(I,7)#360
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#361
jwutil.math.BitString.<clinit>()V#Dup(1,0)#362
jwutil.math.BitString.<clinit>()V#Constant(I,90)#363
jwutil.math.BitString.<clinit>()V#Constant(I,7)#364
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#365
jwutil.math.BitString.<clinit>()V#Dup(1,0)#366
jwutil.math.BitString.<clinit>()V#Constant(I,91)#367
jwutil.math.BitString.<clinit>()V#Constant(I,7)#368
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#369
jwutil.math.BitString.<clinit>()V#Dup(1,0)#370
jwutil.math.BitString.<clinit>()V#Constant(I,92)#371
jwutil.math.BitString.<clinit>()V#Constant(I,7)#372
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#373
jwutil.math.BitString.<clinit>()V#Dup(1,0)#374
jwutil.math.BitString.<clinit>()V#Constant(I,93)#375
jwutil.math.BitString.<clinit>()V#Constant(I,7)#376
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#377
jwutil.math.BitString.<clinit>()V#Dup(1,0)#378
jwutil.math.BitString.<clinit>()V#Constant(I,94)#379
jwutil.math.BitString.<clinit>()V#Constant(I,7)#380
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#381
jwutil.math.BitString.<clinit>()V#Dup(1,0)#382
jwutil.math.BitString.<clinit>()V#Constant(I,95)#383
jwutil.math.BitString.<clinit>()V#Constant(I,7)#384
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#385
jwutil.math.BitString.<clinit>()V#Dup(1,0)#386
jwutil.math.BitString.<clinit>()V#Constant(I,96)#387
jwutil.math.BitString.<clinit>()V#Constant(I,7)#388
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#389
jwutil.math.BitString.<clinit>()V#Dup(1,0)#390
jwutil.math.BitString.<clinit>()V#Constant(I,97)#391
jwutil.math.BitString.<clinit>()V#Constant(I,7)#392
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#393
jwutil.math.BitString.<clinit>()V#Dup(1,0)#394
jwutil.math.BitString.<clinit>()V#Constant(I,98)#395
jwutil.math.BitString.<clinit>()V#Constant(I,7)#396
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#397
jwutil.math.BitString.<clinit>()V#Dup(1,0)#398
jwutil.math.BitString.<clinit>()V#Constant(I,99)#399
jwutil.math.BitString.<clinit>()V#Constant(I,7)#400
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#401
jwutil.math.BitString.<clinit>()V#Dup(1,0)#402
jwutil.math.BitString.<clinit>()V#Constant(I,100)#403
jwutil.math.BitString.<clinit>()V#Constant(I,7)#404
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#405
jwutil.math.BitString.<clinit>()V#Dup(1,0)#406
jwutil.math.BitString.<clinit>()V#Constant(I,101)#407
jwutil.math.BitString.<clinit>()V#Constant(I,7)#408
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#409
jwutil.math.BitString.<clinit>()V#Dup(1,0)#410
jwutil.math.BitString.<clinit>()V#Constant(I,102)#411
jwutil.math.BitString.<clinit>()V#Constant(I,7)#412
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#413
jwutil.math.BitString.<clinit>()V#Dup(1,0)#414
jwutil.math.BitString.<clinit>()V#Constant(I,103)#415
jwutil.math.BitString.<clinit>()V#Constant(I,7)#416
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#417
jwutil.math.BitString.<clinit>()V#Dup(1,0)#418
jwutil.math.BitString.<clinit>()V#Constant(I,104)#419
jwutil.math.BitString.<clinit>()V#Constant(I,7)#420
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#421
jwutil.math.BitString.<clinit>()V#Dup(1,0)#422
jwutil.math.BitString.<clinit>()V#Constant(I,105)#423
jwutil.math.BitString.<clinit>()V#Constant(I,7)#424
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#425
jwutil.math.BitString.<clinit>()V#Dup(1,0)#426
jwutil.math.BitString.<clinit>()V#Constant(I,106)#427
jwutil.math.BitString.<clinit>()V#Constant(I,7)#428
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#429
jwutil.math.BitString.<clinit>()V#Dup(1,0)#430
jwutil.math.BitString.<clinit>()V#Constant(I,107)#431
jwutil.math.BitString.<clinit>()V#Constant(I,7)#432
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#433
jwutil.math.BitString.<clinit>()V#Dup(1,0)#434
jwutil.math.BitString.<clinit>()V#Constant(I,108)#435
jwutil.math.BitString.<clinit>()V#Constant(I,7)#436
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#437
jwutil.math.BitString.<clinit>()V#Dup(1,0)#438
jwutil.math.BitString.<clinit>()V#Constant(I,109)#439
jwutil.math.BitString.<clinit>()V#Constant(I,7)#440
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#441
jwutil.math.BitString.<clinit>()V#Dup(1,0)#442
jwutil.math.BitString.<clinit>()V#Constant(I,110)#443
jwutil.math.BitString.<clinit>()V#Constant(I,7)#444
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#445
jwutil.math.BitString.<clinit>()V#Dup(1,0)#446
jwutil.math.BitString.<clinit>()V#Constant(I,111)#447
jwutil.math.BitString.<clinit>()V#Constant(I,7)#448
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#449
jwutil.math.BitString.<clinit>()V#Dup(1,0)#450
jwutil.math.BitString.<clinit>()V#Constant(I,112)#451
jwutil.math.BitString.<clinit>()V#Constant(I,7)#452
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#453
jwutil.math.BitString.<clinit>()V#Dup(1,0)#454
jwutil.math.BitString.<clinit>()V#Constant(I,113)#455
jwutil.math.BitString.<clinit>()V#Constant(I,7)#456
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#457
jwutil.math.BitString.<clinit>()V#Dup(1,0)#458
jwutil.math.BitString.<clinit>()V#Constant(I,114)#459
jwutil.math.BitString.<clinit>()V#Constant(I,7)#460
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#461
jwutil.math.BitString.<clinit>()V#Dup(1,0)#462
jwutil.math.BitString.<clinit>()V#Constant(I,115)#463
jwutil.math.BitString.<clinit>()V#Constant(I,7)#464
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#465
jwutil.math.BitString.<clinit>()V#Dup(1,0)#466
jwutil.math.BitString.<clinit>()V#Constant(I,116)#467
jwutil.math.BitString.<clinit>()V#Constant(I,7)#468
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#469
jwutil.math.BitString.<clinit>()V#Dup(1,0)#470
jwutil.math.BitString.<clinit>()V#Constant(I,117)#471
jwutil.math.BitString.<clinit>()V#Constant(I,7)#472
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#473
jwutil.math.BitString.<clinit>()V#Dup(1,0)#474
jwutil.math.BitString.<clinit>()V#Constant(I,118)#475
jwutil.math.BitString.<clinit>()V#Constant(I,7)#476
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#477
jwutil.math.BitString.<clinit>()V#Dup(1,0)#478
jwutil.math.BitString.<clinit>()V#Constant(I,119)#479
jwutil.math.BitString.<clinit>()V#Constant(I,7)#480
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#481
jwutil.math.BitString.<clinit>()V#Dup(1,0)#482
jwutil.math.BitString.<clinit>()V#Constant(I,120)#483
jwutil.math.BitString.<clinit>()V#Constant(I,7)#484
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#485
jwutil.math.BitString.<clinit>()V#Dup(1,0)#486
jwutil.math.BitString.<clinit>()V#Constant(I,121)#487
jwutil.math.BitString.<clinit>()V#Constant(I,7)#488
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#489
jwutil.math.BitString.<clinit>()V#Dup(1,0)#490
jwutil.math.BitString.<clinit>()V#Constant(I,122)#491
jwutil.math.BitString.<clinit>()V#Constant(I,7)#492
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#493
jwutil.math.BitString.<clinit>()V#Dup(1,0)#494
jwutil.math.BitString.<clinit>()V#Constant(I,123)#495
jwutil.math.BitString.<clinit>()V#Constant(I,7)#496
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#497
jwutil.math.BitString.<clinit>()V#Dup(1,0)#498
jwutil.math.BitString.<clinit>()V#Constant(I,124)#499
jwutil.math.BitString.<clinit>()V#Constant(I,7)#500
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#501
jwutil.math.BitString.<clinit>()V#Dup(1,0)#502
jwutil.math.BitString.<clinit>()V#Constant(I,125)#503
jwutil.math.BitString.<clinit>()V#Constant(I,7)#504
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#505
jwutil.math.BitString.<clinit>()V#Dup(1,0)#506
jwutil.math.BitString.<clinit>()V#Constant(I,126)#507
jwutil.math.BitString.<clinit>()V#Constant(I,7)#508
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#509
jwutil.math.BitString.<clinit>()V#Dup(1,0)#510
jwutil.math.BitString.<clinit>()V#Constant(I,127)#511
jwutil.math.BitString.<clinit>()V#Constant(I,7)#512
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#513
jwutil.math.BitString.<clinit>()V#Dup(1,0)#514
jwutil.math.BitString.<clinit>()V#Constant(I,128)#515
jwutil.math.BitString.<clinit>()V#Constant(I,8)#516
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#517
jwutil.math.BitString.<clinit>()V#Dup(1,0)#518
jwutil.math.BitString.<clinit>()V#Constant(I,129)#519
jwutil.math.BitString.<clinit>()V#Constant(I,8)#520
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#521
jwutil.math.BitString.<clinit>()V#Dup(1,0)#522
jwutil.math.BitString.<clinit>()V#Constant(I,130)#523
jwutil.math.BitString.<clinit>()V#Constant(I,8)#524
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#525
jwutil.math.BitString.<clinit>()V#Dup(1,0)#526
jwutil.math.BitString.<clinit>()V#Constant(I,131)#527
jwutil.math.BitString.<clinit>()V#Constant(I,8)#528
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#529
jwutil.math.BitString.<clinit>()V#Dup(1,0)#530
jwutil.math.BitString.<clinit>()V#Constant(I,132)#531
jwutil.math.BitString.<clinit>()V#Constant(I,8)#532
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#533
jwutil.math.BitString.<clinit>()V#Dup(1,0)#534
jwutil.math.BitString.<clinit>()V#Constant(I,133)#535
jwutil.math.BitString.<clinit>()V#Constant(I,8)#536
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#537
jwutil.math.BitString.<clinit>()V#Dup(1,0)#538
jwutil.math.BitString.<clinit>()V#Constant(I,134)#539
jwutil.math.BitString.<clinit>()V#Constant(I,8)#540
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#541
jwutil.math.BitString.<clinit>()V#Dup(1,0)#542
jwutil.math.BitString.<clinit>()V#Constant(I,135)#543
jwutil.math.BitString.<clinit>()V#Constant(I,8)#544
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#545
jwutil.math.BitString.<clinit>()V#Dup(1,0)#546
jwutil.math.BitString.<clinit>()V#Constant(I,136)#547
jwutil.math.BitString.<clinit>()V#Constant(I,8)#548
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#549
jwutil.math.BitString.<clinit>()V#Dup(1,0)#550
jwutil.math.BitString.<clinit>()V#Constant(I,137)#551
jwutil.math.BitString.<clinit>()V#Constant(I,8)#552
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#553
jwutil.math.BitString.<clinit>()V#Dup(1,0)#554
jwutil.math.BitString.<clinit>()V#Constant(I,138)#555
jwutil.math.BitString.<clinit>()V#Constant(I,8)#556
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#557
jwutil.math.BitString.<clinit>()V#Dup(1,0)#558
jwutil.math.BitString.<clinit>()V#Constant(I,139)#559
jwutil.math.BitString.<clinit>()V#Constant(I,8)#560
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#561
jwutil.math.BitString.<clinit>()V#Dup(1,0)#562
jwutil.math.BitString.<clinit>()V#Constant(I,140)#563
jwutil.math.BitString.<clinit>()V#Constant(I,8)#564
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#565
jwutil.math.BitString.<clinit>()V#Dup(1,0)#566
jwutil.math.BitString.<clinit>()V#Constant(I,141)#567
jwutil.math.BitString.<clinit>()V#Constant(I,8)#568
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#569
jwutil.math.BitString.<clinit>()V#Dup(1,0)#570
jwutil.math.BitString.<clinit>()V#Constant(I,142)#571
jwutil.math.BitString.<clinit>()V#Constant(I,8)#572
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#573
jwutil.math.BitString.<clinit>()V#Dup(1,0)#574
jwutil.math.BitString.<clinit>()V#Constant(I,143)#575
jwutil.math.BitString.<clinit>()V#Constant(I,8)#576
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#577
jwutil.math.BitString.<clinit>()V#Dup(1,0)#578
jwutil.math.BitString.<clinit>()V#Constant(I,144)#579
jwutil.math.BitString.<clinit>()V#Constant(I,8)#580
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#581
jwutil.math.BitString.<clinit>()V#Dup(1,0)#582
jwutil.math.BitString.<clinit>()V#Constant(I,145)#583
jwutil.math.BitString.<clinit>()V#Constant(I,8)#584
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#585
jwutil.math.BitString.<clinit>()V#Dup(1,0)#586
jwutil.math.BitString.<clinit>()V#Constant(I,146)#587
jwutil.math.BitString.<clinit>()V#Constant(I,8)#588
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#589
jwutil.math.BitString.<clinit>()V#Dup(1,0)#590
jwutil.math.BitString.<clinit>()V#Constant(I,147)#591
jwutil.math.BitString.<clinit>()V#Constant(I,8)#592
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#593
jwutil.math.BitString.<clinit>()V#Dup(1,0)#594
jwutil.math.BitString.<clinit>()V#Constant(I,148)#595
jwutil.math.BitString.<clinit>()V#Constant(I,8)#596
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#597
jwutil.math.BitString.<clinit>()V#Dup(1,0)#598
jwutil.math.BitString.<clinit>()V#Constant(I,149)#599
jwutil.math.BitString.<clinit>()V#Constant(I,8)#600
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#601
jwutil.math.BitString.<clinit>()V#Dup(1,0)#602
jwutil.math.BitString.<clinit>()V#Constant(I,150)#603
jwutil.math.BitString.<clinit>()V#Constant(I,8)#604
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#605
jwutil.math.BitString.<clinit>()V#Dup(1,0)#606
jwutil.math.BitString.<clinit>()V#Constant(I,151)#607
jwutil.math.BitString.<clinit>()V#Constant(I,8)#608
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#609
jwutil.math.BitString.<clinit>()V#Dup(1,0)#610
jwutil.math.BitString.<clinit>()V#Constant(I,152)#611
jwutil.math.BitString.<clinit>()V#Constant(I,8)#612
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#613
jwutil.math.BitString.<clinit>()V#Dup(1,0)#614
jwutil.math.BitString.<clinit>()V#Constant(I,153)#615
jwutil.math.BitString.<clinit>()V#Constant(I,8)#616
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#617
jwutil.math.BitString.<clinit>()V#Dup(1,0)#618
jwutil.math.BitString.<clinit>()V#Constant(I,154)#619
jwutil.math.BitString.<clinit>()V#Constant(I,8)#620
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#621
jwutil.math.BitString.<clinit>()V#Dup(1,0)#622
jwutil.math.BitString.<clinit>()V#Constant(I,155)#623
jwutil.math.BitString.<clinit>()V#Constant(I,8)#624
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#625
jwutil.math.BitString.<clinit>()V#Dup(1,0)#626
jwutil.math.BitString.<clinit>()V#Constant(I,156)#627
jwutil.math.BitString.<clinit>()V#Constant(I,8)#628
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#629
jwutil.math.BitString.<clinit>()V#Dup(1,0)#630
jwutil.math.BitString.<clinit>()V#Constant(I,157)#631
jwutil.math.BitString.<clinit>()V#Constant(I,8)#632
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#633
jwutil.math.BitString.<clinit>()V#Dup(1,0)#634
jwutil.math.BitString.<clinit>()V#Constant(I,158)#635
jwutil.math.BitString.<clinit>()V#Constant(I,8)#636
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#637
jwutil.math.BitString.<clinit>()V#Dup(1,0)#638
jwutil.math.BitString.<clinit>()V#Constant(I,159)#639
jwutil.math.BitString.<clinit>()V#Constant(I,8)#640
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#641
jwutil.math.BitString.<clinit>()V#Dup(1,0)#642
jwutil.math.BitString.<clinit>()V#Constant(I,160)#643
jwutil.math.BitString.<clinit>()V#Constant(I,8)#644
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#645
jwutil.math.BitString.<clinit>()V#Dup(1,0)#646
jwutil.math.BitString.<clinit>()V#Constant(I,161)#647
jwutil.math.BitString.<clinit>()V#Constant(I,8)#648
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#649
jwutil.math.BitString.<clinit>()V#Dup(1,0)#650
jwutil.math.BitString.<clinit>()V#Constant(I,162)#651
jwutil.math.BitString.<clinit>()V#Constant(I,8)#652
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#653
jwutil.math.BitString.<clinit>()V#Dup(1,0)#654
jwutil.math.BitString.<clinit>()V#Constant(I,163)#655
jwutil.math.BitString.<clinit>()V#Constant(I,8)#656
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#657
jwutil.math.BitString.<clinit>()V#Dup(1,0)#658
jwutil.math.BitString.<clinit>()V#Constant(I,164)#659
jwutil.math.BitString.<clinit>()V#Constant(I,8)#660
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#661
jwutil.math.BitString.<clinit>()V#Dup(1,0)#662
jwutil.math.BitString.<clinit>()V#Constant(I,165)#663
jwutil.math.BitString.<clinit>()V#Constant(I,8)#664
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#665
jwutil.math.BitString.<clinit>()V#Dup(1,0)#666
jwutil.math.BitString.<clinit>()V#Constant(I,166)#667
jwutil.math.BitString.<clinit>()V#Constant(I,8)#668
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#669
jwutil.math.BitString.<clinit>()V#Dup(1,0)#670
jwutil.math.BitString.<clinit>()V#Constant(I,167)#671
jwutil.math.BitString.<clinit>()V#Constant(I,8)#672
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#673
jwutil.math.BitString.<clinit>()V#Dup(1,0)#674
jwutil.math.BitString.<clinit>()V#Constant(I,168)#675
jwutil.math.BitString.<clinit>()V#Constant(I,8)#676
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#677
jwutil.math.BitString.<clinit>()V#Dup(1,0)#678
jwutil.math.BitString.<clinit>()V#Constant(I,169)#679
jwutil.math.BitString.<clinit>()V#Constant(I,8)#680
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#681
jwutil.math.BitString.<clinit>()V#Dup(1,0)#682
jwutil.math.BitString.<clinit>()V#Constant(I,170)#683
jwutil.math.BitString.<clinit>()V#Constant(I,8)#684
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#685
jwutil.math.BitString.<clinit>()V#Dup(1,0)#686
jwutil.math.BitString.<clinit>()V#Constant(I,171)#687
jwutil.math.BitString.<clinit>()V#Constant(I,8)#688
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#689
jwutil.math.BitString.<clinit>()V#Dup(1,0)#690
jwutil.math.BitString.<clinit>()V#Constant(I,172)#691
jwutil.math.BitString.<clinit>()V#Constant(I,8)#692
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#693
jwutil.math.BitString.<clinit>()V#Dup(1,0)#694
jwutil.math.BitString.<clinit>()V#Constant(I,173)#695
jwutil.math.BitString.<clinit>()V#Constant(I,8)#696
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#697
jwutil.math.BitString.<clinit>()V#Dup(1,0)#698
jwutil.math.BitString.<clinit>()V#Constant(I,174)#699
jwutil.math.BitString.<clinit>()V#Constant(I,8)#700
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#701
jwutil.math.BitString.<clinit>()V#Dup(1,0)#702
jwutil.math.BitString.<clinit>()V#Constant(I,175)#703
jwutil.math.BitString.<clinit>()V#Constant(I,8)#704
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#705
jwutil.math.BitString.<clinit>()V#Dup(1,0)#706
jwutil.math.BitString.<clinit>()V#Constant(I,176)#707
jwutil.math.BitString.<clinit>()V#Constant(I,8)#708
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#709
jwutil.math.BitString.<clinit>()V#Dup(1,0)#710
jwutil.math.BitString.<clinit>()V#Constant(I,177)#711
jwutil.math.BitString.<clinit>()V#Constant(I,8)#712
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#713
jwutil.math.BitString.<clinit>()V#Dup(1,0)#714
jwutil.math.BitString.<clinit>()V#Constant(I,178)#715
jwutil.math.BitString.<clinit>()V#Constant(I,8)#716
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#717
jwutil.math.BitString.<clinit>()V#Dup(1,0)#718
jwutil.math.BitString.<clinit>()V#Constant(I,179)#719
jwutil.math.BitString.<clinit>()V#Constant(I,8)#720
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#721
jwutil.math.BitString.<clinit>()V#Dup(1,0)#722
jwutil.math.BitString.<clinit>()V#Constant(I,180)#723
jwutil.math.BitString.<clinit>()V#Constant(I,8)#724
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#725
jwutil.math.BitString.<clinit>()V#Dup(1,0)#726
jwutil.math.BitString.<clinit>()V#Constant(I,181)#727
jwutil.math.BitString.<clinit>()V#Constant(I,8)#728
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#729
jwutil.math.BitString.<clinit>()V#Dup(1,0)#730
jwutil.math.BitString.<clinit>()V#Constant(I,182)#731
jwutil.math.BitString.<clinit>()V#Constant(I,8)#732
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#733
jwutil.math.BitString.<clinit>()V#Dup(1,0)#734
jwutil.math.BitString.<clinit>()V#Constant(I,183)#735
jwutil.math.BitString.<clinit>()V#Constant(I,8)#736
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#737
jwutil.math.BitString.<clinit>()V#Dup(1,0)#738
jwutil.math.BitString.<clinit>()V#Constant(I,184)#739
jwutil.math.BitString.<clinit>()V#Constant(I,8)#740
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#741
jwutil.math.BitString.<clinit>()V#Dup(1,0)#742
jwutil.math.BitString.<clinit>()V#Constant(I,185)#743
jwutil.math.BitString.<clinit>()V#Constant(I,8)#744
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#745
jwutil.math.BitString.<clinit>()V#Dup(1,0)#746
jwutil.math.BitString.<clinit>()V#Constant(I,186)#747
jwutil.math.BitString.<clinit>()V#Constant(I,8)#748
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#749
jwutil.math.BitString.<clinit>()V#Dup(1,0)#750
jwutil.math.BitString.<clinit>()V#Constant(I,187)#751
jwutil.math.BitString.<clinit>()V#Constant(I,8)#752
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#753
jwutil.math.BitString.<clinit>()V#Dup(1,0)#754
jwutil.math.BitString.<clinit>()V#Constant(I,188)#755
jwutil.math.BitString.<clinit>()V#Constant(I,8)#756
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#757
jwutil.math.BitString.<clinit>()V#Dup(1,0)#758
jwutil.math.BitString.<clinit>()V#Constant(I,189)#759
jwutil.math.BitString.<clinit>()V#Constant(I,8)#760
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#761
jwutil.math.BitString.<clinit>()V#Dup(1,0)#762
jwutil.math.BitString.<clinit>()V#Constant(I,190)#763
jwutil.math.BitString.<clinit>()V#Constant(I,8)#764
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#765
jwutil.math.BitString.<clinit>()V#Dup(1,0)#766
jwutil.math.BitString.<clinit>()V#Constant(I,191)#767
jwutil.math.BitString.<clinit>()V#Constant(I,8)#768
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#769
jwutil.math.BitString.<clinit>()V#Dup(1,0)#770
jwutil.math.BitString.<clinit>()V#Constant(I,192)#771
jwutil.math.BitString.<clinit>()V#Constant(I,8)#772
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#773
jwutil.math.BitString.<clinit>()V#Dup(1,0)#774
jwutil.math.BitString.<clinit>()V#Constant(I,193)#775
jwutil.math.BitString.<clinit>()V#Constant(I,8)#776
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#777
jwutil.math.BitString.<clinit>()V#Dup(1,0)#778
jwutil.math.BitString.<clinit>()V#Constant(I,194)#779
jwutil.math.BitString.<clinit>()V#Constant(I,8)#780
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#781
jwutil.math.BitString.<clinit>()V#Dup(1,0)#782
jwutil.math.BitString.<clinit>()V#Constant(I,195)#783
jwutil.math.BitString.<clinit>()V#Constant(I,8)#784
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#785
jwutil.math.BitString.<clinit>()V#Dup(1,0)#786
jwutil.math.BitString.<clinit>()V#Constant(I,196)#787
jwutil.math.BitString.<clinit>()V#Constant(I,8)#788
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#789
jwutil.math.BitString.<clinit>()V#Dup(1,0)#790
jwutil.math.BitString.<clinit>()V#Constant(I,197)#791
jwutil.math.BitString.<clinit>()V#Constant(I,8)#792
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#793
jwutil.math.BitString.<clinit>()V#Dup(1,0)#794
jwutil.math.BitString.<clinit>()V#Constant(I,198)#795
jwutil.math.BitString.<clinit>()V#Constant(I,8)#796
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#797
jwutil.math.BitString.<clinit>()V#Dup(1,0)#798
jwutil.math.BitString.<clinit>()V#Constant(I,199)#799
jwutil.math.BitString.<clinit>()V#Constant(I,8)#800
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#801
jwutil.math.BitString.<clinit>()V#Dup(1,0)#802
jwutil.math.BitString.<clinit>()V#Constant(I,200)#803
jwutil.math.BitString.<clinit>()V#Constant(I,8)#804
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#805
jwutil.math.BitString.<clinit>()V#Dup(1,0)#806
jwutil.math.BitString.<clinit>()V#Constant(I,201)#807
jwutil.math.BitString.<clinit>()V#Constant(I,8)#808
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#809
jwutil.math.BitString.<clinit>()V#Dup(1,0)#810
jwutil.math.BitString.<clinit>()V#Constant(I,202)#811
jwutil.math.BitString.<clinit>()V#Constant(I,8)#812
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#813
jwutil.math.BitString.<clinit>()V#Dup(1,0)#814
jwutil.math.BitString.<clinit>()V#Constant(I,203)#815
jwutil.math.BitString.<clinit>()V#Constant(I,8)#816
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#817
jwutil.math.BitString.<clinit>()V#Dup(1,0)#818
jwutil.math.BitString.<clinit>()V#Constant(I,204)#819
jwutil.math.BitString.<clinit>()V#Constant(I,8)#820
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#821
jwutil.math.BitString.<clinit>()V#Dup(1,0)#822
jwutil.math.BitString.<clinit>()V#Constant(I,205)#823
jwutil.math.BitString.<clinit>()V#Constant(I,8)#824
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#825
jwutil.math.BitString.<clinit>()V#Dup(1,0)#826
jwutil.math.BitString.<clinit>()V#Constant(I,206)#827
jwutil.math.BitString.<clinit>()V#Constant(I,8)#828
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#829
jwutil.math.BitString.<clinit>()V#Dup(1,0)#830
jwutil.math.BitString.<clinit>()V#Constant(I,207)#831
jwutil.math.BitString.<clinit>()V#Constant(I,8)#832
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#833
jwutil.math.BitString.<clinit>()V#Dup(1,0)#834
jwutil.math.BitString.<clinit>()V#Constant(I,208)#835
jwutil.math.BitString.<clinit>()V#Constant(I,8)#836
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#837
jwutil.math.BitString.<clinit>()V#Dup(1,0)#838
jwutil.math.BitString.<clinit>()V#Constant(I,209)#839
jwutil.math.BitString.<clinit>()V#Constant(I,8)#840
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#841
jwutil.math.BitString.<clinit>()V#Dup(1,0)#842
jwutil.math.BitString.<clinit>()V#Constant(I,210)#843
jwutil.math.BitString.<clinit>()V#Constant(I,8)#844
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#845
jwutil.math.BitString.<clinit>()V#Dup(1,0)#846
jwutil.math.BitString.<clinit>()V#Constant(I,211)#847
jwutil.math.BitString.<clinit>()V#Constant(I,8)#848
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#849
jwutil.math.BitString.<clinit>()V#Dup(1,0)#850
jwutil.math.BitString.<clinit>()V#Constant(I,212)#851
jwutil.math.BitString.<clinit>()V#Constant(I,8)#852
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#853
jwutil.math.BitString.<clinit>()V#Dup(1,0)#854
jwutil.math.BitString.<clinit>()V#Constant(I,213)#855
jwutil.math.BitString.<clinit>()V#Constant(I,8)#856
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#857
jwutil.math.BitString.<clinit>()V#Dup(1,0)#858
jwutil.math.BitString.<clinit>()V#Constant(I,214)#859
jwutil.math.BitString.<clinit>()V#Constant(I,8)#860
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#861
jwutil.math.BitString.<clinit>()V#Dup(1,0)#862
jwutil.math.BitString.<clinit>()V#Constant(I,215)#863
jwutil.math.BitString.<clinit>()V#Constant(I,8)#864
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#865
jwutil.math.BitString.<clinit>()V#Dup(1,0)#866
jwutil.math.BitString.<clinit>()V#Constant(I,216)#867
jwutil.math.BitString.<clinit>()V#Constant(I,8)#868
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#869
jwutil.math.BitString.<clinit>()V#Dup(1,0)#870
jwutil.math.BitString.<clinit>()V#Constant(I,217)#871
jwutil.math.BitString.<clinit>()V#Constant(I,8)#872
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#873
jwutil.math.BitString.<clinit>()V#Dup(1,0)#874
jwutil.math.BitString.<clinit>()V#Constant(I,218)#875
jwutil.math.BitString.<clinit>()V#Constant(I,8)#876
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#877
jwutil.math.BitString.<clinit>()V#Dup(1,0)#878
jwutil.math.BitString.<clinit>()V#Constant(I,219)#879
jwutil.math.BitString.<clinit>()V#Constant(I,8)#880
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#881
jwutil.math.BitString.<clinit>()V#Dup(1,0)#882
jwutil.math.BitString.<clinit>()V#Constant(I,220)#883
jwutil.math.BitString.<clinit>()V#Constant(I,8)#884
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#885
jwutil.math.BitString.<clinit>()V#Dup(1,0)#886
jwutil.math.BitString.<clinit>()V#Constant(I,221)#887
jwutil.math.BitString.<clinit>()V#Constant(I,8)#888
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#889
jwutil.math.BitString.<clinit>()V#Dup(1,0)#890
jwutil.math.BitString.<clinit>()V#Constant(I,222)#891
jwutil.math.BitString.<clinit>()V#Constant(I,8)#892
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#893
jwutil.math.BitString.<clinit>()V#Dup(1,0)#894
jwutil.math.BitString.<clinit>()V#Constant(I,223)#895
jwutil.math.BitString.<clinit>()V#Constant(I,8)#896
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#897
jwutil.math.BitString.<clinit>()V#Dup(1,0)#898
jwutil.math.BitString.<clinit>()V#Constant(I,224)#899
jwutil.math.BitString.<clinit>()V#Constant(I,8)#900
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#901
jwutil.math.BitString.<clinit>()V#Dup(1,0)#902
jwutil.math.BitString.<clinit>()V#Constant(I,225)#903
jwutil.math.BitString.<clinit>()V#Constant(I,8)#904
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#905
jwutil.math.BitString.<clinit>()V#Dup(1,0)#906
jwutil.math.BitString.<clinit>()V#Constant(I,226)#907
jwutil.math.BitString.<clinit>()V#Constant(I,8)#908
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#909
jwutil.math.BitString.<clinit>()V#Dup(1,0)#910
jwutil.math.BitString.<clinit>()V#Constant(I,227)#911
jwutil.math.BitString.<clinit>()V#Constant(I,8)#912
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#913
jwutil.math.BitString.<clinit>()V#Dup(1,0)#914
jwutil.math.BitString.<clinit>()V#Constant(I,228)#915
jwutil.math.BitString.<clinit>()V#Constant(I,8)#916
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#917
jwutil.math.BitString.<clinit>()V#Dup(1,0)#918
jwutil.math.BitString.<clinit>()V#Constant(I,229)#919
jwutil.math.BitString.<clinit>()V#Constant(I,8)#920
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#921
jwutil.math.BitString.<clinit>()V#Dup(1,0)#922
jwutil.math.BitString.<clinit>()V#Constant(I,230)#923
jwutil.math.BitString.<clinit>()V#Constant(I,8)#924
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#925
jwutil.math.BitString.<clinit>()V#Dup(1,0)#926
jwutil.math.BitString.<clinit>()V#Constant(I,231)#927
jwutil.math.BitString.<clinit>()V#Constant(I,8)#928
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#929
jwutil.math.BitString.<clinit>()V#Dup(1,0)#930
jwutil.math.BitString.<clinit>()V#Constant(I,232)#931
jwutil.math.BitString.<clinit>()V#Constant(I,8)#932
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#933
jwutil.math.BitString.<clinit>()V#Dup(1,0)#934
jwutil.math.BitString.<clinit>()V#Constant(I,233)#935
jwutil.math.BitString.<clinit>()V#Constant(I,8)#936
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#937
jwutil.math.BitString.<clinit>()V#Dup(1,0)#938
jwutil.math.BitString.<clinit>()V#Constant(I,234)#939
jwutil.math.BitString.<clinit>()V#Constant(I,8)#940
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#941
jwutil.math.BitString.<clinit>()V#Dup(1,0)#942
jwutil.math.BitString.<clinit>()V#Constant(I,235)#943
jwutil.math.BitString.<clinit>()V#Constant(I,8)#944
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#945
jwutil.math.BitString.<clinit>()V#Dup(1,0)#946
jwutil.math.BitString.<clinit>()V#Constant(I,236)#947
jwutil.math.BitString.<clinit>()V#Constant(I,8)#948
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#949
jwutil.math.BitString.<clinit>()V#Dup(1,0)#950
jwutil.math.BitString.<clinit>()V#Constant(I,237)#951
jwutil.math.BitString.<clinit>()V#Constant(I,8)#952
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#953
jwutil.math.BitString.<clinit>()V#Dup(1,0)#954
jwutil.math.BitString.<clinit>()V#Constant(I,238)#955
jwutil.math.BitString.<clinit>()V#Constant(I,8)#956
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#957
jwutil.math.BitString.<clinit>()V#Dup(1,0)#958
jwutil.math.BitString.<clinit>()V#Constant(I,239)#959
jwutil.math.BitString.<clinit>()V#Constant(I,8)#960
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#961
jwutil.math.BitString.<clinit>()V#Dup(1,0)#962
jwutil.math.BitString.<clinit>()V#Constant(I,240)#963
jwutil.math.BitString.<clinit>()V#Constant(I,8)#964
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#965
jwutil.math.BitString.<clinit>()V#Dup(1,0)#966
jwutil.math.BitString.<clinit>()V#Constant(I,241)#967
jwutil.math.BitString.<clinit>()V#Constant(I,8)#968
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#969
jwutil.math.BitString.<clinit>()V#Dup(1,0)#970
jwutil.math.BitString.<clinit>()V#Constant(I,242)#971
jwutil.math.BitString.<clinit>()V#Constant(I,8)#972
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#973
jwutil.math.BitString.<clinit>()V#Dup(1,0)#974
jwutil.math.BitString.<clinit>()V#Constant(I,243)#975
jwutil.math.BitString.<clinit>()V#Constant(I,8)#976
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#977
jwutil.math.BitString.<clinit>()V#Dup(1,0)#978
jwutil.math.BitString.<clinit>()V#Constant(I,244)#979
jwutil.math.BitString.<clinit>()V#Constant(I,8)#980
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#981
jwutil.math.BitString.<clinit>()V#Dup(1,0)#982
jwutil.math.BitString.<clinit>()V#Constant(I,245)#983
jwutil.math.BitString.<clinit>()V#Constant(I,8)#984
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#985
jwutil.math.BitString.<clinit>()V#Dup(1,0)#986
jwutil.math.BitString.<clinit>()V#Constant(I,246)#987
jwutil.math.BitString.<clinit>()V#Constant(I,8)#988
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#989
jwutil.math.BitString.<clinit>()V#Dup(1,0)#990
jwutil.math.BitString.<clinit>()V#Constant(I,247)#991
jwutil.math.BitString.<clinit>()V#Constant(I,8)#992
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#993
jwutil.math.BitString.<clinit>()V#Dup(1,0)#994
jwutil.math.BitString.<clinit>()V#Constant(I,248)#995
jwutil.math.BitString.<clinit>()V#Constant(I,8)#996
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#997
jwutil.math.BitString.<clinit>()V#Dup(1,0)#998
jwutil.math.BitString.<clinit>()V#Constant(I,249)#999
jwutil.math.BitString.<clinit>()V#Constant(I,8)#1000
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#1001
jwutil.math.BitString.<clinit>()V#Dup(1,0)#1002
jwutil.math.BitString.<clinit>()V#Constant(I,250)#1003
jwutil.math.BitString.<clinit>()V#Constant(I,8)#1004
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#1005
jwutil.math.BitString.<clinit>()V#Dup(1,0)#1006
jwutil.math.BitString.<clinit>()V#Constant(I,251)#1007
jwutil.math.BitString.<clinit>()V#Constant(I,8)#1008
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#1009
jwutil.math.BitString.<clinit>()V#Dup(1,0)#1010
jwutil.math.BitString.<clinit>()V#Constant(I,252)#1011
jwutil.math.BitString.<clinit>()V#Constant(I,8)#1012
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#1013
jwutil.math.BitString.<clinit>()V#Dup(1,0)#1014
jwutil.math.BitString.<clinit>()V#Constant(I,253)#1015
jwutil.math.BitString.<clinit>()V#Constant(I,8)#1016
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#1017
jwutil.math.BitString.<clinit>()V#Dup(1,0)#1018
jwutil.math.BitString.<clinit>()V#Constant(I,254)#1019
jwutil.math.BitString.<clinit>()V#Constant(I,8)#1020
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#1021
jwutil.math.BitString.<clinit>()V#Dup(1,0)#1022
jwutil.math.BitString.<clinit>()V#Constant(I,255)#1023
jwutil.math.BitString.<clinit>()V#Constant(I,8)#1024
jwutil.math.BitString.<clinit>()V#ArrayStore(B)#1025
jwutil.math.BitString.<clinit>()V#Put([B,STATIC,Ljwutil/math/BitString;,bytemsb)#1026
jwutil.math.BitString.<clinit>()V#Return(V)#1027
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.<init>(Ljoeq/Class/jq_Method;)V#Dup(1,0)#5
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.<init>(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#6
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.<init>(Ljoeq/Class/jq_Method;)V#Get([B,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$InitialPass;,bcs)#7
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.<init>(Ljoeq/Class/jq_Method;)V#ArrayLength()#8
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.<init>(Ljoeq/Class/jq_Method;)V#Constant(I,1)#9
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.<init>(Ljoeq/Class/jq_Method;)V#BinaryOp(I,add)#10
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.<init>(Ljoeq/Class/jq_Method;)V#Invoke(SPECIAL,Ljwutil/math/BitString;,<init>,(I)V)#11
jwutil.math.BitString.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.math.BitString.<init>(I)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
jwutil.math.BitString.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#2
jwutil.math.BitString.<init>(I)V#LocalLoad(I,1)#3
jwutil.math.BitString.<init>(I)V#Constant(I,31)#4
jwutil.math.BitString.<init>(I)V#BinaryOp(I,add)#5
jwutil.math.BitString.<init>(I)V#Invoke(STATIC,Ljwutil/math/BitString;,subscript,(I)I)#6
jwutil.math.BitString.subscript(I)I#LocalLoad(I,0)#0
jwutil.math.BitString.subscript(I)I#Constant(I,5)#1
jwutil.math.BitString.subscript(I)I#Shift(I,SHR)#2
jwutil.math.BitString.subscript(I)I#Return(I)#3
jwutil.math.BitString.<init>(I)V#New([I,1)#7
jwutil.math.BitString.<init>(I)V#Put([I,NONSTATIC,Ljwutil/math/BitString;,bits)#8
jwutil.math.BitString.<init>(I)V#Return(V)#9
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.<init>(Ljoeq/Class/jq_Method;)V#Put(Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$InitialPass;,basic_block_start)#12
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.<init>(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#13
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.<init>(Ljoeq/Class/jq_Method;)V#New(Ljwutil/math/BitString;,0)#14
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.<init>(Ljoeq/Class/jq_Method;)V#Dup(1,0)#15
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.<init>(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#16
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.<init>(Ljoeq/Class/jq_Method;)V#Get([B,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$InitialPass;,bcs)#17
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.<init>(Ljoeq/Class/jq_Method;)V#ArrayLength()#18
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.<init>(Ljoeq/Class/jq_Method;)V#Invoke(SPECIAL,Ljwutil/math/BitString;,<init>,(I)V)#19
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.<init>(Ljoeq/Class/jq_Method;)V#Put(Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$InitialPass;,branch_locations)#20
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.<init>(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#21
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.<init>(Ljoeq/Class/jq_Method;)V#Get(Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$InitialPass;,basic_block_start)#22
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.<init>(Ljoeq/Class/jq_Method;)V#Constant(I,0)#23
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.<init>(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljwutil/math/BitString;,set,(I)V)#24
jwutil.math.BitString.set(I)V#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.math.BitString.set(I)V#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#1
jwutil.math.BitString.set(I)V#LocalLoad(I,1)#2
jwutil.math.BitString.set(I)V#Invoke(STATIC,Ljwutil/math/BitString;,subscript,(I)I)#3
jwutil.math.BitString.set(I)V#Dup(2,0)#4
jwutil.math.BitString.set(I)V#ArrayLoad(I)#5
jwutil.math.BitString.set(I)V#Constant(I,1)#6
jwutil.math.BitString.set(I)V#LocalLoad(I,1)#7
jwutil.math.BitString.set(I)V#Constant(I,31)#8
jwutil.math.BitString.set(I)V#BinaryOp(I,and)#9
jwutil.math.BitString.set(I)V#Shift(I,SHL)#10
jwutil.math.BitString.set(I)V#BinaryOp(I,or)#11
jwutil.math.BitString.set(I)V#ArrayStore(I)#12
jwutil.math.BitString.set(I)V#Return(V)#13
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.<init>(Ljoeq/Class/jq_Method;)V#Return(V)#25
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(Ljava/lang/Object;,1)#4
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,1)#5
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$InitialPass;,forwardTraversal,()V)#6
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.forwardTraversal()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.forwardTraversal()V#Constant(I,-1)#1
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.forwardTraversal()V#Put(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,i_end)#2
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.forwardTraversal()V#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.forwardTraversal()V#LocalLoad(Ljava/lang/Object;,0)#4
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.forwardTraversal()V#Get(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,i_end)#5
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.forwardTraversal()V#Constant(I,1)#6
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.forwardTraversal()V#BinaryOp(I,add)#7
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.forwardTraversal()V#Put(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,i_start)#8
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.forwardTraversal()V#LocalLoad(Ljava/lang/Object;,0)#9
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.forwardTraversal()V#Get(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,i_start)#10
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.forwardTraversal()V#LocalLoad(Ljava/lang/Object;,0)#11
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.forwardTraversal()V#Get([B,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,bcs)#12
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.forwardTraversal()V#ArrayLength()#13
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.forwardTraversal()V#ConditionalBranch(I,lt,16)#14
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.forwardTraversal()V#LocalLoad(Ljava/lang/Object;,0)#16
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.forwardTraversal()V#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,visitBytecode,()V)#17
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Invoke(SPECIAL,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,getUnsignedByte,()C)#1
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedByte()C#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedByte()C#Get([B,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,bcs)#1
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedByte()C#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedByte()C#Dup(1,0)#3
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedByte()C#Get(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,i_end)#4
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedByte()C#Constant(I,1)#5
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedByte()C#BinaryOp(I,add)#6
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedByte()C#Dup(1,1)#7
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedByte()C#Put(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,i_end)#8
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedByte()C#ArrayLoad(B)#9
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedByte()C#Constant(I,255)#10
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedByte()C#BinaryOp(I,and)#11
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedByte()C#Conversion(I,C)#12
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedByte()C#Return(I)#13
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalStore(I,1)#2
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(I,1)#3
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Switch(1849,0,5,1,8,2,12,3,12,4,12,5,12,6,12,7,12,8,12,9,18,10,18,11,25,12,29,13,33,14,37,15,41,16,45,17,52,18,59,19,114,20,169,21,203,22,224,23,210,24,231,25,217,26,238,27,238,28,238,29,238,30,262,31,262,32,262,33,262,34,246,35,246,36,246,37,246,38,270,39,270,40,270,41,270,42,254,43,254,44,254,45,254,46,278,47,293,48,283,49,298,50,288,51,303,52,308,53,313,54,318,55,339,56,325,57,346,58,332,59,353,60,353,61,353,62,353,63,377,64,377,65,377,66,377,67,361,68,361,69,361,70,361,71,385,72,385,73,385,74,385,75,369,76,369,77,369,78,369,79,393,80,403,81,398,82,408,83,413,84,418,85,423,86,428,87,433,88,436,89,439,90,442,91,445,92,448,93,451,94,454,95,457,96,460,97,464,98,468,99,472,100,476,101,480,102,484,103,488,104,492,105,496,106,500,107,504,108,508,109,514,110,520,111,524,112,528,113,534,114,540,115,544,116,548,117,552,118,556,119,560,120,564,121,568,122,572,123,576,124,580,125,584,126,588,127,592,128,596,129,600,130,604,131,608,132,612,133,623,134,626,135,629,136,632,137,635,138,638,139,641,140,644,141,647,142,650,143,653,144,656,145,659,146,662,147,665,148,668,149,671,150,675,151,679,152,683,153,687,154,713,155,739,156,752,157,765,158,778,159,791,160,817,161,843,162,856,163,869,164,882,165,804,166,830,167,895,168,907,169,919,170,926,171,994,172,1060,173,1069,174,1063,175,1072,176,1066,177,1075,178,1078,179,1157,180,1236,181,1315,182,1394,183,1453,184,1512,185,1571,186,1636,187,1640,188,1652,189,1668,190,1689,191,1694,192,1699,193,1713,194,1727,195,1733,196,1739,197,1803,198,700,199,726,200,1825,201,1837)#4
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(Ljava/lang/Object;,0)#1640
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Invoke(SPECIAL,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,getUnsignedWord,()C)#1641
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#Get([B,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,bcs)#1
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#Dup(1,0)#3
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#Get(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,i_end)#4
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#Constant(I,1)#5
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#BinaryOp(I,add)#6
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#Dup(1,1)#7
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#Put(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,i_end)#8
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#ArrayLoad(B)#9
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#Constant(I,255)#10
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#BinaryOp(I,and)#11
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#Constant(I,8)#12
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#Shift(I,SHL)#13
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#LocalStore(I,1)#14
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#LocalLoad(I,1)#15
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#LocalLoad(Ljava/lang/Object;,0)#16
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#Get([B,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,bcs)#17
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#LocalLoad(Ljava/lang/Object;,0)#18
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#Dup(1,0)#19
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#Get(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,i_end)#20
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#Constant(I,1)#21
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#BinaryOp(I,add)#22
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#Dup(1,1)#23
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#Put(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,i_end)#24
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#ArrayLoad(B)#25
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#Constant(I,255)#26
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#BinaryOp(I,and)#27
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#BinaryOp(I,or)#28
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#LocalStore(I,1)#29
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#LocalLoad(I,1)#30
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#Conversion(I,C)#31
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.getUnsignedWord()C#Return(I)#32
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalStore(I,2)#1642
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(Ljava/lang/Object;,0)#1643
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,clazz)#1644
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(I,2)#1645
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getCPasType,(C)Ljoeq/Class/jq_Type;)#1646
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalStore(Ljava/lang/Object;,3)#1647
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(Ljava/lang/Object;,0)#1648
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(Ljava/lang/Object;,3)#1649
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,visitNEW,(Ljoeq/Class/jq_Type;)V)#1650
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitNEW(Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitNEW(Ljoeq/Class/jq_Type;)V#Get(Z,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,TRACE)#1
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitNEW(Ljoeq/Class/jq_Type;)V#Constant(I,0)#2
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitNEW(Ljoeq/Class/jq_Type;)V#ConditionalBranch(I,eq,22)#3
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitNEW(Ljoeq/Class/jq_Type;)V#Return(V)#22
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Goto(1853)#1651
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Return(V)#1853
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.forwardTraversal()V#Goto(3)#18
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(Ljava/lang/Object;,0)#439
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,visitDUP,()V)#440
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitDUP()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitDUP()V#Get(Z,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,TRACE)#1
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitDUP()V#Constant(I,0)#2
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitDUP()V#ConditionalBranch(I,eq,20)#3
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitDUP()V#Return(V)#20
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Goto(1853)#441
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(Ljava/lang/Object;,0)#1453
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,visitPEI,()V)#1454
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitPEI()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitPEI()V#Get(Z,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,TRACE)#1
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitPEI()V#Constant(I,0)#2
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitPEI()V#ConditionalBranch(I,eq,20)#3
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitPEI()V#Return(V)#20
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(Ljava/lang/Object;,0)#1455
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Invoke(SPECIAL,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,getUnsignedWord,()C)#1456
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalStore(I,2)#1457
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(Ljava/lang/Object;,0)#1458
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,clazz)#1459
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(I,2)#1460
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getCPasInstanceMethod,(C)Ljoeq/Class/jq_InstanceMethod;)#1461
joeq.Class.jq_Class.getCPasInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.getCPasInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#Constant(I,2)#1
joeq.Class.jq_Class.getCPasInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,chkState,(B)V)#2
joeq.Class.jq_Class.getCPasInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Class.getCPasInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#Get(Ljoeq/Class/jq_ConstantPool;,NONSTATIC,Ljoeq/Class/jq_Class;,const_pool)#4
joeq.Class.jq_Class.getCPasInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(I,1)#5
joeq.Class.jq_Class.getCPasInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#Invoke(VIRTUAL,Ljoeq/Class/jq_ConstantPool;,getAsInstanceMethod,(C)Ljoeq/Class/jq_InstanceMethod;)#6
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#Get([B,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool_tags)#1
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(I,1)#2
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#ArrayLoad(B)#3
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#Constant(I,17)#4
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#ConditionalBranch(I,ne,12)#5
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,0)#12
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#Get([B,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool_tags)#13
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(I,1)#14
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#ArrayLoad(B)#15
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#Constant(I,10)#16
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#ConditionalBranch(I,eq,28)#17
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#Get(Z,STATIC,Ljoeq/Class/jq_ConstantPool;,TRACE)#28
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#Constant(I,0)#29
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#ConditionalBranch(I,eq,47)#30
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,0)#47
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#Get([Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool)#48
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(I,1)#49
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#ArrayLoad(Ljava/lang/Object;)#50
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#CheckCast(Ljoeq/Class/jq_MemberReference;)#51
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#LocalStore(Ljava/lang/Object;,2)#52
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,2)#53
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#Invoke(VIRTUAL,Ljoeq/Class/jq_MemberReference;,getReferencedClass,()Ljoeq/Class/jq_Class;)#54
joeq.Class.jq_MemberReference.getReferencedClass()Ljoeq/Class/jq_Class;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_MemberReference.getReferencedClass()Ljoeq/Class/jq_Class;#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_MemberReference;,clazz)#1
joeq.Class.jq_MemberReference.getReferencedClass()Ljoeq/Class/jq_Class;#Return(Ljava/lang/Object;)#2
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#LocalStore(Ljava/lang/Object;,3)#55
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,2)#56
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#Invoke(VIRTUAL,Ljoeq/Class/jq_MemberReference;,getNameAndDesc,()Ljoeq/Class/jq_NameAndDesc;)#57
joeq.Class.jq_MemberReference.getNameAndDesc()Ljoeq/Class/jq_NameAndDesc;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_MemberReference.getNameAndDesc()Ljoeq/Class/jq_NameAndDesc;#Get(Ljoeq/Class/jq_NameAndDesc;,NONSTATIC,Ljoeq/Class/jq_MemberReference;,nd)#1
joeq.Class.jq_MemberReference.getNameAndDesc()Ljoeq/Class/jq_NameAndDesc;#Return(Ljava/lang/Object;)#2
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#LocalStore(Ljava/lang/Object;,4)#58
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,3)#59
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,isInClassLib,()Z)#60
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#Constant(I,0)#61
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#ConditionalBranch(I,eq,67)#62
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,3)#67
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,isLoaded,()Z)#68
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#Constant(I,0)#69
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#ConditionalBranch(I,eq,94)#70
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,3)#94
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,4)#95
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getDeclaredMember,(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;)#96
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#CheckCast(Ljoeq/Class/jq_Method;)#97
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#LocalStore(Ljava/lang/Object;,6)#98
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,6)#99
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#Constant(L;,null)#100
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#ConditionalBranch(Ljava/lang/Object;,ne,133)#101
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,0)#102
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#Get([Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool)#103
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(I,1)#104
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,3)#105
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,4)#106
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,createInstanceMethod,(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;)#107
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#Dup(1,0)#108
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#LocalStore(Ljava/lang/Object;,5)#109
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#ArrayStore(Ljava/lang/Object;)#110
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,0)#111
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#Get([B,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool_tags)#112
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(I,1)#113
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#Constant(I,17)#114
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#ArrayStore(B)#115
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#Get(Z,STATIC,Ljoeq/Class/jq_ConstantPool;,TRACE)#116
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#Constant(I,0)#117
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#ConditionalBranch(I,eq,154)#118
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,5)#154
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#Return(Ljava/lang/Object;)#155
joeq.Class.jq_Class.getCPasInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#Return(Ljava/lang/Object;)#7
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalStore(Ljava/lang/Object;,3)#1462
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(Ljava/lang/Object;,3)#1463
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Invoke(VIRTUAL,Ljoeq/Class/jq_InstanceMethod;,getReturnType,()Ljoeq/Class/jq_Type;)#1464
joeq.Class.jq_Method.getReturnType()Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Method.getReturnType()Ljoeq/Class/jq_Type;#Get(Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_Method;,return_type)#1
joeq.Class.jq_Method.getReturnType()Ljoeq/Class/jq_Type;#Return(Ljava/lang/Object;)#2
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalStore(Ljava/lang/Object;,4)#1465
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(Ljava/lang/Object;,4)#1466
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Get(Ljoeq/Class/jq_Primitive;,STATIC,Ljoeq/Class/jq_Primitive;,VOID)#1467
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#ConditionalBranch(Ljava/lang/Object;,ne,1474)#1468
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(Ljava/lang/Object;,0)#1469
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Constant(I,2)#1470
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(Ljava/lang/Object;,3)#1471
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,visitVINVOKE,(BLjoeq/Class/jq_Method;)V)#1472
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitVINVOKE(BLjoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitVINVOKE(BLjoeq/Class/jq_Method;)V#Get(Z,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,TRACE)#1
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitVINVOKE(BLjoeq/Class/jq_Method;)V#Constant(I,0)#2
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitVINVOKE(BLjoeq/Class/jq_Method;)V#ConditionalBranch(I,eq,28)#3
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitVINVOKE(BLjoeq/Class/jq_Method;)V#Return(V)#28
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Goto(1853)#1473
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(I,1)#369
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Constant(I,75)#370
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#BinaryOp(I,sub)#371
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalStore(I,2)#372
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(Ljava/lang/Object;,0)#373
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(I,2)#374
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,visitASTORE,(I)V)#375
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitASTORE(I)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitASTORE(I)V#Get(Z,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,TRACE)#1
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitASTORE(I)V#Constant(I,0)#2
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitASTORE(I)V#ConditionalBranch(I,eq,22)#3
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitASTORE(I)V#Return(V)#22
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Goto(1853)#376
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(I,1)#254
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Constant(I,42)#255
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#BinaryOp(I,sub)#256
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalStore(I,2)#257
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(Ljava/lang/Object;,0)#258
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(I,2)#259
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,visitALOAD,(I)V)#260
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitALOAD(I)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitALOAD(I)V#Get(Z,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,TRACE)#1
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitALOAD(I)V#Constant(I,0)#2
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitALOAD(I)V#ConditionalBranch(I,eq,22)#3
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitALOAD(I)V#Return(V)#22
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Goto(1853)#261
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,1)#13
joeq.Class.jq_Initializer.parseMethodSignature()V#Invoke(VIRTUAL,Ljoeq/UTF/Utf8$MethodDescriptorIterator;,nextUtf8,()Ljoeq/UTF/Utf8;)#14
joeq.Class.jq_Initializer.parseMethodSignature()V#Pop(1)#15
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalLoad(I,2)#16
joeq.Class.jq_Initializer.parseMethodSignature()V#Constant(I,1)#17
joeq.Class.jq_Initializer.parseMethodSignature()V#BinaryOp(I,add)#18
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalStore(I,2)#19
joeq.Class.jq_Initializer.parseMethodSignature()V#Goto(9)#20
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,1)#41
joeq.Class.jq_Initializer.parseMethodSignature()V#Invoke(VIRTUAL,Ljoeq/UTF/Utf8$MethodDescriptorIterator;,nextUtf8,()Ljoeq/UTF/Utf8;)#42
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalStore(Ljava/lang/Object;,5)#43
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#44
joeq.Class.jq_Initializer.parseMethodSignature()V#Get([Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_Initializer;,param_types)#45
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalLoad(I,4)#46
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#47
joeq.Class.jq_Initializer.parseMethodSignature()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Initializer;,clazz)#48
joeq.Class.jq_Initializer.parseMethodSignature()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getClassLoader,()Ljava/lang/ClassLoader;)#49
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,5)#50
joeq.Class.jq_Initializer.parseMethodSignature()V#Invoke(STATIC,Ljoeq/Class/PrimordialClassLoader;,getOrCreateType,(Ljava/lang/ClassLoader;Ljoeq/UTF/Utf8;)Ljoeq/Class/jq_Type;)#51
joeq.Class.jq_Initializer.parseMethodSignature()V#ArrayStore(Ljava/lang/Object;)#52
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalLoad(I,3)#53
joeq.Class.jq_Initializer.parseMethodSignature()V#Constant(I,1)#54
joeq.Class.jq_Initializer.parseMethodSignature()V#BinaryOp(I,add)#55
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalStore(I,3)#56
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#57
joeq.Class.jq_Initializer.parseMethodSignature()V#Get([Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_Initializer;,param_types)#58
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalLoad(I,4)#59
joeq.Class.jq_Initializer.parseMethodSignature()V#ArrayLoad(Ljava/lang/Object;)#60
joeq.Class.jq_Initializer.parseMethodSignature()V#Get(Ljoeq/Class/jq_Primitive;,STATIC,Ljoeq/Class/jq_Primitive;,LONG)#61
joeq.Class.jq_Initializer.parseMethodSignature()V#ConditionalBranch(Ljava/lang/Object;,eq,69)#62
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalLoad(Ljava/lang/Object;,0)#63
joeq.Class.jq_Initializer.parseMethodSignature()V#Get([Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_Initializer;,param_types)#64
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalLoad(I,4)#65
joeq.Class.jq_Initializer.parseMethodSignature()V#ArrayLoad(Ljava/lang/Object;)#66
joeq.Class.jq_Initializer.parseMethodSignature()V#Get(Ljoeq/Class/jq_Primitive;,STATIC,Ljoeq/Class/jq_Primitive;,DOUBLE)#67
joeq.Class.jq_Initializer.parseMethodSignature()V#ConditionalBranch(Ljava/lang/Object;,ne,73)#68
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalLoad(I,4)#73
joeq.Class.jq_Initializer.parseMethodSignature()V#Constant(I,1)#74
joeq.Class.jq_Initializer.parseMethodSignature()V#BinaryOp(I,add)#75
joeq.Class.jq_Initializer.parseMethodSignature()V#LocalStore(I,4)#76
joeq.Class.jq_Initializer.parseMethodSignature()V#Goto(38)#77
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(Ljava/lang/Object;,0)#1394
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,visitPEI,()V)#1395
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(Ljava/lang/Object;,0)#1396
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Invoke(SPECIAL,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,getUnsignedWord,()C)#1397
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalStore(I,2)#1398
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(Ljava/lang/Object;,0)#1399
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,clazz)#1400
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(I,2)#1401
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getCPasInstanceMethod,(C)Ljoeq/Class/jq_InstanceMethod;)#1402
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalStore(Ljava/lang/Object;,3)#1403
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(Ljava/lang/Object;,3)#1404
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Invoke(VIRTUAL,Ljoeq/Class/jq_InstanceMethod;,getReturnType,()Ljoeq/Class/jq_Type;)#1405
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalStore(Ljava/lang/Object;,4)#1406
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(Ljava/lang/Object;,4)#1407
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Get(Ljoeq/Class/jq_Primitive;,STATIC,Ljoeq/Class/jq_Primitive;,VOID)#1408
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#ConditionalBranch(Ljava/lang/Object;,ne,1415)#1409
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(Ljava/lang/Object;,0)#1410
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Constant(I,0)#1411
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(Ljava/lang/Object;,3)#1412
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,visitVINVOKE,(BLjoeq/Class/jq_Method;)V)#1413
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Goto(1853)#1414
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,0)#6
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#Get([Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool)#7
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(I,1)#8
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#ArrayLoad(Ljava/lang/Object;)#9
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#CheckCast(Ljoeq/Class/jq_InstanceMethod;)#10
joeq.Class.jq_ConstantPool.getAsInstanceMethod(C)Ljoeq/Class/jq_InstanceMethod;#Return(Ljava/lang/Object;)#11
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(Ljava/lang/Object;,0)#1075
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,visitVRETURN,()V)#1076
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.visitVRETURN()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.visitVRETURN()V#Invoke(SPECIAL,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,visitVRETURN,()V)#1
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitVRETURN()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitVRETURN()V#Get(Z,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,TRACE)#1
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitVRETURN()V#Constant(I,0)#2
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitVRETURN()V#ConditionalBranch(I,eq,20)#3
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitVRETURN()V#Return(V)#20
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.visitVRETURN()V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.visitVRETURN()V#Dup(1,0)#3
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.visitVRETURN()V#Get(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$InitialPass;,nExits)#4
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.visitVRETURN()V#Constant(I,1)#5
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.visitVRETURN()V#BinaryOp(I,add)#6
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.visitVRETURN()V#Put(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$InitialPass;,nExits)#7
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.visitVRETURN()V#LocalLoad(Ljava/lang/Object;,0)#8
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.visitVRETURN()V#Invoke(SPECIAL,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$InitialPass;,endBB,()V)#9
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.endBB()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.endBB()V#Get(Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$InitialPass;,branch_locations)#1
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.endBB()V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.endBB()V#Get(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$InitialPass;,i_start)#3
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.endBB()V#Invoke(VIRTUAL,Ljwutil/math/BitString;,set,(I)V)#4
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.endBB()V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.endBB()V#Get(Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$InitialPass;,basic_block_start)#6
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.endBB()V#LocalLoad(Ljava/lang/Object;,0)#7
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.endBB()V#Get(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$InitialPass;,i_end)#8
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.endBB()V#Constant(I,1)#9
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.endBB()V#BinaryOp(I,add)#10
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.endBB()V#Invoke(VIRTUAL,Ljwutil/math/BitString;,set,(I)V)#11
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.endBB()V#Return(V)#12
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.visitVRETURN()V#Return(V)#10
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Goto(1853)#1077
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.forwardTraversal()V#Goto(19)#15
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.forwardTraversal()V#Return(V)#19
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#7
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getBytecode,()[B)#8
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(Ljava/lang/Object;,2)#9
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,1)#10
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$InitialPass;,getBasicBlockStart,()Ljwutil/math/BitString;)#11
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.getBasicBlockStart()Ljwutil/math/BitString;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.getBasicBlockStart()Ljwutil/math/BitString;#Get(Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$InitialPass;,basic_block_start)#1
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.getBasicBlockStart()Ljwutil/math/BitString;#Return(Ljava/lang/Object;)#2
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(Ljava/lang/Object;,3)#12
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,1)#13
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$InitialPass;,getBranchLocations,()Ljwutil/math/BitString;)#14
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.getBranchLocations()Ljwutil/math/BitString;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.getBranchLocations()Ljwutil/math/BitString;#Get(Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$InitialPass;,branch_locations)#1
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.getBranchLocations()Ljwutil/math/BitString;#Return(Ljava/lang/Object;)#2
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(Ljava/lang/Object;,4)#15
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,3)#16
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,2)#17
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ArrayLength()#18
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Invoke(VIRTUAL,Ljwutil/math/BitString;,get,(I)Z)#19
jwutil.math.BitString.get(I)Z#LocalLoad(I,1)#0
jwutil.math.BitString.get(I)Z#Invoke(STATIC,Ljwutil/math/BitString;,subscript,(I)I)#1
jwutil.math.BitString.get(I)Z#LocalStore(I,2)#2
jwutil.math.BitString.get(I)Z#LocalLoad(Ljava/lang/Object;,0)#3
jwutil.math.BitString.get(I)Z#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#4
jwutil.math.BitString.get(I)Z#LocalLoad(I,2)#5
jwutil.math.BitString.get(I)Z#ArrayLoad(I)#6
jwutil.math.BitString.get(I)Z#Constant(I,1)#7
jwutil.math.BitString.get(I)Z#LocalLoad(I,1)#8
jwutil.math.BitString.get(I)Z#Constant(I,31)#9
jwutil.math.BitString.get(I)Z#BinaryOp(I,and)#10
jwutil.math.BitString.get(I)Z#Shift(I,SHL)#11
jwutil.math.BitString.get(I)Z#BinaryOp(I,and)#12
jwutil.math.BitString.get(I)Z#Constant(I,0)#13
jwutil.math.BitString.get(I)Z#ConditionalBranch(I,eq,17)#14
jwutil.math.BitString.get(I)Z#Constant(I,1)#15
jwutil.math.BitString.get(I)Z#Goto(18)#16
jwutil.math.BitString.get(I)Z#Return(I)#18
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,0)#20
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ConditionalBranch(I,ne,26)#21
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#26
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getExceptionTable,()[Ljoeq/Class/jq_TryCatchBC;)#27
joeq.Class.jq_Method.getExceptionTable()[Ljoeq/Class/jq_TryCatchBC;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Method.getExceptionTable()[Ljoeq/Class/jq_TryCatchBC;#Constant(I,5)#1
joeq.Class.jq_Method.getExceptionTable()[Ljoeq/Class/jq_TryCatchBC;#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,chkState,(I)V)#2
joeq.Class.jq_Method.getExceptionTable()[Ljoeq/Class/jq_TryCatchBC;#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Method.getExceptionTable()[Ljoeq/Class/jq_TryCatchBC;#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getBytecode,()[B)#4
joeq.Class.jq_Method.getExceptionTable()[Ljoeq/Class/jq_TryCatchBC;#Constant(L;,null)#5
joeq.Class.jq_Method.getExceptionTable()[Ljoeq/Class/jq_TryCatchBC;#ConditionalBranch(Ljava/lang/Object;,eq,9)#6
joeq.Class.jq_Method.getExceptionTable()[Ljoeq/Class/jq_TryCatchBC;#Constant(I,1)#7
joeq.Class.jq_Method.getExceptionTable()[Ljoeq/Class/jq_TryCatchBC;#Goto(10)#8
joeq.Class.jq_Method.getExceptionTable()[Ljoeq/Class/jq_TryCatchBC;#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#10
joeq.Class.jq_Method.getExceptionTable()[Ljoeq/Class/jq_TryCatchBC;#LocalLoad(Ljava/lang/Object;,0)#11
joeq.Class.jq_Method.getExceptionTable()[Ljoeq/Class/jq_TryCatchBC;#Get([Ljoeq/Class/jq_TryCatchBC;,NONSTATIC,Ljoeq/Class/jq_Method;,exception_table)#12
joeq.Class.jq_Method.getExceptionTable()[Ljoeq/Class/jq_TryCatchBC;#Return(Ljava/lang/Object;)#13
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(Ljava/lang/Object;,5)#28
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,0)#29
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(I,6)#30
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,6)#31
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,5)#32
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ArrayLength()#33
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ConditionalBranch(I,ge,56)#34
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,3)#56
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Invoke(VIRTUAL,Ljwutil/math/BitString;,numberOfOnes,()I)#57
jwutil.math.BitString.numberOfOnes()I#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.math.BitString.numberOfOnes()I#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#1
jwutil.math.BitString.numberOfOnes()I#ArrayLength()#2
jwutil.math.BitString.numberOfOnes()I#LocalStore(I,1)#3
jwutil.math.BitString.numberOfOnes()I#Constant(I,0)#4
jwutil.math.BitString.numberOfOnes()I#LocalStore(I,2)#5
jwutil.math.BitString.numberOfOnes()I#LocalLoad(I,1)#6
jwutil.math.BitString.numberOfOnes()I#LocalStore(I,3)#7
jwutil.math.BitString.numberOfOnes()I#LocalLoad(I,3)#8
jwutil.math.BitString.numberOfOnes()I#Dup(1,0)#9
jwutil.math.BitString.numberOfOnes()I#Constant(I,1)#10
jwutil.math.BitString.numberOfOnes()I#BinaryOp(I,sub)#11
jwutil.math.BitString.numberOfOnes()I#LocalStore(I,3)#12
jwutil.math.BitString.numberOfOnes()I#Constant(I,0)#13
jwutil.math.BitString.numberOfOnes()I#ConditionalBranch(I,le,24)#14
jwutil.math.BitString.numberOfOnes()I#LocalLoad(I,2)#15
jwutil.math.BitString.numberOfOnes()I#LocalLoad(Ljava/lang/Object;,0)#16
jwutil.math.BitString.numberOfOnes()I#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#17
jwutil.math.BitString.numberOfOnes()I#LocalLoad(I,3)#18
jwutil.math.BitString.numberOfOnes()I#ArrayLoad(I)#19
jwutil.math.BitString.numberOfOnes()I#Invoke(STATIC,Ljwutil/math/BitString;,popcount,(I)B)#20
jwutil.math.BitString.popcount(I)B#LocalLoad(I,0)#0
jwutil.math.BitString.popcount(I)B#LocalStore(I,2)#1
jwutil.math.BitString.popcount(I)B#LocalLoad(I,2)#2
jwutil.math.BitString.popcount(I)B#LocalLoad(I,2)#3
jwutil.math.BitString.popcount(I)B#Constant(I,1)#4
jwutil.math.BitString.popcount(I)B#Shift(I,SHR)#5
jwutil.math.BitString.popcount(I)B#Constant(I,1431655765)#6
jwutil.math.BitString.popcount(I)B#BinaryOp(I,and)#7
jwutil.math.BitString.popcount(I)B#BinaryOp(I,sub)#8
jwutil.math.BitString.popcount(I)B#LocalStore(I,2)#9
jwutil.math.BitString.popcount(I)B#LocalLoad(I,2)#10
jwutil.math.BitString.popcount(I)B#Constant(I,2)#11
jwutil.math.BitString.popcount(I)B#Shift(I,SHR)#12
jwutil.math.BitString.popcount(I)B#Constant(I,858993459)#13
jwutil.math.BitString.popcount(I)B#BinaryOp(I,and)#14
jwutil.math.BitString.popcount(I)B#LocalStore(I,1)#15
jwutil.math.BitString.popcount(I)B#LocalLoad(I,2)#16
jwutil.math.BitString.popcount(I)B#Constant(I,858993459)#17
jwutil.math.BitString.popcount(I)B#BinaryOp(I,and)#18
jwutil.math.BitString.popcount(I)B#LocalLoad(I,1)#19
jwutil.math.BitString.popcount(I)B#BinaryOp(I,add)#20
jwutil.math.BitString.popcount(I)B#LocalStore(I,2)#21
jwutil.math.BitString.popcount(I)B#LocalLoad(I,2)#22
jwutil.math.BitString.popcount(I)B#LocalLoad(I,2)#23
jwutil.math.BitString.popcount(I)B#Constant(I,4)#24
jwutil.math.BitString.popcount(I)B#Shift(I,SHR)#25
jwutil.math.BitString.popcount(I)B#BinaryOp(I,add)#26
jwutil.math.BitString.popcount(I)B#Constant(I,252645135)#27
jwutil.math.BitString.popcount(I)B#BinaryOp(I,and)#28
jwutil.math.BitString.popcount(I)B#LocalStore(I,2)#29
jwutil.math.BitString.popcount(I)B#LocalLoad(I,2)#30
jwutil.math.BitString.popcount(I)B#LocalLoad(I,2)#31
jwutil.math.BitString.popcount(I)B#Constant(I,8)#32
jwutil.math.BitString.popcount(I)B#Shift(I,SHR)#33
jwutil.math.BitString.popcount(I)B#BinaryOp(I,add)#34
jwutil.math.BitString.popcount(I)B#LocalStore(I,2)#35
jwutil.math.BitString.popcount(I)B#LocalLoad(I,2)#36
jwutil.math.BitString.popcount(I)B#LocalLoad(I,2)#37
jwutil.math.BitString.popcount(I)B#Constant(I,16)#38
jwutil.math.BitString.popcount(I)B#Shift(I,SHR)#39
jwutil.math.BitString.popcount(I)B#BinaryOp(I,add)#40
jwutil.math.BitString.popcount(I)B#LocalStore(I,2)#41
jwutil.math.BitString.popcount(I)B#LocalLoad(I,2)#42
jwutil.math.BitString.popcount(I)B#Conversion(I,B)#43
jwutil.math.BitString.popcount(I)B#Return(I)#44
jwutil.math.BitString.numberOfOnes()I#BinaryOp(I,add)#21
jwutil.math.BitString.numberOfOnes()I#LocalStore(I,2)#22
jwutil.math.BitString.numberOfOnes()I#Goto(8)#23
jwutil.math.BitString.numberOfOnes()I#LocalLoad(I,2)#24
jwutil.math.BitString.numberOfOnes()I#Return(I)#25
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(I,6)#58
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,6)#59
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,1)#60
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#BinaryOp(I,add)#61
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(I,6)#62
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,6)#63
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#New([I,1)#64
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(Ljava/lang/Object;,7)#65
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#New(Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,0)#66
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Dup(1,0)#67
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,6)#68
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,5)#69
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ArrayLength()#70
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Invoke(SPECIAL,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,<init>,(II)V)#71
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.<init>(II)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.<init>(II)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.<init>(II)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.<init>(II)V#LocalLoad(I,1)#3
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.<init>(II)V#New([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,1)#4
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.<init>(II)V#Put([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,basic_blocks)#5
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.<init>(II)V#LocalLoad(Ljava/lang/Object;,0)#6
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.<init>(II)V#LocalLoad(I,2)#7
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.<init>(II)V#New([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,1)#8
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.<init>(II)V#Put([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,handler_entries)#9
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.<init>(II)V#Return(V)#10
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(Ljava/lang/Object;,8)#72
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,8)#73
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,basic_blocks)#74
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,0)#75
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#New(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,0)#76
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Dup(1,0)#77
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,0)#78
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,-1)#79
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Invoke(SPECIAL,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,<init>,(II)V)#80
joeq.Compiler.BytecodeAnalysis.BasicBlock.<init>(II)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.BasicBlock.<init>(II)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.BytecodeAnalysis.BasicBlock.<init>(II)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.BytecodeAnalysis.BasicBlock.<init>(II)V#LocalLoad(I,1)#3
joeq.Compiler.BytecodeAnalysis.BasicBlock.<init>(II)V#Put(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,id)#4
joeq.Compiler.BytecodeAnalysis.BasicBlock.<init>(II)V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Compiler.BytecodeAnalysis.BasicBlock.<init>(II)V#LocalLoad(I,2)#6
joeq.Compiler.BytecodeAnalysis.BasicBlock.<init>(II)V#Put(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,start)#7
joeq.Compiler.BytecodeAnalysis.BasicBlock.<init>(II)V#Return(V)#8
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ArrayStore(Ljava/lang/Object;)#81
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,8)#82
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,basic_blocks)#83
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,1)#84
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#New(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,0)#85
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Dup(1,0)#86
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,1)#87
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,-1)#88
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Invoke(SPECIAL,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,<init>,(II)V)#89
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ArrayStore(Ljava/lang/Object;)#90
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,2)#91
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(I,9)#92
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(L;,null)#93
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(Ljava/lang/Object;,10)#94
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,8)#95
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,basic_blocks)#96
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,2)#97
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#New(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,0)#98
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Dup(1,0)#99
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,2)#100
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,0)#101
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Invoke(SPECIAL,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,<init>,(II)V)#102
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Dup(1,0)#103
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(Ljava/lang/Object;,10)#104
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ArrayStore(Ljava/lang/Object;)#105
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,3)#106
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Invoke(VIRTUAL,Ljwutil/math/BitString;,iterator,()Ljwutil/math/BitString$ForwardBitStringIterator;)#107
jwutil.math.BitString.iterator()Ljwutil/math/BitString$ForwardBitStringIterator;#New(Ljwutil/math/BitString$ForwardBitStringIterator;,0)#0
jwutil.math.BitString.iterator()Ljwutil/math/BitString$ForwardBitStringIterator;#Dup(1,0)#1
jwutil.math.BitString.iterator()Ljwutil/math/BitString$ForwardBitStringIterator;#LocalLoad(Ljava/lang/Object;,0)#2
jwutil.math.BitString.iterator()Ljwutil/math/BitString$ForwardBitStringIterator;#Invoke(SPECIAL,Ljwutil/math/BitString$ForwardBitStringIterator;,<init>,(Ljwutil/math/BitString;)V)#3
jwutil.math.BitString$ForwardBitStringIterator.<init>(Ljwutil/math/BitString;)V#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.math.BitString$ForwardBitStringIterator.<init>(Ljwutil/math/BitString;)V#LocalLoad(Ljava/lang/Object;,1)#1
jwutil.math.BitString$ForwardBitStringIterator.<init>(Ljwutil/math/BitString;)V#Put(Ljwutil/math/BitString;,NONSTATIC,Ljwutil/math/BitString$ForwardBitStringIterator;,this$0)#2
jwutil.math.BitString$ForwardBitStringIterator.<init>(Ljwutil/math/BitString;)V#LocalLoad(Ljava/lang/Object;,0)#3
jwutil.math.BitString$ForwardBitStringIterator.<init>(Ljwutil/math/BitString;)V#Invoke(SPECIAL,Ljwutil/math/BitString$BitStringIterator;,<init>,()V)#4
jwutil.math.BitString$BitStringIterator.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.math.BitString$BitStringIterator.<init>()V#Invoke(SPECIAL,Ljwutil/collections/UnmodifiableIterator;,<init>,()V)#1
jwutil.math.BitString$BitStringIterator.<init>()V#Return(V)#2
jwutil.math.BitString$ForwardBitStringIterator.<init>(Ljwutil/math/BitString;)V#LocalLoad(Ljava/lang/Object;,0)#5
jwutil.math.BitString$ForwardBitStringIterator.<init>(Ljwutil/math/BitString;)V#Constant(I,0)#6
jwutil.math.BitString$ForwardBitStringIterator.<init>(Ljwutil/math/BitString;)V#Put(I,NONSTATIC,Ljwutil/math/BitString$ForwardBitStringIterator;,j)#7
jwutil.math.BitString$ForwardBitStringIterator.<init>(Ljwutil/math/BitString;)V#LocalLoad(Ljava/lang/Object;,0)#8
jwutil.math.BitString$ForwardBitStringIterator.<init>(Ljwutil/math/BitString;)V#Constant(I,0)#9
jwutil.math.BitString$ForwardBitStringIterator.<init>(Ljwutil/math/BitString;)V#Put(I,NONSTATIC,Ljwutil/math/BitString$ForwardBitStringIterator;,k)#10
jwutil.math.BitString$ForwardBitStringIterator.<init>(Ljwutil/math/BitString;)V#LocalLoad(Ljava/lang/Object;,0)#11
jwutil.math.BitString$ForwardBitStringIterator.<init>(Ljwutil/math/BitString;)V#LocalLoad(Ljava/lang/Object;,1)#12
jwutil.math.BitString$ForwardBitStringIterator.<init>(Ljwutil/math/BitString;)V#Invoke(STATIC,Ljwutil/math/BitString;,access$000,(Ljwutil/math/BitString;)[I)#13
jwutil.math.BitString.access$000(Ljwutil/math/BitString;)[I#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.math.BitString.access$000(Ljwutil/math/BitString;)[I#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#1
jwutil.math.BitString.access$000(Ljwutil/math/BitString;)[I#Return(Ljava/lang/Object;)#2
jwutil.math.BitString$ForwardBitStringIterator.<init>(Ljwutil/math/BitString;)V#Constant(I,0)#14
jwutil.math.BitString$ForwardBitStringIterator.<init>(Ljwutil/math/BitString;)V#ArrayLoad(I)#15
jwutil.math.BitString$ForwardBitStringIterator.<init>(Ljwutil/math/BitString;)V#Put(I,NONSTATIC,Ljwutil/math/BitString$ForwardBitStringIterator;,t)#16
jwutil.math.BitString$ForwardBitStringIterator.<init>(Ljwutil/math/BitString;)V#Return(V)#17
jwutil.math.BitString.iterator()Ljwutil/math/BitString$ForwardBitStringIterator;#Return(Ljava/lang/Object;)#4
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(Ljava/lang/Object;,11)#108
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,11)#109
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Invoke(VIRTUAL,Ljwutil/math/BitString$BitStringIterator;,hasNext,()Z)#110
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#Get(I,NONSTATIC,Ljwutil/math/BitString$ForwardBitStringIterator;,t)#1
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#Constant(I,0)#2
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#ConditionalBranch(I,ne,35)#3
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#Constant(I,1)#35
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#Return(I)#36
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#111
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,11)#112
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Invoke(VIRTUAL,Ljwutil/math/BitString$BitStringIterator;,hasNext,()Z)#113
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#114
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,11)#115
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Invoke(VIRTUAL,Ljwutil/math/BitString$BitStringIterator;,nextIndex,()I)#116
jwutil.math.BitString$ForwardBitStringIterator.nextIndex()I#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.math.BitString$ForwardBitStringIterator.nextIndex()I#Get(I,NONSTATIC,Ljwutil/math/BitString$ForwardBitStringIterator;,t)#1
jwutil.math.BitString$ForwardBitStringIterator.nextIndex()I#Constant(I,0)#2
jwutil.math.BitString$ForwardBitStringIterator.nextIndex()I#ConditionalBranch(I,ne,37)#3
jwutil.math.BitString$ForwardBitStringIterator.nextIndex()I#LocalLoad(Ljava/lang/Object;,0)#37
jwutil.math.BitString$ForwardBitStringIterator.nextIndex()I#Get(I,NONSTATIC,Ljwutil/math/BitString$ForwardBitStringIterator;,t)#38
jwutil.math.BitString$ForwardBitStringIterator.nextIndex()I#LocalLoad(Ljava/lang/Object;,0)#39
jwutil.math.BitString$ForwardBitStringIterator.nextIndex()I#Get(I,NONSTATIC,Ljwutil/math/BitString$ForwardBitStringIterator;,t)#40
jwutil.math.BitString$ForwardBitStringIterator.nextIndex()I#UnaryOp(I,neg)#41
jwutil.math.BitString$ForwardBitStringIterator.nextIndex()I#BinaryOp(I,xor)#42
jwutil.math.BitString$ForwardBitStringIterator.nextIndex()I#LocalStore(I,1)#43
jwutil.math.BitString$ForwardBitStringIterator.nextIndex()I#Constant(I,31)#44
jwutil.math.BitString$ForwardBitStringIterator.nextIndex()I#LocalLoad(I,1)#45
jwutil.math.BitString$ForwardBitStringIterator.nextIndex()I#Invoke(STATIC,Ljwutil/math/BitString;,popcount,(I)B)#46
jwutil.math.BitString$ForwardBitStringIterator.nextIndex()I#BinaryOp(I,sub)#47
jwutil.math.BitString$ForwardBitStringIterator.nextIndex()I#LocalStore(I,2)#48
jwutil.math.BitString$ForwardBitStringIterator.nextIndex()I#LocalLoad(Ljava/lang/Object;,0)#49
jwutil.math.BitString$ForwardBitStringIterator.nextIndex()I#Dup(1,0)#50
jwutil.math.BitString$ForwardBitStringIterator.nextIndex()I#Get(I,NONSTATIC,Ljwutil/math/BitString$ForwardBitStringIterator;,t)#51
jwutil.math.BitString$ForwardBitStringIterator.nextIndex()I#LocalLoad(I,1)#52
jwutil.math.BitString$ForwardBitStringIterator.nextIndex()I#BinaryOp(I,and)#53
jwutil.math.BitString$ForwardBitStringIterator.nextIndex()I#Put(I,NONSTATIC,Ljwutil/math/BitString$ForwardBitStringIterator;,t)#54
jwutil.math.BitString$ForwardBitStringIterator.nextIndex()I#LocalLoad(Ljava/lang/Object;,0)#55
jwutil.math.BitString$ForwardBitStringIterator.nextIndex()I#Get(I,NONSTATIC,Ljwutil/math/BitString$ForwardBitStringIterator;,k)#56
jwutil.math.BitString$ForwardBitStringIterator.nextIndex()I#LocalLoad(I,2)#57
jwutil.math.BitString$ForwardBitStringIterator.nextIndex()I#BinaryOp(I,add)#58
jwutil.math.BitString$ForwardBitStringIterator.nextIndex()I#Return(I)#59
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(I,12)#117
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,8)#118
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,basic_blocks)#119
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,9)#120
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,1)#121
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#BinaryOp(I,sub)#122
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ArrayLoad(Ljava/lang/Object;)#123
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,12)#124
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,1)#125
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#BinaryOp(I,sub)#126
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Put(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,end)#127
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,12)#128
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,2)#129
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ArrayLength()#130
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ConditionalBranch(I,ne,133)#131
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,8)#133
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,basic_blocks)#134
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,9)#135
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#New(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,0)#136
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Dup(1,0)#137
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,9)#138
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,12)#139
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Invoke(SPECIAL,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,<init>,(II)V)#140
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Dup(1,2)#141
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ArrayStore(Ljava/lang/Object;)#142
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(Ljava/lang/Object;,10)#143
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,9)#144
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,1)#145
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#BinaryOp(I,add)#146
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(I,9)#147
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Goto(112)#148
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#LocalLoad(Ljava/lang/Object;,0)#4
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#Get(I,NONSTATIC,Ljwutil/math/BitString$ForwardBitStringIterator;,j)#5
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#LocalLoad(Ljava/lang/Object;,0)#6
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#Get(Ljwutil/math/BitString;,NONSTATIC,Ljwutil/math/BitString$ForwardBitStringIterator;,this$0)#7
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#Invoke(STATIC,Ljwutil/math/BitString;,access$000,(Ljwutil/math/BitString;)[I)#8
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#ArrayLength()#9
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#Constant(I,1)#10
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#BinaryOp(I,sub)#11
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#ConditionalBranch(I,ne,15)#12
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#LocalLoad(Ljava/lang/Object;,0)#15
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#LocalLoad(Ljava/lang/Object;,0)#16
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#Get(Ljwutil/math/BitString;,NONSTATIC,Ljwutil/math/BitString$ForwardBitStringIterator;,this$0)#17
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#Invoke(STATIC,Ljwutil/math/BitString;,access$000,(Ljwutil/math/BitString;)[I)#18
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#LocalLoad(Ljava/lang/Object;,0)#19
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#Dup(1,0)#20
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#Get(I,NONSTATIC,Ljwutil/math/BitString$ForwardBitStringIterator;,j)#21
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#Constant(I,1)#22
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#BinaryOp(I,add)#23
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#Dup(1,1)#24
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#Put(I,NONSTATIC,Ljwutil/math/BitString$ForwardBitStringIterator;,j)#25
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#ArrayLoad(I)#26
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#Put(I,NONSTATIC,Ljwutil/math/BitString$ForwardBitStringIterator;,t)#27
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#LocalLoad(Ljava/lang/Object;,0)#28
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#Dup(1,0)#29
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#Get(I,NONSTATIC,Ljwutil/math/BitString$ForwardBitStringIterator;,k)#30
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#Constant(I,32)#31
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#BinaryOp(I,add)#32
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#Put(I,NONSTATIC,Ljwutil/math/BitString$ForwardBitStringIterator;,k)#33
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#Goto(0)#34
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Goto(149)#132
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,11)#149
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Invoke(VIRTUAL,Ljwutil/math/BitString$BitStringIterator;,hasNext,()Z)#150
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#Constant(I,0)#13
jwutil.math.BitString$ForwardBitStringIterator.hasNext()Z#Return(I)#14
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,0)#151
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ConditionalBranch(I,ne,155)#152
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,1)#153
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Goto(156)#154
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#156
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,9)#157
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,6)#158
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ConditionalBranch(I,ne,162)#159
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,1)#160
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Goto(163)#161
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#163
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,8)#164
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,basic_blocks)#165
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,0)#166
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ArrayLoad(Ljava/lang/Object;)#167
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,-1)#168
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Put(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,end)#169
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,8)#170
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,basic_blocks)#171
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,0)#172
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ArrayLoad(Ljava/lang/Object;)#173
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,1)#174
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#New([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,1)#175
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Put([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,successors)#176
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,8)#177
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,basic_blocks)#178
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,0)#179
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ArrayLoad(Ljava/lang/Object;)#180
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,successors)#181
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,0)#182
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,8)#183
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,basic_blocks)#184
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,2)#185
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ArrayLoad(Ljava/lang/Object;)#186
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ArrayStore(Ljava/lang/Object;)#187
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,8)#188
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,basic_blocks)#189
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,0)#190
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ArrayLoad(Ljava/lang/Object;)#191
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,8)#192
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,basic_blocks)#193
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,1)#194
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ArrayLoad(Ljava/lang/Object;)#195
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,0)#196
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#New([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,1)#197
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Dup(1,1)#198
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Put([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,successors)#199
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Put([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,predecessors)#200
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,10)#201
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,2)#202
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ArrayLength()#203
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,1)#204
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#BinaryOp(I,sub)#205
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Put(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,end)#206
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,7)#207
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,2)#208
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,1)#209
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ArrayStore(I)#210
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,4)#211
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Invoke(VIRTUAL,Ljwutil/math/BitString;,iterator,()Ljwutil/math/BitString$ForwardBitStringIterator;)#212
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(Ljava/lang/Object;,11)#213
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,2)#214
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(I,9)#215
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#New(Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$BranchVisitor;,0)#216
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Dup(1,0)#217
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#218
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,8)#219
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,7)#220
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Invoke(SPECIAL,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$BranchVisitor;,<init>,(Ljoeq/Class/jq_Method;Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;[I)V)#221
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.<init>(Ljoeq/Class/jq_Method;Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;[I)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.<init>(Ljoeq/Class/jq_Method;Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;[I)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.<init>(Ljoeq/Class/jq_Method;Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;[I)V#Invoke(SPECIAL,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,<init>,(Ljoeq/Class/jq_Method;)V)#2
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.<init>(Ljoeq/Class/jq_Method;Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;[I)V#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.<init>(Ljoeq/Class/jq_Method;Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;[I)V#LocalLoad(Ljava/lang/Object;,2)#4
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.<init>(Ljoeq/Class/jq_Method;Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;[I)V#Put(Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$BranchVisitor;,cfg)#5
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.<init>(Ljoeq/Class/jq_Method;Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;[I)V#LocalLoad(Ljava/lang/Object;,0)#6
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.<init>(Ljoeq/Class/jq_Method;Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;[I)V#LocalLoad(Ljava/lang/Object;,3)#7
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.<init>(Ljoeq/Class/jq_Method;Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;[I)V#Put([I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$BranchVisitor;,n_pred)#8
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.<init>(Ljoeq/Class/jq_Method;Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;[I)V#Return(V)#9
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(Ljava/lang/Object;,12)#222
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,11)#223
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Invoke(VIRTUAL,Ljwutil/math/BitString$BitStringIterator;,hasNext,()Z)#224
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,0)#225
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ConditionalBranch(I,eq,282)#226
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,11)#227
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Invoke(VIRTUAL,Ljwutil/math/BitString$BitStringIterator;,nextIndex,()I)#228
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(I,13)#229
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,8)#230
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,basic_blocks)#231
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,9)#232
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ArrayLoad(Ljava/lang/Object;)#233
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(Ljava/lang/Object;,10)#234
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,13)#235
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,10)#236
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Get(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,end)#237
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ConditionalBranch(I,le,269)#238
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,12)#269
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,10)#270
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Put(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$BranchVisitor;,bb)#271
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,12)#272
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,13)#273
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$BranchVisitor;,setLocation,(I)V)#274
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.setLocation(I)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.setLocation(I)V#LocalLoad(I,1)#1
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.setLocation(I)V#Put(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$BranchVisitor;,i_start)#2
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.setLocation(I)V#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.setLocation(I)V#LocalLoad(I,1)#4
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.setLocation(I)V#Constant(I,1)#5
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.setLocation(I)V#BinaryOp(I,sub)#6
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.setLocation(I)V#Put(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$BranchVisitor;,i_end)#7
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.setLocation(I)V#Return(V)#8
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,12)#275
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$BranchVisitor;,visitBytecode,()V)#276
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.visitVRETURN()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.visitVRETURN()V#Invoke(SPECIAL,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,visitVRETURN,()V)#1
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.visitVRETURN()V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.visitVRETURN()V#Invoke(SPECIAL,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$BranchVisitor;,RETURNhelper,()V)#3
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.RETURNhelper()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.RETURNhelper()V#Get(Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$BranchVisitor;,cfg)#1
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.RETURNhelper()V#Invoke(STATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,access$100,(Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;)[Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)#2
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.access$100(Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;)[Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.access$100(Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;)[Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,basic_blocks)#1
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.access$100(Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;)[Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#Return(Ljava/lang/Object;)#2
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.RETURNhelper()V#Constant(I,1)#3
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.RETURNhelper()V#ArrayLoad(Ljava/lang/Object;)#4
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.RETURNhelper()V#LocalStore(Ljava/lang/Object;,1)#5
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.RETURNhelper()V#LocalLoad(Ljava/lang/Object;,0)#6
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.RETURNhelper()V#Get([I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$BranchVisitor;,n_pred)#7
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.RETURNhelper()V#LocalLoad(Ljava/lang/Object;,1)#8
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.RETURNhelper()V#Get(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,id)#9
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.RETURNhelper()V#Dup(2,0)#10
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.RETURNhelper()V#ArrayLoad(I)#11
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.RETURNhelper()V#Constant(I,1)#12
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.RETURNhelper()V#BinaryOp(I,add)#13
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.RETURNhelper()V#ArrayStore(I)#14
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.RETURNhelper()V#LocalLoad(Ljava/lang/Object;,0)#15
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.RETURNhelper()V#Get(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$BranchVisitor;,bb)#16
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.RETURNhelper()V#Constant(I,1)#17
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.RETURNhelper()V#New([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,1)#18
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.RETURNhelper()V#Put([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,successors)#19
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.RETURNhelper()V#LocalLoad(Ljava/lang/Object;,0)#20
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.RETURNhelper()V#Get(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$BranchVisitor;,bb)#21
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.RETURNhelper()V#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,successors)#22
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.RETURNhelper()V#Constant(I,0)#23
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.RETURNhelper()V#LocalLoad(Ljava/lang/Object;,1)#24
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.RETURNhelper()V#ArrayStore(Ljava/lang/Object;)#25
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.RETURNhelper()V#Return(V)#26
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$BranchVisitor.visitVRETURN()V#Return(V)#4
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,9)#277
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,1)#278
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#BinaryOp(I,add)#279
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(I,9)#280
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Goto(223)#281
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,9)#282
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,6)#283
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ConditionalBranch(I,eq,301)#284
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,1)#301
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(I,9)#302
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,9)#303
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,6)#304
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ConditionalBranch(I,ge,334)#305
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,8)#306
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,basic_blocks)#307
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,9)#308
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ArrayLoad(Ljava/lang/Object;)#309
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(Ljava/lang/Object;,10)#310
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,10)#311
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,7)#312
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,9)#313
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ArrayLoad(I)#314
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#New([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,1)#315
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Put([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,predecessors)#316
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,10)#317
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,successors)#318
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(L;,null)#319
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ConditionalBranch(Ljava/lang/Object;,eq,323)#320
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,1)#321
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Goto(324)#322
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#324
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,7)#325
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,9)#326
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,-1)#327
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ArrayStore(I)#328
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,9)#329
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,1)#330
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#BinaryOp(I,add)#331
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(I,9)#332
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Goto(303)#333
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,0)#334
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(I,9)#335
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,9)#336
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,6)#337
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ConditionalBranch(I,ge,379)#338
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,8)#339
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,basic_blocks)#340
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,9)#341
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ArrayLoad(Ljava/lang/Object;)#342
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(Ljava/lang/Object;,10)#343
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,0)#344
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(I,13)#345
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,13)#346
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,10)#347
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,successors)#348
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ArrayLength()#349
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ConditionalBranch(I,ge,374)#350
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,10)#351
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,successors)#352
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,13)#353
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ArrayLoad(Ljava/lang/Object;)#354
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(Ljava/lang/Object;,14)#355
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,14)#356
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,predecessors)#357
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,7)#358
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,14)#359
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Get(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,id)#360
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Dup(2,0)#361
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ArrayLoad(I)#362
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,1)#363
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#BinaryOp(I,add)#364
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Dup(1,2)#365
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ArrayStore(I)#366
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,10)#367
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ArrayStore(Ljava/lang/Object;)#368
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,13)#369
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,1)#370
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#BinaryOp(I,add)#371
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(I,13)#372
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Goto(346)#373
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,9)#374
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,1)#375
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#BinaryOp(I,add)#376
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(I,9)#377
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Goto(336)#378
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,5)#379
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ArrayLength()#380
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,1)#381
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#BinaryOp(I,sub)#382
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalStore(I,13)#383
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(I,13)#384
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,0)#385
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ConditionalBranch(I,lt,501)#386
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,1)#501
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Invoke(STATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$InitialPass;,access$000,(Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$InitialPass;)I)#502
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.access$000(Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$InitialPass;)I#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.access$000(Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$InitialPass;)I#Get(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$InitialPass;,nJsrs)#1
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$InitialPass.access$000(Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$InitialPass;)I#Return(I)#2
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Constant(I,0)#503
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#ConditionalBranch(I,le,513)#504
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,8)#513
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.computeCFG(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;#Return(Ljava/lang/Object;)#514
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Put(Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,bc_cfg)#4
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#New(Ljoeq/Compiler/Quad/RegisterFactory;,0)#6
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Dup(1,0)#7
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#8
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Ljoeq/Class/jq_Method;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,method)#9
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(SPECIAL,Ljoeq/Compiler/Quad/RegisterFactory;,<init>,(Ljoeq/Class/jq_Method;)V)#10
joeq.Compiler.Quad.RegisterFactory.<init>(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.RegisterFactory.<init>(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Compiler.Quad.RegisterFactory.<init>(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getMaxStack,()C)#2
joeq.Class.jq_Method.getMaxStack()C#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Method.getMaxStack()C#Constant(I,5)#1
joeq.Class.jq_Method.getMaxStack()C#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,chkState,(I)V)#2
joeq.Class.jq_Method.getMaxStack()C#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Method.getMaxStack()C#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getBytecode,()[B)#4
joeq.Class.jq_Method.getMaxStack()C#Constant(L;,null)#5
joeq.Class.jq_Method.getMaxStack()C#ConditionalBranch(Ljava/lang/Object;,eq,9)#6
joeq.Class.jq_Method.getMaxStack()C#Constant(I,1)#7
joeq.Class.jq_Method.getMaxStack()C#Goto(10)#8
joeq.Class.jq_Method.getMaxStack()C#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#10
joeq.Class.jq_Method.getMaxStack()C#LocalLoad(Ljava/lang/Object;,0)#11
joeq.Class.jq_Method.getMaxStack()C#Get(C,NONSTATIC,Ljoeq/Class/jq_Method;,max_stack)#12
joeq.Class.jq_Method.getMaxStack()C#Return(I)#13
joeq.Compiler.Quad.RegisterFactory.<init>(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Compiler.Quad.RegisterFactory.<init>(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getMaxLocals,()C)#4
joeq.Class.jq_Method.getMaxLocals()C#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Method.getMaxLocals()C#Constant(I,5)#1
joeq.Class.jq_Method.getMaxLocals()C#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,chkState,(I)V)#2
joeq.Class.jq_Method.getMaxLocals()C#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Method.getMaxLocals()C#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getBytecode,()[B)#4
joeq.Class.jq_Method.getMaxLocals()C#Constant(L;,null)#5
joeq.Class.jq_Method.getMaxLocals()C#ConditionalBranch(Ljava/lang/Object;,eq,9)#6
joeq.Class.jq_Method.getMaxLocals()C#Constant(I,1)#7
joeq.Class.jq_Method.getMaxLocals()C#Goto(10)#8
joeq.Class.jq_Method.getMaxLocals()C#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#10
joeq.Class.jq_Method.getMaxLocals()C#LocalLoad(Ljava/lang/Object;,0)#11
joeq.Class.jq_Method.getMaxLocals()C#Get(C,NONSTATIC,Ljoeq/Class/jq_Method;,max_locals)#12
joeq.Class.jq_Method.getMaxLocals()C#Return(I)#13
joeq.Compiler.Quad.RegisterFactory.<init>(Ljoeq/Class/jq_Method;)V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/RegisterFactory;,<init>,(II)V)#5
joeq.Compiler.Quad.RegisterFactory.<init>(II)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.RegisterFactory.<init>(II)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.Quad.RegisterFactory.<init>(II)V#LocalLoad(I,1)#2
joeq.Compiler.Quad.RegisterFactory.<init>(II)V#LocalLoad(I,2)#3
joeq.Compiler.Quad.RegisterFactory.<init>(II)V#BinaryOp(I,add)#4
joeq.Compiler.Quad.RegisterFactory.<init>(II)V#Constant(I,2)#5
joeq.Compiler.Quad.RegisterFactory.<init>(II)V#BinaryOp(I,mul)#6
joeq.Compiler.Quad.RegisterFactory.<init>(II)V#LocalStore(I,3)#7
joeq.Compiler.Quad.RegisterFactory.<init>(II)V#LocalLoad(Ljava/lang/Object;,0)#8
joeq.Compiler.Quad.RegisterFactory.<init>(II)V#New(Ljava/util/ArrayList;,0)#9
joeq.Compiler.Quad.RegisterFactory.<init>(II)V#Dup(1,0)#10
joeq.Compiler.Quad.RegisterFactory.<init>(II)V#LocalLoad(I,3)#11
joeq.Compiler.Quad.RegisterFactory.<init>(II)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,(I)V)#12
joeq.Compiler.Quad.RegisterFactory.<init>(II)V#Put(Ljava/util/ArrayList;,NONSTATIC,Ljoeq/Compiler/Quad/RegisterFactory;,registers)#13
joeq.Compiler.Quad.RegisterFactory.<init>(II)V#LocalLoad(Ljava/lang/Object;,0)#14
joeq.Compiler.Quad.RegisterFactory.<init>(II)V#New(Ljava/util/HashMap;,0)#15
joeq.Compiler.Quad.RegisterFactory.<init>(II)V#Dup(1,0)#16
joeq.Compiler.Quad.RegisterFactory.<init>(II)V#LocalLoad(I,1)#17
joeq.Compiler.Quad.RegisterFactory.<init>(II)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(I)V)#18
joeq.Compiler.Quad.RegisterFactory.<init>(II)V#Put(Ljava/util/Map;,NONSTATIC,Ljoeq/Compiler/Quad/RegisterFactory;,stackNumbering)#19
joeq.Compiler.Quad.RegisterFactory.<init>(II)V#LocalLoad(Ljava/lang/Object;,0)#20
joeq.Compiler.Quad.RegisterFactory.<init>(II)V#New(Ljava/util/HashMap;,0)#21
joeq.Compiler.Quad.RegisterFactory.<init>(II)V#Dup(1,0)#22
joeq.Compiler.Quad.RegisterFactory.<init>(II)V#LocalLoad(I,2)#23
joeq.Compiler.Quad.RegisterFactory.<init>(II)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(I)V)#24
joeq.Compiler.Quad.RegisterFactory.<init>(II)V#Put(Ljava/util/Map;,NONSTATIC,Ljoeq/Compiler/Quad/RegisterFactory;,localNumbering)#25
joeq.Compiler.Quad.RegisterFactory.<init>(II)V#Return(V)#26
joeq.Compiler.Quad.RegisterFactory.<init>(Ljoeq/Class/jq_Method;)V#Return(V)#6
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Put(Ljoeq/Compiler/Quad/RegisterFactory;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,rf)#11
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#12
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Ljoeq/Class/jq_Method;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,method)#13
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getExceptionTable,()[Ljoeq/Class/jq_TryCatchBC;)#14
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalStore(Ljava/lang/Object;,1)#15
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#16
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#New(Ljoeq/Compiler/Quad/ControlFlowGraph;,0)#17
joeq.Compiler.Quad.ControlFlowGraph.<clinit>()V#Constant(L;,null)#0
joeq.Compiler.Quad.ControlFlowGraph.<clinit>()V#Put(Ljava/util/Map;,STATIC,Ljoeq/Compiler/Quad/ControlFlowGraph;,correspondenceMap)#1
joeq.Compiler.Quad.ControlFlowGraph.<clinit>()V#Return(V)#2
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Dup(1,0)#18
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#19
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Ljoeq/Class/jq_Method;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,method)#20
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#21
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,bc_cfg)#22
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,getExit,()Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)#23
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.getExit()Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.getExit()Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,basic_blocks)#1
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.getExit()Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#Constant(I,1)#2
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.getExit()Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#ArrayLoad(Ljava/lang/Object;)#3
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.getExit()Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#Return(Ljava/lang/Object;)#4
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,getNumberOfPredecessors,()I)#24
joeq.Compiler.BytecodeAnalysis.BasicBlock.getNumberOfPredecessors()I#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.BasicBlock.getNumberOfPredecessors()I#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,predecessors)#1
joeq.Compiler.BytecodeAnalysis.BasicBlock.getNumberOfPredecessors()I#ArrayLength()#2
joeq.Compiler.BytecodeAnalysis.BasicBlock.getNumberOfPredecessors()I#Return(I)#3
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,1)#25
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#ArrayLength()#26
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#27
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Ljoeq/Compiler/Quad/RegisterFactory;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,rf)#28
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(SPECIAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,<init>,(Ljoeq/Class/jq_Method;IILjoeq/Compiler/Quad/RegisterFactory;)V)#29
joeq.Compiler.Quad.ControlFlowGraph.<init>(Ljoeq/Class/jq_Method;IILjoeq/Compiler/Quad/RegisterFactory;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.ControlFlowGraph.<init>(Ljoeq/Class/jq_Method;IILjoeq/Compiler/Quad/RegisterFactory;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.Quad.ControlFlowGraph.<init>(Ljoeq/Class/jq_Method;IILjoeq/Compiler/Quad/RegisterFactory;)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.ControlFlowGraph.<init>(Ljoeq/Class/jq_Method;IILjoeq/Compiler/Quad/RegisterFactory;)V#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Compiler.Quad.ControlFlowGraph.<init>(Ljoeq/Class/jq_Method;IILjoeq/Compiler/Quad/RegisterFactory;)V#Put(Ljoeq/Class/jq_Method;,NONSTATIC,Ljoeq/Compiler/Quad/ControlFlowGraph;,method)#4
joeq.Compiler.Quad.ControlFlowGraph.<init>(Ljoeq/Class/jq_Method;IILjoeq/Compiler/Quad/RegisterFactory;)V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Compiler.Quad.ControlFlowGraph.<init>(Ljoeq/Class/jq_Method;IILjoeq/Compiler/Quad/RegisterFactory;)V#LocalLoad(Ljava/lang/Object;,1)#6
joeq.Compiler.Quad.ControlFlowGraph.<init>(Ljoeq/Class/jq_Method;IILjoeq/Compiler/Quad/RegisterFactory;)V#Invoke(STATIC,Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;,createStartNode,(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;)#7
joeq.Compiler.Quad.EntryOrExitBasicBlock.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@cdd758d2)#0
joeq.Compiler.Quad.EntryOrExitBasicBlock.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
joeq.Compiler.Quad.EntryOrExitBasicBlock.<clinit>()V#Constant(I,0)#2
joeq.Compiler.Quad.EntryOrExitBasicBlock.<clinit>()V#ConditionalBranch(I,ne,6)#3
joeq.Compiler.Quad.EntryOrExitBasicBlock.<clinit>()V#Constant(I,0)#6
joeq.Compiler.Quad.EntryOrExitBasicBlock.<clinit>()V#Put(Z,STATIC,Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;,$assertionsDisabled)#7
joeq.Compiler.Quad.EntryOrExitBasicBlock.<clinit>()V#Return(V)#8
joeq.Compiler.Quad.EntryOrExitBasicBlock.createStartNode(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;#New(Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;,0)#0
joeq.Compiler.Quad.EntryOrExitBasicBlock.createStartNode(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;#Dup(1,0)#1
joeq.Compiler.Quad.EntryOrExitBasicBlock.createStartNode(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.EntryOrExitBasicBlock.createStartNode(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;#Invoke(SPECIAL,Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;,<init>,(Ljoeq/Class/jq_Method;)V)#3
joeq.Compiler.Quad.EntryOrExitBasicBlock.<init>(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.EntryOrExitBasicBlock.<init>(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Compiler.Quad.EntryOrExitBasicBlock.<init>(Ljoeq/Class/jq_Method;)V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/BasicBlock;,<init>,(Ljoeq/Class/jq_Method;)V)#2
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;)V#Constant(I,0)#3
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;)V#Put(I,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,id_number)#4
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#6
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;)V#Put(Ljoeq/Class/jq_Method;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,method)#7
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#8
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;)V#Constant(L;,null)#9
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;)V#Put(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,instructions)#10
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#11
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;)V#Constant(L;,null)#12
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;)V#Put(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,predecessors)#13
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#14
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;)V#New(Ljava/util/ArrayList;,0)#15
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;)V#Dup(1,0)#16
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;)V#Constant(I,1)#17
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,(I)V)#18
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;)V#Put(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,successors)#19
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#20
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;)V#Constant(L;,null)#21
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;)V#Put(Ljoeq/Compiler/Quad/ExceptionHandlerList;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,exception_handler_list)#22
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;)V#Return(V)#23
joeq.Compiler.Quad.EntryOrExitBasicBlock.<init>(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Compiler.Quad.EntryOrExitBasicBlock.<init>(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#4
joeq.Compiler.Quad.EntryOrExitBasicBlock.<init>(Ljoeq/Class/jq_Method;)V#Put(Ljoeq/Class/jq_Method;,NONSTATIC,Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;,method)#5
joeq.Compiler.Quad.EntryOrExitBasicBlock.<init>(Ljoeq/Class/jq_Method;)V#Return(V)#6
joeq.Compiler.Quad.EntryOrExitBasicBlock.createStartNode(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;#Return(Ljava/lang/Object;)#4
joeq.Compiler.Quad.ControlFlowGraph.<init>(Ljoeq/Class/jq_Method;IILjoeq/Compiler/Quad/RegisterFactory;)V#Put(Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/ControlFlowGraph;,start_node)#8
joeq.Compiler.Quad.ControlFlowGraph.<init>(Ljoeq/Class/jq_Method;IILjoeq/Compiler/Quad/RegisterFactory;)V#LocalLoad(Ljava/lang/Object;,0)#9
joeq.Compiler.Quad.ControlFlowGraph.<init>(Ljoeq/Class/jq_Method;IILjoeq/Compiler/Quad/RegisterFactory;)V#LocalLoad(Ljava/lang/Object;,1)#10
joeq.Compiler.Quad.ControlFlowGraph.<init>(Ljoeq/Class/jq_Method;IILjoeq/Compiler/Quad/RegisterFactory;)V#LocalLoad(I,2)#11
joeq.Compiler.Quad.ControlFlowGraph.<init>(Ljoeq/Class/jq_Method;IILjoeq/Compiler/Quad/RegisterFactory;)V#Invoke(STATIC,Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;,createEndNode,(Ljoeq/Class/jq_Method;I)Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;)#12
joeq.Compiler.Quad.EntryOrExitBasicBlock.createEndNode(Ljoeq/Class/jq_Method;I)Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;#New(Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;,0)#0
joeq.Compiler.Quad.EntryOrExitBasicBlock.createEndNode(Ljoeq/Class/jq_Method;I)Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;#Dup(1,0)#1
joeq.Compiler.Quad.EntryOrExitBasicBlock.createEndNode(Ljoeq/Class/jq_Method;I)Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.EntryOrExitBasicBlock.createEndNode(Ljoeq/Class/jq_Method;I)Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;#LocalLoad(I,1)#3
joeq.Compiler.Quad.EntryOrExitBasicBlock.createEndNode(Ljoeq/Class/jq_Method;I)Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;#Invoke(SPECIAL,Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;,<init>,(Ljoeq/Class/jq_Method;I)V)#4
joeq.Compiler.Quad.EntryOrExitBasicBlock.<init>(Ljoeq/Class/jq_Method;I)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.EntryOrExitBasicBlock.<init>(Ljoeq/Class/jq_Method;I)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Compiler.Quad.EntryOrExitBasicBlock.<init>(Ljoeq/Class/jq_Method;I)V#LocalLoad(I,2)#2
joeq.Compiler.Quad.EntryOrExitBasicBlock.<init>(Ljoeq/Class/jq_Method;I)V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/BasicBlock;,<init>,(Ljoeq/Class/jq_Method;I)V)#3
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;I)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;I)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;I)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;I)V#Constant(I,1)#3
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;I)V#Put(I,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,id_number)#4
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;I)V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;I)V#LocalLoad(Ljava/lang/Object;,1)#6
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;I)V#Put(Ljoeq/Class/jq_Method;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,method)#7
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;I)V#LocalLoad(Ljava/lang/Object;,0)#8
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;I)V#Constant(L;,null)#9
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;I)V#Put(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,instructions)#10
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;I)V#LocalLoad(Ljava/lang/Object;,0)#11
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;I)V#Constant(L;,null)#12
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;I)V#Put(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,successors)#13
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;I)V#LocalLoad(Ljava/lang/Object;,0)#14
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;I)V#New(Ljava/util/ArrayList;,0)#15
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;I)V#Dup(1,0)#16
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;I)V#LocalLoad(I,2)#17
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;I)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,(I)V)#18
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;I)V#Put(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,predecessors)#19
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;I)V#LocalLoad(Ljava/lang/Object;,0)#20
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;I)V#Constant(L;,null)#21
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;I)V#Put(Ljoeq/Compiler/Quad/ExceptionHandlerList;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,exception_handler_list)#22
joeq.Compiler.Quad.BasicBlock.<init>(Ljoeq/Class/jq_Method;I)V#Return(V)#23
joeq.Compiler.Quad.EntryOrExitBasicBlock.<init>(Ljoeq/Class/jq_Method;I)V#LocalLoad(Ljava/lang/Object;,0)#4
joeq.Compiler.Quad.EntryOrExitBasicBlock.<init>(Ljoeq/Class/jq_Method;I)V#LocalLoad(Ljava/lang/Object;,1)#5
joeq.Compiler.Quad.EntryOrExitBasicBlock.<init>(Ljoeq/Class/jq_Method;I)V#Put(Ljoeq/Class/jq_Method;,NONSTATIC,Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;,method)#6
joeq.Compiler.Quad.EntryOrExitBasicBlock.<init>(Ljoeq/Class/jq_Method;I)V#Return(V)#7
joeq.Compiler.Quad.EntryOrExitBasicBlock.createEndNode(Ljoeq/Class/jq_Method;I)Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;#Return(Ljava/lang/Object;)#5
joeq.Compiler.Quad.ControlFlowGraph.<init>(Ljoeq/Class/jq_Method;IILjoeq/Compiler/Quad/RegisterFactory;)V#Put(Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/ControlFlowGraph;,end_node)#13
joeq.Compiler.Quad.ControlFlowGraph.<init>(Ljoeq/Class/jq_Method;IILjoeq/Compiler/Quad/RegisterFactory;)V#LocalLoad(Ljava/lang/Object;,0)#14
joeq.Compiler.Quad.ControlFlowGraph.<init>(Ljoeq/Class/jq_Method;IILjoeq/Compiler/Quad/RegisterFactory;)V#New(Ljava/util/ArrayList;,0)#15
joeq.Compiler.Quad.ControlFlowGraph.<init>(Ljoeq/Class/jq_Method;IILjoeq/Compiler/Quad/RegisterFactory;)V#Dup(1,0)#16
joeq.Compiler.Quad.ControlFlowGraph.<init>(Ljoeq/Class/jq_Method;IILjoeq/Compiler/Quad/RegisterFactory;)V#LocalLoad(I,3)#17
joeq.Compiler.Quad.ControlFlowGraph.<init>(Ljoeq/Class/jq_Method;IILjoeq/Compiler/Quad/RegisterFactory;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,(I)V)#18
joeq.Compiler.Quad.ControlFlowGraph.<init>(Ljoeq/Class/jq_Method;IILjoeq/Compiler/Quad/RegisterFactory;)V#Put(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Quad/ControlFlowGraph;,exception_handlers)#19
joeq.Compiler.Quad.ControlFlowGraph.<init>(Ljoeq/Class/jq_Method;IILjoeq/Compiler/Quad/RegisterFactory;)V#LocalLoad(Ljava/lang/Object;,0)#20
joeq.Compiler.Quad.ControlFlowGraph.<init>(Ljoeq/Class/jq_Method;IILjoeq/Compiler/Quad/RegisterFactory;)V#LocalLoad(Ljava/lang/Object;,4)#21
joeq.Compiler.Quad.ControlFlowGraph.<init>(Ljoeq/Class/jq_Method;IILjoeq/Compiler/Quad/RegisterFactory;)V#Put(Ljoeq/Compiler/Quad/RegisterFactory;,NONSTATIC,Ljoeq/Compiler/Quad/ControlFlowGraph;,rf)#22
joeq.Compiler.Quad.ControlFlowGraph.<init>(Ljoeq/Class/jq_Method;IILjoeq/Compiler/Quad/RegisterFactory;)V#LocalLoad(Ljava/lang/Object;,0)#23
joeq.Compiler.Quad.ControlFlowGraph.<init>(Ljoeq/Class/jq_Method;IILjoeq/Compiler/Quad/RegisterFactory;)V#Constant(I,1)#24
joeq.Compiler.Quad.ControlFlowGraph.<init>(Ljoeq/Class/jq_Method;IILjoeq/Compiler/Quad/RegisterFactory;)V#Put(I,NONSTATIC,Ljoeq/Compiler/Quad/ControlFlowGraph;,bb_counter)#25
joeq.Compiler.Quad.ControlFlowGraph.<init>(Ljoeq/Class/jq_Method;IILjoeq/Compiler/Quad/RegisterFactory;)V#LocalLoad(Ljava/lang/Object;,0)#26
joeq.Compiler.Quad.ControlFlowGraph.<init>(Ljoeq/Class/jq_Method;IILjoeq/Compiler/Quad/RegisterFactory;)V#Constant(I,0)#27
joeq.Compiler.Quad.ControlFlowGraph.<init>(Ljoeq/Class/jq_Method;IILjoeq/Compiler/Quad/RegisterFactory;)V#Put(I,NONSTATIC,Ljoeq/Compiler/Quad/ControlFlowGraph;,quad_counter)#28
joeq.Compiler.Quad.ControlFlowGraph.<init>(Ljoeq/Class/jq_Method;IILjoeq/Compiler/Quad/RegisterFactory;)V#Return(V)#29
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Put(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_cfg)#30
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#31
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#32
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,bc_cfg)#33
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,getNumberOfBasicBlocks,()I)#34
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.getNumberOfBasicBlocks()I#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.getNumberOfBasicBlocks()I#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,basic_blocks)#1
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.getNumberOfBasicBlocks()I#ArrayLength()#2
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.getNumberOfBasicBlocks()I#Return(I)#3
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#New([Ljoeq/Compiler/Quad/BasicBlock;,1)#35
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Put([Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_bbs)#36
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#37
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get([Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_bbs)#38
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(I,0)#39
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#40
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_cfg)#41
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,entry,()Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;)#42
joeq.Compiler.Quad.ControlFlowGraph.entry()Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.ControlFlowGraph.entry()Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;#Get(Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/ControlFlowGraph;,start_node)#1
joeq.Compiler.Quad.ControlFlowGraph.entry()Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;#Return(Ljava/lang/Object;)#2
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#ArrayStore(Ljava/lang/Object;)#43
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#44
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get([Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_bbs)#45
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(I,1)#46
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#47
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_cfg)#48
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,exit,()Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;)#49
joeq.Compiler.Quad.ControlFlowGraph.exit()Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.ControlFlowGraph.exit()Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;#Get(Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/ControlFlowGraph;,end_node)#1
joeq.Compiler.Quad.ControlFlowGraph.exit()Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;#Return(Ljava/lang/Object;)#2
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#ArrayStore(Ljava/lang/Object;)#50
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(I,2)#51
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalStore(I,2)#52
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(I,2)#53
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#54
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get([Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_bbs)#55
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#ArrayLength()#56
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#ConditionalBranch(I,ge,93)#57
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#58
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,bc_cfg)#59
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(I,2)#60
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,getBasicBlock,(I)Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)#61
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.getBasicBlock(I)Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.getBasicBlock(I)Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,basic_blocks)#1
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.getBasicBlock(I)Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#LocalLoad(I,1)#2
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.getBasicBlock(I)Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#ArrayLoad(Ljava/lang/Object;)#3
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.getBasicBlock(I)Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#Return(Ljava/lang/Object;)#4
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalStore(Ljava/lang/Object;,3)#62
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,3)#63
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,getNumberOfPredecessors,()I)#64
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalStore(I,4)#65
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,3)#66
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,getNumberOfSuccessors,()I)#67
joeq.Compiler.BytecodeAnalysis.BasicBlock.getNumberOfSuccessors()I#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.BasicBlock.getNumberOfSuccessors()I#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,successors)#1
joeq.Compiler.BytecodeAnalysis.BasicBlock.getNumberOfSuccessors()I#ArrayLength()#2
joeq.Compiler.BytecodeAnalysis.BasicBlock.getNumberOfSuccessors()I#Return(I)#3
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalStore(I,5)#68
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,3)#69
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,getEnd,()I)#70
joeq.Compiler.BytecodeAnalysis.BasicBlock.getEnd()I#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.BasicBlock.getEnd()I#Get(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,end)#1
joeq.Compiler.BytecodeAnalysis.BasicBlock.getEnd()I#Return(I)#2
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,3)#71
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,getStart,()I)#72
joeq.Compiler.BytecodeAnalysis.BasicBlock.getStart()I#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.BasicBlock.getStart()I#Get(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,start)#1
joeq.Compiler.BytecodeAnalysis.BasicBlock.getStart()I#Return(I)#2
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#BinaryOp(I,sub)#73
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(I,1)#74
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#BinaryOp(I,add)#75
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalStore(I,6)#76
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#77
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get([Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_bbs)#78
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(I,2)#79
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(I,2)#80
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#81
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Ljoeq/Class/jq_Method;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,method)#82
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(I,4)#83
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(I,5)#84
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(I,6)#85
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(STATIC,Ljoeq/Compiler/Quad/BasicBlock;,createBasicBlock,(ILjoeq/Class/jq_Method;III)Ljoeq/Compiler/Quad/BasicBlock;)#86
joeq.Compiler.Quad.BasicBlock.createBasicBlock(ILjoeq/Class/jq_Method;III)Ljoeq/Compiler/Quad/BasicBlock;#New(Ljoeq/Compiler/Quad/BasicBlock;,0)#0
joeq.Compiler.Quad.BasicBlock.createBasicBlock(ILjoeq/Class/jq_Method;III)Ljoeq/Compiler/Quad/BasicBlock;#Dup(1,0)#1
joeq.Compiler.Quad.BasicBlock.createBasicBlock(ILjoeq/Class/jq_Method;III)Ljoeq/Compiler/Quad/BasicBlock;#LocalLoad(I,0)#2
joeq.Compiler.Quad.BasicBlock.createBasicBlock(ILjoeq/Class/jq_Method;III)Ljoeq/Compiler/Quad/BasicBlock;#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Compiler.Quad.BasicBlock.createBasicBlock(ILjoeq/Class/jq_Method;III)Ljoeq/Compiler/Quad/BasicBlock;#LocalLoad(I,2)#4
joeq.Compiler.Quad.BasicBlock.createBasicBlock(ILjoeq/Class/jq_Method;III)Ljoeq/Compiler/Quad/BasicBlock;#LocalLoad(I,3)#5
joeq.Compiler.Quad.BasicBlock.createBasicBlock(ILjoeq/Class/jq_Method;III)Ljoeq/Compiler/Quad/BasicBlock;#LocalLoad(I,4)#6
joeq.Compiler.Quad.BasicBlock.createBasicBlock(ILjoeq/Class/jq_Method;III)Ljoeq/Compiler/Quad/BasicBlock;#Constant(L;,null)#7
joeq.Compiler.Quad.BasicBlock.createBasicBlock(ILjoeq/Class/jq_Method;III)Ljoeq/Compiler/Quad/BasicBlock;#Invoke(SPECIAL,Ljoeq/Compiler/Quad/BasicBlock;,<init>,(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)V)#8
joeq.Compiler.Quad.BasicBlock.<init>(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BasicBlock.<init>(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.Quad.BasicBlock.<init>(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.BasicBlock.<init>(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)V#LocalLoad(I,1)#3
joeq.Compiler.Quad.BasicBlock.<init>(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)V#Put(I,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,id_number)#4
joeq.Compiler.Quad.BasicBlock.<init>(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Compiler.Quad.BasicBlock.<init>(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)V#LocalLoad(Ljava/lang/Object;,2)#6
joeq.Compiler.Quad.BasicBlock.<init>(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)V#Put(Ljoeq/Class/jq_Method;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,method)#7
joeq.Compiler.Quad.BasicBlock.<init>(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)V#LocalLoad(Ljava/lang/Object;,0)#8
joeq.Compiler.Quad.BasicBlock.<init>(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)V#New(Ljava/util/ArrayList;,0)#9
joeq.Compiler.Quad.BasicBlock.<init>(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)V#Dup(1,0)#10
joeq.Compiler.Quad.BasicBlock.<init>(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)V#LocalLoad(I,3)#11
joeq.Compiler.Quad.BasicBlock.<init>(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,(I)V)#12
joeq.Compiler.Quad.BasicBlock.<init>(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)V#Put(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,predecessors)#13
joeq.Compiler.Quad.BasicBlock.<init>(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)V#LocalLoad(Ljava/lang/Object;,0)#14
joeq.Compiler.Quad.BasicBlock.<init>(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)V#New(Ljava/util/ArrayList;,0)#15
joeq.Compiler.Quad.BasicBlock.<init>(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)V#Dup(1,0)#16
joeq.Compiler.Quad.BasicBlock.<init>(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)V#LocalLoad(I,4)#17
joeq.Compiler.Quad.BasicBlock.<init>(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,(I)V)#18
joeq.Compiler.Quad.BasicBlock.<init>(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)V#Put(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,successors)#19
joeq.Compiler.Quad.BasicBlock.<init>(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)V#LocalLoad(Ljava/lang/Object;,0)#20
joeq.Compiler.Quad.BasicBlock.<init>(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)V#New(Ljava/util/ArrayList;,0)#21
joeq.Compiler.Quad.BasicBlock.<init>(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)V#Dup(1,0)#22
joeq.Compiler.Quad.BasicBlock.<init>(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)V#LocalLoad(I,5)#23
joeq.Compiler.Quad.BasicBlock.<init>(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,(I)V)#24
joeq.Compiler.Quad.BasicBlock.<init>(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)V#Put(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,instructions)#25
joeq.Compiler.Quad.BasicBlock.<init>(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)V#LocalLoad(Ljava/lang/Object;,0)#26
joeq.Compiler.Quad.BasicBlock.<init>(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)V#LocalLoad(Ljava/lang/Object;,6)#27
joeq.Compiler.Quad.BasicBlock.<init>(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)V#Put(Ljoeq/Compiler/Quad/ExceptionHandlerList;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,exception_handler_list)#28
joeq.Compiler.Quad.BasicBlock.<init>(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)V#Return(V)#29
joeq.Compiler.Quad.BasicBlock.createBasicBlock(ILjoeq/Class/jq_Method;III)Ljoeq/Compiler/Quad/BasicBlock;#Return(Ljava/lang/Object;)#9
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#ArrayStore(Ljava/lang/Object;)#87
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(I,2)#88
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(I,1)#89
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#BinaryOp(I,add)#90
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalStore(I,2)#91
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Goto(53)#92
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#93
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_cfg)#94
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#95
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get([Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_bbs)#96
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#ArrayLength()#97
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,updateBBcounter,(I)V)#98
joeq.Compiler.Quad.ControlFlowGraph.updateBBcounter(I)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.ControlFlowGraph.updateBBcounter(I)V#LocalLoad(I,1)#1
joeq.Compiler.Quad.ControlFlowGraph.updateBBcounter(I)V#Constant(I,1)#2
joeq.Compiler.Quad.ControlFlowGraph.updateBBcounter(I)V#BinaryOp(I,sub)#3
joeq.Compiler.Quad.ControlFlowGraph.updateBBcounter(I)V#Put(I,NONSTATIC,Ljoeq/Compiler/Quad/ControlFlowGraph;,bb_counter)#4
joeq.Compiler.Quad.ControlFlowGraph.updateBBcounter(I)V#Return(V)#5
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,1)#99
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#ArrayLength()#100
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(I,1)#101
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#BinaryOp(I,sub)#102
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalStore(I,2)#103
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(I,2)#104
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(I,0)#105
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#ConditionalBranch(I,lt,216)#106
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#216
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#217
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get([Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_bbs)#218
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#ArrayLength()#219
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#New([Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,1)#220
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Put([Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,start_states)#221
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(I,0)#222
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalStore(I,2)#223
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(I,2)#224
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#225
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get([Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_bbs)#226
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#ArrayLength()#227
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#ConditionalBranch(I,ge,284)#228
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#229
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,bc_cfg)#230
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(I,2)#231
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,getBasicBlock,(I)Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)#232
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalStore(Ljava/lang/Object;,3)#233
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#234
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get([Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_bbs)#235
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(I,2)#236
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#ArrayLoad(Ljava/lang/Object;)#237
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalStore(Ljava/lang/Object;,4)#238
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(I,0)#239
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalStore(I,5)#240
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(I,5)#241
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,3)#242
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,getNumberOfPredecessors,()I)#243
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#ConditionalBranch(I,ge,259)#244
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(I,0)#259
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalStore(I,5)#260
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(I,5)#261
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,3)#262
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,getNumberOfSuccessors,()I)#263
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#ConditionalBranch(I,ge,279)#264
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,4)#265
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#266
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get([Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_bbs)#267
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,3)#268
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(I,5)#269
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,getSuccessor,(I)Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)#270
joeq.Compiler.BytecodeAnalysis.BasicBlock.getSuccessor(I)Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.BasicBlock.getSuccessor(I)Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,successors)#1
joeq.Compiler.BytecodeAnalysis.BasicBlock.getSuccessor(I)Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#LocalLoad(I,1)#2
joeq.Compiler.BytecodeAnalysis.BasicBlock.getSuccessor(I)Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#ArrayLoad(Ljava/lang/Object;)#3
joeq.Compiler.BytecodeAnalysis.BasicBlock.getSuccessor(I)Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#Return(Ljava/lang/Object;)#4
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,id)#271
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#ArrayLoad(Ljava/lang/Object;)#272
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,addSuccessor,(Ljoeq/Compiler/Quad/BasicBlock;)V)#273
joeq.Compiler.Quad.BasicBlock.addSuccessor(Ljoeq/Compiler/Quad/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BasicBlock.addSuccessor(Ljoeq/Compiler/Quad/BasicBlock;)V#Get(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,successors)#1
joeq.Compiler.Quad.BasicBlock.addSuccessor(Ljoeq/Compiler/Quad/BasicBlock;)V#Constant(L;,null)#2
joeq.Compiler.Quad.BasicBlock.addSuccessor(Ljoeq/Compiler/Quad/BasicBlock;)V#ConditionalBranch(Ljava/lang/Object;,eq,6)#3
joeq.Compiler.Quad.BasicBlock.addSuccessor(Ljoeq/Compiler/Quad/BasicBlock;)V#Constant(I,1)#4
joeq.Compiler.Quad.BasicBlock.addSuccessor(Ljoeq/Compiler/Quad/BasicBlock;)V#Goto(7)#5
joeq.Compiler.Quad.BasicBlock.addSuccessor(Ljoeq/Compiler/Quad/BasicBlock;)V#Constant(Ljava/lang/String;,"Cannot add successor to exit basic block")#7
joeq.Compiler.Quad.BasicBlock.addSuccessor(Ljoeq/Compiler/Quad/BasicBlock;)V#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(ZLjava/lang/String;)V)#8
joeq.Compiler.Quad.BasicBlock.addSuccessor(Ljoeq/Compiler/Quad/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#9
joeq.Compiler.Quad.BasicBlock.addSuccessor(Ljoeq/Compiler/Quad/BasicBlock;)V#Get(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,successors)#10
joeq.Compiler.Quad.BasicBlock.addSuccessor(Ljoeq/Compiler/Quad/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#11
joeq.Compiler.Quad.BasicBlock.addSuccessor(Ljoeq/Compiler/Quad/BasicBlock;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#12
joeq.Compiler.Quad.BasicBlock.addSuccessor(Ljoeq/Compiler/Quad/BasicBlock;)V#Pop(1)#13
joeq.Compiler.Quad.BasicBlock.addSuccessor(Ljoeq/Compiler/Quad/BasicBlock;)V#Return(V)#14
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(I,5)#274
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(I,1)#275
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#BinaryOp(I,add)#276
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalStore(I,5)#277
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Goto(261)#278
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(I,2)#279
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(I,1)#280
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#BinaryOp(I,add)#281
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalStore(I,2)#282
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Goto(224)#283
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,4)#245
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#246
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get([Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_bbs)#247
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,3)#248
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(I,5)#249
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,getPredecessor,(I)Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)#250
joeq.Compiler.BytecodeAnalysis.BasicBlock.getPredecessor(I)Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.BasicBlock.getPredecessor(I)Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,predecessors)#1
joeq.Compiler.BytecodeAnalysis.BasicBlock.getPredecessor(I)Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#LocalLoad(I,1)#2
joeq.Compiler.BytecodeAnalysis.BasicBlock.getPredecessor(I)Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#ArrayLoad(Ljava/lang/Object;)#3
joeq.Compiler.BytecodeAnalysis.BasicBlock.getPredecessor(I)Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#Return(Ljava/lang/Object;)#4
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,id)#251
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#ArrayLoad(Ljava/lang/Object;)#252
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,addPredecessor,(Ljoeq/Compiler/Quad/BasicBlock;)V)#253
joeq.Compiler.Quad.BasicBlock.addPredecessor(Ljoeq/Compiler/Quad/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BasicBlock.addPredecessor(Ljoeq/Compiler/Quad/BasicBlock;)V#Get(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,predecessors)#1
joeq.Compiler.Quad.BasicBlock.addPredecessor(Ljoeq/Compiler/Quad/BasicBlock;)V#Constant(L;,null)#2
joeq.Compiler.Quad.BasicBlock.addPredecessor(Ljoeq/Compiler/Quad/BasicBlock;)V#ConditionalBranch(Ljava/lang/Object;,eq,6)#3
joeq.Compiler.Quad.BasicBlock.addPredecessor(Ljoeq/Compiler/Quad/BasicBlock;)V#Constant(I,1)#4
joeq.Compiler.Quad.BasicBlock.addPredecessor(Ljoeq/Compiler/Quad/BasicBlock;)V#Goto(7)#5
joeq.Compiler.Quad.BasicBlock.addPredecessor(Ljoeq/Compiler/Quad/BasicBlock;)V#Constant(Ljava/lang/String;,"Cannot add predecessor to entry basic block")#7
joeq.Compiler.Quad.BasicBlock.addPredecessor(Ljoeq/Compiler/Quad/BasicBlock;)V#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(ZLjava/lang/String;)V)#8
joeq.Compiler.Quad.BasicBlock.addPredecessor(Ljoeq/Compiler/Quad/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#9
joeq.Compiler.Quad.BasicBlock.addPredecessor(Ljoeq/Compiler/Quad/BasicBlock;)V#Get(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,predecessors)#10
joeq.Compiler.Quad.BasicBlock.addPredecessor(Ljoeq/Compiler/Quad/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#11
joeq.Compiler.Quad.BasicBlock.addPredecessor(Ljoeq/Compiler/Quad/BasicBlock;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#12
joeq.Compiler.Quad.BasicBlock.addPredecessor(Ljoeq/Compiler/Quad/BasicBlock;)V#Pop(1)#13
joeq.Compiler.Quad.BasicBlock.addPredecessor(Ljoeq/Compiler/Quad/BasicBlock;)V#Return(V)#14
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(I,5)#254
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(I,1)#255
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#BinaryOp(I,add)#256
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalStore(I,5)#257
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Goto(241)#258
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#284
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get([Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,start_states)#285
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(I,2)#286
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#287
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,allocateInitialState,()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)#288
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#New(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,0)#0
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Dup(1,0)#1
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Get(Ljoeq/Class/jq_Method;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,method)#4
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getMaxStack,()C)#5
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Constant(I,1)#6
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#BinaryOp(I,add)#7
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(Ljava/lang/Object;,0)#8
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Get(Ljoeq/Class/jq_Method;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,method)#9
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getMaxLocals,()C)#10
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Constant(L;,null)#11
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Invoke(SPECIAL,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,<init>,(Ljoeq/Compiler/Quad/BytecodeToQuad;IILjoeq/Compiler/Quad/BytecodeToQuad$1;)V)#12
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.<init>(Ljoeq/Compiler/Quad/BytecodeToQuad;IILjoeq/Compiler/Quad/BytecodeToQuad$1;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.<init>(Ljoeq/Compiler/Quad/BytecodeToQuad;IILjoeq/Compiler/Quad/BytecodeToQuad$1;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.<init>(Ljoeq/Compiler/Quad/BytecodeToQuad;IILjoeq/Compiler/Quad/BytecodeToQuad$1;)V#LocalLoad(I,2)#2
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.<init>(Ljoeq/Compiler/Quad/BytecodeToQuad;IILjoeq/Compiler/Quad/BytecodeToQuad$1;)V#LocalLoad(I,3)#3
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.<init>(Ljoeq/Compiler/Quad/BytecodeToQuad;IILjoeq/Compiler/Quad/BytecodeToQuad$1;)V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,<init>,(Ljoeq/Compiler/Quad/BytecodeToQuad;II)V)#4
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.<init>(Ljoeq/Compiler/Quad/BytecodeToQuad;II)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.<init>(Ljoeq/Compiler/Quad/BytecodeToQuad;II)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.<init>(Ljoeq/Compiler/Quad/BytecodeToQuad;II)V#Put(Ljoeq/Compiler/Quad/BytecodeToQuad;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,this$0)#2
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.<init>(Ljoeq/Compiler/Quad/BytecodeToQuad;II)V#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.<init>(Ljoeq/Compiler/Quad/BytecodeToQuad;II)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#4
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.<init>(Ljoeq/Compiler/Quad/BytecodeToQuad;II)V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.<init>(Ljoeq/Compiler/Quad/BytecodeToQuad;II)V#LocalLoad(I,2)#6
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.<init>(Ljoeq/Compiler/Quad/BytecodeToQuad;II)V#New([Ljoeq/Compiler/Quad/Operand;,1)#7
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.<init>(Ljoeq/Compiler/Quad/BytecodeToQuad;II)V#Put([Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,stack)#8
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.<init>(Ljoeq/Compiler/Quad/BytecodeToQuad;II)V#LocalLoad(Ljava/lang/Object;,0)#9
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.<init>(Ljoeq/Compiler/Quad/BytecodeToQuad;II)V#LocalLoad(I,3)#10
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.<init>(Ljoeq/Compiler/Quad/BytecodeToQuad;II)V#New([Ljoeq/Compiler/Quad/Operand;,1)#11
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.<init>(Ljoeq/Compiler/Quad/BytecodeToQuad;II)V#Put([Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,locals)#12
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.<init>(Ljoeq/Compiler/Quad/BytecodeToQuad;II)V#Return(V)#13
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.<init>(Ljoeq/Compiler/Quad/BytecodeToQuad;IILjoeq/Compiler/Quad/BytecodeToQuad$1;)V#Return(V)#5
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalStore(Ljava/lang/Object;,1)#13
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(Ljava/lang/Object;,0)#14
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Get(Ljoeq/Class/jq_Method;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,method)#15
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getParamTypes,()[Ljoeq/Class/jq_Type;)#16
joeq.Class.jq_Method.getParamTypes()[Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Method.getParamTypes()[Ljoeq/Class/jq_Type;#Get([Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_Method;,param_types)#1
joeq.Class.jq_Method.getParamTypes()[Ljoeq/Class/jq_Type;#Return(Ljava/lang/Object;)#2
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalStore(Ljava/lang/Object;,2)#17
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Constant(I,0)#18
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalStore(I,3)#19
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Constant(I,-1)#20
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalStore(I,4)#21
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(I,3)#22
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(Ljava/lang/Object;,2)#23
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#ArrayLength()#24
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#ConditionalBranch(I,ge,60)#25
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(Ljava/lang/Object;,2)#26
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(I,3)#27
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#ArrayLoad(Ljava/lang/Object;)#28
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalStore(Ljava/lang/Object;,5)#29
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(I,4)#30
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Constant(I,1)#31
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#BinaryOp(I,add)#32
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalStore(I,4)#33
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(Ljava/lang/Object;,1)#34
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Invoke(STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,access$100,(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)[Ljoeq/Compiler/Quad/Operand;)#35
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.access$100(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)[Ljoeq/Compiler/Quad/Operand;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.access$100(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)[Ljoeq/Compiler/Quad/Operand;#Get([Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,locals)#1
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.access$100(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)[Ljoeq/Compiler/Quad/Operand;#Return(Ljava/lang/Object;)#2
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(I,4)#36
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(Ljava/lang/Object;,0)#37
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(I,4)#38
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(Ljava/lang/Object;,5)#39
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,makeLocal,(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;)#40
joeq.Compiler.Quad.BytecodeToQuad.makeLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#New(Ljoeq/Compiler/Quad/Operand$RegisterOperand;,0)#0
joeq.Compiler.Quad.BytecodeToQuad.makeLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Dup(1,0)#1
joeq.Compiler.Quad.BytecodeToQuad.makeLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.BytecodeToQuad.makeLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Get(Ljoeq/Compiler/Quad/RegisterFactory;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,rf)#3
joeq.Compiler.Quad.BytecodeToQuad.makeLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#LocalLoad(I,1)#4
joeq.Compiler.Quad.BytecodeToQuad.makeLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#LocalLoad(Ljava/lang/Object;,2)#5
joeq.Compiler.Quad.BytecodeToQuad.makeLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/RegisterFactory;,getOrCreateLocal,(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;)#6
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,2)#0
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,isReferenceType,()Z)#1
joeq.Class.jq_Type.isReferenceType()Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Type.isReferenceType()Z#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,isPrimitiveType,()Z)#1
joeq.Class.jq_Type.isReferenceType()Z#Constant(I,0)#2
joeq.Class.jq_Type.isReferenceType()Z#ConditionalBranch(I,ne,6)#3
joeq.Class.jq_Type.isReferenceType()Z#Constant(I,1)#4
joeq.Class.jq_Type.isReferenceType()Z#Goto(7)#5
joeq.Class.jq_Type.isReferenceType()Z#Return(I)#7
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Constant(I,0)#2
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#ConditionalBranch(I,eq,6)#3
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Invoke(STATIC,Ljoeq/Class/PrimordialClassLoader;,getJavaLangObject,()Ljoeq/Class/jq_Class;)#4
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalStore(Ljava/lang/Object;,2)#5
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,2)#6
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,isIntLike,()Z)#7
joeq.Class.jq_Reference.isIntLike()Z#Constant(I,0)#0
joeq.Class.jq_Reference.isIntLike()Z#Return(I)#1
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Constant(I,0)#8
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#ConditionalBranch(I,eq,12)#9
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#New(Ljwutil/collections/Pair;,0)#12
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Dup(1,0)#13
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,2)#14
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#New(Ljava/lang/Integer;,0)#15
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Dup(1,0)#16
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(I,1)#17
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Invoke(SPECIAL,Ljava/lang/Integer;,<init>,(I)V)#18
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Invoke(SPECIAL,Ljwutil/collections/Pair;,<init>,(Ljava/lang/Object;Ljava/lang/Object;)V)#19
jwutil.collections.Pair.<init>(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.collections.Pair.<init>(Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(SPECIAL,Ljava/util/AbstractList;,<init>,()V)#1
jwutil.collections.Pair.<init>(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#2
jwutil.collections.Pair.<init>(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#3
jwutil.collections.Pair.<init>(Ljava/lang/Object;Ljava/lang/Object;)V#Put(Ljava/lang/Object;,NONSTATIC,Ljwutil/collections/Pair;,left)#4
jwutil.collections.Pair.<init>(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#5
jwutil.collections.Pair.<init>(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,2)#6
jwutil.collections.Pair.<init>(Ljava/lang/Object;Ljava/lang/Object;)V#Put(Ljava/lang/Object;,NONSTATIC,Ljwutil/collections/Pair;,right)#7
jwutil.collections.Pair.<init>(Ljava/lang/Object;Ljava/lang/Object;)V#Return(V)#8
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalStore(Ljava/lang/Object;,3)#20
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,0)#21
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Get(Ljava/util/Map;,NONSTATIC,Ljoeq/Compiler/Quad/RegisterFactory;,localNumbering)#22
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,3)#23
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#24
jwutil.collections.Pair.size()I#Constant(I,2)#0
jwutil.collections.Pair.size()I#Return(I)#1
jwutil.collections.Pair.get(I)Ljava/lang/Object;#LocalLoad(I,1)#0
jwutil.collections.Pair.get(I)Ljava/lang/Object;#Switch(8,0,2,1,5)#1
jwutil.collections.Pair.get(I)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#2
jwutil.collections.Pair.get(I)Ljava/lang/Object;#Get(Ljava/lang/Object;,NONSTATIC,Ljwutil/collections/Pair;,left)#3
jwutil.collections.Pair.get(I)Ljava/lang/Object;#Return(Ljava/lang/Object;)#4
jwutil.collections.Pair.get(I)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#5
jwutil.collections.Pair.get(I)Ljava/lang/Object;#Get(Ljava/lang/Object;,NONSTATIC,Ljwutil/collections/Pair;,right)#6
jwutil.collections.Pair.get(I)Ljava/lang/Object;#Return(Ljava/lang/Object;)#7
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#CheckCast(Ljoeq/Compiler/Quad/RegisterFactory$Register;)#25
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalStore(Ljava/lang/Object;,4)#26
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,4)#27
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Constant(L;,null)#28
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#ConditionalBranch(Ljava/lang/Object;,ne,40)#29
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,0)#30
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Get(Ljava/util/Map;,NONSTATIC,Ljoeq/Compiler/Quad/RegisterFactory;,localNumbering)#31
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,3)#32
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,0)#33
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,2)#34
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/RegisterFactory;,makeReg,(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;)#35
joeq.Compiler.Quad.RegisterFactory.makeReg(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#New(Ljoeq/Compiler/Quad/RegisterFactory$Register;,0)#0
joeq.Compiler.Quad.RegisterFactory.makeReg(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Dup(1,0)#1
joeq.Compiler.Quad.RegisterFactory.makeReg(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.RegisterFactory.makeReg(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Invoke(SPECIAL,Ljoeq/Compiler/Quad/RegisterFactory;,nextNumber,()S)#3
joeq.Compiler.Quad.RegisterFactory.nextNumber()S#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.RegisterFactory.nextNumber()S#Get(Ljava/util/ArrayList;,NONSTATIC,Ljoeq/Compiler/Quad/RegisterFactory;,registers)#1
joeq.Compiler.Quad.RegisterFactory.nextNumber()S#Invoke(VIRTUAL,Ljava/util/ArrayList;,size,()I)#2
joeq.Compiler.Quad.RegisterFactory.nextNumber()S#Conversion(I,S)#3
joeq.Compiler.Quad.RegisterFactory.nextNumber()S#Return(I)#4
joeq.Compiler.Quad.RegisterFactory.makeReg(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,1)#4
joeq.Compiler.Quad.RegisterFactory.makeReg(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Constant(I,0)#5
joeq.Compiler.Quad.RegisterFactory.makeReg(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Constant(L;,null)#6
joeq.Compiler.Quad.RegisterFactory.makeReg(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Invoke(SPECIAL,Ljoeq/Compiler/Quad/RegisterFactory$Register;,<init>,(SLjoeq/Class/jq_Type;ZLjoeq/Compiler/Quad/RegisterFactory$1;)V)#7
joeq.Compiler.Quad.RegisterFactory$Register.<init>(SLjoeq/Class/jq_Type;ZLjoeq/Compiler/Quad/RegisterFactory$1;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.RegisterFactory$Register.<init>(SLjoeq/Class/jq_Type;ZLjoeq/Compiler/Quad/RegisterFactory$1;)V#LocalLoad(I,1)#1
joeq.Compiler.Quad.RegisterFactory$Register.<init>(SLjoeq/Class/jq_Type;ZLjoeq/Compiler/Quad/RegisterFactory$1;)V#LocalLoad(Ljava/lang/Object;,2)#2
joeq.Compiler.Quad.RegisterFactory$Register.<init>(SLjoeq/Class/jq_Type;ZLjoeq/Compiler/Quad/RegisterFactory$1;)V#LocalLoad(I,3)#3
joeq.Compiler.Quad.RegisterFactory$Register.<init>(SLjoeq/Class/jq_Type;ZLjoeq/Compiler/Quad/RegisterFactory$1;)V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/RegisterFactory$Register;,<init>,(SLjoeq/Class/jq_Type;Z)V)#4
joeq.Compiler.Quad.RegisterFactory$Register.<init>(SLjoeq/Class/jq_Type;Z)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.RegisterFactory$Register.<init>(SLjoeq/Class/jq_Type;Z)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.Quad.RegisterFactory$Register.<init>(SLjoeq/Class/jq_Type;Z)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.RegisterFactory$Register.<init>(SLjoeq/Class/jq_Type;Z)V#LocalLoad(I,1)#3
joeq.Compiler.Quad.RegisterFactory$Register.<init>(SLjoeq/Class/jq_Type;Z)V#Put(S,NONSTATIC,Ljoeq/Compiler/Quad/RegisterFactory$Register;,index)#4
joeq.Compiler.Quad.RegisterFactory$Register.<init>(SLjoeq/Class/jq_Type;Z)V#LocalLoad(I,3)#5
joeq.Compiler.Quad.RegisterFactory$Register.<init>(SLjoeq/Class/jq_Type;Z)V#Constant(I,0)#6
joeq.Compiler.Quad.RegisterFactory$Register.<init>(SLjoeq/Class/jq_Type;Z)V#ConditionalBranch(I,eq,11)#7
joeq.Compiler.Quad.RegisterFactory$Register.<init>(SLjoeq/Class/jq_Type;Z)V#LocalLoad(Ljava/lang/Object;,2)#11
joeq.Compiler.Quad.RegisterFactory$Register.<init>(SLjoeq/Class/jq_Type;Z)V#Instanceof(Ljoeq/Class/jq_Reference;)#12
joeq.Compiler.Quad.RegisterFactory$Register.<init>(SLjoeq/Class/jq_Type;Z)V#Constant(I,0)#13
joeq.Compiler.Quad.RegisterFactory$Register.<init>(SLjoeq/Class/jq_Type;Z)V#ConditionalBranch(I,eq,23)#14
joeq.Compiler.Quad.RegisterFactory$Register.<init>(SLjoeq/Class/jq_Type;Z)V#LocalLoad(Ljava/lang/Object;,0)#15
joeq.Compiler.Quad.RegisterFactory$Register.<init>(SLjoeq/Class/jq_Type;Z)V#Dup(1,0)#16
joeq.Compiler.Quad.RegisterFactory$Register.<init>(SLjoeq/Class/jq_Type;Z)V#Get(B,NONSTATIC,Ljoeq/Compiler/Quad/RegisterFactory$Register;,flags)#17
joeq.Compiler.Quad.RegisterFactory$Register.<init>(SLjoeq/Class/jq_Type;Z)V#Constant(I,5)#18
joeq.Compiler.Quad.RegisterFactory$Register.<init>(SLjoeq/Class/jq_Type;Z)V#BinaryOp(I,or)#19
joeq.Compiler.Quad.RegisterFactory$Register.<init>(SLjoeq/Class/jq_Type;Z)V#Conversion(I,B)#20
joeq.Compiler.Quad.RegisterFactory$Register.<init>(SLjoeq/Class/jq_Type;Z)V#Put(B,NONSTATIC,Ljoeq/Compiler/Quad/RegisterFactory$Register;,flags)#21
joeq.Compiler.Quad.RegisterFactory$Register.<init>(SLjoeq/Class/jq_Type;Z)V#Goto(71)#22
joeq.Compiler.Quad.RegisterFactory$Register.<init>(SLjoeq/Class/jq_Type;Z)V#Return(V)#71
joeq.Compiler.Quad.RegisterFactory$Register.<init>(SLjoeq/Class/jq_Type;ZLjoeq/Compiler/Quad/RegisterFactory$1;)V#Return(V)#5
joeq.Compiler.Quad.RegisterFactory.makeReg(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalStore(Ljava/lang/Object;,2)#8
joeq.Compiler.Quad.RegisterFactory.makeReg(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,0)#9
joeq.Compiler.Quad.RegisterFactory.makeReg(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Get(Ljava/util/ArrayList;,NONSTATIC,Ljoeq/Compiler/Quad/RegisterFactory;,registers)#10
joeq.Compiler.Quad.RegisterFactory.makeReg(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,2)#11
joeq.Compiler.Quad.RegisterFactory.makeReg(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#12
joeq.Compiler.Quad.RegisterFactory.makeReg(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Pop(1)#13
joeq.Compiler.Quad.RegisterFactory.makeReg(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,2)#14
joeq.Compiler.Quad.RegisterFactory.makeReg(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Return(Ljava/lang/Object;)#15
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Dup(1,0)#36
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalStore(Ljava/lang/Object;,4)#37
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#38
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Pop(1)#39
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,4)#40
joeq.Compiler.Quad.RegisterFactory.getOrCreateLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Return(Ljava/lang/Object;)#41
joeq.Compiler.Quad.BytecodeToQuad.makeLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#LocalLoad(Ljava/lang/Object;,2)#7
joeq.Compiler.Quad.BytecodeToQuad.makeLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Operand$RegisterOperand;,<init>,(Ljoeq/Compiler/Quad/RegisterFactory$Register;Ljoeq/Class/jq_Type;)V)#8
joeq.Compiler.Quad.Operand$RegisterOperand.<init>(Ljoeq/Compiler/Quad/RegisterFactory$Register;Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operand$RegisterOperand.<init>(Ljoeq/Compiler/Quad/RegisterFactory$Register;Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Compiler.Quad.Operand$RegisterOperand.<init>(Ljoeq/Compiler/Quad/RegisterFactory$Register;Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,2)#2
joeq.Compiler.Quad.Operand$RegisterOperand.<init>(Ljoeq/Compiler/Quad/RegisterFactory$Register;Ljoeq/Class/jq_Type;)V#Constant(I,0)#3
joeq.Compiler.Quad.Operand$RegisterOperand.<init>(Ljoeq/Compiler/Quad/RegisterFactory$Register;Ljoeq/Class/jq_Type;)V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Operand$RegisterOperand;,<init>,(Ljoeq/Compiler/Quad/RegisterFactory$Register;Ljoeq/Class/jq_Type;I)V)#4
joeq.Compiler.Quad.Operand$RegisterOperand.<init>(Ljoeq/Compiler/Quad/RegisterFactory$Register;Ljoeq/Class/jq_Type;I)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operand$RegisterOperand.<init>(Ljoeq/Compiler/Quad/RegisterFactory$Register;Ljoeq/Class/jq_Type;I)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.Quad.Operand$RegisterOperand.<init>(Ljoeq/Compiler/Quad/RegisterFactory$Register;Ljoeq/Class/jq_Type;I)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.Operand$RegisterOperand.<init>(Ljoeq/Compiler/Quad/RegisterFactory$Register;Ljoeq/Class/jq_Type;I)V#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Compiler.Quad.Operand$RegisterOperand.<init>(Ljoeq/Compiler/Quad/RegisterFactory$Register;Ljoeq/Class/jq_Type;I)V#Put(Ljoeq/Compiler/Quad/RegisterFactory$Register;,NONSTATIC,Ljoeq/Compiler/Quad/Operand$RegisterOperand;,register)#4
joeq.Compiler.Quad.Operand$RegisterOperand.<init>(Ljoeq/Compiler/Quad/RegisterFactory$Register;Ljoeq/Class/jq_Type;I)V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Compiler.Quad.Operand$RegisterOperand.<init>(Ljoeq/Compiler/Quad/RegisterFactory$Register;Ljoeq/Class/jq_Type;I)V#LocalLoad(Ljava/lang/Object;,2)#6
joeq.Compiler.Quad.Operand$RegisterOperand.<init>(Ljoeq/Compiler/Quad/RegisterFactory$Register;Ljoeq/Class/jq_Type;I)V#Put(Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Compiler/Quad/Operand$RegisterOperand;,type)#7
joeq.Compiler.Quad.Operand$RegisterOperand.<init>(Ljoeq/Compiler/Quad/RegisterFactory$Register;Ljoeq/Class/jq_Type;I)V#LocalLoad(Ljava/lang/Object;,0)#8
joeq.Compiler.Quad.Operand$RegisterOperand.<init>(Ljoeq/Compiler/Quad/RegisterFactory$Register;Ljoeq/Class/jq_Type;I)V#LocalLoad(I,3)#9
joeq.Compiler.Quad.Operand$RegisterOperand.<init>(Ljoeq/Compiler/Quad/RegisterFactory$Register;Ljoeq/Class/jq_Type;I)V#Put(I,NONSTATIC,Ljoeq/Compiler/Quad/Operand$RegisterOperand;,flags)#10
joeq.Compiler.Quad.Operand$RegisterOperand.<init>(Ljoeq/Compiler/Quad/RegisterFactory$Register;Ljoeq/Class/jq_Type;I)V#Return(V)#11
joeq.Compiler.Quad.Operand$RegisterOperand.<init>(Ljoeq/Compiler/Quad/RegisterFactory$Register;Ljoeq/Class/jq_Type;)V#Return(V)#5
joeq.Compiler.Quad.BytecodeToQuad.makeLocal(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Return(Ljava/lang/Object;)#9
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#ArrayStore(Ljava/lang/Object;)#41
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(Ljava/lang/Object;,5)#42
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,getReferenceSize,()I)#43
joeq.Class.jq_Reference.getReferenceSize()I#Constant(I,4)#0
joeq.Class.jq_Reference.getReferenceSize()I#Return(I)#1
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Constant(I,8)#44
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#ConditionalBranch(I,ne,55)#45
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(I,3)#55
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Constant(I,1)#56
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#BinaryOp(I,add)#57
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalStore(I,3)#58
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Goto(22)#59
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(Ljava/lang/Object;,1)#60
joeq.Compiler.Quad.BytecodeToQuad.allocateInitialState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Return(Ljava/lang/Object;)#61
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#ArrayStore(Ljava/lang/Object;)#289
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#290
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#291
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,allocateEmptyState,()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)#292
joeq.Compiler.Quad.BytecodeToQuad.allocateEmptyState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#New(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,0)#0
joeq.Compiler.Quad.BytecodeToQuad.allocateEmptyState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Dup(1,0)#1
joeq.Compiler.Quad.BytecodeToQuad.allocateEmptyState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.BytecodeToQuad.allocateEmptyState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Compiler.Quad.BytecodeToQuad.allocateEmptyState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Get(Ljoeq/Class/jq_Method;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,method)#4
joeq.Compiler.Quad.BytecodeToQuad.allocateEmptyState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getMaxStack,()C)#5
joeq.Compiler.Quad.BytecodeToQuad.allocateEmptyState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Constant(I,1)#6
joeq.Compiler.Quad.BytecodeToQuad.allocateEmptyState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#BinaryOp(I,add)#7
joeq.Compiler.Quad.BytecodeToQuad.allocateEmptyState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(Ljava/lang/Object;,0)#8
joeq.Compiler.Quad.BytecodeToQuad.allocateEmptyState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Get(Ljoeq/Class/jq_Method;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,method)#9
joeq.Compiler.Quad.BytecodeToQuad.allocateEmptyState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getMaxLocals,()C)#10
joeq.Compiler.Quad.BytecodeToQuad.allocateEmptyState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Constant(L;,null)#11
joeq.Compiler.Quad.BytecodeToQuad.allocateEmptyState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Invoke(SPECIAL,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,<init>,(Ljoeq/Compiler/Quad/BytecodeToQuad;IILjoeq/Compiler/Quad/BytecodeToQuad$1;)V)#12
joeq.Compiler.Quad.BytecodeToQuad.allocateEmptyState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalStore(Ljava/lang/Object;,1)#13
joeq.Compiler.Quad.BytecodeToQuad.allocateEmptyState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(Ljava/lang/Object;,1)#14
joeq.Compiler.Quad.BytecodeToQuad.allocateEmptyState()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Return(Ljava/lang/Object;)#15
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Put(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,current_state)#293
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#294
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#New(Ljava/util/LinkedList;,0)#295
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Dup(1,0)#296
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#297
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Put(Ljava/util/LinkedList;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,regenerate)#298
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#299
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#300
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get([Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_bbs)#301
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#ArrayLength()#302
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#New([Z,1)#303
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Put([Z,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,visited)#304
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#305
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,bc_cfg)#306
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,reversePostOrderIterator,()Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$RPOBasicBlockIterator;)#307
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.reversePostOrderIterator()Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$RPOBasicBlockIterator;#New(Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$RPOBasicBlockIterator;,0)#0
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.reversePostOrderIterator()Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$RPOBasicBlockIterator;#Dup(1,0)#1
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.reversePostOrderIterator()Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$RPOBasicBlockIterator;#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.reversePostOrderIterator()Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$RPOBasicBlockIterator;#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,basic_blocks)#3
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.reversePostOrderIterator()Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$RPOBasicBlockIterator;#LocalLoad(Ljava/lang/Object;,0)#4
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.reversePostOrderIterator()Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$RPOBasicBlockIterator;#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,basic_blocks)#5
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.reversePostOrderIterator()Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$RPOBasicBlockIterator;#Constant(I,0)#6
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.reversePostOrderIterator()Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$RPOBasicBlockIterator;#ArrayLoad(Ljava/lang/Object;)#7
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.reversePostOrderIterator()Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$RPOBasicBlockIterator;#Invoke(SPECIAL,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$RPOBasicBlockIterator;,<init>,([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V)#8
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.<init>([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.<init>([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.<init>([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.<init>([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.<init>([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#ArrayLength()#4
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.<init>([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Put(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$RPOBasicBlockIterator;,index)#5
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.<init>([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#6
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.<init>([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#7
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.<init>([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Get(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$RPOBasicBlockIterator;,index)#8
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.<init>([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#New([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,1)#9
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.<init>([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Put([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$RPOBasicBlockIterator;,rpo)#10
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.<init>([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#11
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.<init>([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Get(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$RPOBasicBlockIterator;,index)#12
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.<init>([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#New([Z,1)#13
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.<init>([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalStore(Ljava/lang/Object;,3)#14
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.<init>([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#15
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.<init>([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,3)#16
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.<init>([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,2)#17
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.<init>([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Invoke(SPECIAL,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$RPOBasicBlockIterator;,visit,([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V)#18
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,2)#0
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,getNumberOfSuccessors,()I)#1
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalStore(I,3)#2
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Constant(I,0)#3
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalStore(I,4)#4
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(I,4)#5
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(I,3)#6
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#ConditionalBranch(I,ge,32)#7
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,2)#8
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(I,4)#9
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,getSuccessor,(I)Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)#10
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalStore(Ljava/lang/Object;,5)#11
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#12
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,5)#13
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Get(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,id)#14
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#ArrayLoad(B)#15
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Constant(I,0)#16
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#ConditionalBranch(I,ne,27)#17
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#18
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,5)#19
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Get(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,id)#20
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Constant(I,1)#21
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#ArrayStore(B)#22
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#23
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#24
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,5)#25
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Invoke(SPECIAL,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$RPOBasicBlockIterator;,visit,([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V)#26
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,2)#32
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,getExceptionHandlers,()Ljoeq/Compiler/BytecodeAnalysis/ExceptionHandlerIterator;)#33
joeq.Compiler.BytecodeAnalysis.BasicBlock.getExceptionHandlers()Ljoeq/Compiler/BytecodeAnalysis/ExceptionHandlerIterator;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.BasicBlock.getExceptionHandlers()Ljoeq/Compiler/BytecodeAnalysis/ExceptionHandlerIterator;#Get(Ljoeq/Compiler/BytecodeAnalysis/ExceptionHandlerList;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,exception_handler_set)#1
joeq.Compiler.BytecodeAnalysis.BasicBlock.getExceptionHandlers()Ljoeq/Compiler/BytecodeAnalysis/ExceptionHandlerIterator;#Constant(L;,null)#2
joeq.Compiler.BytecodeAnalysis.BasicBlock.getExceptionHandlers()Ljoeq/Compiler/BytecodeAnalysis/ExceptionHandlerIterator;#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
joeq.Compiler.BytecodeAnalysis.BasicBlock.getExceptionHandlers()Ljoeq/Compiler/BytecodeAnalysis/ExceptionHandlerIterator;#Invoke(STATIC,Ljoeq/Compiler/BytecodeAnalysis/ExceptionHandlerIterator;,nullIterator,()Ljoeq/Compiler/BytecodeAnalysis/ExceptionHandlerIterator;)#4
joeq.Compiler.BytecodeAnalysis.ExceptionHandlerIterator.nullIterator()Ljoeq/Compiler/BytecodeAnalysis/ExceptionHandlerIterator;#New(Ljoeq/Compiler/BytecodeAnalysis/ExceptionHandlerIterator$1;,0)#0
joeq.Compiler.BytecodeAnalysis.ExceptionHandlerIterator.nullIterator()Ljoeq/Compiler/BytecodeAnalysis/ExceptionHandlerIterator;#Dup(1,0)#1
joeq.Compiler.BytecodeAnalysis.ExceptionHandlerIterator.nullIterator()Ljoeq/Compiler/BytecodeAnalysis/ExceptionHandlerIterator;#Invoke(SPECIAL,Ljoeq/Compiler/BytecodeAnalysis/ExceptionHandlerIterator$1;,<init>,()V)#2
joeq.Compiler.BytecodeAnalysis.ExceptionHandlerIterator$1.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.ExceptionHandlerIterator$1.<init>()V#Constant(L;,null)#1
joeq.Compiler.BytecodeAnalysis.ExceptionHandlerIterator$1.<init>()V#Invoke(SPECIAL,Ljoeq/Compiler/BytecodeAnalysis/ExceptionHandlerIterator;,<init>,(Ljoeq/Compiler/BytecodeAnalysis/ExceptionHandlerIterator$1;)V)#2
joeq.Compiler.BytecodeAnalysis.ExceptionHandlerIterator.<init>(Ljoeq/Compiler/BytecodeAnalysis/ExceptionHandlerIterator$1;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.ExceptionHandlerIterator.<init>(Ljoeq/Compiler/BytecodeAnalysis/ExceptionHandlerIterator$1;)V#Invoke(SPECIAL,Ljoeq/Compiler/BytecodeAnalysis/ExceptionHandlerIterator;,<init>,()V)#1
joeq.Compiler.BytecodeAnalysis.ExceptionHandlerIterator.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.ExceptionHandlerIterator.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.BytecodeAnalysis.ExceptionHandlerIterator.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.BytecodeAnalysis.ExceptionHandlerIterator.<init>()V#Constant(L;,null)#3
joeq.Compiler.BytecodeAnalysis.ExceptionHandlerIterator.<init>()V#Put(Ljwutil/collections/AppendListIterator;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ExceptionHandlerIterator;,iterator)#4
joeq.Compiler.BytecodeAnalysis.ExceptionHandlerIterator.<init>()V#Return(V)#5
joeq.Compiler.BytecodeAnalysis.ExceptionHandlerIterator.<init>(Ljoeq/Compiler/BytecodeAnalysis/ExceptionHandlerIterator$1;)V#Return(V)#2
joeq.Compiler.BytecodeAnalysis.ExceptionHandlerIterator$1.<init>()V#Return(V)#3
joeq.Compiler.BytecodeAnalysis.ExceptionHandlerIterator.nullIterator()Ljoeq/Compiler/BytecodeAnalysis/ExceptionHandlerIterator;#Return(Ljava/lang/Object;)#3
joeq.Compiler.BytecodeAnalysis.BasicBlock.getExceptionHandlers()Ljoeq/Compiler/BytecodeAnalysis/ExceptionHandlerIterator;#Return(Ljava/lang/Object;)#5
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalStore(Ljava/lang/Object;,4)#34
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,4)#35
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/ExceptionHandlerIterator;,hasNext,()Z)#36
joeq.Compiler.BytecodeAnalysis.ExceptionHandlerIterator$1.hasNext()Z#Constant(I,0)#0
joeq.Compiler.BytecodeAnalysis.ExceptionHandlerIterator$1.hasNext()Z#Return(I)#1
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Constant(I,0)#37
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#ConditionalBranch(I,eq,61)#38
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#61
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$RPOBasicBlockIterator;,rpo)#62
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#63
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Dup(1,0)#64
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Get(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$RPOBasicBlockIterator;,index)#65
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Constant(I,1)#66
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#BinaryOp(I,sub)#67
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Dup(1,1)#68
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Put(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$RPOBasicBlockIterator;,index)#69
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,2)#70
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#ArrayStore(Ljava/lang/Object;)#71
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Return(V)#72
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(I,4)#27
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Constant(I,1)#28
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#BinaryOp(I,add)#29
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalStore(I,4)#30
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.visit([ZLjoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Goto(5)#31
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.<init>([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#19
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.<init>([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Dup(1,0)#20
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.<init>([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Get(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$RPOBasicBlockIterator;,index)#21
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.<init>([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Constant(I,1)#22
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.<init>([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#BinaryOp(I,sub)#23
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.<init>([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Put(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$RPOBasicBlockIterator;,index)#24
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.<init>([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Return(V)#25
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.reversePostOrderIterator()Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$RPOBasicBlockIterator;#Return(Ljava/lang/Object;)#9
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalStore(Ljava/lang/Object;,2)#308
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,2)#309
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$RPOBasicBlockIterator;,nextBB,()Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)#310
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.nextBB()Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.nextBB()Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$RPOBasicBlockIterator;,rpo)#1
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.nextBB()Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.nextBB()Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#Dup(1,0)#3
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.nextBB()Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#Get(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$RPOBasicBlockIterator;,index)#4
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.nextBB()Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#Constant(I,1)#5
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.nextBB()Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#BinaryOp(I,add)#6
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.nextBB()Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#Dup(1,1)#7
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.nextBB()Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#Put(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$RPOBasicBlockIterator;,index)#8
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.nextBB()Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#ArrayLoad(Ljava/lang/Object;)#9
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.nextBB()Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#Return(Ljava/lang/Object;)#10
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalStore(Ljava/lang/Object;,3)#311
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,3)#312
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#313
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,bc_cfg)#314
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,getEntry,()Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)#315
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.getEntry()Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.getEntry()Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph;,basic_blocks)#1
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.getEntry()Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#Constant(I,0)#2
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.getEntry()Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#ArrayLoad(Ljava/lang/Object;)#3
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph.getEntry()Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;#Return(Ljava/lang/Object;)#4
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#ConditionalBranch(Ljava/lang/Object;,ne,319)#316
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(I,1)#317
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Goto(320)#318
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#320
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,2)#321
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$RPOBasicBlockIterator;,hasNext,()Z)#322
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.hasNext()Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.hasNext()Z#Get(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$RPOBasicBlockIterator;,index)#1
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.hasNext()Z#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.hasNext()Z#Get([Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$RPOBasicBlockIterator;,rpo)#3
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.hasNext()Z#ArrayLength()#4
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.hasNext()Z#Constant(I,1)#5
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.hasNext()Z#BinaryOp(I,sub)#6
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.hasNext()Z#ConditionalBranch(I,ge,10)#7
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.hasNext()Z#Constant(I,1)#8
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.hasNext()Z#Goto(11)#9
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.hasNext()Z#Return(I)#11
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(I,0)#323
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#ConditionalBranch(I,eq,338)#324
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,2)#325
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/ControlFlowGraph$RPOBasicBlockIterator;,nextBB,()Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)#326
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalStore(Ljava/lang/Object;,4)#327
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#328
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get([Z,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,visited)#329
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,4)#330
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,id)#331
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(I,1)#332
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#ArrayStore(B)#333
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#334
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,4)#335
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,traverseBB,(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V)#336
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Get([Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,start_states)#1
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#2
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Get(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,id)#3
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#ArrayLoad(Ljava/lang/Object;)#4
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Constant(L;,null)#5
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#ConditionalBranch(Ljava/lang/Object;,ne,25)#6
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#25
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,getStart,()I)#26
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Constant(I,-1)#27
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#ConditionalBranch(I,ne,30)#28
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#30
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Get(Z,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,TRACE)#31
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Constant(I,0)#32
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#ConditionalBranch(I,eq,45)#33
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#45
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#46
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Get([Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_bbs)#47
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#48
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Get(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,id)#49
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#ArrayLoad(Ljava/lang/Object;)#50
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Put(Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_bb)#51
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#52
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Get(Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_bb)#53
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,iterator,()Ljava/util/Iterator;)#54
joeq.Compiler.Quad.BasicBlock.iterator()Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BasicBlock.iterator()Ljava/util/Iterator;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getQuads,()Ljava/util/List;)#1
joeq.Compiler.Quad.BasicBlock.getQuads()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BasicBlock.getQuads()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,instructions)#1
joeq.Compiler.Quad.BasicBlock.getQuads()Ljava/util/List;#Constant(L;,null)#2
joeq.Compiler.Quad.BasicBlock.getQuads()Ljava/util/List;#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
joeq.Compiler.Quad.BasicBlock.getQuads()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#6
joeq.Compiler.Quad.BasicBlock.getQuads()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,instructions)#7
joeq.Compiler.Quad.BasicBlock.getQuads()Ljava/util/List;#Return(Ljava/lang/Object;)#8
joeq.Compiler.Quad.BasicBlock.iterator()Ljava/util/Iterator;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#2
joeq.Compiler.Quad.BasicBlock.iterator()Ljava/util/Iterator;#Return(Ljava/lang/Object;)#3
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalStore(Ljava/lang/Object;,2)#55
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,2)#56
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#57
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Constant(I,0)#58
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#ConditionalBranch(I,eq,69)#59
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#69
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Get(Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_bb)#70
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,removeAllQuads,()V)#71
joeq.Compiler.Quad.BasicBlock.removeAllQuads()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BasicBlock.removeAllQuads()V#Get(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,instructions)#1
joeq.Compiler.Quad.BasicBlock.removeAllQuads()V#Invoke(INTERFACE,Ljava/util/List;,clear,()V)#2
joeq.Compiler.Quad.BasicBlock.removeAllQuads()V#Return(V)#3
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#72
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#73
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Put(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,bc_bb)#74
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#75
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Get(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,current_state)#76
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#77
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Get([Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,start_states)#78
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#79
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Get(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,id)#80
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#ArrayLoad(Ljava/lang/Object;)#81
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,overwriteWith,(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V)#82
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#Get([Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,stack)#1
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#ArrayLength()#2
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#Get([Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,stack)#4
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#ArrayLength()#5
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#ConditionalBranch(I,ne,9)#6
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#Constant(I,1)#7
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#Goto(10)#8
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#10
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#LocalLoad(Ljava/lang/Object;,0)#11
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#Get([Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,locals)#12
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#ArrayLength()#13
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#LocalLoad(Ljava/lang/Object;,1)#14
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#Get([Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,locals)#15
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#ArrayLength()#16
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#ConditionalBranch(I,ne,20)#17
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#Constant(I,1)#18
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#Goto(21)#19
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#21
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#LocalLoad(Ljava/lang/Object;,1)#22
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#Get([Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,stack)#23
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#Constant(I,0)#24
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#LocalLoad(Ljava/lang/Object;,0)#25
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#Get([Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,stack)#26
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#Constant(I,0)#27
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#LocalLoad(Ljava/lang/Object;,1)#28
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#Get(I,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,stackptr)#29
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#Invoke(STATIC,Ljava/lang/System;,arraycopy,(Ljava/lang/Object;ILjava/lang/Object;II)V)#30
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#LocalLoad(Ljava/lang/Object;,1)#31
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#Get([Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,locals)#32
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#Constant(I,0)#33
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#LocalLoad(Ljava/lang/Object;,0)#34
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#Get([Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,locals)#35
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#Constant(I,0)#36
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#LocalLoad(Ljava/lang/Object;,1)#37
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#Get([Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,locals)#38
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#ArrayLength()#39
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#Invoke(STATIC,Ljava/lang/System;,arraycopy,(Ljava/lang/Object;ILjava/lang/Object;II)V)#40
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#LocalLoad(Ljava/lang/Object;,0)#41
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#LocalLoad(Ljava/lang/Object;,1)#42
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#Get(I,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,stackptr)#43
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#Put(I,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,stackptr)#44
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.overwriteWith(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)V#Return(V)#45
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#83
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Get(Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_bb)#84
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,isExceptionHandlerEntry,()Z)#85
joeq.Compiler.Quad.BasicBlock.isExceptionHandlerEntry()Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BasicBlock.isExceptionHandlerEntry()Z#Get(I,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,flags)#1
joeq.Compiler.Quad.BasicBlock.isExceptionHandlerEntry()Z#Constant(I,1)#2
joeq.Compiler.Quad.BasicBlock.isExceptionHandlerEntry()Z#BinaryOp(I,and)#3
joeq.Compiler.Quad.BasicBlock.isExceptionHandlerEntry()Z#Constant(I,0)#4
joeq.Compiler.Quad.BasicBlock.isExceptionHandlerEntry()Z#ConditionalBranch(I,eq,8)#5
joeq.Compiler.Quad.BasicBlock.isExceptionHandlerEntry()Z#Constant(I,0)#8
joeq.Compiler.Quad.BasicBlock.isExceptionHandlerEntry()Z#Return(I)#9
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Constant(I,0)#86
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#ConditionalBranch(I,eq,111)#87
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#111
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Get(Z,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,TRACE)#112
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Constant(I,0)#113
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#ConditionalBranch(I,eq,118)#114
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#118
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Constant(I,0)#119
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Put(Z,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,endBasicBlock)#120
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#121
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Constant(I,0)#122
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Put(Z,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,endsWithRET)#123
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#124
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#125
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,getStart,()I)#126
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Constant(I,1)#127
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#BinaryOp(I,sub)#128
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Put(I,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,i_end)#129
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#130
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#131
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Get(I,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,i_end)#132
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Constant(I,1)#133
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#BinaryOp(I,add)#134
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Put(I,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,i_start)#135
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#136
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,isEndOfBB,()Z)#137
joeq.Compiler.Quad.BytecodeToQuad.isEndOfBB()Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad.isEndOfBB()Z#Get(I,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,i_start)#1
joeq.Compiler.Quad.BytecodeToQuad.isEndOfBB()Z#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.BytecodeToQuad.isEndOfBB()Z#Get(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,bc_bb)#3
joeq.Compiler.Quad.BytecodeToQuad.isEndOfBB()Z#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,getEnd,()I)#4
joeq.Compiler.Quad.BytecodeToQuad.isEndOfBB()Z#ConditionalBranch(I,gt,10)#5
joeq.Compiler.Quad.BytecodeToQuad.isEndOfBB()Z#LocalLoad(Ljava/lang/Object;,0)#6
joeq.Compiler.Quad.BytecodeToQuad.isEndOfBB()Z#Get(Z,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,endBasicBlock)#7
joeq.Compiler.Quad.BytecodeToQuad.isEndOfBB()Z#Constant(I,0)#8
joeq.Compiler.Quad.BytecodeToQuad.isEndOfBB()Z#ConditionalBranch(I,eq,12)#9
joeq.Compiler.Quad.BytecodeToQuad.isEndOfBB()Z#Constant(I,0)#12
joeq.Compiler.Quad.BytecodeToQuad.isEndOfBB()Z#Return(I)#13
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Constant(I,0)#138
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#ConditionalBranch(I,eq,141)#139
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#141
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,visitBytecode,()V)#142
joeq.Compiler.Quad.BytecodeToQuad.visitNEW(Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad.visitNEW(Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Compiler.Quad.BytecodeToQuad.visitNEW(Ljoeq/Class/jq_Type;)V#Invoke(SPECIAL,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,visitNEW,(Ljoeq/Class/jq_Type;)V)#2
joeq.Compiler.Quad.BytecodeToQuad.visitNEW(Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Compiler.Quad.BytecodeToQuad.visitNEW(Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,1)#4
joeq.Compiler.Quad.BytecodeToQuad.visitNEW(Ljoeq/Class/jq_Type;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,getStackRegister,(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;)#5
joeq.Compiler.Quad.BytecodeToQuad.getStackRegister(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad.getStackRegister(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Compiler.Quad.BytecodeToQuad.getStackRegister(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Constant(I,-1)#2
joeq.Compiler.Quad.BytecodeToQuad.getStackRegister(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,getStackRegister,(Ljoeq/Class/jq_Type;I)Ljoeq/Compiler/Quad/Operand$RegisterOperand;)#3
joeq.Compiler.Quad.BytecodeToQuad.getStackRegister(Ljoeq/Class/jq_Type;I)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad.getStackRegister(Ljoeq/Class/jq_Type;I)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Get(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,current_state)#1
joeq.Compiler.Quad.BytecodeToQuad.getStackRegister(Ljoeq/Class/jq_Type;I)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,getStackSize,()I)#2
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.getStackSize()I#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.getStackSize()I#Get(I,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,stackptr)#1
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.getStackSize()I#Return(I)#2
joeq.Compiler.Quad.BytecodeToQuad.getStackRegister(Ljoeq/Class/jq_Type;I)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#LocalLoad(I,2)#3
joeq.Compiler.Quad.BytecodeToQuad.getStackRegister(Ljoeq/Class/jq_Type;I)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#BinaryOp(I,sub)#4
joeq.Compiler.Quad.BytecodeToQuad.getStackRegister(Ljoeq/Class/jq_Type;I)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Constant(I,1)#5
joeq.Compiler.Quad.BytecodeToQuad.getStackRegister(Ljoeq/Class/jq_Type;I)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#BinaryOp(I,sub)#6
joeq.Compiler.Quad.BytecodeToQuad.getStackRegister(Ljoeq/Class/jq_Type;I)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Constant(I,0)#7
joeq.Compiler.Quad.BytecodeToQuad.getStackRegister(Ljoeq/Class/jq_Type;I)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#ConditionalBranch(I,ge,28)#8
joeq.Compiler.Quad.BytecodeToQuad.getStackRegister(Ljoeq/Class/jq_Type;I)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#New(Ljoeq/Compiler/Quad/Operand$RegisterOperand;,0)#28
joeq.Compiler.Quad.BytecodeToQuad.getStackRegister(Ljoeq/Class/jq_Type;I)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Dup(1,0)#29
joeq.Compiler.Quad.BytecodeToQuad.getStackRegister(Ljoeq/Class/jq_Type;I)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#LocalLoad(Ljava/lang/Object;,0)#30
joeq.Compiler.Quad.BytecodeToQuad.getStackRegister(Ljoeq/Class/jq_Type;I)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Get(Ljoeq/Compiler/Quad/RegisterFactory;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,rf)#31
joeq.Compiler.Quad.BytecodeToQuad.getStackRegister(Ljoeq/Class/jq_Type;I)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#LocalLoad(Ljava/lang/Object;,0)#32
joeq.Compiler.Quad.BytecodeToQuad.getStackRegister(Ljoeq/Class/jq_Type;I)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Get(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,current_state)#33
joeq.Compiler.Quad.BytecodeToQuad.getStackRegister(Ljoeq/Class/jq_Type;I)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,getStackSize,()I)#34
joeq.Compiler.Quad.BytecodeToQuad.getStackRegister(Ljoeq/Class/jq_Type;I)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#LocalLoad(I,2)#35
joeq.Compiler.Quad.BytecodeToQuad.getStackRegister(Ljoeq/Class/jq_Type;I)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#BinaryOp(I,sub)#36
joeq.Compiler.Quad.BytecodeToQuad.getStackRegister(Ljoeq/Class/jq_Type;I)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Constant(I,1)#37
joeq.Compiler.Quad.BytecodeToQuad.getStackRegister(Ljoeq/Class/jq_Type;I)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#BinaryOp(I,sub)#38
joeq.Compiler.Quad.BytecodeToQuad.getStackRegister(Ljoeq/Class/jq_Type;I)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#LocalLoad(Ljava/lang/Object;,1)#39
joeq.Compiler.Quad.BytecodeToQuad.getStackRegister(Ljoeq/Class/jq_Type;I)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/RegisterFactory;,getOrCreateStack,(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;)#40
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,2)#0
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,isReferenceType,()Z)#1
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Constant(I,0)#2
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#ConditionalBranch(I,eq,6)#3
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Invoke(STATIC,Ljoeq/Class/PrimordialClassLoader;,getJavaLangObject,()Ljoeq/Class/jq_Class;)#4
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalStore(Ljava/lang/Object;,2)#5
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,2)#6
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,isIntLike,()Z)#7
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Constant(I,0)#8
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#ConditionalBranch(I,eq,12)#9
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#New(Ljwutil/collections/Pair;,0)#12
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Dup(1,0)#13
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,2)#14
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#New(Ljava/lang/Integer;,0)#15
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Dup(1,0)#16
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(I,1)#17
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Invoke(SPECIAL,Ljava/lang/Integer;,<init>,(I)V)#18
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Invoke(SPECIAL,Ljwutil/collections/Pair;,<init>,(Ljava/lang/Object;Ljava/lang/Object;)V)#19
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalStore(Ljava/lang/Object;,3)#20
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,0)#21
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Get(Ljava/util/Map;,NONSTATIC,Ljoeq/Compiler/Quad/RegisterFactory;,stackNumbering)#22
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,3)#23
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#24
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#CheckCast(Ljoeq/Compiler/Quad/RegisterFactory$Register;)#25
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalStore(Ljava/lang/Object;,4)#26
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,4)#27
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Constant(L;,null)#28
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#ConditionalBranch(Ljava/lang/Object;,ne,40)#29
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,0)#30
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Get(Ljava/util/Map;,NONSTATIC,Ljoeq/Compiler/Quad/RegisterFactory;,stackNumbering)#31
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,3)#32
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,0)#33
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,2)#34
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/RegisterFactory;,makeTempReg,(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;)#35
joeq.Compiler.Quad.RegisterFactory.makeTempReg(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#New(Ljoeq/Compiler/Quad/RegisterFactory$Register;,0)#0
joeq.Compiler.Quad.RegisterFactory.makeTempReg(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Dup(1,0)#1
joeq.Compiler.Quad.RegisterFactory.makeTempReg(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.RegisterFactory.makeTempReg(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Invoke(SPECIAL,Ljoeq/Compiler/Quad/RegisterFactory;,nextNumber,()S)#3
joeq.Compiler.Quad.RegisterFactory.makeTempReg(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,1)#4
joeq.Compiler.Quad.RegisterFactory.makeTempReg(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Constant(I,1)#5
joeq.Compiler.Quad.RegisterFactory.makeTempReg(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Constant(L;,null)#6
joeq.Compiler.Quad.RegisterFactory.makeTempReg(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Invoke(SPECIAL,Ljoeq/Compiler/Quad/RegisterFactory$Register;,<init>,(SLjoeq/Class/jq_Type;ZLjoeq/Compiler/Quad/RegisterFactory$1;)V)#7
joeq.Compiler.Quad.RegisterFactory$Register.<init>(SLjoeq/Class/jq_Type;Z)V#LocalLoad(Ljava/lang/Object;,0)#8
joeq.Compiler.Quad.RegisterFactory$Register.<init>(SLjoeq/Class/jq_Type;Z)V#Constant(I,32)#9
joeq.Compiler.Quad.RegisterFactory$Register.<init>(SLjoeq/Class/jq_Type;Z)V#Put(B,NONSTATIC,Ljoeq/Compiler/Quad/RegisterFactory$Register;,flags)#10
joeq.Compiler.Quad.RegisterFactory.makeTempReg(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalStore(Ljava/lang/Object;,2)#8
joeq.Compiler.Quad.RegisterFactory.makeTempReg(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,0)#9
joeq.Compiler.Quad.RegisterFactory.makeTempReg(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Get(Ljava/util/ArrayList;,NONSTATIC,Ljoeq/Compiler/Quad/RegisterFactory;,registers)#10
joeq.Compiler.Quad.RegisterFactory.makeTempReg(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,2)#11
joeq.Compiler.Quad.RegisterFactory.makeTempReg(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#12
joeq.Compiler.Quad.RegisterFactory.makeTempReg(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Pop(1)#13
joeq.Compiler.Quad.RegisterFactory.makeTempReg(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,2)#14
joeq.Compiler.Quad.RegisterFactory.makeTempReg(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Return(Ljava/lang/Object;)#15
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Dup(1,0)#36
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalStore(Ljava/lang/Object;,4)#37
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#38
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Pop(1)#39
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,4)#40
joeq.Compiler.Quad.RegisterFactory.getOrCreateStack(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Return(Ljava/lang/Object;)#41
joeq.Compiler.Quad.BytecodeToQuad.getStackRegister(Ljoeq/Class/jq_Type;I)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#LocalLoad(Ljava/lang/Object;,1)#41
joeq.Compiler.Quad.BytecodeToQuad.getStackRegister(Ljoeq/Class/jq_Type;I)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Operand$RegisterOperand;,<init>,(Ljoeq/Compiler/Quad/RegisterFactory$Register;Ljoeq/Class/jq_Type;)V)#42
joeq.Compiler.Quad.BytecodeToQuad.getStackRegister(Ljoeq/Class/jq_Type;I)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Return(Ljava/lang/Object;)#43
joeq.Compiler.Quad.BytecodeToQuad.getStackRegister(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Return(Ljava/lang/Object;)#4
joeq.Compiler.Quad.BytecodeToQuad.visitNEW(Ljoeq/Class/jq_Type;)V#LocalStore(Ljava/lang/Object;,2)#6
joeq.Compiler.Quad.BytecodeToQuad.visitNEW(Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,0)#7
joeq.Compiler.Quad.BytecodeToQuad.visitNEW(Ljoeq/Class/jq_Type;)V#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_cfg)#8
joeq.Compiler.Quad.BytecodeToQuad.visitNEW(Ljoeq/Class/jq_Type;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,getNewQuadID,()I)#9
joeq.Compiler.Quad.ControlFlowGraph.getNewQuadID()I#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.ControlFlowGraph.getNewQuadID()I#Dup(1,0)#1
joeq.Compiler.Quad.ControlFlowGraph.getNewQuadID()I#Get(I,NONSTATIC,Ljoeq/Compiler/Quad/ControlFlowGraph;,quad_counter)#2
joeq.Compiler.Quad.ControlFlowGraph.getNewQuadID()I#Constant(I,1)#3
joeq.Compiler.Quad.ControlFlowGraph.getNewQuadID()I#BinaryOp(I,add)#4
joeq.Compiler.Quad.ControlFlowGraph.getNewQuadID()I#Dup(1,1)#5
joeq.Compiler.Quad.ControlFlowGraph.getNewQuadID()I#Put(I,NONSTATIC,Ljoeq/Compiler/Quad/ControlFlowGraph;,quad_counter)#6
joeq.Compiler.Quad.ControlFlowGraph.getNewQuadID()I#Return(I)#7
joeq.Compiler.Quad.BytecodeToQuad.visitNEW(Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,0)#10
joeq.Compiler.Quad.BytecodeToQuad.visitNEW(Ljoeq/Class/jq_Type;)V#Get(Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_bb)#11
joeq.Compiler.Quad.BytecodeToQuad.visitNEW(Ljoeq/Class/jq_Type;)V#Get(Ljoeq/Compiler/Quad/Operator$New$NEW;,STATIC,Ljoeq/Compiler/Quad/Operator$New$NEW;,INSTANCE)#12
joeq.Compiler.Quad.Operator.<clinit>()V#Invoke(STATIC,Ljava/util/Collections;,emptyList,()Ljava/util/List;)#0
joeq.Compiler.Quad.Operator.<clinit>()V#Put(Ljava/util/List;,STATIC,Ljoeq/Compiler/Quad/Operator;,noregisters)#1
joeq.Compiler.Quad.Operator.<clinit>()V#Invoke(STATIC,Ljava/util/Collections;,emptyList,()Ljava/util/List;)#2
joeq.Compiler.Quad.Operator.<clinit>()V#Put(Ljava/util/List;,STATIC,Ljoeq/Compiler/Quad/Operator;,noexceptions)#3
joeq.Compiler.Quad.Operator.<clinit>()V#Invoke(STATIC,Ljoeq/Class/PrimordialClassLoader;,getJavaLangThrowable,()Ljoeq/Class/jq_Class;)#4
joeq.Class.PrimordialClassLoader.getJavaLangThrowable()Ljoeq/Class/jq_Class;#Get(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/PrimordialClassLoader;,JavaLangThrowable)#0
joeq.Class.PrimordialClassLoader.getJavaLangThrowable()Ljoeq/Class/jq_Class;#Return(Ljava/lang/Object;)#1
joeq.Compiler.Quad.Operator.<clinit>()V#Invoke(STATIC,Ljoeq/Compiler/Quad/Operator;,singletonList,(Ljava/lang/Object;)Ljava/util/List;)#5
joeq.Compiler.Quad.Operator.singletonList(Ljava/lang/Object;)Ljava/util/List;#New(Ljava/util/ArrayList;,0)#0
joeq.Compiler.Quad.Operator.singletonList(Ljava/lang/Object;)Ljava/util/List;#Dup(1,0)#1
joeq.Compiler.Quad.Operator.singletonList(Ljava/lang/Object;)Ljava/util/List;#Constant(I,1)#2
joeq.Compiler.Quad.Operator.singletonList(Ljava/lang/Object;)Ljava/util/List;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,(I)V)#3
joeq.Compiler.Quad.Operator.singletonList(Ljava/lang/Object;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,1)#4
joeq.Compiler.Quad.Operator.singletonList(Ljava/lang/Object;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#5
joeq.Compiler.Quad.Operator.singletonList(Ljava/lang/Object;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#6
joeq.Compiler.Quad.Operator.singletonList(Ljava/lang/Object;)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#7
joeq.Compiler.Quad.Operator.singletonList(Ljava/lang/Object;)Ljava/util/List;#Pop(1)#8
joeq.Compiler.Quad.Operator.singletonList(Ljava/lang/Object;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#9
joeq.Compiler.Quad.Operator.singletonList(Ljava/lang/Object;)Ljava/util/List;#Return(Ljava/lang/Object;)#10
joeq.Compiler.Quad.Operator.<clinit>()V#Put(Ljava/util/List;,STATIC,Ljoeq/Compiler/Quad/Operator;,anyexception)#6
joeq.Compiler.Quad.Operator.<clinit>()V#Get(Ljava/util/List;,STATIC,Ljoeq/Compiler/Quad/Operator;,anyexception)#7
joeq.Compiler.Quad.Operator.<clinit>()V#Put(Ljava/util/List;,STATIC,Ljoeq/Compiler/Quad/Operator;,resolutionexceptions)#8
joeq.Compiler.Quad.Operator.<clinit>()V#Invoke(STATIC,Ljoeq/Class/PrimordialClassLoader;,getJavaLangNullPointerException,()Ljoeq/Class/jq_Class;)#9
joeq.Class.PrimordialClassLoader.getJavaLangNullPointerException()Ljoeq/Class/jq_Class;#Get(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/PrimordialClassLoader;,JavaLangNullPointerException)#0
joeq.Class.PrimordialClassLoader.getJavaLangNullPointerException()Ljoeq/Class/jq_Class;#Return(Ljava/lang/Object;)#1
joeq.Compiler.Quad.Operator.<clinit>()V#Invoke(STATIC,Ljoeq/Compiler/Quad/Operator;,singletonList,(Ljava/lang/Object;)Ljava/util/List;)#10
joeq.Compiler.Quad.Operator.<clinit>()V#Put(Ljava/util/List;,STATIC,Ljoeq/Compiler/Quad/Operator;,nullptrexception)#11
joeq.Compiler.Quad.Operator.<clinit>()V#Invoke(STATIC,Ljoeq/Class/PrimordialClassLoader;,getJavaLangArrayIndexOutOfBoundsException,()Ljoeq/Class/jq_Class;)#12
joeq.Class.PrimordialClassLoader.getJavaLangArrayIndexOutOfBoundsException()Ljoeq/Class/jq_Class;#Get(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/PrimordialClassLoader;,JavaLangArrayIndexOutOfBoundsException)#0
joeq.Class.PrimordialClassLoader.getJavaLangArrayIndexOutOfBoundsException()Ljoeq/Class/jq_Class;#Return(Ljava/lang/Object;)#1
joeq.Compiler.Quad.Operator.<clinit>()V#Invoke(STATIC,Ljoeq/Compiler/Quad/Operator;,singletonList,(Ljava/lang/Object;)Ljava/util/List;)#13
joeq.Compiler.Quad.Operator.<clinit>()V#Put(Ljava/util/List;,STATIC,Ljoeq/Compiler/Quad/Operator;,arrayboundsexception)#14
joeq.Compiler.Quad.Operator.<clinit>()V#Invoke(STATIC,Ljoeq/Class/PrimordialClassLoader;,getJavaLangArrayStoreException,()Ljoeq/Class/jq_Class;)#15
joeq.Class.PrimordialClassLoader.getJavaLangArrayStoreException()Ljoeq/Class/jq_Class;#Get(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/PrimordialClassLoader;,JavaLangArrayStoreException)#0
joeq.Class.PrimordialClassLoader.getJavaLangArrayStoreException()Ljoeq/Class/jq_Class;#Return(Ljava/lang/Object;)#1
joeq.Compiler.Quad.Operator.<clinit>()V#Invoke(STATIC,Ljoeq/Compiler/Quad/Operator;,singletonList,(Ljava/lang/Object;)Ljava/util/List;)#16
joeq.Compiler.Quad.Operator.<clinit>()V#Put(Ljava/util/List;,STATIC,Ljoeq/Compiler/Quad/Operator;,arraystoreexception)#17
joeq.Compiler.Quad.Operator.<clinit>()V#Invoke(STATIC,Ljoeq/Class/PrimordialClassLoader;,getJavaLangNegativeArraySizeException,()Ljoeq/Class/jq_Class;)#18
joeq.Class.PrimordialClassLoader.getJavaLangNegativeArraySizeException()Ljoeq/Class/jq_Class;#Get(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/PrimordialClassLoader;,JavaLangNegativeArraySizeException)#0
joeq.Class.PrimordialClassLoader.getJavaLangNegativeArraySizeException()Ljoeq/Class/jq_Class;#Return(Ljava/lang/Object;)#1
joeq.Compiler.Quad.Operator.<clinit>()V#Invoke(STATIC,Ljoeq/Compiler/Quad/Operator;,singletonList,(Ljava/lang/Object;)Ljava/util/List;)#19
joeq.Compiler.Quad.Operator.<clinit>()V#Put(Ljava/util/List;,STATIC,Ljoeq/Compiler/Quad/Operator;,negativesizeexception)#20
joeq.Compiler.Quad.Operator.<clinit>()V#Invoke(STATIC,Ljoeq/Class/PrimordialClassLoader;,getJavaLangArithmeticException,()Ljoeq/Class/jq_Class;)#21
joeq.Class.PrimordialClassLoader.getJavaLangArithmeticException()Ljoeq/Class/jq_Class;#Get(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/PrimordialClassLoader;,JavaLangArithmeticException)#0
joeq.Class.PrimordialClassLoader.getJavaLangArithmeticException()Ljoeq/Class/jq_Class;#Return(Ljava/lang/Object;)#1
joeq.Compiler.Quad.Operator.<clinit>()V#Invoke(STATIC,Ljoeq/Compiler/Quad/Operator;,singletonList,(Ljava/lang/Object;)Ljava/util/List;)#22
joeq.Compiler.Quad.Operator.<clinit>()V#Put(Ljava/util/List;,STATIC,Ljoeq/Compiler/Quad/Operator;,arithexception)#23
joeq.Compiler.Quad.Operator.<clinit>()V#Invoke(STATIC,Ljoeq/Class/PrimordialClassLoader;,getJavaLangThrowable,()Ljoeq/Class/jq_Class;)#24
joeq.Compiler.Quad.Operator.<clinit>()V#Invoke(STATIC,Ljoeq/Compiler/Quad/Operator;,singletonList,(Ljava/lang/Object;)Ljava/util/List;)#25
joeq.Compiler.Quad.Operator.<clinit>()V#Put(Ljava/util/List;,STATIC,Ljoeq/Compiler/Quad/Operator;,classcastexceptions)#26
joeq.Compiler.Quad.Operator.<clinit>()V#Invoke(STATIC,Ljoeq/Class/PrimordialClassLoader;,getJavaLangIllegalMonitorStateException,()Ljoeq/Class/jq_Class;)#27
joeq.Class.PrimordialClassLoader.getJavaLangIllegalMonitorStateException()Ljoeq/Class/jq_Class;#Get(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/PrimordialClassLoader;,JavaLangIllegalMonitorStateException)#0
joeq.Class.PrimordialClassLoader.getJavaLangIllegalMonitorStateException()Ljoeq/Class/jq_Class;#Return(Ljava/lang/Object;)#1
joeq.Compiler.Quad.Operator.<clinit>()V#Invoke(STATIC,Ljoeq/Compiler/Quad/Operator;,singletonList,(Ljava/lang/Object;)Ljava/util/List;)#28
joeq.Compiler.Quad.Operator.<clinit>()V#Put(Ljava/util/List;,STATIC,Ljoeq/Compiler/Quad/Operator;,illegalmonitorstateexception)#29
joeq.Compiler.Quad.Operator.<clinit>()V#Return(V)#30
joeq.Compiler.Quad.Operator$New$NEW.<clinit>()V#New(Ljoeq/Compiler/Quad/Operator$New$NEW;,0)#0
joeq.Compiler.Quad.Operator$New$NEW.<clinit>()V#Dup(1,0)#1
joeq.Compiler.Quad.Operator$New$NEW.<clinit>()V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Operator$New$NEW;,<init>,()V)#2
joeq.Compiler.Quad.Operator$New$NEW.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operator$New$NEW.<init>()V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Operator$New;,<init>,()V)#1
joeq.Compiler.Quad.Operator$New.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operator$New.<init>()V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Operator;,<init>,()V)#1
joeq.Compiler.Quad.Operator.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operator.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.Quad.Operator.<init>()V#Return(V)#2
joeq.Compiler.Quad.Operator$New.<init>()V#Return(V)#2
joeq.Compiler.Quad.Operator$New$NEW.<init>()V#Return(V)#2
joeq.Compiler.Quad.Operator$New$NEW.<clinit>()V#Put(Ljoeq/Compiler/Quad/Operator$New$NEW;,STATIC,Ljoeq/Compiler/Quad/Operator$New$NEW;,INSTANCE)#3
joeq.Compiler.Quad.Operator$New$NEW.<clinit>()V#Return(V)#4
joeq.Compiler.Quad.BytecodeToQuad.visitNEW(Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,2)#13
joeq.Compiler.Quad.BytecodeToQuad.visitNEW(Ljoeq/Class/jq_Type;)V#New(Ljoeq/Compiler/Quad/Operand$TypeOperand;,0)#14
joeq.Compiler.Quad.BytecodeToQuad.visitNEW(Ljoeq/Class/jq_Type;)V#Dup(1,0)#15
joeq.Compiler.Quad.BytecodeToQuad.visitNEW(Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,1)#16
joeq.Compiler.Quad.BytecodeToQuad.visitNEW(Ljoeq/Class/jq_Type;)V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Operand$TypeOperand;,<init>,(Ljoeq/Class/jq_Type;)V)#17
joeq.Compiler.Quad.Operand$TypeOperand.<init>(Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operand$TypeOperand.<init>(Ljoeq/Class/jq_Type;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.Quad.Operand$TypeOperand.<init>(Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.Operand$TypeOperand.<init>(Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Compiler.Quad.Operand$TypeOperand.<init>(Ljoeq/Class/jq_Type;)V#Put(Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Compiler/Quad/Operand$TypeOperand;,type)#4
joeq.Compiler.Quad.Operand$TypeOperand.<init>(Ljoeq/Class/jq_Type;)V#Return(V)#5
joeq.Compiler.Quad.BytecodeToQuad.visitNEW(Ljoeq/Class/jq_Type;)V#Invoke(STATIC,Ljoeq/Compiler/Quad/Operator$New;,create,(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$New;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand$TypeOperand;)Ljoeq/Compiler/Quad/Quad;)#18
joeq.Compiler.Quad.Operator$New.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$New;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand$TypeOperand;)Ljoeq/Compiler/Quad/Quad;#New(Ljoeq/Compiler/Quad/Quad;,0)#0
joeq.Compiler.Quad.Operator$New.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$New;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand$TypeOperand;)Ljoeq/Compiler/Quad/Quad;#Dup(1,0)#1
joeq.Compiler.Quad.Operator$New.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$New;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand$TypeOperand;)Ljoeq/Compiler/Quad/Quad;#LocalLoad(I,0)#2
joeq.Compiler.Quad.Operator$New.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$New;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand$TypeOperand;)Ljoeq/Compiler/Quad/Quad;#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Compiler.Quad.Operator$New.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$New;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand$TypeOperand;)Ljoeq/Compiler/Quad/Quad;#LocalLoad(Ljava/lang/Object;,2)#4
joeq.Compiler.Quad.Operator$New.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$New;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand$TypeOperand;)Ljoeq/Compiler/Quad/Quad;#LocalLoad(Ljava/lang/Object;,3)#5
joeq.Compiler.Quad.Operator$New.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$New;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand$TypeOperand;)Ljoeq/Compiler/Quad/Quad;#LocalLoad(Ljava/lang/Object;,4)#6
joeq.Compiler.Quad.Operator$New.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$New;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand$TypeOperand;)Ljoeq/Compiler/Quad/Quad;#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Quad;,<init>,(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V)#7
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(I,1)#3
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#Put(I,NONSTATIC,Ljoeq/Compiler/Quad/Quad;,id_number)#4
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,2)#6
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#Put(Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/Quad;,bb)#7
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,0)#8
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,3)#9
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#Put(Ljoeq/Compiler/Quad/Operator;,NONSTATIC,Ljoeq/Compiler/Quad/Quad;,operator)#10
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,0)#11
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,4)#12
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#Put(Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/Quad;,operand1)#13
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,0)#14
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,5)#15
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#Put(Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/Quad;,operand2)#16
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,4)#17
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#Constant(L;,null)#18
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#ConditionalBranch(Ljava/lang/Object;,eq,23)#19
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,4)#20
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,0)#21
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#Invoke(INTERFACE,Ljoeq/Compiler/Quad/Operand;,attachToQuad,(Ljoeq/Compiler/Quad/Quad;)V)#22
joeq.Compiler.Quad.Operand$RegisterOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operand$RegisterOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#Get(Ljoeq/Compiler/Quad/Quad;,NONSTATIC,Ljoeq/Compiler/Quad/Operand$RegisterOperand;,instruction)#1
joeq.Compiler.Quad.Operand$RegisterOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#Constant(L;,null)#2
joeq.Compiler.Quad.Operand$RegisterOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
joeq.Compiler.Quad.Operand$RegisterOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#Constant(I,1)#4
joeq.Compiler.Quad.Operand$RegisterOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#Goto(7)#5
joeq.Compiler.Quad.Operand$RegisterOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#7
joeq.Compiler.Quad.Operand$RegisterOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,0)#8
joeq.Compiler.Quad.Operand$RegisterOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,1)#9
joeq.Compiler.Quad.Operand$RegisterOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#Put(Ljoeq/Compiler/Quad/Quad;,NONSTATIC,Ljoeq/Compiler/Quad/Operand$RegisterOperand;,instruction)#10
joeq.Compiler.Quad.Operand$RegisterOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#Return(V)#11
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,5)#23
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#Constant(L;,null)#24
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#ConditionalBranch(Ljava/lang/Object;,eq,29)#25
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,5)#26
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,0)#27
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#Invoke(INTERFACE,Ljoeq/Compiler/Quad/Operand;,attachToQuad,(Ljoeq/Compiler/Quad/Quad;)V)#28
joeq.Compiler.Quad.Operand$TypeOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operand$TypeOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#Get(Ljoeq/Compiler/Quad/Quad;,NONSTATIC,Ljoeq/Compiler/Quad/Operand$TypeOperand;,instruction)#1
joeq.Compiler.Quad.Operand$TypeOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#Constant(L;,null)#2
joeq.Compiler.Quad.Operand$TypeOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
joeq.Compiler.Quad.Operand$TypeOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#Constant(I,1)#4
joeq.Compiler.Quad.Operand$TypeOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#Goto(7)#5
joeq.Compiler.Quad.Operand$TypeOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#7
joeq.Compiler.Quad.Operand$TypeOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,0)#8
joeq.Compiler.Quad.Operand$TypeOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,1)#9
joeq.Compiler.Quad.Operand$TypeOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#Put(Ljoeq/Compiler/Quad/Quad;,NONSTATIC,Ljoeq/Compiler/Quad/Operand$TypeOperand;,instruction)#10
joeq.Compiler.Quad.Operand$TypeOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#Return(V)#11
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#Return(V)#29
joeq.Compiler.Quad.Operator$New.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$New;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand$TypeOperand;)Ljoeq/Compiler/Quad/Quad;#Return(Ljava/lang/Object;)#8
joeq.Compiler.Quad.BytecodeToQuad.visitNEW(Ljoeq/Class/jq_Type;)V#LocalStore(Ljava/lang/Object;,3)#19
joeq.Compiler.Quad.BytecodeToQuad.visitNEW(Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,0)#20
joeq.Compiler.Quad.BytecodeToQuad.visitNEW(Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,3)#21
joeq.Compiler.Quad.BytecodeToQuad.visitNEW(Ljoeq/Class/jq_Type;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,appendQuad,(Ljoeq/Compiler/Quad/Quad;)V)#22
joeq.Compiler.Quad.BytecodeToQuad.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#Get(Z,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,TRACE)#1
joeq.Compiler.Quad.BytecodeToQuad.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#Constant(I,0)#2
joeq.Compiler.Quad.BytecodeToQuad.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#ConditionalBranch(I,eq,9)#3
joeq.Compiler.Quad.BytecodeToQuad.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,0)#9
joeq.Compiler.Quad.BytecodeToQuad.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#Get(Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_bb)#10
joeq.Compiler.Quad.BytecodeToQuad.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,1)#11
joeq.Compiler.Quad.BytecodeToQuad.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,appendQuad,(Ljoeq/Compiler/Quad/Quad;)V)#12
joeq.Compiler.Quad.BasicBlock.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BasicBlock.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#Get(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,instructions)#1
joeq.Compiler.Quad.BasicBlock.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#Constant(L;,null)#2
joeq.Compiler.Quad.BasicBlock.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#ConditionalBranch(Ljava/lang/Object;,eq,6)#3
joeq.Compiler.Quad.BasicBlock.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#Constant(I,1)#4
joeq.Compiler.Quad.BasicBlock.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#Goto(7)#5
joeq.Compiler.Quad.BasicBlock.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#Constant(Ljava/lang/String;,"Cannot add instructions to entry/exit basic block")#7
joeq.Compiler.Quad.BasicBlock.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(ZLjava/lang/String;)V)#8
joeq.Compiler.Quad.BasicBlock.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,0)#9
joeq.Compiler.Quad.BasicBlock.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#Get(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,instructions)#10
joeq.Compiler.Quad.BasicBlock.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,1)#11
joeq.Compiler.Quad.BasicBlock.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#12
joeq.Compiler.Quad.BasicBlock.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#Pop(1)#13
joeq.Compiler.Quad.BasicBlock.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#Return(V)#14
joeq.Compiler.Quad.BytecodeToQuad.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,0)#13
joeq.Compiler.Quad.BytecodeToQuad.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#Get(Ljava/util/HashMap;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad2bci)#14
joeq.Compiler.Quad.BytecodeToQuad.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,1)#15
joeq.Compiler.Quad.BytecodeToQuad.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#New(Ljava/lang/Integer;,0)#16
joeq.Compiler.Quad.BytecodeToQuad.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#Dup(1,0)#17
joeq.Compiler.Quad.BytecodeToQuad.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,0)#18
joeq.Compiler.Quad.BytecodeToQuad.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#Get(I,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,i_start)#19
joeq.Compiler.Quad.BytecodeToQuad.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#Invoke(SPECIAL,Ljava/lang/Integer;,<init>,(I)V)#20
joeq.Compiler.Quad.BytecodeToQuad.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#Invoke(VIRTUAL,Ljava/util/HashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#21
joeq.Compiler.Quad.Quad.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Quad.hashCode()I#Invoke(STATIC,Ljava/lang/System;,identityHashCode,(Ljava/lang/Object;)I)#1
joeq.Compiler.Quad.Quad.hashCode()I#Return(I)#2
joeq.Compiler.Quad.BytecodeToQuad.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#Pop(1)#22
joeq.Compiler.Quad.BytecodeToQuad.appendQuad(Ljoeq/Compiler/Quad/Quad;)V#Return(V)#23
joeq.Compiler.Quad.BytecodeToQuad.visitNEW(Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,0)#23
joeq.Compiler.Quad.BytecodeToQuad.visitNEW(Ljoeq/Class/jq_Type;)V#Get(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,current_state)#24
joeq.Compiler.Quad.BytecodeToQuad.visitNEW(Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,2)#25
joeq.Compiler.Quad.BytecodeToQuad.visitNEW(Ljoeq/Class/jq_Type;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Operand$RegisterOperand;,copy,()Ljoeq/Compiler/Quad/Operand;)#26
joeq.Compiler.Quad.Operand$RegisterOperand.copy()Ljoeq/Compiler/Quad/Operand;#New(Ljoeq/Compiler/Quad/Operand$RegisterOperand;,0)#0
joeq.Compiler.Quad.Operand$RegisterOperand.copy()Ljoeq/Compiler/Quad/Operand;#Dup(1,0)#1
joeq.Compiler.Quad.Operand$RegisterOperand.copy()Ljoeq/Compiler/Quad/Operand;#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.Operand$RegisterOperand.copy()Ljoeq/Compiler/Quad/Operand;#Get(Ljoeq/Compiler/Quad/RegisterFactory$Register;,NONSTATIC,Ljoeq/Compiler/Quad/Operand$RegisterOperand;,register)#3
joeq.Compiler.Quad.Operand$RegisterOperand.copy()Ljoeq/Compiler/Quad/Operand;#LocalLoad(Ljava/lang/Object;,0)#4
joeq.Compiler.Quad.Operand$RegisterOperand.copy()Ljoeq/Compiler/Quad/Operand;#Get(Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Compiler/Quad/Operand$RegisterOperand;,type)#5
joeq.Compiler.Quad.Operand$RegisterOperand.copy()Ljoeq/Compiler/Quad/Operand;#LocalLoad(Ljava/lang/Object;,0)#6
joeq.Compiler.Quad.Operand$RegisterOperand.copy()Ljoeq/Compiler/Quad/Operand;#Get(I,NONSTATIC,Ljoeq/Compiler/Quad/Operand$RegisterOperand;,flags)#7
joeq.Compiler.Quad.Operand$RegisterOperand.copy()Ljoeq/Compiler/Quad/Operand;#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Operand$RegisterOperand;,<init>,(Ljoeq/Compiler/Quad/RegisterFactory$Register;Ljoeq/Class/jq_Type;I)V)#8
joeq.Compiler.Quad.Operand$RegisterOperand.copy()Ljoeq/Compiler/Quad/Operand;#Return(Ljava/lang/Object;)#9
joeq.Compiler.Quad.BytecodeToQuad.visitNEW(Ljoeq/Class/jq_Type;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,push_A,(Ljoeq/Compiler/Quad/Operand;)V)#27
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push_A(Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,1)#0
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push_A(Ljoeq/Compiler/Quad/Operand;)V#Invoke(STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,getTypeOf,(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;)#1
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#Instanceof(Ljoeq/Compiler/Quad/Operand$IConstOperand;)#1
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#Constant(I,0)#2
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#ConditionalBranch(I,eq,6)#3
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#6
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#Instanceof(Ljoeq/Compiler/Quad/Operand$FConstOperand;)#7
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#Constant(I,0)#8
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#ConditionalBranch(I,eq,12)#9
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#12
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#Instanceof(Ljoeq/Compiler/Quad/Operand$LConstOperand;)#13
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#Constant(I,0)#14
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#ConditionalBranch(I,eq,18)#15
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#18
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#Instanceof(Ljoeq/Compiler/Quad/Operand$DConstOperand;)#19
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#Constant(I,0)#20
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#ConditionalBranch(I,eq,24)#21
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#24
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#Instanceof(Ljoeq/Compiler/Quad/Operand$PConstOperand;)#25
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#Constant(I,0)#26
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#ConditionalBranch(I,eq,30)#27
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#30
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#Instanceof(Ljoeq/Compiler/Quad/Operand$AConstOperand;)#31
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#Constant(I,0)#32
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#ConditionalBranch(I,eq,46)#33
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#46
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#Instanceof(Ljoeq/Compiler/Quad/Operand$RegisterOperand;)#47
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#New(Ljava/lang/StringBuilder;,0)#48
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#Dup(1,0)#49
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#50
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#51
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#Invoke(VIRTUAL,Ljava/lang/Object;,toString,()Ljava/lang/String;)#52
joeq.Compiler.Quad.Operand$RegisterOperand.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operand$RegisterOperand.toString()Ljava/lang/String;#Get(Ljoeq/Compiler/Quad/RegisterFactory$Register;,NONSTATIC,Ljoeq/Compiler/Quad/Operand$RegisterOperand;,register)#1
joeq.Compiler.Quad.Operand$RegisterOperand.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/RegisterFactory$Register;,toString,()Ljava/lang/String;)#2
joeq.Compiler.Quad.RegisterFactory$Register.toString()Ljava/lang/String;#New(Ljava/lang/StringBuilder;,0)#0
joeq.Compiler.Quad.RegisterFactory$Register.toString()Ljava/lang/String;#Dup(1,0)#1
joeq.Compiler.Quad.RegisterFactory$Register.toString()Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#2
joeq.Compiler.Quad.RegisterFactory$Register.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Compiler.Quad.RegisterFactory$Register.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/RegisterFactory$Register;,isTemp,()Z)#4
joeq.Compiler.Quad.RegisterFactory$Register.isTemp()Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.RegisterFactory$Register.isTemp()Z#Get(B,NONSTATIC,Ljoeq/Compiler/Quad/RegisterFactory$Register;,flags)#1
joeq.Compiler.Quad.RegisterFactory$Register.isTemp()Z#Constant(I,32)#2
joeq.Compiler.Quad.RegisterFactory$Register.isTemp()Z#BinaryOp(I,and)#3
joeq.Compiler.Quad.RegisterFactory$Register.isTemp()Z#Constant(I,0)#4
joeq.Compiler.Quad.RegisterFactory$Register.isTemp()Z#ConditionalBranch(I,eq,8)#5
joeq.Compiler.Quad.RegisterFactory$Register.isTemp()Z#Constant(I,1)#6
joeq.Compiler.Quad.RegisterFactory$Register.isTemp()Z#Goto(9)#7
joeq.Compiler.Quad.RegisterFactory$Register.isTemp()Z#Return(I)#9
joeq.Compiler.Quad.RegisterFactory$Register.toString()Ljava/lang/String;#Constant(I,0)#5
joeq.Compiler.Quad.RegisterFactory$Register.toString()Ljava/lang/String;#ConditionalBranch(I,eq,9)#6
joeq.Compiler.Quad.RegisterFactory$Register.toString()Ljava/lang/String;#Constant(Ljava/lang/String;,"T")#7
joeq.Compiler.Quad.RegisterFactory$Register.toString()Ljava/lang/String;#Goto(10)#8
joeq.Compiler.Quad.RegisterFactory$Register.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#10
joeq.Compiler.Quad.RegisterFactory$Register.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#11
joeq.Compiler.Quad.RegisterFactory$Register.toString()Ljava/lang/String;#Get(S,NONSTATIC,Ljoeq/Compiler/Quad/RegisterFactory$Register;,index)#12
joeq.Compiler.Quad.RegisterFactory$Register.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#13
joeq.Compiler.Quad.RegisterFactory$Register.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#14
joeq.Compiler.Quad.RegisterFactory$Register.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#15
joeq.Compiler.Quad.Operand$RegisterOperand.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#3
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#53
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#Constant(Ljava/lang/String;," is not a RegisterOperand")#54
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#55
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#56
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(ZLjava/lang/String;)V)#57
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#58
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#CheckCast(Ljoeq/Compiler/Quad/Operand$RegisterOperand;)#59
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Operand$RegisterOperand;,getType,()Ljoeq/Class/jq_Type;)#60
joeq.Compiler.Quad.Operand$RegisterOperand.getType()Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operand$RegisterOperand.getType()Ljoeq/Class/jq_Type;#Get(Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Compiler/Quad/Operand$RegisterOperand;,type)#1
joeq.Compiler.Quad.Operand$RegisterOperand.getType()Ljoeq/Class/jq_Type;#Return(Ljava/lang/Object;)#2
joeq.Compiler.Quad.BytecodeToQuad.getTypeOf(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;#Return(Ljava/lang/Object;)#61
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push_A(Ljoeq/Compiler/Quad/Operand;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,isReferenceType,()Z)#2
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push_A(Ljoeq/Compiler/Quad/Operand;)V#Constant(I,0)#3
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push_A(Ljoeq/Compiler/Quad/Operand;)V#ConditionalBranch(I,eq,12)#4
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push_A(Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,1)#5
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push_A(Ljoeq/Compiler/Quad/Operand;)V#Invoke(STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,getTypeOf,(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;)#6
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push_A(Ljoeq/Compiler/Quad/Operand;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,isAddressType,()Z)#7
joeq.Class.jq_Class.isAddressType()Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.isAddressType()Z#Get(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Memory/Address;,_class)#1
joeq.Class.jq_Class.isAddressType()Z#ConditionalBranch(Ljava/lang/Object;,eq,12)#2
joeq.Class.jq_Class.isAddressType()Z#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Class.isAddressType()Z#Get(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Memory/HeapAddress;,_class)#4
joeq.Class.jq_Class.isAddressType()Z#ConditionalBranch(Ljava/lang/Object;,eq,12)#5
joeq.Class.jq_Class.isAddressType()Z#LocalLoad(Ljava/lang/Object;,0)#6
joeq.Class.jq_Class.isAddressType()Z#Get(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Memory/CodeAddress;,_class)#7
joeq.Class.jq_Class.isAddressType()Z#ConditionalBranch(Ljava/lang/Object;,eq,12)#8
joeq.Class.jq_Class.isAddressType()Z#LocalLoad(Ljava/lang/Object;,0)#9
joeq.Class.jq_Class.isAddressType()Z#Get(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Memory/StackAddress;,_class)#10
joeq.Class.jq_Class.isAddressType()Z#ConditionalBranch(Ljava/lang/Object;,ne,14)#11
joeq.Class.jq_Class.isAddressType()Z#Constant(I,0)#14
joeq.Class.jq_Class.isAddressType()Z#Return(I)#15
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push_A(Ljoeq/Compiler/Quad/Operand;)V#Constant(I,0)#8
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push_A(Ljoeq/Compiler/Quad/Operand;)V#ConditionalBranch(I,ne,12)#9
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push_A(Ljoeq/Compiler/Quad/Operand;)V#Constant(I,1)#10
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push_A(Ljoeq/Compiler/Quad/Operand;)V#Goto(13)#11
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push_A(Ljoeq/Compiler/Quad/Operand;)V#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#13
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push_A(Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,0)#14
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push_A(Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,1)#15
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push_A(Ljoeq/Compiler/Quad/Operand;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,push,(Ljoeq/Compiler/Quad/Operand;)V)#16
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;)V#Get(Ljoeq/Compiler/Quad/BytecodeToQuad;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,this$0)#1
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;)V#Invoke(STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,access$1200,(Ljoeq/Compiler/Quad/BytecodeToQuad;)Z)#2
joeq.Compiler.Quad.BytecodeToQuad.access$1200(Ljoeq/Compiler/Quad/BytecodeToQuad;)Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad.access$1200(Ljoeq/Compiler/Quad/BytecodeToQuad;)Z#Get(Z,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,TRACE)#1
joeq.Compiler.Quad.BytecodeToQuad.access$1200(Ljoeq/Compiler/Quad/BytecodeToQuad;)Z#Return(I)#2
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;)V#Constant(I,0)#3
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;)V#ConditionalBranch(I,eq,20)#4
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,0)#20
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;)V#Get([Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,stack)#21
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,0)#22
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;)V#Dup(1,0)#23
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;)V#Get(I,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,stackptr)#24
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;)V#Dup(1,1)#25
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;)V#Constant(I,1)#26
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;)V#BinaryOp(I,add)#27
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;)V#Put(I,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,stackptr)#28
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,1)#29
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;)V#ArrayStore(Ljava/lang/Object;)#30
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;)V#Return(V)#31
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push_A(Ljoeq/Compiler/Quad/Operand;)V#Return(V)#17
joeq.Compiler.Quad.BytecodeToQuad.visitNEW(Ljoeq/Class/jq_Type;)V#Return(V)#28
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Goto(130)#143
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#Invoke(SPECIAL,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,visitDUP,()V)#1
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#Get(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,current_state)#3
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,pop,()Ljoeq/Compiler/Quad/Operand;)#4
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.pop()Ljoeq/Compiler/Quad/Operand;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.pop()Ljoeq/Compiler/Quad/Operand;#Get(Ljoeq/Compiler/Quad/BytecodeToQuad;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,this$0)#1
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.pop()Ljoeq/Compiler/Quad/Operand;#Invoke(STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,access$1500,(Ljoeq/Compiler/Quad/BytecodeToQuad;)Z)#2
joeq.Compiler.Quad.BytecodeToQuad.access$1500(Ljoeq/Compiler/Quad/BytecodeToQuad;)Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad.access$1500(Ljoeq/Compiler/Quad/BytecodeToQuad;)Z#Get(Z,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,TRACE)#1
joeq.Compiler.Quad.BytecodeToQuad.access$1500(Ljoeq/Compiler/Quad/BytecodeToQuad;)Z#Return(I)#2
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.pop()Ljoeq/Compiler/Quad/Operand;#Constant(I,0)#3
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.pop()Ljoeq/Compiler/Quad/Operand;#ConditionalBranch(I,eq,28)#4
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.pop()Ljoeq/Compiler/Quad/Operand;#LocalLoad(Ljava/lang/Object;,0)#28
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.pop()Ljoeq/Compiler/Quad/Operand;#Get([Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,stack)#29
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.pop()Ljoeq/Compiler/Quad/Operand;#LocalLoad(Ljava/lang/Object;,0)#30
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.pop()Ljoeq/Compiler/Quad/Operand;#Dup(1,0)#31
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.pop()Ljoeq/Compiler/Quad/Operand;#Get(I,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,stackptr)#32
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.pop()Ljoeq/Compiler/Quad/Operand;#Constant(I,1)#33
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.pop()Ljoeq/Compiler/Quad/Operand;#BinaryOp(I,sub)#34
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.pop()Ljoeq/Compiler/Quad/Operand;#Dup(1,1)#35
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.pop()Ljoeq/Compiler/Quad/Operand;#Put(I,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,stackptr)#36
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.pop()Ljoeq/Compiler/Quad/Operand;#ArrayLoad(Ljava/lang/Object;)#37
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.pop()Ljoeq/Compiler/Quad/Operand;#Return(Ljava/lang/Object;)#38
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#LocalStore(Ljava/lang/Object;,1)#5
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#LocalLoad(Ljava/lang/Object;,0)#6
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#Get(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,current_state)#7
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,getStackSize,()I)#8
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#LocalStore(I,2)#9
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#LocalLoad(Ljava/lang/Object;,1)#10
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#Invoke(STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,getTypeOf,(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;)#11
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#LocalStore(Ljava/lang/Object;,3)#12
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#New(Ljoeq/Compiler/Quad/Operand$RegisterOperand;,0)#13
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#Dup(1,0)#14
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#LocalLoad(Ljava/lang/Object;,0)#15
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#Get(Ljoeq/Compiler/Quad/RegisterFactory;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,rf)#16
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#LocalLoad(I,2)#17
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#Constant(I,1)#18
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#BinaryOp(I,add)#19
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#LocalLoad(Ljava/lang/Object;,3)#20
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/RegisterFactory;,getOrCreateStack,(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;)#21
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#LocalLoad(Ljava/lang/Object;,3)#22
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Operand$RegisterOperand;,<init>,(Ljoeq/Compiler/Quad/RegisterFactory$Register;Ljoeq/Class/jq_Type;)V)#23
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#LocalStore(Ljava/lang/Object;,4)#24
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#LocalLoad(Ljava/lang/Object;,0)#25
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_cfg)#26
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,getNewQuadID,()I)#27
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#LocalLoad(Ljava/lang/Object;,0)#28
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#Get(Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_bb)#29
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#LocalLoad(Ljava/lang/Object;,3)#30
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#Invoke(STATIC,Ljoeq/Compiler/Quad/Operator$Move;,getMoveOp,(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operator$Move;)#31
joeq.Compiler.Quad.Operator$Move.getMoveOp(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operator$Move;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operator$Move.getMoveOp(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operator$Move;#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,isAddressType,()Z)#1
joeq.Compiler.Quad.Operator$Move.getMoveOp(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operator$Move;#Constant(I,0)#2
joeq.Compiler.Quad.Operator$Move.getMoveOp(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operator$Move;#ConditionalBranch(I,eq,6)#3
joeq.Compiler.Quad.Operator$Move.getMoveOp(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operator$Move;#LocalLoad(Ljava/lang/Object;,0)#6
joeq.Compiler.Quad.Operator$Move.getMoveOp(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operator$Move;#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,isReferenceType,()Z)#7
joeq.Compiler.Quad.Operator$Move.getMoveOp(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operator$Move;#Constant(I,0)#8
joeq.Compiler.Quad.Operator$Move.getMoveOp(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operator$Move;#ConditionalBranch(I,eq,12)#9
joeq.Compiler.Quad.Operator$Move.getMoveOp(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operator$Move;#Get(Ljoeq/Compiler/Quad/Operator$Move$MOVE_A;,STATIC,Ljoeq/Compiler/Quad/Operator$Move$MOVE_A;,INSTANCE)#10
joeq.Compiler.Quad.Operator$Move$MOVE_A.<clinit>()V#New(Ljoeq/Compiler/Quad/Operator$Move$MOVE_A;,0)#0
joeq.Compiler.Quad.Operator$Move$MOVE_A.<clinit>()V#Dup(1,0)#1
joeq.Compiler.Quad.Operator$Move$MOVE_A.<clinit>()V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Operator$Move$MOVE_A;,<init>,()V)#2
joeq.Compiler.Quad.Operator$Move$MOVE_A.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operator$Move$MOVE_A.<init>()V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Operator$Move;,<init>,()V)#1
joeq.Compiler.Quad.Operator$Move.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operator$Move.<init>()V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Operator;,<init>,()V)#1
joeq.Compiler.Quad.Operator$Move.<init>()V#Return(V)#2
joeq.Compiler.Quad.Operator$Move$MOVE_A.<init>()V#Return(V)#2
joeq.Compiler.Quad.Operator$Move$MOVE_A.<clinit>()V#Put(Ljoeq/Compiler/Quad/Operator$Move$MOVE_A;,STATIC,Ljoeq/Compiler/Quad/Operator$Move$MOVE_A;,INSTANCE)#3
joeq.Compiler.Quad.Operator$Move$MOVE_A.<clinit>()V#Return(V)#4
joeq.Compiler.Quad.Operator$Move.getMoveOp(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operator$Move;#Return(Ljava/lang/Object;)#11
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#LocalLoad(Ljava/lang/Object;,4)#32
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#LocalLoad(Ljava/lang/Object;,1)#33
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#Invoke(STATIC,Ljoeq/Compiler/Quad/Operator$Move;,create,(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Move;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand;)Ljoeq/Compiler/Quad/Quad;)#34
joeq.Compiler.Quad.Operator$Move.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Move;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand;)Ljoeq/Compiler/Quad/Quad;#New(Ljoeq/Compiler/Quad/Quad;,0)#0
joeq.Compiler.Quad.Operator$Move.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Move;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand;)Ljoeq/Compiler/Quad/Quad;#Dup(1,0)#1
joeq.Compiler.Quad.Operator$Move.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Move;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand;)Ljoeq/Compiler/Quad/Quad;#LocalLoad(I,0)#2
joeq.Compiler.Quad.Operator$Move.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Move;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand;)Ljoeq/Compiler/Quad/Quad;#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Compiler.Quad.Operator$Move.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Move;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand;)Ljoeq/Compiler/Quad/Quad;#LocalLoad(Ljava/lang/Object;,2)#4
joeq.Compiler.Quad.Operator$Move.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Move;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand;)Ljoeq/Compiler/Quad/Quad;#LocalLoad(Ljava/lang/Object;,3)#5
joeq.Compiler.Quad.Operator$Move.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Move;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand;)Ljoeq/Compiler/Quad/Quad;#LocalLoad(Ljava/lang/Object;,4)#6
joeq.Compiler.Quad.Operator$Move.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Move;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand;)Ljoeq/Compiler/Quad/Quad;#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Quad;,<init>,(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V)#7
joeq.Compiler.Quad.Operator$Move.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Move;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand;)Ljoeq/Compiler/Quad/Quad;#Return(Ljava/lang/Object;)#8
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#LocalStore(Ljava/lang/Object;,5)#35
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#LocalLoad(Ljava/lang/Object;,0)#36
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#LocalLoad(Ljava/lang/Object;,5)#37
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,appendQuad,(Ljoeq/Compiler/Quad/Quad;)V)#38
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#LocalLoad(Ljava/lang/Object;,0)#39
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#Get(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,current_state)#40
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#LocalLoad(Ljava/lang/Object;,1)#41
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#Invoke(INTERFACE,Ljoeq/Compiler/Quad/Operand;,copy,()Ljoeq/Compiler/Quad/Operand;)#42
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#LocalLoad(Ljava/lang/Object;,3)#43
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,push,(Ljoeq/Compiler/Quad/Operand;Ljoeq/Class/jq_Type;)V)#44
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;Ljoeq/Class/jq_Type;)V#Get(Ljoeq/Compiler/Quad/BytecodeToQuad;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,this$0)#1
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;Ljoeq/Class/jq_Type;)V#Invoke(STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,access$1100,(Ljoeq/Compiler/Quad/BytecodeToQuad;)Ljoeq/Compiler/CompilationState;)#2
joeq.Compiler.Quad.BytecodeToQuad.access$1100(Ljoeq/Compiler/Quad/BytecodeToQuad;)Ljoeq/Compiler/CompilationState;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad.access$1100(Ljoeq/Compiler/Quad/BytecodeToQuad;)Ljoeq/Compiler/CompilationState;#Get(Ljoeq/Compiler/CompilationState;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,state)#1
joeq.Compiler.Quad.BytecodeToQuad.access$1100(Ljoeq/Compiler/Quad/BytecodeToQuad;)Ljoeq/Compiler/CompilationState;#Return(Ljava/lang/Object;)#2
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;Ljoeq/Class/jq_Type;)V#Invoke(STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,getTypeOf,(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;)#4
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,2)#5
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;Ljoeq/Class/jq_Type;)V#Invoke(VIRTUAL,Ljoeq/Compiler/CompilationState;,isSubtype,(Ljoeq/Class/jq_Type;Ljoeq/Class/jq_Type;)B)#6
joeq.Compiler.CompilationState$StaticCompilation.isSubtype(Ljoeq/Class/jq_Type;Ljoeq/Class/jq_Type;)B#LocalLoad(Ljava/lang/Object;,1)#0
joeq.Compiler.CompilationState$StaticCompilation.isSubtype(Ljoeq/Class/jq_Type;Ljoeq/Class/jq_Type;)B#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,prepare,()V)#1
joeq.Class.jq_Reference.isLoaded()Z#Constant(I,1)#4
joeq.Class.jq_Reference.isLoaded()Z#Goto(7)#5
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,10)#300
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,16)#301
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getDeclaredMember,(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;)#302
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalStore(Ljava/lang/Object;,17)#303
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,17)#304
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Constant(L;,null)#305
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ConditionalBranch(Ljava/lang/Object;,ne,337)#306
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,0)#337
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Get([Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool)#338
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(I,3)#339
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,17)#340
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ArrayStore(Ljava/lang/Object;)#341
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,15)#342
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Constant(I,40)#343
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,isDescriptor,(B)Z)#344
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Constant(I,0)#345
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ConditionalBranch(I,eq,395)#346
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,17)#347
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Member;,isStatic,()Z)#348
joeq.Class.jq_InstanceMethod.isStatic()Z#Constant(I,0)#0
joeq.Class.jq_InstanceMethod.isStatic()Z#Return(I)#1
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Constant(I,0)#349
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ConditionalBranch(I,eq,373)#350
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,0)#373
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Get([B,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool_tags)#374
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(I,3)#375
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Constant(I,17)#376
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ArrayStore(B)#377
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Get(Z,STATIC,Ljoeq/Class/jq_ConstantPool;,TRACE)#378
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Constant(I,0)#379
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ConditionalBranch(I,eq,442)#380
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Goto(455)#442
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#LocalLoad(Ljava/lang/Object;,15)#258
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,isValidTypeDescriptor,()Z)#259
joeq.UTF.Utf8.isValidTypeDescriptor()Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.UTF.Utf8.isValidTypeDescriptor()Z#Constant(I,0)#1
joeq.UTF.Utf8.isValidTypeDescriptor()Z#Invoke(SPECIAL,Ljoeq/UTF/Utf8;,isValidTypeDescriptor,(I)Z)#2
joeq.UTF.Utf8.isValidTypeDescriptor()Z#Return(I)#3
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#Constant(I,0)#260
joeq.Class.jq_ConstantPool.resolve(Ljava/lang/ClassLoader;)V#ConditionalBranch(I,ne,290)#261
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,9)#471
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,13)#472
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,1)#473
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(INTERFACE,Ljava/io/DataInput;,readUnsignedShort,()I)#474
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Conversion(I,C)#475
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ArrayStore(C)#476
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,1)#477
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(INTERFACE,Ljava/io/DataInput;,readUnsignedShort,()I)#478
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Conversion(I,C)#479
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,14)#480
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#481
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,14)#482
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getCPtag,(C)B)#483
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,1)#484
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,eq,514)#485
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#514
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,14)#515
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getCPasUtf8,(C)Ljoeq/UTF/Utf8;)#516
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(Ljava/lang/Object;,15)#517
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,1)#518
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(INTERFACE,Ljava/io/DataInput;,readUnsignedShort,()I)#519
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Conversion(I,C)#520
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,16)#521
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#522
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,16)#523
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getCPtag,(C)B)#524
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,1)#525
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,eq,555)#526
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#555
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,16)#556
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getCPasUtf8,(C)Ljoeq/UTF/Utf8;)#557
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(Ljava/lang/Object;,17)#558
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,17)#559
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,isValidTypeDescriptor,()Z)#560
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,0)#561
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,ne,575)#562
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#New(Ljoeq/Class/jq_NameAndDesc;,0)#575
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Dup(1,0)#576
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,15)#577
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,17)#578
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(SPECIAL,Ljoeq/Class/jq_NameAndDesc;,<init>,(Ljoeq/UTF/Utf8;Ljoeq/UTF/Utf8;)V)#579
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(Ljava/lang/Object;,18)#580
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#581
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,18)#582
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getDeclaredMember,(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;)#583
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#CheckCast(Ljoeq/Class/jq_Field;)#584
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(Ljava/lang/Object;,19)#585
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,9)#586
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,13)#587
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ArrayLoad(C)#588
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,8)#589
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#BinaryOp(I,and)#590
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,0)#591
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,eq,624)#592
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,19)#624
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(L;,null)#625
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(Ljava/lang/Object;,ne,632)#626
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#627
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,18)#628
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,createInstanceField,(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceField;)#629
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(Ljava/lang/Object;,19)#630
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Goto(650)#631
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,12)#650
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,1)#651
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#BinaryOp(I,add)#652
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,12)#653
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,19)#654
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,9)#655
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,13)#656
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ArrayLoad(C)#657
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,1)#658
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Field;,load,(CLjava/io/DataInput;)V)#659
joeq.Class.jq_InstanceField.load(CLjava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_InstanceField.load(CLjava/io/DataInput;)V#LocalLoad(I,1)#1
joeq.Class.jq_InstanceField.load(CLjava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,2)#2
joeq.Class.jq_InstanceField.load(CLjava/io/DataInput;)V#Invoke(SPECIAL,Ljoeq/Class/jq_Field;,load,(CLjava/io/DataInput;)V)#3
joeq.Class.jq_Field.load(CLjava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Field.load(CLjava/io/DataInput;)V#LocalLoad(I,1)#1
joeq.Class.jq_Field.load(CLjava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,2)#2
joeq.Class.jq_Field.load(CLjava/io/DataInput;)V#Invoke(SPECIAL,Ljoeq/Class/jq_Member;,load,(CLjava/io/DataInput;)V)#3
joeq.Class.jq_Field.load(CLjava/io/DataInput;)V#Get(Z,STATIC,Ljoeq/Main/jq;,RunningNative)#4
joeq.Class.jq_Field.load(CLjava/io/DataInput;)V#Constant(I,0)#5
joeq.Class.jq_Field.load(CLjava/io/DataInput;)V#ConditionalBranch(I,eq,13)#6
joeq.Class.jq_Field.load(CLjava/io/DataInput;)V#Return(V)#13
joeq.Class.jq_InstanceField.load(CLjava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#4
joeq.Class.jq_InstanceField.load(CLjava/io/DataInput;)V#Constant(I,5)#5
joeq.Class.jq_InstanceField.load(CLjava/io/DataInput;)V#Put(B,NONSTATIC,Ljoeq/Class/jq_InstanceField;,state)#6
joeq.Class.jq_InstanceField.load(CLjava/io/DataInput;)V#Return(V)#7
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,10)#660
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,13)#661
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,19)#662
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ArrayStore(Ljava/lang/Object;)#663
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,13)#664
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,1)#665
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#BinaryOp(I,add)#666
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,13)#667
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Goto(468)#668
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,9)#689
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,13)#690
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ArrayLoad(C)#691
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,8)#692
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#BinaryOp(I,and)#693
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,0)#694
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,eq,719)#695
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#719
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Get([Ljoeq/Class/jq_InstanceField;,NONSTATIC,Ljoeq/Class/jq_Class;,declared_instance_fields)#720
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,14)#721
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,1)#722
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#BinaryOp(I,add)#723
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,14)#724
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,14)#725
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,10)#726
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,13)#727
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ArrayLoad(Ljava/lang/Object;)#728
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#CheckCast(Ljoeq/Class/jq_InstanceField;)#729
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ArrayStore(Ljava/lang/Object;)#730
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,13)#731
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,1)#732
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#BinaryOp(I,add)#733
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,13)#734
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Goto(686)#735
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,24)#917
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,isStatic,()Z)#918
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,0)#919
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,eq,925)#920
joeq.Class.jq_LocalVarTableEntry.equals(Ljoeq/Class/jq_LocalVarTableEntry;)Z#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Class.jq_LocalVarTableEntry.equals(Ljoeq/Class/jq_LocalVarTableEntry;)Z#Get(C,NONSTATIC,Ljoeq/Class/jq_LocalVarTableEntry;,index)#6
joeq.Class.jq_LocalVarTableEntry.equals(Ljoeq/Class/jq_LocalVarTableEntry;)Z#LocalLoad(Ljava/lang/Object;,1)#7
joeq.Class.jq_LocalVarTableEntry.equals(Ljoeq/Class/jq_LocalVarTableEntry;)Z#Get(C,NONSTATIC,Ljoeq/Class/jq_LocalVarTableEntry;,index)#8
joeq.Class.jq_LocalVarTableEntry.equals(Ljoeq/Class/jq_LocalVarTableEntry;)Z#ConditionalBranch(I,ne,12)#9
joeq.Class.jq_Class.verify()V#Return(V)#4
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#132
joeq.Class.jq_Class.prepare()V#Get(Z,NONSTATIC,Ljoeq/Class/jq_Class;,dont_align)#133
joeq.Class.jq_Class.prepare()V#Constant(I,0)#134
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,ne,268)#135
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#136
joeq.Class.jq_Class.prepare()V#Get([Ljoeq/Class/jq_InstanceField;,NONSTATIC,Ljoeq/Class/jq_Class;,declared_instance_fields)#137
joeq.Class.jq_Class.prepare()V#Constant(I,0)#138
joeq.Class.jq_Class.prepare()V#ArrayLoad(Ljava/lang/Object;)#139
joeq.Class.jq_Class.prepare()V#Invoke(VIRTUAL,Ljoeq/Class/jq_InstanceField;,getSize,()I)#140
joeq.Class.jq_InstanceField.getSize()I#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_InstanceField.getSize()I#Get(Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_InstanceField;,type)#1
joeq.Class.jq_InstanceField.getSize()I#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,getReferenceSize,()I)#2
joeq.Class.jq_Primitive.getReferenceSize()I#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Primitive.getReferenceSize()I#Get(I,NONSTATIC,Ljoeq/Class/jq_Primitive;,size)#1
joeq.Class.jq_Primitive.getReferenceSize()I#Return(I)#2
joeq.Class.jq_InstanceField.getSize()I#Return(I)#3
joeq.Class.jq_Class.prepare()V#LocalStore(I,8)#141
joeq.Class.jq_Class.prepare()V#LocalLoad(I,7)#142
joeq.Class.jq_Class.prepare()V#LocalLoad(I,8)#143
joeq.Class.jq_Class.prepare()V#Constant(I,1)#144
joeq.Class.jq_Class.prepare()V#BinaryOp(I,sub)#145
joeq.Class.jq_Class.prepare()V#BinaryOp(I,and)#146
joeq.Class.jq_Class.prepare()V#LocalStore(I,9)#147
joeq.Class.jq_Class.prepare()V#LocalLoad(I,9)#148
joeq.Class.jq_Class.prepare()V#Constant(I,0)#149
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,eq,267)#150
joeq.Class.jq_Class.prepare()V#Goto(280)#267
joeq.Class.jq_Class.prepare()V#Constant(I,0)#280
joeq.Class.jq_Class.prepare()V#LocalStore(I,8)#281
joeq.Class.jq_Class.prepare()V#LocalLoad(I,8)#282
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#283
joeq.Class.jq_Class.prepare()V#Get([Ljoeq/Class/jq_InstanceField;,NONSTATIC,Ljoeq/Class/jq_Class;,declared_instance_fields)#284
joeq.Class.jq_Class.prepare()V#ArrayLength()#285
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,ge,357)#286
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#287
joeq.Class.jq_Class.prepare()V#Get([Ljoeq/Class/jq_InstanceField;,NONSTATIC,Ljoeq/Class/jq_Class;,declared_instance_fields)#288
joeq.Class.jq_Class.prepare()V#LocalLoad(I,8)#289
joeq.Class.jq_Class.prepare()V#ArrayLoad(Ljava/lang/Object;)#290
joeq.Class.jq_Class.prepare()V#LocalStore(Ljava/lang/Object;,9)#291
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,9)#292
joeq.Class.jq_Class.prepare()V#Invoke(VIRTUAL,Ljoeq/Class/jq_InstanceField;,getState,()I)#293
joeq.Class.jq_Class.prepare()V#Constant(I,5)#294
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,ne,352)#295
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#296
joeq.Class.jq_Class.prepare()V#Get([Ljoeq/Class/jq_InstanceField;,NONSTATIC,Ljoeq/Class/jq_Class;,instance_fields)#297
joeq.Class.jq_Class.prepare()V#LocalLoad(I,6)#298
joeq.Class.jq_Class.prepare()V#Constant(I,1)#299
joeq.Class.jq_Class.prepare()V#BinaryOp(I,add)#300
joeq.Class.jq_Class.prepare()V#LocalStore(I,6)#301
joeq.Class.jq_Class.prepare()V#LocalLoad(I,6)#302
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,9)#303
joeq.Class.jq_Class.prepare()V#ArrayStore(Ljava/lang/Object;)#304
joeq.Class.jq_Class.prepare()V#Get(Z,STATIC,Ljoeq/Class/jq_Class;,TRACE)#305
joeq.Class.jq_Class.prepare()V#Constant(I,0)#306
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,eq,328)#307
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,9)#328
joeq.Class.jq_Class.prepare()V#LocalLoad(I,7)#329
joeq.Class.jq_Class.prepare()V#Constant(I,8)#330
joeq.Class.jq_Class.prepare()V#BinaryOp(I,sub)#331
joeq.Class.jq_Class.prepare()V#Invoke(VIRTUAL,Ljoeq/Class/jq_InstanceField;,prepare,(I)V)#332
joeq.Class.jq_InstanceField.prepare(I)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_InstanceField.prepare(I)V#Get(B,NONSTATIC,Ljoeq/Class/jq_InstanceField;,state)#1
joeq.Class.jq_InstanceField.prepare(I)V#Constant(I,5)#2
joeq.Class.jq_InstanceField.prepare(I)V#ConditionalBranch(I,ne,6)#3
joeq.Class.jq_InstanceField.prepare(I)V#Constant(I,1)#4
joeq.Class.jq_InstanceField.prepare(I)V#Goto(7)#5
joeq.Class.jq_InstanceField.prepare(I)V#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#7
joeq.Class.jq_InstanceField.prepare(I)V#LocalLoad(Ljava/lang/Object;,0)#8
joeq.Class.jq_InstanceField.prepare(I)V#Constant(I,11)#9
joeq.Class.jq_InstanceField.prepare(I)V#Put(B,NONSTATIC,Ljoeq/Class/jq_InstanceField;,state)#10
joeq.Class.jq_InstanceField.prepare(I)V#LocalLoad(Ljava/lang/Object;,0)#11
joeq.Class.jq_InstanceField.prepare(I)V#LocalLoad(I,1)#12
joeq.Class.jq_InstanceField.prepare(I)V#Put(I,NONSTATIC,Ljoeq/Class/jq_InstanceField;,offset)#13
joeq.Class.jq_InstanceField.prepare(I)V#Return(V)#14
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,9)#333
joeq.Class.jq_Class.prepare()V#Invoke(VIRTUAL,Ljoeq/Class/jq_InstanceField;,getType,()Ljoeq/Class/jq_Type;)#334
joeq.Class.jq_Field.getType()Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Field.getType()Ljoeq/Class/jq_Type;#Get(Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_Field;,type)#1
joeq.Class.jq_Field.getType()Ljoeq/Class/jq_Type;#Return(Ljava/lang/Object;)#2
joeq.Class.jq_Class.prepare()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,isReferenceType,()Z)#335
joeq.Class.jq_Type.isReferenceType()Z#Constant(I,0)#6
joeq.Class.jq_Class.prepare()V#Constant(I,0)#336
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,eq,347)#337
joeq.Class.jq_Class.prepare()V#LocalLoad(I,7)#347
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,9)#348
joeq.Class.jq_Class.prepare()V#Invoke(VIRTUAL,Ljoeq/Class/jq_InstanceField;,getSize,()I)#349
joeq.Class.jq_Class.prepare()V#BinaryOp(I,add)#350
joeq.Class.jq_Class.prepare()V#LocalStore(I,7)#351
joeq.Class.jq_Class.prepare()V#LocalLoad(I,8)#352
joeq.Class.jq_Class.prepare()V#Constant(I,1)#353
joeq.Class.jq_Class.prepare()V#BinaryOp(I,add)#354
joeq.Class.jq_Class.prepare()V#LocalStore(I,8)#355
joeq.Class.jq_Class.prepare()V#Goto(282)#356
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#377
joeq.Class.jq_Class.prepare()V#Get([Ljoeq/Class/jq_InstanceField;,NONSTATIC,Ljoeq/Class/jq_Class;,instance_fields)#378
joeq.Class.jq_Class.prepare()V#LocalLoad(I,9)#379
joeq.Class.jq_Class.prepare()V#ArrayLoad(Ljava/lang/Object;)#380
joeq.Class.jq_Class.prepare()V#LocalStore(Ljava/lang/Object;,10)#381
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,10)#382
joeq.Class.jq_Class.prepare()V#Invoke(VIRTUAL,Ljoeq/Class/jq_InstanceField;,getType,()Ljoeq/Class/jq_Type;)#383
joeq.Class.jq_Class.prepare()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,isReferenceType,()Z)#384
joeq.Class.jq_Class.prepare()V#Constant(I,0)#385
joeq.Class.jq_Class.prepare()V#ConditionalBranch(I,eq,402)#386
joeq.Class.jq_Class.prepare()V#LocalLoad(I,9)#402
joeq.Class.jq_Class.prepare()V#Constant(I,1)#403
joeq.Class.jq_Class.prepare()V#BinaryOp(I,add)#404
joeq.Class.jq_Class.prepare()V#LocalStore(I,9)#405
joeq.Class.jq_Class.prepare()V#Goto(372)#406
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,0)#449
joeq.Class.jq_Class.prepare()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,super_class)#450
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,11)#451
joeq.Class.jq_Class.prepare()V#Invoke(VIRTUAL,Ljoeq/Class/jq_InstanceMethod;,getNameAndDesc,()Ljoeq/Class/jq_NameAndDesc;)#452
joeq.Class.jq_Class.prepare()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getVirtualMethod,(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;)#453
joeq.Class.jq_Class.getVirtualMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.getVirtualMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#Constant(I,11)#1
joeq.Class.jq_Class.getVirtualMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,chkState,(B)V)#2
joeq.Class.jq_Class.getVirtualMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Class.getVirtualMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#Get([Ljoeq/Class/jq_InstanceMethod;,NONSTATIC,Ljoeq/Class/jq_Class;,virtual_methods)#4
joeq.Class.jq_Class.getVirtualMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,1)#5
joeq.Class.jq_Class.getVirtualMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#Invoke(STATIC,Ljoeq/Class/jq_Class;,findByNameAndDesc,([Ljoeq/Class/jq_Member;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;)#6
joeq.Class.jq_Class.getVirtualMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#CheckCast(Ljoeq/Class/jq_InstanceMethod;)#7
joeq.Class.jq_Class.getVirtualMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_InstanceMethod;#Return(Ljava/lang/Object;)#8
joeq.Class.jq_Class.prepare()V#LocalStore(Ljava/lang/Object;,12)#454
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,12)#455
joeq.Class.jq_Class.prepare()V#Constant(L;,null)#456
joeq.Class.jq_Class.prepare()V#ConditionalBranch(Ljava/lang/Object;,eq,514)#457
joeq.Compiler.CompilationState$StaticCompilation.isSubtype(Ljoeq/Class/jq_Type;Ljoeq/Class/jq_Type;)B#LocalLoad(Ljava/lang/Object;,2)#2
joeq.Compiler.CompilationState$StaticCompilation.isSubtype(Ljoeq/Class/jq_Type;Ljoeq/Class/jq_Type;)B#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,prepare,()V)#3
joeq.Compiler.CompilationState$StaticCompilation.isSubtype(Ljoeq/Class/jq_Type;Ljoeq/Class/jq_Type;)B#LocalLoad(Ljava/lang/Object;,1)#4
joeq.Compiler.CompilationState$StaticCompilation.isSubtype(Ljoeq/Class/jq_Type;Ljoeq/Class/jq_Type;)B#LocalLoad(Ljava/lang/Object;,2)#5
joeq.Compiler.CompilationState$StaticCompilation.isSubtype(Ljoeq/Class/jq_Type;Ljoeq/Class/jq_Type;)B#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,isSubtypeOf,(Ljoeq/Class/jq_Type;)Z)#6
joeq.Class.jq_Type.isSubtypeOf(Ljoeq/Class/jq_Type;)Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Type.isSubtypeOf(Ljoeq/Class/jq_Type;)Z#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,isPrepared,()Z)#1
joeq.Class.jq_Type.isSubtypeOf(Ljoeq/Class/jq_Type;)Z#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#2
joeq.Class.jq_Type.isSubtypeOf(Ljoeq/Class/jq_Type;)Z#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Class.jq_Type.isSubtypeOf(Ljoeq/Class/jq_Type;)Z#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,isPrepared,()Z)#4
joeq.Class.jq_Type.isSubtypeOf(Ljoeq/Class/jq_Type;)Z#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#5
joeq.Class.jq_Type.isSubtypeOf(Ljoeq/Class/jq_Type;)Z#LocalLoad(Ljava/lang/Object;,1)#6
joeq.Class.jq_Type.isSubtypeOf(Ljoeq/Class/jq_Type;)Z#Get(I,NONSTATIC,Ljoeq/Class/jq_Type;,offset)#7
joeq.Class.jq_Type.isSubtypeOf(Ljoeq/Class/jq_Type;)Z#LocalStore(I,2)#8
joeq.Class.jq_Type.isSubtypeOf(Ljoeq/Class/jq_Type;)Z#LocalLoad(Ljava/lang/Object;,1)#9
joeq.Class.jq_Type.isSubtypeOf(Ljoeq/Class/jq_Type;)Z#LocalLoad(Ljava/lang/Object;,0)#10
joeq.Class.jq_Type.isSubtypeOf(Ljoeq/Class/jq_Type;)Z#Get([Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_Type;,display)#11
joeq.Class.jq_Type.isSubtypeOf(Ljoeq/Class/jq_Type;)Z#LocalLoad(I,2)#12
joeq.Class.jq_Type.isSubtypeOf(Ljoeq/Class/jq_Type;)Z#ArrayLoad(Ljava/lang/Object;)#13
joeq.Class.jq_Type.isSubtypeOf(Ljoeq/Class/jq_Type;)Z#ConditionalBranch(Ljava/lang/Object;,ne,22)#14
joeq.Class.jq_Type.isSubtypeOf(Ljoeq/Class/jq_Type;)Z#LocalLoad(I,2)#15
joeq.Class.jq_Type.isSubtypeOf(Ljoeq/Class/jq_Type;)Z#Constant(I,1)#16
joeq.Class.jq_Type.isSubtypeOf(Ljoeq/Class/jq_Type;)Z#ConditionalBranch(I,eq,20)#17
joeq.Class.jq_Type.isSubtypeOf(Ljoeq/Class/jq_Type;)Z#Constant(I,1)#18
joeq.Class.jq_Type.isSubtypeOf(Ljoeq/Class/jq_Type;)Z#Goto(21)#19
joeq.Class.jq_Type.isSubtypeOf(Ljoeq/Class/jq_Type;)Z#Return(I)#21
joeq.Compiler.CompilationState$StaticCompilation.isSubtype(Ljoeq/Class/jq_Type;Ljoeq/Class/jq_Type;)B#Constant(I,0)#7
joeq.Compiler.CompilationState$StaticCompilation.isSubtype(Ljoeq/Class/jq_Type;Ljoeq/Class/jq_Type;)B#ConditionalBranch(I,eq,11)#8
joeq.Compiler.CompilationState$StaticCompilation.isSubtype(Ljoeq/Class/jq_Type;Ljoeq/Class/jq_Type;)B#Constant(I,1)#9
joeq.Compiler.CompilationState$StaticCompilation.isSubtype(Ljoeq/Class/jq_Type;Ljoeq/Class/jq_Type;)B#Goto(12)#10
joeq.Compiler.CompilationState$StaticCompilation.isSubtype(Ljoeq/Class/jq_Type;Ljoeq/Class/jq_Type;)B#Return(I)#12
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;Ljoeq/Class/jq_Type;)V#Constant(I,1)#7
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;Ljoeq/Class/jq_Type;)V#ConditionalBranch(I,ne,11)#8
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;Ljoeq/Class/jq_Type;)V#Constant(I,1)#9
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;Ljoeq/Class/jq_Type;)V#Goto(12)#10
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;Ljoeq/Class/jq_Type;)V#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#12
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,0)#13
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,1)#14
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;Ljoeq/Class/jq_Type;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,push,(Ljoeq/Compiler/Quad/Operand;)V)#15
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;Ljoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,2)#16
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;Ljoeq/Class/jq_Type;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,getReferenceSize,()I)#17
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;Ljoeq/Class/jq_Type;)V#Constant(I,8)#18
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;Ljoeq/Class/jq_Type;)V#ConditionalBranch(I,ne,22)#19
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.push(Ljoeq/Compiler/Quad/Operand;Ljoeq/Class/jq_Type;)V#Return(V)#22
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#LocalLoad(Ljava/lang/Object;,0)#45
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#Get(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,current_state)#46
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#LocalLoad(Ljava/lang/Object;,4)#47
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Operand$RegisterOperand;,copy,()Ljoeq/Compiler/Quad/Operand;)#48
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#LocalLoad(Ljava/lang/Object;,3)#49
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,push,(Ljoeq/Compiler/Quad/Operand;Ljoeq/Class/jq_Type;)V)#50
joeq.Compiler.Quad.BytecodeToQuad.visitDUP()V#Return(V)#51
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#LocalLoad(I,1)#1
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,2)#2
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#Invoke(SPECIAL,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,visitVINVOKE,(BLjoeq/Class/jq_Method;)V)#3
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#Get(Ljoeq/Compiler/Quad/BytecodeToQuad$UnsafeHelper;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,_unsafe)#4
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,2)#5
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#Invoke(INTERFACE,Ljoeq/Compiler/Quad/BytecodeToQuad$UnsafeHelper;,isUnsafe,(Ljoeq/Class/jq_Method;)Z)#6
joeq.Compiler.Quad.B2QUnsafeIgnorer.isUnsafe(Ljoeq/Class/jq_Method;)Z#Constant(I,0)#0
joeq.Compiler.Quad.B2QUnsafeIgnorer.isUnsafe(Ljoeq/Class/jq_Method;)Z#Return(I)#1
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#Constant(I,0)#7
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#ConditionalBranch(I,eq,14)#8
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,2)#14
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getDeclaringClass,()Ljoeq/Class/jq_Class;)#15
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,isAddressType,()Z)#16
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#Constant(I,0)#17
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#ConditionalBranch(I,eq,30)#18
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#30
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,2)#31
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,tryResolve,(Ljoeq/Class/jq_Member;)Ljoeq/Class/jq_Member;)#32
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.tryResolve(Ljoeq/Class/jq_Member;)Ljoeq/Class/jq_Member;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.tryResolve(Ljoeq/Class/jq_Member;)Ljoeq/Class/jq_Member;#Get(Ljoeq/Compiler/CompilationState;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,state)#1
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.tryResolve(Ljoeq/Class/jq_Member;)Ljoeq/Class/jq_Member;#LocalLoad(Ljava/lang/Object;,1)#2
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.tryResolve(Ljoeq/Class/jq_Member;)Ljoeq/Class/jq_Member;#Invoke(VIRTUAL,Ljoeq/Compiler/CompilationState;,tryResolve,(Ljoeq/Class/jq_Member;)Ljoeq/Class/jq_Member;)#3
joeq.Compiler.CompilationState$StaticCompilation.tryResolve(Ljoeq/Class/jq_Member;)Ljoeq/Class/jq_Member;#LocalLoad(Ljava/lang/Object;,1)#0
joeq.Compiler.CompilationState$StaticCompilation.tryResolve(Ljoeq/Class/jq_Member;)Ljoeq/Class/jq_Member;#Invoke(VIRTUAL,Ljoeq/Class/jq_Member;,resolve,()Ljoeq/Class/jq_Member;)#1
joeq.Class.jq_InstanceMethod.resolve()Ljoeq/Class/jq_Member;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_InstanceMethod.resolve()Ljoeq/Class/jq_Member;#Invoke(VIRTUAL,Ljoeq/Class/jq_InstanceMethod;,resolve1,()Ljoeq/Class/jq_InstanceMethod;)#1
joeq.Class.jq_Initializer.resolve1()Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Initializer.resolve1()Ljoeq/Class/jq_InstanceMethod;#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Initializer;,clazz)#1
joeq.Class.jq_Initializer.resolve1()Ljoeq/Class/jq_InstanceMethod;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,load,()V)#2
joeq.Class.jq_Class.load()V#Return(V)#4
joeq.Class.jq_Initializer.resolve1()Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Initializer.resolve1()Ljoeq/Class/jq_InstanceMethod;#Get(B,NONSTATIC,Ljoeq/Class/jq_Initializer;,state)#4
joeq.Class.jq_Initializer.resolve1()Ljoeq/Class/jq_InstanceMethod;#Constant(I,5)#5
joeq.Class.jq_Initializer.resolve1()Ljoeq/Class/jq_InstanceMethod;#ConditionalBranch(I,lt,9)#6
joeq.Class.jq_Initializer.resolve1()Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,0)#7
joeq.Class.jq_Initializer.resolve1()Ljoeq/Class/jq_InstanceMethod;#Return(Ljava/lang/Object;)#8
joeq.Class.jq_InstanceMethod.resolve()Ljoeq/Class/jq_Member;#Return(Ljava/lang/Object;)#2
joeq.Compiler.CompilationState$StaticCompilation.tryResolve(Ljoeq/Class/jq_Member;)Ljoeq/Class/jq_Member;#LocalStore(Ljava/lang/Object;,1)#2
joeq.Compiler.CompilationState$StaticCompilation.tryResolve(Ljoeq/Class/jq_Member;)Ljoeq/Class/jq_Member;#Goto(17)#3
joeq.Compiler.CompilationState$StaticCompilation.tryResolve(Ljoeq/Class/jq_Member;)Ljoeq/Class/jq_Member;#LocalLoad(Ljava/lang/Object;,1)#17
joeq.Compiler.CompilationState$StaticCompilation.tryResolve(Ljoeq/Class/jq_Member;)Ljoeq/Class/jq_Member;#Return(Ljava/lang/Object;)#18
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.tryResolve(Ljoeq/Class/jq_Member;)Ljoeq/Class/jq_Member;#LocalStore(Ljava/lang/Object;,2)#4
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.tryResolve(Ljoeq/Class/jq_Member;)Ljoeq/Class/jq_Member;#LocalLoad(Ljava/lang/Object;,1)#5
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.tryResolve(Ljoeq/Class/jq_Member;)Ljoeq/Class/jq_Member;#LocalLoad(Ljava/lang/Object;,2)#6
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.tryResolve(Ljoeq/Class/jq_Member;)Ljoeq/Class/jq_Member;#ConditionalBranch(Ljava/lang/Object;,eq,43)#7
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.tryResolve(Ljoeq/Class/jq_Member;)Ljoeq/Class/jq_Member;#LocalLoad(Ljava/lang/Object;,2)#43
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.tryResolve(Ljoeq/Class/jq_Member;)Ljoeq/Class/jq_Member;#Return(Ljava/lang/Object;)#44
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#CheckCast(Ljoeq/Class/jq_Method;)#33
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#LocalStore(Ljava/lang/Object;,2)#34
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#35
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#Get(Ljoeq/Compiler/CompilationState;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,state)#36
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#37
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#Get(Ljoeq/Class/jq_Method;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,method)#38
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,2)#39
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Compiler/CompilationState;,needsDynamicLink,(Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Member;)Z)#40
joeq.Compiler.CompilationState$StaticCompilation.needsDynamicLink(Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Member;)Z#LocalLoad(Ljava/lang/Object;,2)#0
joeq.Compiler.CompilationState$StaticCompilation.needsDynamicLink(Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Member;)Z#Invoke(VIRTUAL,Ljoeq/Class/jq_Member;,isPrepared,()Z)#1
joeq.Class.jq_Member.isPrepared()Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Member.isPrepared()Z#Get(B,NONSTATIC,Ljoeq/Class/jq_Member;,state)#1
joeq.Class.jq_Member.isPrepared()Z#Constant(I,11)#2
joeq.Class.jq_Member.isPrepared()Z#ConditionalBranch(I,lt,6)#3
joeq.Class.jq_Member.isPrepared()Z#Constant(I,1)#4
joeq.Class.jq_Member.isPrepared()Z#Goto(7)#5
joeq.Class.jq_Member.isPrepared()Z#Return(I)#7
joeq.Compiler.CompilationState$StaticCompilation.needsDynamicLink(Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Member;)Z#Constant(I,0)#2
joeq.Compiler.CompilationState$StaticCompilation.needsDynamicLink(Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Member;)Z#ConditionalBranch(I,eq,6)#3
joeq.Compiler.CompilationState$StaticCompilation.needsDynamicLink(Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Member;)Z#Constant(I,0)#4
joeq.Compiler.CompilationState$StaticCompilation.needsDynamicLink(Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Member;)Z#Return(I)#5
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#LocalStore(I,3)#41
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#LocalLoad(I,1)#42
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#Switch(91,0,44,1,55,2,66,3,86)#43
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#Constant(I,1)#66
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#LocalStore(I,5)#67
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,2)#68
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#Instanceof(Ljoeq/Class/jq_InstanceMethod;)#69
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#70
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#LocalLoad(I,3)#71
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#Constant(I,0)#72
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#ConditionalBranch(I,eq,77)#73
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#77
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,clazz)#78
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,2)#79
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#CheckCast(Ljoeq/Class/jq_InstanceMethod;)#80
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#Invoke(STATIC,Ljoeq/Class/jq_Class;,getInvokespecialTarget,(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_InstanceMethod;)Ljoeq/Class/jq_InstanceMethod;)#81
joeq.Class.jq_Class.getInvokespecialTarget(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_InstanceMethod;)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.getInvokespecialTarget(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_InstanceMethod;)Ljoeq/Class/jq_InstanceMethod;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,load,()V)#1
joeq.Class.jq_Class.getInvokespecialTarget(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_InstanceMethod;)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Class.jq_Class.getInvokespecialTarget(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_InstanceMethod;)Ljoeq/Class/jq_InstanceMethod;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,isSpecial,()Z)#3
joeq.Class.jq_Class.isSpecial()Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.isSpecial()Z#Constant(I,2)#1
joeq.Class.jq_Class.isSpecial()Z#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,chkState,(B)V)#2
joeq.Class.jq_Class.isSpecial()Z#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Class.isSpecial()Z#Get(C,NONSTATIC,Ljoeq/Class/jq_Class;,access_flags)#4
joeq.Class.jq_Class.isSpecial()Z#Constant(I,32)#5
joeq.Class.jq_Class.isSpecial()Z#BinaryOp(I,and)#6
joeq.Class.jq_Class.isSpecial()Z#Constant(I,0)#7
joeq.Class.jq_Class.isSpecial()Z#ConditionalBranch(I,eq,11)#8
joeq.Class.jq_Class.isSpecial()Z#Constant(I,1)#9
joeq.Class.jq_Class.isSpecial()Z#Goto(12)#10
joeq.Class.jq_Class.isSpecial()Z#Return(I)#12
joeq.Class.jq_Class.getInvokespecialTarget(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_InstanceMethod;)Ljoeq/Class/jq_InstanceMethod;#Constant(I,0)#4
joeq.Class.jq_Class.getInvokespecialTarget(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_InstanceMethod;)Ljoeq/Class/jq_InstanceMethod;#ConditionalBranch(I,ne,8)#5
joeq.Class.jq_Class.getInvokespecialTarget(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_InstanceMethod;)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,1)#8
joeq.Class.jq_Class.getInvokespecialTarget(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_InstanceMethod;)Ljoeq/Class/jq_InstanceMethod;#Invoke(VIRTUAL,Ljoeq/Class/jq_InstanceMethod;,isInitializer,()Z)#9
joeq.Class.jq_Class.getInvokespecialTarget(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_InstanceMethod;)Ljoeq/Class/jq_InstanceMethod;#Constant(I,0)#10
joeq.Class.jq_Class.getInvokespecialTarget(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_InstanceMethod;)Ljoeq/Class/jq_InstanceMethod;#ConditionalBranch(I,eq,14)#11
joeq.Class.jq_Class.getInvokespecialTarget(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_InstanceMethod;)Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,1)#12
joeq.Class.jq_Class.getInvokespecialTarget(Ljoeq/Class/jq_Class;Ljoeq/Class/jq_InstanceMethod;)Ljoeq/Class/jq_InstanceMethod;#Return(Ljava/lang/Object;)#13
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#LocalStore(Ljava/lang/Object;,2)#82
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#Get(Ljoeq/Compiler/Quad/Operator$Invoke$INVOKESTATIC_V;,STATIC,Ljoeq/Compiler/Quad/Operator$Invoke$INVOKESTATIC_V;,INSTANCE)#83
joeq.Compiler.Quad.Operator$Invoke$INVOKESTATIC_V.<clinit>()V#New(Ljoeq/Compiler/Quad/Operator$Invoke$INVOKESTATIC_V;,0)#0
joeq.Compiler.Quad.Operator$Invoke$INVOKESTATIC_V.<clinit>()V#Dup(1,0)#1
joeq.Compiler.Quad.Operator$Invoke$INVOKESTATIC_V.<clinit>()V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Operator$Invoke$INVOKESTATIC_V;,<init>,()V)#2
joeq.Compiler.Quad.Operator$Invoke$INVOKESTATIC_V.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operator$Invoke$INVOKESTATIC_V.<init>()V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Operator$Invoke$InvokeStatic;,<init>,()V)#1
joeq.Compiler.Quad.Operator$Invoke$InvokeStatic.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operator$Invoke$InvokeStatic.<init>()V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Operator$Invoke;,<init>,()V)#1
joeq.Compiler.Quad.Operator$Invoke.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operator$Invoke.<init>()V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Operator;,<init>,()V)#1
joeq.Compiler.Quad.Operator$Invoke.<init>()V#Return(V)#2
joeq.Compiler.Quad.Operator$Invoke$InvokeStatic.<init>()V#Return(V)#2
joeq.Compiler.Quad.Operator$Invoke$INVOKESTATIC_V.<init>()V#Return(V)#2
joeq.Compiler.Quad.Operator$Invoke$INVOKESTATIC_V.<clinit>()V#Put(Ljoeq/Compiler/Quad/Operator$Invoke$INVOKESTATIC_V;,STATIC,Ljoeq/Compiler/Quad/Operator$Invoke$INVOKESTATIC_V;,INSTANCE)#3
joeq.Compiler.Quad.Operator$Invoke$INVOKESTATIC_V.<clinit>()V#Return(V)#4
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#LocalStore(Ljava/lang/Object;,4)#84
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#Goto(95)#85
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#95
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,4)#96
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,2)#97
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,2)#98
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getReturnType,()Ljoeq/Class/jq_Type;)#99
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#LocalLoad(I,5)#100
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,INVOKEhelper,(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V)#101
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalLoad(Ljava/lang/Object;,2)#0
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getParamTypes,()[Ljoeq/Class/jq_Type;)#1
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalStore(Ljava/lang/Object;,5)#2
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalLoad(Ljava/lang/Object;,3)#3
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#Get(Ljoeq/Class/jq_Primitive;,STATIC,Ljoeq/Class/jq_Primitive;,VOID)#4
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#ConditionalBranch(Ljava/lang/Object;,ne,9)#5
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#Constant(L;,null)#6
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalStore(Ljava/lang/Object;,6)#7
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#Goto(17)#8
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalLoad(Ljava/lang/Object;,0)#17
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_cfg)#18
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,getNewQuadID,()I)#19
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalLoad(Ljava/lang/Object;,0)#20
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#Get(Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_bb)#21
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalLoad(Ljava/lang/Object;,1)#22
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalLoad(Ljava/lang/Object;,6)#23
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#New(Ljoeq/Compiler/Quad/Operand$MethodOperand;,0)#24
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#Dup(1,0)#25
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalLoad(Ljava/lang/Object;,2)#26
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Operand$MethodOperand;,<init>,(Ljoeq/Class/jq_Method;)V)#27
joeq.Compiler.Quad.Operand$MethodOperand.<init>(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operand$MethodOperand.<init>(Ljoeq/Class/jq_Method;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.Quad.Operand$MethodOperand.<init>(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.Operand$MethodOperand.<init>(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Compiler.Quad.Operand$MethodOperand.<init>(Ljoeq/Class/jq_Method;)V#Put(Ljoeq/Class/jq_Method;,NONSTATIC,Ljoeq/Compiler/Quad/Operand$MethodOperand;,target)#4
joeq.Compiler.Quad.Operand$MethodOperand.<init>(Ljoeq/Class/jq_Method;)V#Return(V)#5
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalLoad(Ljava/lang/Object;,5)#28
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#ArrayLength()#29
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#Invoke(STATIC,Ljoeq/Compiler/Quad/Operator$Invoke;,create,(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand$MethodOperand;I)Ljoeq/Compiler/Quad/Quad;)#30
joeq.Compiler.Quad.Operator$Invoke.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand$MethodOperand;I)Ljoeq/Compiler/Quad/Quad;#New(Ljoeq/Compiler/Quad/Quad;,0)#0
joeq.Compiler.Quad.Operator$Invoke.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand$MethodOperand;I)Ljoeq/Compiler/Quad/Quad;#Dup(1,0)#1
joeq.Compiler.Quad.Operator$Invoke.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand$MethodOperand;I)Ljoeq/Compiler/Quad/Quad;#LocalLoad(I,0)#2
joeq.Compiler.Quad.Operator$Invoke.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand$MethodOperand;I)Ljoeq/Compiler/Quad/Quad;#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Compiler.Quad.Operator$Invoke.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand$MethodOperand;I)Ljoeq/Compiler/Quad/Quad;#LocalLoad(Ljava/lang/Object;,2)#4
joeq.Compiler.Quad.Operator$Invoke.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand$MethodOperand;I)Ljoeq/Compiler/Quad/Quad;#LocalLoad(Ljava/lang/Object;,3)#5
joeq.Compiler.Quad.Operator$Invoke.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand$MethodOperand;I)Ljoeq/Compiler/Quad/Quad;#LocalLoad(Ljava/lang/Object;,4)#6
joeq.Compiler.Quad.Operator$Invoke.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand$MethodOperand;I)Ljoeq/Compiler/Quad/Quad;#New(Ljoeq/Compiler/Quad/Operand$ParamListOperand;,0)#7
joeq.Compiler.Quad.Operator$Invoke.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand$MethodOperand;I)Ljoeq/Compiler/Quad/Quad;#Dup(1,0)#8
joeq.Compiler.Quad.Operator$Invoke.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand$MethodOperand;I)Ljoeq/Compiler/Quad/Quad;#LocalLoad(I,5)#9
joeq.Compiler.Quad.Operator$Invoke.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand$MethodOperand;I)Ljoeq/Compiler/Quad/Quad;#New([Ljoeq/Compiler/Quad/Operand$RegisterOperand;,1)#10
joeq.Compiler.Quad.Operator$Invoke.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand$MethodOperand;I)Ljoeq/Compiler/Quad/Quad;#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Operand$ParamListOperand;,<init>,([Ljoeq/Compiler/Quad/Operand$RegisterOperand;)V)#11
joeq.Compiler.Quad.Operand$ParamListOperand.<init>([Ljoeq/Compiler/Quad/Operand$RegisterOperand;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operand$ParamListOperand.<init>([Ljoeq/Compiler/Quad/Operand$RegisterOperand;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.Quad.Operand$ParamListOperand.<init>([Ljoeq/Compiler/Quad/Operand$RegisterOperand;)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.Operand$ParamListOperand.<init>([Ljoeq/Compiler/Quad/Operand$RegisterOperand;)V#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Compiler.Quad.Operand$ParamListOperand.<init>([Ljoeq/Compiler/Quad/Operand$RegisterOperand;)V#Put([Ljoeq/Compiler/Quad/Operand$RegisterOperand;,NONSTATIC,Ljoeq/Compiler/Quad/Operand$ParamListOperand;,params)#4
joeq.Compiler.Quad.Operand$ParamListOperand.<init>([Ljoeq/Compiler/Quad/Operand$RegisterOperand;)V#Return(V)#5
joeq.Compiler.Quad.Operator$Invoke.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand$MethodOperand;I)Ljoeq/Compiler/Quad/Quad;#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Quad;,<init>,(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V)#12
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(I,1)#3
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#Put(I,NONSTATIC,Ljoeq/Compiler/Quad/Quad;,id_number)#4
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,2)#6
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#Put(Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/Quad;,bb)#7
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,0)#8
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,3)#9
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#Put(Ljoeq/Compiler/Quad/Operator;,NONSTATIC,Ljoeq/Compiler/Quad/Quad;,operator)#10
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,0)#11
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,4)#12
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#Put(Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/Quad;,operand1)#13
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,0)#14
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,5)#15
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#Put(Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/Quad;,operand2)#16
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,0)#17
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,6)#18
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#Put(Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/Quad;,operand3)#19
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,4)#20
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#Constant(L;,null)#21
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#ConditionalBranch(Ljava/lang/Object;,eq,26)#22
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,5)#26
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#Constant(L;,null)#27
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#ConditionalBranch(Ljava/lang/Object;,eq,32)#28
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,5)#29
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,0)#30
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#Invoke(INTERFACE,Ljoeq/Compiler/Quad/Operand;,attachToQuad,(Ljoeq/Compiler/Quad/Quad;)V)#31
joeq.Compiler.Quad.Operand$MethodOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operand$MethodOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#Get(Ljoeq/Compiler/Quad/Quad;,NONSTATIC,Ljoeq/Compiler/Quad/Operand$MethodOperand;,instruction)#1
joeq.Compiler.Quad.Operand$MethodOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#Constant(L;,null)#2
joeq.Compiler.Quad.Operand$MethodOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
joeq.Compiler.Quad.Operand$MethodOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#Constant(I,1)#4
joeq.Compiler.Quad.Operand$MethodOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#Goto(7)#5
joeq.Compiler.Quad.Operand$MethodOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#7
joeq.Compiler.Quad.Operand$MethodOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,0)#8
joeq.Compiler.Quad.Operand$MethodOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,1)#9
joeq.Compiler.Quad.Operand$MethodOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#Put(Ljoeq/Compiler/Quad/Quad;,NONSTATIC,Ljoeq/Compiler/Quad/Operand$MethodOperand;,instruction)#10
joeq.Compiler.Quad.Operand$MethodOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#Return(V)#11
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,6)#32
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#Constant(L;,null)#33
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#ConditionalBranch(Ljava/lang/Object;,eq,38)#34
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,6)#35
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,0)#36
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#Invoke(INTERFACE,Ljoeq/Compiler/Quad/Operand;,attachToQuad,(Ljoeq/Compiler/Quad/Quad;)V)#37
joeq.Compiler.Quad.Operand$ParamListOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operand$ParamListOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#Get(Ljoeq/Compiler/Quad/Quad;,NONSTATIC,Ljoeq/Compiler/Quad/Operand$ParamListOperand;,instruction)#1
joeq.Compiler.Quad.Operand$ParamListOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#Constant(L;,null)#2
joeq.Compiler.Quad.Operand$ParamListOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
joeq.Compiler.Quad.Operand$ParamListOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#Constant(I,1)#4
joeq.Compiler.Quad.Operand$ParamListOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#Goto(7)#5
joeq.Compiler.Quad.Operand$ParamListOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#7
joeq.Compiler.Quad.Operand$ParamListOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,0)#8
joeq.Compiler.Quad.Operand$ParamListOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,1)#9
joeq.Compiler.Quad.Operand$ParamListOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#Put(Ljoeq/Compiler/Quad/Quad;,NONSTATIC,Ljoeq/Compiler/Quad/Operand$ParamListOperand;,instruction)#10
joeq.Compiler.Quad.Operand$ParamListOperand.attachToQuad(Ljoeq/Compiler/Quad/Quad;)V#Return(V)#11
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Operand;)V#Return(V)#38
joeq.Compiler.Quad.Operator$Invoke.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand$MethodOperand;I)Ljoeq/Compiler/Quad/Quad;#Return(Ljava/lang/Object;)#13
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalStore(Ljava/lang/Object;,7)#31
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#Constant(L;,null)#32
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalStore(Ljava/lang/Object;,8)#33
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalLoad(Ljava/lang/Object;,5)#34
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#ArrayLength()#35
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalStore(I,9)#36
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalLoad(I,9)#37
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#Constant(I,-1)#38
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#BinaryOp(I,add)#39
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalStore(I,9)#40
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalLoad(I,9)#41
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#Constant(I,0)#42
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#ConditionalBranch(I,lt,86)#43
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalLoad(Ljava/lang/Object;,5)#44
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalLoad(I,9)#45
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#ArrayLoad(Ljava/lang/Object;)#46
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalStore(Ljava/lang/Object;,10)#47
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalLoad(Ljava/lang/Object;,0)#48
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#Get(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,current_state)#49
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalLoad(Ljava/lang/Object;,10)#50
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,pop,(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operand;)#51
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.pop(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operand;#LocalLoad(Ljava/lang/Object;,1)#0
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.pop(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operand;#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,getReferenceSize,()I)#1
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.pop(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operand;#Constant(I,8)#2
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.pop(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operand;#ConditionalBranch(I,ne,6)#3
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.pop(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operand;#LocalLoad(Ljava/lang/Object;,0)#6
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.pop(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operand;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,pop,()Ljoeq/Compiler/Quad/Operand;)#7
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.pop(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operand;#LocalStore(Ljava/lang/Object;,2)#8
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.pop(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operand;#LocalLoad(Ljava/lang/Object;,1)#9
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.pop(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operand;#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,isAddressType,()Z)#10
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.pop(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operand;#Constant(I,0)#11
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.pop(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operand;#ConditionalBranch(I,eq,44)#12
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.pop(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operand;#LocalLoad(Ljava/lang/Object;,2)#44
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.pop(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operand;#Return(Ljava/lang/Object;)#45
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalStore(Ljava/lang/Object;,8)#52
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalLoad(Ljava/lang/Object;,8)#53
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#Instanceof(Ljoeq/Compiler/Quad/Operand$RegisterOperand;)#54
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#Constant(I,0)#55
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#ConditionalBranch(I,eq,61)#56
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalLoad(Ljava/lang/Object;,8)#57
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#CheckCast(Ljoeq/Compiler/Quad/Operand$RegisterOperand;)#58
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalStore(Ljava/lang/Object;,11)#59
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#Goto(81)#60
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalLoad(Ljava/lang/Object;,7)#81
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalLoad(I,9)#82
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalLoad(Ljava/lang/Object;,11)#83
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#Invoke(STATIC,Ljoeq/Compiler/Quad/Operator$Invoke;,setParam,(Ljoeq/Compiler/Quad/Quad;ILjoeq/Compiler/Quad/Operand$RegisterOperand;)V)#84
joeq.Compiler.Quad.Operator$Invoke.setParam(Ljoeq/Compiler/Quad/Quad;ILjoeq/Compiler/Quad/Operand$RegisterOperand;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operator$Invoke.setParam(Ljoeq/Compiler/Quad/Quad;ILjoeq/Compiler/Quad/Operand$RegisterOperand;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getOp3,()Ljoeq/Compiler/Quad/Operand;)#1
joeq.Compiler.Quad.Quad.getOp3()Ljoeq/Compiler/Quad/Operand;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Quad.getOp3()Ljoeq/Compiler/Quad/Operand;#Get(Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/Quad;,operand3)#1
joeq.Compiler.Quad.Quad.getOp3()Ljoeq/Compiler/Quad/Operand;#Return(Ljava/lang/Object;)#2
joeq.Compiler.Quad.Operator$Invoke.setParam(Ljoeq/Compiler/Quad/Quad;ILjoeq/Compiler/Quad/Operand$RegisterOperand;)V#CheckCast(Ljoeq/Compiler/Quad/Operand$ParamListOperand;)#2
joeq.Compiler.Quad.Operator$Invoke.setParam(Ljoeq/Compiler/Quad/Quad;ILjoeq/Compiler/Quad/Operand$RegisterOperand;)V#LocalLoad(I,1)#3
joeq.Compiler.Quad.Operator$Invoke.setParam(Ljoeq/Compiler/Quad/Quad;ILjoeq/Compiler/Quad/Operand$RegisterOperand;)V#LocalLoad(Ljava/lang/Object;,2)#4
joeq.Compiler.Quad.Operator$Invoke.setParam(Ljoeq/Compiler/Quad/Quad;ILjoeq/Compiler/Quad/Operand$RegisterOperand;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Operand$ParamListOperand;,set,(ILjoeq/Compiler/Quad/Operand$RegisterOperand;)V)#5
joeq.Compiler.Quad.Operand$ParamListOperand.set(ILjoeq/Compiler/Quad/Operand$RegisterOperand;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operand$ParamListOperand.set(ILjoeq/Compiler/Quad/Operand$RegisterOperand;)V#Get([Ljoeq/Compiler/Quad/Operand$RegisterOperand;,NONSTATIC,Ljoeq/Compiler/Quad/Operand$ParamListOperand;,params)#1
joeq.Compiler.Quad.Operand$ParamListOperand.set(ILjoeq/Compiler/Quad/Operand$RegisterOperand;)V#LocalLoad(I,1)#2
joeq.Compiler.Quad.Operand$ParamListOperand.set(ILjoeq/Compiler/Quad/Operand$RegisterOperand;)V#LocalLoad(Ljava/lang/Object;,2)#3
joeq.Compiler.Quad.Operand$ParamListOperand.set(ILjoeq/Compiler/Quad/Operand$RegisterOperand;)V#ArrayStore(Ljava/lang/Object;)#4
joeq.Compiler.Quad.Operand$ParamListOperand.set(ILjoeq/Compiler/Quad/Operand$RegisterOperand;)V#LocalLoad(Ljava/lang/Object;,2)#5
joeq.Compiler.Quad.Operand$ParamListOperand.set(ILjoeq/Compiler/Quad/Operand$RegisterOperand;)V#Constant(L;,null)#6
joeq.Compiler.Quad.Operand$ParamListOperand.set(ILjoeq/Compiler/Quad/Operand$RegisterOperand;)V#ConditionalBranch(Ljava/lang/Object;,eq,12)#7
joeq.Compiler.Quad.Operand$ParamListOperand.set(ILjoeq/Compiler/Quad/Operand$RegisterOperand;)V#LocalLoad(Ljava/lang/Object;,2)#8
joeq.Compiler.Quad.Operand$ParamListOperand.set(ILjoeq/Compiler/Quad/Operand$RegisterOperand;)V#LocalLoad(Ljava/lang/Object;,0)#9
joeq.Compiler.Quad.Operand$ParamListOperand.set(ILjoeq/Compiler/Quad/Operand$RegisterOperand;)V#Get(Ljoeq/Compiler/Quad/Quad;,NONSTATIC,Ljoeq/Compiler/Quad/Operand$ParamListOperand;,instruction)#10
joeq.Compiler.Quad.Operand$ParamListOperand.set(ILjoeq/Compiler/Quad/Operand$RegisterOperand;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Operand$RegisterOperand;,attachToQuad,(Ljoeq/Compiler/Quad/Quad;)V)#11
joeq.Compiler.Quad.Operand$ParamListOperand.set(ILjoeq/Compiler/Quad/Operand$RegisterOperand;)V#Return(V)#12
joeq.Compiler.Quad.Operator$Invoke.setParam(Ljoeq/Compiler/Quad/Quad;ILjoeq/Compiler/Quad/Operand$RegisterOperand;)V#Return(V)#6
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#Goto(37)#85
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalLoad(Ljava/lang/Object;,0)#86
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,clearCurrentGuard,()V)#87
joeq.Compiler.Quad.BytecodeToQuad.clearCurrentGuard()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad.clearCurrentGuard()V#Constant(L;,null)#1
joeq.Compiler.Quad.BytecodeToQuad.clearCurrentGuard()V#Put(Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,currentGuard)#2
joeq.Compiler.Quad.BytecodeToQuad.clearCurrentGuard()V#Return(V)#3
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalLoad(I,4)#88
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#Constant(I,0)#89
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#ConditionalBranch(I,eq,111)#90
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalLoad(Ljava/lang/Object;,0)#91
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalLoad(Ljava/lang/Object;,8)#92
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,performNullCheck,(Ljoeq/Compiler/Quad/Operand;)Z)#93
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#LocalLoad(Ljava/lang/Object;,1)#0
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#Instanceof(Ljoeq/Compiler/Quad/Operand$AConstOperand;)#1
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#Constant(I,0)#2
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#ConditionalBranch(I,eq,23)#3
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#LocalLoad(Ljava/lang/Object;,1)#23
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#CheckCast(Ljoeq/Compiler/Quad/Operand$RegisterOperand;)#24
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#LocalStore(Ljava/lang/Object;,2)#25
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#LocalLoad(Ljava/lang/Object;,2)#26
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#Invoke(STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,hasGuard,(Ljoeq/Compiler/Quad/Operand$RegisterOperand;)Z)#27
joeq.Compiler.Quad.BytecodeToQuad.hasGuard(Ljoeq/Compiler/Quad/Operand$RegisterOperand;)Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad.hasGuard(Ljoeq/Compiler/Quad/Operand$RegisterOperand;)Z#Get(Ljava/lang/Object;,NONSTATIC,Ljoeq/Compiler/Quad/Operand$RegisterOperand;,scratchObject)#1
joeq.Compiler.Quad.BytecodeToQuad.hasGuard(Ljoeq/Compiler/Quad/Operand$RegisterOperand;)Z#Constant(L;,null)#2
joeq.Compiler.Quad.BytecodeToQuad.hasGuard(Ljoeq/Compiler/Quad/Operand$RegisterOperand;)Z#ConditionalBranch(Ljava/lang/Object;,eq,6)#3
joeq.Compiler.Quad.BytecodeToQuad.hasGuard(Ljoeq/Compiler/Quad/Operand$RegisterOperand;)Z#Constant(I,0)#6
joeq.Compiler.Quad.BytecodeToQuad.hasGuard(Ljoeq/Compiler/Quad/Operand$RegisterOperand;)Z#Return(I)#7
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#Constant(I,0)#28
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#ConditionalBranch(I,eq,38)#29
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#LocalLoad(Ljava/lang/Object;,0)#38
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,makeGuardReg,()Ljoeq/Compiler/Quad/Operand$RegisterOperand;)#39
joeq.Compiler.Quad.BytecodeToQuad.makeGuardReg()Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Invoke(STATIC,Ljoeq/Compiler/Quad/RegisterFactory;,makeGuardReg,()Ljoeq/Compiler/Quad/Operand$RegisterOperand;)#0
joeq.Compiler.Quad.RegisterFactory.makeGuardReg()Ljoeq/Compiler/Quad/Operand$RegisterOperand;#New(Ljoeq/Compiler/Quad/Operand$RegisterOperand;,0)#0
joeq.Compiler.Quad.RegisterFactory.makeGuardReg()Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Dup(1,0)#1
joeq.Compiler.Quad.RegisterFactory.makeGuardReg()Ljoeq/Compiler/Quad/Operand$RegisterOperand;#New(Ljoeq/Compiler/Quad/RegisterFactory$Register;,0)#2
joeq.Compiler.Quad.RegisterFactory.makeGuardReg()Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Dup(1,0)#3
joeq.Compiler.Quad.RegisterFactory.makeGuardReg()Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Constant(L;,null)#4
joeq.Compiler.Quad.RegisterFactory.makeGuardReg()Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Invoke(SPECIAL,Ljoeq/Compiler/Quad/RegisterFactory$Register;,<init>,(Ljoeq/Compiler/Quad/RegisterFactory$1;)V)#5
joeq.Compiler.Quad.RegisterFactory$Register.<init>(Ljoeq/Compiler/Quad/RegisterFactory$1;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.RegisterFactory$Register.<init>(Ljoeq/Compiler/Quad/RegisterFactory$1;)V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/RegisterFactory$Register;,<init>,()V)#1
joeq.Compiler.Quad.RegisterFactory$Register.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.RegisterFactory$Register.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.Quad.RegisterFactory$Register.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.RegisterFactory$Register.<init>()V#Constant(I,-1)#3
joeq.Compiler.Quad.RegisterFactory$Register.<init>()V#Put(S,NONSTATIC,Ljoeq/Compiler/Quad/RegisterFactory$Register;,index)#4
joeq.Compiler.Quad.RegisterFactory$Register.<init>()V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Compiler.Quad.RegisterFactory$Register.<init>()V#Constant(I,38)#6
joeq.Compiler.Quad.RegisterFactory$Register.<init>()V#Put(B,NONSTATIC,Ljoeq/Compiler/Quad/RegisterFactory$Register;,flags)#7
joeq.Compiler.Quad.RegisterFactory$Register.<init>()V#Return(V)#8
joeq.Compiler.Quad.RegisterFactory$Register.<init>(Ljoeq/Compiler/Quad/RegisterFactory$1;)V#Return(V)#2
joeq.Compiler.Quad.RegisterFactory.makeGuardReg()Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Constant(L;,null)#6
joeq.Compiler.Quad.RegisterFactory.makeGuardReg()Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Operand$RegisterOperand;,<init>,(Ljoeq/Compiler/Quad/RegisterFactory$Register;Ljoeq/Class/jq_Type;)V)#7
joeq.Compiler.Quad.RegisterFactory.makeGuardReg()Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Return(Ljava/lang/Object;)#8
joeq.Compiler.Quad.BytecodeToQuad.makeGuardReg()Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Return(Ljava/lang/Object;)#1
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#LocalStore(Ljava/lang/Object;,3)#40
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#LocalLoad(Ljava/lang/Object;,0)#41
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#Constant(I,0)#42
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,mergeStateWithNullPtrExHandler,(Z)V)#43
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWithNullPtrExHandler(Z)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWithNullPtrExHandler(Z)V#Get(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,bc_bb)#1
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWithNullPtrExHandler(Z)V#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,getExceptionHandlers,()Ljoeq/Compiler/BytecodeAnalysis/ExceptionHandlerIterator;)#2
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWithNullPtrExHandler(Z)V#LocalStore(Ljava/lang/Object;,2)#3
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWithNullPtrExHandler(Z)V#LocalLoad(Ljava/lang/Object;,2)#4
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWithNullPtrExHandler(Z)V#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/ExceptionHandlerIterator;,hasNext,()Z)#5
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWithNullPtrExHandler(Z)V#Constant(I,0)#6
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWithNullPtrExHandler(Z)V#ConditionalBranch(I,eq,34)#7
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWithNullPtrExHandler(Z)V#Return(V)#34
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#LocalLoad(Ljava/lang/Object;,0)#44
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#LocalLoad(Ljava/lang/Object;,3)#45
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,setCurrentGuard,(Ljoeq/Compiler/Quad/Operand;)V)#46
joeq.Compiler.Quad.BytecodeToQuad.setCurrentGuard(Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad.setCurrentGuard(Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Compiler.Quad.BytecodeToQuad.setCurrentGuard(Ljoeq/Compiler/Quad/Operand;)V#Put(Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,currentGuard)#2
joeq.Compiler.Quad.BytecodeToQuad.setCurrentGuard(Ljoeq/Compiler/Quad/Operand;)V#Return(V)#3
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#LocalLoad(Ljava/lang/Object;,2)#47
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#LocalLoad(Ljava/lang/Object;,3)#48
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#Invoke(STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,setGuard,(Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand;)V)#49
joeq.Compiler.Quad.BytecodeToQuad.setGuard(Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad.setGuard(Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Compiler.Quad.BytecodeToQuad.setGuard(Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand;)V#Put(Ljava/lang/Object;,NONSTATIC,Ljoeq/Compiler/Quad/Operand$RegisterOperand;,scratchObject)#2
joeq.Compiler.Quad.BytecodeToQuad.setGuard(Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand;)V#Return(V)#3
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#LocalLoad(Ljava/lang/Object;,2)#50
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Operand$RegisterOperand;,getType,()Ljoeq/Class/jq_Type;)#51
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#LocalStore(Ljava/lang/Object;,4)#52
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#LocalLoad(Ljava/lang/Object;,4)#53
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,isAddressType,()Z)#54
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#Constant(I,0)#55
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#ConditionalBranch(I,eq,59)#56
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#LocalLoad(Ljava/lang/Object;,0)#59
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#LocalLoad(Ljava/lang/Object;,2)#60
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Operand$RegisterOperand;,getRegister,()Ljoeq/Compiler/Quad/RegisterFactory$Register;)#61
joeq.Compiler.Quad.Operand$RegisterOperand.getRegister()Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operand$RegisterOperand.getRegister()Ljoeq/Compiler/Quad/RegisterFactory$Register;#Get(Ljoeq/Compiler/Quad/RegisterFactory$Register;,NONSTATIC,Ljoeq/Compiler/Quad/Operand$RegisterOperand;,register)#1
joeq.Compiler.Quad.Operand$RegisterOperand.getRegister()Ljoeq/Compiler/Quad/RegisterFactory$Register;#Return(Ljava/lang/Object;)#2
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#LocalLoad(Ljava/lang/Object;,4)#62
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,getLocalNumber,(Ljoeq/Compiler/Quad/RegisterFactory$Register;Ljoeq/Class/jq_Type;)I)#63
joeq.Compiler.Quad.BytecodeToQuad.getLocalNumber(Ljoeq/Compiler/Quad/RegisterFactory$Register;Ljoeq/Class/jq_Type;)I#LocalLoad(Ljava/lang/Object;,1)#0
joeq.Compiler.Quad.BytecodeToQuad.getLocalNumber(Ljoeq/Compiler/Quad/RegisterFactory$Register;Ljoeq/Class/jq_Type;)I#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/RegisterFactory$Register;,getNumber,()I)#1
joeq.Compiler.Quad.RegisterFactory$Register.getNumber()I#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.RegisterFactory$Register.getNumber()I#Get(S,NONSTATIC,Ljoeq/Compiler/Quad/RegisterFactory$Register;,index)#1
joeq.Compiler.Quad.RegisterFactory$Register.getNumber()I#Return(I)#2
joeq.Compiler.Quad.BytecodeToQuad.getLocalNumber(Ljoeq/Compiler/Quad/RegisterFactory$Register;Ljoeq/Class/jq_Type;)I#Return(I)#2
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#LocalStore(I,5)#64
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#LocalLoad(Ljava/lang/Object;,0)#65
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#LocalLoad(Ljava/lang/Object;,2)#66
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#LocalLoad(I,5)#67
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#LocalLoad(Ljava/lang/Object;,4)#68
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,isLocal,(Ljoeq/Compiler/Quad/Operand;ILjoeq/Class/jq_Type;)Z)#69
joeq.Compiler.Quad.BytecodeToQuad.isLocal(Ljoeq/Compiler/Quad/Operand;ILjoeq/Class/jq_Type;)Z#LocalLoad(Ljava/lang/Object;,1)#0
joeq.Compiler.Quad.BytecodeToQuad.isLocal(Ljoeq/Compiler/Quad/Operand;ILjoeq/Class/jq_Type;)Z#Instanceof(Ljoeq/Compiler/Quad/Operand$RegisterOperand;)#1
joeq.Compiler.Quad.BytecodeToQuad.isLocal(Ljoeq/Compiler/Quad/Operand;ILjoeq/Class/jq_Type;)Z#Constant(I,0)#2
joeq.Compiler.Quad.BytecodeToQuad.isLocal(Ljoeq/Compiler/Quad/Operand;ILjoeq/Class/jq_Type;)Z#ConditionalBranch(I,eq,25)#3
joeq.Compiler.Quad.BytecodeToQuad.isLocal(Ljoeq/Compiler/Quad/Operand;ILjoeq/Class/jq_Type;)Z#LocalLoad(Ljava/lang/Object;,1)#4
joeq.Compiler.Quad.BytecodeToQuad.isLocal(Ljoeq/Compiler/Quad/Operand;ILjoeq/Class/jq_Type;)Z#CheckCast(Ljoeq/Compiler/Quad/Operand$RegisterOperand;)#5
joeq.Compiler.Quad.BytecodeToQuad.isLocal(Ljoeq/Compiler/Quad/Operand;ILjoeq/Class/jq_Type;)Z#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Operand$RegisterOperand;,getRegister,()Ljoeq/Compiler/Quad/RegisterFactory$Register;)#6
joeq.Compiler.Quad.BytecodeToQuad.isLocal(Ljoeq/Compiler/Quad/Operand;ILjoeq/Class/jq_Type;)Z#LocalStore(Ljava/lang/Object;,4)#7
joeq.Compiler.Quad.BytecodeToQuad.isLocal(Ljoeq/Compiler/Quad/Operand;ILjoeq/Class/jq_Type;)Z#LocalLoad(Ljava/lang/Object;,4)#8
joeq.Compiler.Quad.BytecodeToQuad.isLocal(Ljoeq/Compiler/Quad/Operand;ILjoeq/Class/jq_Type;)Z#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/RegisterFactory$Register;,isTemp,()Z)#9
joeq.Compiler.Quad.BytecodeToQuad.isLocal(Ljoeq/Compiler/Quad/Operand;ILjoeq/Class/jq_Type;)Z#Constant(I,0)#10
joeq.Compiler.Quad.BytecodeToQuad.isLocal(Ljoeq/Compiler/Quad/Operand;ILjoeq/Class/jq_Type;)Z#ConditionalBranch(I,eq,14)#11
joeq.Compiler.Quad.BytecodeToQuad.isLocal(Ljoeq/Compiler/Quad/Operand;ILjoeq/Class/jq_Type;)Z#Constant(I,0)#12
joeq.Compiler.Quad.BytecodeToQuad.isLocal(Ljoeq/Compiler/Quad/Operand;ILjoeq/Class/jq_Type;)Z#Return(I)#13
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#Constant(I,0)#70
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#ConditionalBranch(I,eq,94)#71
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#Constant(I,0)#94
joeq.Compiler.Quad.BytecodeToQuad.performNullCheck(Ljoeq/Compiler/Quad/Operand;)Z#Return(I)#95
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#Constant(I,0)#94
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#ConditionalBranch(I,eq,111)#95
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalLoad(Ljava/lang/Object;,0)#111
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalLoad(Ljava/lang/Object;,7)#112
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,appendQuad,(Ljoeq/Compiler/Quad/Quad;)V)#113
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalLoad(Ljava/lang/Object;,0)#114
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#Constant(I,0)#115
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,mergeStateWithAllExHandlers,(Z)V)#116
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWithAllExHandlers(Z)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWithAllExHandlers(Z)V#Get(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,bc_bb)#1
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWithAllExHandlers(Z)V#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,getExceptionHandlers,()Ljoeq/Compiler/BytecodeAnalysis/ExceptionHandlerIterator;)#2
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWithAllExHandlers(Z)V#LocalStore(Ljava/lang/Object;,2)#3
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWithAllExHandlers(Z)V#LocalLoad(Ljava/lang/Object;,2)#4
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWithAllExHandlers(Z)V#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/ExceptionHandlerIterator;,hasNext,()Z)#5
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWithAllExHandlers(Z)V#Constant(I,0)#6
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWithAllExHandlers(Z)V#ConditionalBranch(I,eq,15)#7
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWithAllExHandlers(Z)V#Return(V)#15
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#LocalLoad(Ljava/lang/Object;,6)#117
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#Constant(L;,null)#118
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#ConditionalBranch(Ljava/lang/Object;,eq,126)#119
joeq.Compiler.Quad.BytecodeToQuad.INVOKEhelper(Ljoeq/Compiler/Quad/Operator$Invoke;Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Type;Z)V#Return(V)#126
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#Return(V)#102
joeq.Compiler.Quad.BytecodeToQuad.visitASTORE(I)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad.visitASTORE(I)V#LocalLoad(I,1)#1
joeq.Compiler.Quad.BytecodeToQuad.visitASTORE(I)V#Invoke(SPECIAL,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,visitASTORE,(I)V)#2
joeq.Compiler.Quad.BytecodeToQuad.visitASTORE(I)V#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Compiler.Quad.BytecodeToQuad.visitASTORE(I)V#Get(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,current_state)#4
joeq.Compiler.Quad.BytecodeToQuad.visitASTORE(I)V#Constant(I,0)#5
joeq.Compiler.Quad.BytecodeToQuad.visitASTORE(I)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,peekStack,(I)Ljoeq/Compiler/Quad/Operand;)#6
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.peekStack(I)Ljoeq/Compiler/Quad/Operand;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.peekStack(I)Ljoeq/Compiler/Quad/Operand;#Get([Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,stack)#1
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.peekStack(I)Ljoeq/Compiler/Quad/Operand;#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.peekStack(I)Ljoeq/Compiler/Quad/Operand;#Get(I,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,stackptr)#3
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.peekStack(I)Ljoeq/Compiler/Quad/Operand;#LocalLoad(I,1)#4
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.peekStack(I)Ljoeq/Compiler/Quad/Operand;#BinaryOp(I,sub)#5
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.peekStack(I)Ljoeq/Compiler/Quad/Operand;#Constant(I,1)#6
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.peekStack(I)Ljoeq/Compiler/Quad/Operand;#BinaryOp(I,sub)#7
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.peekStack(I)Ljoeq/Compiler/Quad/Operand;#ArrayLoad(Ljava/lang/Object;)#8
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.peekStack(I)Ljoeq/Compiler/Quad/Operand;#Return(Ljava/lang/Object;)#9
joeq.Compiler.Quad.BytecodeToQuad.visitASTORE(I)V#LocalStore(Ljava/lang/Object;,2)#7
joeq.Compiler.Quad.BytecodeToQuad.visitASTORE(I)V#LocalLoad(Ljava/lang/Object;,0)#8
joeq.Compiler.Quad.BytecodeToQuad.visitASTORE(I)V#LocalLoad(I,1)#9
joeq.Compiler.Quad.BytecodeToQuad.visitASTORE(I)V#LocalLoad(Ljava/lang/Object;,2)#10
joeq.Compiler.Quad.BytecodeToQuad.visitASTORE(I)V#Invoke(STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,getTypeOf,(Ljoeq/Compiler/Quad/Operand;)Ljoeq/Class/jq_Type;)#11
joeq.Compiler.Quad.BytecodeToQuad.visitASTORE(I)V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,STOREhelper,(ILjoeq/Class/jq_Type;)V)#12
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#LocalLoad(I,1)#1
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,2)#2
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,replaceLocalsOnStack,(ILjoeq/Class/jq_Type;)V)#3
joeq.Compiler.Quad.BytecodeToQuad.replaceLocalsOnStack(ILjoeq/Class/jq_Type;)V#Constant(I,0)#0
joeq.Compiler.Quad.BytecodeToQuad.replaceLocalsOnStack(ILjoeq/Class/jq_Type;)V#LocalStore(I,3)#1
joeq.Compiler.Quad.BytecodeToQuad.replaceLocalsOnStack(ILjoeq/Class/jq_Type;)V#LocalLoad(I,3)#2
joeq.Compiler.Quad.BytecodeToQuad.replaceLocalsOnStack(ILjoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Compiler.Quad.BytecodeToQuad.replaceLocalsOnStack(ILjoeq/Class/jq_Type;)V#Get(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,current_state)#4
joeq.Compiler.Quad.BytecodeToQuad.replaceLocalsOnStack(ILjoeq/Class/jq_Type;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,getStackSize,()I)#5
joeq.Compiler.Quad.BytecodeToQuad.replaceLocalsOnStack(ILjoeq/Class/jq_Type;)V#ConditionalBranch(I,ge,60)#6
joeq.Compiler.Quad.BytecodeToQuad.replaceLocalsOnStack(ILjoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,0)#7
joeq.Compiler.Quad.BytecodeToQuad.replaceLocalsOnStack(ILjoeq/Class/jq_Type;)V#Get(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,current_state)#8
joeq.Compiler.Quad.BytecodeToQuad.replaceLocalsOnStack(ILjoeq/Class/jq_Type;)V#LocalLoad(I,3)#9
joeq.Compiler.Quad.BytecodeToQuad.replaceLocalsOnStack(ILjoeq/Class/jq_Type;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,peekStack,(I)Ljoeq/Compiler/Quad/Operand;)#10
joeq.Compiler.Quad.BytecodeToQuad.replaceLocalsOnStack(ILjoeq/Class/jq_Type;)V#LocalStore(Ljava/lang/Object;,4)#11
joeq.Compiler.Quad.BytecodeToQuad.replaceLocalsOnStack(ILjoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,0)#12
joeq.Compiler.Quad.BytecodeToQuad.replaceLocalsOnStack(ILjoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,4)#13
joeq.Compiler.Quad.BytecodeToQuad.replaceLocalsOnStack(ILjoeq/Class/jq_Type;)V#LocalLoad(I,1)#14
joeq.Compiler.Quad.BytecodeToQuad.replaceLocalsOnStack(ILjoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,2)#15
joeq.Compiler.Quad.BytecodeToQuad.replaceLocalsOnStack(ILjoeq/Class/jq_Type;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,isLocal,(Ljoeq/Compiler/Quad/Operand;ILjoeq/Class/jq_Type;)Z)#16
joeq.Compiler.Quad.BytecodeToQuad.replaceLocalsOnStack(ILjoeq/Class/jq_Type;)V#Constant(I,0)#17
joeq.Compiler.Quad.BytecodeToQuad.replaceLocalsOnStack(ILjoeq/Class/jq_Type;)V#ConditionalBranch(I,eq,55)#18
joeq.Compiler.Quad.BytecodeToQuad.replaceLocalsOnStack(ILjoeq/Class/jq_Type;)V#LocalLoad(I,3)#55
joeq.Compiler.Quad.BytecodeToQuad.replaceLocalsOnStack(ILjoeq/Class/jq_Type;)V#Constant(I,1)#56
joeq.Compiler.Quad.BytecodeToQuad.replaceLocalsOnStack(ILjoeq/Class/jq_Type;)V#BinaryOp(I,add)#57
joeq.Compiler.Quad.BytecodeToQuad.replaceLocalsOnStack(ILjoeq/Class/jq_Type;)V#LocalStore(I,3)#58
joeq.Compiler.Quad.BytecodeToQuad.replaceLocalsOnStack(ILjoeq/Class/jq_Type;)V#Goto(2)#59
joeq.Compiler.Quad.BytecodeToQuad.replaceLocalsOnStack(ILjoeq/Class/jq_Type;)V#Return(V)#60
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,0)#4
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#Get(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,current_state)#5
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,2)#6
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,pop,(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operand;)#7
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#LocalStore(Ljava/lang/Object;,3)#8
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,3)#9
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#Instanceof(Ljoeq/Compiler/Quad/Operand$RegisterOperand;)#10
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#Constant(I,0)#11
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#ConditionalBranch(I,eq,22)#12
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,0)#13
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#LocalLoad(I,1)#14
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,3)#15
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#CheckCast(Ljoeq/Compiler/Quad/Operand$RegisterOperand;)#16
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,makeLocal,(ILjoeq/Compiler/Quad/Operand$RegisterOperand;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;)#17
joeq.Compiler.Quad.BytecodeToQuad.makeLocal(ILjoeq/Compiler/Quad/Operand$RegisterOperand;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#LocalLoad(Ljava/lang/Object;,2)#0
joeq.Compiler.Quad.BytecodeToQuad.makeLocal(ILjoeq/Compiler/Quad/Operand$RegisterOperand;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Operand$RegisterOperand;,getType,()Ljoeq/Class/jq_Type;)#1
joeq.Compiler.Quad.BytecodeToQuad.makeLocal(ILjoeq/Compiler/Quad/Operand$RegisterOperand;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#LocalStore(Ljava/lang/Object;,3)#2
joeq.Compiler.Quad.BytecodeToQuad.makeLocal(ILjoeq/Compiler/Quad/Operand$RegisterOperand;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#New(Ljoeq/Compiler/Quad/Operand$RegisterOperand;,0)#3
joeq.Compiler.Quad.BytecodeToQuad.makeLocal(ILjoeq/Compiler/Quad/Operand$RegisterOperand;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Dup(1,0)#4
joeq.Compiler.Quad.BytecodeToQuad.makeLocal(ILjoeq/Compiler/Quad/Operand$RegisterOperand;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Compiler.Quad.BytecodeToQuad.makeLocal(ILjoeq/Compiler/Quad/Operand$RegisterOperand;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Get(Ljoeq/Compiler/Quad/RegisterFactory;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,rf)#6
joeq.Compiler.Quad.BytecodeToQuad.makeLocal(ILjoeq/Compiler/Quad/Operand$RegisterOperand;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#LocalLoad(I,1)#7
joeq.Compiler.Quad.BytecodeToQuad.makeLocal(ILjoeq/Compiler/Quad/Operand$RegisterOperand;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#LocalLoad(Ljava/lang/Object;,3)#8
joeq.Compiler.Quad.BytecodeToQuad.makeLocal(ILjoeq/Compiler/Quad/Operand$RegisterOperand;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/RegisterFactory;,getOrCreateLocal,(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;)#9
joeq.Compiler.Quad.BytecodeToQuad.makeLocal(ILjoeq/Compiler/Quad/Operand$RegisterOperand;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#LocalLoad(Ljava/lang/Object;,3)#10
joeq.Compiler.Quad.BytecodeToQuad.makeLocal(ILjoeq/Compiler/Quad/Operand$RegisterOperand;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#LocalLoad(Ljava/lang/Object;,2)#11
joeq.Compiler.Quad.BytecodeToQuad.makeLocal(ILjoeq/Compiler/Quad/Operand$RegisterOperand;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Operand$RegisterOperand;,getFlags,()I)#12
joeq.Compiler.Quad.Operand$RegisterOperand.getFlags()I#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operand$RegisterOperand.getFlags()I#Get(I,NONSTATIC,Ljoeq/Compiler/Quad/Operand$RegisterOperand;,flags)#1
joeq.Compiler.Quad.Operand$RegisterOperand.getFlags()I#Return(I)#2
joeq.Compiler.Quad.BytecodeToQuad.makeLocal(ILjoeq/Compiler/Quad/Operand$RegisterOperand;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Operand$RegisterOperand;,<init>,(Ljoeq/Compiler/Quad/RegisterFactory$Register;Ljoeq/Class/jq_Type;I)V)#13
joeq.Compiler.Quad.BytecodeToQuad.makeLocal(ILjoeq/Compiler/Quad/Operand$RegisterOperand;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Return(Ljava/lang/Object;)#14
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#Dup(1,0)#18
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#LocalStore(Ljava/lang/Object;,5)#19
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#LocalStore(Ljava/lang/Object;,4)#20
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#Goto(29)#21
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,2)#29
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,getReferenceSize,()I)#30
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#Constant(I,8)#31
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#ConditionalBranch(I,ne,39)#32
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,0)#39
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#Get(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,current_state)#40
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#LocalLoad(I,1)#41
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,4)#42
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,setLocal,(ILjoeq/Compiler/Quad/Operand;)V)#43
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.setLocal(ILjoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.setLocal(ILjoeq/Compiler/Quad/Operand;)V#Get([Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,locals)#1
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.setLocal(ILjoeq/Compiler/Quad/Operand;)V#LocalLoad(I,1)#2
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.setLocal(ILjoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,2)#3
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.setLocal(ILjoeq/Compiler/Quad/Operand;)V#ArrayStore(Ljava/lang/Object;)#4
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.setLocal(ILjoeq/Compiler/Quad/Operand;)V#Return(V)#5
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,0)#44
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_cfg)#45
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,getNewQuadID,()I)#46
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,0)#47
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#Get(Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_bb)#48
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,2)#49
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#Invoke(STATIC,Ljoeq/Compiler/Quad/Operator$Move;,getMoveOp,(Ljoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/Operator$Move;)#50
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,5)#51
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,3)#52
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#Invoke(STATIC,Ljoeq/Compiler/Quad/Operator$Move;,create,(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Move;Ljoeq/Compiler/Quad/Operand$RegisterOperand;Ljoeq/Compiler/Quad/Operand;)Ljoeq/Compiler/Quad/Quad;)#53
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#LocalStore(Ljava/lang/Object;,6)#54
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,0)#55
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#LocalLoad(Ljava/lang/Object;,6)#56
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,appendQuad,(Ljoeq/Compiler/Quad/Quad;)V)#57
joeq.Compiler.Quad.BytecodeToQuad.STOREhelper(ILjoeq/Class/jq_Type;)V#Return(V)#58
joeq.Compiler.Quad.BytecodeToQuad.visitASTORE(I)V#Return(V)#13
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,19)#1740
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(INTERFACE,Ljava/util/Iterator;,remove,()V)#1741
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Get(Z,STATIC,Ljoeq/Class/jq_Class;,WARN_STALE_CLASS_FILES)#1742
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,0)#1743
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,eq,1765)#1744
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#LocalLoad(I,1)#23
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#Constant(I,1)#24
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#BinaryOp(I,add)#25
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#LocalStore(I,1)#26
joeq.UTF.Utf8.isValidTypeDescriptor(I)Z#Goto(0)#27
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,1)#332
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(INTERFACE,Ljava/io/DataInput;,readUnsignedShort,()I)#333
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Conversion(I,C)#334
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(I,9)#335
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#336
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,9)#337
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getCPtag,(C)B)#338
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,13)#339
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,eq,371)#340
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#371
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Get([Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,declared_interfaces)#372
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,8)#373
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#374
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,9)#375
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getCPasType,(C)Ljoeq/Class/jq_Type;)#376
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#CheckCast(Ljoeq/Class/jq_Class;)#377
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ArrayStore(Ljava/lang/Object;)#378
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#379
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Get([Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,declared_interfaces)#380
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,8)#381
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ArrayLoad(Ljava/lang/Object;)#382
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,isClassType,()Z)#383
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,0)#384
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,ne,402)#385
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#402
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Get([Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,declared_interfaces)#403
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,8)#404
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ArrayLoad(Ljava/lang/Object;)#405
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,isLoaded,()Z)#406
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,0)#407
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ConditionalBranch(I,eq,432)#408
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#432
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Get([Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_Class;,declared_interfaces)#433
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(I,8)#434
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#ArrayLoad(Ljava/lang/Object;)#435
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Get(Ljoeq/Class/jq_Class;,STATIC,Ljoeq/Class/jq_DontAlign;,_class)#436
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(Ljava/lang/Object;,3)#1873
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,0)#1874
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Constant(I,4)#1875
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Put(I,NONSTATIC,Ljoeq/Class/jq_Class;,state)#1876
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,3)#1877
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Throw()#1878
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalStore(Ljava/lang/Object;,30)#1882
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,2)#1883
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Monitor(EXIT)#1884
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#LocalLoad(Ljava/lang/Object;,30)#1885
joeq.Class.jq_Class.load(Ljava/io/DataInput;)V#Throw()#1886
joeq.Class.jq_Class.load()V#LocalStore(Ljava/lang/Object;,3)#61
joeq.Class.jq_Class.load()V#LocalLoad(Ljava/lang/Object;,1)#62
joeq.Class.jq_Class.load()V#Constant(L;,null)#63
joeq.Class.jq_Class.load()V#ConditionalBranch(Ljava/lang/Object;,eq,67)#64
joeq.Class.jq_Class.load()V#LocalLoad(Ljava/lang/Object;,1)#65
joeq.Class.jq_Class.load()V#Invoke(VIRTUAL,Ljava/io/DataInputStream;,close,()V)#66
joeq.Class.jq_Class.load()V#Goto(69)#67
joeq.Class.jq_Class.load()V#LocalLoad(Ljava/lang/Object;,3)#69
joeq.Class.jq_Class.load()V#Throw()#70
joeq.Class.jq_Class.verify()V#LocalStore(Ljava/lang/Object;,3)#89
joeq.Class.jq_Class.verify()V#LocalLoad(Ljava/lang/Object;,1)#90
joeq.Class.jq_Class.verify()V#Monitor(EXIT)#91
joeq.Class.jq_Class.verify()V#LocalLoad(Ljava/lang/Object;,3)#92
joeq.Class.jq_Class.verify()V#Throw()#93
joeq.Class.jq_Class.verify()V#LocalStore(Ljava/lang/Object;,2)#80
joeq.Class.jq_Class.verify()V#LocalLoad(Ljava/lang/Object;,0)#81
joeq.Class.jq_Class.verify()V#Constant(I,7)#82
joeq.Class.jq_Class.verify()V#Put(I,NONSTATIC,Ljoeq/Class/jq_Class;,state)#83
joeq.Class.jq_Class.verify()V#LocalLoad(Ljava/lang/Object;,2)#84
joeq.Class.jq_Class.verify()V#Throw()#85
joeq.Class.jq_Class.prepare()V#LocalStore(Ljava/lang/Object;,16)#1067
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,1)#1068
joeq.Class.jq_Class.prepare()V#Monitor(EXIT)#1069
joeq.Class.jq_Class.prepare()V#LocalLoad(Ljava/lang/Object;,16)#1070
joeq.Class.jq_Class.prepare()V#Throw()#1071
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalStore(Ljava/lang/Object;,3)#199
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Z,STATIC,Ljoeq/Class/jq_Method;,verbose)#200
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(I,0)#201
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#ConditionalBranch(I,eq,217)#202
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#217
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(SPECIAL,Ljoeq/Class/jq_Method;,buildEmptyCFG,()V)#218
joeq.Class.jq_Method.buildEmptyCFG()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Method.buildEmptyCFG()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getParamTypes,()[Ljoeq/Class/jq_Type;)#1
joeq.Class.jq_Method.buildEmptyCFG()V#LocalStore(Ljava/lang/Object;,1)#2
joeq.Class.jq_Method.buildEmptyCFG()V#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Class.jq_Method.buildEmptyCFG()V#ArrayLength()#4
joeq.Class.jq_Method.buildEmptyCFG()V#LocalStore(I,2)#5
joeq.Class.jq_Method.buildEmptyCFG()V#New(Ljoeq/Compiler/Quad/RegisterFactory;,0)#6
joeq.Class.jq_Method.buildEmptyCFG()V#Dup(1,0)#7
joeq.Class.jq_Method.buildEmptyCFG()V#Constant(I,0)#8
joeq.Class.jq_Method.buildEmptyCFG()V#LocalLoad(I,2)#9
joeq.Class.jq_Method.buildEmptyCFG()V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/RegisterFactory;,<init>,(II)V)#10
joeq.Class.jq_Method.buildEmptyCFG()V#LocalStore(Ljava/lang/Object;,3)#11
joeq.Class.jq_Method.buildEmptyCFG()V#Constant(I,0)#12
joeq.Class.jq_Method.buildEmptyCFG()V#LocalStore(I,4)#13
joeq.Class.jq_Method.buildEmptyCFG()V#LocalLoad(I,4)#14
joeq.Class.jq_Method.buildEmptyCFG()V#LocalLoad(I,2)#15
joeq.Class.jq_Method.buildEmptyCFG()V#ConditionalBranch(I,ge,31)#16
joeq.Class.jq_Method.buildEmptyCFG()V#LocalLoad(Ljava/lang/Object;,1)#17
joeq.Class.jq_Method.buildEmptyCFG()V#LocalLoad(I,4)#18
joeq.Class.jq_Method.buildEmptyCFG()V#ArrayLoad(Ljava/lang/Object;)#19
joeq.Class.jq_Method.buildEmptyCFG()V#LocalStore(Ljava/lang/Object;,5)#20
joeq.Class.jq_Method.buildEmptyCFG()V#LocalLoad(Ljava/lang/Object;,3)#21
joeq.Class.jq_Method.buildEmptyCFG()V#LocalLoad(I,4)#22
joeq.Class.jq_Method.buildEmptyCFG()V#LocalLoad(Ljava/lang/Object;,5)#23
joeq.Class.jq_Method.buildEmptyCFG()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/RegisterFactory;,getOrCreateLocal,(ILjoeq/Class/jq_Type;)Ljoeq/Compiler/Quad/RegisterFactory$Register;)#24
joeq.Class.jq_Method.buildEmptyCFG()V#Pop(1)#25
joeq.Class.jq_Method.buildEmptyCFG()V#LocalLoad(I,4)#26
joeq.Class.jq_Method.buildEmptyCFG()V#Constant(I,1)#27
joeq.Class.jq_Method.buildEmptyCFG()V#BinaryOp(I,add)#28
joeq.Class.jq_Method.buildEmptyCFG()V#LocalStore(I,4)#29
joeq.Class.jq_Method.buildEmptyCFG()V#Goto(14)#30
joeq.Class.jq_Method.buildEmptyCFG()V#LocalLoad(Ljava/lang/Object;,0)#31
joeq.Class.jq_Method.buildEmptyCFG()V#New(Ljoeq/Compiler/Quad/ControlFlowGraph;,0)#32
joeq.Class.jq_Method.buildEmptyCFG()V#Dup(1,0)#33
joeq.Class.jq_Method.buildEmptyCFG()V#LocalLoad(Ljava/lang/Object;,0)#34
joeq.Class.jq_Method.buildEmptyCFG()V#Constant(I,1)#35
joeq.Class.jq_Method.buildEmptyCFG()V#Constant(I,0)#36
joeq.Class.jq_Method.buildEmptyCFG()V#LocalLoad(Ljava/lang/Object;,3)#37
joeq.Class.jq_Method.buildEmptyCFG()V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,<init>,(Ljoeq/Class/jq_Method;IILjoeq/Compiler/Quad/RegisterFactory;)V)#38
joeq.Class.jq_Method.buildEmptyCFG()V#Put(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Class/jq_Method;,cfg)#39
joeq.Class.jq_Method.buildEmptyCFG()V#LocalLoad(Ljava/lang/Object;,0)#40
joeq.Class.jq_Method.buildEmptyCFG()V#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Class/jq_Method;,cfg)#41
joeq.Class.jq_Method.buildEmptyCFG()V#Constant(I,1)#42
joeq.Class.jq_Method.buildEmptyCFG()V#Constant(I,1)#43
joeq.Class.jq_Method.buildEmptyCFG()V#Constant(I,1)#44
joeq.Class.jq_Method.buildEmptyCFG()V#Constant(L;,null)#45
joeq.Class.jq_Method.buildEmptyCFG()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,createBasicBlock,(IIILjoeq/Compiler/Quad/ExceptionHandlerList;)Ljoeq/Compiler/Quad/BasicBlock;)#46
joeq.Compiler.Quad.ControlFlowGraph.createBasicBlock(IIILjoeq/Compiler/Quad/ExceptionHandlerList;)Ljoeq/Compiler/Quad/BasicBlock;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.ControlFlowGraph.createBasicBlock(IIILjoeq/Compiler/Quad/ExceptionHandlerList;)Ljoeq/Compiler/Quad/BasicBlock;#Dup(1,0)#1
joeq.Compiler.Quad.ControlFlowGraph.createBasicBlock(IIILjoeq/Compiler/Quad/ExceptionHandlerList;)Ljoeq/Compiler/Quad/BasicBlock;#Get(I,NONSTATIC,Ljoeq/Compiler/Quad/ControlFlowGraph;,bb_counter)#2
joeq.Compiler.Quad.ControlFlowGraph.createBasicBlock(IIILjoeq/Compiler/Quad/ExceptionHandlerList;)Ljoeq/Compiler/Quad/BasicBlock;#Constant(I,1)#3
joeq.Compiler.Quad.ControlFlowGraph.createBasicBlock(IIILjoeq/Compiler/Quad/ExceptionHandlerList;)Ljoeq/Compiler/Quad/BasicBlock;#BinaryOp(I,add)#4
joeq.Compiler.Quad.ControlFlowGraph.createBasicBlock(IIILjoeq/Compiler/Quad/ExceptionHandlerList;)Ljoeq/Compiler/Quad/BasicBlock;#Dup(1,1)#5
joeq.Compiler.Quad.ControlFlowGraph.createBasicBlock(IIILjoeq/Compiler/Quad/ExceptionHandlerList;)Ljoeq/Compiler/Quad/BasicBlock;#Put(I,NONSTATIC,Ljoeq/Compiler/Quad/ControlFlowGraph;,bb_counter)#6
joeq.Compiler.Quad.ControlFlowGraph.createBasicBlock(IIILjoeq/Compiler/Quad/ExceptionHandlerList;)Ljoeq/Compiler/Quad/BasicBlock;#LocalLoad(Ljava/lang/Object;,0)#7
joeq.Compiler.Quad.ControlFlowGraph.createBasicBlock(IIILjoeq/Compiler/Quad/ExceptionHandlerList;)Ljoeq/Compiler/Quad/BasicBlock;#Get(Ljoeq/Class/jq_Method;,NONSTATIC,Ljoeq/Compiler/Quad/ControlFlowGraph;,method)#8
joeq.Compiler.Quad.ControlFlowGraph.createBasicBlock(IIILjoeq/Compiler/Quad/ExceptionHandlerList;)Ljoeq/Compiler/Quad/BasicBlock;#LocalLoad(I,1)#9
joeq.Compiler.Quad.ControlFlowGraph.createBasicBlock(IIILjoeq/Compiler/Quad/ExceptionHandlerList;)Ljoeq/Compiler/Quad/BasicBlock;#LocalLoad(I,2)#10
joeq.Compiler.Quad.ControlFlowGraph.createBasicBlock(IIILjoeq/Compiler/Quad/ExceptionHandlerList;)Ljoeq/Compiler/Quad/BasicBlock;#LocalLoad(I,3)#11
joeq.Compiler.Quad.ControlFlowGraph.createBasicBlock(IIILjoeq/Compiler/Quad/ExceptionHandlerList;)Ljoeq/Compiler/Quad/BasicBlock;#LocalLoad(Ljava/lang/Object;,4)#12
joeq.Compiler.Quad.ControlFlowGraph.createBasicBlock(IIILjoeq/Compiler/Quad/ExceptionHandlerList;)Ljoeq/Compiler/Quad/BasicBlock;#Invoke(STATIC,Ljoeq/Compiler/Quad/BasicBlock;,createBasicBlock,(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)Ljoeq/Compiler/Quad/BasicBlock;)#13
joeq.Compiler.Quad.BasicBlock.createBasicBlock(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)Ljoeq/Compiler/Quad/BasicBlock;#New(Ljoeq/Compiler/Quad/BasicBlock;,0)#0
joeq.Compiler.Quad.BasicBlock.createBasicBlock(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)Ljoeq/Compiler/Quad/BasicBlock;#Dup(1,0)#1
joeq.Compiler.Quad.BasicBlock.createBasicBlock(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)Ljoeq/Compiler/Quad/BasicBlock;#LocalLoad(I,0)#2
joeq.Compiler.Quad.BasicBlock.createBasicBlock(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)Ljoeq/Compiler/Quad/BasicBlock;#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Compiler.Quad.BasicBlock.createBasicBlock(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)Ljoeq/Compiler/Quad/BasicBlock;#LocalLoad(I,2)#4
joeq.Compiler.Quad.BasicBlock.createBasicBlock(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)Ljoeq/Compiler/Quad/BasicBlock;#LocalLoad(I,3)#5
joeq.Compiler.Quad.BasicBlock.createBasicBlock(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)Ljoeq/Compiler/Quad/BasicBlock;#LocalLoad(I,4)#6
joeq.Compiler.Quad.BasicBlock.createBasicBlock(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)Ljoeq/Compiler/Quad/BasicBlock;#LocalLoad(Ljava/lang/Object;,5)#7
joeq.Compiler.Quad.BasicBlock.createBasicBlock(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)Ljoeq/Compiler/Quad/BasicBlock;#Invoke(SPECIAL,Ljoeq/Compiler/Quad/BasicBlock;,<init>,(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)V)#8
joeq.Compiler.Quad.BasicBlock.createBasicBlock(ILjoeq/Class/jq_Method;IIILjoeq/Compiler/Quad/ExceptionHandlerList;)Ljoeq/Compiler/Quad/BasicBlock;#Return(Ljava/lang/Object;)#9
joeq.Compiler.Quad.ControlFlowGraph.createBasicBlock(IIILjoeq/Compiler/Quad/ExceptionHandlerList;)Ljoeq/Compiler/Quad/BasicBlock;#Return(Ljava/lang/Object;)#14
joeq.Class.jq_Method.buildEmptyCFG()V#LocalStore(Ljava/lang/Object;,4)#47
joeq.Class.jq_Method.buildEmptyCFG()V#LocalLoad(Ljava/lang/Object;,0)#48
joeq.Class.jq_Method.buildEmptyCFG()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getReturnType,()Ljoeq/Class/jq_Type;)#49
joeq.Class.jq_Method.buildEmptyCFG()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,isReferenceType,()Z)#50
joeq.Class.jq_Method.buildEmptyCFG()V#Constant(I,0)#51
joeq.Class.jq_Method.buildEmptyCFG()V#ConditionalBranch(I,eq,59)#52
joeq.Class.jq_Method.buildEmptyCFG()V#Constant(I,1)#59
joeq.Class.jq_Method.buildEmptyCFG()V#LocalLoad(Ljava/lang/Object;,4)#60
joeq.Class.jq_Method.buildEmptyCFG()V#Get(Ljoeq/Compiler/Quad/Operator$Return$RETURN_A;,STATIC,Ljoeq/Compiler/Quad/Operator$Return$RETURN_A;,INSTANCE)#61
joeq.Compiler.Quad.Operator$Return$RETURN_A.<clinit>()V#New(Ljoeq/Compiler/Quad/Operator$Return$RETURN_A;,0)#0
joeq.Compiler.Quad.Operator$Return$RETURN_A.<clinit>()V#Dup(1,0)#1
joeq.Compiler.Quad.Operator$Return$RETURN_A.<clinit>()V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Operator$Return$RETURN_A;,<init>,()V)#2
joeq.Compiler.Quad.Operator$Return$RETURN_A.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operator$Return$RETURN_A.<init>()V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Operator$Return;,<init>,()V)#1
joeq.Compiler.Quad.Operator$Return.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operator$Return.<init>()V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Operator;,<init>,()V)#1
joeq.Compiler.Quad.Operator$Return.<init>()V#Return(V)#2
joeq.Compiler.Quad.Operator$Return$RETURN_A.<init>()V#Return(V)#2
joeq.Compiler.Quad.Operator$Return$RETURN_A.<clinit>()V#Put(Ljoeq/Compiler/Quad/Operator$Return$RETURN_A;,STATIC,Ljoeq/Compiler/Quad/Operator$Return$RETURN_A;,INSTANCE)#3
joeq.Compiler.Quad.Operator$Return$RETURN_A.<clinit>()V#Return(V)#4
joeq.Class.jq_Method.buildEmptyCFG()V#Invoke(STATIC,Ljoeq/Compiler/Quad/Operator$Return;,create,(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Return;)Ljoeq/Compiler/Quad/Quad;)#62
joeq.Compiler.Quad.Operator$Return.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Return;)Ljoeq/Compiler/Quad/Quad;#New(Ljoeq/Compiler/Quad/Quad;,0)#0
joeq.Compiler.Quad.Operator$Return.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Return;)Ljoeq/Compiler/Quad/Quad;#Dup(1,0)#1
joeq.Compiler.Quad.Operator$Return.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Return;)Ljoeq/Compiler/Quad/Quad;#LocalLoad(I,0)#2
joeq.Compiler.Quad.Operator$Return.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Return;)Ljoeq/Compiler/Quad/Quad;#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Compiler.Quad.Operator$Return.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Return;)Ljoeq/Compiler/Quad/Quad;#LocalLoad(Ljava/lang/Object;,2)#4
joeq.Compiler.Quad.Operator$Return.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Return;)Ljoeq/Compiler/Quad/Quad;#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Quad;,<init>,(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;)V)#5
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;)V#LocalLoad(I,1)#3
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;)V#Put(I,NONSTATIC,Ljoeq/Compiler/Quad/Quad;,id_number)#4
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;)V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;)V#LocalLoad(Ljava/lang/Object;,2)#6
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;)V#Put(Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/Quad;,bb)#7
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;)V#LocalLoad(Ljava/lang/Object;,0)#8
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;)V#LocalLoad(Ljava/lang/Object;,3)#9
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;)V#Put(Ljoeq/Compiler/Quad/Operator;,NONSTATIC,Ljoeq/Compiler/Quad/Quad;,operator)#10
joeq.Compiler.Quad.Quad.<init>(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator;)V#Return(V)#11
joeq.Compiler.Quad.Operator$Return.create(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Return;)Ljoeq/Compiler/Quad/Quad;#Return(Ljava/lang/Object;)#6
joeq.Class.jq_Method.buildEmptyCFG()V#LocalStore(Ljava/lang/Object;,5)#63
joeq.Class.jq_Method.buildEmptyCFG()V#LocalLoad(Ljava/lang/Object;,5)#64
joeq.Class.jq_Method.buildEmptyCFG()V#New(Ljoeq/Compiler/Quad/Operand$AConstOperand;,0)#65
joeq.Class.jq_Method.buildEmptyCFG()V#Dup(1,0)#66
joeq.Class.jq_Method.buildEmptyCFG()V#Constant(L;,null)#67
joeq.Class.jq_Method.buildEmptyCFG()V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Operand$AConstOperand;,<init>,(Ljava/lang/Object;)V)#68
joeq.Compiler.Quad.Operand$AConstOperand.<init>(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operand$AConstOperand.<init>(Ljava/lang/Object;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.Quad.Operand$AConstOperand.<init>(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.Operand$AConstOperand.<init>(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Compiler.Quad.Operand$AConstOperand.<init>(Ljava/lang/Object;)V#Put(Ljava/lang/Object;,NONSTATIC,Ljoeq/Compiler/Quad/Operand$AConstOperand;,value)#4
joeq.Compiler.Quad.Operand$AConstOperand.<init>(Ljava/lang/Object;)V#Return(V)#5
joeq.Class.jq_Method.buildEmptyCFG()V#Invoke(STATIC,Ljoeq/Compiler/Quad/Operator$Return;,setSrc,(Ljoeq/Compiler/Quad/Quad;Ljoeq/Compiler/Quad/Operand;)V)#69
joeq.Compiler.Quad.Operator$Return.setSrc(Ljoeq/Compiler/Quad/Quad;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operator$Return.setSrc(Ljoeq/Compiler/Quad/Quad;Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Compiler.Quad.Operator$Return.setSrc(Ljoeq/Compiler/Quad/Quad;Ljoeq/Compiler/Quad/Operand;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,setOp1,(Ljoeq/Compiler/Quad/Operand;)V)#2
joeq.Compiler.Quad.Quad.setOp1(Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Quad.setOp1(Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Compiler.Quad.Quad.setOp1(Ljoeq/Compiler/Quad/Operand;)V#Put(Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/Quad;,operand1)#2
joeq.Compiler.Quad.Quad.setOp1(Ljoeq/Compiler/Quad/Operand;)V#Return(V)#3
joeq.Compiler.Quad.Operator$Return.setSrc(Ljoeq/Compiler/Quad/Quad;Ljoeq/Compiler/Quad/Operand;)V#Return(V)#3
joeq.Class.jq_Method.buildEmptyCFG()V#LocalLoad(Ljava/lang/Object;,4)#70
joeq.Class.jq_Method.buildEmptyCFG()V#LocalLoad(Ljava/lang/Object;,5)#71
joeq.Class.jq_Method.buildEmptyCFG()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,appendQuad,(Ljoeq/Compiler/Quad/Quad;)V)#72
joeq.Class.jq_Method.buildEmptyCFG()V#LocalLoad(Ljava/lang/Object;,0)#73
joeq.Class.jq_Method.buildEmptyCFG()V#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Class/jq_Method;,cfg)#74
joeq.Class.jq_Method.buildEmptyCFG()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,entry,()Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;)#75
joeq.Class.jq_Method.buildEmptyCFG()V#LocalStore(Ljava/lang/Object;,6)#76
joeq.Class.jq_Method.buildEmptyCFG()V#LocalLoad(Ljava/lang/Object;,0)#77
joeq.Class.jq_Method.buildEmptyCFG()V#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Class/jq_Method;,cfg)#78
joeq.Class.jq_Method.buildEmptyCFG()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,exit,()Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;)#79
joeq.Class.jq_Method.buildEmptyCFG()V#LocalStore(Ljava/lang/Object;,7)#80
joeq.Class.jq_Method.buildEmptyCFG()V#LocalLoad(Ljava/lang/Object;,4)#81
joeq.Class.jq_Method.buildEmptyCFG()V#LocalLoad(Ljava/lang/Object;,6)#82
joeq.Class.jq_Method.buildEmptyCFG()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,addPredecessor,(Ljoeq/Compiler/Quad/BasicBlock;)V)#83
joeq.Class.jq_Method.buildEmptyCFG()V#LocalLoad(Ljava/lang/Object;,4)#84
joeq.Class.jq_Method.buildEmptyCFG()V#LocalLoad(Ljava/lang/Object;,7)#85
joeq.Class.jq_Method.buildEmptyCFG()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,addSuccessor,(Ljoeq/Compiler/Quad/BasicBlock;)V)#86
joeq.Class.jq_Method.buildEmptyCFG()V#LocalLoad(Ljava/lang/Object;,6)#87
joeq.Class.jq_Method.buildEmptyCFG()V#LocalLoad(Ljava/lang/Object;,4)#88
joeq.Class.jq_Method.buildEmptyCFG()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,addSuccessor,(Ljoeq/Compiler/Quad/BasicBlock;)V)#89
joeq.Class.jq_Method.buildEmptyCFG()V#LocalLoad(Ljava/lang/Object;,7)#90
joeq.Class.jq_Method.buildEmptyCFG()V#LocalLoad(Ljava/lang/Object;,4)#91
joeq.Class.jq_Method.buildEmptyCFG()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,addPredecessor,(Ljoeq/Compiler/Quad/BasicBlock;)V)#92
joeq.Class.jq_Method.buildEmptyCFG()V#Return(V)#93
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#219
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Class/jq_Method;,cfg)#220
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Return(Ljava/lang/Object;)#221
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#LocalStore(Ljava/lang/Object;,2)#64
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,2)#65
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,reversePostOrder,()Ljava/util/List;)#66
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#1
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder()Ljava/util/List;#Get(Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/ControlFlowGraph;,start_node)#2
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder()Ljava/util/List;#Invoke(SPECIAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,reversePostOrder,(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;)#3
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#New(Ljava/util/ArrayList;,0)#0
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#Dup(1,0)#1
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#2
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,2)#3
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#4
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#Get(I,NONSTATIC,Ljoeq/Compiler/Quad/ControlFlowGraph;,bb_counter)#5
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#Constant(I,1)#6
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#BinaryOp(I,add)#7
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#New([Z,1)#8
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,3)#9
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#10
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#11
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#12
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#13
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#Constant(I,1)#14
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#Invoke(SPECIAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,reversePostOrder_helper,(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V)#15
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#LocalLoad(Ljava/lang/Object;,2)#0
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getID,()I)#2
joeq.Compiler.Quad.BasicBlock.getID()I#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BasicBlock.getID()I#Get(I,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,id_number)#1
joeq.Compiler.Quad.BasicBlock.getID()I#Return(I)#2
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#ArrayLoad(B)#3
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#Constant(I,0)#4
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#ConditionalBranch(I,eq,7)#5
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#LocalLoad(Ljava/lang/Object;,2)#7
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#LocalLoad(Ljava/lang/Object;,1)#8
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getID,()I)#9
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#Constant(I,1)#10
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#ArrayStore(B)#11
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#LocalLoad(I,4)#12
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#Constant(I,0)#13
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#ConditionalBranch(I,eq,18)#14
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#LocalLoad(Ljava/lang/Object;,1)#15
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getSuccessors,()Ljava/util/List;)#16
joeq.Compiler.Quad.BasicBlock.getSuccessors()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BasicBlock.getSuccessors()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,successors)#1
joeq.Compiler.Quad.BasicBlock.getSuccessors()Ljava/util/List;#Constant(L;,null)#2
joeq.Compiler.Quad.BasicBlock.getSuccessors()Ljava/util/List;#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
joeq.Compiler.Quad.BasicBlock.getSuccessors()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#6
joeq.Compiler.Quad.BasicBlock.getSuccessors()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,successors)#7
joeq.Compiler.Quad.BasicBlock.getSuccessors()Ljava/util/List;#Return(Ljava/lang/Object;)#8
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#Goto(20)#17
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#LocalStore(Ljava/lang/Object;,5)#20
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#LocalLoad(Ljava/lang/Object;,5)#21
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#22
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#LocalStore(Ljava/lang/Object;,6)#23
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#LocalLoad(Ljava/lang/Object;,6)#24
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#25
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#Constant(I,0)#26
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#ConditionalBranch(I,eq,39)#27
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#LocalLoad(Ljava/lang/Object;,6)#28
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#29
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#CheckCast(Ljoeq/Compiler/Quad/BasicBlock;)#30
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#LocalStore(Ljava/lang/Object;,7)#31
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#LocalLoad(Ljava/lang/Object;,0)#32
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#LocalLoad(Ljava/lang/Object;,7)#33
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#LocalLoad(Ljava/lang/Object;,2)#34
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#LocalLoad(Ljava/lang/Object;,3)#35
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#LocalLoad(I,4)#36
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,reversePostOrder_helper,(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V)#37
joeq.Compiler.Quad.BasicBlock.getSuccessors()Ljava/util/List;#Invoke(STATIC,Ljava/util/Collections;,emptyList,()Ljava/util/List;)#4
joeq.Compiler.Quad.BasicBlock.getSuccessors()Ljava/util/List;#Return(Ljava/lang/Object;)#5
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#LocalLoad(I,4)#39
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#Constant(I,0)#40
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#ConditionalBranch(I,eq,67)#41
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#LocalLoad(Ljava/lang/Object;,1)#42
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getExceptionHandlers,()Ljoeq/Compiler/Quad/ExceptionHandlerList;)#43
joeq.Compiler.Quad.BasicBlock.getExceptionHandlers()Ljoeq/Compiler/Quad/ExceptionHandlerList;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BasicBlock.getExceptionHandlers()Ljoeq/Compiler/Quad/ExceptionHandlerList;#Get(Ljoeq/Compiler/Quad/ExceptionHandlerList;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,exception_handler_list)#1
joeq.Compiler.Quad.BasicBlock.getExceptionHandlers()Ljoeq/Compiler/Quad/ExceptionHandlerList;#Constant(L;,null)#2
joeq.Compiler.Quad.BasicBlock.getExceptionHandlers()Ljoeq/Compiler/Quad/ExceptionHandlerList;#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
joeq.Compiler.Quad.BasicBlock.getExceptionHandlers()Ljoeq/Compiler/Quad/ExceptionHandlerList;#Invoke(STATIC,Ljoeq/Compiler/Quad/ExceptionHandlerList;,getEmptyList,()Ljoeq/Compiler/Quad/ExceptionHandlerList;)#4
joeq.Compiler.Quad.ExceptionHandlerList.<clinit>()V#New(Ljoeq/Compiler/Quad/ExceptionHandlerList$1;,0)#0
joeq.Compiler.Quad.ExceptionHandlerList.<clinit>()V#Dup(1,0)#1
joeq.Compiler.Quad.ExceptionHandlerList.<clinit>()V#Constant(L;,null)#2
joeq.Compiler.Quad.ExceptionHandlerList.<clinit>()V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/ExceptionHandlerList$1;,<init>,(Ljoeq/Compiler/Quad/ExceptionHandler;)V)#3
joeq.Compiler.Quad.ExceptionHandlerList$1.<init>(Ljoeq/Compiler/Quad/ExceptionHandler;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.ExceptionHandlerList$1.<init>(Ljoeq/Compiler/Quad/ExceptionHandler;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Compiler.Quad.ExceptionHandlerList$1.<init>(Ljoeq/Compiler/Quad/ExceptionHandler;)V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/ExceptionHandlerList;,<init>,(Ljoeq/Compiler/Quad/ExceptionHandler;)V)#2
joeq.Compiler.Quad.ExceptionHandlerList.<init>(Ljoeq/Compiler/Quad/ExceptionHandler;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.ExceptionHandlerList.<init>(Ljoeq/Compiler/Quad/ExceptionHandler;)V#Invoke(SPECIAL,Ljava/util/AbstractList;,<init>,()V)#1
joeq.Compiler.Quad.ExceptionHandlerList.<init>(Ljoeq/Compiler/Quad/ExceptionHandler;)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.ExceptionHandlerList.<init>(Ljoeq/Compiler/Quad/ExceptionHandler;)V#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Compiler.Quad.ExceptionHandlerList.<init>(Ljoeq/Compiler/Quad/ExceptionHandler;)V#Put(Ljoeq/Compiler/Quad/ExceptionHandler;,NONSTATIC,Ljoeq/Compiler/Quad/ExceptionHandlerList;,exception_handler)#4
joeq.Compiler.Quad.ExceptionHandlerList.<init>(Ljoeq/Compiler/Quad/ExceptionHandler;)V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Compiler.Quad.ExceptionHandlerList.<init>(Ljoeq/Compiler/Quad/ExceptionHandler;)V#Constant(L;,null)#6
joeq.Compiler.Quad.ExceptionHandlerList.<init>(Ljoeq/Compiler/Quad/ExceptionHandler;)V#Put(Ljoeq/Compiler/Quad/ExceptionHandlerList;,NONSTATIC,Ljoeq/Compiler/Quad/ExceptionHandlerList;,parent)#7
joeq.Compiler.Quad.ExceptionHandlerList.<init>(Ljoeq/Compiler/Quad/ExceptionHandler;)V#Return(V)#8
joeq.Compiler.Quad.ExceptionHandlerList$1.<init>(Ljoeq/Compiler/Quad/ExceptionHandler;)V#Return(V)#3
joeq.Compiler.Quad.ExceptionHandlerList.<clinit>()V#Put(Ljoeq/Compiler/Quad/ExceptionHandlerList;,STATIC,Ljoeq/Compiler/Quad/ExceptionHandlerList;,EMPTY)#4
joeq.Compiler.Quad.ExceptionHandlerList.<clinit>()V#Return(V)#5
joeq.Compiler.Quad.ExceptionHandlerList.getEmptyList()Ljoeq/Compiler/Quad/ExceptionHandlerList;#Get(Ljoeq/Compiler/Quad/ExceptionHandlerList;,STATIC,Ljoeq/Compiler/Quad/ExceptionHandlerList;,EMPTY)#0
joeq.Compiler.Quad.ExceptionHandlerList.getEmptyList()Ljoeq/Compiler/Quad/ExceptionHandlerList;#Return(Ljava/lang/Object;)#1
joeq.Compiler.Quad.BasicBlock.getExceptionHandlers()Ljoeq/Compiler/Quad/ExceptionHandlerList;#Return(Ljava/lang/Object;)#5
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#LocalStore(Ljava/lang/Object;,6)#44
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#LocalLoad(Ljava/lang/Object;,6)#45
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#46
joeq.Compiler.Quad.ExceptionHandlerList.iterator()Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.ExceptionHandlerList.iterator()Ljava/util/Iterator;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ExceptionHandlerList;,exceptionHandlerIterator,()Ljava/util/Iterator;)#1
joeq.Compiler.Quad.ExceptionHandlerList$1.exceptionHandlerIterator()Ljava/util/Iterator;#Invoke(STATIC,Ljoeq/Compiler/Quad/ExceptionHandlerIterator;,getEmptyIterator,()Ljoeq/Compiler/Quad/ExceptionHandlerIterator;)#0
joeq.Compiler.Quad.ExceptionHandlerIterator.<clinit>()V#New(Ljoeq/Compiler/Quad/ExceptionHandlerIterator;,0)#0
joeq.Compiler.Quad.ExceptionHandlerIterator.<clinit>()V#Dup(1,0)#1
joeq.Compiler.Quad.ExceptionHandlerIterator.<clinit>()V#Constant(L;,null)#2
joeq.Compiler.Quad.ExceptionHandlerIterator.<clinit>()V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/ExceptionHandlerIterator;,<init>,(Ljoeq/Compiler/Quad/ExceptionHandlerList;)V)#3
joeq.Compiler.Quad.ExceptionHandlerIterator.<init>(Ljoeq/Compiler/Quad/ExceptionHandlerList;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.ExceptionHandlerIterator.<init>(Ljoeq/Compiler/Quad/ExceptionHandlerList;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.Quad.ExceptionHandlerIterator.<init>(Ljoeq/Compiler/Quad/ExceptionHandlerList;)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.ExceptionHandlerIterator.<init>(Ljoeq/Compiler/Quad/ExceptionHandlerList;)V#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Compiler.Quad.ExceptionHandlerIterator.<init>(Ljoeq/Compiler/Quad/ExceptionHandlerList;)V#LocalLoad(Ljava/lang/Object;,1)#4
joeq.Compiler.Quad.ExceptionHandlerIterator.<init>(Ljoeq/Compiler/Quad/ExceptionHandlerList;)V#Dup(1,1)#5
joeq.Compiler.Quad.ExceptionHandlerIterator.<init>(Ljoeq/Compiler/Quad/ExceptionHandlerList;)V#Put(Ljoeq/Compiler/Quad/ExceptionHandlerList;,NONSTATIC,Ljoeq/Compiler/Quad/ExceptionHandlerIterator;,current)#6
joeq.Compiler.Quad.ExceptionHandlerIterator.<init>(Ljoeq/Compiler/Quad/ExceptionHandlerList;)V#Put(Ljoeq/Compiler/Quad/ExceptionHandlerList;,NONSTATIC,Ljoeq/Compiler/Quad/ExceptionHandlerIterator;,root)#7
joeq.Compiler.Quad.ExceptionHandlerIterator.<init>(Ljoeq/Compiler/Quad/ExceptionHandlerList;)V#Return(V)#8
joeq.Compiler.Quad.ExceptionHandlerIterator.<clinit>()V#Put(Ljoeq/Compiler/Quad/ExceptionHandlerIterator;,STATIC,Ljoeq/Compiler/Quad/ExceptionHandlerIterator;,EMPTY)#4
joeq.Compiler.Quad.ExceptionHandlerIterator.<clinit>()V#Return(V)#5
joeq.Compiler.Quad.ExceptionHandlerIterator.getEmptyIterator()Ljoeq/Compiler/Quad/ExceptionHandlerIterator;#Get(Ljoeq/Compiler/Quad/ExceptionHandlerIterator;,STATIC,Ljoeq/Compiler/Quad/ExceptionHandlerIterator;,EMPTY)#0
joeq.Compiler.Quad.ExceptionHandlerIterator.getEmptyIterator()Ljoeq/Compiler/Quad/ExceptionHandlerIterator;#Return(Ljava/lang/Object;)#1
joeq.Compiler.Quad.ExceptionHandlerList$1.exceptionHandlerIterator()Ljava/util/Iterator;#Return(Ljava/lang/Object;)#1
joeq.Compiler.Quad.ExceptionHandlerList.iterator()Ljava/util/Iterator;#Return(Ljava/lang/Object;)#2
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#LocalStore(Ljava/lang/Object;,7)#47
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#LocalLoad(Ljava/lang/Object;,7)#48
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#49
joeq.Compiler.Quad.ExceptionHandlerIterator.hasNext()Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.ExceptionHandlerIterator.hasNext()Z#Get(Ljoeq/Compiler/Quad/ExceptionHandlerList;,NONSTATIC,Ljoeq/Compiler/Quad/ExceptionHandlerIterator;,current)#1
joeq.Compiler.Quad.ExceptionHandlerIterator.hasNext()Z#Constant(L;,null)#2
joeq.Compiler.Quad.ExceptionHandlerIterator.hasNext()Z#ConditionalBranch(Ljava/lang/Object;,eq,6)#3
joeq.Compiler.Quad.ExceptionHandlerIterator.hasNext()Z#Constant(I,0)#6
joeq.Compiler.Quad.ExceptionHandlerIterator.hasNext()Z#Return(I)#7
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#Constant(I,0)#50
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#ConditionalBranch(I,eq,66)#51
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#Goto(105)#66
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#LocalLoad(Ljava/lang/Object;,3)#105
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#Constant(I,0)#106
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#LocalLoad(Ljava/lang/Object;,1)#107
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#Invoke(INTERFACE,Ljava/util/List;,add,(ILjava/lang/Object;)V)#108
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#Return(V)#109
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#Goto(24)#38
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#16
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#Return(Ljava/lang/Object;)#17
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder()Ljava/util/List;#Return(Ljava/lang/Object;)#4
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#67
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#LocalStore(Ljava/lang/Object;,4)#68
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Goto(219)#69
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,4)#219
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#220
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Constant(I,0)#221
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#ConditionalBranch(I,ne,70)#222
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,4)#70
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#71
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#CheckCast(Ljoeq/Compiler/Quad/BasicBlock;)#72
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#LocalStore(Ljava/lang/Object;,3)#73
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,3)#74
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getQuads,()Ljava/util/List;)#75
joeq.Compiler.Quad.BasicBlock.getQuads()Ljava/util/List;#Invoke(STATIC,Ljava/util/Collections;,emptyList,()Ljava/util/List;)#4
joeq.Compiler.Quad.BasicBlock.getQuads()Ljava/util/List;#Return(Ljava/lang/Object;)#5
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#76
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#LocalStore(Ljava/lang/Object;,6)#77
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Goto(215)#78
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,6)#215
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#216
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Constant(I,0)#217
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#ConditionalBranch(I,ne,79)#218
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,6)#79
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#80
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#CheckCast(Ljoeq/Compiler/Quad/Quad;)#81
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#LocalStore(Ljava/lang/Object;,5)#82
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,5)#83
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getOperator,()Ljoeq/Compiler/Quad/Operator;)#84
joeq.Compiler.Quad.Quad.getOperator()Ljoeq/Compiler/Quad/Operator;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Quad.getOperator()Ljoeq/Compiler/Quad/Operator;#Get(Ljoeq/Compiler/Quad/Operator;,NONSTATIC,Ljoeq/Compiler/Quad/Quad;,operator)#1
joeq.Compiler.Quad.Quad.getOperator()Ljoeq/Compiler/Quad/Operator;#Return(Ljava/lang/Object;)#2
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#LocalStore(Ljava/lang/Object;,7)#85
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,7)#86
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Instanceof(Ljoeq/Compiler/Quad/Operator$Invoke;)#87
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Constant(I,0)#88
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#ConditionalBranch(I,eq,108)#89
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,7)#108
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Instanceof(Ljoeq/Compiler/Quad/Operator$Getstatic;)#109
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Constant(I,0)#110
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#ConditionalBranch(I,eq,123)#111
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,7)#123
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Instanceof(Ljoeq/Compiler/Quad/Operator$Putstatic;)#124
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Constant(I,0)#125
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#ConditionalBranch(I,eq,138)#126
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,7)#138
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Instanceof(Ljoeq/Compiler/Quad/Operator$New;)#139
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Constant(I,0)#140
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#ConditionalBranch(I,eq,160)#141
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,7)#160
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Instanceof(Ljoeq/Compiler/Quad/Operator$NewArray;)#161
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Constant(I,0)#162
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#ConditionalBranch(I,eq,182)#163
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,7)#182
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Instanceof(Ljoeq/Compiler/Quad/Operator$Move;)#183
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Constant(I,0)#184
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#ConditionalBranch(I,eq,215)#185
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Return(V)#223
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(Ljava/lang/Object;,0)#1512
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,visitPEI,()V)#1513
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(Ljava/lang/Object;,0)#1514
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Invoke(SPECIAL,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,getUnsignedWord,()C)#1515
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalStore(I,2)#1516
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(Ljava/lang/Object;,0)#1517
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,clazz)#1518
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(I,2)#1519
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getCPasStaticMethod,(C)Ljoeq/Class/jq_StaticMethod;)#1520
joeq.Class.jq_Class.getCPasStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.getCPasStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#Constant(I,2)#1
joeq.Class.jq_Class.getCPasStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,chkState,(B)V)#2
joeq.Class.jq_Class.getCPasStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Class.getCPasStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#Get(Ljoeq/Class/jq_ConstantPool;,NONSTATIC,Ljoeq/Class/jq_Class;,const_pool)#4
joeq.Class.jq_Class.getCPasStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#LocalLoad(I,1)#5
joeq.Class.jq_Class.getCPasStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#Invoke(VIRTUAL,Ljoeq/Class/jq_ConstantPool;,getAsStaticMethod,(C)Ljoeq/Class/jq_StaticMethod;)#6
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#Get([B,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool_tags)#1
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#LocalLoad(I,1)#2
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#ArrayLoad(B)#3
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#Constant(I,16)#4
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#ConditionalBranch(I,ne,12)#5
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,0)#12
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#Get([B,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool_tags)#13
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#LocalLoad(I,1)#14
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#ArrayLoad(B)#15
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#Constant(I,10)#16
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#ConditionalBranch(I,eq,22)#17
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#Get(Z,STATIC,Ljoeq/Class/jq_ConstantPool;,TRACE)#22
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#Constant(I,0)#23
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#ConditionalBranch(I,eq,41)#24
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,0)#41
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#Get([Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_ConstantPool;,constant_pool)#42
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#LocalLoad(I,1)#43
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#ArrayLoad(Ljava/lang/Object;)#44
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#CheckCast(Ljoeq/Class/jq_MemberReference;)#45
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#LocalStore(Ljava/lang/Object;,2)#46
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,2)#47
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#Invoke(VIRTUAL,Ljoeq/Class/jq_MemberReference;,getReferencedClass,()Ljoeq/Class/jq_Class;)#48
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#LocalStore(Ljava/lang/Object;,3)#49
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,2)#50
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#Invoke(VIRTUAL,Ljoeq/Class/jq_MemberReference;,getNameAndDesc,()Ljoeq/Class/jq_NameAndDesc;)#51
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#LocalStore(Ljava/lang/Object;,4)#52
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,3)#53
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,isInClassLib,()Z)#54
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#Constant(I,0)#55
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#ConditionalBranch(I,eq,61)#56
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,3)#61
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,isLoaded,()Z)#62
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#Constant(I,0)#63
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#ConditionalBranch(I,eq,88)#64
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,3)#65
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,4)#66
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getStaticMethod,(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;)#67
joeq.Class.jq_Class.getStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.getStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#Constant(I,3)#1
joeq.Class.jq_Class.getStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,chkState,(B)V)#2
joeq.Class.jq_Class.getStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Class.getStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#Get([Ljoeq/Class/jq_StaticMethod;,NONSTATIC,Ljoeq/Class/jq_Class;,static_methods)#4
joeq.Class.jq_Class.getStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,1)#5
joeq.Class.jq_Class.getStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#Invoke(STATIC,Ljoeq/Class/jq_Class;,findByNameAndDesc,([Ljoeq/Class/jq_Member;Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_Member;)#6
joeq.Class.jq_Class.getStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#CheckCast(Ljoeq/Class/jq_StaticMethod;)#7
joeq.Class.jq_Class.getStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#LocalStore(Ljava/lang/Object;,2)#8
joeq.Class.jq_Class.getStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,2)#9
joeq.Class.jq_Class.getStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#Constant(L;,null)#10
joeq.Class.jq_Class.getStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#ConditionalBranch(Ljava/lang/Object;,eq,14)#11
joeq.Class.jq_Class.getStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,2)#12
joeq.Class.jq_Class.getStaticMethod(Ljoeq/Class/jq_NameAndDesc;)Ljoeq/Class/jq_StaticMethod;#Return(Ljava/lang/Object;)#13
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#LocalStore(Ljava/lang/Object;,5)#68
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,5)#69
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#Constant(L;,null)#70
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#ConditionalBranch(Ljava/lang/Object;,ne,148)#71
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,5)#148
joeq.Class.jq_ConstantPool.getAsStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#Return(Ljava/lang/Object;)#149
joeq.Class.jq_Class.getCPasStaticMethod(C)Ljoeq/Class/jq_StaticMethod;#Return(Ljava/lang/Object;)#7
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalStore(Ljava/lang/Object;,3)#1521
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(Ljava/lang/Object;,3)#1522
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Invoke(VIRTUAL,Ljoeq/Class/jq_StaticMethod;,getReturnType,()Ljoeq/Class/jq_Type;)#1523
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalStore(Ljava/lang/Object;,4)#1524
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(Ljava/lang/Object;,4)#1525
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Get(Ljoeq/Class/jq_Primitive;,STATIC,Ljoeq/Class/jq_Primitive;,VOID)#1526
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#ConditionalBranch(Ljava/lang/Object;,ne,1533)#1527
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(Ljava/lang/Object;,0)#1528
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Constant(I,1)#1529
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#LocalLoad(Ljava/lang/Object;,3)#1530
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,visitVINVOKE,(BLjoeq/Class/jq_Method;)V)#1531
joeq.Compiler.BytecodeAnalysis.BytecodeVisitor.visitBytecode()V#Goto(1853)#1532
joeq.Class.jq_StaticMethod.resolve()Ljoeq/Class/jq_Member;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_StaticMethod.resolve()Ljoeq/Class/jq_Member;#Invoke(VIRTUAL,Ljoeq/Class/jq_StaticMethod;,resolve1,()Ljoeq/Class/jq_StaticMethod;)#1
joeq.Class.jq_StaticMethod.resolve1()Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_StaticMethod.resolve1()Ljoeq/Class/jq_StaticMethod;#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Ljoeq/Class/jq_StaticMethod;,clazz)#1
joeq.Class.jq_StaticMethod.resolve1()Ljoeq/Class/jq_StaticMethod;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,load,()V)#2
joeq.Class.jq_StaticMethod.resolve1()Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_StaticMethod.resolve1()Ljoeq/Class/jq_StaticMethod;#Get(B,NONSTATIC,Ljoeq/Class/jq_StaticMethod;,state)#4
joeq.Class.jq_StaticMethod.resolve1()Ljoeq/Class/jq_StaticMethod;#Constant(I,5)#5
joeq.Class.jq_StaticMethod.resolve1()Ljoeq/Class/jq_StaticMethod;#ConditionalBranch(I,lt,9)#6
joeq.Class.jq_StaticMethod.resolve1()Ljoeq/Class/jq_StaticMethod;#LocalLoad(Ljava/lang/Object;,0)#7
joeq.Class.jq_StaticMethod.resolve1()Ljoeq/Class/jq_StaticMethod;#Return(Ljava/lang/Object;)#8
joeq.Class.jq_StaticMethod.resolve()Ljoeq/Class/jq_Member;#Return(Ljava/lang/Object;)#2
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#Constant(I,0)#55
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#LocalStore(I,5)#56
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#LocalLoad(I,3)#57
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#Constant(I,0)#58
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#ConditionalBranch(I,eq,63)#59
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#Get(Ljoeq/Compiler/Quad/Operator$Invoke$INVOKESTATIC_V;,STATIC,Ljoeq/Compiler/Quad/Operator$Invoke$INVOKESTATIC_V;,INSTANCE)#63
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#LocalStore(Ljava/lang/Object;,4)#64
joeq.Compiler.Quad.BytecodeToQuad.visitVINVOKE(BLjoeq/Class/jq_Method;)V#Goto(95)#65
joeq.Compiler.Quad.BytecodeToQuad.visitVRETURN()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad.visitVRETURN()V#Invoke(SPECIAL,Ljoeq/Compiler/BytecodeAnalysis/BytecodeVisitor;,visitVRETURN,()V)#1
joeq.Compiler.Quad.BytecodeToQuad.visitVRETURN()V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.BytecodeToQuad.visitVRETURN()V#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_cfg)#3
joeq.Compiler.Quad.BytecodeToQuad.visitVRETURN()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,getNewQuadID,()I)#4
joeq.Compiler.Quad.BytecodeToQuad.visitVRETURN()V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Compiler.Quad.BytecodeToQuad.visitVRETURN()V#Get(Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_bb)#6
joeq.Compiler.Quad.BytecodeToQuad.visitVRETURN()V#Get(Ljoeq/Compiler/Quad/Operator$Return$RETURN_V;,STATIC,Ljoeq/Compiler/Quad/Operator$Return$RETURN_V;,INSTANCE)#7
joeq.Compiler.Quad.Operator$Return$RETURN_V.<clinit>()V#New(Ljoeq/Compiler/Quad/Operator$Return$RETURN_V;,0)#0
joeq.Compiler.Quad.Operator$Return$RETURN_V.<clinit>()V#Dup(1,0)#1
joeq.Compiler.Quad.Operator$Return$RETURN_V.<clinit>()V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Operator$Return$RETURN_V;,<init>,()V)#2
joeq.Compiler.Quad.Operator$Return$RETURN_V.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operator$Return$RETURN_V.<init>()V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Operator$Return;,<init>,()V)#1
joeq.Compiler.Quad.Operator$Return$RETURN_V.<init>()V#Return(V)#2
joeq.Compiler.Quad.Operator$Return$RETURN_V.<clinit>()V#Put(Ljoeq/Compiler/Quad/Operator$Return$RETURN_V;,STATIC,Ljoeq/Compiler/Quad/Operator$Return$RETURN_V;,INSTANCE)#3
joeq.Compiler.Quad.Operator$Return$RETURN_V.<clinit>()V#Return(V)#4
joeq.Compiler.Quad.BytecodeToQuad.visitVRETURN()V#Invoke(STATIC,Ljoeq/Compiler/Quad/Operator$Return;,create,(ILjoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Operator$Return;)Ljoeq/Compiler/Quad/Quad;)#8
joeq.Compiler.Quad.BytecodeToQuad.visitVRETURN()V#LocalStore(Ljava/lang/Object;,1)#9
joeq.Compiler.Quad.BytecodeToQuad.visitVRETURN()V#LocalLoad(Ljava/lang/Object;,0)#10
joeq.Compiler.Quad.BytecodeToQuad.visitVRETURN()V#LocalLoad(Ljava/lang/Object;,1)#11
joeq.Compiler.Quad.BytecodeToQuad.visitVRETURN()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,appendQuad,(Ljoeq/Compiler/Quad/Quad;)V)#12
joeq.Compiler.Quad.BytecodeToQuad.visitVRETURN()V#LocalLoad(Ljava/lang/Object;,0)#13
joeq.Compiler.Quad.BytecodeToQuad.visitVRETURN()V#Get(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,current_state)#14
joeq.Compiler.Quad.BytecodeToQuad.visitVRETURN()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,clearStack,()V)#15
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.clearStack()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.clearStack()V#Constant(I,0)#1
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.clearStack()V#Put(I,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,stackptr)#2
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.clearStack()V#Return(V)#3
joeq.Compiler.Quad.BytecodeToQuad.visitVRETURN()V#Return(V)#16
joeq.Compiler.Quad.BytecodeToQuad.isEndOfBB()Z#Constant(I,1)#10
joeq.Compiler.Quad.BytecodeToQuad.isEndOfBB()Z#Goto(13)#11
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Goto(144)#140
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#144
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,saveStackIntoRegisters,()V)#145
joeq.Compiler.Quad.BytecodeToQuad.saveStackIntoRegisters()V#Constant(I,0)#0
joeq.Compiler.Quad.BytecodeToQuad.saveStackIntoRegisters()V#LocalStore(I,1)#1
joeq.Compiler.Quad.BytecodeToQuad.saveStackIntoRegisters()V#LocalLoad(I,1)#2
joeq.Compiler.Quad.BytecodeToQuad.saveStackIntoRegisters()V#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Compiler.Quad.BytecodeToQuad.saveStackIntoRegisters()V#Get(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,current_state)#4
joeq.Compiler.Quad.BytecodeToQuad.saveStackIntoRegisters()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,getStackSize,()I)#5
joeq.Compiler.Quad.BytecodeToQuad.saveStackIntoRegisters()V#ConditionalBranch(I,ge,75)#6
joeq.Compiler.Quad.BytecodeToQuad.saveStackIntoRegisters()V#Return(V)#75
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#146
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Get(Z,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,endsWithRET)#147
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Constant(I,0)#148
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#ConditionalBranch(I,ne,166)#149
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Constant(I,0)#150
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalStore(I,2)#151
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(I,2)#152
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#153
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,getNumberOfSuccessors,()I)#154
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#ConditionalBranch(I,ge,166)#155
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#156
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#157
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(I,2)#158
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Invoke(VIRTUAL,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,getSuccessor,(I)Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)#159
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,mergeStateWith,(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V)#160
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWith(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWith(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Get([Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,start_states)#1
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWith(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#2
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWith(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Get(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,id)#3
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWith(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#ArrayLoad(Ljava/lang/Object;)#4
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWith(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Constant(L;,null)#5
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWith(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#ConditionalBranch(Ljava/lang/Object;,ne,31)#6
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWith(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#7
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWith(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Get(Z,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,TRACE)#8
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWith(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Constant(I,0)#9
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWith(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#ConditionalBranch(I,eq,22)#10
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWith(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#22
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWith(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Get([Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,start_states)#23
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWith(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#24
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWith(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Get(I,NONSTATIC,Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;,id)#25
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWith(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#26
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWith(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Get(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,current_state)#27
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWith(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,copy,()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;)#28
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#New(Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,0)#0
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Dup(1,0)#1
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Get(Ljoeq/Compiler/Quad/BytecodeToQuad;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,this$0)#3
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(Ljava/lang/Object;,0)#4
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Get([Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,stack)#5
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#ArrayLength()#6
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(Ljava/lang/Object;,0)#7
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Get([Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,locals)#8
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#ArrayLength()#9
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Invoke(SPECIAL,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,<init>,(Ljoeq/Compiler/Quad/BytecodeToQuad;II)V)#10
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalStore(Ljava/lang/Object;,1)#11
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(Ljava/lang/Object;,0)#12
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Get([Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,stack)#13
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Constant(I,0)#14
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(Ljava/lang/Object;,1)#15
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Get([Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,stack)#16
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Constant(I,0)#17
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(Ljava/lang/Object;,0)#18
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Get(I,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,stackptr)#19
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Invoke(STATIC,Ljava/lang/System;,arraycopy,(Ljava/lang/Object;ILjava/lang/Object;II)V)#20
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(Ljava/lang/Object;,0)#21
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Get([Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,locals)#22
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Constant(I,0)#23
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(Ljava/lang/Object;,1)#24
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Get([Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,locals)#25
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Constant(I,0)#26
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(Ljava/lang/Object;,0)#27
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Get([Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,locals)#28
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#ArrayLength()#29
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Invoke(STATIC,Ljava/lang/System;,arraycopy,(Ljava/lang/Object;ILjava/lang/Object;II)V)#30
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(Ljava/lang/Object;,1)#31
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(Ljava/lang/Object;,0)#32
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Get(I,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,stackptr)#33
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Put(I,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;,stackptr)#34
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#LocalLoad(Ljava/lang/Object;,1)#35
joeq.Compiler.Quad.BytecodeToQuad$AbstractState.copy()Ljoeq/Compiler/Quad/BytecodeToQuad$AbstractState;#Return(Ljava/lang/Object;)#36
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWith(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#ArrayStore(Ljava/lang/Object;)#29
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWith(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Goto(120)#30
joeq.Compiler.Quad.BytecodeToQuad.mergeStateWith(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Return(V)#120
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(I,2)#161
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Constant(I,1)#162
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#BinaryOp(I,add)#163
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalStore(I,2)#164
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Goto(152)#165
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#166
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Get(Z,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,TRACE)#167
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Constant(I,0)#168
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#ConditionalBranch(I,eq,181)#169
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Return(V)#181
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Goto(321)#337
joeq.Compiler.Quad.BytecodeToQuad.traverseBB(Ljoeq/Compiler/BytecodeAnalysis/BasicBlock;)V#Return(V)#29
joeq.Compiler.BytecodeAnalysis.ControlFlowGraph$RPOBasicBlockIterator.hasNext()Z#Constant(I,0)#10
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#338
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Ljava/util/LinkedList;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,regenerate)#339
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljava/util/LinkedList;,isEmpty,()Z)#340
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(I,0)#341
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#ConditionalBranch(I,ne,374)#342
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#374
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_cfg)#375
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,removeUnreachableBasicBlocks,()Z)#376
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#New(Ljava/util/HashSet;,0)#0
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#Dup(1,0)#1
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,entry,()Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;)#4
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#Invoke(SPECIAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,reversePostOrder,(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;)#5
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,(Ljava/util/Collection;)V)#6
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#LocalStore(Ljava/lang/Object;,1)#7
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#Constant(I,0)#8
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#LocalStore(I,2)#9
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#LocalLoad(Ljava/lang/Object;,0)#10
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,reversePostOrder,()Ljava/util/List;)#11
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#12
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#LocalStore(Ljava/lang/Object;,3)#13
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#LocalLoad(Ljava/lang/Object;,3)#14
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#15
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#Constant(I,0)#16
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#ConditionalBranch(I,eq,31)#17
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#LocalLoad(Ljava/lang/Object;,3)#18
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#19
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#CheckCast(Ljoeq/Compiler/Quad/BasicBlock;)#20
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#LocalStore(Ljava/lang/Object;,4)#21
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#LocalLoad(Ljava/lang/Object;,4)#22
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getPredecessors,()Ljava/util/List;)#23
joeq.Compiler.Quad.BasicBlock.getPredecessors()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BasicBlock.getPredecessors()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,predecessors)#1
joeq.Compiler.Quad.BasicBlock.getPredecessors()Ljava/util/List;#Constant(L;,null)#2
joeq.Compiler.Quad.BasicBlock.getPredecessors()Ljava/util/List;#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
joeq.Compiler.Quad.BasicBlock.getPredecessors()Ljava/util/List;#Invoke(STATIC,Ljava/util/Collections;,emptyList,()Ljava/util/List;)#4
joeq.Compiler.Quad.BasicBlock.getPredecessors()Ljava/util/List;#Return(Ljava/lang/Object;)#5
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#LocalLoad(Ljava/lang/Object;,1)#24
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#Invoke(INTERFACE,Ljava/util/List;,retainAll,(Ljava/util/Collection;)Z)#25
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#Constant(I,0)#26
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#ConditionalBranch(I,eq,30)#27
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#Goto(14)#30
joeq.Compiler.Quad.BasicBlock.getPredecessors()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#6
joeq.Compiler.Quad.BasicBlock.getPredecessors()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,predecessors)#7
joeq.Compiler.Quad.BasicBlock.getPredecessors()Ljava/util/List;#Return(Ljava/lang/Object;)#8
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#LocalLoad(Ljava/lang/Object;,0)#31
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#Get(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Quad/ControlFlowGraph;,exception_handlers)#32
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#33
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#LocalStore(Ljava/lang/Object;,3)#34
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#LocalLoad(Ljava/lang/Object;,3)#35
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#36
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#Constant(I,0)#37
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#ConditionalBranch(I,eq,59)#38
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#LocalLoad(Ljava/lang/Object;,0)#59
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#LocalLoad(Ljava/lang/Object;,0)#60
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,exit,()Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;)#61
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#Invoke(SPECIAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,reversePostOrderOnReverseGraph,(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;)#62
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrderOnReverseGraph(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#New(Ljava/util/ArrayList;,0)#0
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrderOnReverseGraph(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#Dup(1,0)#1
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrderOnReverseGraph(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#2
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrderOnReverseGraph(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,2)#3
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrderOnReverseGraph(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#4
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrderOnReverseGraph(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#Get(I,NONSTATIC,Ljoeq/Compiler/Quad/ControlFlowGraph;,bb_counter)#5
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrderOnReverseGraph(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#Constant(I,1)#6
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrderOnReverseGraph(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#BinaryOp(I,add)#7
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrderOnReverseGraph(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#New([Z,1)#8
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrderOnReverseGraph(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,3)#9
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrderOnReverseGraph(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#10
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrderOnReverseGraph(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#11
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrderOnReverseGraph(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#12
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrderOnReverseGraph(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#13
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrderOnReverseGraph(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#Constant(I,0)#14
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrderOnReverseGraph(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#Invoke(SPECIAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,reversePostOrder_helper,(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V)#15
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#LocalLoad(Ljava/lang/Object;,1)#18
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getPredecessors,()Ljava/util/List;)#19
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#LocalLoad(Ljava/lang/Object;,1)#67
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,isExceptionHandlerEntry,()Z)#68
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#Constant(I,0)#69
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrder_helper(Ljoeq/Compiler/Quad/BasicBlock;[ZLjava/util/List;Z)V#ConditionalBranch(I,eq,105)#70
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrderOnReverseGraph(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#16
joeq.Compiler.Quad.ControlFlowGraph.reversePostOrderOnReverseGraph(Ljoeq/Compiler/Quad/BasicBlock;)Ljava/util/List;#Return(Ljava/lang/Object;)#17
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#LocalStore(Ljava/lang/Object;,3)#63
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#LocalLoad(Ljava/lang/Object;,3)#64
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#LocalLoad(Ljava/lang/Object;,1)#65
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#Invoke(INTERFACE,Ljava/util/Collection;,containsAll,(Ljava/util/Collection;)Z)#66
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#Constant(I,0)#67
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#ConditionalBranch(I,eq,71)#68
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#LocalLoad(I,2)#69
joeq.Compiler.Quad.ControlFlowGraph.removeUnreachableBasicBlocks()Z#Return(I)#70
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(I,0)#377
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#ConditionalBranch(I,eq,395)#378
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#395
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad_cfg)#396
joeq.Compiler.Quad.BytecodeToQuad.convert()Ljoeq/Compiler/Quad/ControlFlowGraph;#Return(Ljava/lang/Object;)#397
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalStore(Ljava/lang/Object;,3)#32
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#33
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Ljava/util/Map;,NONSTATIC,Ljoeq/Compiler/Quad/CodeCache;,map)#34
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,1)#35
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,3)#36
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#37
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#Pop(1)#38
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Z,STATIC,Ljoeq/Compiler/Quad/CodeCache;,AlwaysMap)#39
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(I,0)#40
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#ConditionalBranch(I,eq,49)#41
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#42
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Ljava/util/Map;,NONSTATIC,Ljoeq/Compiler/Quad/CodeCache;,bcmap)#43
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,1)#44
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,2)#45
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BytecodeToQuad;,getQuadToBytecodeMap,()Ljava/util/Map;)#46
joeq.Compiler.Quad.BytecodeToQuad.getQuadToBytecodeMap()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad.getQuadToBytecodeMap()Ljava/util/Map;#Get(Ljava/util/HashMap;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad;,quad2bci)#1
joeq.Compiler.Quad.BytecodeToQuad.getQuadToBytecodeMap()Ljava/util/Map;#Return(Ljava/lang/Object;)#2
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#47
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#Pop(1)#48
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Ljava/util/List;,STATIC,Ljoeq/Compiler/Quad/CodeCache;,passes)#49
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#50
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalStore(Ljava/lang/Object;,4)#51
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,4)#52
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#53
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(I,0)#54
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#ConditionalBranch(I,eq,64)#55
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,3)#64
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#Return(Ljava/lang/Object;)#65
joeq.Compiler.Quad.CodeCache.getCode(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#Return(Ljava/lang/Object;)#3
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Put(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Class/jq_Method;,cfg)#143
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Z,STATIC,Ljoeq/Class/jq_Method;,doSSA)#144
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(I,0)#145
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#ConditionalBranch(I,eq,153)#146
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#New(Ljoeq/Compiler/Quad/SSA/EnterSSA;,0)#147
joeq.Compiler.Quad.SSA.EnterSSA.<clinit>()V#Constant(I,0)#0
joeq.Compiler.Quad.SSA.EnterSSA.<clinit>()V#Put(Z,STATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,DEBUG)#1
joeq.Compiler.Quad.SSA.EnterSSA.<clinit>()V#Constant(I,0)#2
joeq.Compiler.Quad.SSA.EnterSSA.<clinit>()V#Put(Z,STATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,PRINT_SSA)#3
joeq.Compiler.Quad.SSA.EnterSSA.<clinit>()V#Return(V)#4
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Dup(1,0)#148
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(SPECIAL,Ljoeq/Compiler/Quad/SSA/EnterSSA;,<init>,()V)#149
joeq.Compiler.Quad.SSA.EnterSSA.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.SSA.EnterSSA.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.Quad.SSA.EnterSSA.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.SSA.EnterSSA.<init>()V#New(Ljava/util/ArrayList;,0)#3
joeq.Compiler.Quad.SSA.EnterSSA.<init>()V#Dup(1,0)#4
joeq.Compiler.Quad.SSA.EnterSSA.<init>()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#5
joeq.Compiler.Quad.SSA.EnterSSA.<init>()V#Put(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,scalarPhis)#6
joeq.Compiler.Quad.SSA.EnterSSA.<init>()V#Return(V)#7
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#150
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Class/jq_Method;,cfg)#151
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/SSA/EnterSSA;,visitCFG,(Ljoeq/Compiler/Quad/ControlFlowGraph;)V)#152
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Put(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,ir)#2
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,1)#4
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,getNumberOfBasicBlocks,()I)#5
joeq.Compiler.Quad.ControlFlowGraph.getNumberOfBasicBlocks()I#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.ControlFlowGraph.getNumberOfBasicBlocks()I#Get(I,NONSTATIC,Ljoeq/Compiler/Quad/ControlFlowGraph;,bb_counter)#1
joeq.Compiler.Quad.ControlFlowGraph.getNumberOfBasicBlocks()I#Constant(I,1)#2
joeq.Compiler.Quad.ControlFlowGraph.getNumberOfBasicBlocks()I#BinaryOp(I,add)#3
joeq.Compiler.Quad.ControlFlowGraph.getNumberOfBasicBlocks()I#Return(I)#4
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#New([Ljoeq/Compiler/Quad/BasicBlock;,1)#6
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Put([Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,basic_blocks)#7
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,1)#8
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,reversePostOrder,()Ljava/util/List;)#9
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#10
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalStore(Ljava/lang/Object;,2)#11
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,2)#12
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#13
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#14
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,eq,27)#15
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,2)#16
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#17
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#CheckCast(Ljoeq/Compiler/Quad/BasicBlock;)#18
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalStore(Ljava/lang/Object;,3)#19
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#20
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get([Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,basic_blocks)#21
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,3)#22
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getID,()I)#23
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,3)#24
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ArrayStore(Ljava/lang/Object;)#25
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Goto(12)#26
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#27
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#New(Ljoeq/Compiler/Quad/Dominators;,0)#28
joeq.Compiler.Quad.Dominators.<clinit>()V#New(Ljoeq/Compiler/Quad/Dominators$1;,0)#0
joeq.Compiler.Quad.Dominators.<clinit>()V#Dup(1,0)#1
joeq.Compiler.Quad.Dominators.<clinit>()V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Dominators$1;,<init>,()V)#2
joeq.Compiler.Quad.Dominators$1.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Dominators$1.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.Quad.Dominators$1.<init>()V#Return(V)#2
joeq.Compiler.Quad.Dominators.<clinit>()V#Put(Ljwutil/graphs/Navigator;,STATIC,Ljoeq/Compiler/Quad/Dominators;,dom_nav)#3
joeq.Compiler.Quad.Dominators.<clinit>()V#Return(V)#4
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Dup(1,0)#29
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,1)#30
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Dominators;,<init>,(Z)V)#31
joeq.Compiler.Quad.Dominators.<init>(Z)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Dominators.<init>(Z)V#Invoke(SPECIAL,Ljoeq/Class/jq_MethodVisitor$EmptyVisitor;,<init>,()V)#1
joeq.Class.jq_MethodVisitor$EmptyVisitor.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_MethodVisitor$EmptyVisitor.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Class.jq_MethodVisitor$EmptyVisitor.<init>()V#Return(V)#2
joeq.Compiler.Quad.Dominators.<init>(Z)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.Dominators.<init>(Z)V#LocalLoad(I,1)#3
joeq.Compiler.Quad.Dominators.<init>(Z)V#Put(Z,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,direction)#4
joeq.Compiler.Quad.Dominators.<init>(Z)V#Return(V)#5
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Put(Ljoeq/Compiler/Quad/Dominators;,NONSTATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,dominators)#32
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#33
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get(Ljoeq/Compiler/Quad/Dominators;,NONSTATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,dominators)#34
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,1)#35
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,getMethod,()Ljoeq/Class/jq_Method;)#36
joeq.Compiler.Quad.ControlFlowGraph.getMethod()Ljoeq/Class/jq_Method;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.ControlFlowGraph.getMethod()Ljoeq/Class/jq_Method;#Get(Ljoeq/Class/jq_Method;,NONSTATIC,Ljoeq/Compiler/Quad/ControlFlowGraph;,method)#1
joeq.Compiler.Quad.ControlFlowGraph.getMethod()Ljoeq/Class/jq_Method;#Return(Ljava/lang/Object;)#2
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Dominators;,visitMethod,(Ljoeq/Class/jq_Method;)V)#37
joeq.Compiler.Quad.Dominators.visitMethod(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#0
joeq.Compiler.Quad.Dominators.visitMethod(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getBytecode,()[B)#1
joeq.Compiler.Quad.Dominators.visitMethod(Ljoeq/Class/jq_Method;)V#Constant(L;,null)#2
joeq.Compiler.Quad.Dominators.visitMethod(Ljoeq/Class/jq_Method;)V#ConditionalBranch(Ljava/lang/Object;,ne,5)#3
joeq.Compiler.Quad.Dominators.visitMethod(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Compiler.Quad.Dominators.visitMethod(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#6
joeq.Compiler.Quad.Dominators.visitMethod(Ljoeq/Class/jq_Method;)V#Invoke(STATIC,Ljoeq/Compiler/Quad/CodeCache;,getCode,(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;)#7
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#6
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Ljava/util/Map;,NONSTATIC,Ljoeq/Compiler/Quad/CodeCache;,map)#7
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,1)#8
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#9
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#CheckCast(Ljoeq/Compiler/Quad/ControlFlowGraph;)#10
joeq.Compiler.Quad.CodeCache._get(Ljoeq/Class/jq_Method;)Ljoeq/Compiler/Quad/ControlFlowGraph;#Return(Ljava/lang/Object;)#11
joeq.Compiler.Quad.Dominators.visitMethod(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Dominators;,visitCFG,(Ljoeq/Compiler/Quad/ControlFlowGraph;)V)#8
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Put(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,cfg)#2
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#4
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,cfg)#5
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,getNumberOfBasicBlocks,()I)#6
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#New([Ljoeq/Compiler/Quad/BasicBlock;,1)#7
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Put([Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,bbs)#8
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#9
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#10
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,cfg)#11
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,getNumberOfBasicBlocks,()I)#12
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#New([Ljwutil/math/BitString;,1)#13
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Put([Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,dominators)#14
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#15
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#New(Ljwutil/math/BitString;,0)#16
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Dup(1,0)#17
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#18
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get([Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,dominators)#19
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ArrayLength()#20
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(SPECIAL,Ljwutil/math/BitString;,<init>,(I)V)#21
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Put(Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,temp)#22
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#23
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get(Z,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,direction)#24
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#25
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,eq,29)#26
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,1)#27
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Goto(30)#28
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalStore(I,2)#30
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#31
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get([Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,dominators)#32
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(I,2)#33
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#New(Ljwutil/math/BitString;,0)#34
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Dup(1,0)#35
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#36
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get([Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,dominators)#37
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ArrayLength()#38
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(SPECIAL,Ljwutil/math/BitString;,<init>,(I)V)#39
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ArrayStore(Ljava/lang/Object;)#40
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#41
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get([Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,dominators)#42
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(I,2)#43
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ArrayLoad(Ljava/lang/Object;)#44
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(VIRTUAL,Ljwutil/math/BitString;,setAll,()V)#45
jwutil.math.BitString.setAll()V#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.math.BitString.setAll()V#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#1
jwutil.math.BitString.setAll()V#ArrayLength()#2
jwutil.math.BitString.setAll()V#LocalStore(I,1)#3
jwutil.math.BitString.setAll()V#LocalLoad(I,1)#4
jwutil.math.BitString.setAll()V#Dup(1,0)#5
jwutil.math.BitString.setAll()V#Constant(I,1)#6
jwutil.math.BitString.setAll()V#BinaryOp(I,sub)#7
jwutil.math.BitString.setAll()V#LocalStore(I,1)#8
jwutil.math.BitString.setAll()V#Constant(I,0)#9
jwutil.math.BitString.setAll()V#ConditionalBranch(I,le,17)#10
jwutil.math.BitString.setAll()V#LocalLoad(Ljava/lang/Object;,0)#11
jwutil.math.BitString.setAll()V#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#12
jwutil.math.BitString.setAll()V#LocalLoad(I,1)#13
jwutil.math.BitString.setAll()V#Constant(I,-1)#14
jwutil.math.BitString.setAll()V#ArrayStore(I)#15
jwutil.math.BitString.setAll()V#Goto(4)#16
jwutil.math.BitString.setAll()V#Return(V)#17
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#46
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get([Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,dominators)#47
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,1)#48
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(I,2)#49
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#BinaryOp(I,sub)#50
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#New(Ljwutil/math/BitString;,0)#51
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Dup(1,0)#52
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#53
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get([Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,dominators)#54
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ArrayLength()#55
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(SPECIAL,Ljwutil/math/BitString;,<init>,(I)V)#56
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ArrayStore(Ljava/lang/Object;)#57
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#58
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get([Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,dominators)#59
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,1)#60
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(I,2)#61
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#BinaryOp(I,sub)#62
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ArrayLoad(Ljava/lang/Object;)#63
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,1)#64
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(I,2)#65
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#BinaryOp(I,sub)#66
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(VIRTUAL,Ljwutil/math/BitString;,set,(I)V)#67
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,2)#68
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalStore(I,3)#69
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(I,3)#70
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#71
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get([Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,dominators)#72
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ArrayLength()#73
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,ge,95)#74
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#75
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get([Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,dominators)#76
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(I,3)#77
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#New(Ljwutil/math/BitString;,0)#78
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Dup(1,0)#79
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#80
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get([Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,dominators)#81
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ArrayLength()#82
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(SPECIAL,Ljwutil/math/BitString;,<init>,(I)V)#83
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ArrayStore(Ljava/lang/Object;)#84
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#85
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get([Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,dominators)#86
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(I,3)#87
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ArrayLoad(Ljava/lang/Object;)#88
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(VIRTUAL,Ljwutil/math/BitString;,setAll,()V)#89
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(I,3)#90
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,1)#91
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#BinaryOp(I,add)#92
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalStore(I,3)#93
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Goto(70)#94
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#95
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get(Z,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,direction)#96
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#97
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,eq,104)#98
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#99
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,cfg)#100
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,reversePostOrder,()Ljava/util/List;)#101
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalStore(Ljava/lang/Object;,3)#102
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Goto(108)#103
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#108
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#109
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Put(Z,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,change)#110
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,3)#111
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#112
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalStore(Ljava/lang/Object;,4)#113
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,4)#114
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#115
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#CheckCast(Ljoeq/Compiler/Quad/BasicBlock;)#116
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalStore(Ljava/lang/Object;,5)#117
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#118
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get([Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,bbs)#119
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,5)#120
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getID,()I)#121
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,5)#122
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ArrayStore(Ljava/lang/Object;)#123
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,4)#124
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#125
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#126
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,eq,136)#127
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,4)#128
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#129
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#CheckCast(Ljoeq/Compiler/Quad/BasicBlock;)#130
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalStore(Ljava/lang/Object;,6)#131
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#132
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,6)#133
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Dominators;,visitBasicBlock,(Ljoeq/Compiler/Quad/BasicBlock;)V)#134
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Get([Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,bbs)#1
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#2
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getID,()I)#3
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#4
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#ArrayStore(Ljava/lang/Object;)#5
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#6
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Get(Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,temp)#7
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Invoke(VIRTUAL,Ljwutil/math/BitString;,setAll,()V)#8
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#9
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Get(Z,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,direction)#10
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Constant(I,0)#11
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#ConditionalBranch(I,eq,17)#12
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#13
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getPredecessors,()Ljava/util/List;)#14
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#15
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Goto(20)#16
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#LocalStore(Ljava/lang/Object;,2)#20
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,2)#21
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#22
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Constant(I,0)#23
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#ConditionalBranch(I,eq,39)#24
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,2)#25
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#26
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#CheckCast(Ljoeq/Compiler/Quad/BasicBlock;)#27
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#LocalStore(Ljava/lang/Object;,3)#28
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#29
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Get(Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,temp)#30
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#31
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Get([Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,dominators)#32
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,3)#33
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getID,()I)#34
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#ArrayLoad(Ljava/lang/Object;)#35
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Invoke(VIRTUAL,Ljwutil/math/BitString;,and,(Ljwutil/math/BitString;)Z)#36
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#LocalLoad(Ljava/lang/Object;,1)#1
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#ConditionalBranch(Ljava/lang/Object;,ne,5)#2
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#LocalLoad(Ljava/lang/Object;,0)#5
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#6
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#ArrayLength()#7
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#LocalStore(I,2)#8
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#Constant(I,0)#9
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#LocalStore(I,3)#10
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#LocalLoad(I,2)#11
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#LocalStore(I,4)#12
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#LocalLoad(I,4)#13
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#Dup(1,0)#14
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#Constant(I,1)#15
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#BinaryOp(I,sub)#16
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#LocalStore(I,4)#17
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#Constant(I,0)#18
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#ConditionalBranch(I,le,49)#19
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#LocalLoad(Ljava/lang/Object;,0)#20
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#21
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#LocalLoad(I,4)#22
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#ArrayLoad(I)#23
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#LocalStore(I,5)#24
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#LocalLoad(Ljava/lang/Object;,0)#25
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#26
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#LocalLoad(I,4)#27
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#Dup(2,0)#28
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#ArrayLoad(I)#29
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#LocalLoad(Ljava/lang/Object;,1)#30
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#31
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#LocalLoad(I,4)#32
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#ArrayLoad(I)#33
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#BinaryOp(I,and)#34
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#ArrayStore(I)#35
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#LocalLoad(I,3)#36
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#LocalLoad(I,5)#37
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#LocalLoad(Ljava/lang/Object;,0)#38
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#39
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#LocalLoad(I,4)#40
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#ArrayLoad(I)#41
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#ConditionalBranch(I,eq,45)#42
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#Constant(I,1)#43
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#Goto(46)#44
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#BinaryOp(I,or)#46
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#LocalStore(I,3)#47
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#Goto(13)#48
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#LocalLoad(I,3)#49
jwutil.math.BitString.and(Ljwutil/math/BitString;)Z#Return(I)#50
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Pop(1)#37
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Goto(21)#38
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#39
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Get(Z,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,direction)#40
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Constant(I,0)#41
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#ConditionalBranch(I,eq,84)#42
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#43
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,isExceptionHandlerEntry,()Z)#44
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Constant(I,0)#45
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#ConditionalBranch(I,eq,109)#46
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#109
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Get(Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,temp)#110
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#111
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getID,()I)#112
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Invoke(VIRTUAL,Ljwutil/math/BitString;,set,(I)V)#113
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#114
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Get(Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,temp)#115
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#116
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Get([Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,dominators)#117
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#118
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getID,()I)#119
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#ArrayLoad(Ljava/lang/Object;)#120
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Invoke(VIRTUAL,Ljwutil/math/BitString;,equals,(Ljava/lang/Object;)Z)#121
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#0
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#Constant(L;,null)#1
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,5)#2
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#5
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#6
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,10)#7
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#10
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#CheckCast(Ljwutil/math/BitString;)#11
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#LocalStore(Ljava/lang/Object;,2)#12
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#Goto(17)#13
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#17
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljwutil/math/BitString;,length,()I)#18
jwutil.math.BitString.length()I#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.math.BitString.length()I#Invoke(VIRTUAL,Ljwutil/math/BitString;,lastSet,()I)#1
jwutil.math.BitString.lastSet()I#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.math.BitString.lastSet()I#LocalLoad(Ljava/lang/Object;,0)#1
jwutil.math.BitString.lastSet()I#Invoke(VIRTUAL,Ljwutil/math/BitString;,size,()I)#2
jwutil.math.BitString.size()I#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.math.BitString.size()I#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#1
jwutil.math.BitString.size()I#ArrayLength()#2
jwutil.math.BitString.size()I#Constant(I,5)#3
jwutil.math.BitString.size()I#Shift(I,SHL)#4
jwutil.math.BitString.size()I#Return(I)#5
jwutil.math.BitString.lastSet()I#Invoke(VIRTUAL,Ljwutil/math/BitString;,lastSet,(I)I)#3
jwutil.math.BitString.lastSet(I)I#LocalLoad(I,1)#0
jwutil.math.BitString.lastSet(I)I#Constant(I,-1)#1
jwutil.math.BitString.lastSet(I)I#BinaryOp(I,add)#2
jwutil.math.BitString.lastSet(I)I#LocalStore(I,1)#3
jwutil.math.BitString.lastSet(I)I#LocalLoad(I,1)#4
jwutil.math.BitString.lastSet(I)I#Constant(I,0)#5
jwutil.math.BitString.lastSet(I)I#ConditionalBranch(I,ge,9)#6
jwutil.math.BitString.lastSet(I)I#LocalLoad(Ljava/lang/Object;,0)#9
jwutil.math.BitString.lastSet(I)I#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#10
jwutil.math.BitString.lastSet(I)I#ArrayLength()#11
jwutil.math.BitString.lastSet(I)I#Constant(I,1)#12
jwutil.math.BitString.lastSet(I)I#BinaryOp(I,sub)#13
jwutil.math.BitString.lastSet(I)I#LocalStore(I,2)#14
jwutil.math.BitString.lastSet(I)I#Constant(I,-1)#15
jwutil.math.BitString.lastSet(I)I#LocalStore(I,3)#16
jwutil.math.BitString.lastSet(I)I#LocalLoad(I,1)#17
jwutil.math.BitString.lastSet(I)I#Invoke(STATIC,Ljwutil/math/BitString;,subscript,(I)I)#18
jwutil.math.BitString.lastSet(I)I#LocalLoad(Ljava/lang/Object;,0)#19
jwutil.math.BitString.lastSet(I)I#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#20
jwutil.math.BitString.lastSet(I)I#ArrayLength()#21
jwutil.math.BitString.lastSet(I)I#ConditionalBranch(I,ge,34)#22
jwutil.math.BitString.lastSet(I)I#LocalLoad(I,1)#23
jwutil.math.BitString.lastSet(I)I#Invoke(STATIC,Ljwutil/math/BitString;,subscript,(I)I)#24
jwutil.math.BitString.lastSet(I)I#LocalStore(I,2)#25
jwutil.math.BitString.lastSet(I)I#Constant(I,-1)#26
jwutil.math.BitString.lastSet(I)I#Constant(I,31)#27
jwutil.math.BitString.lastSet(I)I#LocalLoad(I,1)#28
jwutil.math.BitString.lastSet(I)I#LocalLoad(I,3)#29
jwutil.math.BitString.lastSet(I)I#BinaryOp(I,and)#30
jwutil.math.BitString.lastSet(I)I#BinaryOp(I,sub)#31
jwutil.math.BitString.lastSet(I)I#Shift(I,USHR)#32
jwutil.math.BitString.lastSet(I)I#LocalStore(I,3)#33
jwutil.math.BitString.lastSet(I)I#LocalLoad(I,2)#34
jwutil.math.BitString.lastSet(I)I#LocalStore(I,4)#35
jwutil.math.BitString.lastSet(I)I#LocalLoad(I,4)#36
jwutil.math.BitString.lastSet(I)I#Constant(I,0)#37
jwutil.math.BitString.lastSet(I)I#ConditionalBranch(I,lt,65)#38
jwutil.math.BitString.lastSet(I)I#LocalLoad(Ljava/lang/Object;,0)#39
jwutil.math.BitString.lastSet(I)I#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#40
jwutil.math.BitString.lastSet(I)I#LocalLoad(I,4)#41
jwutil.math.BitString.lastSet(I)I#ArrayLoad(I)#42
jwutil.math.BitString.lastSet(I)I#LocalLoad(I,3)#43
jwutil.math.BitString.lastSet(I)I#BinaryOp(I,and)#44
jwutil.math.BitString.lastSet(I)I#LocalStore(I,5)#45
jwutil.math.BitString.lastSet(I)I#LocalLoad(I,5)#46
jwutil.math.BitString.lastSet(I)I#Constant(I,0)#47
jwutil.math.BitString.lastSet(I)I#ConditionalBranch(I,eq,58)#48
jwutil.math.BitString.lastSet(I)I#LocalLoad(I,4)#49
jwutil.math.BitString.lastSet(I)I#Constant(I,5)#50
jwutil.math.BitString.lastSet(I)I#Shift(I,SHL)#51
jwutil.math.BitString.lastSet(I)I#LocalLoad(I,5)#52
jwutil.math.BitString.lastSet(I)I#Invoke(STATIC,Ljwutil/math/BitString;,bsr,(I)I)#53
jwutil.math.BitString.bsr(I)I#LocalLoad(I,0)#0
jwutil.math.BitString.bsr(I)I#Constant(I,-65536)#1
jwutil.math.BitString.bsr(I)I#BinaryOp(I,and)#2
jwutil.math.BitString.bsr(I)I#Constant(I,0)#3
jwutil.math.BitString.bsr(I)I#ConditionalBranch(I,eq,28)#4
jwutil.math.BitString.bsr(I)I#LocalLoad(I,0)#28
jwutil.math.BitString.bsr(I)I#Constant(I,65280)#29
jwutil.math.BitString.bsr(I)I#BinaryOp(I,and)#30
jwutil.math.BitString.bsr(I)I#Constant(I,0)#31
jwutil.math.BitString.bsr(I)I#ConditionalBranch(I,eq,41)#32
jwutil.math.BitString.bsr(I)I#Get([B,STATIC,Ljwutil/math/BitString;,bytemsb)#41
jwutil.math.BitString.bsr(I)I#LocalLoad(I,0)#42
jwutil.math.BitString.bsr(I)I#ArrayLoad(B)#43
jwutil.math.BitString.bsr(I)I#Return(I)#44
jwutil.math.BitString.lastSet(I)I#Constant(I,1)#54
jwutil.math.BitString.lastSet(I)I#BinaryOp(I,sub)#55
jwutil.math.BitString.lastSet(I)I#BinaryOp(I,add)#56
jwutil.math.BitString.lastSet(I)I#Return(I)#57
jwutil.math.BitString.lastSet()I#Return(I)#4
jwutil.math.BitString.length()I#Constant(I,1)#2
jwutil.math.BitString.length()I#BinaryOp(I,add)#3
jwutil.math.BitString.length()I#Return(I)#4
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,2)#19
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljwutil/math/BitString;,length,()I)#20
jwutil.math.BitString.bsr(I)I#LocalLoad(I,0)#5
jwutil.math.BitString.bsr(I)I#Constant(I,-16777216)#6
jwutil.math.BitString.bsr(I)I#BinaryOp(I,and)#7
jwutil.math.BitString.bsr(I)I#Constant(I,0)#8
jwutil.math.BitString.bsr(I)I#ConditionalBranch(I,eq,20)#9
jwutil.math.BitString.bsr(I)I#Constant(I,24)#10
jwutil.math.BitString.bsr(I)I#Get([B,STATIC,Ljwutil/math/BitString;,bytemsb)#11
jwutil.math.BitString.bsr(I)I#LocalLoad(I,0)#12
jwutil.math.BitString.bsr(I)I#Constant(I,24)#13
jwutil.math.BitString.bsr(I)I#Shift(I,SHR)#14
jwutil.math.BitString.bsr(I)I#Constant(I,255)#15
jwutil.math.BitString.bsr(I)I#BinaryOp(I,and)#16
jwutil.math.BitString.bsr(I)I#ArrayLoad(B)#17
jwutil.math.BitString.bsr(I)I#BinaryOp(I,add)#18
jwutil.math.BitString.bsr(I)I#Return(I)#19
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#ConditionalBranch(I,eq,24)#21
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#Constant(I,0)#22
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#Return(I)#23
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Constant(I,0)#122
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#ConditionalBranch(I,ne,135)#123
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#124
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Get([Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,dominators)#125
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,1)#126
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getID,()I)#127
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#ArrayLoad(Ljava/lang/Object;)#128
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#129
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Get(Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,temp)#130
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Invoke(VIRTUAL,Ljwutil/math/BitString;,copyBits,(Ljwutil/math/BitString;)V)#131
jwutil.math.BitString.copyBits(Ljwutil/math/BitString;)V#LocalLoad(Ljava/lang/Object;,1)#0
jwutil.math.BitString.copyBits(Ljwutil/math/BitString;)V#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#1
jwutil.math.BitString.copyBits(Ljwutil/math/BitString;)V#Constant(I,0)#2
jwutil.math.BitString.copyBits(Ljwutil/math/BitString;)V#LocalLoad(Ljava/lang/Object;,0)#3
jwutil.math.BitString.copyBits(Ljwutil/math/BitString;)V#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#4
jwutil.math.BitString.copyBits(Ljwutil/math/BitString;)V#Constant(I,0)#5
jwutil.math.BitString.copyBits(Ljwutil/math/BitString;)V#LocalLoad(Ljava/lang/Object;,0)#6
jwutil.math.BitString.copyBits(Ljwutil/math/BitString;)V#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#7
jwutil.math.BitString.copyBits(Ljwutil/math/BitString;)V#ArrayLength()#8
jwutil.math.BitString.copyBits(Ljwutil/math/BitString;)V#Invoke(STATIC,Ljava/lang/System;,arraycopy,(Ljava/lang/Object;ILjava/lang/Object;II)V)#9
jwutil.math.BitString.copyBits(Ljwutil/math/BitString;)V#Return(V)#10
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#LocalLoad(Ljava/lang/Object;,0)#132
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Constant(I,1)#133
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Put(Z,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,change)#134
joeq.Compiler.Quad.Dominators.visitBasicBlock(Ljoeq/Compiler/Quad/BasicBlock;)V#Return(V)#135
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Goto(124)#135
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#136
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get(Z,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,change)#137
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#138
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,ne,141)#139
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Goto(108)#141
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#24
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#25
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#ArrayLength()#26
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#Constant(I,1)#27
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#BinaryOp(I,sub)#28
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#LocalStore(I,3)#29
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#LocalLoad(I,3)#30
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#Constant(I,0)#31
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#ConditionalBranch(I,lt,44)#32
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#33
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#34
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#LocalLoad(I,3)#35
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#ArrayLoad(I)#36
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#Constant(I,0)#37
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#ConditionalBranch(I,ne,44)#38
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#LocalLoad(I,3)#44
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#LocalStore(I,4)#45
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#LocalLoad(I,4)#46
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#Constant(I,0)#47
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#ConditionalBranch(I,lt,65)#48
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#49
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#50
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#LocalLoad(I,4)#51
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#ArrayLoad(I)#52
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,2)#53
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#54
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#LocalLoad(I,4)#55
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#ArrayLoad(I)#56
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#ConditionalBranch(I,eq,60)#57
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#LocalLoad(I,4)#60
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#Constant(I,-1)#61
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#BinaryOp(I,add)#62
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#LocalStore(I,4)#63
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#Goto(46)#64
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#Constant(I,1)#65
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#Return(I)#66
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Goto(142)#140
joeq.Compiler.Quad.Dominators.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Return(V)#142
joeq.Compiler.Quad.Dominators.visitMethod(Ljoeq/Class/jq_Method;)V#Return(V)#9
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#38
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get(Ljoeq/Compiler/Quad/Dominators;,NONSTATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,dominators)#39
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Dominators;,computeTree,()Ljoeq/Compiler/Quad/Dominators$DominatorNode;)#40
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(Ljava/lang/Object;,0)#1
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Get([Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,dominators)#2
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#ArrayLength()#3
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#New([Ljoeq/Compiler/Quad/Dominators$DominatorNode;,1)#4
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Put([Ljoeq/Compiler/Quad/Dominators$DominatorNode;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,dominatorNodes)#5
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#New(Ljava/util/ArrayList;,0)#6
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Dup(1,0)#7
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#8
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalStore(Ljava/lang/Object;,1)#9
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(Ljava/lang/Object;,1)#10
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#New(Ljava/util/ArrayList;,0)#11
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Dup(1,0)#12
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#13
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#14
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Pop(1)#15
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Constant(I,1)#16
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalStore(I,2)#17
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#New(Ljava/util/ArrayList;,0)#18
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Dup(1,0)#19
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#20
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalStore(Ljava/lang/Object;,3)#21
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Constant(I,0)#22
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalStore(I,4)#23
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Constant(I,0)#24
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalStore(I,5)#25
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(I,5)#26
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(Ljava/lang/Object;,0)#27
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Get([Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,dominators)#28
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#ArrayLength()#29
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#ConditionalBranch(I,ge,113)#30
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(Ljava/lang/Object;,0)#31
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Get([Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,dominators)#32
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(I,5)#33
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#ArrayLoad(Ljava/lang/Object;)#34
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Invoke(VIRTUAL,Ljwutil/math/BitString;,numberOfOnes,()I)#35
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(I,2)#36
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#ConditionalBranch(I,ne,108)#37
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Constant(I,1)#38
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalStore(I,4)#39
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(Ljava/lang/Object;,0)#40
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Get(Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,temp)#41
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(Ljava/lang/Object;,0)#42
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Get([Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,dominators)#43
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(I,5)#44
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#ArrayLoad(Ljava/lang/Object;)#45
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Invoke(VIRTUAL,Ljwutil/math/BitString;,copyBits,(Ljwutil/math/BitString;)V)#46
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(Ljava/lang/Object;,0)#47
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Get(Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,temp)#48
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(I,5)#49
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Invoke(VIRTUAL,Ljwutil/math/BitString;,clear,(I)V)#50
jwutil.math.BitString.clear(I)V#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.math.BitString.clear(I)V#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#1
jwutil.math.BitString.clear(I)V#LocalLoad(I,1)#2
jwutil.math.BitString.clear(I)V#Invoke(STATIC,Ljwutil/math/BitString;,subscript,(I)I)#3
jwutil.math.BitString.clear(I)V#Dup(2,0)#4
jwutil.math.BitString.clear(I)V#ArrayLoad(I)#5
jwutil.math.BitString.clear(I)V#Constant(I,1)#6
jwutil.math.BitString.clear(I)V#LocalLoad(I,1)#7
jwutil.math.BitString.clear(I)V#Constant(I,31)#8
jwutil.math.BitString.clear(I)V#BinaryOp(I,and)#9
jwutil.math.BitString.clear(I)V#Shift(I,SHL)#10
jwutil.math.BitString.clear(I)V#Constant(I,-1)#11
jwutil.math.BitString.clear(I)V#BinaryOp(I,xor)#12
jwutil.math.BitString.clear(I)V#BinaryOp(I,and)#13
jwutil.math.BitString.clear(I)V#ArrayStore(I)#14
jwutil.math.BitString.clear(I)V#Return(V)#15
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Constant(L;,null)#51
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalStore(Ljava/lang/Object;,6)#52
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(Ljava/lang/Object;,1)#53
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(I,2)#54
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Constant(I,1)#55
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#BinaryOp(I,sub)#56
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Invoke(VIRTUAL,Ljava/util/ArrayList;,get,(I)Ljava/lang/Object;)#57
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#CheckCast(Ljava/util/ArrayList;)#58
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Invoke(VIRTUAL,Ljava/util/ArrayList;,iterator,()Ljava/util/Iterator;)#59
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalStore(Ljava/lang/Object;,7)#60
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(Ljava/lang/Object;,7)#61
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#62
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Constant(I,0)#63
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#ConditionalBranch(I,eq,84)#64
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#New(Ljoeq/Compiler/Quad/Dominators$DominatorNode;,0)#84
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Dup(1,0)#85
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(Ljava/lang/Object;,0)#86
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Get([Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,bbs)#87
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(I,5)#88
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#ArrayLoad(Ljava/lang/Object;)#89
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(Ljava/lang/Object;,6)#90
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Invoke(SPECIAL,Ljoeq/Compiler/Quad/Dominators$DominatorNode;,<init>,(Ljoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V)#91
joeq.Compiler.Quad.Dominators$DominatorNode.<init>(Ljoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Dominators$DominatorNode.<init>(Ljoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.Quad.Dominators$DominatorNode.<init>(Ljoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.Dominators$DominatorNode.<init>(Ljoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Compiler.Quad.Dominators$DominatorNode.<init>(Ljoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Put(Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators$DominatorNode;,bb)#4
joeq.Compiler.Quad.Dominators$DominatorNode.<init>(Ljoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Compiler.Quad.Dominators$DominatorNode.<init>(Ljoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalLoad(Ljava/lang/Object;,2)#6
joeq.Compiler.Quad.Dominators$DominatorNode.<init>(Ljoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Put(Ljoeq/Compiler/Quad/Dominators$DominatorNode;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators$DominatorNode;,parent)#7
joeq.Compiler.Quad.Dominators$DominatorNode.<init>(Ljoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalLoad(Ljava/lang/Object;,0)#8
joeq.Compiler.Quad.Dominators$DominatorNode.<init>(Ljoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#New(Ljava/util/ArrayList;,0)#9
joeq.Compiler.Quad.Dominators$DominatorNode.<init>(Ljoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Dup(1,0)#10
joeq.Compiler.Quad.Dominators$DominatorNode.<init>(Ljoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#11
joeq.Compiler.Quad.Dominators$DominatorNode.<init>(Ljoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Put(Ljava/util/ArrayList;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators$DominatorNode;,children)#12
joeq.Compiler.Quad.Dominators$DominatorNode.<init>(Ljoeq/Compiler/Quad/BasicBlock;Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Return(V)#13
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalStore(Ljava/lang/Object;,8)#92
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(Ljava/lang/Object;,6)#93
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Constant(L;,null)#94
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#ConditionalBranch(Ljava/lang/Object;,eq,99)#95
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(Ljava/lang/Object;,0)#99
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Get([Ljoeq/Compiler/Quad/Dominators$DominatorNode;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,dominatorNodes)#100
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(I,5)#101
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(Ljava/lang/Object;,8)#102
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#ArrayStore(Ljava/lang/Object;)#103
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(Ljava/lang/Object;,3)#104
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(Ljava/lang/Object;,8)#105
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#106
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Pop(1)#107
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(I,5)#108
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Constant(I,1)#109
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#BinaryOp(I,add)#110
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalStore(I,5)#111
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Goto(26)#112
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(Ljava/lang/Object;,1)#113
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(Ljava/lang/Object;,3)#114
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#115
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Pop(1)#116
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(I,4)#117
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Constant(I,0)#118
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#ConditionalBranch(I,ne,121)#119
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(I,2)#121
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Constant(I,1)#122
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#BinaryOp(I,add)#123
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalStore(I,2)#124
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Goto(18)#125
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(Ljava/lang/Object;,7)#65
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#66
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#CheckCast(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)#67
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalStore(Ljava/lang/Object;,8)#68
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(Ljava/lang/Object;,0)#69
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Get(Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,temp)#70
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(Ljava/lang/Object;,0)#71
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Get([Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,dominators)#72
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(Ljava/lang/Object;,8)#73
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Dominators$DominatorNode;,getBasicBlock,()Ljoeq/Compiler/Quad/BasicBlock;)#74
joeq.Compiler.Quad.Dominators$DominatorNode.getBasicBlock()Ljoeq/Compiler/Quad/BasicBlock;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Dominators$DominatorNode.getBasicBlock()Ljoeq/Compiler/Quad/BasicBlock;#Get(Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators$DominatorNode;,bb)#1
joeq.Compiler.Quad.Dominators$DominatorNode.getBasicBlock()Ljoeq/Compiler/Quad/BasicBlock;#Return(Ljava/lang/Object;)#2
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getID,()I)#75
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#ArrayLoad(Ljava/lang/Object;)#76
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Invoke(VIRTUAL,Ljwutil/math/BitString;,equals,(Ljava/lang/Object;)Z)#77
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Constant(I,0)#78
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#ConditionalBranch(I,eq,83)#79
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(Ljava/lang/Object;,8)#80
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalStore(Ljava/lang/Object;,6)#81
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Goto(84)#82
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(Ljava/lang/Object;,6)#96
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(Ljava/lang/Object;,8)#97
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Dominators$DominatorNode;,addChild,(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V)#98
joeq.Compiler.Quad.Dominators$DominatorNode.addChild(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Dominators$DominatorNode.addChild(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Get(Ljava/util/ArrayList;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators$DominatorNode;,children)#1
joeq.Compiler.Quad.Dominators$DominatorNode.addChild(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalLoad(Ljava/lang/Object;,1)#2
joeq.Compiler.Quad.Dominators$DominatorNode.addChild(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Invoke(VIRTUAL,Ljava/util/ArrayList;,add,(Ljava/lang/Object;)Z)#3
joeq.Compiler.Quad.Dominators$DominatorNode.addChild(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Pop(1)#4
joeq.Compiler.Quad.Dominators$DominatorNode.addChild(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Return(V)#5
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Goto(126)#120
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(Ljava/lang/Object;,1)#126
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Constant(I,1)#127
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Invoke(VIRTUAL,Ljava/util/ArrayList;,get,(I)Ljava/lang/Object;)#128
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#CheckCast(Ljava/util/ArrayList;)#129
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Constant(I,0)#130
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Invoke(VIRTUAL,Ljava/util/ArrayList;,get,(I)Ljava/lang/Object;)#131
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#CheckCast(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)#132
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalStore(Ljava/lang/Object;,2)#133
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(Ljava/lang/Object;,2)#134
joeq.Compiler.Quad.Dominators.computeTree()Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Return(Ljava/lang/Object;)#135
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalStore(Ljava/lang/Object;,2)#41
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#42
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get(Ljoeq/Compiler/Quad/Dominators;,NONSTATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,dominators)#43
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,2)#44
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Dominators;,calculateDominanceFrontier,(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V)#45
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Get(Ljwutil/graphs/Navigator;,STATIC,Ljoeq/Compiler/Quad/Dominators;,dom_nav)#0
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Invoke(STATIC,Ljwutil/graphs/Traversals;,postOrder,(Ljwutil/graphs/Navigator;Ljava/lang/Object;)Ljava/util/List;)#2
jwutil.graphs.Traversals.postOrder(Ljwutil/graphs/Navigator;Ljava/lang/Object;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.graphs.Traversals.postOrder(Ljwutil/graphs/Navigator;Ljava/lang/Object;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#1
jwutil.graphs.Traversals.postOrder(Ljwutil/graphs/Navigator;Ljava/lang/Object;)Ljava/util/List;#Invoke(STATIC,Ljava/util/Collections;,singleton,(Ljava/lang/Object;)Ljava/util/Set;)#2
jwutil.graphs.Traversals.postOrder(Ljwutil/graphs/Navigator;Ljava/lang/Object;)Ljava/util/List;#Constant(I,5)#3
jwutil.graphs.Traversals.postOrder(Ljwutil/graphs/Navigator;Ljava/lang/Object;)Ljava/util/List;#Invoke(STATIC,Ljwutil/graphs/Traversals;,traversal_helper,(Ljwutil/graphs/Navigator;Ljava/util/Collection;B)Ljava/util/List;)#4
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/util/Collection;B)Ljava/util/List;#New(Ljava/util/HashSet;,0)#0
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/util/Collection;B)Ljava/util/List;#Dup(1,0)#1
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/util/Collection;B)Ljava/util/List;#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#2
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/util/Collection;B)Ljava/util/List;#LocalStore(Ljava/lang/Object;,3)#3
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/util/Collection;B)Ljava/util/List;#New(Ljava/util/LinkedList;,0)#4
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/util/Collection;B)Ljava/util/List;#Dup(1,0)#5
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/util/Collection;B)Ljava/util/List;#Invoke(SPECIAL,Ljava/util/LinkedList;,<init>,()V)#6
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/util/Collection;B)Ljava/util/List;#LocalStore(Ljava/lang/Object;,4)#7
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/util/Collection;B)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#8
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/util/Collection;B)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Collection;,iterator,()Ljava/util/Iterator;)#9
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/util/Collection;B)Ljava/util/List;#LocalStore(Ljava/lang/Object;,5)#10
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/util/Collection;B)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,5)#11
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/util/Collection;B)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#12
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/util/Collection;B)Ljava/util/List;#Constant(I,0)#13
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/util/Collection;B)Ljava/util/List;#ConditionalBranch(I,eq,25)#14
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/util/Collection;B)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,5)#15
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/util/Collection;B)Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#16
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/util/Collection;B)Ljava/util/List;#LocalStore(Ljava/lang/Object;,6)#17
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/util/Collection;B)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#18
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/util/Collection;B)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,6)#19
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/util/Collection;B)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#20
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/util/Collection;B)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,4)#21
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/util/Collection;B)Ljava/util/List;#LocalLoad(I,2)#22
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/util/Collection;B)Ljava/util/List;#Invoke(STATIC,Ljwutil/graphs/Traversals;,traversal_helper,(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V)#23
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#LocalLoad(Ljava/lang/Object;,2)#0
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#LocalLoad(Ljava/lang/Object;,1)#1
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#Invoke(VIRTUAL,Ljava/util/HashSet;,contains,(Ljava/lang/Object;)Z)#2
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#Constant(I,0)#3
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#ConditionalBranch(I,eq,6)#4
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#LocalLoad(Ljava/lang/Object;,2)#6
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#LocalLoad(Ljava/lang/Object;,1)#7
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#Invoke(VIRTUAL,Ljava/util/HashSet;,add,(Ljava/lang/Object;)Z)#8
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#Pop(1)#9
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#LocalLoad(I,4)#10
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#Constant(I,1)#11
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#ConditionalBranch(I,ne,18)#12
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#LocalLoad(I,4)#18
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#Constant(I,2)#19
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#ConditionalBranch(I,ne,24)#20
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#LocalLoad(Ljava/lang/Object;,0)#24
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#LocalLoad(Ljava/lang/Object;,1)#25
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#Invoke(INTERFACE,Ljwutil/graphs/Navigator;,next,(Ljava/lang/Object;)Ljava/util/Collection;)#26
joeq.Compiler.Quad.Dominators$1.next(Ljava/lang/Object;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,1)#0
joeq.Compiler.Quad.Dominators$1.next(Ljava/lang/Object;)Ljava/util/Collection;#CheckCast(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)#1
joeq.Compiler.Quad.Dominators$1.next(Ljava/lang/Object;)Ljava/util/Collection;#LocalStore(Ljava/lang/Object;,2)#2
joeq.Compiler.Quad.Dominators$1.next(Ljava/lang/Object;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,2)#3
joeq.Compiler.Quad.Dominators$1.next(Ljava/lang/Object;)Ljava/util/Collection;#Get(Ljava/util/ArrayList;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators$DominatorNode;,children)#4
joeq.Compiler.Quad.Dominators$1.next(Ljava/lang/Object;)Ljava/util/Collection;#Return(Ljava/lang/Object;)#5
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#LocalStore(Ljava/lang/Object;,5)#27
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#LocalLoad(Ljava/lang/Object;,5)#28
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#Invoke(INTERFACE,Ljava/util/Collection;,iterator,()Ljava/util/Iterator;)#29
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#LocalStore(Ljava/lang/Object;,6)#30
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#LocalLoad(Ljava/lang/Object;,6)#31
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#32
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#Constant(I,0)#33
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#ConditionalBranch(I,eq,63)#34
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#LocalLoad(Ljava/lang/Object;,6)#35
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#36
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#LocalStore(Ljava/lang/Object;,7)#37
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#LocalLoad(Ljava/lang/Object;,0)#38
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#LocalLoad(Ljava/lang/Object;,7)#39
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#LocalLoad(Ljava/lang/Object;,2)#40
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#LocalLoad(Ljava/lang/Object;,3)#41
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#LocalLoad(I,4)#42
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#Invoke(STATIC,Ljwutil/graphs/Traversals;,traversal_helper,(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V)#43
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#LocalLoad(I,4)#63
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#Constant(I,5)#64
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#ConditionalBranch(I,ne,71)#65
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#LocalLoad(Ljava/lang/Object;,3)#66
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#LocalLoad(Ljava/lang/Object;,1)#67
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,add,(Ljava/lang/Object;)Z)#68
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#Pop(1)#69
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#Goto(77)#70
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#Return(V)#77
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#LocalLoad(I,4)#44
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#Constant(I,3)#45
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#ConditionalBranch(I,ne,54)#46
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#LocalLoad(I,4)#54
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#Constant(I,4)#55
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#ConditionalBranch(I,ne,62)#56
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#Goto(31)#62
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/util/Collection;B)Ljava/util/List;#Goto(11)#24
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/util/Collection;B)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,4)#25
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/util/Collection;B)Ljava/util/List;#Return(Ljava/lang/Object;)#26
jwutil.graphs.Traversals.postOrder(Ljwutil/graphs/Navigator;Ljava/lang/Object;)Ljava/util/List;#Return(Ljava/lang/Object;)#5
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#3
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalStore(Ljava/lang/Object;,2)#4
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalLoad(Ljava/lang/Object;,2)#5
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#6
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Constant(I,0)#7
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#ConditionalBranch(I,eq,98)#8
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalLoad(Ljava/lang/Object;,2)#9
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#10
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#CheckCast(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)#11
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalStore(Ljava/lang/Object;,3)#12
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalLoad(Ljava/lang/Object;,3)#13
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Dominators$DominatorNode;,getBasicBlock,()Ljoeq/Compiler/Quad/BasicBlock;)#14
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalStore(Ljava/lang/Object;,4)#15
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#New(Ljwutil/math/BitString;,0)#16
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Dup(1,0)#17
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalLoad(Ljava/lang/Object;,0)#18
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Get([Ljoeq/Compiler/Quad/Dominators$DominatorNode;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,dominatorNodes)#19
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#ArrayLength()#20
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Invoke(SPECIAL,Ljwutil/math/BitString;,<init>,(I)V)#21
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalStore(Ljava/lang/Object;,5)#22
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalLoad(Ljava/lang/Object;,3)#23
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalLoad(Ljava/lang/Object;,5)#24
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Put(Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators$DominatorNode;,dominance_frontier)#25
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalLoad(Ljava/lang/Object;,4)#26
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getSuccessors,()Ljava/util/List;)#27
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#28
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalStore(Ljava/lang/Object;,6)#29
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalLoad(Ljava/lang/Object;,6)#30
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#31
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Constant(I,0)#32
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#ConditionalBranch(I,eq,53)#33
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalLoad(Ljava/lang/Object;,0)#53
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalLoad(Ljava/lang/Object;,4)#54
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Dominators;,getDominatorNode,(Ljoeq/Compiler/Quad/BasicBlock;)Ljoeq/Compiler/Quad/Dominators$DominatorNode;)#55
joeq.Compiler.Quad.Dominators.getDominatorNode(Ljoeq/Compiler/Quad/BasicBlock;)Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Dominators.getDominatorNode(Ljoeq/Compiler/Quad/BasicBlock;)Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Get([Ljoeq/Compiler/Quad/Dominators$DominatorNode;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators;,dominatorNodes)#1
joeq.Compiler.Quad.Dominators.getDominatorNode(Ljoeq/Compiler/Quad/BasicBlock;)Ljoeq/Compiler/Quad/Dominators$DominatorNode;#LocalLoad(Ljava/lang/Object;,1)#2
joeq.Compiler.Quad.Dominators.getDominatorNode(Ljoeq/Compiler/Quad/BasicBlock;)Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getID,()I)#3
joeq.Compiler.Quad.Dominators.getDominatorNode(Ljoeq/Compiler/Quad/BasicBlock;)Ljoeq/Compiler/Quad/Dominators$DominatorNode;#ArrayLoad(Ljava/lang/Object;)#4
joeq.Compiler.Quad.Dominators.getDominatorNode(Ljoeq/Compiler/Quad/BasicBlock;)Ljoeq/Compiler/Quad/Dominators$DominatorNode;#Return(Ljava/lang/Object;)#5
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Dominators$DominatorNode;,getChildren,()Ljava/util/List;)#56
joeq.Compiler.Quad.Dominators$DominatorNode.getChildren()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Dominators$DominatorNode.getChildren()Ljava/util/List;#Get(Ljava/util/ArrayList;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators$DominatorNode;,children)#1
joeq.Compiler.Quad.Dominators$DominatorNode.getChildren()Ljava/util/List;#Return(Ljava/lang/Object;)#2
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#57
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalStore(Ljava/lang/Object;,6)#58
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalLoad(Ljava/lang/Object;,6)#59
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#60
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Constant(I,0)#61
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#ConditionalBranch(I,eq,97)#62
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Goto(5)#97
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalLoad(Ljava/lang/Object;,6)#34
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#35
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#CheckCast(Ljoeq/Compiler/Quad/BasicBlock;)#36
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalStore(Ljava/lang/Object;,7)#37
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalLoad(Ljava/lang/Object;,7)#38
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,isExit,()Z)#39
joeq.Compiler.Quad.BasicBlock.isExit()Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BasicBlock.isExit()Z#Get(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,successors)#1
joeq.Compiler.Quad.BasicBlock.isExit()Z#Constant(L;,null)#2
joeq.Compiler.Quad.BasicBlock.isExit()Z#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
joeq.Compiler.Quad.BasicBlock.isExit()Z#Constant(I,1)#4
joeq.Compiler.Quad.BasicBlock.isExit()Z#Goto(7)#5
joeq.Compiler.Quad.BasicBlock.isExit()Z#Return(I)#7
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Constant(I,0)#40
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#ConditionalBranch(I,eq,43)#41
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Goto(30)#42
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalLoad(Ljava/lang/Object;,6)#63
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#64
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#CheckCast(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)#65
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalStore(Ljava/lang/Object;,7)#66
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalLoad(Ljava/lang/Object;,7)#67
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Dominators$DominatorNode;,getBasicBlock,()Ljoeq/Compiler/Quad/BasicBlock;)#68
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalStore(Ljava/lang/Object;,8)#69
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalLoad(Ljava/lang/Object;,7)#70
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Get(Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators$DominatorNode;,dominance_frontier)#71
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Invoke(VIRTUAL,Ljwutil/math/BitString;,iterator,()Ljwutil/math/BitString$ForwardBitStringIterator;)#72
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalStore(Ljava/lang/Object;,9)#73
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalLoad(Ljava/lang/Object;,9)#74
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Invoke(VIRTUAL,Ljwutil/math/BitString$BitStringIterator;,hasNext,()Z)#75
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Constant(I,0)#76
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#ConditionalBranch(I,eq,96)#77
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Goto(59)#96
joeq.Compiler.Quad.BasicBlock.isExit()Z#Constant(I,0)#6
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalLoad(Ljava/lang/Object;,0)#43
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalLoad(Ljava/lang/Object;,7)#44
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Dominators;,getImmediateDominator,(Ljoeq/Compiler/Quad/BasicBlock;)Ljoeq/Compiler/Quad/BasicBlock;)#45
joeq.Compiler.Quad.Dominators.getImmediateDominator(Ljoeq/Compiler/Quad/BasicBlock;)Ljoeq/Compiler/Quad/BasicBlock;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Dominators.getImmediateDominator(Ljoeq/Compiler/Quad/BasicBlock;)Ljoeq/Compiler/Quad/BasicBlock;#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Compiler.Quad.Dominators.getImmediateDominator(Ljoeq/Compiler/Quad/BasicBlock;)Ljoeq/Compiler/Quad/BasicBlock;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Dominators;,getDominatorNode,(Ljoeq/Compiler/Quad/BasicBlock;)Ljoeq/Compiler/Quad/Dominators$DominatorNode;)#2
joeq.Compiler.Quad.Dominators.getImmediateDominator(Ljoeq/Compiler/Quad/BasicBlock;)Ljoeq/Compiler/Quad/BasicBlock;#LocalStore(Ljava/lang/Object;,2)#3
joeq.Compiler.Quad.Dominators.getImmediateDominator(Ljoeq/Compiler/Quad/BasicBlock;)Ljoeq/Compiler/Quad/BasicBlock;#LocalLoad(Ljava/lang/Object;,2)#4
joeq.Compiler.Quad.Dominators.getImmediateDominator(Ljoeq/Compiler/Quad/BasicBlock;)Ljoeq/Compiler/Quad/BasicBlock;#Get(Ljoeq/Compiler/Quad/Dominators$DominatorNode;,NONSTATIC,Ljoeq/Compiler/Quad/Dominators$DominatorNode;,parent)#5
joeq.Compiler.Quad.Dominators.getImmediateDominator(Ljoeq/Compiler/Quad/BasicBlock;)Ljoeq/Compiler/Quad/BasicBlock;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Dominators$DominatorNode;,getBasicBlock,()Ljoeq/Compiler/Quad/BasicBlock;)#6
joeq.Compiler.Quad.Dominators.getImmediateDominator(Ljoeq/Compiler/Quad/BasicBlock;)Ljoeq/Compiler/Quad/BasicBlock;#Return(Ljava/lang/Object;)#7
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#LocalLoad(Ljava/lang/Object;,4)#46
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#ConditionalBranch(Ljava/lang/Object;,eq,52)#47
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Goto(30)#52
joeq.Compiler.Quad.Dominators.calculateDominanceFrontier(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)V#Return(V)#98
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#46
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#New(Ljava/util/HashMap;,0)#47
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Dup(1,0)#48
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#49
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Put(Ljava/util/Map;,NONSTATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,link_registers)#50
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#51
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#New(Ljwutil/collections/GenericMultiMap;,0)#52
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Dup(1,0)#53
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(SPECIAL,Ljwutil/collections/GenericMultiMap;,<init>,()V)#54
jwutil.collections.GenericMultiMap.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.collections.GenericMultiMap.<init>()V#Get(Ljwutil/collections/MapFactory;,STATIC,Ljwutil/collections/MapFactory;,hashMapFactory)#1
jwutil.collections.MapFactory.<clinit>()V#New(Ljwutil/collections/MapFactory$1;,0)#0
jwutil.collections.MapFactory.<clinit>()V#Dup(1,0)#1
jwutil.collections.MapFactory.<clinit>()V#Invoke(SPECIAL,Ljwutil/collections/MapFactory$1;,<init>,()V)#2
jwutil.collections.MapFactory$1.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.collections.MapFactory$1.<init>()V#Constant(L;,null)#1
jwutil.collections.MapFactory$1.<init>()V#Invoke(SPECIAL,Ljwutil/collections/MapFactory$SerialMapFactory;,<init>,(Ljwutil/collections/MapFactory$1;)V)#2
jwutil.collections.MapFactory$SerialMapFactory.<init>(Ljwutil/collections/MapFactory$1;)V#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.collections.MapFactory$SerialMapFactory.<init>(Ljwutil/collections/MapFactory$1;)V#Invoke(SPECIAL,Ljwutil/collections/MapFactory$SerialMapFactory;,<init>,()V)#1
jwutil.collections.MapFactory$SerialMapFactory.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.collections.MapFactory$SerialMapFactory.<init>()V#Invoke(SPECIAL,Ljwutil/collections/MapFactory;,<init>,()V)#1
jwutil.collections.MapFactory.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.collections.MapFactory.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
jwutil.collections.MapFactory.<init>()V#Return(V)#2
jwutil.collections.MapFactory$SerialMapFactory.<init>()V#Return(V)#2
jwutil.collections.MapFactory$SerialMapFactory.<init>(Ljwutil/collections/MapFactory$1;)V#Return(V)#2
jwutil.collections.MapFactory$1.<init>()V#Return(V)#3
jwutil.collections.MapFactory.<clinit>()V#Put(Ljwutil/collections/MapFactory;,STATIC,Ljwutil/collections/MapFactory;,hashMapFactory)#3
jwutil.collections.MapFactory.<clinit>()V#New(Ljwutil/collections/MapFactory$2;,0)#4
jwutil.collections.MapFactory.<clinit>()V#Dup(1,0)#5
jwutil.collections.MapFactory.<clinit>()V#Invoke(SPECIAL,Ljwutil/collections/MapFactory$2;,<init>,()V)#6
jwutil.collections.MapFactory$2.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.collections.MapFactory$2.<init>()V#Constant(L;,null)#1
jwutil.collections.MapFactory$2.<init>()V#Invoke(SPECIAL,Ljwutil/collections/MapFactory$SerialMapFactory;,<init>,(Ljwutil/collections/MapFactory$1;)V)#2
jwutil.collections.MapFactory$2.<init>()V#Return(V)#3
jwutil.collections.MapFactory.<clinit>()V#Put(Ljwutil/collections/MapFactory;,STATIC,Ljwutil/collections/MapFactory;,treeMapFactory)#7
jwutil.collections.MapFactory.<clinit>()V#Return(V)#8
jwutil.collections.GenericMultiMap.<init>()V#Get(Ljwutil/collections/SetFactory;,STATIC,Ljwutil/collections/SetFactory;,hashSetFactory)#2
jwutil.collections.SetFactory.<clinit>()V#New(Ljwutil/collections/SetFactory$1;,0)#0
jwutil.collections.SetFactory.<clinit>()V#Dup(1,0)#1
jwutil.collections.SetFactory.<clinit>()V#Invoke(SPECIAL,Ljwutil/collections/SetFactory$1;,<init>,()V)#2
jwutil.collections.SetFactory$1.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.collections.SetFactory$1.<init>()V#Constant(L;,null)#1
jwutil.collections.SetFactory$1.<init>()V#Invoke(SPECIAL,Ljwutil/collections/SetFactory$SerialSetFactory;,<init>,(Ljwutil/collections/SetFactory$1;)V)#2
jwutil.collections.SetFactory$SerialSetFactory.<init>(Ljwutil/collections/SetFactory$1;)V#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.collections.SetFactory$SerialSetFactory.<init>(Ljwutil/collections/SetFactory$1;)V#Invoke(SPECIAL,Ljwutil/collections/SetFactory$SerialSetFactory;,<init>,()V)#1
jwutil.collections.SetFactory$SerialSetFactory.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.collections.SetFactory$SerialSetFactory.<init>()V#Invoke(SPECIAL,Ljwutil/collections/SetFactory;,<init>,()V)#1
jwutil.collections.SetFactory.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.collections.SetFactory.<init>()V#Invoke(SPECIAL,Ljwutil/collections/CollectionFactory;,<init>,()V)#1
jwutil.collections.CollectionFactory.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.collections.CollectionFactory.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
jwutil.collections.CollectionFactory.<init>()V#Return(V)#2
jwutil.collections.SetFactory.<init>()V#Return(V)#2
jwutil.collections.SetFactory$SerialSetFactory.<init>()V#Return(V)#2
jwutil.collections.SetFactory$SerialSetFactory.<init>(Ljwutil/collections/SetFactory$1;)V#Return(V)#2
jwutil.collections.SetFactory$1.<init>()V#Return(V)#3
jwutil.collections.SetFactory.<clinit>()V#Put(Ljwutil/collections/SetFactory;,STATIC,Ljwutil/collections/SetFactory;,hashSetFactory)#3
jwutil.collections.SetFactory.<clinit>()V#New(Ljwutil/collections/SetFactory$2;,0)#4
jwutil.collections.SetFactory.<clinit>()V#Dup(1,0)#5
jwutil.collections.SetFactory.<clinit>()V#Invoke(SPECIAL,Ljwutil/collections/SetFactory$2;,<init>,()V)#6
jwutil.collections.SetFactory$2.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.collections.SetFactory$2.<init>()V#Constant(L;,null)#1
jwutil.collections.SetFactory$2.<init>()V#Invoke(SPECIAL,Ljwutil/collections/SetFactory$SerialSetFactory;,<init>,(Ljwutil/collections/SetFactory$1;)V)#2
jwutil.collections.SetFactory$2.<init>()V#Return(V)#3
jwutil.collections.SetFactory.<clinit>()V#Put(Ljwutil/collections/SetFactory;,STATIC,Ljwutil/collections/SetFactory;,linearSetFactory)#7
jwutil.collections.SetFactory.<clinit>()V#New(Ljwutil/collections/SetFactory$3;,0)#8
jwutil.collections.SetFactory.<clinit>()V#Dup(1,0)#9
jwutil.collections.SetFactory.<clinit>()V#Invoke(SPECIAL,Ljwutil/collections/SetFactory$3;,<init>,()V)#10
jwutil.collections.SetFactory$3.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.collections.SetFactory$3.<init>()V#Constant(L;,null)#1
jwutil.collections.SetFactory$3.<init>()V#Invoke(SPECIAL,Ljwutil/collections/SetFactory$SerialSetFactory;,<init>,(Ljwutil/collections/SetFactory$1;)V)#2
jwutil.collections.SetFactory$3.<init>()V#Return(V)#3
jwutil.collections.SetFactory.<clinit>()V#Put(Ljwutil/collections/SetFactory;,STATIC,Ljwutil/collections/SetFactory;,treeSetFactory)#11
jwutil.collections.SetFactory.<clinit>()V#Return(V)#12
jwutil.collections.GenericMultiMap.<init>()V#Invoke(SPECIAL,Ljwutil/collections/GenericMultiMap;,<init>,(Ljwutil/collections/MapFactory;Ljwutil/collections/CollectionFactory;)V)#3
jwutil.collections.GenericMultiMap.<init>(Ljwutil/collections/MapFactory;Ljwutil/collections/CollectionFactory;)V#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.collections.GenericMultiMap.<init>(Ljwutil/collections/MapFactory;Ljwutil/collections/CollectionFactory;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
jwutil.collections.GenericMultiMap.<init>(Ljwutil/collections/MapFactory;Ljwutil/collections/CollectionFactory;)V#LocalLoad(Ljava/lang/Object;,0)#2
jwutil.collections.GenericMultiMap.<init>(Ljwutil/collections/MapFactory;Ljwutil/collections/CollectionFactory;)V#LocalLoad(Ljava/lang/Object;,1)#3
jwutil.collections.GenericMultiMap.<init>(Ljwutil/collections/MapFactory;Ljwutil/collections/CollectionFactory;)V#Invoke(VIRTUAL,Ljwutil/collections/MapFactory;,makeMap,()Ljava/util/Map;)#4
jwutil.collections.MapFactory.makeMap()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.collections.MapFactory.makeMap()Ljava/util/Map;#Get(Ljava/util/Map;,STATIC,Ljava/util/Collections;,EMPTY_MAP)#1
jwutil.collections.MapFactory.makeMap()Ljava/util/Map;#Invoke(VIRTUAL,Ljwutil/collections/MapFactory;,makeMap,(Ljava/util/Map;)Ljava/util/Map;)#2
jwutil.collections.MapFactory$1.makeMap(Ljava/util/Map;)Ljava/util/Map;#New(Ljava/util/HashMap;,0)#0
jwutil.collections.MapFactory$1.makeMap(Ljava/util/Map;)Ljava/util/Map;#Dup(1,0)#1
jwutil.collections.MapFactory$1.makeMap(Ljava/util/Map;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,1)#2
jwutil.collections.MapFactory$1.makeMap(Ljava/util/Map;)Ljava/util/Map;#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,(Ljava/util/Map;)V)#3
jwutil.collections.MapFactory$1.makeMap(Ljava/util/Map;)Ljava/util/Map;#Return(Ljava/lang/Object;)#4
jwutil.collections.MapFactory.makeMap()Ljava/util/Map;#Return(Ljava/lang/Object;)#3
jwutil.collections.GenericMultiMap.<init>(Ljwutil/collections/MapFactory;Ljwutil/collections/CollectionFactory;)V#Put(Ljava/util/Map;,NONSTATIC,Ljwutil/collections/GenericMultiMap;,internMap)#5
jwutil.collections.GenericMultiMap.<init>(Ljwutil/collections/MapFactory;Ljwutil/collections/CollectionFactory;)V#LocalLoad(Ljava/lang/Object;,0)#6
jwutil.collections.GenericMultiMap.<init>(Ljwutil/collections/MapFactory;Ljwutil/collections/CollectionFactory;)V#LocalLoad(Ljava/lang/Object;,2)#7
jwutil.collections.GenericMultiMap.<init>(Ljwutil/collections/MapFactory;Ljwutil/collections/CollectionFactory;)V#Put(Ljwutil/collections/CollectionFactory;,NONSTATIC,Ljwutil/collections/GenericMultiMap;,cf)#8
jwutil.collections.GenericMultiMap.<init>(Ljwutil/collections/MapFactory;Ljwutil/collections/CollectionFactory;)V#LocalLoad(Ljava/lang/Object;,0)#9
jwutil.collections.GenericMultiMap.<init>(Ljwutil/collections/MapFactory;Ljwutil/collections/CollectionFactory;)V#LocalLoad(Ljava/lang/Object;,1)#10
jwutil.collections.GenericMultiMap.<init>(Ljwutil/collections/MapFactory;Ljwutil/collections/CollectionFactory;)V#Put(Ljwutil/collections/MapFactory;,NONSTATIC,Ljwutil/collections/GenericMultiMap;,mf)#11
jwutil.collections.GenericMultiMap.<init>(Ljwutil/collections/MapFactory;Ljwutil/collections/CollectionFactory;)V#Return(V)#12
jwutil.collections.GenericMultiMap.<init>()V#Return(V)#4
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Put(Ljwutil/collections/MultiMap;,NONSTATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,register_uses)#55
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#56
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/SSA/EnterSSA;,prepare,()V)#57
joeq.Compiler.Quad.SSA.EnterSSA.prepare()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.SSA.EnterSSA.prepare()V#LocalLoad(Ljava/lang/Object;,0)#1
joeq.Compiler.Quad.SSA.EnterSSA.prepare()V#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,ir)#2
joeq.Compiler.Quad.SSA.EnterSSA.prepare()V#Invoke(STATIC,Ljoeq/Compiler/Dataflow/LivenessAnalysis;,solve,(Ljoeq/Compiler/Quad/ControlFlowGraph;)Ljoeq/Compiler/Dataflow/LivenessAnalysis;)#3
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;)Ljoeq/Compiler/Dataflow/LivenessAnalysis;#New(Ljoeq/Compiler/Dataflow/LivenessAnalysis;,0)#0
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;)Ljoeq/Compiler/Dataflow/LivenessAnalysis;#Dup(1,0)#1
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;)Ljoeq/Compiler/Dataflow/LivenessAnalysis;#Invoke(SPECIAL,Ljoeq/Compiler/Dataflow/LivenessAnalysis;,<init>,()V)#2
joeq.Compiler.Dataflow.LivenessAnalysis.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Dataflow.LivenessAnalysis.<init>()V#Invoke(SPECIAL,Ljoeq/Compiler/Dataflow/Problem;,<init>,()V)#1
joeq.Compiler.Dataflow.Problem.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Dataflow.Problem.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.Dataflow.Problem.<init>()V#Return(V)#2
joeq.Compiler.Dataflow.LivenessAnalysis.<init>()V#Return(V)#2
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;)Ljoeq/Compiler/Dataflow/LivenessAnalysis;#LocalStore(Ljava/lang/Object;,1)#3
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;)Ljoeq/Compiler/Dataflow/LivenessAnalysis;#New(Ljoeq/Compiler/Dataflow/IterativeSolver;,0)#4
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;)Ljoeq/Compiler/Dataflow/LivenessAnalysis;#Dup(1,0)#5
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;)Ljoeq/Compiler/Dataflow/LivenessAnalysis;#Invoke(SPECIAL,Ljoeq/Compiler/Dataflow/IterativeSolver;,<init>,()V)#6
joeq.Compiler.Dataflow.IterativeSolver.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Dataflow.IterativeSolver.<init>()V#Invoke(SPECIAL,Ljoeq/Compiler/Dataflow/Solver;,<init>,()V)#1
joeq.Compiler.Dataflow.Solver.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Dataflow.Solver.<init>()V#Get(Ljwutil/collections/MapFactory;,STATIC,Ljwutil/collections/MapFactory;,hashMapFactory)#1
joeq.Compiler.Dataflow.Solver.<init>()V#Invoke(SPECIAL,Ljoeq/Compiler/Dataflow/Solver;,<init>,(Ljwutil/collections/MapFactory;)V)#2
joeq.Compiler.Dataflow.Solver.<init>(Ljwutil/collections/MapFactory;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Dataflow.Solver.<init>(Ljwutil/collections/MapFactory;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.Dataflow.Solver.<init>(Ljwutil/collections/MapFactory;)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Dataflow.Solver.<init>(Ljwutil/collections/MapFactory;)V#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Compiler.Dataflow.Solver.<init>(Ljwutil/collections/MapFactory;)V#Put(Ljwutil/collections/MapFactory;,NONSTATIC,Ljoeq/Compiler/Dataflow/Solver;,factory)#4
joeq.Compiler.Dataflow.Solver.<init>(Ljwutil/collections/MapFactory;)V#Return(V)#5
joeq.Compiler.Dataflow.Solver.<init>()V#Return(V)#3
joeq.Compiler.Dataflow.IterativeSolver.<init>()V#Return(V)#2
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;)Ljoeq/Compiler/Dataflow/LivenessAnalysis;#LocalStore(Ljava/lang/Object;,2)#7
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;)Ljoeq/Compiler/Dataflow/LivenessAnalysis;#LocalLoad(Ljava/lang/Object;,1)#8
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;)Ljoeq/Compiler/Dataflow/LivenessAnalysis;#LocalLoad(Ljava/lang/Object;,2)#9
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;)Ljoeq/Compiler/Dataflow/LivenessAnalysis;#Put(Ljoeq/Compiler/Dataflow/Solver;,NONSTATIC,Ljoeq/Compiler/Dataflow/LivenessAnalysis;,mySolver)#10
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;)Ljoeq/Compiler/Dataflow/LivenessAnalysis;#LocalLoad(Ljava/lang/Object;,0)#11
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;)Ljoeq/Compiler/Dataflow/LivenessAnalysis;#LocalLoad(Ljava/lang/Object;,2)#12
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;)Ljoeq/Compiler/Dataflow/LivenessAnalysis;#LocalLoad(Ljava/lang/Object;,1)#13
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;)Ljoeq/Compiler/Dataflow/LivenessAnalysis;#Invoke(STATIC,Ljoeq/Compiler/Dataflow/LivenessAnalysis;,solve,(Ljoeq/Compiler/Quad/ControlFlowGraph;Ljoeq/Compiler/Dataflow/Solver;Ljoeq/Compiler/Dataflow/Problem;)V)#14
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;Ljoeq/Compiler/Dataflow/Solver;Ljoeq/Compiler/Dataflow/Problem;)V#LocalLoad(Ljava/lang/Object;,1)#0
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;Ljoeq/Compiler/Dataflow/Solver;Ljoeq/Compiler/Dataflow/Problem;)V#LocalLoad(Ljava/lang/Object;,2)#1
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;Ljoeq/Compiler/Dataflow/Solver;Ljoeq/Compiler/Dataflow/Problem;)V#New(Ljwutil/graphs/EdgeGraph;,0)#2
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;Ljoeq/Compiler/Dataflow/Solver;Ljoeq/Compiler/Dataflow/Problem;)V#Dup(1,0)#3
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;Ljoeq/Compiler/Dataflow/Solver;Ljoeq/Compiler/Dataflow/Problem;)V#New(Ljwutil/graphs/ReverseGraph;,0)#4
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;Ljoeq/Compiler/Dataflow/Solver;Ljoeq/Compiler/Dataflow/Problem;)V#Dup(1,0)#5
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;Ljoeq/Compiler/Dataflow/Solver;Ljoeq/Compiler/Dataflow/Problem;)V#LocalLoad(Ljava/lang/Object;,0)#6
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;Ljoeq/Compiler/Dataflow/Solver;Ljoeq/Compiler/Dataflow/Problem;)V#LocalLoad(Ljava/lang/Object;,0)#7
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;Ljoeq/Compiler/Dataflow/Solver;Ljoeq/Compiler/Dataflow/Problem;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,exit,()Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;)#8
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;Ljoeq/Compiler/Dataflow/Solver;Ljoeq/Compiler/Dataflow/Problem;)V#Invoke(STATIC,Ljava/util/Collections;,singleton,(Ljava/lang/Object;)Ljava/util/Set;)#9
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;Ljoeq/Compiler/Dataflow/Solver;Ljoeq/Compiler/Dataflow/Problem;)V#Invoke(SPECIAL,Ljwutil/graphs/ReverseGraph;,<init>,(Ljwutil/graphs/Graph;Ljava/util/Collection;)V)#10
jwutil.graphs.ReverseGraph.<init>(Ljwutil/graphs/Graph;Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.graphs.ReverseGraph.<init>(Ljwutil/graphs/Graph;Ljava/util/Collection;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
jwutil.graphs.ReverseGraph.<init>(Ljwutil/graphs/Graph;Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,0)#2
jwutil.graphs.ReverseGraph.<init>(Ljwutil/graphs/Graph;Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,1)#3
jwutil.graphs.ReverseGraph.<init>(Ljwutil/graphs/Graph;Ljava/util/Collection;)V#Put(Ljwutil/graphs/Graph;,NONSTATIC,Ljwutil/graphs/ReverseGraph;,_graph)#4
jwutil.graphs.ReverseGraph.<init>(Ljwutil/graphs/Graph;Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,0)#5
jwutil.graphs.ReverseGraph.<init>(Ljwutil/graphs/Graph;Ljava/util/Collection;)V#New(Ljwutil/graphs/ReverseNavigator;,0)#6
jwutil.graphs.ReverseGraph.<init>(Ljwutil/graphs/Graph;Ljava/util/Collection;)V#Dup(1,0)#7
jwutil.graphs.ReverseGraph.<init>(Ljwutil/graphs/Graph;Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,1)#8
jwutil.graphs.ReverseGraph.<init>(Ljwutil/graphs/Graph;Ljava/util/Collection;)V#Invoke(INTERFACE,Ljwutil/graphs/Graph;,getNavigator,()Ljwutil/graphs/Navigator;)#9
joeq.Compiler.Quad.ControlFlowGraph.getNavigator()Ljwutil/graphs/Navigator;#New(Ljoeq/Compiler/Quad/ControlFlowGraphNavigator;,0)#0
joeq.Compiler.Quad.ControlFlowGraphNavigator.<clinit>()V#New(Ljoeq/Compiler/Quad/ControlFlowGraphNavigator;,0)#0
joeq.Compiler.Quad.ControlFlowGraphNavigator.<clinit>()V#Dup(1,0)#1
joeq.Compiler.Quad.ControlFlowGraphNavigator.<clinit>()V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/ControlFlowGraphNavigator;,<init>,()V)#2
joeq.Compiler.Quad.ControlFlowGraphNavigator.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.ControlFlowGraphNavigator.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.Quad.ControlFlowGraphNavigator.<init>()V#Return(V)#2
joeq.Compiler.Quad.ControlFlowGraphNavigator.<clinit>()V#Put(Ljoeq/Compiler/Quad/ControlFlowGraphNavigator;,STATIC,Ljoeq/Compiler/Quad/ControlFlowGraphNavigator;,INSTANCE)#3
joeq.Compiler.Quad.ControlFlowGraphNavigator.<clinit>()V#Return(V)#4
joeq.Compiler.Quad.ControlFlowGraph.getNavigator()Ljwutil/graphs/Navigator;#Dup(1,0)#1
joeq.Compiler.Quad.ControlFlowGraph.getNavigator()Ljwutil/graphs/Navigator;#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.ControlFlowGraph.getNavigator()Ljwutil/graphs/Navigator;#Invoke(SPECIAL,Ljoeq/Compiler/Quad/ControlFlowGraphNavigator;,<init>,(Ljoeq/Compiler/Quad/ControlFlowGraph;)V)#3
joeq.Compiler.Quad.ControlFlowGraphNavigator.<init>(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.ControlFlowGraphNavigator.<init>(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.Quad.ControlFlowGraphNavigator.<init>(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.ControlFlowGraphNavigator.<init>(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Compiler.Quad.ControlFlowGraphNavigator.<init>(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Put(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/ControlFlowGraphNavigator;,cfg)#4
joeq.Compiler.Quad.ControlFlowGraphNavigator.<init>(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Return(V)#5
joeq.Compiler.Quad.ControlFlowGraph.getNavigator()Ljwutil/graphs/Navigator;#Return(Ljava/lang/Object;)#4
jwutil.graphs.ReverseGraph.<init>(Ljwutil/graphs/Graph;Ljava/util/Collection;)V#Invoke(SPECIAL,Ljwutil/graphs/ReverseNavigator;,<init>,(Ljwutil/graphs/Navigator;)V)#10
jwutil.graphs.ReverseNavigator.<init>(Ljwutil/graphs/Navigator;)V#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.graphs.ReverseNavigator.<init>(Ljwutil/graphs/Navigator;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
jwutil.graphs.ReverseNavigator.<init>(Ljwutil/graphs/Navigator;)V#LocalLoad(Ljava/lang/Object;,0)#2
jwutil.graphs.ReverseNavigator.<init>(Ljwutil/graphs/Navigator;)V#LocalLoad(Ljava/lang/Object;,1)#3
jwutil.graphs.ReverseNavigator.<init>(Ljwutil/graphs/Navigator;)V#Put(Ljwutil/graphs/Navigator;,NONSTATIC,Ljwutil/graphs/ReverseNavigator;,navigator)#4
jwutil.graphs.ReverseNavigator.<init>(Ljwutil/graphs/Navigator;)V#Return(V)#5
jwutil.graphs.ReverseGraph.<init>(Ljwutil/graphs/Graph;Ljava/util/Collection;)V#Put(Ljwutil/graphs/Navigator;,NONSTATIC,Ljwutil/graphs/ReverseGraph;,_nav)#11
jwutil.graphs.ReverseGraph.<init>(Ljwutil/graphs/Graph;Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,0)#12
jwutil.graphs.ReverseGraph.<init>(Ljwutil/graphs/Graph;Ljava/util/Collection;)V#LocalLoad(Ljava/lang/Object;,2)#13
jwutil.graphs.ReverseGraph.<init>(Ljwutil/graphs/Graph;Ljava/util/Collection;)V#Put(Ljava/util/Collection;,NONSTATIC,Ljwutil/graphs/ReverseGraph;,_roots)#14
jwutil.graphs.ReverseGraph.<init>(Ljwutil/graphs/Graph;Ljava/util/Collection;)V#Return(V)#15
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;Ljoeq/Compiler/Dataflow/Solver;Ljoeq/Compiler/Dataflow/Problem;)V#Invoke(SPECIAL,Ljwutil/graphs/EdgeGraph;,<init>,(Ljwutil/graphs/Graph;)V)#11
jwutil.graphs.EdgeGraph.<init>(Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.graphs.EdgeGraph.<init>(Ljwutil/graphs/Graph;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
jwutil.graphs.EdgeGraph.<init>(Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,0)#2
jwutil.graphs.EdgeGraph.<init>(Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,1)#3
jwutil.graphs.EdgeGraph.<init>(Ljwutil/graphs/Graph;)V#Put(Ljwutil/graphs/Graph;,NONSTATIC,Ljwutil/graphs/EdgeGraph;,g)#4
jwutil.graphs.EdgeGraph.<init>(Ljwutil/graphs/Graph;)V#Return(V)#5
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;Ljoeq/Compiler/Dataflow/Solver;Ljoeq/Compiler/Dataflow/Problem;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Dataflow/Solver;,initialize,(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;)V)#12
joeq.Compiler.Dataflow.IterativeSolver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,2)#0
joeq.Compiler.Dataflow.IterativeSolver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;)V#Invoke(INTERFACE,Ljwutil/graphs/Graph;,getNavigator,()Ljwutil/graphs/Navigator;)#1
jwutil.graphs.EdgeGraph.getNavigator()Ljwutil/graphs/Navigator;#New(Ljwutil/graphs/EdgeNavigator;,0)#0
jwutil.graphs.EdgeGraph.getNavigator()Ljwutil/graphs/Navigator;#Dup(1,0)#1
jwutil.graphs.EdgeGraph.getNavigator()Ljwutil/graphs/Navigator;#LocalLoad(Ljava/lang/Object;,0)#2
jwutil.graphs.EdgeGraph.getNavigator()Ljwutil/graphs/Navigator;#Get(Ljwutil/graphs/Graph;,NONSTATIC,Ljwutil/graphs/EdgeGraph;,g)#3
jwutil.graphs.EdgeGraph.getNavigator()Ljwutil/graphs/Navigator;#Invoke(INTERFACE,Ljwutil/graphs/Graph;,getNavigator,()Ljwutil/graphs/Navigator;)#4
jwutil.graphs.ReverseGraph.getNavigator()Ljwutil/graphs/Navigator;#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.graphs.ReverseGraph.getNavigator()Ljwutil/graphs/Navigator;#Get(Ljwutil/graphs/Navigator;,NONSTATIC,Ljwutil/graphs/ReverseGraph;,_nav)#1
jwutil.graphs.ReverseGraph.getNavigator()Ljwutil/graphs/Navigator;#Return(Ljava/lang/Object;)#2
jwutil.graphs.EdgeGraph.getNavigator()Ljwutil/graphs/Navigator;#Invoke(SPECIAL,Ljwutil/graphs/EdgeNavigator;,<init>,(Ljwutil/graphs/Navigator;)V)#5
jwutil.graphs.EdgeNavigator.<init>(Ljwutil/graphs/Navigator;)V#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.graphs.EdgeNavigator.<init>(Ljwutil/graphs/Navigator;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
jwutil.graphs.EdgeNavigator.<init>(Ljwutil/graphs/Navigator;)V#LocalLoad(Ljava/lang/Object;,0)#2
jwutil.graphs.EdgeNavigator.<init>(Ljwutil/graphs/Navigator;)V#LocalLoad(Ljava/lang/Object;,1)#3
jwutil.graphs.EdgeNavigator.<init>(Ljwutil/graphs/Navigator;)V#Put(Ljwutil/graphs/Navigator;,NONSTATIC,Ljwutil/graphs/EdgeNavigator;,navigator)#4
jwutil.graphs.EdgeNavigator.<init>(Ljwutil/graphs/Navigator;)V#Return(V)#5
jwutil.graphs.EdgeGraph.getNavigator()Ljwutil/graphs/Navigator;#Return(Ljava/lang/Object;)#6
joeq.Compiler.Dataflow.IterativeSolver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,2)#2
joeq.Compiler.Dataflow.IterativeSolver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;)V#Invoke(INTERFACE,Ljwutil/graphs/Graph;,getRoots,()Ljava/util/Collection;)#3
jwutil.graphs.EdgeGraph.getRoots()Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.graphs.EdgeGraph.getRoots()Ljava/util/Collection;#Get(Ljwutil/graphs/Graph;,NONSTATIC,Ljwutil/graphs/EdgeGraph;,g)#1
jwutil.graphs.EdgeGraph.getRoots()Ljava/util/Collection;#Invoke(INTERFACE,Ljwutil/graphs/Graph;,getRoots,()Ljava/util/Collection;)#2
jwutil.graphs.ReverseGraph.getRoots()Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.graphs.ReverseGraph.getRoots()Ljava/util/Collection;#Get(Ljava/util/Collection;,NONSTATIC,Ljwutil/graphs/ReverseGraph;,_roots)#1
jwutil.graphs.ReverseGraph.getRoots()Ljava/util/Collection;#Return(Ljava/lang/Object;)#2
jwutil.graphs.EdgeGraph.getRoots()Ljava/util/Collection;#Return(Ljava/lang/Object;)#3
joeq.Compiler.Dataflow.IterativeSolver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;)V#Invoke(STATIC,Ljwutil/graphs/Traversals;,reversePostOrder,(Ljwutil/graphs/Navigator;Ljava/util/Collection;)Ljava/util/List;)#4
jwutil.graphs.Traversals.reversePostOrder(Ljwutil/graphs/Navigator;Ljava/util/Collection;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.graphs.Traversals.reversePostOrder(Ljwutil/graphs/Navigator;Ljava/util/Collection;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#1
jwutil.graphs.Traversals.reversePostOrder(Ljwutil/graphs/Navigator;Ljava/util/Collection;)Ljava/util/List;#Constant(I,6)#2
jwutil.graphs.Traversals.reversePostOrder(Ljwutil/graphs/Navigator;Ljava/util/Collection;)Ljava/util/List;#Invoke(STATIC,Ljwutil/graphs/Traversals;,traversal_helper,(Ljwutil/graphs/Navigator;Ljava/util/Collection;B)Ljava/util/List;)#3
jwutil.graphs.EdgeNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,1)#0
jwutil.graphs.EdgeNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#Instanceof(Ljwutil/collections/Pair;)#1
jwutil.graphs.EdgeNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#Constant(I,0)#2
jwutil.graphs.EdgeNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#ConditionalBranch(I,eq,11)#3
jwutil.graphs.EdgeNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#New(Ljwutil/collections/WrappedCollection;,0)#11
jwutil.graphs.EdgeNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#Dup(1,0)#12
jwutil.graphs.EdgeNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,0)#13
jwutil.graphs.EdgeNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#Get(Ljwutil/graphs/Navigator;,NONSTATIC,Ljwutil/graphs/EdgeNavigator;,navigator)#14
jwutil.graphs.EdgeNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,1)#15
jwutil.graphs.EdgeNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#Invoke(INTERFACE,Ljwutil/graphs/Navigator;,next,(Ljava/lang/Object;)Ljava/util/Collection;)#16
jwutil.graphs.ReverseNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.graphs.ReverseNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#Get(Ljwutil/graphs/Navigator;,NONSTATIC,Ljwutil/graphs/ReverseNavigator;,navigator)#1
jwutil.graphs.ReverseNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,1)#2
jwutil.graphs.ReverseNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#Invoke(INTERFACE,Ljwutil/graphs/Navigator;,prev,(Ljava/lang/Object;)Ljava/util/Collection;)#3
joeq.Compiler.Quad.ControlFlowGraphNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,1)#0
joeq.Compiler.Quad.ControlFlowGraphNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#CheckCast(Ljoeq/Compiler/Quad/BasicBlock;)#1
joeq.Compiler.Quad.ControlFlowGraphNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#LocalStore(Ljava/lang/Object;,2)#2
joeq.Compiler.Quad.ControlFlowGraphNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,2)#3
joeq.Compiler.Quad.ControlFlowGraphNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getPredecessors,()Ljava/util/List;)#4
joeq.Compiler.Quad.ControlFlowGraphNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#LocalStore(Ljava/lang/Object;,3)#5
joeq.Compiler.Quad.ControlFlowGraphNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,0)#6
joeq.Compiler.Quad.ControlFlowGraphNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/ControlFlowGraphNavigator;,cfg)#7
joeq.Compiler.Quad.ControlFlowGraphNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#Constant(L;,null)#8
joeq.Compiler.Quad.ControlFlowGraphNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#ConditionalBranch(Ljava/lang/Object;,eq,14)#9
joeq.Compiler.Quad.ControlFlowGraphNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,2)#10
joeq.Compiler.Quad.ControlFlowGraphNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,isExceptionHandlerEntry,()Z)#11
joeq.Compiler.Quad.ControlFlowGraphNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#Constant(I,0)#12
joeq.Compiler.Quad.ControlFlowGraphNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#ConditionalBranch(I,ne,16)#13
joeq.Compiler.Quad.ControlFlowGraphNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,3)#14
joeq.Compiler.Quad.ControlFlowGraphNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#Return(Ljava/lang/Object;)#15
jwutil.graphs.ReverseNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#Return(Ljava/lang/Object;)#4
jwutil.graphs.EdgeNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#Constant(L;,null)#17
jwutil.graphs.EdgeNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#New(Ljwutil/graphs/EdgeNavigator$AddLeftFilter;,0)#18
jwutil.graphs.EdgeNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#Dup(1,0)#19
jwutil.graphs.EdgeNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,1)#20
jwutil.graphs.EdgeNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#Invoke(SPECIAL,Ljwutil/graphs/EdgeNavigator$AddLeftFilter;,<init>,(Ljava/lang/Object;)V)#21
jwutil.graphs.EdgeNavigator$AddLeftFilter.<init>(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.graphs.EdgeNavigator$AddLeftFilter.<init>(Ljava/lang/Object;)V#Invoke(SPECIAL,Ljwutil/collections/Filter;,<init>,()V)#1
jwutil.collections.Filter.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.collections.Filter.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
jwutil.collections.Filter.<init>()V#Return(V)#2
jwutil.graphs.EdgeNavigator$AddLeftFilter.<init>(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#2
jwutil.graphs.EdgeNavigator$AddLeftFilter.<init>(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#3
jwutil.graphs.EdgeNavigator$AddLeftFilter.<init>(Ljava/lang/Object;)V#Put(Ljava/lang/Object;,NONSTATIC,Ljwutil/graphs/EdgeNavigator$AddLeftFilter;,left)#4
jwutil.graphs.EdgeNavigator$AddLeftFilter.<init>(Ljava/lang/Object;)V#Return(V)#5
jwutil.graphs.EdgeNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#Invoke(SPECIAL,Ljwutil/collections/WrappedCollection;,<init>,(Ljava/util/Collection;Ljwutil/collections/Filter;Ljwutil/collections/Filter;)V)#22
jwutil.collections.WrappedCollection.<init>(Ljava/util/Collection;Ljwutil/collections/Filter;Ljwutil/collections/Filter;)V#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.collections.WrappedCollection.<init>(Ljava/util/Collection;Ljwutil/collections/Filter;Ljwutil/collections/Filter;)V#Invoke(SPECIAL,Ljava/util/AbstractCollection;,<init>,()V)#1
jwutil.collections.WrappedCollection.<init>(Ljava/util/Collection;Ljwutil/collections/Filter;Ljwutil/collections/Filter;)V#LocalLoad(Ljava/lang/Object;,0)#2
jwutil.collections.WrappedCollection.<init>(Ljava/util/Collection;Ljwutil/collections/Filter;Ljwutil/collections/Filter;)V#LocalLoad(Ljava/lang/Object;,1)#3
jwutil.collections.WrappedCollection.<init>(Ljava/util/Collection;Ljwutil/collections/Filter;Ljwutil/collections/Filter;)V#Put(Ljava/util/Collection;,NONSTATIC,Ljwutil/collections/WrappedCollection;,c)#4
jwutil.collections.WrappedCollection.<init>(Ljava/util/Collection;Ljwutil/collections/Filter;Ljwutil/collections/Filter;)V#LocalLoad(Ljava/lang/Object;,0)#5
jwutil.collections.WrappedCollection.<init>(Ljava/util/Collection;Ljwutil/collections/Filter;Ljwutil/collections/Filter;)V#LocalLoad(Ljava/lang/Object;,2)#6
jwutil.collections.WrappedCollection.<init>(Ljava/util/Collection;Ljwutil/collections/Filter;Ljwutil/collections/Filter;)V#Put(Ljwutil/collections/Filter;,NONSTATIC,Ljwutil/collections/WrappedCollection;,in)#7
jwutil.collections.WrappedCollection.<init>(Ljava/util/Collection;Ljwutil/collections/Filter;Ljwutil/collections/Filter;)V#LocalLoad(Ljava/lang/Object;,0)#8
jwutil.collections.WrappedCollection.<init>(Ljava/util/Collection;Ljwutil/collections/Filter;Ljwutil/collections/Filter;)V#LocalLoad(Ljava/lang/Object;,3)#9
jwutil.collections.WrappedCollection.<init>(Ljava/util/Collection;Ljwutil/collections/Filter;Ljwutil/collections/Filter;)V#Put(Ljwutil/collections/Filter;,NONSTATIC,Ljwutil/collections/WrappedCollection;,out)#10
jwutil.collections.WrappedCollection.<init>(Ljava/util/Collection;Ljwutil/collections/Filter;Ljwutil/collections/Filter;)V#Return(V)#11
jwutil.graphs.EdgeNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#Return(Ljava/lang/Object;)#23
jwutil.collections.WrappedCollection.iterator()Ljava/util/Iterator;#New(Ljwutil/collections/FilterIterator;,0)#0
jwutil.collections.WrappedCollection.iterator()Ljava/util/Iterator;#Dup(1,0)#1
jwutil.collections.WrappedCollection.iterator()Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#2
jwutil.collections.WrappedCollection.iterator()Ljava/util/Iterator;#Get(Ljava/util/Collection;,NONSTATIC,Ljwutil/collections/WrappedCollection;,c)#3
jwutil.collections.WrappedCollection.iterator()Ljava/util/Iterator;#Invoke(INTERFACE,Ljava/util/Collection;,iterator,()Ljava/util/Iterator;)#4
jwutil.collections.WrappedCollection.iterator()Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#5
jwutil.collections.WrappedCollection.iterator()Ljava/util/Iterator;#Get(Ljwutil/collections/Filter;,NONSTATIC,Ljwutil/collections/WrappedCollection;,out)#6
jwutil.collections.WrappedCollection.iterator()Ljava/util/Iterator;#Invoke(SPECIAL,Ljwutil/collections/FilterIterator;,<init>,(Ljava/util/Iterator;Ljwutil/collections/Filter;)V)#7
jwutil.collections.FilterIterator.<init>(Ljava/util/Iterator;Ljwutil/collections/Filter;)V#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.collections.FilterIterator.<init>(Ljava/util/Iterator;Ljwutil/collections/Filter;)V#Invoke(SPECIAL,Ljwutil/collections/UnmodifiableIterator;,<init>,()V)#1
jwutil.collections.FilterIterator.<init>(Ljava/util/Iterator;Ljwutil/collections/Filter;)V#LocalLoad(Ljava/lang/Object;,0)#2
jwutil.collections.FilterIterator.<init>(Ljava/util/Iterator;Ljwutil/collections/Filter;)V#Constant(L;,null)#3
jwutil.collections.FilterIterator.<init>(Ljava/util/Iterator;Ljwutil/collections/Filter;)V#Put(Ljava/lang/Object;,NONSTATIC,Ljwutil/collections/FilterIterator;,next)#4
jwutil.collections.FilterIterator.<init>(Ljava/util/Iterator;Ljwutil/collections/Filter;)V#LocalLoad(Ljava/lang/Object;,0)#5
jwutil.collections.FilterIterator.<init>(Ljava/util/Iterator;Ljwutil/collections/Filter;)V#Constant(I,0)#6
jwutil.collections.FilterIterator.<init>(Ljava/util/Iterator;Ljwutil/collections/Filter;)V#Put(Z,NONSTATIC,Ljwutil/collections/FilterIterator;,done)#7
jwutil.collections.FilterIterator.<init>(Ljava/util/Iterator;Ljwutil/collections/Filter;)V#LocalLoad(Ljava/lang/Object;,0)#8
jwutil.collections.FilterIterator.<init>(Ljava/util/Iterator;Ljwutil/collections/Filter;)V#LocalLoad(Ljava/lang/Object;,1)#9
jwutil.collections.FilterIterator.<init>(Ljava/util/Iterator;Ljwutil/collections/Filter;)V#Put(Ljava/util/Iterator;,NONSTATIC,Ljwutil/collections/FilterIterator;,i)#10
jwutil.collections.FilterIterator.<init>(Ljava/util/Iterator;Ljwutil/collections/Filter;)V#LocalLoad(Ljava/lang/Object;,0)#11
jwutil.collections.FilterIterator.<init>(Ljava/util/Iterator;Ljwutil/collections/Filter;)V#LocalLoad(Ljava/lang/Object;,2)#12
jwutil.collections.FilterIterator.<init>(Ljava/util/Iterator;Ljwutil/collections/Filter;)V#Put(Ljwutil/collections/Filter;,NONSTATIC,Ljwutil/collections/FilterIterator;,f)#13
jwutil.collections.FilterIterator.<init>(Ljava/util/Iterator;Ljwutil/collections/Filter;)V#LocalLoad(Ljava/lang/Object;,0)#14
jwutil.collections.FilterIterator.<init>(Ljava/util/Iterator;Ljwutil/collections/Filter;)V#Invoke(SPECIAL,Ljwutil/collections/FilterIterator;,advance,()V)#15
jwutil.collections.FilterIterator.advance()V#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.collections.FilterIterator.advance()V#Get(Ljava/util/Iterator;,NONSTATIC,Ljwutil/collections/FilterIterator;,i)#1
jwutil.collections.FilterIterator.advance()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#2
jwutil.collections.FilterIterator.advance()V#Constant(I,0)#3
jwutil.collections.FilterIterator.advance()V#ConditionalBranch(I,eq,18)#4
jwutil.collections.FilterIterator.advance()V#LocalLoad(Ljava/lang/Object;,0)#5
jwutil.collections.FilterIterator.advance()V#LocalLoad(Ljava/lang/Object;,0)#6
jwutil.collections.FilterIterator.advance()V#Get(Ljava/util/Iterator;,NONSTATIC,Ljwutil/collections/FilterIterator;,i)#7
jwutil.collections.FilterIterator.advance()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#8
jwutil.collections.FilterIterator.advance()V#Put(Ljava/lang/Object;,NONSTATIC,Ljwutil/collections/FilterIterator;,next)#9
jwutil.collections.FilterIterator.advance()V#LocalLoad(Ljava/lang/Object;,0)#10
jwutil.collections.FilterIterator.advance()V#Get(Ljwutil/collections/Filter;,NONSTATIC,Ljwutil/collections/FilterIterator;,f)#11
jwutil.collections.FilterIterator.advance()V#LocalLoad(Ljava/lang/Object;,0)#12
jwutil.collections.FilterIterator.advance()V#Get(Ljava/lang/Object;,NONSTATIC,Ljwutil/collections/FilterIterator;,next)#13
jwutil.collections.FilterIterator.advance()V#Invoke(VIRTUAL,Ljwutil/collections/Filter;,isElement,(Ljava/lang/Object;)Z)#14
jwutil.collections.Filter.isElement(Ljava/lang/Object;)Z#Constant(I,1)#0
jwutil.collections.Filter.isElement(Ljava/lang/Object;)Z#Return(I)#1
jwutil.collections.FilterIterator.advance()V#Constant(I,0)#15
jwutil.collections.FilterIterator.advance()V#ConditionalBranch(I,eq,0)#16
jwutil.collections.FilterIterator.advance()V#Return(V)#17
jwutil.collections.FilterIterator.<init>(Ljava/util/Iterator;Ljwutil/collections/Filter;)V#Return(V)#16
jwutil.collections.WrappedCollection.iterator()Ljava/util/Iterator;#Return(Ljava/lang/Object;)#8
jwutil.collections.FilterIterator.hasNext()Z#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.collections.FilterIterator.hasNext()Z#Get(Z,NONSTATIC,Ljwutil/collections/FilterIterator;,done)#1
jwutil.collections.FilterIterator.hasNext()Z#Constant(I,0)#2
jwutil.collections.FilterIterator.hasNext()Z#ConditionalBranch(I,ne,6)#3
jwutil.collections.FilterIterator.hasNext()Z#Constant(I,1)#4
jwutil.collections.FilterIterator.hasNext()Z#Goto(7)#5
jwutil.collections.FilterIterator.hasNext()Z#Return(I)#7
jwutil.collections.FilterIterator.next()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.collections.FilterIterator.next()Ljava/lang/Object;#Get(Z,NONSTATIC,Ljwutil/collections/FilterIterator;,done)#1
jwutil.collections.FilterIterator.next()Ljava/lang/Object;#Constant(I,0)#2
jwutil.collections.FilterIterator.next()Ljava/lang/Object;#ConditionalBranch(I,eq,8)#3
jwutil.collections.FilterIterator.next()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#8
jwutil.collections.FilterIterator.next()Ljava/lang/Object;#Get(Ljava/lang/Object;,NONSTATIC,Ljwutil/collections/FilterIterator;,next)#9
jwutil.collections.FilterIterator.next()Ljava/lang/Object;#LocalStore(Ljava/lang/Object;,1)#10
jwutil.collections.FilterIterator.next()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#11
jwutil.collections.FilterIterator.next()Ljava/lang/Object;#Invoke(SPECIAL,Ljwutil/collections/FilterIterator;,advance,()V)#12
jwutil.collections.FilterIterator.advance()V#LocalLoad(Ljava/lang/Object;,0)#18
jwutil.collections.FilterIterator.advance()V#Constant(I,1)#19
jwutil.collections.FilterIterator.advance()V#Put(Z,NONSTATIC,Ljwutil/collections/FilterIterator;,done)#20
jwutil.collections.FilterIterator.advance()V#Return(V)#21
jwutil.collections.FilterIterator.next()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#13
jwutil.collections.FilterIterator.next()Ljava/lang/Object;#Get(Ljwutil/collections/Filter;,NONSTATIC,Ljwutil/collections/FilterIterator;,f)#14
jwutil.collections.FilterIterator.next()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,1)#15
jwutil.collections.FilterIterator.next()Ljava/lang/Object;#Invoke(VIRTUAL,Ljwutil/collections/Filter;,map,(Ljava/lang/Object;)Ljava/lang/Object;)#16
jwutil.graphs.EdgeNavigator$AddLeftFilter.map(Ljava/lang/Object;)Ljava/lang/Object;#New(Ljwutil/collections/Pair;,0)#0
jwutil.graphs.EdgeNavigator$AddLeftFilter.map(Ljava/lang/Object;)Ljava/lang/Object;#Dup(1,0)#1
jwutil.graphs.EdgeNavigator$AddLeftFilter.map(Ljava/lang/Object;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#2
jwutil.graphs.EdgeNavigator$AddLeftFilter.map(Ljava/lang/Object;)Ljava/lang/Object;#Get(Ljava/lang/Object;,NONSTATIC,Ljwutil/graphs/EdgeNavigator$AddLeftFilter;,left)#3
jwutil.graphs.EdgeNavigator$AddLeftFilter.map(Ljava/lang/Object;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,1)#4
jwutil.graphs.EdgeNavigator$AddLeftFilter.map(Ljava/lang/Object;)Ljava/lang/Object;#Invoke(SPECIAL,Ljwutil/collections/Pair;,<init>,(Ljava/lang/Object;Ljava/lang/Object;)V)#5
jwutil.graphs.EdgeNavigator$AddLeftFilter.map(Ljava/lang/Object;)Ljava/lang/Object;#Return(Ljava/lang/Object;)#6
jwutil.collections.FilterIterator.next()Ljava/lang/Object;#Return(Ljava/lang/Object;)#17
jwutil.graphs.EdgeNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,1)#4
jwutil.graphs.EdgeNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#CheckCast(Ljwutil/collections/Pair;)#5
jwutil.graphs.EdgeNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#LocalStore(Ljava/lang/Object;,2)#6
jwutil.graphs.EdgeNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,2)#7
jwutil.graphs.EdgeNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#Get(Ljava/lang/Object;,NONSTATIC,Ljwutil/collections/Pair;,right)#8
jwutil.graphs.EdgeNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#Invoke(STATIC,Ljava/util/Collections;,singleton,(Ljava/lang/Object;)Ljava/util/Set;)#9
jwutil.graphs.EdgeNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#Return(Ljava/lang/Object;)#10
jwutil.collections.FilterIterator.hasNext()Z#Constant(I,0)#6
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#LocalLoad(I,4)#71
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#Constant(I,6)#72
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#ConditionalBranch(I,ne,77)#73
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#LocalLoad(Ljava/lang/Object;,3)#74
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#LocalLoad(Ljava/lang/Object;,1)#75
jwutil.graphs.Traversals.traversal_helper(Ljwutil/graphs/Navigator;Ljava/lang/Object;Ljava/util/HashSet;Ljava/util/LinkedList;B)V#Invoke(VIRTUAL,Ljava/util/LinkedList;,addFirst,(Ljava/lang/Object;)V)#76
jwutil.graphs.Traversals.reversePostOrder(Ljwutil/graphs/Navigator;Ljava/util/Collection;)Ljava/util/List;#Return(Ljava/lang/Object;)#4
joeq.Compiler.Dataflow.IterativeSolver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;)V#LocalStore(Ljava/lang/Object;,3)#5
joeq.Compiler.Dataflow.IterativeSolver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,0)#6
joeq.Compiler.Dataflow.IterativeSolver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,1)#7
joeq.Compiler.Dataflow.IterativeSolver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,2)#8
joeq.Compiler.Dataflow.IterativeSolver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,3)#9
joeq.Compiler.Dataflow.IterativeSolver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Dataflow/IterativeSolver;,initialize,(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;Ljava/util/List;)V)#10
joeq.Compiler.Dataflow.IterativeSolver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Dataflow.IterativeSolver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Compiler.Dataflow.IterativeSolver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#2
joeq.Compiler.Dataflow.IterativeSolver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;Ljava/util/List;)V#Invoke(SPECIAL,Ljoeq/Compiler/Dataflow/Solver;,initialize,(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;)V)#3
joeq.Compiler.Dataflow.Solver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Dataflow.Solver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Compiler.Dataflow.Solver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;)V#Put(Ljoeq/Compiler/Dataflow/Problem;,NONSTATIC,Ljoeq/Compiler/Dataflow/Solver;,problem)#2
joeq.Compiler.Dataflow.Solver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Compiler.Dataflow.Solver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,2)#4
joeq.Compiler.Dataflow.Solver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Dataflow/Problem;,initialize,(Ljwutil/graphs/Graph;)V)#5
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,1)#0
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#CheckCast(Ljwutil/graphs/EdgeGraph;)#1
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Invoke(VIRTUAL,Ljwutil/graphs/EdgeGraph;,getGraph,()Ljwutil/graphs/Graph;)#2
jwutil.graphs.EdgeGraph.getGraph()Ljwutil/graphs/Graph;#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.graphs.EdgeGraph.getGraph()Ljwutil/graphs/Graph;#Get(Ljwutil/graphs/Graph;,NONSTATIC,Ljwutil/graphs/EdgeGraph;,g)#1
jwutil.graphs.EdgeGraph.getGraph()Ljwutil/graphs/Graph;#Return(Ljava/lang/Object;)#2
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalStore(Ljava/lang/Object;,2)#3
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,2)#4
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#CheckCast(Ljwutil/graphs/ReverseGraph;)#5
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Invoke(VIRTUAL,Ljwutil/graphs/ReverseGraph;,getGraph,()Ljwutil/graphs/Graph;)#6
jwutil.graphs.ReverseGraph.getGraph()Ljwutil/graphs/Graph;#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.graphs.ReverseGraph.getGraph()Ljwutil/graphs/Graph;#Get(Ljwutil/graphs/Graph;,NONSTATIC,Ljwutil/graphs/ReverseGraph;,_graph)#1
jwutil.graphs.ReverseGraph.getGraph()Ljwutil/graphs/Graph;#Return(Ljava/lang/Object;)#2
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#CheckCast(Ljoeq/Compiler/Quad/ControlFlowGraph;)#7
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalStore(Ljava/lang/Object;,3)#8
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,3)#9
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,getRegisterFactory,()Ljoeq/Compiler/Quad/RegisterFactory;)#10
joeq.Compiler.Quad.ControlFlowGraph.getRegisterFactory()Ljoeq/Compiler/Quad/RegisterFactory;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.ControlFlowGraph.getRegisterFactory()Ljoeq/Compiler/Quad/RegisterFactory;#Get(Ljoeq/Compiler/Quad/RegisterFactory;,NONSTATIC,Ljoeq/Compiler/Quad/ControlFlowGraph;,rf)#1
joeq.Compiler.Quad.ControlFlowGraph.getRegisterFactory()Ljoeq/Compiler/Quad/RegisterFactory;#Return(Ljava/lang/Object;)#2
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/RegisterFactory;,size,()I)#11
joeq.Compiler.Quad.RegisterFactory.size()I#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.RegisterFactory.size()I#Get(Ljava/util/ArrayList;,NONSTATIC,Ljoeq/Compiler/Quad/RegisterFactory;,registers)#1
joeq.Compiler.Quad.RegisterFactory.size()I#Invoke(VIRTUAL,Ljava/util/ArrayList;,size,()I)#2
joeq.Compiler.Quad.RegisterFactory.size()I#Return(I)#3
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Constant(I,1)#12
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#BinaryOp(I,add)#13
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalStore(I,4)#14
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#New(Ljava/util/HashMap;,0)#15
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Dup(1,0)#16
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#17
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalStore(Ljava/lang/Object;,5)#18
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,0)#19
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#New(Ljava/util/HashMap;,0)#20
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Dup(1,0)#21
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#22
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Put(Ljava/util/Map;,NONSTATIC,Ljoeq/Compiler/Dataflow/LivenessAnalysis;,transferFunctions)#23
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,0)#24
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#New(Ljoeq/Compiler/Dataflow/UnionBitVectorFact;,0)#25
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Dup(1,0)#26
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(I,4)#27
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Invoke(SPECIAL,Ljoeq/Compiler/Dataflow/UnionBitVectorFact;,<init>,(I)V)#28
joeq.Compiler.Dataflow.UnionBitVectorFact.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Dataflow.UnionBitVectorFact.<init>(I)V#LocalLoad(I,1)#1
joeq.Compiler.Dataflow.UnionBitVectorFact.<init>(I)V#Invoke(SPECIAL,Ljoeq/Compiler/Dataflow/BitVectorFact;,<init>,(I)V)#2
joeq.Compiler.Dataflow.BitVectorFact.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Dataflow.BitVectorFact.<init>(I)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.Dataflow.BitVectorFact.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Dataflow.BitVectorFact.<init>(I)V#New(Ljwutil/math/BitString;,0)#3
joeq.Compiler.Dataflow.BitVectorFact.<init>(I)V#Dup(1,0)#4
joeq.Compiler.Dataflow.BitVectorFact.<init>(I)V#LocalLoad(I,1)#5
joeq.Compiler.Dataflow.BitVectorFact.<init>(I)V#Invoke(SPECIAL,Ljwutil/math/BitString;,<init>,(I)V)#6
joeq.Compiler.Dataflow.BitVectorFact.<init>(I)V#Put(Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Dataflow/BitVectorFact;,fact)#7
joeq.Compiler.Dataflow.BitVectorFact.<init>(I)V#Return(V)#8
joeq.Compiler.Dataflow.UnionBitVectorFact.<init>(I)V#Return(V)#3
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Put(Ljoeq/Compiler/Dataflow/Fact;,NONSTATIC,Ljoeq/Compiler/Dataflow/LivenessAnalysis;,emptySet)#29
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,0)#30
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#New(Ljoeq/Compiler/Dataflow/GenKillTransferFunction;,0)#31
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Dup(1,0)#32
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(I,4)#33
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Invoke(SPECIAL,Ljoeq/Compiler/Dataflow/GenKillTransferFunction;,<init>,(I)V)#34
joeq.Compiler.Dataflow.GenKillTransferFunction.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Dataflow.GenKillTransferFunction.<init>(I)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.Dataflow.GenKillTransferFunction.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Dataflow.GenKillTransferFunction.<init>(I)V#New(Ljwutil/math/BitString;,0)#3
joeq.Compiler.Dataflow.GenKillTransferFunction.<init>(I)V#Dup(1,0)#4
joeq.Compiler.Dataflow.GenKillTransferFunction.<init>(I)V#LocalLoad(I,1)#5
joeq.Compiler.Dataflow.GenKillTransferFunction.<init>(I)V#Invoke(SPECIAL,Ljwutil/math/BitString;,<init>,(I)V)#6
joeq.Compiler.Dataflow.GenKillTransferFunction.<init>(I)V#Put(Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Dataflow/GenKillTransferFunction;,gen)#7
joeq.Compiler.Dataflow.GenKillTransferFunction.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#8
joeq.Compiler.Dataflow.GenKillTransferFunction.<init>(I)V#New(Ljwutil/math/BitString;,0)#9
joeq.Compiler.Dataflow.GenKillTransferFunction.<init>(I)V#Dup(1,0)#10
joeq.Compiler.Dataflow.GenKillTransferFunction.<init>(I)V#LocalLoad(I,1)#11
joeq.Compiler.Dataflow.GenKillTransferFunction.<init>(I)V#Invoke(SPECIAL,Ljwutil/math/BitString;,<init>,(I)V)#12
joeq.Compiler.Dataflow.GenKillTransferFunction.<init>(I)V#Put(Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Dataflow/GenKillTransferFunction;,kill)#13
joeq.Compiler.Dataflow.GenKillTransferFunction.<init>(I)V#Return(V)#14
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Put(Ljoeq/Compiler/Dataflow/TransferFunction;,NONSTATIC,Ljoeq/Compiler/Dataflow/LivenessAnalysis;,emptyTF)#35
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,3)#36
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,reversePostOrder,()Ljava/util/List;)#37
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#38
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalStore(Ljava/lang/Object;,6)#39
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,6)#40
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#41
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Constant(I,0)#42
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#ConditionalBranch(I,eq,162)#43
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,6)#44
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#45
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#CheckCast(Ljoeq/Compiler/Quad/BasicBlock;)#46
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalStore(Ljava/lang/Object;,7)#47
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#New(Ljwutil/math/BitString;,0)#48
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Dup(1,0)#49
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(I,4)#50
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Invoke(SPECIAL,Ljwutil/math/BitString;,<init>,(I)V)#51
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalStore(Ljava/lang/Object;,8)#52
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#New(Ljwutil/math/BitString;,0)#53
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Dup(1,0)#54
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(I,4)#55
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Invoke(SPECIAL,Ljwutil/math/BitString;,<init>,(I)V)#56
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalStore(Ljava/lang/Object;,9)#57
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,7)#58
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,size,()I)#59
joeq.Compiler.Quad.BasicBlock.size()I#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BasicBlock.size()I#Get(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,instructions)#1
joeq.Compiler.Quad.BasicBlock.size()I#Constant(L;,null)#2
joeq.Compiler.Quad.BasicBlock.size()I#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
joeq.Compiler.Quad.BasicBlock.size()I#Constant(I,0)#4
joeq.Compiler.Quad.BasicBlock.size()I#Return(I)#5
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Constant(I,1)#60
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#BinaryOp(I,sub)#61
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalStore(I,10)#62
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(I,10)#63
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Constant(I,0)#64
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#ConditionalBranch(I,lt,126)#65
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#New(Ljoeq/Compiler/Dataflow/GenKillTransferFunction;,0)#126
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Dup(1,0)#127
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,8)#128
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#New(Ljwutil/math/BitString;,0)#129
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Dup(1,0)#130
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(I,4)#131
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Invoke(SPECIAL,Ljwutil/math/BitString;,<init>,(I)V)#132
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Invoke(SPECIAL,Ljoeq/Compiler/Dataflow/GenKillTransferFunction;,<init>,(Ljwutil/math/BitString;Ljwutil/math/BitString;)V)#133
joeq.Compiler.Dataflow.GenKillTransferFunction.<init>(Ljwutil/math/BitString;Ljwutil/math/BitString;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Dataflow.GenKillTransferFunction.<init>(Ljwutil/math/BitString;Ljwutil/math/BitString;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.Dataflow.GenKillTransferFunction.<init>(Ljwutil/math/BitString;Ljwutil/math/BitString;)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Dataflow.GenKillTransferFunction.<init>(Ljwutil/math/BitString;Ljwutil/math/BitString;)V#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Compiler.Dataflow.GenKillTransferFunction.<init>(Ljwutil/math/BitString;Ljwutil/math/BitString;)V#Put(Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Dataflow/GenKillTransferFunction;,gen)#4
joeq.Compiler.Dataflow.GenKillTransferFunction.<init>(Ljwutil/math/BitString;Ljwutil/math/BitString;)V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Compiler.Dataflow.GenKillTransferFunction.<init>(Ljwutil/math/BitString;Ljwutil/math/BitString;)V#LocalLoad(Ljava/lang/Object;,2)#6
joeq.Compiler.Dataflow.GenKillTransferFunction.<init>(Ljwutil/math/BitString;Ljwutil/math/BitString;)V#Put(Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Dataflow/GenKillTransferFunction;,kill)#7
joeq.Compiler.Dataflow.GenKillTransferFunction.<init>(Ljwutil/math/BitString;Ljwutil/math/BitString;)V#Return(V)#8
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalStore(Ljava/lang/Object;,10)#134
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,10)#135
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Get(Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Dataflow/GenKillTransferFunction;,gen)#136
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,8)#137
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Invoke(VIRTUAL,Ljwutil/math/BitString;,or,(Ljwutil/math/BitString;)Z)#138
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#LocalLoad(Ljava/lang/Object;,1)#1
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#ConditionalBranch(Ljava/lang/Object;,ne,5)#2
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#Constant(I,0)#3
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#Return(I)#4
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Pop(1)#139
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,10)#140
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Get(Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Dataflow/GenKillTransferFunction;,kill)#141
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,9)#142
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Invoke(VIRTUAL,Ljwutil/math/BitString;,or,(Ljwutil/math/BitString;)Z)#143
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#LocalLoad(Ljava/lang/Object;,1)#5
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#6
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#ArrayLength()#7
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#LocalStore(I,2)#8
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#Constant(I,0)#9
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#LocalStore(I,3)#10
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#LocalLoad(I,2)#11
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#LocalStore(I,4)#12
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#LocalLoad(I,4)#13
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#Dup(1,0)#14
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#Constant(I,1)#15
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#BinaryOp(I,sub)#16
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#LocalStore(I,4)#17
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#Constant(I,0)#18
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#ConditionalBranch(I,le,49)#19
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#LocalLoad(Ljava/lang/Object;,0)#20
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#21
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#LocalLoad(I,4)#22
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#ArrayLoad(I)#23
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#LocalStore(I,5)#24
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#LocalLoad(Ljava/lang/Object;,0)#25
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#26
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#LocalLoad(I,4)#27
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#Dup(2,0)#28
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#ArrayLoad(I)#29
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#LocalLoad(Ljava/lang/Object;,1)#30
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#31
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#LocalLoad(I,4)#32
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#ArrayLoad(I)#33
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#BinaryOp(I,or)#34
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#ArrayStore(I)#35
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#LocalLoad(I,3)#36
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#LocalLoad(I,5)#37
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#LocalLoad(Ljava/lang/Object;,0)#38
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#39
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#LocalLoad(I,4)#40
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#ArrayLoad(I)#41
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#ConditionalBranch(I,eq,45)#42
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#Constant(I,0)#45
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#BinaryOp(I,or)#46
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#LocalStore(I,3)#47
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#Goto(13)#48
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#LocalLoad(I,3)#49
jwutil.math.BitString.or(Ljwutil/math/BitString;)Z#Return(I)#50
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Pop(1)#144
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,0)#145
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Get(Ljava/util/Map;,NONSTATIC,Ljoeq/Compiler/Dataflow/LivenessAnalysis;,transferFunctions)#146
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,7)#147
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#148
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Constant(I,0)#149
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#ConditionalBranch(I,ne,153)#150
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Constant(I,1)#151
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Goto(154)#152
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#154
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,0)#155
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Get(Ljava/util/Map;,NONSTATIC,Ljoeq/Compiler/Dataflow/LivenessAnalysis;,transferFunctions)#156
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,7)#157
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,10)#158
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#159
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Pop(1)#160
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Goto(40)#161
joeq.Compiler.Quad.BasicBlock.size()I#LocalLoad(Ljava/lang/Object;,0)#6
joeq.Compiler.Quad.BasicBlock.size()I#Get(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,instructions)#7
joeq.Compiler.Quad.BasicBlock.size()I#Invoke(INTERFACE,Ljava/util/List;,size,()I)#8
joeq.Compiler.Quad.BasicBlock.size()I#Return(I)#9
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,7)#66
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(I,10)#67
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getQuad,(I)Ljoeq/Compiler/Quad/Quad;)#68
joeq.Compiler.Quad.BasicBlock.getQuad(I)Ljoeq/Compiler/Quad/Quad;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BasicBlock.getQuad(I)Ljoeq/Compiler/Quad/Quad;#Get(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,instructions)#1
joeq.Compiler.Quad.BasicBlock.getQuad(I)Ljoeq/Compiler/Quad/Quad;#LocalLoad(I,1)#2
joeq.Compiler.Quad.BasicBlock.getQuad(I)Ljoeq/Compiler/Quad/Quad;#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#3
joeq.Compiler.Quad.BasicBlock.getQuad(I)Ljoeq/Compiler/Quad/Quad;#CheckCast(Ljoeq/Compiler/Quad/Quad;)#4
joeq.Compiler.Quad.BasicBlock.getQuad(I)Ljoeq/Compiler/Quad/Quad;#Return(Ljava/lang/Object;)#5
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalStore(Ljava/lang/Object;,11)#69
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,11)#70
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getDefinedRegisters,()Ljava/util/List;)#71
joeq.Compiler.Quad.Quad.getDefinedRegisters()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Quad.getDefinedRegisters()Ljava/util/List;#Get(Ljoeq/Compiler/Quad/Operator;,NONSTATIC,Ljoeq/Compiler/Quad/Quad;,operator)#1
joeq.Compiler.Quad.Quad.getDefinedRegisters()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.Quad.getDefinedRegisters()Ljava/util/List;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Operator;,getDefinedRegisters,(Ljoeq/Compiler/Quad/Quad;)Ljava/util/List;)#3
joeq.Compiler.Quad.Operator.getDefinedRegisters(Ljoeq/Compiler/Quad/Quad;)Ljava/util/List;#Get(Ljava/util/List;,STATIC,Ljoeq/Compiler/Quad/Operator;,noregisters)#0
joeq.Compiler.Quad.Operator.getDefinedRegisters(Ljoeq/Compiler/Quad/Quad;)Ljava/util/List;#Return(Ljava/lang/Object;)#1
joeq.Compiler.Quad.Quad.getDefinedRegisters()Ljava/util/List;#Return(Ljava/lang/Object;)#4
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#72
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalStore(Ljava/lang/Object;,12)#73
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,12)#74
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#75
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Constant(I,0)#76
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#ConditionalBranch(I,eq,97)#77
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,11)#97
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getUsedRegisters,()Ljava/util/List;)#98
joeq.Compiler.Quad.Quad.getUsedRegisters()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Quad.getUsedRegisters()Ljava/util/List;#Get(Ljoeq/Compiler/Quad/Operator;,NONSTATIC,Ljoeq/Compiler/Quad/Quad;,operator)#1
joeq.Compiler.Quad.Quad.getUsedRegisters()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Quad.Quad.getUsedRegisters()Ljava/util/List;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Operator;,getUsedRegisters,(Ljoeq/Compiler/Quad/Quad;)Ljava/util/List;)#3
joeq.Compiler.Quad.Operator.getUsedRegisters(Ljoeq/Compiler/Quad/Quad;)Ljava/util/List;#Get(Ljava/util/List;,STATIC,Ljoeq/Compiler/Quad/Operator;,noregisters)#0
joeq.Compiler.Quad.Operator.getUsedRegisters(Ljoeq/Compiler/Quad/Quad;)Ljava/util/List;#Return(Ljava/lang/Object;)#1
joeq.Compiler.Quad.Quad.getUsedRegisters()Ljava/util/List;#Return(Ljava/lang/Object;)#4
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#99
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalStore(Ljava/lang/Object;,12)#100
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(Ljava/lang/Object;,12)#101
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#102
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Constant(I,0)#103
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#ConditionalBranch(I,eq,121)#104
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalLoad(I,10)#121
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Constant(I,-1)#122
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#BinaryOp(I,add)#123
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#LocalStore(I,10)#124
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Goto(63)#125
joeq.Compiler.Quad.Operator$Invoke.getUsedRegisters(Ljoeq/Compiler/Quad/Quad;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#0
joeq.Compiler.Quad.Operator$Invoke.getUsedRegisters(Ljoeq/Compiler/Quad/Quad;)Ljava/util/List;#Invoke(STATIC,Ljoeq/Compiler/Quad/Operator$Invoke;,getParamList,(Ljoeq/Compiler/Quad/Quad;)Ljoeq/Compiler/Quad/Operand$ParamListOperand;)#1
joeq.Compiler.Quad.Operator$Invoke.getParamList(Ljoeq/Compiler/Quad/Quad;)Ljoeq/Compiler/Quad/Operand$ParamListOperand;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operator$Invoke.getParamList(Ljoeq/Compiler/Quad/Quad;)Ljoeq/Compiler/Quad/Operand$ParamListOperand;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getOp3,()Ljoeq/Compiler/Quad/Operand;)#1
joeq.Compiler.Quad.Operator$Invoke.getParamList(Ljoeq/Compiler/Quad/Quad;)Ljoeq/Compiler/Quad/Operand$ParamListOperand;#CheckCast(Ljoeq/Compiler/Quad/Operand$ParamListOperand;)#2
joeq.Compiler.Quad.Operator$Invoke.getParamList(Ljoeq/Compiler/Quad/Quad;)Ljoeq/Compiler/Quad/Operand$ParamListOperand;#Return(Ljava/lang/Object;)#3
joeq.Compiler.Quad.Operator$Invoke.getUsedRegisters(Ljoeq/Compiler/Quad/Quad;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,2)#2
joeq.Compiler.Quad.Operator$Invoke.getUsedRegisters(Ljoeq/Compiler/Quad/Quad;)Ljava/util/List;#New(Ljava/util/ArrayList;,0)#3
joeq.Compiler.Quad.Operator$Invoke.getUsedRegisters(Ljoeq/Compiler/Quad/Quad;)Ljava/util/List;#Dup(1,0)#4
joeq.Compiler.Quad.Operator$Invoke.getUsedRegisters(Ljoeq/Compiler/Quad/Quad;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#5
joeq.Compiler.Quad.Operator$Invoke.getUsedRegisters(Ljoeq/Compiler/Quad/Quad;)Ljava/util/List;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Operand$ParamListOperand;,length,()I)#6
joeq.Compiler.Quad.Operand$ParamListOperand.length()I#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operand$ParamListOperand.length()I#Get([Ljoeq/Compiler/Quad/Operand$RegisterOperand;,NONSTATIC,Ljoeq/Compiler/Quad/Operand$ParamListOperand;,params)#1
joeq.Compiler.Quad.Operand$ParamListOperand.length()I#ArrayLength()#2
joeq.Compiler.Quad.Operand$ParamListOperand.length()I#Return(I)#3
joeq.Compiler.Quad.Operator$Invoke.getUsedRegisters(Ljoeq/Compiler/Quad/Quad;)Ljava/util/List;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,(I)V)#7
joeq.Compiler.Quad.Operator$Invoke.getUsedRegisters(Ljoeq/Compiler/Quad/Quad;)Ljava/util/List;#LocalStore(Ljava/lang/Object;,3)#8
joeq.Compiler.Quad.Operator$Invoke.getUsedRegisters(Ljoeq/Compiler/Quad/Quad;)Ljava/util/List;#Constant(I,0)#9
joeq.Compiler.Quad.Operator$Invoke.getUsedRegisters(Ljoeq/Compiler/Quad/Quad;)Ljava/util/List;#LocalStore(I,4)#10
joeq.Compiler.Quad.Operator$Invoke.getUsedRegisters(Ljoeq/Compiler/Quad/Quad;)Ljava/util/List;#LocalLoad(I,4)#11
joeq.Compiler.Quad.Operator$Invoke.getUsedRegisters(Ljoeq/Compiler/Quad/Quad;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#12
joeq.Compiler.Quad.Operator$Invoke.getUsedRegisters(Ljoeq/Compiler/Quad/Quad;)Ljava/util/List;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Operand$ParamListOperand;,length,()I)#13
joeq.Compiler.Quad.Operator$Invoke.getUsedRegisters(Ljoeq/Compiler/Quad/Quad;)Ljava/util/List;#ConditionalBranch(I,ge,26)#14
joeq.Compiler.Quad.Operator$Invoke.getUsedRegisters(Ljoeq/Compiler/Quad/Quad;)Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#26
joeq.Compiler.Quad.Operator$Invoke.getUsedRegisters(Ljoeq/Compiler/Quad/Quad;)Ljava/util/List;#Return(Ljava/lang/Object;)#27
joeq.Compiler.Dataflow.LivenessAnalysis.initialize(Ljwutil/graphs/Graph;)V#Return(V)#162
joeq.Compiler.Dataflow.Solver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;)V#Return(V)#6
joeq.Compiler.Dataflow.IterativeSolver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#4
joeq.Compiler.Dataflow.IterativeSolver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#5
joeq.Compiler.Dataflow.IterativeSolver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;Ljava/util/List;)V#Invoke(INTERFACE,Ljwutil/graphs/Graph;,getNavigator,()Ljwutil/graphs/Navigator;)#6
joeq.Compiler.Dataflow.IterativeSolver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;Ljava/util/List;)V#Put(Ljwutil/graphs/Navigator;,NONSTATIC,Ljoeq/Compiler/Dataflow/IterativeSolver;,graphNavigator)#7
joeq.Compiler.Dataflow.IterativeSolver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#8
joeq.Compiler.Dataflow.IterativeSolver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,2)#9
joeq.Compiler.Dataflow.IterativeSolver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;Ljava/util/List;)V#Invoke(INTERFACE,Ljwutil/graphs/Graph;,getRoots,()Ljava/util/Collection;)#10
joeq.Compiler.Dataflow.IterativeSolver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;Ljava/util/List;)V#Put(Ljava/util/Collection;,NONSTATIC,Ljoeq/Compiler/Dataflow/IterativeSolver;,boundaries)#11
joeq.Compiler.Dataflow.IterativeSolver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,0)#12
joeq.Compiler.Dataflow.IterativeSolver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#13
joeq.Compiler.Dataflow.IterativeSolver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;Ljava/util/List;)V#Put(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Dataflow/IterativeSolver;,traversalOrder)#14
joeq.Compiler.Dataflow.IterativeSolver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;Ljava/util/List;)V#Return(V)#15
joeq.Compiler.Dataflow.IterativeSolver.initialize(Ljoeq/Compiler/Dataflow/Problem;Ljwutil/graphs/Graph;)V#Return(V)#11
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;Ljoeq/Compiler/Dataflow/Solver;Ljoeq/Compiler/Dataflow/Problem;)V#LocalLoad(Ljava/lang/Object;,1)#13
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;Ljoeq/Compiler/Dataflow/Solver;Ljoeq/Compiler/Dataflow/Problem;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Dataflow/Solver;,solve,()V)#14
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Invoke(VIRTUAL,Ljoeq/Compiler/Dataflow/IterativeSolver;,initializeDataflowValueMap,()V)#1
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#LocalLoad(Ljava/lang/Object;,0)#1
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#Get(Ljwutil/collections/MapFactory;,NONSTATIC,Ljoeq/Compiler/Dataflow/Solver;,factory)#2
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#Invoke(VIRTUAL,Ljwutil/collections/MapFactory;,makeMap,()Ljava/util/Map;)#3
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#Put(Ljava/util/Map;,NONSTATIC,Ljoeq/Compiler/Dataflow/Solver;,dataflowValues)#4
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#Invoke(VIRTUAL,Ljoeq/Compiler/Dataflow/Solver;,allLocations,()Ljava/util/Iterator;)#6
joeq.Compiler.Dataflow.IterativeSolver.allLocations()Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Dataflow.IterativeSolver.allLocations()Ljava/util/Iterator;#Get(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Dataflow/IterativeSolver;,traversalOrder)#1
joeq.Compiler.Dataflow.IterativeSolver.allLocations()Ljava/util/Iterator;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#2
joeq.Compiler.Dataflow.IterativeSolver.allLocations()Ljava/util/Iterator;#Return(Ljava/lang/Object;)#3
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#LocalStore(Ljava/lang/Object;,1)#7
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#LocalLoad(Ljava/lang/Object;,1)#8
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#9
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#Constant(I,0)#10
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#ConditionalBranch(I,eq,24)#11
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#LocalLoad(Ljava/lang/Object;,1)#12
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#13
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#LocalStore(Ljava/lang/Object;,2)#14
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#LocalLoad(Ljava/lang/Object;,0)#15
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#Get(Ljava/util/Map;,NONSTATIC,Ljoeq/Compiler/Dataflow/Solver;,dataflowValues)#16
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#LocalLoad(Ljava/lang/Object;,2)#17
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#LocalLoad(Ljava/lang/Object;,0)#18
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#Get(Ljoeq/Compiler/Dataflow/Problem;,NONSTATIC,Ljoeq/Compiler/Dataflow/Solver;,problem)#19
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#Invoke(VIRTUAL,Ljoeq/Compiler/Dataflow/Problem;,interior,()Ljoeq/Compiler/Dataflow/Fact;)#20
joeq.Compiler.Dataflow.LivenessAnalysis.interior()Ljoeq/Compiler/Dataflow/Fact;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Dataflow.LivenessAnalysis.interior()Ljoeq/Compiler/Dataflow/Fact;#Get(Ljoeq/Compiler/Dataflow/Fact;,NONSTATIC,Ljoeq/Compiler/Dataflow/LivenessAnalysis;,emptySet)#1
joeq.Compiler.Dataflow.LivenessAnalysis.interior()Ljoeq/Compiler/Dataflow/Fact;#Return(Ljava/lang/Object;)#2
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#21
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#Pop(1)#22
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#Goto(8)#23
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#LocalLoad(Ljava/lang/Object;,0)#24
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#Invoke(VIRTUAL,Ljoeq/Compiler/Dataflow/Solver;,boundaryLocations,()Ljava/util/Iterator;)#25
joeq.Compiler.Dataflow.IterativeSolver.boundaryLocations()Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Dataflow.IterativeSolver.boundaryLocations()Ljava/util/Iterator;#Get(Ljava/util/Collection;,NONSTATIC,Ljoeq/Compiler/Dataflow/IterativeSolver;,boundaries)#1
joeq.Compiler.Dataflow.IterativeSolver.boundaryLocations()Ljava/util/Iterator;#Invoke(INTERFACE,Ljava/util/Collection;,iterator,()Ljava/util/Iterator;)#2
joeq.Compiler.Dataflow.IterativeSolver.boundaryLocations()Ljava/util/Iterator;#Return(Ljava/lang/Object;)#3
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#LocalStore(Ljava/lang/Object;,1)#26
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#LocalLoad(Ljava/lang/Object;,1)#27
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#28
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#Constant(I,0)#29
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#ConditionalBranch(I,eq,43)#30
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#LocalLoad(Ljava/lang/Object;,1)#31
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#32
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#LocalStore(Ljava/lang/Object;,2)#33
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#LocalLoad(Ljava/lang/Object;,0)#34
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#Get(Ljava/util/Map;,NONSTATIC,Ljoeq/Compiler/Dataflow/Solver;,dataflowValues)#35
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#LocalLoad(Ljava/lang/Object;,2)#36
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#LocalLoad(Ljava/lang/Object;,0)#37
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#Get(Ljoeq/Compiler/Dataflow/Problem;,NONSTATIC,Ljoeq/Compiler/Dataflow/Solver;,problem)#38
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#Invoke(VIRTUAL,Ljoeq/Compiler/Dataflow/Problem;,boundary,()Ljoeq/Compiler/Dataflow/Fact;)#39
joeq.Compiler.Dataflow.LivenessAnalysis.boundary()Ljoeq/Compiler/Dataflow/Fact;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Dataflow.LivenessAnalysis.boundary()Ljoeq/Compiler/Dataflow/Fact;#Get(Ljoeq/Compiler/Dataflow/Fact;,NONSTATIC,Ljoeq/Compiler/Dataflow/LivenessAnalysis;,emptySet)#1
joeq.Compiler.Dataflow.LivenessAnalysis.boundary()Ljoeq/Compiler/Dataflow/Fact;#Return(Ljava/lang/Object;)#2
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#40
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#Pop(1)#41
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#Goto(27)#42
joeq.Compiler.Dataflow.Solver.initializeDataflowValueMap()V#Return(V)#43
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Constant(I,0)#2
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalStore(I,1)#3
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalLoad(Ljava/lang/Object;,0)#4
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Constant(I,0)#5
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Put(Z,NONSTATIC,Ljoeq/Compiler/Dataflow/IterativeSolver;,change)#6
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalLoad(Ljava/lang/Object;,0)#7
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Invoke(VIRTUAL,Ljoeq/Compiler/Dataflow/IterativeSolver;,getTraversalOrder,()Ljava/util/Iterator;)#8
joeq.Compiler.Dataflow.IterativeSolver.getTraversalOrder()Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Dataflow.IterativeSolver.getTraversalOrder()Ljava/util/Iterator;#Get(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Dataflow/IterativeSolver;,traversalOrder)#1
joeq.Compiler.Dataflow.IterativeSolver.getTraversalOrder()Ljava/util/Iterator;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#2
joeq.Compiler.Dataflow.IterativeSolver.getTraversalOrder()Ljava/util/Iterator;#Return(Ljava/lang/Object;)#3
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalStore(Ljava/lang/Object;,2)#9
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalLoad(Ljava/lang/Object;,2)#10
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#11
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalStore(Ljava/lang/Object;,3)#12
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalLoad(Ljava/lang/Object;,0)#13
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Get(Ljava/util/Collection;,NONSTATIC,Ljoeq/Compiler/Dataflow/IterativeSolver;,boundaries)#14
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalLoad(Ljava/lang/Object;,3)#15
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Invoke(INTERFACE,Ljava/util/Collection;,contains,(Ljava/lang/Object;)Z)#16
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Invoke(STATIC,Ljwutil/util/Assert;,_assert,(Z)V)#17
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalLoad(Ljava/lang/Object;,2)#18
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#19
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Constant(I,0)#20
joeq.Compiler.Dataflow.IterativeSolver.solve()V#ConditionalBranch(I,eq,92)#21
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalLoad(Ljava/lang/Object;,2)#22
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#23
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalStore(Ljava/lang/Object;,4)#24
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalLoad(Ljava/lang/Object;,0)#25
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalLoad(Ljava/lang/Object;,4)#26
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Invoke(VIRTUAL,Ljoeq/Compiler/Dataflow/IterativeSolver;,getPredecessors,(Ljava/lang/Object;)Ljava/util/Collection;)#27
joeq.Compiler.Dataflow.IterativeSolver.getPredecessors(Ljava/lang/Object;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Dataflow.IterativeSolver.getPredecessors(Ljava/lang/Object;)Ljava/util/Collection;#Get(Ljwutil/graphs/Navigator;,NONSTATIC,Ljoeq/Compiler/Dataflow/IterativeSolver;,graphNavigator)#1
joeq.Compiler.Dataflow.IterativeSolver.getPredecessors(Ljava/lang/Object;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,1)#2
joeq.Compiler.Dataflow.IterativeSolver.getPredecessors(Ljava/lang/Object;)Ljava/util/Collection;#Invoke(INTERFACE,Ljwutil/graphs/Navigator;,prev,(Ljava/lang/Object;)Ljava/util/Collection;)#3
jwutil.graphs.EdgeNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,1)#0
jwutil.graphs.EdgeNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#Instanceof(Ljwutil/collections/Pair;)#1
jwutil.graphs.EdgeNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#Constant(I,0)#2
jwutil.graphs.EdgeNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#ConditionalBranch(I,eq,11)#3
jwutil.graphs.EdgeNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,1)#4
jwutil.graphs.EdgeNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#CheckCast(Ljwutil/collections/Pair;)#5
jwutil.graphs.EdgeNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#LocalStore(Ljava/lang/Object;,2)#6
jwutil.graphs.EdgeNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,2)#7
jwutil.graphs.EdgeNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#Get(Ljava/lang/Object;,NONSTATIC,Ljwutil/collections/Pair;,left)#8
jwutil.graphs.EdgeNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#Invoke(STATIC,Ljava/util/Collections;,singleton,(Ljava/lang/Object;)Ljava/util/Set;)#9
jwutil.graphs.EdgeNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#Return(Ljava/lang/Object;)#10
joeq.Compiler.Dataflow.IterativeSolver.getPredecessors(Ljava/lang/Object;)Ljava/util/Collection;#Return(Ljava/lang/Object;)#4
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Invoke(INTERFACE,Ljava/util/Collection;,iterator,()Ljava/util/Iterator;)#28
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalStore(Ljava/lang/Object;,5)#29
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalLoad(Ljava/lang/Object;,5)#30
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#31
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalStore(Ljava/lang/Object;,6)#32
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalLoad(Ljava/lang/Object;,0)#33
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Get(Ljava/util/Map;,NONSTATIC,Ljoeq/Compiler/Dataflow/IterativeSolver;,dataflowValues)#34
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalLoad(Ljava/lang/Object;,6)#35
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#36
joeq.Compiler.Dataflow.IterativeSolver.solve()V#CheckCast(Ljoeq/Compiler/Dataflow/Fact;)#37
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalStore(Ljava/lang/Object;,7)#38
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalLoad(Ljava/lang/Object;,5)#39
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#40
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Constant(I,0)#41
joeq.Compiler.Dataflow.IterativeSolver.solve()V#ConditionalBranch(I,eq,59)#42
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalLoad(Ljava/lang/Object;,0)#59
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Get(Ljoeq/Compiler/Dataflow/Problem;,NONSTATIC,Ljoeq/Compiler/Dataflow/IterativeSolver;,problem)#60
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalLoad(Ljava/lang/Object;,4)#61
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Invoke(VIRTUAL,Ljoeq/Compiler/Dataflow/Problem;,getTransferFunction,(Ljava/lang/Object;)Ljoeq/Compiler/Dataflow/TransferFunction;)#62
joeq.Compiler.Dataflow.LivenessAnalysis.getTransferFunction(Ljava/lang/Object;)Ljoeq/Compiler/Dataflow/TransferFunction;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Dataflow.LivenessAnalysis.getTransferFunction(Ljava/lang/Object;)Ljoeq/Compiler/Dataflow/TransferFunction;#Get(Ljava/util/Map;,NONSTATIC,Ljoeq/Compiler/Dataflow/LivenessAnalysis;,transferFunctions)#1
joeq.Compiler.Dataflow.LivenessAnalysis.getTransferFunction(Ljava/lang/Object;)Ljoeq/Compiler/Dataflow/TransferFunction;#LocalLoad(Ljava/lang/Object;,1)#2
joeq.Compiler.Dataflow.LivenessAnalysis.getTransferFunction(Ljava/lang/Object;)Ljoeq/Compiler/Dataflow/TransferFunction;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
joeq.Compiler.Dataflow.LivenessAnalysis.getTransferFunction(Ljava/lang/Object;)Ljoeq/Compiler/Dataflow/TransferFunction;#CheckCast(Ljoeq/Compiler/Dataflow/TransferFunction;)#4
joeq.Compiler.Dataflow.LivenessAnalysis.getTransferFunction(Ljava/lang/Object;)Ljoeq/Compiler/Dataflow/TransferFunction;#LocalStore(Ljava/lang/Object;,2)#5
joeq.Compiler.Dataflow.LivenessAnalysis.getTransferFunction(Ljava/lang/Object;)Ljoeq/Compiler/Dataflow/TransferFunction;#LocalLoad(Ljava/lang/Object;,2)#6
joeq.Compiler.Dataflow.LivenessAnalysis.getTransferFunction(Ljava/lang/Object;)Ljoeq/Compiler/Dataflow/TransferFunction;#Constant(L;,null)#7
joeq.Compiler.Dataflow.LivenessAnalysis.getTransferFunction(Ljava/lang/Object;)Ljoeq/Compiler/Dataflow/TransferFunction;#ConditionalBranch(Ljava/lang/Object;,ne,12)#8
joeq.Compiler.Dataflow.LivenessAnalysis.getTransferFunction(Ljava/lang/Object;)Ljoeq/Compiler/Dataflow/TransferFunction;#LocalLoad(Ljava/lang/Object;,0)#9
joeq.Compiler.Dataflow.LivenessAnalysis.getTransferFunction(Ljava/lang/Object;)Ljoeq/Compiler/Dataflow/TransferFunction;#Get(Ljoeq/Compiler/Dataflow/TransferFunction;,NONSTATIC,Ljoeq/Compiler/Dataflow/LivenessAnalysis;,emptyTF)#10
joeq.Compiler.Dataflow.LivenessAnalysis.getTransferFunction(Ljava/lang/Object;)Ljoeq/Compiler/Dataflow/TransferFunction;#LocalStore(Ljava/lang/Object;,2)#11
joeq.Compiler.Dataflow.LivenessAnalysis.getTransferFunction(Ljava/lang/Object;)Ljoeq/Compiler/Dataflow/TransferFunction;#LocalLoad(Ljava/lang/Object;,2)#12
joeq.Compiler.Dataflow.LivenessAnalysis.getTransferFunction(Ljava/lang/Object;)Ljoeq/Compiler/Dataflow/TransferFunction;#Return(Ljava/lang/Object;)#13
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalStore(Ljava/lang/Object;,8)#63
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalLoad(Ljava/lang/Object;,0)#64
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Get(Ljoeq/Compiler/Dataflow/Problem;,NONSTATIC,Ljoeq/Compiler/Dataflow/IterativeSolver;,problem)#65
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalLoad(Ljava/lang/Object;,8)#66
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalLoad(Ljava/lang/Object;,7)#67
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Invoke(VIRTUAL,Ljoeq/Compiler/Dataflow/Problem;,apply,(Ljoeq/Compiler/Dataflow/TransferFunction;Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;)#68
joeq.Compiler.Dataflow.Problem.apply(Ljoeq/Compiler/Dataflow/TransferFunction;Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#LocalLoad(Ljava/lang/Object;,1)#0
joeq.Compiler.Dataflow.Problem.apply(Ljoeq/Compiler/Dataflow/TransferFunction;Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#LocalLoad(Ljava/lang/Object;,2)#1
joeq.Compiler.Dataflow.Problem.apply(Ljoeq/Compiler/Dataflow/TransferFunction;Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#Invoke(INTERFACE,Ljoeq/Compiler/Dataflow/TransferFunction;,apply,(Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;)#2
joeq.Compiler.Dataflow.GenKillTransferFunction.apply(Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#LocalLoad(Ljava/lang/Object;,1)#0
joeq.Compiler.Dataflow.GenKillTransferFunction.apply(Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#CheckCast(Ljoeq/Compiler/Dataflow/BitVectorFact;)#1
joeq.Compiler.Dataflow.GenKillTransferFunction.apply(Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#LocalStore(Ljava/lang/Object;,2)#2
joeq.Compiler.Dataflow.GenKillTransferFunction.apply(Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#New(Ljwutil/math/BitString;,0)#3
joeq.Compiler.Dataflow.GenKillTransferFunction.apply(Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#Dup(1,0)#4
joeq.Compiler.Dataflow.GenKillTransferFunction.apply(Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#LocalLoad(Ljava/lang/Object;,2)#5
joeq.Compiler.Dataflow.GenKillTransferFunction.apply(Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#Get(Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Dataflow/BitVectorFact;,fact)#6
joeq.Compiler.Dataflow.GenKillTransferFunction.apply(Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#Invoke(VIRTUAL,Ljwutil/math/BitString;,size,()I)#7
joeq.Compiler.Dataflow.GenKillTransferFunction.apply(Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#Invoke(SPECIAL,Ljwutil/math/BitString;,<init>,(I)V)#8
joeq.Compiler.Dataflow.GenKillTransferFunction.apply(Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#LocalStore(Ljava/lang/Object;,3)#9
joeq.Compiler.Dataflow.GenKillTransferFunction.apply(Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#LocalLoad(Ljava/lang/Object;,3)#10
joeq.Compiler.Dataflow.GenKillTransferFunction.apply(Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#LocalLoad(Ljava/lang/Object;,2)#11
joeq.Compiler.Dataflow.GenKillTransferFunction.apply(Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#Get(Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Dataflow/BitVectorFact;,fact)#12
joeq.Compiler.Dataflow.GenKillTransferFunction.apply(Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#Invoke(VIRTUAL,Ljwutil/math/BitString;,or,(Ljwutil/math/BitString;)Z)#13
joeq.Compiler.Dataflow.GenKillTransferFunction.apply(Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#Pop(1)#14
joeq.Compiler.Dataflow.GenKillTransferFunction.apply(Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#LocalLoad(Ljava/lang/Object;,3)#15
joeq.Compiler.Dataflow.GenKillTransferFunction.apply(Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#LocalLoad(Ljava/lang/Object;,0)#16
joeq.Compiler.Dataflow.GenKillTransferFunction.apply(Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#Get(Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Dataflow/GenKillTransferFunction;,kill)#17
joeq.Compiler.Dataflow.GenKillTransferFunction.apply(Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#Invoke(VIRTUAL,Ljwutil/math/BitString;,minus,(Ljwutil/math/BitString;)Z)#18
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#1
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#ArrayLength()#2
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#LocalStore(I,2)#3
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#Constant(I,0)#4
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#LocalStore(I,3)#5
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#LocalLoad(I,2)#6
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#LocalStore(I,4)#7
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#LocalLoad(I,4)#8
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#Dup(1,0)#9
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#Constant(I,1)#10
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#BinaryOp(I,sub)#11
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#LocalStore(I,4)#12
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#Constant(I,0)#13
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#ConditionalBranch(I,le,46)#14
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#LocalLoad(Ljava/lang/Object;,0)#15
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#16
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#LocalLoad(I,4)#17
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#ArrayLoad(I)#18
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#LocalStore(I,5)#19
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#LocalLoad(Ljava/lang/Object;,0)#20
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#21
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#LocalLoad(I,4)#22
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#Dup(2,0)#23
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#ArrayLoad(I)#24
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#LocalLoad(Ljava/lang/Object;,1)#25
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#26
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#LocalLoad(I,4)#27
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#ArrayLoad(I)#28
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#Constant(I,-1)#29
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#BinaryOp(I,xor)#30
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#BinaryOp(I,and)#31
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#ArrayStore(I)#32
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#LocalLoad(I,3)#33
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#LocalLoad(I,5)#34
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#LocalLoad(Ljava/lang/Object;,0)#35
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#Get([I,NONSTATIC,Ljwutil/math/BitString;,bits)#36
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#LocalLoad(I,4)#37
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#ArrayLoad(I)#38
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#ConditionalBranch(I,eq,42)#39
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#Constant(I,0)#42
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#BinaryOp(I,or)#43
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#LocalStore(I,3)#44
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#Goto(8)#45
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#LocalLoad(I,3)#46
jwutil.math.BitString.minus(Ljwutil/math/BitString;)Z#Return(I)#47
joeq.Compiler.Dataflow.GenKillTransferFunction.apply(Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#Pop(1)#19
joeq.Compiler.Dataflow.GenKillTransferFunction.apply(Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#LocalLoad(Ljava/lang/Object;,3)#20
joeq.Compiler.Dataflow.GenKillTransferFunction.apply(Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#LocalLoad(Ljava/lang/Object;,0)#21
joeq.Compiler.Dataflow.GenKillTransferFunction.apply(Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#Get(Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Dataflow/GenKillTransferFunction;,gen)#22
joeq.Compiler.Dataflow.GenKillTransferFunction.apply(Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#Invoke(VIRTUAL,Ljwutil/math/BitString;,or,(Ljwutil/math/BitString;)Z)#23
joeq.Compiler.Dataflow.GenKillTransferFunction.apply(Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#Pop(1)#24
joeq.Compiler.Dataflow.GenKillTransferFunction.apply(Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#LocalLoad(Ljava/lang/Object;,2)#25
joeq.Compiler.Dataflow.GenKillTransferFunction.apply(Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#LocalLoad(Ljava/lang/Object;,3)#26
joeq.Compiler.Dataflow.GenKillTransferFunction.apply(Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#Invoke(VIRTUAL,Ljoeq/Compiler/Dataflow/BitVectorFact;,makeNew,(Ljwutil/math/BitString;)Ljoeq/Compiler/Dataflow/BitVectorFact;)#27
joeq.Compiler.Dataflow.UnionBitVectorFact.makeNew(Ljwutil/math/BitString;)Ljoeq/Compiler/Dataflow/BitVectorFact;#New(Ljoeq/Compiler/Dataflow/UnionBitVectorFact;,0)#0
joeq.Compiler.Dataflow.UnionBitVectorFact.makeNew(Ljwutil/math/BitString;)Ljoeq/Compiler/Dataflow/BitVectorFact;#Dup(1,0)#1
joeq.Compiler.Dataflow.UnionBitVectorFact.makeNew(Ljwutil/math/BitString;)Ljoeq/Compiler/Dataflow/BitVectorFact;#LocalLoad(Ljava/lang/Object;,1)#2
joeq.Compiler.Dataflow.UnionBitVectorFact.makeNew(Ljwutil/math/BitString;)Ljoeq/Compiler/Dataflow/BitVectorFact;#Invoke(SPECIAL,Ljoeq/Compiler/Dataflow/UnionBitVectorFact;,<init>,(Ljwutil/math/BitString;)V)#3
joeq.Compiler.Dataflow.UnionBitVectorFact.<init>(Ljwutil/math/BitString;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Dataflow.UnionBitVectorFact.<init>(Ljwutil/math/BitString;)V#LocalLoad(Ljava/lang/Object;,1)#1
joeq.Compiler.Dataflow.UnionBitVectorFact.<init>(Ljwutil/math/BitString;)V#Invoke(SPECIAL,Ljoeq/Compiler/Dataflow/BitVectorFact;,<init>,(Ljwutil/math/BitString;)V)#2
joeq.Compiler.Dataflow.BitVectorFact.<init>(Ljwutil/math/BitString;)V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Dataflow.BitVectorFact.<init>(Ljwutil/math/BitString;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
joeq.Compiler.Dataflow.BitVectorFact.<init>(Ljwutil/math/BitString;)V#LocalLoad(Ljava/lang/Object;,0)#2
joeq.Compiler.Dataflow.BitVectorFact.<init>(Ljwutil/math/BitString;)V#LocalLoad(Ljava/lang/Object;,1)#3
joeq.Compiler.Dataflow.BitVectorFact.<init>(Ljwutil/math/BitString;)V#Put(Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Dataflow/BitVectorFact;,fact)#4
joeq.Compiler.Dataflow.BitVectorFact.<init>(Ljwutil/math/BitString;)V#Return(V)#5
joeq.Compiler.Dataflow.UnionBitVectorFact.<init>(Ljwutil/math/BitString;)V#Return(V)#3
joeq.Compiler.Dataflow.UnionBitVectorFact.makeNew(Ljwutil/math/BitString;)Ljoeq/Compiler/Dataflow/BitVectorFact;#Return(Ljava/lang/Object;)#4
joeq.Compiler.Dataflow.GenKillTransferFunction.apply(Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#Return(Ljava/lang/Object;)#28
joeq.Compiler.Dataflow.Problem.apply(Ljoeq/Compiler/Dataflow/TransferFunction;Ljoeq/Compiler/Dataflow/Fact;)Ljoeq/Compiler/Dataflow/Fact;#Return(Ljava/lang/Object;)#3
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalStore(Ljava/lang/Object;,9)#69
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalLoad(Ljava/lang/Object;,0)#70
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Get(Ljava/util/Map;,NONSTATIC,Ljoeq/Compiler/Dataflow/IterativeSolver;,dataflowValues)#71
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalLoad(Ljava/lang/Object;,4)#72
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalLoad(Ljava/lang/Object;,9)#73
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#74
joeq.Compiler.Dataflow.IterativeSolver.solve()V#CheckCast(Ljoeq/Compiler/Dataflow/Fact;)#75
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalStore(Ljava/lang/Object;,10)#76
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalLoad(Ljava/lang/Object;,0)#77
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Get(Z,NONSTATIC,Ljoeq/Compiler/Dataflow/IterativeSolver;,change)#78
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Constant(I,0)#79
joeq.Compiler.Dataflow.IterativeSolver.solve()V#ConditionalBranch(I,ne,91)#80
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalLoad(Ljava/lang/Object;,0)#81
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Get(Ljoeq/Compiler/Dataflow/Problem;,NONSTATIC,Ljoeq/Compiler/Dataflow/IterativeSolver;,problem)#82
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalLoad(Ljava/lang/Object;,10)#83
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalLoad(Ljava/lang/Object;,9)#84
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Invoke(VIRTUAL,Ljoeq/Compiler/Dataflow/Problem;,compare,(Ljoeq/Compiler/Dataflow/Fact;Ljoeq/Compiler/Dataflow/Fact;)Z)#85
joeq.Compiler.Dataflow.Problem.compare(Ljoeq/Compiler/Dataflow/Fact;Ljoeq/Compiler/Dataflow/Fact;)Z#LocalLoad(Ljava/lang/Object;,1)#0
joeq.Compiler.Dataflow.Problem.compare(Ljoeq/Compiler/Dataflow/Fact;Ljoeq/Compiler/Dataflow/Fact;)Z#LocalLoad(Ljava/lang/Object;,2)#1
joeq.Compiler.Dataflow.Problem.compare(Ljoeq/Compiler/Dataflow/Fact;Ljoeq/Compiler/Dataflow/Fact;)Z#Invoke(INTERFACE,Ljoeq/Compiler/Dataflow/Fact;,equals,(Ljoeq/Compiler/Dataflow/Fact;)Z)#2
joeq.Compiler.Dataflow.BitVectorFact.equals(Ljoeq/Compiler/Dataflow/Fact;)Z#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Dataflow.BitVectorFact.equals(Ljoeq/Compiler/Dataflow/Fact;)Z#Get(Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Dataflow/BitVectorFact;,fact)#1
joeq.Compiler.Dataflow.BitVectorFact.equals(Ljoeq/Compiler/Dataflow/Fact;)Z#LocalLoad(Ljava/lang/Object;,1)#2
joeq.Compiler.Dataflow.BitVectorFact.equals(Ljoeq/Compiler/Dataflow/Fact;)Z#CheckCast(Ljoeq/Compiler/Dataflow/BitVectorFact;)#3
joeq.Compiler.Dataflow.BitVectorFact.equals(Ljoeq/Compiler/Dataflow/Fact;)Z#Get(Ljwutil/math/BitString;,NONSTATIC,Ljoeq/Compiler/Dataflow/BitVectorFact;,fact)#4
joeq.Compiler.Dataflow.BitVectorFact.equals(Ljoeq/Compiler/Dataflow/Fact;)Z#Invoke(VIRTUAL,Ljwutil/math/BitString;,equals,(Ljava/lang/Object;)Z)#5
jwutil.math.BitString.lastSet(I)I#LocalLoad(I,4)#58
jwutil.math.BitString.lastSet(I)I#Constant(I,-1)#59
jwutil.math.BitString.lastSet(I)I#BinaryOp(I,add)#60
jwutil.math.BitString.lastSet(I)I#LocalStore(I,4)#61
jwutil.math.BitString.lastSet(I)I#Constant(I,-1)#62
jwutil.math.BitString.lastSet(I)I#LocalStore(I,3)#63
jwutil.math.BitString.lastSet(I)I#Goto(36)#64
jwutil.math.BitString.lastSet(I)I#Constant(I,-1)#65
jwutil.math.BitString.lastSet(I)I#Return(I)#66
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#LocalLoad(I,3)#39
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#Constant(I,-1)#40
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#BinaryOp(I,add)#41
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#LocalStore(I,3)#42
jwutil.math.BitString.equals(Ljava/lang/Object;)Z#Goto(30)#43
joeq.Compiler.Dataflow.BitVectorFact.equals(Ljoeq/Compiler/Dataflow/Fact;)Z#Return(I)#6
joeq.Compiler.Dataflow.Problem.compare(Ljoeq/Compiler/Dataflow/Fact;Ljoeq/Compiler/Dataflow/Fact;)Z#Return(I)#3
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Constant(I,0)#86
joeq.Compiler.Dataflow.IterativeSolver.solve()V#ConditionalBranch(I,ne,91)#87
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Goto(18)#91
jwutil.graphs.EdgeNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#New(Ljwutil/collections/WrappedCollection;,0)#11
jwutil.graphs.EdgeNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#Dup(1,0)#12
jwutil.graphs.EdgeNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,0)#13
jwutil.graphs.EdgeNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#Get(Ljwutil/graphs/Navigator;,NONSTATIC,Ljwutil/graphs/EdgeNavigator;,navigator)#14
jwutil.graphs.EdgeNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,1)#15
jwutil.graphs.EdgeNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#Invoke(INTERFACE,Ljwutil/graphs/Navigator;,prev,(Ljava/lang/Object;)Ljava/util/Collection;)#16
jwutil.graphs.ReverseNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.graphs.ReverseNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#Get(Ljwutil/graphs/Navigator;,NONSTATIC,Ljwutil/graphs/ReverseNavigator;,navigator)#1
jwutil.graphs.ReverseNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,1)#2
jwutil.graphs.ReverseNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#Invoke(INTERFACE,Ljwutil/graphs/Navigator;,next,(Ljava/lang/Object;)Ljava/util/Collection;)#3
joeq.Compiler.Quad.ControlFlowGraphNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,1)#0
joeq.Compiler.Quad.ControlFlowGraphNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#CheckCast(Ljoeq/Compiler/Quad/BasicBlock;)#1
joeq.Compiler.Quad.ControlFlowGraphNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#LocalStore(Ljava/lang/Object;,2)#2
joeq.Compiler.Quad.ControlFlowGraphNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,2)#3
joeq.Compiler.Quad.ControlFlowGraphNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getSuccessors,()Ljava/util/List;)#4
joeq.Compiler.Quad.ControlFlowGraphNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#LocalStore(Ljava/lang/Object;,3)#5
joeq.Compiler.Quad.ControlFlowGraphNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,2)#6
joeq.Compiler.Quad.ControlFlowGraphNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getExceptionHandlerEntries,()Ljava/util/List;)#7
joeq.Compiler.Quad.BasicBlock.getExceptionHandlerEntries()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BasicBlock.getExceptionHandlerEntries()Ljava/util/List;#Get(Ljoeq/Compiler/Quad/ExceptionHandlerList;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,exception_handler_list)#1
joeq.Compiler.Quad.BasicBlock.getExceptionHandlerEntries()Ljava/util/List;#Constant(L;,null)#2
joeq.Compiler.Quad.BasicBlock.getExceptionHandlerEntries()Ljava/util/List;#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
joeq.Compiler.Quad.BasicBlock.getExceptionHandlerEntries()Ljava/util/List;#Invoke(STATIC,Ljava/util/Collections;,emptyList,()Ljava/util/List;)#4
joeq.Compiler.Quad.BasicBlock.getExceptionHandlerEntries()Ljava/util/List;#Return(Ljava/lang/Object;)#5
joeq.Compiler.Quad.ControlFlowGraphNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#LocalStore(Ljava/lang/Object;,4)#8
joeq.Compiler.Quad.ControlFlowGraphNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,0)#9
joeq.Compiler.Quad.ControlFlowGraphNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/ControlFlowGraphNavigator;,cfg)#10
joeq.Compiler.Quad.ControlFlowGraphNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#Constant(L;,null)#11
joeq.Compiler.Quad.ControlFlowGraphNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#ConditionalBranch(Ljava/lang/Object;,eq,17)#12
joeq.Compiler.Quad.ControlFlowGraphNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,4)#13
joeq.Compiler.Quad.ControlFlowGraphNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#Invoke(INTERFACE,Ljava/util/List;,isEmpty,()Z)#14
joeq.Compiler.Quad.ControlFlowGraphNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#Constant(I,0)#15
joeq.Compiler.Quad.ControlFlowGraphNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#ConditionalBranch(I,eq,19)#16
joeq.Compiler.Quad.ControlFlowGraphNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,3)#17
joeq.Compiler.Quad.ControlFlowGraphNavigator.next(Ljava/lang/Object;)Ljava/util/Collection;#Return(Ljava/lang/Object;)#18
jwutil.graphs.ReverseNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#Return(Ljava/lang/Object;)#4
jwutil.graphs.EdgeNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#Constant(L;,null)#17
jwutil.graphs.EdgeNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#New(Ljwutil/graphs/EdgeNavigator$AddRightFilter;,0)#18
jwutil.graphs.EdgeNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#Dup(1,0)#19
jwutil.graphs.EdgeNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#LocalLoad(Ljava/lang/Object;,1)#20
jwutil.graphs.EdgeNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#Invoke(SPECIAL,Ljwutil/graphs/EdgeNavigator$AddRightFilter;,<init>,(Ljava/lang/Object;)V)#21
jwutil.graphs.EdgeNavigator$AddRightFilter.<init>(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#0
jwutil.graphs.EdgeNavigator$AddRightFilter.<init>(Ljava/lang/Object;)V#Invoke(SPECIAL,Ljwutil/collections/Filter;,<init>,()V)#1
jwutil.graphs.EdgeNavigator$AddRightFilter.<init>(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#2
jwutil.graphs.EdgeNavigator$AddRightFilter.<init>(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#3
jwutil.graphs.EdgeNavigator$AddRightFilter.<init>(Ljava/lang/Object;)V#Put(Ljava/lang/Object;,NONSTATIC,Ljwutil/graphs/EdgeNavigator$AddRightFilter;,right)#4
jwutil.graphs.EdgeNavigator$AddRightFilter.<init>(Ljava/lang/Object;)V#Return(V)#5
jwutil.graphs.EdgeNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#Invoke(SPECIAL,Ljwutil/collections/WrappedCollection;,<init>,(Ljava/util/Collection;Ljwutil/collections/Filter;Ljwutil/collections/Filter;)V)#22
jwutil.graphs.EdgeNavigator.prev(Ljava/lang/Object;)Ljava/util/Collection;#Return(Ljava/lang/Object;)#23
jwutil.graphs.EdgeNavigator$AddRightFilter.map(Ljava/lang/Object;)Ljava/lang/Object;#New(Ljwutil/collections/Pair;,0)#0
jwutil.graphs.EdgeNavigator$AddRightFilter.map(Ljava/lang/Object;)Ljava/lang/Object;#Dup(1,0)#1
jwutil.graphs.EdgeNavigator$AddRightFilter.map(Ljava/lang/Object;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,1)#2
jwutil.graphs.EdgeNavigator$AddRightFilter.map(Ljava/lang/Object;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#3
jwutil.graphs.EdgeNavigator$AddRightFilter.map(Ljava/lang/Object;)Ljava/lang/Object;#Get(Ljava/lang/Object;,NONSTATIC,Ljwutil/graphs/EdgeNavigator$AddRightFilter;,right)#4
jwutil.graphs.EdgeNavigator$AddRightFilter.map(Ljava/lang/Object;)Ljava/lang/Object;#Invoke(SPECIAL,Ljwutil/collections/Pair;,<init>,(Ljava/lang/Object;Ljava/lang/Object;)V)#5
jwutil.graphs.EdgeNavigator$AddRightFilter.map(Ljava/lang/Object;)Ljava/lang/Object;#Return(Ljava/lang/Object;)#6
joeq.Compiler.Dataflow.IterativeSolver.solve()V#LocalLoad(Ljava/lang/Object;,0)#92
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Get(Z,NONSTATIC,Ljoeq/Compiler/Dataflow/IterativeSolver;,change)#93
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Constant(I,0)#94
joeq.Compiler.Dataflow.IterativeSolver.solve()V#ConditionalBranch(I,ne,4)#95
joeq.Compiler.Dataflow.IterativeSolver.solve()V#Return(V)#96
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;Ljoeq/Compiler/Dataflow/Solver;Ljoeq/Compiler/Dataflow/Problem;)V#Return(V)#15
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;)Ljoeq/Compiler/Dataflow/LivenessAnalysis;#LocalLoad(Ljava/lang/Object;,1)#15
joeq.Compiler.Dataflow.LivenessAnalysis.solve(Ljoeq/Compiler/Quad/ControlFlowGraph;)Ljoeq/Compiler/Dataflow/LivenessAnalysis;#Return(Ljava/lang/Object;)#16
joeq.Compiler.Quad.SSA.EnterSSA.prepare()V#Put(Ljoeq/Compiler/Dataflow/LivenessAnalysis;,NONSTATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,live)#4
joeq.Compiler.Quad.SSA.EnterSSA.prepare()V#Return(V)#5
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#58
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/SSA/EnterSSA;,patchPEIgeneratedValues,()V)#59
joeq.Compiler.Quad.SSA.EnterSSA.patchPEIgeneratedValues()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.SSA.EnterSSA.patchPEIgeneratedValues()V#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,ir)#1
joeq.Compiler.Quad.SSA.EnterSSA.patchPEIgeneratedValues()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,getExceptionHandlers,()Ljava/util/List;)#2
joeq.Compiler.Quad.ControlFlowGraph.getExceptionHandlers()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.ControlFlowGraph.getExceptionHandlers()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Quad/ControlFlowGraph;,exception_handlers)#1
joeq.Compiler.Quad.ControlFlowGraph.getExceptionHandlers()Ljava/util/List;#Return(Ljava/lang/Object;)#2
joeq.Compiler.Quad.SSA.EnterSSA.patchPEIgeneratedValues()V#Invoke(INTERFACE,Ljava/util/List;,isEmpty,()Z)#3
joeq.Compiler.Quad.SSA.EnterSSA.patchPEIgeneratedValues()V#Constant(I,0)#4
joeq.Compiler.Quad.SSA.EnterSSA.patchPEIgeneratedValues()V#ConditionalBranch(I,eq,7)#5
joeq.Compiler.Quad.SSA.EnterSSA.patchPEIgeneratedValues()V#Return(V)#6
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#60
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,1)#61
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/SSA/EnterSSA;,computeSSA,(Ljoeq/Compiler/Quad/ControlFlowGraph;)V)#62
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get(Z,STATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,DEBUG)#0
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#1
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,eq,6)#2
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,1)#6
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(STATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,markSSARegisterFlags,(Ljoeq/Compiler/Quad/ControlFlowGraph;)V)#7
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#New(Ljava/util/HashSet;,0)#0
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Dup(1,0)#1
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#2
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalStore(Ljava/lang/Object;,1)#3
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#4
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,getRegisterFactory,()Ljoeq/Compiler/Quad/RegisterFactory;)#5
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/RegisterFactory;,iterator,()Ljava/util/Iterator;)#6
joeq.Compiler.Quad.RegisterFactory.iterator()Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.RegisterFactory.iterator()Ljava/util/Iterator;#Get(Ljava/util/ArrayList;,NONSTATIC,Ljoeq/Compiler/Quad/RegisterFactory;,registers)#1
joeq.Compiler.Quad.RegisterFactory.iterator()Ljava/util/Iterator;#Invoke(VIRTUAL,Ljava/util/ArrayList;,iterator,()Ljava/util/Iterator;)#2
joeq.Compiler.Quad.RegisterFactory.iterator()Ljava/util/Iterator;#Return(Ljava/lang/Object;)#3
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalStore(Ljava/lang/Object;,2)#7
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,2)#8
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#9
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#10
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,eq,19)#11
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#19
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,reversePostOrder,()Ljava/util/List;)#20
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#21
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalStore(Ljava/lang/Object;,2)#22
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,2)#23
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#24
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#25
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,eq,72)#26
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,2)#27
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#28
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#CheckCast(Ljoeq/Compiler/Quad/BasicBlock;)#29
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalStore(Ljava/lang/Object;,3)#30
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#31
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalStore(I,4)#32
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(I,4)#33
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,3)#34
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,size,()I)#35
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,ge,71)#36
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Goto(23)#71
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,3)#37
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(I,4)#38
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getQuad,(I)Ljoeq/Compiler/Quad/Quad;)#39
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalStore(Ljava/lang/Object;,5)#40
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,5)#41
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getDefinedRegisters,()Ljava/util/List;)#42
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#43
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalStore(Ljava/lang/Object;,6)#44
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,6)#45
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#46
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#47
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,eq,66)#48
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(I,4)#66
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,1)#67
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#BinaryOp(I,add)#68
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalStore(I,4)#69
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Goto(33)#70
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get(Z,STATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,DEBUG)#72
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#73
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,eq,149)#74
joeq.Compiler.Quad.SSA.EnterSSA.markSSARegisterFlags(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Return(V)#149
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get(Z,STATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,DEBUG)#8
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#9
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,eq,14)#10
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#14
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/SSA/EnterSSA;,getDefSets,()[Ljwutil/math/BitString;)#15
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,ir)#1
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,getNumberOfBasicBlocks,()I)#2
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#LocalStore(I,1)#3
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#LocalLoad(Ljava/lang/Object;,0)#4
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,ir)#5
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,getRegisterFactory,()Ljoeq/Compiler/Quad/RegisterFactory;)#6
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/RegisterFactory;,size,()I)#7
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#New([Ljwutil/math/BitString;,1)#8
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#LocalStore(Ljava/lang/Object;,2)#9
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#Constant(I,0)#10
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#LocalStore(I,3)#11
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#LocalLoad(I,3)#12
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#LocalLoad(Ljava/lang/Object;,2)#13
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#ArrayLength()#14
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#ConditionalBranch(I,ge,28)#15
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#LocalLoad(Ljava/lang/Object;,0)#28
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,ir)#29
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,reversePostOrder,()Ljava/util/List;)#30
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#31
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#LocalStore(Ljava/lang/Object;,3)#32
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#LocalLoad(Ljava/lang/Object;,3)#33
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#34
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#Constant(I,0)#35
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#ConditionalBranch(I,eq,111)#36
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#LocalLoad(Ljava/lang/Object;,3)#37
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#38
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#CheckCast(Ljoeq/Compiler/Quad/BasicBlock;)#39
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#LocalStore(Ljava/lang/Object;,4)#40
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#Get(Z,STATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,DEBUG)#41
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#Constant(I,0)#42
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#ConditionalBranch(I,eq,54)#43
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#LocalLoad(Ljava/lang/Object;,4)#54
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getID,()I)#55
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#LocalStore(I,5)#56
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#LocalLoad(Ljava/lang/Object;,4)#57
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getQuads,()Ljava/util/List;)#58
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#59
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#LocalStore(Ljava/lang/Object;,6)#60
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#LocalLoad(Ljava/lang/Object;,6)#61
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#62
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#Constant(I,0)#63
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#ConditionalBranch(I,eq,110)#64
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#Goto(33)#110
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#LocalLoad(Ljava/lang/Object;,6)#65
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#66
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#CheckCast(Ljoeq/Compiler/Quad/Quad;)#67
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#LocalStore(Ljava/lang/Object;,7)#68
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#LocalLoad(Ljava/lang/Object;,7)#69
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getDefinedRegisters,()Ljava/util/List;)#70
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#71
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#LocalStore(Ljava/lang/Object;,8)#72
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#LocalLoad(Ljava/lang/Object;,8)#73
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#74
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#Constant(I,0)#75
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#ConditionalBranch(I,eq,109)#76
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#Goto(61)#109
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#LocalLoad(Ljava/lang/Object;,2)#111
joeq.Compiler.Quad.SSA.EnterSSA.getDefSets()[Ljwutil/math/BitString;#Return(Ljava/lang/Object;)#112
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalStore(Ljava/lang/Object;,2)#16
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get(Z,STATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,DEBUG)#17
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#18
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,eq,23)#19
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#23
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,1)#24
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,2)#25
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/SSA/EnterSSA;,insertPhiFunctions,(Ljoeq/Compiler/Quad/ControlFlowGraph;[Ljwutil/math/BitString;)V)#26
joeq.Compiler.Quad.SSA.EnterSSA.insertPhiFunctions(Ljoeq/Compiler/Quad/ControlFlowGraph;[Ljwutil/math/BitString;)V#LocalLoad(Ljava/lang/Object;,1)#0
joeq.Compiler.Quad.SSA.EnterSSA.insertPhiFunctions(Ljoeq/Compiler/Quad/ControlFlowGraph;[Ljwutil/math/BitString;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,getRegisterFactory,()Ljoeq/Compiler/Quad/RegisterFactory;)#1
joeq.Compiler.Quad.SSA.EnterSSA.insertPhiFunctions(Ljoeq/Compiler/Quad/ControlFlowGraph;[Ljwutil/math/BitString;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/RegisterFactory;,iterator,()Ljava/util/Iterator;)#2
joeq.Compiler.Quad.SSA.EnterSSA.insertPhiFunctions(Ljoeq/Compiler/Quad/ControlFlowGraph;[Ljwutil/math/BitString;)V#LocalStore(Ljava/lang/Object;,3)#3
joeq.Compiler.Quad.SSA.EnterSSA.insertPhiFunctions(Ljoeq/Compiler/Quad/ControlFlowGraph;[Ljwutil/math/BitString;)V#LocalLoad(Ljava/lang/Object;,3)#4
joeq.Compiler.Quad.SSA.EnterSSA.insertPhiFunctions(Ljoeq/Compiler/Quad/ControlFlowGraph;[Ljwutil/math/BitString;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#5
joeq.Compiler.Quad.SSA.EnterSSA.insertPhiFunctions(Ljoeq/Compiler/Quad/ControlFlowGraph;[Ljwutil/math/BitString;)V#Constant(I,0)#6
joeq.Compiler.Quad.SSA.EnterSSA.insertPhiFunctions(Ljoeq/Compiler/Quad/ControlFlowGraph;[Ljwutil/math/BitString;)V#ConditionalBranch(I,eq,139)#7
joeq.Compiler.Quad.SSA.EnterSSA.insertPhiFunctions(Ljoeq/Compiler/Quad/ControlFlowGraph;[Ljwutil/math/BitString;)V#Return(V)#139
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get(Z,STATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,DEBUG)#27
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#28
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,eq,33)#29
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get(Z,STATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,DEBUG)#33
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#34
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,eq,40)#35
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get(Z,STATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,DEBUG)#40
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#41
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,eq,46)#42
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#46
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/SSA/EnterSSA;,renameSymbolicRegisters,()V)#47
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,ir)#1
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,getRegisterFactory,()Ljoeq/Compiler/Quad/RegisterFactory;)#2
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/RegisterFactory;,size,()I)#3
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#LocalStore(I,1)#4
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#LocalLoad(I,1)#5
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#New([Ljava/util/Stack;,1)#6
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#LocalStore(Ljava/lang/Object;,2)#7
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#Constant(I,0)#8
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#LocalStore(I,3)#9
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#LocalLoad(I,3)#10
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#LocalLoad(Ljava/lang/Object;,2)#11
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#ArrayLength()#12
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#ConditionalBranch(I,ge,25)#13
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#LocalLoad(Ljava/lang/Object;,0)#25
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,ir)#26
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,getMethod,()Ljoeq/Class/jq_Method;)#27
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getParamTypes,()[Ljoeq/Class/jq_Type;)#28
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#LocalStore(Ljava/lang/Object;,3)#29
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#Constant(I,0)#30
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#LocalStore(I,4)#31
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#Constant(I,0)#32
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#LocalStore(I,5)#33
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#LocalLoad(I,4)#34
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#LocalLoad(Ljava/lang/Object;,3)#35
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#ArrayLength()#36
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#ConditionalBranch(I,ge,102)#37
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#Constant(I,0)#102
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#LocalStore(I,4)#103
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#LocalLoad(I,4)#104
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#LocalLoad(Ljava/lang/Object;,2)#105
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#ArrayLength()#106
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#ConditionalBranch(I,ge,125)#107
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#LocalLoad(Ljava/lang/Object;,0)#125
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,ir)#126
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,entry,()Ljoeq/Compiler/Quad/EntryOrExitBasicBlock;)#127
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#LocalStore(Ljava/lang/Object;,4)#128
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#LocalLoad(Ljava/lang/Object;,0)#129
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#LocalLoad(Ljava/lang/Object;,0)#130
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,ir)#131
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,getNumberOfBasicBlocks,()I)#132
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#New([I,1)#133
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#Put([I,NONSTATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,numPredProcessed)#134
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#LocalLoad(Ljava/lang/Object;,0)#135
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#LocalLoad(Ljava/lang/Object;,4)#136
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#LocalLoad(Ljava/lang/Object;,2)#137
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/SSA/EnterSSA;,search,(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V)#138
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Get(Z,STATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,DEBUG)#0
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Constant(I,0)#1
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#ConditionalBranch(I,eq,13)#2
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalLoad(Ljava/lang/Object;,1)#13
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getQuads,()Ljava/util/List;)#14
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#15
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalStore(Ljava/lang/Object;,3)#16
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalLoad(Ljava/lang/Object;,3)#17
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#18
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Constant(I,0)#19
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#ConditionalBranch(I,eq,179)#20
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Get(Z,STATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,DEBUG)#179
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Constant(I,0)#180
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#ConditionalBranch(I,eq,192)#181
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalLoad(Ljava/lang/Object;,1)#192
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getSuccessors,()Ljava/util/List;)#193
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#194
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalStore(Ljava/lang/Object;,3)#195
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalLoad(Ljava/lang/Object;,3)#196
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#197
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Constant(I,0)#198
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#ConditionalBranch(I,eq,334)#199
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalLoad(Ljava/lang/Object;,3)#200
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#201
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#CheckCast(Ljoeq/Compiler/Quad/BasicBlock;)#202
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalStore(Ljava/lang/Object;,4)#203
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Get(Z,STATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,DEBUG)#204
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Constant(I,0)#205
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#ConditionalBranch(I,eq,217)#206
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalLoad(Ljava/lang/Object;,0)#217
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Get([I,NONSTATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,numPredProcessed)#218
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalLoad(Ljava/lang/Object;,4)#219
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getID,()I)#220
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Dup(2,0)#221
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#ArrayLoad(I)#222
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Dup(1,2)#223
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Constant(I,1)#224
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#BinaryOp(I,add)#225
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#ArrayStore(I)#226
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalStore(I,5)#227
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalLoad(Ljava/lang/Object;,4)#228
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,isExit,()Z)#229
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Constant(I,0)#230
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#ConditionalBranch(I,eq,233)#231
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Get(Z,STATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,DEBUG)#233
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Constant(I,0)#234
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#ConditionalBranch(I,eq,246)#235
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalLoad(Ljava/lang/Object;,4)#246
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getQuads,()Ljava/util/List;)#247
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#248
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalStore(Ljava/lang/Object;,6)#249
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalLoad(Ljava/lang/Object;,6)#250
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#251
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Constant(I,0)#252
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#ConditionalBranch(I,eq,333)#253
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalLoad(Ljava/lang/Object;,6)#254
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#255
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#CheckCast(Ljoeq/Compiler/Quad/Quad;)#256
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalStore(Ljava/lang/Object;,7)#257
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalLoad(Ljava/lang/Object;,7)#258
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getOperator,()Ljoeq/Compiler/Quad/Operator;)#259
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Instanceof(Ljoeq/Compiler/Quad/Operator$Phi;)#260
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Constant(I,0)#261
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#ConditionalBranch(I,ne,264)#262
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Goto(333)#263
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Goto(196)#333
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Get(Z,STATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,DEBUG)#334
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Constant(I,0)#335
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#ConditionalBranch(I,eq,347)#336
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalLoad(Ljava/lang/Object;,0)#347
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Get(Ljoeq/Compiler/Quad/Dominators;,NONSTATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,dominators)#348
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalLoad(Ljava/lang/Object;,1)#349
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Dominators;,getDominatorNode,(Ljoeq/Compiler/Quad/BasicBlock;)Ljoeq/Compiler/Quad/Dominators$DominatorNode;)#350
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Dominators$DominatorNode;,getChildren,()Ljava/util/List;)#351
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#352
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalStore(Ljava/lang/Object;,3)#353
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalLoad(Ljava/lang/Object;,3)#354
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#355
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Constant(I,0)#356
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#ConditionalBranch(I,eq,381)#357
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalLoad(Ljava/lang/Object;,3)#358
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#359
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#CheckCast(Ljoeq/Compiler/Quad/Dominators$DominatorNode;)#360
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalStore(Ljava/lang/Object;,4)#361
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Get(Z,STATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,DEBUG)#362
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Constant(I,0)#363
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#ConditionalBranch(I,eq,375)#364
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalLoad(Ljava/lang/Object;,0)#375
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalLoad(Ljava/lang/Object;,4)#376
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Dominators$DominatorNode;,getBasicBlock,()Ljoeq/Compiler/Quad/BasicBlock;)#377
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalLoad(Ljava/lang/Object;,2)#378
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/SSA/EnterSSA;,search,(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V)#379
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalLoad(Ljava/lang/Object;,3)#21
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#22
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#CheckCast(Ljoeq/Compiler/Quad/Quad;)#23
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalStore(Ljava/lang/Object;,4)#24
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalLoad(Ljava/lang/Object;,4)#25
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getOperator,()Ljoeq/Compiler/Quad/Operator;)#26
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Instanceof(Ljoeq/Compiler/Quad/Operator$Phi;)#27
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Constant(I,0)#28
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#ConditionalBranch(I,ne,99)#29
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalLoad(Ljava/lang/Object;,4)#30
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getUsedRegisters,()Ljava/util/List;)#31
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#32
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalStore(Ljava/lang/Object;,5)#33
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalLoad(Ljava/lang/Object;,5)#34
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#35
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Constant(I,0)#36
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#ConditionalBranch(I,eq,99)#37
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalLoad(Ljava/lang/Object;,4)#99
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getDefinedRegisters,()Ljava/util/List;)#100
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#101
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalStore(Ljava/lang/Object;,5)#102
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalLoad(Ljava/lang/Object;,5)#103
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#104
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Constant(I,0)#105
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#ConditionalBranch(I,eq,178)#106
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Goto(17)#178
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Goto(196)#232
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Get(Z,STATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,DEBUG)#381
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Constant(I,0)#382
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#ConditionalBranch(I,eq,394)#383
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalLoad(Ljava/lang/Object;,1)#394
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getQuads,()Ljava/util/List;)#395
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#396
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalStore(Ljava/lang/Object;,3)#397
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalLoad(Ljava/lang/Object;,3)#398
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#399
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Constant(I,0)#400
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#ConditionalBranch(I,eq,463)#401
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Get(Z,STATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,DEBUG)#463
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Constant(I,0)#464
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#ConditionalBranch(I,eq,476)#465
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Return(V)#476
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Goto(354)#380
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalLoad(Ljava/lang/Object;,3)#402
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#403
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#CheckCast(Ljoeq/Compiler/Quad/Quad;)#404
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalStore(Ljava/lang/Object;,4)#405
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalLoad(Ljava/lang/Object;,4)#406
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getDefinedRegisters,()Ljava/util/List;)#407
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#408
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalStore(Ljava/lang/Object;,5)#409
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#LocalLoad(Ljava/lang/Object;,5)#410
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#411
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Constant(I,0)#412
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#ConditionalBranch(I,eq,462)#413
joeq.Compiler.Quad.SSA.EnterSSA.search(Ljoeq/Compiler/Quad/BasicBlock;[Ljava/util/Stack;)V#Goto(398)#462
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#LocalLoad(Ljava/lang/Object;,0)#139
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,ir)#140
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#Invoke(STATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,markSSARegisterFlags,(Ljoeq/Compiler/Quad/ControlFlowGraph;)V)#141
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#LocalLoad(Ljava/lang/Object;,0)#142
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/SSA/EnterSSA;,rectifyPhiTypes,()V)#143
joeq.Compiler.Quad.SSA.EnterSSA.rectifyPhiTypes()V#Get(Z,STATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,DEBUG)#0
joeq.Compiler.Quad.SSA.EnterSSA.rectifyPhiTypes()V#Constant(I,0)#1
joeq.Compiler.Quad.SSA.EnterSSA.rectifyPhiTypes()V#ConditionalBranch(I,eq,6)#2
joeq.Compiler.Quad.SSA.EnterSSA.rectifyPhiTypes()V#LocalLoad(Ljava/lang/Object;,0)#6
joeq.Compiler.Quad.SSA.EnterSSA.rectifyPhiTypes()V#LocalLoad(Ljava/lang/Object;,0)#7
joeq.Compiler.Quad.SSA.EnterSSA.rectifyPhiTypes()V#Get(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,scalarPhis)#8
joeq.Compiler.Quad.SSA.EnterSSA.rectifyPhiTypes()V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/SSA/EnterSSA;,removeAllUnreachablePhis,(Ljava/util/List;)V)#9
joeq.Compiler.Quad.SSA.EnterSSA.removeAllUnreachablePhis(Ljava/util/List;)V#Constant(I,0)#0
joeq.Compiler.Quad.SSA.EnterSSA.removeAllUnreachablePhis(Ljava/util/List;)V#LocalStore(I,2)#1
joeq.Compiler.Quad.SSA.EnterSSA.removeAllUnreachablePhis(Ljava/util/List;)V#Constant(I,0)#2
joeq.Compiler.Quad.SSA.EnterSSA.removeAllUnreachablePhis(Ljava/util/List;)V#LocalStore(I,2)#3
joeq.Compiler.Quad.SSA.EnterSSA.removeAllUnreachablePhis(Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#4
joeq.Compiler.Quad.SSA.EnterSSA.removeAllUnreachablePhis(Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#5
joeq.Compiler.Quad.SSA.EnterSSA.removeAllUnreachablePhis(Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,3)#6
joeq.Compiler.Quad.SSA.EnterSSA.removeAllUnreachablePhis(Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#7
joeq.Compiler.Quad.SSA.EnterSSA.removeAllUnreachablePhis(Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#8
joeq.Compiler.Quad.SSA.EnterSSA.removeAllUnreachablePhis(Ljava/util/List;)V#Constant(I,0)#9
joeq.Compiler.Quad.SSA.EnterSSA.removeAllUnreachablePhis(Ljava/util/List;)V#ConditionalBranch(I,eq,116)#10
joeq.Compiler.Quad.SSA.EnterSSA.removeAllUnreachablePhis(Ljava/util/List;)V#LocalLoad(I,2)#116
joeq.Compiler.Quad.SSA.EnterSSA.removeAllUnreachablePhis(Ljava/util/List;)V#Constant(I,0)#117
joeq.Compiler.Quad.SSA.EnterSSA.removeAllUnreachablePhis(Ljava/util/List;)V#ConditionalBranch(I,ne,2)#118
joeq.Compiler.Quad.SSA.EnterSSA.removeAllUnreachablePhis(Ljava/util/List;)V#Return(V)#119
joeq.Compiler.Quad.SSA.EnterSSA.rectifyPhiTypes()V#LocalLoad(Ljava/lang/Object;,0)#10
joeq.Compiler.Quad.SSA.EnterSSA.rectifyPhiTypes()V#Get(Ljava/util/List;,NONSTATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,scalarPhis)#11
joeq.Compiler.Quad.SSA.EnterSSA.rectifyPhiTypes()V#Invoke(INTERFACE,Ljava/util/List;,isEmpty,()Z)#12
joeq.Compiler.Quad.SSA.EnterSSA.rectifyPhiTypes()V#Constant(I,0)#13
joeq.Compiler.Quad.SSA.EnterSSA.rectifyPhiTypes()V#ConditionalBranch(I,ne,97)#14
joeq.Compiler.Quad.SSA.EnterSSA.rectifyPhiTypes()V#Return(V)#97
joeq.Compiler.Quad.SSA.EnterSSA.renameSymbolicRegisters()V#Return(V)#144
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get(Z,STATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,DEBUG)#48
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#49
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,eq,54)#50
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get(Z,STATIC,Ljoeq/Compiler/Quad/SSA/EnterSSA;,PRINT_SSA)#54
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#55
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,eq,61)#56
joeq.Compiler.Quad.SSA.EnterSSA.computeSSA(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Return(V)#61
joeq.Compiler.Quad.SSA.EnterSSA.visitCFG(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Return(V)#63
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Z,STATIC,Ljoeq/Class/jq_Method;,$assertionsDisabled)#153
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(I,0)#154
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#ConditionalBranch(I,ne,164)#155
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#156
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Class/jq_Method;,cfg)#157
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(L;,null)#158
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#ConditionalBranch(Ljava/lang/Object;,ne,164)#159
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#164
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Class/jq_Method;,cfg)#165
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,getRegisterFactory,()Ljoeq/Compiler/Quad/RegisterFactory;)#166
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalStore(Ljava/lang/Object;,3)#167
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,3)#168
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/RegisterFactory;,size,()I)#169
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalStore(I,4)#170
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(I,STATIC,Ljoeq/Class/jq_Method;,maxVars)#171
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(I,-1)#172
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#ConditionalBranch(I,eq,198)#173
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Goto(219)#198
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,7)#90
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Instanceof(Ljoeq/Compiler/Quad/Operator$Invoke$InvokeVirtual;)#91
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Constant(I,0)#92
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#ConditionalBranch(I,ne,98)#93
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,7)#94
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Instanceof(Ljoeq/Compiler/Quad/Operator$Invoke$InvokeInterface;)#95
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Constant(I,0)#96
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#ConditionalBranch(I,eq,103)#97
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#103
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#104
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,5)#105
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Invoke(SPECIAL,Lchord/program/RTA;,processStaticInvk,(Ljoeq/Class/jq_Method;Ljoeq/Compiler/Quad/Quad;)V)#106
chord.program.RTA.processStaticInvk(Ljoeq/Class/jq_Method;Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,2)#0
chord.program.RTA.processStaticInvk(Ljoeq/Class/jq_Method;Ljoeq/Compiler/Quad/Quad;)V#Invoke(STATIC,Ljoeq/Compiler/Quad/Operator$Invoke;,getMethod,(Ljoeq/Compiler/Quad/Quad;)Ljoeq/Compiler/Quad/Operand$MethodOperand;)#1
joeq.Compiler.Quad.Operator$Invoke.getMethod(Ljoeq/Compiler/Quad/Quad;)Ljoeq/Compiler/Quad/Operand$MethodOperand;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operator$Invoke.getMethod(Ljoeq/Compiler/Quad/Quad;)Ljoeq/Compiler/Quad/Operand$MethodOperand;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getOp2,()Ljoeq/Compiler/Quad/Operand;)#1
joeq.Compiler.Quad.Quad.getOp2()Ljoeq/Compiler/Quad/Operand;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Quad.getOp2()Ljoeq/Compiler/Quad/Operand;#Get(Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/Quad;,operand2)#1
joeq.Compiler.Quad.Quad.getOp2()Ljoeq/Compiler/Quad/Operand;#Return(Ljava/lang/Object;)#2
joeq.Compiler.Quad.Operator$Invoke.getMethod(Ljoeq/Compiler/Quad/Quad;)Ljoeq/Compiler/Quad/Operand$MethodOperand;#CheckCast(Ljoeq/Compiler/Quad/Operand$MethodOperand;)#2
joeq.Compiler.Quad.Operator$Invoke.getMethod(Ljoeq/Compiler/Quad/Quad;)Ljoeq/Compiler/Quad/Operand$MethodOperand;#Return(Ljava/lang/Object;)#3
chord.program.RTA.processStaticInvk(Ljoeq/Class/jq_Method;Ljoeq/Compiler/Quad/Quad;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Operand$MethodOperand;,getMethod,()Ljoeq/Class/jq_Method;)#2
joeq.Compiler.Quad.Operand$MethodOperand.getMethod()Ljoeq/Class/jq_Method;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operand$MethodOperand.getMethod()Ljoeq/Class/jq_Method;#Get(Ljoeq/Class/jq_Method;,NONSTATIC,Ljoeq/Compiler/Quad/Operand$MethodOperand;,target)#1
joeq.Compiler.Quad.Operand$MethodOperand.getMethod()Ljoeq/Class/jq_Method;#Return(Ljava/lang/Object;)#2
chord.program.RTA.processStaticInvk(Ljoeq/Class/jq_Method;Ljoeq/Compiler/Quad/Quad;)V#LocalStore(Ljava/lang/Object;,3)#3
chord.program.RTA.processStaticInvk(Ljoeq/Class/jq_Method;Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,3)#4
chord.program.RTA.processStaticInvk(Ljoeq/Class/jq_Method;Ljoeq/Compiler/Quad/Quad;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getDeclaringClass,()Ljoeq/Class/jq_Class;)#5
chord.program.RTA.processStaticInvk(Ljoeq/Class/jq_Method;Ljoeq/Compiler/Quad/Quad;)V#LocalStore(Ljava/lang/Object;,4)#6
chord.program.RTA.processStaticInvk(Ljoeq/Class/jq_Method;Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,0)#7
chord.program.RTA.processStaticInvk(Ljoeq/Class/jq_Method;Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,4)#8
chord.program.RTA.processStaticInvk(Ljoeq/Class/jq_Method;Ljoeq/Compiler/Quad/Quad;)V#Invoke(VIRTUAL,Lchord/program/RTA;,visitClass,(Ljoeq/Class/jq_Reference;)V)#9
chord.program.RTA.visitClass(Ljoeq/Class/jq_Reference;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.program.RTA.visitClass(Ljoeq/Class/jq_Reference;)V#LocalLoad(Ljava/lang/Object;,1)#1
chord.program.RTA.visitClass(Ljoeq/Class/jq_Reference;)V#Invoke(SPECIAL,Lchord/program/RTA;,prepareClass,(Ljoeq/Class/jq_Reference;)V)#2
chord.util.IndexSet.add(Ljava/lang/Object;)Z#Constant(I,0)#13
chord.util.IndexSet.add(Ljava/lang/Object;)Z#Return(I)#14
chord.program.RTA.visitClass(Ljoeq/Class/jq_Reference;)V#LocalLoad(Ljava/lang/Object;,1)#3
chord.program.RTA.visitClass(Ljoeq/Class/jq_Reference;)V#Instanceof(Ljoeq/Class/jq_Array;)#4
chord.program.RTA.visitClass(Ljoeq/Class/jq_Reference;)V#Constant(I,0)#5
chord.program.RTA.visitClass(Ljoeq/Class/jq_Reference;)V#ConditionalBranch(I,eq,8)#6
chord.program.RTA.visitClass(Ljoeq/Class/jq_Reference;)V#LocalLoad(Ljava/lang/Object;,1)#8
chord.program.RTA.visitClass(Ljoeq/Class/jq_Reference;)V#CheckCast(Ljoeq/Class/jq_Class;)#9
chord.program.RTA.visitClass(Ljoeq/Class/jq_Reference;)V#LocalStore(Ljava/lang/Object;,2)#10
chord.program.RTA.visitClass(Ljoeq/Class/jq_Reference;)V#LocalLoad(Ljava/lang/Object;,0)#11
chord.program.RTA.visitClass(Ljoeq/Class/jq_Reference;)V#LocalLoad(Ljava/lang/Object;,2)#12
chord.program.RTA.visitClass(Ljoeq/Class/jq_Reference;)V#Invoke(VIRTUAL,Lchord/program/RTA;,visitClinits,(Ljoeq/Class/jq_Class;)V)#13
chord.program.RTA.visitClass(Ljoeq/Class/jq_Reference;)V#Return(V)#14
chord.program.RTA.processStaticInvk(Ljoeq/Class/jq_Method;Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,0)#10
chord.program.RTA.processStaticInvk(Ljoeq/Class/jq_Method;Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,3)#11
chord.program.RTA.processStaticInvk(Ljoeq/Class/jq_Method;Ljoeq/Compiler/Quad/Quad;)V#Invoke(VIRTUAL,Lchord/program/RTA;,visitMethod,(Ljoeq/Class/jq_Method;)V)#12
chord.program.RTA.processStaticInvk(Ljoeq/Class/jq_Method;Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,4)#13
chord.program.RTA.processStaticInvk(Ljoeq/Class/jq_Method;Ljoeq/Compiler/Quad/Quad;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getName,()Ljava/lang/String;)#14
chord.program.RTA.processStaticInvk(Ljoeq/Class/jq_Method;Ljoeq/Compiler/Quad/Quad;)V#LocalStore(Ljava/lang/Object;,5)#15
chord.program.RTA.processStaticInvk(Ljoeq/Class/jq_Method;Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,5)#16
chord.program.RTA.processStaticInvk(Ljoeq/Class/jq_Method;Ljoeq/Compiler/Quad/Quad;)V#Constant(Ljava/lang/String;,"java.lang.Class")#17
chord.program.RTA.processStaticInvk(Ljoeq/Class/jq_Method;Ljoeq/Compiler/Quad/Quad;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#18
chord.program.RTA.processStaticInvk(Ljoeq/Class/jq_Method;Ljoeq/Compiler/Quad/Quad;)V#Constant(I,0)#19
chord.program.RTA.processStaticInvk(Ljoeq/Class/jq_Method;Ljoeq/Compiler/Quad/Quad;)V#ConditionalBranch(I,eq,87)#20
chord.program.RTA.processStaticInvk(Ljoeq/Class/jq_Method;Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,5)#87
chord.program.RTA.processStaticInvk(Ljoeq/Class/jq_Method;Ljoeq/Compiler/Quad/Quad;)V#Constant(Ljava/lang/String;,"java.lang.reflect.Array")#88
chord.program.RTA.processStaticInvk(Ljoeq/Class/jq_Method;Ljoeq/Compiler/Quad/Quad;)V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#89
chord.program.RTA.processStaticInvk(Ljoeq/Class/jq_Method;Ljoeq/Compiler/Quad/Quad;)V#Constant(I,0)#90
chord.program.RTA.processStaticInvk(Ljoeq/Class/jq_Method;Ljoeq/Compiler/Quad/Quad;)V#ConditionalBranch(I,eq,157)#91
chord.program.RTA.processStaticInvk(Ljoeq/Class/jq_Method;Ljoeq/Compiler/Quad/Quad;)V#Return(V)#157
chord.program.RTA.processMethod(Ljoeq/Class/jq_Method;)V#Goto(215)#107
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Z,STATIC,Ljoeq/Class/jq_Method;,verbose)#100
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Constant(I,0)#101
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#ConditionalBranch(I,eq,115)#102
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#115
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Invoke(SPECIAL,Ljoeq/Class/jq_Method;,buildEmptyCFG,()V)#116
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Goto(219)#117
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,0)#249
chord.program.RTA.build()V#Get(Lchord/program/reflect/StaticReflectResolver;,NONSTATIC,Lchord/program/RTA;,staticReflectResolver)#250
chord.program.RTA.build()V#Constant(L;,null)#251
chord.program.RTA.build()V#ConditionalBranch(Ljava/lang/Object;,eq,256)#252
chord.program.RTA.build()V#LocalLoad(I,5)#256
chord.program.RTA.build()V#Constant(I,1)#257
chord.program.RTA.build()V#BinaryOp(I,add)#258
chord.program.RTA.build()V#LocalStore(I,5)#259
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,1)#264
chord.program.RTA.build()V#Invoke(VIRTUAL,Lchord/util/Timer;,done,()V)#265
chord.util.Timer.done()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.Timer.done()V#Get(Ljava/util/Date;,NONSTATIC,Lchord/util/Timer;,doneDate)#1
chord.util.Timer.done()V#Constant(L;,null)#2
chord.util.Timer.done()V#ConditionalBranch(Ljava/lang/Object;,eq,18)#3
chord.util.Timer.done()V#LocalLoad(Ljava/lang/Object;,0)#18
chord.util.Timer.done()V#Get(Z,NONSTATIC,Lchord/util/Timer;,isPaused)#19
chord.util.Timer.done()V#Constant(I,0)#20
chord.util.Timer.done()V#ConditionalBranch(I,eq,36)#21
chord.util.Timer.done()V#New(Ljava/util/Date;,0)#36
chord.util.Timer.done()V#Dup(1,0)#37
chord.util.Timer.done()V#Invoke(SPECIAL,Ljava/util/Date;,<init>,()V)#38
chord.util.Timer.done()V#LocalStore(Ljava/lang/Object;,1)#39
chord.util.Timer.done()V#LocalLoad(Ljava/lang/Object;,0)#40
chord.util.Timer.done()V#LocalLoad(Ljava/lang/Object;,1)#41
chord.util.Timer.done()V#Put(Ljava/util/Date;,NONSTATIC,Lchord/util/Timer;,doneDate)#42
chord.util.Timer.done()V#LocalLoad(Ljava/lang/Object;,0)#43
chord.util.Timer.done()V#Dup(1,0)#44
chord.util.Timer.done()V#Get(J,NONSTATIC,Lchord/util/Timer;,elapsedExclusiveTime)#45
chord.util.Timer.done()V#LocalLoad(Ljava/lang/Object;,1)#46
chord.util.Timer.done()V#Invoke(VIRTUAL,Ljava/util/Date;,getTime,()J)#47
chord.util.Timer.done()V#LocalLoad(Ljava/lang/Object;,0)#48
chord.util.Timer.done()V#Get(Ljava/util/Date;,NONSTATIC,Lchord/util/Timer;,lastResumeDate)#49
chord.util.Timer.done()V#Invoke(VIRTUAL,Ljava/util/Date;,getTime,()J)#50
chord.util.Timer.done()V#BinaryOp(J,sub)#51
chord.util.Timer.done()V#BinaryOp(J,add)#52
chord.util.Timer.done()V#Put(J,NONSTATIC,Lchord/util/Timer;,elapsedExclusiveTime)#53
chord.util.Timer.done()V#Return(V)#54
chord.program.RTA.build()V#Get(I,STATIC,Lchord/project/Config;,verbose)#266
chord.program.RTA.build()V#Constant(I,1)#267
chord.program.RTA.build()V#ConditionalBranch(I,lt,282)#268
chord.program.RTA.build()V#Get(Ljava/io/PrintStream;,STATIC,Ljava/lang/System;,out)#269
chord.program.RTA.build()V#Constant(Ljava/lang/String;,"LEAVE: RTA")#270
chord.program.RTA.build()V#Invoke(VIRTUAL,Ljava/io/PrintStream;,println,(Ljava/lang/String;)V)#271
chord.program.RTA.build()V#Get(Ljava/io/PrintStream;,STATIC,Ljava/lang/System;,out)#272
chord.program.RTA.build()V#New(Ljava/lang/StringBuilder;,0)#273
chord.program.RTA.build()V#Dup(1,0)#274
chord.program.RTA.build()V#Constant(Ljava/lang/String;,"Time: ")#275
chord.program.RTA.build()V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#276
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,1)#277
chord.program.RTA.build()V#Invoke(VIRTUAL,Lchord/util/Timer;,getInclusiveTimeStr,()Ljava/lang/String;)#278
chord.util.Timer.getInclusiveTimeStr()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.Timer.getInclusiveTimeStr()Ljava/lang/String;#Invoke(SPECIAL,Lchord/util/Timer;,checkInitDate,()V)#1
chord.util.Timer.getInclusiveTimeStr()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#2
chord.util.Timer.getInclusiveTimeStr()Ljava/lang/String;#Invoke(SPECIAL,Lchord/util/Timer;,checkDoneDate,()V)#3
chord.util.Timer.checkDoneDate()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.Timer.checkDoneDate()V#Get(Ljava/util/Date;,NONSTATIC,Lchord/util/Timer;,doneDate)#1
chord.util.Timer.checkDoneDate()V#Constant(L;,null)#2
chord.util.Timer.checkDoneDate()V#ConditionalBranch(Ljava/lang/Object;,ne,18)#3
chord.util.Timer.checkDoneDate()V#Return(V)#18
chord.util.Timer.getInclusiveTimeStr()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#4
chord.util.Timer.getInclusiveTimeStr()Ljava/lang/String;#Get(Ljava/util/Date;,NONSTATIC,Lchord/util/Timer;,doneDate)#5
chord.util.Timer.getInclusiveTimeStr()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/util/Date;,getTime,()J)#6
chord.util.Timer.getInclusiveTimeStr()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#7
chord.util.Timer.getInclusiveTimeStr()Ljava/lang/String;#Get(Ljava/util/Date;,NONSTATIC,Lchord/util/Timer;,initDate)#8
chord.util.Timer.getInclusiveTimeStr()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/util/Date;,getTime,()J)#9
chord.util.Timer.getInclusiveTimeStr()Ljava/lang/String;#BinaryOp(J,sub)#10
chord.util.Timer.getInclusiveTimeStr()Ljava/lang/String;#LocalStore(J,1)#11
chord.util.Timer.getInclusiveTimeStr()Ljava/lang/String;#LocalLoad(J,1)#12
chord.util.Timer.getInclusiveTimeStr()Ljava/lang/String;#Invoke(STATIC,Lchord/util/Timer;,getTimeStr,(J)Ljava/lang/String;)#13
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalLoad(J,0)#0
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Constant(J,1000)#1
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#BinaryOp(J,rem)#2
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Invoke(STATIC,Ljava/lang/String;,valueOf,(J)Ljava/lang/String;)#3
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,2)#4
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#5
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#6
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Switch(26,1,17,2,8)#7
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalLoad(J,0)#26
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Constant(J,1000)#27
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#BinaryOp(J,div)#28
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalStore(J,0)#29
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalLoad(J,0)#30
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Constant(J,60)#31
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#BinaryOp(J,rem)#32
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Invoke(STATIC,Ljava/lang/String;,valueOf,(J)Ljava/lang/String;)#33
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,3)#34
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#35
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#36
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Constant(I,1)#37
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#ConditionalBranch(I,ne,47)#38
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#New(Ljava/lang/StringBuilder;,0)#39
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Dup(1,0)#40
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Constant(Ljava/lang/String;,"0")#41
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#42
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#43
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#44
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#45
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,3)#46
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalLoad(J,0)#47
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Constant(J,60)#48
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#BinaryOp(J,div)#49
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalStore(J,0)#50
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalLoad(J,0)#51
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Constant(J,60)#52
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#BinaryOp(J,rem)#53
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Invoke(STATIC,Ljava/lang/String;,valueOf,(J)Ljava/lang/String;)#54
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,4)#55
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,4)#56
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#57
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Constant(I,1)#58
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#ConditionalBranch(I,ne,68)#59
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#New(Ljava/lang/StringBuilder;,0)#60
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Dup(1,0)#61
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Constant(Ljava/lang/String;,"0")#62
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#63
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,4)#64
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#65
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#66
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,4)#67
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalLoad(J,0)#68
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Constant(J,60)#69
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#BinaryOp(J,div)#70
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalStore(J,0)#71
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalLoad(J,0)#72
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Constant(J,24)#73
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#BinaryOp(J,rem)#74
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Invoke(STATIC,Ljava/lang/String;,valueOf,(J)Ljava/lang/String;)#75
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,5)#76
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,5)#77
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/String;,length,()I)#78
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Constant(I,1)#79
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#ConditionalBranch(I,ne,89)#80
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#New(Ljava/lang/StringBuilder;,0)#81
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Dup(1,0)#82
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Constant(Ljava/lang/String;,"0")#83
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#84
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,5)#85
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#86
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#87
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,5)#88
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalLoad(J,0)#89
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Constant(J,24)#90
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#BinaryOp(J,div)#91
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalStore(J,0)#92
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalLoad(J,0)#93
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Constant(J,0)#94
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Comparison(J,cmp)#95
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Constant(I,0)#96
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#ConditionalBranch(I,le,101)#97
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#New(Ljava/lang/StringBuilder;,0)#101
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Dup(1,0)#102
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,5)#103
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#104
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#105
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Constant(Ljava/lang/String;,":")#106
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#107
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,4)#108
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#109
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Constant(Ljava/lang/String;,":")#110
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#111
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#112
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#113
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Constant(Ljava/lang/String;,":")#114
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#115
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#116
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#117
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Constant(Ljava/lang/String;," hh:mm:ss:ms")#118
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#119
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#120
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,6)#121
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,6)#122
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Return(Ljava/lang/Object;)#123
chord.util.Timer.getInclusiveTimeStr()Ljava/lang/String;#Return(Ljava/lang/Object;)#14
chord.program.RTA.build()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#279
chord.program.RTA.build()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#280
chord.program.RTA.build()V#Invoke(VIRTUAL,Ljava/io/PrintStream;,println,(Ljava/lang/String;)V)#281
chord.program.RTA.build()V#LocalLoad(Ljava/lang/Object;,0)#282
chord.program.RTA.build()V#Constant(L;,null)#283
chord.program.RTA.build()V#Put(Lchord/program/reflect/StaticReflectResolver;,NONSTATIC,Lchord/program/RTA;,staticReflectResolver)#284
chord.program.RTA.build()V#Return(V)#285
chord.program.RTA.getMethods()Lchord/util/IndexSet;#LocalLoad(Ljava/lang/Object;,0)#6
chord.program.RTA.getMethods()Lchord/util/IndexSet;#Get(Lchord/util/IndexSet;,NONSTATIC,Lchord/program/RTA;,methods)#7
chord.program.RTA.getMethods()Lchord/util/IndexSet;#Return(Ljava/lang/Object;)#8
chord.program.Program.buildMethods()V#Put(Lchord/util/IndexSet;,NONSTATIC,Lchord/program/Program;,methods)#128
chord.program.Program.buildMethods()V#LocalLoad(Ljava/lang/Object;,0)#129
chord.program.Program.buildMethods()V#LocalLoad(Ljava/lang/Object;,4)#130
chord.program.Program.buildMethods()V#Invoke(INTERFACE,Lchord/program/ScopeBuilder;,getReflect,()Lchord/program/Reflect;)#131
chord.program.RTA.getReflect()Lchord/program/Reflect;#LocalLoad(Ljava/lang/Object;,0)#0
chord.program.RTA.getReflect()Lchord/program/Reflect;#Get(Lchord/program/Reflect;,NONSTATIC,Lchord/program/RTA;,reflect)#1
chord.program.RTA.getReflect()Lchord/program/Reflect;#Constant(L;,null)#2
chord.program.RTA.getReflect()Lchord/program/Reflect;#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
chord.program.RTA.getReflect()Lchord/program/Reflect;#LocalLoad(Ljava/lang/Object;,0)#6
chord.program.RTA.getReflect()Lchord/program/Reflect;#Get(Lchord/program/Reflect;,NONSTATIC,Lchord/program/RTA;,reflect)#7
chord.program.RTA.getReflect()Lchord/program/Reflect;#Return(Ljava/lang/Object;)#8
chord.program.Program.buildMethods()V#Put(Lchord/program/Reflect;,NONSTATIC,Lchord/program/Program;,reflect)#132
chord.program.Program.buildMethods()V#LocalLoad(Ljava/lang/Object;,0)#133
chord.program.Program.buildMethods()V#Invoke(SPECIAL,Lchord/program/Program;,buildSignToMethodMap,()V)#134
chord.program.Program.buildSignToMethodMap()V#Get(Z,STATIC,Lchord/program/Program;,$assertionsDisabled)#0
chord.program.Program.buildSignToMethodMap()V#Constant(I,0)#1
chord.program.Program.buildSignToMethodMap()V#ConditionalBranch(I,ne,11)#2
chord.program.Program.buildSignToMethodMap()V#LocalLoad(Ljava/lang/Object;,0)#3
chord.program.Program.buildSignToMethodMap()V#Get(Ljava/util/Map;,NONSTATIC,Lchord/program/Program;,signToMethodMap)#4
chord.program.Program.buildSignToMethodMap()V#Constant(L;,null)#5
chord.program.Program.buildSignToMethodMap()V#ConditionalBranch(Ljava/lang/Object;,eq,11)#6
chord.program.Program.buildSignToMethodMap()V#Get(Z,STATIC,Lchord/program/Program;,$assertionsDisabled)#11
chord.program.Program.buildSignToMethodMap()V#Constant(I,0)#12
chord.program.Program.buildSignToMethodMap()V#ConditionalBranch(I,ne,22)#13
chord.program.Program.buildSignToMethodMap()V#LocalLoad(Ljava/lang/Object;,0)#14
chord.program.Program.buildSignToMethodMap()V#Get(Lchord/util/IndexSet;,NONSTATIC,Lchord/program/Program;,methods)#15
chord.program.Program.buildSignToMethodMap()V#Constant(L;,null)#16
chord.program.Program.buildSignToMethodMap()V#ConditionalBranch(Ljava/lang/Object;,ne,22)#17
chord.program.Program.buildSignToMethodMap()V#LocalLoad(Ljava/lang/Object;,0)#22
chord.program.Program.buildSignToMethodMap()V#New(Ljava/util/HashMap;,0)#23
chord.program.Program.buildSignToMethodMap()V#Dup(1,0)#24
chord.program.Program.buildSignToMethodMap()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#25
chord.program.Program.buildSignToMethodMap()V#Put(Ljava/util/Map;,NONSTATIC,Lchord/program/Program;,signToMethodMap)#26
chord.program.Program.buildSignToMethodMap()V#LocalLoad(Ljava/lang/Object;,0)#27
chord.program.Program.buildSignToMethodMap()V#Get(Lchord/util/IndexSet;,NONSTATIC,Lchord/program/Program;,methods)#28
chord.program.Program.buildSignToMethodMap()V#Invoke(VIRTUAL,Lchord/util/IndexSet;,iterator,()Ljava/util/Iterator;)#29
chord.util.IndexSet.iterator()Ljava/util/Iterator;#New(Lchord/util/IndexSet$Itr;,0)#0
chord.util.IndexSet.iterator()Ljava/util/Iterator;#Dup(1,0)#1
chord.util.IndexSet.iterator()Ljava/util/Iterator;#LocalLoad(Ljava/lang/Object;,0)#2
chord.util.IndexSet.iterator()Ljava/util/Iterator;#Constant(L;,null)#3
chord.util.IndexSet.iterator()Ljava/util/Iterator;#Invoke(SPECIAL,Lchord/util/IndexSet$Itr;,<init>,(Lchord/util/IndexSet;Lchord/util/IndexSet$Itr;)V)#4
chord.util.IndexSet$Itr.<init>(Lchord/util/IndexSet;Lchord/util/IndexSet$Itr;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.IndexSet$Itr.<init>(Lchord/util/IndexSet;Lchord/util/IndexSet$Itr;)V#LocalLoad(Ljava/lang/Object;,1)#1
chord.util.IndexSet$Itr.<init>(Lchord/util/IndexSet;Lchord/util/IndexSet$Itr;)V#Invoke(SPECIAL,Lchord/util/IndexSet$Itr;,<init>,(Lchord/util/IndexSet;)V)#2
chord.util.IndexSet$Itr.<init>(Lchord/util/IndexSet;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.IndexSet$Itr.<init>(Lchord/util/IndexSet;)V#LocalLoad(Ljava/lang/Object;,1)#1
chord.util.IndexSet$Itr.<init>(Lchord/util/IndexSet;)V#Put(Lchord/util/IndexSet;,NONSTATIC,Lchord/util/IndexSet$Itr;,this$0)#2
chord.util.IndexSet$Itr.<init>(Lchord/util/IndexSet;)V#LocalLoad(Ljava/lang/Object;,0)#3
chord.util.IndexSet$Itr.<init>(Lchord/util/IndexSet;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#4
chord.util.IndexSet$Itr.<init>(Lchord/util/IndexSet;)V#LocalLoad(Ljava/lang/Object;,0)#5
chord.util.IndexSet$Itr.<init>(Lchord/util/IndexSet;)V#Constant(I,0)#6
chord.util.IndexSet$Itr.<init>(Lchord/util/IndexSet;)V#Put(I,NONSTATIC,Lchord/util/IndexSet$Itr;,cursor)#7
chord.util.IndexSet$Itr.<init>(Lchord/util/IndexSet;)V#Return(V)#8
chord.util.IndexSet$Itr.<init>(Lchord/util/IndexSet;Lchord/util/IndexSet$Itr;)V#Return(V)#3
chord.util.IndexSet.iterator()Ljava/util/Iterator;#Return(Ljava/lang/Object;)#5
chord.program.Program.buildSignToMethodMap()V#LocalStore(Ljava/lang/Object;,2)#30
chord.program.Program.buildSignToMethodMap()V#Goto(69)#31
chord.program.Program.buildSignToMethodMap()V#LocalLoad(Ljava/lang/Object;,2)#69
chord.program.Program.buildSignToMethodMap()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#70
chord.util.IndexSet$Itr.hasNext()Z#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.IndexSet$Itr.hasNext()Z#Get(I,NONSTATIC,Lchord/util/IndexSet$Itr;,cursor)#1
chord.util.IndexSet$Itr.hasNext()Z#LocalLoad(Ljava/lang/Object;,0)#2
chord.util.IndexSet$Itr.hasNext()Z#Get(Lchord/util/IndexSet;,NONSTATIC,Lchord/util/IndexSet$Itr;,this$0)#3
chord.util.IndexSet$Itr.hasNext()Z#Get(Ljava/util/List;,NONSTATIC,Lchord/util/IndexSet;,list)#4
chord.util.IndexSet$Itr.hasNext()Z#Invoke(INTERFACE,Ljava/util/List;,size,()I)#5
chord.util.IndexSet$Itr.hasNext()Z#ConditionalBranch(I,eq,9)#6
chord.util.IndexSet$Itr.hasNext()Z#Constant(I,1)#7
chord.util.IndexSet$Itr.hasNext()Z#Return(I)#8
chord.program.Program.buildSignToMethodMap()V#Constant(I,0)#71
chord.program.Program.buildSignToMethodMap()V#ConditionalBranch(I,ne,32)#72
chord.program.Program.buildSignToMethodMap()V#LocalLoad(Ljava/lang/Object;,2)#32
chord.program.Program.buildSignToMethodMap()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#33
chord.util.IndexSet$Itr.next()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.IndexSet$Itr.next()Ljava/lang/Object;#Get(Lchord/util/IndexSet;,NONSTATIC,Lchord/util/IndexSet$Itr;,this$0)#1
chord.util.IndexSet$Itr.next()Ljava/lang/Object;#Get(Ljava/util/List;,NONSTATIC,Lchord/util/IndexSet;,list)#2
chord.util.IndexSet$Itr.next()Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#3
chord.util.IndexSet$Itr.next()Ljava/lang/Object;#Dup(1,0)#4
chord.util.IndexSet$Itr.next()Ljava/lang/Object;#Get(I,NONSTATIC,Lchord/util/IndexSet$Itr;,cursor)#5
chord.util.IndexSet$Itr.next()Ljava/lang/Object;#Dup(1,1)#6
chord.util.IndexSet$Itr.next()Ljava/lang/Object;#Constant(I,1)#7
chord.util.IndexSet$Itr.next()Ljava/lang/Object;#BinaryOp(I,add)#8
chord.util.IndexSet$Itr.next()Ljava/lang/Object;#Put(I,NONSTATIC,Lchord/util/IndexSet$Itr;,cursor)#9
chord.util.IndexSet$Itr.next()Ljava/lang/Object;#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#10
chord.util.IndexSet$Itr.next()Ljava/lang/Object;#Return(Ljava/lang/Object;)#11
chord.program.Program.buildSignToMethodMap()V#CheckCast(Ljoeq/Class/jq_Method;)#34
chord.program.Program.buildSignToMethodMap()V#LocalStore(Ljava/lang/Object;,1)#35
chord.program.Program.buildSignToMethodMap()V#LocalLoad(Ljava/lang/Object;,1)#36
chord.program.Program.buildSignToMethodMap()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getName,()Ljoeq/UTF/Utf8;)#37
chord.program.Program.buildSignToMethodMap()V#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,toString,()Ljava/lang/String;)#38
chord.program.Program.buildSignToMethodMap()V#LocalStore(Ljava/lang/Object;,3)#39
chord.program.Program.buildSignToMethodMap()V#LocalLoad(Ljava/lang/Object;,1)#40
chord.program.Program.buildSignToMethodMap()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getDesc,()Ljoeq/UTF/Utf8;)#41
chord.program.Program.buildSignToMethodMap()V#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,toString,()Ljava/lang/String;)#42
chord.program.Program.buildSignToMethodMap()V#LocalStore(Ljava/lang/Object;,4)#43
chord.program.Program.buildSignToMethodMap()V#LocalLoad(Ljava/lang/Object;,1)#44
chord.program.Program.buildSignToMethodMap()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getDeclaringClass,()Ljoeq/Class/jq_Class;)#45
chord.program.Program.buildSignToMethodMap()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getName,()Ljava/lang/String;)#46
chord.program.Program.buildSignToMethodMap()V#LocalStore(Ljava/lang/Object;,5)#47
chord.program.Program.buildSignToMethodMap()V#New(Ljava/lang/StringBuilder;,0)#48
chord.program.Program.buildSignToMethodMap()V#Dup(1,0)#49
chord.program.Program.buildSignToMethodMap()V#LocalLoad(Ljava/lang/Object;,3)#50
chord.program.Program.buildSignToMethodMap()V#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#51
chord.program.Program.buildSignToMethodMap()V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#52
chord.program.Program.buildSignToMethodMap()V#Constant(Ljava/lang/String;,":")#53
chord.program.Program.buildSignToMethodMap()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#54
chord.program.Program.buildSignToMethodMap()V#LocalLoad(Ljava/lang/Object;,4)#55
chord.program.Program.buildSignToMethodMap()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#56
chord.program.Program.buildSignToMethodMap()V#Constant(Ljava/lang/String;,"@")#57
chord.program.Program.buildSignToMethodMap()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#58
chord.program.Program.buildSignToMethodMap()V#LocalLoad(Ljava/lang/Object;,5)#59
chord.program.Program.buildSignToMethodMap()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#60
chord.program.Program.buildSignToMethodMap()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#61
chord.program.Program.buildSignToMethodMap()V#LocalStore(Ljava/lang/Object;,6)#62
chord.program.Program.buildSignToMethodMap()V#LocalLoad(Ljava/lang/Object;,0)#63
chord.program.Program.buildSignToMethodMap()V#Get(Ljava/util/Map;,NONSTATIC,Lchord/program/Program;,signToMethodMap)#64
chord.program.Program.buildSignToMethodMap()V#LocalLoad(Ljava/lang/Object;,6)#65
chord.program.Program.buildSignToMethodMap()V#LocalLoad(Ljava/lang/Object;,1)#66
chord.program.Program.buildSignToMethodMap()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#67
chord.program.Program.buildSignToMethodMap()V#Pop(1)#68
chord.util.IndexSet$Itr.hasNext()Z#Constant(I,0)#9
chord.util.IndexSet$Itr.hasNext()Z#Return(I)#10
chord.program.Program.buildSignToMethodMap()V#Return(V)#73
chord.program.Program.buildMethods()V#LocalLoad(Ljava/lang/Object;,0)#135
chord.program.Program.buildMethods()V#LocalLoad(Ljava/lang/Object;,1)#136
chord.program.Program.buildMethods()V#Invoke(SPECIAL,Lchord/program/Program;,saveMethodsFile,(Ljava/io/File;)V)#137
chord.program.Program.saveMethodsFile(Ljava/io/File;)V#New(Ljava/io/PrintWriter;,0)#0
chord.program.Program.saveMethodsFile(Ljava/io/File;)V#Dup(1,0)#1
chord.program.Program.saveMethodsFile(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,1)#2
chord.program.Program.saveMethodsFile(Ljava/io/File;)V#Invoke(SPECIAL,Ljava/io/PrintWriter;,<init>,(Ljava/io/File;)V)#3
chord.program.Program.saveMethodsFile(Ljava/io/File;)V#LocalStore(Ljava/lang/Object;,2)#4
chord.program.Program.saveMethodsFile(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,0)#5
chord.program.Program.saveMethodsFile(Ljava/io/File;)V#Get(Lchord/util/IndexSet;,NONSTATIC,Lchord/program/Program;,methods)#6
chord.program.Program.saveMethodsFile(Ljava/io/File;)V#Invoke(VIRTUAL,Lchord/util/IndexSet;,iterator,()Ljava/util/Iterator;)#7
chord.program.Program.saveMethodsFile(Ljava/io/File;)V#LocalStore(Ljava/lang/Object;,4)#8
chord.program.Program.saveMethodsFile(Ljava/io/File;)V#Goto(17)#9
chord.program.Program.saveMethodsFile(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,4)#17
chord.program.Program.saveMethodsFile(Ljava/io/File;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#18
chord.program.Program.saveMethodsFile(Ljava/io/File;)V#Constant(I,0)#19
chord.program.Program.saveMethodsFile(Ljava/io/File;)V#ConditionalBranch(I,ne,10)#20
chord.program.Program.saveMethodsFile(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,4)#10
chord.program.Program.saveMethodsFile(Ljava/io/File;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#11
chord.program.Program.saveMethodsFile(Ljava/io/File;)V#CheckCast(Ljoeq/Class/jq_Method;)#12
chord.program.Program.saveMethodsFile(Ljava/io/File;)V#LocalStore(Ljava/lang/Object;,3)#13
chord.program.Program.saveMethodsFile(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,2)#14
chord.program.Program.saveMethodsFile(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,3)#15
chord.program.Program.saveMethodsFile(Ljava/io/File;)V#Invoke(VIRTUAL,Ljava/io/PrintWriter;,println,(Ljava/lang/Object;)V)#16
chord.program.Program.saveMethodsFile(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,2)#21
chord.program.Program.saveMethodsFile(Ljava/io/File;)V#Invoke(VIRTUAL,Ljava/io/PrintWriter;,close,()V)#22
chord.program.Program.saveMethodsFile(Ljava/io/File;)V#Goto(30)#23
chord.program.Program.saveMethodsFile(Ljava/io/File;)V#Return(V)#30
chord.program.Program.buildMethods()V#LocalLoad(Ljava/lang/Object;,0)#138
chord.program.Program.buildMethods()V#LocalLoad(Ljava/lang/Object;,2)#139
chord.program.Program.buildMethods()V#Invoke(SPECIAL,Lchord/program/Program;,saveReflectFile,(Ljava/io/File;)V)#140
chord.program.Program.saveReflectFile(Ljava/io/File;)V#New(Ljava/io/PrintWriter;,0)#0
chord.program.Program.saveReflectFile(Ljava/io/File;)V#Dup(1,0)#1
chord.program.Program.saveReflectFile(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,1)#2
chord.program.Program.saveReflectFile(Ljava/io/File;)V#Invoke(SPECIAL,Ljava/io/PrintWriter;,<init>,(Ljava/io/File;)V)#3
chord.program.Program.saveReflectFile(Ljava/io/File;)V#LocalStore(Ljava/lang/Object;,2)#4
chord.program.Program.saveReflectFile(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,2)#5
chord.program.Program.saveReflectFile(Ljava/io/File;)V#Constant(Ljava/lang/String;,"# resolvedClsForNameSites")#6
chord.program.Program.saveReflectFile(Ljava/io/File;)V#Invoke(VIRTUAL,Ljava/io/PrintWriter;,println,(Ljava/lang/String;)V)#7
chord.program.Program.saveReflectFile(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,0)#8
chord.program.Program.saveReflectFile(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,0)#9
chord.program.Program.saveReflectFile(Ljava/io/File;)V#Get(Lchord/program/Reflect;,NONSTATIC,Lchord/program/Program;,reflect)#10
chord.program.Program.saveReflectFile(Ljava/io/File;)V#Invoke(VIRTUAL,Lchord/program/Reflect;,getResolvedClsForNameSites,()Ljava/util/List;)#11
chord.program.Reflect.getResolvedClsForNameSites()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
chord.program.Reflect.getResolvedClsForNameSites()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lchord/program/Reflect;,resolvedClsForNameSites)#1
chord.program.Reflect.getResolvedClsForNameSites()Ljava/util/List;#Return(Ljava/lang/Object;)#2
chord.program.Program.saveReflectFile(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,2)#12
chord.program.Program.saveReflectFile(Ljava/io/File;)V#Invoke(SPECIAL,Lchord/program/Program;,saveResolvedSites,(Ljava/util/List;Ljava/io/PrintWriter;)V)#13
chord.program.Program.saveResolvedSites(Ljava/util/List;Ljava/io/PrintWriter;)V#LocalLoad(Ljava/lang/Object;,1)#0
chord.program.Program.saveResolvedSites(Ljava/util/List;Ljava/io/PrintWriter;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#1
chord.program.Program.saveResolvedSites(Ljava/util/List;Ljava/io/PrintWriter;)V#LocalStore(Ljava/lang/Object;,4)#2
chord.program.Program.saveResolvedSites(Ljava/util/List;Ljava/io/PrintWriter;)V#Goto(15)#3
chord.program.Program.saveResolvedSites(Ljava/util/List;Ljava/io/PrintWriter;)V#LocalLoad(Ljava/lang/Object;,4)#15
chord.program.Program.saveResolvedSites(Ljava/util/List;Ljava/io/PrintWriter;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#16
chord.program.Program.saveResolvedSites(Ljava/util/List;Ljava/io/PrintWriter;)V#Constant(I,0)#17
chord.program.Program.saveResolvedSites(Ljava/util/List;Ljava/io/PrintWriter;)V#ConditionalBranch(I,ne,4)#18
chord.program.Program.saveResolvedSites(Ljava/util/List;Ljava/io/PrintWriter;)V#Return(V)#19
chord.program.Program.saveReflectFile(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,2)#14
chord.program.Program.saveReflectFile(Ljava/io/File;)V#Constant(Ljava/lang/String;,"# resolvedObjNewInstSites")#15
chord.program.Program.saveReflectFile(Ljava/io/File;)V#Invoke(VIRTUAL,Ljava/io/PrintWriter;,println,(Ljava/lang/String;)V)#16
chord.program.Program.saveReflectFile(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,0)#17
chord.program.Program.saveReflectFile(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,0)#18
chord.program.Program.saveReflectFile(Ljava/io/File;)V#Get(Lchord/program/Reflect;,NONSTATIC,Lchord/program/Program;,reflect)#19
chord.program.Program.saveReflectFile(Ljava/io/File;)V#Invoke(VIRTUAL,Lchord/program/Reflect;,getResolvedObjNewInstSites,()Ljava/util/List;)#20
chord.program.Reflect.getResolvedObjNewInstSites()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
chord.program.Reflect.getResolvedObjNewInstSites()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lchord/program/Reflect;,resolvedObjNewInstSites)#1
chord.program.Reflect.getResolvedObjNewInstSites()Ljava/util/List;#Return(Ljava/lang/Object;)#2
chord.program.Program.saveReflectFile(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,2)#21
chord.program.Program.saveReflectFile(Ljava/io/File;)V#Invoke(SPECIAL,Lchord/program/Program;,saveResolvedSites,(Ljava/util/List;Ljava/io/PrintWriter;)V)#22
chord.program.Program.saveReflectFile(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,2)#23
chord.program.Program.saveReflectFile(Ljava/io/File;)V#Constant(Ljava/lang/String;,"# resolvedConNewInstSites")#24
chord.program.Program.saveReflectFile(Ljava/io/File;)V#Invoke(VIRTUAL,Ljava/io/PrintWriter;,println,(Ljava/lang/String;)V)#25
chord.program.Program.saveReflectFile(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,0)#26
chord.program.Program.saveReflectFile(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,0)#27
chord.program.Program.saveReflectFile(Ljava/io/File;)V#Get(Lchord/program/Reflect;,NONSTATIC,Lchord/program/Program;,reflect)#28
chord.program.Program.saveReflectFile(Ljava/io/File;)V#Invoke(VIRTUAL,Lchord/program/Reflect;,getResolvedConNewInstSites,()Ljava/util/List;)#29
chord.program.Reflect.getResolvedConNewInstSites()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
chord.program.Reflect.getResolvedConNewInstSites()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lchord/program/Reflect;,resolvedConNewInstSites)#1
chord.program.Reflect.getResolvedConNewInstSites()Ljava/util/List;#Return(Ljava/lang/Object;)#2
chord.program.Program.saveReflectFile(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,2)#30
chord.program.Program.saveReflectFile(Ljava/io/File;)V#Invoke(SPECIAL,Lchord/program/Program;,saveResolvedSites,(Ljava/util/List;Ljava/io/PrintWriter;)V)#31
chord.program.Program.saveReflectFile(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,2)#32
chord.program.Program.saveReflectFile(Ljava/io/File;)V#Constant(Ljava/lang/String;,"# resolvedAryNewInstSites")#33
chord.program.Program.saveReflectFile(Ljava/io/File;)V#Invoke(VIRTUAL,Ljava/io/PrintWriter;,println,(Ljava/lang/String;)V)#34
chord.program.Program.saveReflectFile(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,0)#35
chord.program.Program.saveReflectFile(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,0)#36
chord.program.Program.saveReflectFile(Ljava/io/File;)V#Get(Lchord/program/Reflect;,NONSTATIC,Lchord/program/Program;,reflect)#37
chord.program.Program.saveReflectFile(Ljava/io/File;)V#Invoke(VIRTUAL,Lchord/program/Reflect;,getResolvedAryNewInstSites,()Ljava/util/List;)#38
chord.program.Reflect.getResolvedAryNewInstSites()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
chord.program.Reflect.getResolvedAryNewInstSites()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Lchord/program/Reflect;,resolvedAryNewInstSites)#1
chord.program.Reflect.getResolvedAryNewInstSites()Ljava/util/List;#Return(Ljava/lang/Object;)#2
chord.program.Program.saveReflectFile(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,2)#39
chord.program.Program.saveReflectFile(Ljava/io/File;)V#Invoke(SPECIAL,Lchord/program/Program;,saveResolvedSites,(Ljava/util/List;Ljava/io/PrintWriter;)V)#40
chord.program.Program.saveReflectFile(Ljava/io/File;)V#LocalLoad(Ljava/lang/Object;,2)#41
chord.program.Program.saveReflectFile(Ljava/io/File;)V#Invoke(VIRTUAL,Ljava/io/PrintWriter;,close,()V)#42
chord.program.Program.saveReflectFile(Ljava/io/File;)V#Goto(50)#43
chord.program.Program.saveReflectFile(Ljava/io/File;)V#Return(V)#50
chord.program.Program.buildMethods()V#Return(V)#141
chord.program.Program.buildClasses()V#Get(Z,STATIC,Lchord/program/Program;,$assertionsDisabled)#6
chord.program.Program.buildClasses()V#Constant(I,0)#7
chord.program.Program.buildClasses()V#ConditionalBranch(I,ne,17)#8
chord.program.Program.buildClasses()V#LocalLoad(Ljava/lang/Object;,0)#9
chord.program.Program.buildClasses()V#Get(Lchord/util/IndexSet;,NONSTATIC,Lchord/program/Program;,classes)#10
chord.program.Program.buildClasses()V#Constant(L;,null)#11
chord.program.Program.buildClasses()V#ConditionalBranch(Ljava/lang/Object;,eq,17)#12
chord.program.Program.buildClasses()V#Get(Z,STATIC,Lchord/program/Program;,$assertionsDisabled)#17
chord.program.Program.buildClasses()V#Constant(I,0)#18
chord.program.Program.buildClasses()V#ConditionalBranch(I,ne,28)#19
chord.program.Program.buildClasses()V#LocalLoad(Ljava/lang/Object;,0)#20
chord.program.Program.buildClasses()V#Get(Lchord/util/IndexSet;,NONSTATIC,Lchord/program/Program;,types)#21
chord.program.Program.buildClasses()V#Constant(L;,null)#22
chord.program.Program.buildClasses()V#ConditionalBranch(Ljava/lang/Object;,eq,28)#23
chord.program.Program.buildClasses()V#Get(Z,STATIC,Lchord/program/Program;,$assertionsDisabled)#28
chord.program.Program.buildClasses()V#Constant(I,0)#29
chord.program.Program.buildClasses()V#ConditionalBranch(I,ne,39)#30
chord.program.Program.buildClasses()V#LocalLoad(Ljava/lang/Object;,0)#31
chord.program.Program.buildClasses()V#Get(Ljava/util/Map;,NONSTATIC,Lchord/program/Program;,nameToClassMap)#32
chord.program.Program.buildClasses()V#Constant(L;,null)#33
chord.program.Program.buildClasses()V#ConditionalBranch(Ljava/lang/Object;,eq,39)#34
chord.program.Program.buildClasses()V#Get(Z,STATIC,Lchord/program/Program;,$assertionsDisabled)#39
chord.program.Program.buildClasses()V#Constant(I,0)#40
chord.program.Program.buildClasses()V#ConditionalBranch(I,ne,50)#41
chord.program.Program.buildClasses()V#LocalLoad(Ljava/lang/Object;,0)#42
chord.program.Program.buildClasses()V#Get(Ljava/util/Map;,NONSTATIC,Lchord/program/Program;,nameToTypeMap)#43
chord.program.Program.buildClasses()V#Constant(L;,null)#44
chord.program.Program.buildClasses()V#ConditionalBranch(Ljava/lang/Object;,eq,50)#45
chord.program.Program.buildClasses()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#50
chord.program.Program.buildClasses()V#LocalStore(Ljava/lang/Object;,1)#51
chord.program.Program.buildClasses()V#LocalLoad(Ljava/lang/Object;,1)#52
chord.program.Program.buildClasses()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getAllTypes,()[Ljoeq/Class/jq_Type;)#53
joeq.Class.PrimordialClassLoader.getAllTypes()[Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.PrimordialClassLoader.getAllTypes()[Ljoeq/Class/jq_Type;#Get([Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/PrimordialClassLoader;,allTypes)#1
joeq.Class.PrimordialClassLoader.getAllTypes()[Ljoeq/Class/jq_Type;#Return(Ljava/lang/Object;)#2
chord.program.Program.buildClasses()V#LocalStore(Ljava/lang/Object;,2)#54
chord.program.Program.buildClasses()V#LocalLoad(Ljava/lang/Object;,1)#55
chord.program.Program.buildClasses()V#Invoke(VIRTUAL,Ljoeq/Class/PrimordialClassLoader;,getNumTypes,()I)#56
joeq.Class.PrimordialClassLoader.getNumTypes()I#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.PrimordialClassLoader.getNumTypes()I#Get(I,NONSTATIC,Ljoeq/Class/PrimordialClassLoader;,numTypes)#1
joeq.Class.PrimordialClassLoader.getNumTypes()I#Return(I)#2
chord.program.Program.buildClasses()V#LocalStore(I,3)#57
chord.program.Program.buildClasses()V#LocalLoad(Ljava/lang/Object;,2)#58
chord.program.Program.buildClasses()V#Constant(I,0)#59
chord.program.Program.buildClasses()V#LocalLoad(I,3)#60
chord.program.Program.buildClasses()V#Get(Ljava/util/Comparator;,STATIC,Lchord/program/Program;,comparator)#61
chord.program.Program.buildClasses()V#Invoke(STATIC,Ljava/util/Arrays;,sort,([Ljava/lang/Object;IILjava/util/Comparator;)V)#62
chord.program.Program$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,0)#0
chord.program.Program$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,1)#1
chord.program.Program$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#CheckCast(Ljoeq/Class/jq_Type;)#2
chord.program.Program$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,2)#3
chord.program.Program$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#CheckCast(Ljoeq/Class/jq_Type;)#4
chord.program.Program$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#Invoke(VIRTUAL,Lchord/program/Program$1;,compare,(Ljoeq/Class/jq_Type;Ljoeq/Class/jq_Type;)I)#5
chord.program.Program$1.compare(Ljoeq/Class/jq_Type;Ljoeq/Class/jq_Type;)I#LocalLoad(Ljava/lang/Object;,1)#0
chord.program.Program$1.compare(Ljoeq/Class/jq_Type;Ljoeq/Class/jq_Type;)I#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,getName,()Ljava/lang/String;)#1
chord.program.Program$1.compare(Ljoeq/Class/jq_Type;Ljoeq/Class/jq_Type;)I#LocalStore(Ljava/lang/Object;,3)#2
chord.program.Program$1.compare(Ljoeq/Class/jq_Type;Ljoeq/Class/jq_Type;)I#LocalLoad(Ljava/lang/Object;,2)#3
chord.program.Program$1.compare(Ljoeq/Class/jq_Type;Ljoeq/Class/jq_Type;)I#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,getName,()Ljava/lang/String;)#4
chord.program.Program$1.compare(Ljoeq/Class/jq_Type;Ljoeq/Class/jq_Type;)I#LocalStore(Ljava/lang/Object;,4)#5
chord.program.Program$1.compare(Ljoeq/Class/jq_Type;Ljoeq/Class/jq_Type;)I#LocalLoad(Ljava/lang/Object;,3)#6
chord.program.Program$1.compare(Ljoeq/Class/jq_Type;Ljoeq/Class/jq_Type;)I#LocalLoad(Ljava/lang/Object;,4)#7
chord.program.Program$1.compare(Ljoeq/Class/jq_Type;Ljoeq/Class/jq_Type;)I#Invoke(VIRTUAL,Ljava/lang/String;,compareTo,(Ljava/lang/String;)I)#8
chord.program.Program$1.compare(Ljoeq/Class/jq_Type;Ljoeq/Class/jq_Type;)I#Return(I)#9
chord.program.Program$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#Return(I)#6
joeq.Class.jq_Primitive.getName()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Primitive.getName()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Ljoeq/Class/jq_Primitive;,name)#1
joeq.Class.jq_Primitive.getName()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
joeq.Class.jq_Array.getName()Ljava/lang/String;#New(Ljava/lang/StringBuilder;,0)#0
joeq.Class.jq_Array.getName()Ljava/lang/String;#Dup(1,0)#1
joeq.Class.jq_Array.getName()Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#2
joeq.Class.jq_Array.getName()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Array.getName()Ljava/lang/String;#Get(Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_Array;,element_type)#4
joeq.Class.jq_Array.getName()Ljava/lang/String;#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,getName,()Ljava/lang/String;)#5
joeq.Class.jq_Array.getName()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#6
joeq.Class.jq_Array.getName()Ljava/lang/String;#Constant(Ljava/lang/String;,"[]")#7
joeq.Class.jq_Array.getName()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#8
joeq.Class.jq_Array.getName()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#9
joeq.Class.jq_Array.getName()Ljava/lang/String;#Return(Ljava/lang/Object;)#10
chord.program.Program.buildClasses()V#LocalLoad(Ljava/lang/Object;,0)#63
chord.program.Program.buildClasses()V#New(Lchord/util/IndexSet;,0)#64
chord.program.Program.buildClasses()V#Dup(1,0)#65
chord.program.Program.buildClasses()V#LocalLoad(I,3)#66
chord.program.Program.buildClasses()V#Constant(I,2)#67
chord.program.Program.buildClasses()V#BinaryOp(I,add)#68
chord.program.Program.buildClasses()V#Invoke(SPECIAL,Lchord/util/IndexSet;,<init>,(I)V)#69
chord.util.IndexSet.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.IndexSet.<init>(I)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
chord.util.IndexSet.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#2
chord.util.IndexSet.<init>(I)V#New(Ljava/util/ArrayList;,0)#3
chord.util.IndexSet.<init>(I)V#Dup(1,0)#4
chord.util.IndexSet.<init>(I)V#LocalLoad(I,1)#5
chord.util.IndexSet.<init>(I)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,(I)V)#6
chord.util.IndexSet.<init>(I)V#Put(Ljava/util/List;,NONSTATIC,Lchord/util/IndexSet;,list)#7
chord.util.IndexSet.<init>(I)V#LocalLoad(Ljava/lang/Object;,0)#8
chord.util.IndexSet.<init>(I)V#New(Ljava/util/HashSet;,0)#9
chord.util.IndexSet.<init>(I)V#Dup(1,0)#10
chord.util.IndexSet.<init>(I)V#LocalLoad(I,1)#11
chord.util.IndexSet.<init>(I)V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,(I)V)#12
chord.util.IndexSet.<init>(I)V#Put(Ljava/util/HashSet;,NONSTATIC,Lchord/util/IndexSet;,hset)#13
chord.util.IndexSet.<init>(I)V#Return(V)#14
chord.program.Program.buildClasses()V#Put(Lchord/util/IndexSet;,NONSTATIC,Lchord/program/Program;,types)#70
chord.program.Program.buildClasses()V#LocalLoad(Ljava/lang/Object;,0)#71
chord.program.Program.buildClasses()V#New(Lchord/util/IndexSet;,0)#72
chord.program.Program.buildClasses()V#Dup(1,0)#73
chord.program.Program.buildClasses()V#Invoke(SPECIAL,Lchord/util/IndexSet;,<init>,()V)#74
chord.program.Program.buildClasses()V#Put(Lchord/util/IndexSet;,NONSTATIC,Lchord/program/Program;,classes)#75
chord.program.Program.buildClasses()V#LocalLoad(Ljava/lang/Object;,0)#76
chord.program.Program.buildClasses()V#Get(Lchord/util/IndexSet;,NONSTATIC,Lchord/program/Program;,types)#77
chord.program.Program.buildClasses()V#Get(Ljoeq/Class/jq_Reference$jq_NullType;,STATIC,Ljoeq/Class/jq_Reference$jq_NullType;,NULL_TYPE)#78
joeq.Class.jq_Reference$jq_NullType.<clinit>()V#New(Ljoeq/Class/jq_Reference$jq_NullType;,0)#0
joeq.Class.jq_Reference$jq_NullType.<clinit>()V#Dup(1,0)#1
joeq.Class.jq_Reference$jq_NullType.<clinit>()V#Invoke(SPECIAL,Ljoeq/Class/jq_Reference$jq_NullType;,<init>,()V)#2
joeq.Class.jq_Reference$jq_NullType.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Reference$jq_NullType.<init>()V#Constant(Ljava/lang/String;,"L&NULL;")#1
joeq.Class.jq_Reference$jq_NullType.<init>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#2
joeq.Class.jq_Reference$jq_NullType.<init>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#3
joeq.Class.jq_Reference$jq_NullType.<init>()V#Invoke(SPECIAL,Ljoeq/Class/jq_Reference;,<init>,(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;)V)#4
joeq.Class.jq_Reference$jq_NullType.getJDKName()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Reference$jq_NullType.getJDKName()Ljava/lang/String;#Get(Ljoeq/UTF/Utf8;,NONSTATIC,Ljoeq/Class/jq_Reference$jq_NullType;,desc)#1
joeq.Class.jq_Reference$jq_NullType.getJDKName()Ljava/lang/String;#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,toString,()Ljava/lang/String;)#2
joeq.Class.jq_Reference$jq_NullType.getJDKName()Ljava/lang/String;#Return(Ljava/lang/Object;)#3
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Reference;)Ljava/lang/Class;#LocalStore(Ljava/lang/Object;,2)#14
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Reference;)Ljava/lang/Class;#Get(Z,STATIC,Ljoeq/Runtime/BasicReflectionImpl;,REPORT_JDK_ERRORS)#15
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Reference;)Ljava/lang/Class;#Constant(I,0)#16
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Reference;)Ljava/lang/Class;#ConditionalBranch(I,eq,42)#17
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Reference;)Ljava/lang/Class;#Constant(L;,null)#42
joeq.Runtime.BasicReflectionImpl.getJDKType(Ljoeq/Class/jq_Reference;)Ljava/lang/Class;#Return(Ljava/lang/Object;)#43
joeq.Class.jq_Reference$jq_NullType.<init>()V#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Class.jq_Reference$jq_NullType.<init>()V#Constant(I,20)#6
joeq.Class.jq_Reference$jq_NullType.<init>()V#Put(I,NONSTATIC,Ljoeq/Class/jq_Reference$jq_NullType;,state)#7
joeq.Class.jq_Reference$jq_NullType.<init>()V#LocalLoad(Ljava/lang/Object;,0)#8
joeq.Class.jq_Reference$jq_NullType.<init>()V#Constant(I,10)#9
joeq.Class.jq_Reference$jq_NullType.<init>()V#New([Ljoeq/Class/jq_Type;,1)#10
joeq.Class.jq_Reference$jq_NullType.<init>()V#Put([Ljoeq/Class/jq_Type;,NONSTATIC,Ljoeq/Class/jq_Reference$jq_NullType;,display)#11
joeq.Class.jq_Reference$jq_NullType.<init>()V#LocalLoad(Ljava/lang/Object;,0)#12
joeq.Class.jq_Reference$jq_NullType.<init>()V#Constant(I,0)#13
joeq.Class.jq_Reference$jq_NullType.<init>()V#New([Ljoeq/Class/jq_Reference;,1)#14
joeq.Class.jq_Reference$jq_NullType.<init>()V#Put([Ljoeq/Class/jq_Reference;,NONSTATIC,Ljoeq/Class/jq_Reference$jq_NullType;,s_s_array)#15
joeq.Class.jq_Reference$jq_NullType.<init>()V#LocalLoad(Ljava/lang/Object;,0)#16
joeq.Class.jq_Reference$jq_NullType.<init>()V#Constant(I,0)#17
joeq.Class.jq_Reference$jq_NullType.<init>()V#Put(I,NONSTATIC,Ljoeq/Class/jq_Reference$jq_NullType;,s_s_array_length)#18
joeq.Class.jq_Reference$jq_NullType.<init>()V#Return(V)#19
joeq.Class.jq_Reference$jq_NullType.<clinit>()V#Put(Ljoeq/Class/jq_Reference$jq_NullType;,STATIC,Ljoeq/Class/jq_Reference$jq_NullType;,NULL_TYPE)#3
joeq.Class.jq_Reference$jq_NullType.<clinit>()V#Return(V)#4
chord.program.Program.buildClasses()V#Invoke(VIRTUAL,Lchord/util/IndexSet;,add,(Ljava/lang/Object;)Z)#79
chord.program.Program.buildClasses()V#Pop(1)#80
chord.program.Program.buildClasses()V#LocalLoad(Ljava/lang/Object;,0)#81
chord.program.Program.buildClasses()V#Get(Lchord/util/IndexSet;,NONSTATIC,Lchord/program/Program;,types)#82
chord.program.Program.buildClasses()V#Get(Ljoeq/Compiler/Quad/BytecodeToQuad$jq_ReturnAddressType;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$jq_ReturnAddressType;,INSTANCE)#83
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.<clinit>()V#New(Ljoeq/Compiler/Quad/BytecodeToQuad$jq_ReturnAddressType;,0)#0
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.<clinit>()V#Dup(1,0)#1
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.<clinit>()V#Invoke(SPECIAL,Ljoeq/Compiler/Quad/BytecodeToQuad$jq_ReturnAddressType;,<init>,()V)#2
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.<init>()V#Constant(Ljava/lang/String;,"L&ReturnAddress;")#1
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.<init>()V#Invoke(STATIC,Ljoeq/UTF/Utf8;,get,(Ljava/lang/String;)Ljoeq/UTF/Utf8;)#2
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.<init>()V#Get(Ljoeq/Class/PrimordialClassLoader;,STATIC,Ljoeq/Class/PrimordialClassLoader;,loader)#3
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.<init>()V#Invoke(SPECIAL,Ljoeq/Class/jq_Reference;,<init>,(Ljoeq/UTF/Utf8;Ljava/lang/ClassLoader;)V)#4
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.getJDKName()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.getJDKName()Ljava/lang/String;#Get(Ljoeq/UTF/Utf8;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$jq_ReturnAddressType;,desc)#1
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.getJDKName()Ljava/lang/String;#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,toString,()Ljava/lang/String;)#2
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.getJDKName()Ljava/lang/String;#Return(Ljava/lang/Object;)#3
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.<init>()V#Return(V)#5
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.<clinit>()V#Put(Ljoeq/Compiler/Quad/BytecodeToQuad$jq_ReturnAddressType;,STATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$jq_ReturnAddressType;,INSTANCE)#3
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.<clinit>()V#Return(V)#4
chord.program.Program.buildClasses()V#Invoke(VIRTUAL,Lchord/util/IndexSet;,add,(Ljava/lang/Object;)Z)#84
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.hashCode()I#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.hashCode()I#Get(Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$jq_ReturnAddressType;,returnTarget)#1
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.hashCode()I#Constant(L;,null)#2
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.hashCode()I#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.hashCode()I#Constant(I,0)#4
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.hashCode()I#Return(I)#5
chord.program.Program.buildClasses()V#Pop(1)#85
chord.program.Program.buildClasses()V#Constant(I,0)#86
chord.program.Program.buildClasses()V#LocalStore(I,4)#87
chord.program.Program.buildClasses()V#Goto(128)#88
chord.program.Program.buildClasses()V#LocalLoad(I,4)#128
chord.program.Program.buildClasses()V#LocalLoad(I,3)#129
chord.program.Program.buildClasses()V#ConditionalBranch(I,lt,89)#130
chord.program.Program.buildClasses()V#LocalLoad(Ljava/lang/Object;,2)#89
chord.program.Program.buildClasses()V#LocalLoad(I,4)#90
chord.program.Program.buildClasses()V#ArrayLoad(Ljava/lang/Object;)#91
chord.program.Program.buildClasses()V#LocalStore(Ljava/lang/Object;,5)#92
chord.program.Program.buildClasses()V#Get(Z,STATIC,Lchord/program/Program;,$assertionsDisabled)#93
chord.program.Program.buildClasses()V#Constant(I,0)#94
chord.program.Program.buildClasses()V#ConditionalBranch(I,ne,103)#95
chord.program.Program.buildClasses()V#LocalLoad(Ljava/lang/Object;,5)#96
chord.program.Program.buildClasses()V#Constant(L;,null)#97
chord.program.Program.buildClasses()V#ConditionalBranch(Ljava/lang/Object;,ne,103)#98
chord.program.Program.buildClasses()V#LocalLoad(Ljava/lang/Object;,0)#103
chord.program.Program.buildClasses()V#Get(Lchord/util/IndexSet;,NONSTATIC,Lchord/program/Program;,types)#104
chord.program.Program.buildClasses()V#LocalLoad(Ljava/lang/Object;,5)#105
chord.program.Program.buildClasses()V#Invoke(VIRTUAL,Lchord/util/IndexSet;,add,(Ljava/lang/Object;)Z)#106
chord.program.Program.buildClasses()V#Pop(1)#107
chord.program.Program.buildClasses()V#LocalLoad(Ljava/lang/Object;,5)#108
chord.program.Program.buildClasses()V#Instanceof(Ljoeq/Class/jq_Reference;)#109
chord.program.Program.buildClasses()V#Constant(I,0)#110
chord.program.Program.buildClasses()V#ConditionalBranch(I,eq,124)#111
chord.program.Program.buildClasses()V#LocalLoad(I,4)#124
chord.program.Program.buildClasses()V#Constant(I,1)#125
chord.program.Program.buildClasses()V#BinaryOp(I,add)#126
chord.program.Program.buildClasses()V#LocalStore(I,4)#127
chord.program.Program.buildClasses()V#LocalLoad(Ljava/lang/Object;,5)#112
chord.program.Program.buildClasses()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,isPrepared,()Z)#113
chord.program.Program.buildClasses()V#Constant(I,0)#114
chord.program.Program.buildClasses()V#ConditionalBranch(I,eq,124)#115
chord.program.Program.buildClasses()V#LocalLoad(Ljava/lang/Object;,5)#116
chord.program.Program.buildClasses()V#CheckCast(Ljoeq/Class/jq_Reference;)#117
chord.program.Program.buildClasses()V#LocalStore(Ljava/lang/Object;,6)#118
chord.program.Program.buildClasses()V#LocalLoad(Ljava/lang/Object;,0)#119
chord.program.Program.buildClasses()V#Get(Lchord/util/IndexSet;,NONSTATIC,Lchord/program/Program;,classes)#120
chord.program.Program.buildClasses()V#LocalLoad(Ljava/lang/Object;,6)#121
chord.program.Program.buildClasses()V#Invoke(VIRTUAL,Lchord/util/IndexSet;,add,(Ljava/lang/Object;)Z)#122
chord.program.Program.buildClasses()V#Pop(1)#123
chord.program.Program.buildClasses()V#LocalLoad(Ljava/lang/Object;,0)#131
chord.program.Program.buildClasses()V#Invoke(SPECIAL,Lchord/program/Program;,buildNameToClassMap,()V)#132
chord.program.Program.buildNameToClassMap()V#Get(Z,STATIC,Lchord/program/Program;,$assertionsDisabled)#0
chord.program.Program.buildNameToClassMap()V#Constant(I,0)#1
chord.program.Program.buildNameToClassMap()V#ConditionalBranch(I,ne,11)#2
chord.program.Program.buildNameToClassMap()V#LocalLoad(Ljava/lang/Object;,0)#3
chord.program.Program.buildNameToClassMap()V#Get(Ljava/util/Map;,NONSTATIC,Lchord/program/Program;,nameToClassMap)#4
chord.program.Program.buildNameToClassMap()V#Constant(L;,null)#5
chord.program.Program.buildNameToClassMap()V#ConditionalBranch(Ljava/lang/Object;,eq,11)#6
chord.program.Program.buildNameToClassMap()V#Get(Z,STATIC,Lchord/program/Program;,$assertionsDisabled)#11
chord.program.Program.buildNameToClassMap()V#Constant(I,0)#12
chord.program.Program.buildNameToClassMap()V#ConditionalBranch(I,ne,22)#13
chord.program.Program.buildNameToClassMap()V#LocalLoad(Ljava/lang/Object;,0)#14
chord.program.Program.buildNameToClassMap()V#Get(Lchord/util/IndexSet;,NONSTATIC,Lchord/program/Program;,classes)#15
chord.program.Program.buildNameToClassMap()V#Constant(L;,null)#16
chord.program.Program.buildNameToClassMap()V#ConditionalBranch(Ljava/lang/Object;,ne,22)#17
chord.program.Program.buildNameToClassMap()V#LocalLoad(Ljava/lang/Object;,0)#22
chord.program.Program.buildNameToClassMap()V#New(Ljava/util/HashMap;,0)#23
chord.program.Program.buildNameToClassMap()V#Dup(1,0)#24
chord.program.Program.buildNameToClassMap()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#25
chord.program.Program.buildNameToClassMap()V#Put(Ljava/util/Map;,NONSTATIC,Lchord/program/Program;,nameToClassMap)#26
chord.program.Program.buildNameToClassMap()V#LocalLoad(Ljava/lang/Object;,0)#27
chord.program.Program.buildNameToClassMap()V#Get(Lchord/util/IndexSet;,NONSTATIC,Lchord/program/Program;,classes)#28
chord.program.Program.buildNameToClassMap()V#Invoke(VIRTUAL,Lchord/util/IndexSet;,iterator,()Ljava/util/Iterator;)#29
chord.program.Program.buildNameToClassMap()V#LocalStore(Ljava/lang/Object;,2)#30
chord.program.Program.buildNameToClassMap()V#Goto(43)#31
chord.program.Program.buildNameToClassMap()V#LocalLoad(Ljava/lang/Object;,2)#43
chord.program.Program.buildNameToClassMap()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#44
chord.program.Program.buildNameToClassMap()V#Constant(I,0)#45
chord.program.Program.buildNameToClassMap()V#ConditionalBranch(I,ne,32)#46
chord.program.Program.buildNameToClassMap()V#LocalLoad(Ljava/lang/Object;,2)#32
chord.program.Program.buildNameToClassMap()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#33
chord.program.Program.buildNameToClassMap()V#CheckCast(Ljoeq/Class/jq_Reference;)#34
chord.program.Program.buildNameToClassMap()V#LocalStore(Ljava/lang/Object;,1)#35
chord.program.Program.buildNameToClassMap()V#LocalLoad(Ljava/lang/Object;,0)#36
chord.program.Program.buildNameToClassMap()V#Get(Ljava/util/Map;,NONSTATIC,Lchord/program/Program;,nameToClassMap)#37
chord.program.Program.buildNameToClassMap()V#LocalLoad(Ljava/lang/Object;,1)#38
chord.program.Program.buildNameToClassMap()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Reference;,getName,()Ljava/lang/String;)#39
chord.program.Program.buildNameToClassMap()V#LocalLoad(Ljava/lang/Object;,1)#40
chord.program.Program.buildNameToClassMap()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#41
chord.program.Program.buildNameToClassMap()V#Pop(1)#42
chord.program.Program.buildNameToClassMap()V#Return(V)#47
chord.program.Program.buildClasses()V#LocalLoad(Ljava/lang/Object;,0)#133
chord.program.Program.buildClasses()V#Invoke(SPECIAL,Lchord/program/Program;,buildNameToTypeMap,()V)#134
chord.program.Program.buildNameToTypeMap()V#Get(Z,STATIC,Lchord/program/Program;,$assertionsDisabled)#0
chord.program.Program.buildNameToTypeMap()V#Constant(I,0)#1
chord.program.Program.buildNameToTypeMap()V#ConditionalBranch(I,ne,11)#2
chord.program.Program.buildNameToTypeMap()V#LocalLoad(Ljava/lang/Object;,0)#3
chord.program.Program.buildNameToTypeMap()V#Get(Ljava/util/Map;,NONSTATIC,Lchord/program/Program;,nameToTypeMap)#4
chord.program.Program.buildNameToTypeMap()V#Constant(L;,null)#5
chord.program.Program.buildNameToTypeMap()V#ConditionalBranch(Ljava/lang/Object;,eq,11)#6
chord.program.Program.buildNameToTypeMap()V#Get(Z,STATIC,Lchord/program/Program;,$assertionsDisabled)#11
chord.program.Program.buildNameToTypeMap()V#Constant(I,0)#12
chord.program.Program.buildNameToTypeMap()V#ConditionalBranch(I,ne,22)#13
chord.program.Program.buildNameToTypeMap()V#LocalLoad(Ljava/lang/Object;,0)#14
chord.program.Program.buildNameToTypeMap()V#Get(Lchord/util/IndexSet;,NONSTATIC,Lchord/program/Program;,types)#15
chord.program.Program.buildNameToTypeMap()V#Constant(L;,null)#16
chord.program.Program.buildNameToTypeMap()V#ConditionalBranch(Ljava/lang/Object;,ne,22)#17
chord.program.Program.buildNameToTypeMap()V#LocalLoad(Ljava/lang/Object;,0)#22
chord.program.Program.buildNameToTypeMap()V#New(Ljava/util/HashMap;,0)#23
chord.program.Program.buildNameToTypeMap()V#Dup(1,0)#24
chord.program.Program.buildNameToTypeMap()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#25
chord.program.Program.buildNameToTypeMap()V#Put(Ljava/util/Map;,NONSTATIC,Lchord/program/Program;,nameToTypeMap)#26
chord.program.Program.buildNameToTypeMap()V#LocalLoad(Ljava/lang/Object;,0)#27
chord.program.Program.buildNameToTypeMap()V#Get(Lchord/util/IndexSet;,NONSTATIC,Lchord/program/Program;,types)#28
chord.program.Program.buildNameToTypeMap()V#Invoke(VIRTUAL,Lchord/util/IndexSet;,iterator,()Ljava/util/Iterator;)#29
chord.program.Program.buildNameToTypeMap()V#LocalStore(Ljava/lang/Object;,2)#30
chord.program.Program.buildNameToTypeMap()V#Goto(43)#31
chord.program.Program.buildNameToTypeMap()V#LocalLoad(Ljava/lang/Object;,2)#43
chord.program.Program.buildNameToTypeMap()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#44
chord.program.Program.buildNameToTypeMap()V#Constant(I,0)#45
chord.program.Program.buildNameToTypeMap()V#ConditionalBranch(I,ne,32)#46
chord.program.Program.buildNameToTypeMap()V#LocalLoad(Ljava/lang/Object;,2)#32
chord.program.Program.buildNameToTypeMap()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#33
chord.program.Program.buildNameToTypeMap()V#CheckCast(Ljoeq/Class/jq_Type;)#34
chord.program.Program.buildNameToTypeMap()V#LocalStore(Ljava/lang/Object;,1)#35
chord.program.Program.buildNameToTypeMap()V#LocalLoad(Ljava/lang/Object;,0)#36
chord.program.Program.buildNameToTypeMap()V#Get(Ljava/util/Map;,NONSTATIC,Lchord/program/Program;,nameToTypeMap)#37
chord.program.Program.buildNameToTypeMap()V#LocalLoad(Ljava/lang/Object;,1)#38
chord.program.Program.buildNameToTypeMap()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,getName,()Ljava/lang/String;)#39
joeq.Class.jq_Reference$jq_NullType.getName()Ljava/lang/String;#Constant(Ljava/lang/String;,"<null>")#0
joeq.Class.jq_Reference$jq_NullType.getName()Ljava/lang/String;#Return(Ljava/lang/Object;)#1
chord.program.Program.buildNameToTypeMap()V#LocalLoad(Ljava/lang/Object;,1)#40
chord.program.Program.buildNameToTypeMap()V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#41
chord.program.Program.buildNameToTypeMap()V#Pop(1)#42
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.getName()Ljava/lang/String;#Constant(Ljava/lang/String;,"<retaddr>")#0
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.getName()Ljava/lang/String;#Return(Ljava/lang/Object;)#1
chord.program.Program.buildNameToTypeMap()V#Return(V)#47
chord.program.Program.buildClasses()V#Return(V)#135
chord.program.Program.getTypes()Lchord/util/IndexSet;#LocalLoad(Ljava/lang/Object;,0)#6
chord.program.Program.getTypes()Lchord/util/IndexSet;#Get(Lchord/util/IndexSet;,NONSTATIC,Lchord/program/Program;,types)#7
chord.program.Program.getTypes()Lchord/util/IndexSet;#Return(Ljava/lang/Object;)#8
chord.analyses.type.DomT.fill()V#LocalStore(Ljava/lang/Object;,2)#4
chord.analyses.type.DomT.fill()V#LocalLoad(Ljava/lang/Object;,2)#5
chord.analyses.type.DomT.fill()V#Invoke(VIRTUAL,Lchord/util/IndexSet;,iterator,()Ljava/util/Iterator;)#6
chord.analyses.type.DomT.fill()V#LocalStore(Ljava/lang/Object;,4)#7
chord.analyses.type.DomT.fill()V#Goto(17)#8
chord.analyses.type.DomT.fill()V#LocalLoad(Ljava/lang/Object;,4)#17
chord.analyses.type.DomT.fill()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#18
chord.analyses.type.DomT.fill()V#Constant(I,0)#19
chord.analyses.type.DomT.fill()V#ConditionalBranch(I,ne,9)#20
chord.analyses.type.DomT.fill()V#LocalLoad(Ljava/lang/Object;,4)#9
chord.analyses.type.DomT.fill()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#10
chord.analyses.type.DomT.fill()V#CheckCast(Ljoeq/Class/jq_Type;)#11
chord.analyses.type.DomT.fill()V#LocalStore(Ljava/lang/Object;,3)#12
chord.analyses.type.DomT.fill()V#LocalLoad(Ljava/lang/Object;,0)#13
chord.analyses.type.DomT.fill()V#LocalLoad(Ljava/lang/Object;,3)#14
chord.analyses.type.DomT.fill()V#Invoke(VIRTUAL,Lchord/analyses/type/DomT;,add,(Ljava/lang/Object;)Z)#15
chord.util.IndexMap.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.IndexMap.add(Ljava/lang/Object;)Z#Get(Ljava/util/HashMap;,NONSTATIC,Lchord/util/IndexMap;,hmap)#1
chord.util.IndexMap.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#2
chord.util.IndexMap.add(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/util/HashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
chord.util.IndexMap.add(Ljava/lang/Object;)Z#CheckCast(Ljava/lang/Integer;)#4
chord.util.IndexMap.add(Ljava/lang/Object;)Z#LocalStore(Ljava/lang/Object;,2)#5
chord.util.IndexMap.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,2)#6
chord.util.IndexMap.add(Ljava/lang/Object;)Z#Constant(L;,null)#7
chord.util.IndexMap.add(Ljava/lang/Object;)Z#ConditionalBranch(Ljava/lang/Object;,ne,31)#8
chord.util.IndexMap.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#9
chord.util.IndexMap.add(Ljava/lang/Object;)Z#Get(Ljava/util/List;,NONSTATIC,Lchord/util/IndexMap;,list)#10
chord.util.IndexMap.add(Ljava/lang/Object;)Z#Invoke(INTERFACE,Ljava/util/List;,size,()I)#11
chord.util.IndexMap.add(Ljava/lang/Object;)Z#LocalStore(I,3)#12
chord.util.IndexMap.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#13
chord.util.IndexMap.add(Ljava/lang/Object;)Z#Get(Ljava/util/List;,NONSTATIC,Lchord/util/IndexMap;,list)#14
chord.util.IndexMap.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#15
chord.util.IndexMap.add(Ljava/lang/Object;)Z#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#16
chord.util.IndexMap.add(Ljava/lang/Object;)Z#Pop(1)#17
chord.util.IndexMap.add(Ljava/lang/Object;)Z#New(Ljava/lang/Integer;,0)#18
chord.util.IndexMap.add(Ljava/lang/Object;)Z#Dup(1,0)#19
chord.util.IndexMap.add(Ljava/lang/Object;)Z#LocalLoad(I,3)#20
chord.util.IndexMap.add(Ljava/lang/Object;)Z#Invoke(SPECIAL,Ljava/lang/Integer;,<init>,(I)V)#21
chord.util.IndexMap.add(Ljava/lang/Object;)Z#LocalStore(Ljava/lang/Object;,2)#22
chord.util.IndexMap.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#23
chord.util.IndexMap.add(Ljava/lang/Object;)Z#Get(Ljava/util/HashMap;,NONSTATIC,Lchord/util/IndexMap;,hmap)#24
chord.util.IndexMap.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#25
chord.util.IndexMap.add(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,2)#26
chord.util.IndexMap.add(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/util/HashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#27
chord.util.IndexMap.add(Ljava/lang/Object;)Z#Pop(1)#28
chord.util.IndexMap.add(Ljava/lang/Object;)Z#Constant(I,1)#29
chord.util.IndexMap.add(Ljava/lang/Object;)Z#Return(I)#30
chord.analyses.type.DomT.fill()V#Pop(1)#16
chord.analyses.type.DomT.fill()V#Return(V)#21
chord.project.analyses.ProgramDom.run()V#LocalLoad(Ljava/lang/Object;,0)#6
chord.project.analyses.ProgramDom.run()V#Invoke(VIRTUAL,Lchord/project/analyses/ProgramDom;,save,()V)#7
chord.project.analyses.ProgramDom.save()V#Get(I,STATIC,Lchord/project/Config;,verbose)#0
chord.project.analyses.ProgramDom.save()V#Constant(I,1)#1
chord.project.analyses.ProgramDom.save()V#ConditionalBranch(I,lt,18)#2
chord.project.analyses.ProgramDom.save()V#Get(Ljava/io/PrintStream;,STATIC,Ljava/lang/System;,out)#3
chord.project.analyses.ProgramDom.save()V#New(Ljava/lang/StringBuilder;,0)#4
chord.project.analyses.ProgramDom.save()V#Dup(1,0)#5
chord.project.analyses.ProgramDom.save()V#Constant(Ljava/lang/String;,"SAVING dom ")#6
chord.project.analyses.ProgramDom.save()V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#7
chord.project.analyses.ProgramDom.save()V#LocalLoad(Ljava/lang/Object;,0)#8
chord.project.analyses.ProgramDom.save()V#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/analyses/ProgramDom;,name)#9
chord.project.analyses.ProgramDom.save()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#10
chord.project.analyses.ProgramDom.save()V#Constant(Ljava/lang/String;," size: ")#11
chord.project.analyses.ProgramDom.save()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#12
chord.project.analyses.ProgramDom.save()V#LocalLoad(Ljava/lang/Object;,0)#13
chord.project.analyses.ProgramDom.save()V#Invoke(VIRTUAL,Lchord/project/analyses/ProgramDom;,size,()I)#14
chord.util.IndexMap.size()I#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.IndexMap.size()I#Get(Ljava/util/List;,NONSTATIC,Lchord/util/IndexMap;,list)#1
chord.util.IndexMap.size()I#Invoke(INTERFACE,Ljava/util/List;,size,()I)#2
chord.util.IndexMap.size()I#Return(I)#3
chord.project.analyses.ProgramDom.save()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#15
chord.project.analyses.ProgramDom.save()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#16
chord.project.analyses.ProgramDom.save()V#Invoke(VIRTUAL,Ljava/io/PrintStream;,println,(Ljava/lang/String;)V)#17
chord.project.analyses.ProgramDom.save()V#LocalLoad(Ljava/lang/Object;,0)#18
chord.project.analyses.ProgramDom.save()V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,bddbddbWorkDirName)#19
chord.project.analyses.ProgramDom.save()V#Get(Z,STATIC,Lchord/project/Config;,saveDomMaps)#20
chord.project.analyses.ProgramDom.save()V#Invoke(SPECIAL,Lchord/bddbddb/Dom;,save,(Ljava/lang/String;Z)V)#21
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Constant(Ljava/lang/String;,"")#0
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalStore(Ljava/lang/Object;,3)#1
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalLoad(I,2)#2
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Constant(I,0)#3
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#ConditionalBranch(I,eq,50)#4
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#New(Ljava/lang/StringBuilder;,0)#5
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Dup(1,0)#6
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,0)#7
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Get(Ljava/lang/String;,NONSTATIC,Lchord/bddbddb/Dom;,name)#8
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#9
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#10
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Constant(Ljava/lang/String;,".map")#11
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#12
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#13
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalStore(Ljava/lang/Object;,3)#14
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#New(Ljava/io/File;,0)#15
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Dup(1,0)#16
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,1)#17
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,3)#18
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Invoke(SPECIAL,Ljava/io/File;,<init>,(Ljava/lang/String;Ljava/lang/String;)V)#19
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalStore(Ljava/lang/Object;,4)#20
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#New(Ljava/io/PrintWriter;,0)#21
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Dup(1,0)#22
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,4)#23
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Invoke(SPECIAL,Ljava/io/PrintWriter;,<init>,(Ljava/io/File;)V)#24
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalStore(Ljava/lang/Object;,5)#25
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,0)#26
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Invoke(VIRTUAL,Lchord/bddbddb/Dom;,size,()I)#27
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalStore(I,6)#28
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Constant(I,0)#29
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalStore(I,7)#30
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Goto(45)#31
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalLoad(I,7)#45
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalLoad(I,6)#46
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#ConditionalBranch(I,lt,32)#47
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,0)#32
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalLoad(I,7)#33
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Invoke(VIRTUAL,Lchord/bddbddb/Dom;,get,(I)Ljava/lang/Object;)#34
chord.util.IndexMap.get(I)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.IndexMap.get(I)Ljava/lang/Object;#Get(Ljava/util/List;,NONSTATIC,Lchord/util/IndexMap;,list)#1
chord.util.IndexMap.get(I)Ljava/lang/Object;#LocalLoad(I,1)#2
chord.util.IndexMap.get(I)Ljava/lang/Object;#Invoke(INTERFACE,Ljava/util/List;,get,(I)Ljava/lang/Object;)#3
chord.util.IndexMap.get(I)Ljava/lang/Object;#Return(Ljava/lang/Object;)#4
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalStore(Ljava/lang/Object;,8)#35
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,5)#36
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,0)#37
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,8)#38
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Invoke(VIRTUAL,Lchord/bddbddb/Dom;,toUniqueString,(Ljava/lang/Object;)Ljava/lang/String;)#39
chord.bddbddb.Dom.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#0
chord.bddbddb.Dom.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#Constant(L;,null)#1
chord.bddbddb.Dom.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#ConditionalBranch(Ljava/lang/Object;,ne,5)#2
chord.bddbddb.Dom.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#5
chord.bddbddb.Dom.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/Object;,toString,()Ljava/lang/String;)#6
joeq.Class.jq_Reference$jq_NullType.toString()Ljava/lang/String;#Constant(Ljava/lang/String;,"NULL_TYPE")#0
joeq.Class.jq_Reference$jq_NullType.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#1
chord.bddbddb.Dom.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#Return(Ljava/lang/Object;)#7
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Invoke(VIRTUAL,Ljava/io/PrintWriter;,println,(Ljava/lang/String;)V)#40
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalLoad(I,7)#41
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Constant(I,1)#42
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#BinaryOp(I,add)#43
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalStore(I,7)#44
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.toString()Ljava/lang/String;#New(Ljava/lang/StringBuilder;,0)#0
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.toString()Ljava/lang/String;#Dup(1,0)#1
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.toString()Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#2
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.toString()Ljava/lang/String;#Constant(Ljava/lang/String;,"<retaddr> (target=")#3
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#4
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.toString()Ljava/lang/String;#Get(Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/BytecodeToQuad$jq_ReturnAddressType;,returnTarget)#6
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#7
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.toString()Ljava/lang/String;#Constant(Ljava/lang/String;,")")#8
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#9
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#10
joeq.Compiler.Quad.BytecodeToQuad$jq_ReturnAddressType.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#11
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,5)#48
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Invoke(VIRTUAL,Ljava/io/PrintWriter;,close,()V)#49
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#New(Ljava/lang/StringBuilder;,0)#50
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Dup(1,0)#51
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,0)#52
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Get(Ljava/lang/String;,NONSTATIC,Lchord/bddbddb/Dom;,name)#53
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#54
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#55
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Constant(Ljava/lang/String;,".dom")#56
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#57
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#58
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalStore(Ljava/lang/Object;,4)#59
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#New(Ljava/io/File;,0)#60
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Dup(1,0)#61
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,1)#62
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,4)#63
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Invoke(SPECIAL,Ljava/io/File;,<init>,(Ljava/lang/String;Ljava/lang/String;)V)#64
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalStore(Ljava/lang/Object;,5)#65
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#New(Ljava/io/PrintWriter;,0)#66
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Dup(1,0)#67
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,5)#68
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Invoke(SPECIAL,Ljava/io/PrintWriter;,<init>,(Ljava/io/File;)V)#69
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalStore(Ljava/lang/Object;,6)#70
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,0)#71
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Invoke(VIRTUAL,Lchord/bddbddb/Dom;,size,()I)#72
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalStore(I,7)#73
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,6)#74
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#New(Ljava/lang/StringBuilder;,0)#75
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Dup(1,0)#76
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,0)#77
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Get(Ljava/lang/String;,NONSTATIC,Lchord/bddbddb/Dom;,name)#78
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#79
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#80
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Constant(Ljava/lang/String;," ")#81
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#82
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalLoad(I,7)#83
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#84
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Constant(Ljava/lang/String;," ")#85
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#86
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,3)#87
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#88
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#89
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Invoke(VIRTUAL,Ljava/io/PrintWriter;,println,(Ljava/lang/String;)V)#90
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#LocalLoad(Ljava/lang/Object;,6)#91
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Invoke(VIRTUAL,Ljava/io/PrintWriter;,close,()V)#92
chord.bddbddb.Dom.save(Ljava/lang/String;Z)V#Return(V)#93
chord.project.analyses.ProgramDom.save()V#Goto(29)#22
chord.project.analyses.ProgramDom.save()V#Get(Z,STATIC,Lchord/project/Config;,classic)#29
chord.project.analyses.ProgramDom.save()V#Constant(I,0)#30
chord.project.analyses.ProgramDom.save()V#ConditionalBranch(I,eq,35)#31
chord.project.analyses.ProgramDom.save()V#Invoke(STATIC,Lchord/project/ClassicProject;,g,()Lchord/project/ClassicProject;)#32
chord.project.analyses.ProgramDom.save()V#LocalLoad(Ljava/lang/Object;,0)#33
chord.project.analyses.ProgramDom.save()V#Invoke(VIRTUAL,Lchord/project/ClassicProject;,setTrgtDone,(Ljava/lang/Object;)V)#34
chord.project.ClassicProject.setTrgtDone(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.ClassicProject.setTrgtDone(Ljava/lang/Object;)V#Get(Ljava/util/Set;,NONSTATIC,Lchord/project/ClassicProject;,doneTrgts)#1
chord.project.ClassicProject.setTrgtDone(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#2
chord.project.ClassicProject.setTrgtDone(Ljava/lang/Object;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#3
chord.project.ClassicProject.setTrgtDone(Ljava/lang/Object;)V#Pop(1)#4
chord.project.ClassicProject.setTrgtDone(Ljava/lang/Object;)V#Return(V)#5
chord.project.analyses.ProgramDom.save()V#Return(V)#35
chord.project.analyses.ProgramDom.run()V#Return(V)#8
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,2)#141
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(VIRTUAL,Lchord/util/Timer;,done,()V)#142
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Get(I,STATIC,Lchord/project/Config;,verbose)#143
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Constant(I,1)#144
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#ConditionalBranch(I,lt,157)#145
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Get(Ljava/io/PrintStream;,STATIC,Ljava/lang/System;,out)#146
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#New(Ljava/lang/StringBuilder;,0)#147
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Dup(1,0)#148
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Constant(Ljava/lang/String;,"LEAVE: ")#149
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#150
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,1)#151
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#152
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#153
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(VIRTUAL,Ljava/io/PrintStream;,println,(Ljava/lang/String;)V)#154
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,2)#155
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(STATIC,Lchord/project/ClassicProject;,printTimer,(Lchord/util/Timer;)V)#156
chord.project.ClassicProject.printTimer(Lchord/util/Timer;)V#Get(Ljava/io/PrintStream;,STATIC,Ljava/lang/System;,out)#0
chord.project.ClassicProject.printTimer(Lchord/util/Timer;)V#New(Ljava/lang/StringBuilder;,0)#1
chord.project.ClassicProject.printTimer(Lchord/util/Timer;)V#Dup(1,0)#2
chord.project.ClassicProject.printTimer(Lchord/util/Timer;)V#Constant(Ljava/lang/String;,"Exclusive time: ")#3
chord.project.ClassicProject.printTimer(Lchord/util/Timer;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#4
chord.project.ClassicProject.printTimer(Lchord/util/Timer;)V#LocalLoad(Ljava/lang/Object;,0)#5
chord.project.ClassicProject.printTimer(Lchord/util/Timer;)V#Invoke(VIRTUAL,Lchord/util/Timer;,getExclusiveTimeStr,()Ljava/lang/String;)#6
chord.util.Timer.getExclusiveTimeStr()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.Timer.getExclusiveTimeStr()Ljava/lang/String;#Invoke(SPECIAL,Lchord/util/Timer;,checkInitDate,()V)#1
chord.util.Timer.getExclusiveTimeStr()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#2
chord.util.Timer.getExclusiveTimeStr()Ljava/lang/String;#Invoke(SPECIAL,Lchord/util/Timer;,checkDoneDate,()V)#3
chord.util.Timer.getExclusiveTimeStr()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#4
chord.util.Timer.getExclusiveTimeStr()Ljava/lang/String;#Get(J,NONSTATIC,Lchord/util/Timer;,elapsedExclusiveTime)#5
chord.util.Timer.getExclusiveTimeStr()Ljava/lang/String;#Invoke(STATIC,Lchord/util/Timer;,getTimeStr,(J)Ljava/lang/String;)#6
chord.util.Timer.getExclusiveTimeStr()Ljava/lang/String;#Return(Ljava/lang/Object;)#7
chord.project.ClassicProject.printTimer(Lchord/util/Timer;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#7
chord.project.ClassicProject.printTimer(Lchord/util/Timer;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#8
chord.project.ClassicProject.printTimer(Lchord/util/Timer;)V#Invoke(VIRTUAL,Ljava/io/PrintStream;,println,(Ljava/lang/String;)V)#9
chord.project.ClassicProject.printTimer(Lchord/util/Timer;)V#Get(Ljava/io/PrintStream;,STATIC,Ljava/lang/System;,out)#10
chord.project.ClassicProject.printTimer(Lchord/util/Timer;)V#New(Ljava/lang/StringBuilder;,0)#11
chord.project.ClassicProject.printTimer(Lchord/util/Timer;)V#Dup(1,0)#12
chord.project.ClassicProject.printTimer(Lchord/util/Timer;)V#Constant(Ljava/lang/String;,"Inclusive time: ")#13
chord.project.ClassicProject.printTimer(Lchord/util/Timer;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#14
chord.project.ClassicProject.printTimer(Lchord/util/Timer;)V#LocalLoad(Ljava/lang/Object;,0)#15
chord.project.ClassicProject.printTimer(Lchord/util/Timer;)V#Invoke(VIRTUAL,Lchord/util/Timer;,getInclusiveTimeStr,()Ljava/lang/String;)#16
chord.project.ClassicProject.printTimer(Lchord/util/Timer;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#17
chord.project.ClassicProject.printTimer(Lchord/util/Timer;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#18
chord.project.ClassicProject.printTimer(Lchord/util/Timer;)V#Invoke(VIRTUAL,Ljava/io/PrintStream;,println,(Ljava/lang/String;)V)#19
chord.project.ClassicProject.printTimer(Lchord/util/Timer;)V#Return(V)#20
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,0)#157
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,1)#158
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(VIRTUAL,Lchord/project/ClassicProject;,setTaskDone,(Lchord/project/ITask;)V)#159
chord.project.ClassicProject.setTaskDone(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.ClassicProject.setTaskDone(Lchord/project/ITask;)V#Get(Ljava/util/Set;,NONSTATIC,Lchord/project/ClassicProject;,doneTasks)#1
chord.project.ClassicProject.setTaskDone(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,1)#2
chord.project.ClassicProject.setTaskDone(Lchord/project/ITask;)V#Invoke(INTERFACE,Ljava/util/Set;,add,(Ljava/lang/Object;)Z)#3
chord.project.ClassicProject.setTaskDone(Lchord/project/ITask;)V#Pop(1)#4
chord.project.ClassicProject.setTaskDone(Lchord/project/ITask;)V#Return(V)#5
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,0)#160
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ClassicProject;,taskToProducedTrgtsMap)#161
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,1)#162
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#163
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#CheckCast(Ljava/util/List;)#164
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalStore(Ljava/lang/Object;,4)#165
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Get(Z,STATIC,Lchord/project/ClassicProject;,$assertionsDisabled)#166
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Constant(I,0)#167
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#ConditionalBranch(I,ne,176)#168
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,4)#169
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Constant(L;,null)#170
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#ConditionalBranch(Ljava/lang/Object;,ne,176)#171
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,4)#176
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#177
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalStore(Ljava/lang/Object;,6)#178
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Goto(186)#179
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,6)#186
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#187
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Constant(I,0)#188
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#ConditionalBranch(I,ne,180)#189
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,6)#180
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#181
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalStore(Ljava/lang/Object;,5)#182
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,0)#183
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,5)#184
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Invoke(VIRTUAL,Lchord/project/ClassicProject;,setTrgtDone,(Ljava/lang/Object;)V)#185
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Return(V)#190
chord.analyses.field.DomF.init()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.field.DomF.init()V#Constant(L;,null)#1
chord.analyses.field.DomF.init()V#Invoke(VIRTUAL,Lchord/analyses/field/DomF;,getOrAdd,(Ljava/lang/Object;)I)#2
chord.util.IndexMap.getOrAdd(Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.IndexMap.getOrAdd(Ljava/lang/Object;)I#Get(Ljava/util/HashMap;,NONSTATIC,Lchord/util/IndexMap;,hmap)#1
chord.util.IndexMap.getOrAdd(Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,1)#2
chord.util.IndexMap.getOrAdd(Ljava/lang/Object;)I#Invoke(VIRTUAL,Ljava/util/HashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
chord.util.IndexMap.getOrAdd(Ljava/lang/Object;)I#CheckCast(Ljava/lang/Integer;)#4
chord.util.IndexMap.getOrAdd(Ljava/lang/Object;)I#LocalStore(Ljava/lang/Object;,2)#5
chord.util.IndexMap.getOrAdd(Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,2)#6
chord.util.IndexMap.getOrAdd(Ljava/lang/Object;)I#Constant(L;,null)#7
chord.util.IndexMap.getOrAdd(Ljava/lang/Object;)I#ConditionalBranch(Ljava/lang/Object;,ne,29)#8
chord.util.IndexMap.getOrAdd(Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,0)#9
chord.util.IndexMap.getOrAdd(Ljava/lang/Object;)I#Get(Ljava/util/List;,NONSTATIC,Lchord/util/IndexMap;,list)#10
chord.util.IndexMap.getOrAdd(Ljava/lang/Object;)I#Invoke(INTERFACE,Ljava/util/List;,size,()I)#11
chord.util.IndexMap.getOrAdd(Ljava/lang/Object;)I#LocalStore(I,3)#12
chord.util.IndexMap.getOrAdd(Ljava/lang/Object;)I#New(Ljava/lang/Integer;,0)#13
chord.util.IndexMap.getOrAdd(Ljava/lang/Object;)I#Dup(1,0)#14
chord.util.IndexMap.getOrAdd(Ljava/lang/Object;)I#LocalLoad(I,3)#15
chord.util.IndexMap.getOrAdd(Ljava/lang/Object;)I#Invoke(SPECIAL,Ljava/lang/Integer;,<init>,(I)V)#16
chord.util.IndexMap.getOrAdd(Ljava/lang/Object;)I#LocalStore(Ljava/lang/Object;,2)#17
chord.util.IndexMap.getOrAdd(Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,0)#18
chord.util.IndexMap.getOrAdd(Ljava/lang/Object;)I#Get(Ljava/util/List;,NONSTATIC,Lchord/util/IndexMap;,list)#19
chord.util.IndexMap.getOrAdd(Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,1)#20
chord.util.IndexMap.getOrAdd(Ljava/lang/Object;)I#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#21
chord.util.IndexMap.getOrAdd(Ljava/lang/Object;)I#Pop(1)#22
chord.util.IndexMap.getOrAdd(Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,0)#23
chord.util.IndexMap.getOrAdd(Ljava/lang/Object;)I#Get(Ljava/util/HashMap;,NONSTATIC,Lchord/util/IndexMap;,hmap)#24
chord.util.IndexMap.getOrAdd(Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,1)#25
chord.util.IndexMap.getOrAdd(Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,2)#26
chord.util.IndexMap.getOrAdd(Ljava/lang/Object;)I#Invoke(VIRTUAL,Ljava/util/HashMap;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#27
chord.util.IndexMap.getOrAdd(Ljava/lang/Object;)I#Pop(1)#28
chord.util.IndexMap.getOrAdd(Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,2)#29
chord.util.IndexMap.getOrAdd(Ljava/lang/Object;)I#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#30
chord.util.IndexMap.getOrAdd(Ljava/lang/Object;)I#Return(I)#31
chord.analyses.field.DomF.init()V#Pop(1)#3
chord.analyses.field.DomF.init()V#Return(V)#4
chord.project.analyses.ProgramDom.fill()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.analyses.ProgramDom.fill()V#Instanceof(Lchord/program/visitors/IClassVisitor;)#1
chord.project.analyses.ProgramDom.fill()V#Constant(I,0)#2
chord.project.analyses.ProgramDom.fill()V#ConditionalBranch(I,eq,12)#3
chord.project.analyses.ProgramDom.fill()V#New(Lchord/project/VisitorHandler;,0)#4
chord.project.analyses.ProgramDom.fill()V#Dup(1,0)#5
chord.project.analyses.ProgramDom.fill()V#LocalLoad(Ljava/lang/Object;,0)#6
chord.project.analyses.ProgramDom.fill()V#Invoke(SPECIAL,Lchord/project/VisitorHandler;,<init>,(Lchord/project/ITask;)V)#7
chord.project.VisitorHandler.<init>(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.VisitorHandler.<init>(Lchord/project/ITask;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
chord.project.VisitorHandler.<init>(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,0)#2
chord.project.VisitorHandler.<init>(Lchord/project/ITask;)V#New(Ljava/util/ArrayList;,0)#3
chord.project.VisitorHandler.<init>(Lchord/project/ITask;)V#Dup(1,0)#4
chord.project.VisitorHandler.<init>(Lchord/project/ITask;)V#Constant(I,1)#5
chord.project.VisitorHandler.<init>(Lchord/project/ITask;)V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,(I)V)#6
chord.project.VisitorHandler.<init>(Lchord/project/ITask;)V#Put(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,tasks)#7
chord.project.VisitorHandler.<init>(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,0)#8
chord.project.VisitorHandler.<init>(Lchord/project/ITask;)V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,tasks)#9
chord.project.VisitorHandler.<init>(Lchord/project/ITask;)V#LocalLoad(Ljava/lang/Object;,1)#10
chord.project.VisitorHandler.<init>(Lchord/project/ITask;)V#Invoke(INTERFACE,Ljava/util/Collection;,add,(Ljava/lang/Object;)Z)#11
chord.project.VisitorHandler.<init>(Lchord/project/ITask;)V#Pop(1)#12
chord.project.VisitorHandler.<init>(Lchord/project/ITask;)V#Return(V)#13
chord.project.analyses.ProgramDom.fill()V#LocalStore(Ljava/lang/Object;,1)#8
chord.project.analyses.ProgramDom.fill()V#LocalLoad(Ljava/lang/Object;,1)#9
chord.project.analyses.ProgramDom.fill()V#Invoke(VIRTUAL,Lchord/project/VisitorHandler;,visitProgram,()V)#10
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,tasks)#1
chord.project.VisitorHandler.visitProgram()V#Invoke(INTERFACE,Ljava/util/Collection;,iterator,()Ljava/util/Iterator;)#2
chord.project.VisitorHandler.visitProgram()V#LocalStore(Ljava/lang/Object;,2)#3
chord.project.VisitorHandler.visitProgram()V#Goto(256)#4
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,2)#256
chord.project.VisitorHandler.visitProgram()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#257
chord.project.VisitorHandler.visitProgram()V#Constant(I,0)#258
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(I,ne,5)#259
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,2)#5
chord.project.VisitorHandler.visitProgram()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#6
chord.project.VisitorHandler.visitProgram()V#CheckCast(Lchord/project/ITask;)#7
chord.project.VisitorHandler.visitProgram()V#LocalStore(Ljava/lang/Object;,1)#8
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,1)#9
chord.project.VisitorHandler.visitProgram()V#Instanceof(Lchord/program/visitors/IClassVisitor;)#10
chord.project.VisitorHandler.visitProgram()V#Constant(I,0)#11
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(I,eq,28)#12
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#13
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,cvs)#14
chord.project.VisitorHandler.visitProgram()V#Constant(L;,null)#15
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(Ljava/lang/Object;,ne,22)#16
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#17
chord.project.VisitorHandler.visitProgram()V#New(Ljava/util/ArrayList;,0)#18
chord.project.VisitorHandler.visitProgram()V#Dup(1,0)#19
chord.project.VisitorHandler.visitProgram()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#20
chord.project.VisitorHandler.visitProgram()V#Put(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,cvs)#21
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#22
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,cvs)#23
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,1)#24
chord.project.VisitorHandler.visitProgram()V#CheckCast(Lchord/program/visitors/IClassVisitor;)#25
chord.project.VisitorHandler.visitProgram()V#Invoke(INTERFACE,Ljava/util/Collection;,add,(Ljava/lang/Object;)Z)#26
chord.project.VisitorHandler.visitProgram()V#Pop(1)#27
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,1)#28
chord.project.VisitorHandler.visitProgram()V#Instanceof(Lchord/program/visitors/IFieldVisitor;)#29
chord.project.VisitorHandler.visitProgram()V#Constant(I,0)#30
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(I,eq,47)#31
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#32
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,fvs)#33
chord.project.VisitorHandler.visitProgram()V#Constant(L;,null)#34
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(Ljava/lang/Object;,ne,41)#35
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#36
chord.project.VisitorHandler.visitProgram()V#New(Ljava/util/ArrayList;,0)#37
chord.project.VisitorHandler.visitProgram()V#Dup(1,0)#38
chord.project.VisitorHandler.visitProgram()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#39
chord.project.VisitorHandler.visitProgram()V#Put(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,fvs)#40
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#41
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,fvs)#42
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,1)#43
chord.project.VisitorHandler.visitProgram()V#CheckCast(Lchord/program/visitors/IFieldVisitor;)#44
chord.project.VisitorHandler.visitProgram()V#Invoke(INTERFACE,Ljava/util/Collection;,add,(Ljava/lang/Object;)Z)#45
chord.project.VisitorHandler.visitProgram()V#Pop(1)#46
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,1)#47
chord.project.VisitorHandler.visitProgram()V#Instanceof(Lchord/program/visitors/IMethodVisitor;)#48
chord.project.VisitorHandler.visitProgram()V#Constant(I,0)#49
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(I,eq,66)#50
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,1)#66
chord.project.VisitorHandler.visitProgram()V#Instanceof(Lchord/program/visitors/IInstVisitor;)#67
chord.project.VisitorHandler.visitProgram()V#Constant(I,0)#68
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(I,eq,85)#69
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,1)#85
chord.project.VisitorHandler.visitProgram()V#Instanceof(Lchord/program/visitors/IHeapInstVisitor;)#86
chord.project.VisitorHandler.visitProgram()V#Constant(I,0)#87
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(I,eq,104)#88
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,1)#104
chord.project.VisitorHandler.visitProgram()V#Instanceof(Lchord/program/visitors/IInvokeInstVisitor;)#105
chord.project.VisitorHandler.visitProgram()V#Constant(I,0)#106
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(I,eq,123)#107
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,1)#123
chord.project.VisitorHandler.visitProgram()V#Instanceof(Lchord/program/visitors/INewInstVisitor;)#124
chord.project.VisitorHandler.visitProgram()V#Constant(I,0)#125
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(I,eq,142)#126
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,1)#142
chord.project.VisitorHandler.visitProgram()V#Instanceof(Lchord/program/visitors/IMoveInstVisitor;)#143
chord.project.VisitorHandler.visitProgram()V#Constant(I,0)#144
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(I,eq,161)#145
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,1)#161
chord.project.VisitorHandler.visitProgram()V#Instanceof(Lchord/program/visitors/ICastInstVisitor;)#162
chord.project.VisitorHandler.visitProgram()V#Constant(I,0)#163
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(I,eq,180)#164
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,1)#180
chord.project.VisitorHandler.visitProgram()V#Instanceof(Lchord/program/visitors/IPhiInstVisitor;)#181
chord.project.VisitorHandler.visitProgram()V#Constant(I,0)#182
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(I,eq,199)#183
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,1)#199
chord.project.VisitorHandler.visitProgram()V#Instanceof(Lchord/program/visitors/IReturnInstVisitor;)#200
chord.project.VisitorHandler.visitProgram()V#Constant(I,0)#201
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(I,eq,218)#202
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,1)#218
chord.project.VisitorHandler.visitProgram()V#Instanceof(Lchord/program/visitors/IAcqLockInstVisitor;)#219
chord.project.VisitorHandler.visitProgram()V#Constant(I,0)#220
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(I,eq,237)#221
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,1)#237
chord.project.VisitorHandler.visitProgram()V#Instanceof(Lchord/program/visitors/IRelLockInstVisitor;)#238
chord.project.VisitorHandler.visitProgram()V#Constant(I,0)#239
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(I,eq,256)#240
chord.project.VisitorHandler.visitProgram()V#Invoke(STATIC,Lchord/program/Program;,g,()Lchord/program/Program;)#260
chord.project.VisitorHandler.visitProgram()V#LocalStore(Ljava/lang/Object;,1)#261
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#262
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,1)#263
chord.project.VisitorHandler.visitProgram()V#Invoke(VIRTUAL,Lchord/program/Program;,getMethods,()Lchord/util/IndexSet;)#264
chord.program.Program.getMethods()Lchord/util/IndexSet;#LocalLoad(Ljava/lang/Object;,0)#0
chord.program.Program.getMethods()Lchord/util/IndexSet;#Get(Lchord/util/IndexSet;,NONSTATIC,Lchord/program/Program;,methods)#1
chord.program.Program.getMethods()Lchord/util/IndexSet;#Constant(L;,null)#2
chord.program.Program.getMethods()Lchord/util/IndexSet;#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
chord.program.Program.getMethods()Lchord/util/IndexSet;#LocalLoad(Ljava/lang/Object;,0)#6
chord.program.Program.getMethods()Lchord/util/IndexSet;#Get(Lchord/util/IndexSet;,NONSTATIC,Lchord/program/Program;,methods)#7
chord.program.Program.getMethods()Lchord/util/IndexSet;#Return(Ljava/lang/Object;)#8
chord.project.VisitorHandler.visitProgram()V#Put(Lchord/util/IndexSet;,NONSTATIC,Lchord/project/VisitorHandler;,reachableMethods)#265
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#266
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#267
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,ivs)#268
chord.project.VisitorHandler.visitProgram()V#Constant(L;,null)#269
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(Ljava/lang/Object;,ne,309)#270
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#271
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,hivs)#272
chord.project.VisitorHandler.visitProgram()V#Constant(L;,null)#273
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(Ljava/lang/Object;,ne,309)#274
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#275
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,iivs)#276
chord.project.VisitorHandler.visitProgram()V#Constant(L;,null)#277
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(Ljava/lang/Object;,ne,309)#278
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#279
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,nivs)#280
chord.project.VisitorHandler.visitProgram()V#Constant(L;,null)#281
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(Ljava/lang/Object;,ne,309)#282
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#283
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,mivs)#284
chord.project.VisitorHandler.visitProgram()V#Constant(L;,null)#285
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(Ljava/lang/Object;,ne,309)#286
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#287
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,civs)#288
chord.project.VisitorHandler.visitProgram()V#Constant(L;,null)#289
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(Ljava/lang/Object;,ne,309)#290
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#291
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,pivs)#292
chord.project.VisitorHandler.visitProgram()V#Constant(L;,null)#293
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(Ljava/lang/Object;,ne,309)#294
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#295
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,rivs)#296
chord.project.VisitorHandler.visitProgram()V#Constant(L;,null)#297
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(Ljava/lang/Object;,ne,309)#298
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#299
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,acqivs)#300
chord.project.VisitorHandler.visitProgram()V#Constant(L;,null)#301
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(Ljava/lang/Object;,ne,309)#302
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#303
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,relivs)#304
chord.project.VisitorHandler.visitProgram()V#Constant(L;,null)#305
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(Ljava/lang/Object;,ne,309)#306
chord.project.VisitorHandler.visitProgram()V#Constant(I,0)#307
chord.project.VisitorHandler.visitProgram()V#Goto(310)#308
chord.project.VisitorHandler.visitProgram()V#Put(Z,NONSTATIC,Lchord/project/VisitorHandler;,doCFGs)#310
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#311
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,cvs)#312
chord.project.VisitorHandler.visitProgram()V#Constant(L;,null)#313
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(Ljava/lang/Object;,eq,368)#314
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,1)#315
chord.project.VisitorHandler.visitProgram()V#Invoke(VIRTUAL,Lchord/program/Program;,getClasses,()Lchord/util/IndexSet;)#316
chord.program.Program.getClasses()Lchord/util/IndexSet;#LocalLoad(Ljava/lang/Object;,0)#0
chord.program.Program.getClasses()Lchord/util/IndexSet;#Get(Lchord/util/IndexSet;,NONSTATIC,Lchord/program/Program;,classes)#1
chord.program.Program.getClasses()Lchord/util/IndexSet;#Constant(L;,null)#2
chord.program.Program.getClasses()Lchord/util/IndexSet;#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
chord.program.Program.getClasses()Lchord/util/IndexSet;#LocalLoad(Ljava/lang/Object;,0)#6
chord.program.Program.getClasses()Lchord/util/IndexSet;#Get(Lchord/util/IndexSet;,NONSTATIC,Lchord/program/Program;,classes)#7
chord.program.Program.getClasses()Lchord/util/IndexSet;#Return(Ljava/lang/Object;)#8
chord.project.VisitorHandler.visitProgram()V#LocalStore(Ljava/lang/Object;,2)#317
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,2)#318
chord.project.VisitorHandler.visitProgram()V#Invoke(VIRTUAL,Lchord/util/IndexSet;,iterator,()Ljava/util/Iterator;)#319
chord.project.VisitorHandler.visitProgram()V#LocalStore(Ljava/lang/Object;,4)#320
chord.project.VisitorHandler.visitProgram()V#Goto(364)#321
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,4)#364
chord.project.VisitorHandler.visitProgram()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#365
chord.project.VisitorHandler.visitProgram()V#Constant(I,0)#366
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(I,ne,322)#367
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,4)#322
chord.project.VisitorHandler.visitProgram()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#323
chord.project.VisitorHandler.visitProgram()V#CheckCast(Ljoeq/Class/jq_Reference;)#324
chord.project.VisitorHandler.visitProgram()V#LocalStore(Ljava/lang/Object;,3)#325
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,3)#326
chord.project.VisitorHandler.visitProgram()V#Instanceof(Ljoeq/Class/jq_Array;)#327
chord.project.VisitorHandler.visitProgram()V#Constant(I,0)#328
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(I,eq,331)#329
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,3)#331
chord.project.VisitorHandler.visitProgram()V#CheckCast(Ljoeq/Class/jq_Class;)#332
chord.project.VisitorHandler.visitProgram()V#LocalStore(Ljava/lang/Object;,5)#333
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#334
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,cvs)#335
chord.project.VisitorHandler.visitProgram()V#Invoke(INTERFACE,Ljava/util/Collection;,iterator,()Ljava/util/Iterator;)#336
chord.project.VisitorHandler.visitProgram()V#LocalStore(Ljava/lang/Object;,7)#337
chord.project.VisitorHandler.visitProgram()V#Goto(346)#338
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,7)#346
chord.project.VisitorHandler.visitProgram()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#347
chord.project.VisitorHandler.visitProgram()V#Constant(I,0)#348
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(I,ne,339)#349
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,7)#339
chord.project.VisitorHandler.visitProgram()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#340
chord.project.VisitorHandler.visitProgram()V#CheckCast(Lchord/program/visitors/IClassVisitor;)#341
chord.project.VisitorHandler.visitProgram()V#LocalStore(Ljava/lang/Object;,6)#342
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,6)#343
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,5)#344
chord.project.VisitorHandler.visitProgram()V#Invoke(INTERFACE,Lchord/program/visitors/IClassVisitor;,visit,(Ljoeq/Class/jq_Class;)V)#345
chord.analyses.field.DomF.visit(Ljoeq/Class/jq_Class;)V#Return(V)#0
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#350
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,fvs)#351
chord.project.VisitorHandler.visitProgram()V#Constant(L;,null)#352
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(Ljava/lang/Object;,eq,357)#353
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#354
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,5)#355
chord.project.VisitorHandler.visitProgram()V#Invoke(SPECIAL,Lchord/project/VisitorHandler;,visitFields,(Ljoeq/Class/jq_Class;)V)#356
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,1)#0
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getSortedMembers,()[Ljava/lang/Object;)#1
joeq.Class.jq_Class.getSortedMembers()[Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.getSortedMembers()[Ljava/lang/Object;#Get([Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_Class;,sortedMembers)#1
joeq.Class.jq_Class.getSortedMembers()[Ljava/lang/Object;#Constant(L;,null)#2
joeq.Class.jq_Class.getSortedMembers()[Ljava/lang/Object;#ConditionalBranch(Ljava/lang/Object;,ne,14)#3
joeq.Class.jq_Class.getSortedMembers()[Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#4
joeq.Class.jq_Class.getSortedMembers()[Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#5
joeq.Class.jq_Class.getSortedMembers()[Ljava/lang/Object;#Get(Ljava/util/Map;,NONSTATIC,Ljoeq/Class/jq_Class;,members)#6
joeq.Class.jq_Class.getSortedMembers()[Ljava/lang/Object;#Invoke(INTERFACE,Ljava/util/Map;,values,()Ljava/util/Collection;)#7
joeq.Class.jq_Class.getSortedMembers()[Ljava/lang/Object;#Invoke(INTERFACE,Ljava/util/Collection;,toArray,()[Ljava/lang/Object;)#8
joeq.Class.jq_Class.getSortedMembers()[Ljava/lang/Object;#Put([Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_Class;,sortedMembers)#9
joeq.Class.jq_Class.getSortedMembers()[Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#10
joeq.Class.jq_Class.getSortedMembers()[Ljava/lang/Object;#Get([Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_Class;,sortedMembers)#11
joeq.Class.jq_Class.getSortedMembers()[Ljava/lang/Object;#Get(Ljava/util/Comparator;,STATIC,Ljoeq/Class/jq_Class;,comparator)#12
joeq.Class.jq_Class.getSortedMembers()[Ljava/lang/Object;#Invoke(STATIC,Ljava/util/Arrays;,sort,([Ljava/lang/Object;Ljava/util/Comparator;)V)#13
joeq.Class.jq_Class$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,1)#0
joeq.Class.jq_Class$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#CheckCast(Ljoeq/Class/jq_Member;)#1
joeq.Class.jq_Class$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalStore(Ljava/lang/Object;,3)#2
joeq.Class.jq_Class$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,2)#3
joeq.Class.jq_Class$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#CheckCast(Ljoeq/Class/jq_Member;)#4
joeq.Class.jq_Class$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalStore(Ljava/lang/Object;,4)#5
joeq.Class.jq_Class$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,3)#6
joeq.Class.jq_Class$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#Invoke(VIRTUAL,Ljoeq/Class/jq_Member;,getNameAndDesc,()Ljoeq/Class/jq_NameAndDesc;)#7
joeq.Class.jq_Class$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#Invoke(VIRTUAL,Ljoeq/Class/jq_NameAndDesc;,toString,()Ljava/lang/String;)#8
joeq.Class.jq_NameAndDesc.toString()Ljava/lang/String;#New(Ljava/lang/StringBuilder;,0)#0
joeq.Class.jq_NameAndDesc.toString()Ljava/lang/String;#Dup(1,0)#1
joeq.Class.jq_NameAndDesc.toString()Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#2
joeq.Class.jq_NameAndDesc.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_NameAndDesc.toString()Ljava/lang/String;#Get(Ljoeq/UTF/Utf8;,NONSTATIC,Ljoeq/Class/jq_NameAndDesc;,name)#4
joeq.Class.jq_NameAndDesc.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#5
joeq.Class.jq_NameAndDesc.toString()Ljava/lang/String;#Constant(Ljava/lang/String;," ")#6
joeq.Class.jq_NameAndDesc.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#7
joeq.Class.jq_NameAndDesc.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#8
joeq.Class.jq_NameAndDesc.toString()Ljava/lang/String;#Get(Ljoeq/UTF/Utf8;,NONSTATIC,Ljoeq/Class/jq_NameAndDesc;,desc)#9
joeq.Class.jq_NameAndDesc.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#10
joeq.Class.jq_NameAndDesc.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#11
joeq.Class.jq_NameAndDesc.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#12
joeq.Class.jq_Class$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalStore(Ljava/lang/Object;,5)#9
joeq.Class.jq_Class$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,4)#10
joeq.Class.jq_Class$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#Invoke(VIRTUAL,Ljoeq/Class/jq_Member;,getNameAndDesc,()Ljoeq/Class/jq_NameAndDesc;)#11
joeq.Class.jq_Class$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#Invoke(VIRTUAL,Ljoeq/Class/jq_NameAndDesc;,toString,()Ljava/lang/String;)#12
joeq.Class.jq_Class$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalStore(Ljava/lang/Object;,6)#13
joeq.Class.jq_Class$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,5)#14
joeq.Class.jq_Class$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,6)#15
joeq.Class.jq_Class$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#Invoke(VIRTUAL,Ljava/lang/String;,compareTo,(Ljava/lang/String;)I)#16
joeq.Class.jq_Class$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I#Return(I)#17
joeq.Class.jq_Class.getSortedMembers()[Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#14
joeq.Class.jq_Class.getSortedMembers()[Ljava/lang/Object;#Get([Ljava/lang/Object;,NONSTATIC,Ljoeq/Class/jq_Class;,sortedMembers)#15
joeq.Class.jq_Class.getSortedMembers()[Ljava/lang/Object;#Return(Ljava/lang/Object;)#16
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#Dup(1,0)#2
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#LocalStore(Ljava/lang/Object;,5)#3
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#ArrayLength()#4
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#LocalStore(I,4)#5
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#Constant(I,0)#6
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#LocalStore(I,3)#7
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#Goto(40)#8
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#LocalLoad(I,3)#40
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#LocalLoad(I,4)#41
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#ConditionalBranch(I,lt,9)#42
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,5)#9
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#LocalLoad(I,3)#10
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#ArrayLoad(Ljava/lang/Object;)#11
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#LocalStore(Ljava/lang/Object;,2)#12
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,2)#13
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#Instanceof(Ljoeq/Class/jq_Field;)#14
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#Constant(I,0)#15
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#ConditionalBranch(I,eq,36)#16
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#LocalLoad(I,3)#36
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#Constant(I,1)#37
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#BinaryOp(I,add)#38
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#LocalStore(I,3)#39
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#Return(V)#43
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#357
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,mvs)#358
chord.project.VisitorHandler.visitProgram()V#Constant(L;,null)#359
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(Ljava/lang/Object;,eq,364)#360
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,2)#17
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#CheckCast(Ljoeq/Class/jq_Field;)#18
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#LocalStore(Ljava/lang/Object;,6)#19
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,0)#20
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,fvs)#21
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#Invoke(INTERFACE,Ljava/util/Collection;,iterator,()Ljava/util/Iterator;)#22
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#LocalStore(Ljava/lang/Object;,8)#23
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#Goto(32)#24
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,8)#32
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#33
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#Constant(I,0)#34
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#ConditionalBranch(I,ne,25)#35
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,8)#25
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#26
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#CheckCast(Lchord/program/visitors/IFieldVisitor;)#27
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#LocalStore(Ljava/lang/Object;,7)#28
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,7)#29
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,6)#30
chord.project.VisitorHandler.visitFields(Ljoeq/Class/jq_Class;)V#Invoke(INTERFACE,Lchord/program/visitors/IFieldVisitor;,visit,(Ljoeq/Class/jq_Field;)V)#31
chord.analyses.field.DomF.visit(Ljoeq/Class/jq_Field;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.field.DomF.visit(Ljoeq/Class/jq_Field;)V#LocalLoad(Ljava/lang/Object;,1)#1
chord.analyses.field.DomF.visit(Ljoeq/Class/jq_Field;)V#Invoke(VIRTUAL,Lchord/analyses/field/DomF;,getOrAdd,(Ljava/lang/Object;)I)#2
chord.analyses.field.DomF.visit(Ljoeq/Class/jq_Field;)V#Pop(1)#3
chord.analyses.field.DomF.visit(Ljoeq/Class/jq_Field;)V#Return(V)#4
chord.project.VisitorHandler.visitProgram()V#Return(V)#368
chord.project.analyses.ProgramDom.fill()V#Goto(26)#11
chord.project.analyses.ProgramDom.fill()V#Return(V)#26
chord.bddbddb.Dom.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#Constant(Ljava/lang/String;,"null")#3
chord.bddbddb.Dom.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#Goto(7)#4
joeq.Class.jq_Field.toString()Ljava/lang/String;#New(Ljava/lang/StringBuilder;,0)#0
joeq.Class.jq_Field.toString()Ljava/lang/String;#Dup(1,0)#1
joeq.Class.jq_Field.toString()Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#2
joeq.Class.jq_Field.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Field.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljoeq/Class/jq_Field;,getName,()Ljoeq/UTF/Utf8;)#4
joeq.Class.jq_Field.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#5
joeq.Class.jq_Field.toString()Ljava/lang/String;#Constant(Ljava/lang/String;,":")#6
joeq.Class.jq_Field.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#7
joeq.Class.jq_Field.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#8
joeq.Class.jq_Field.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljoeq/Class/jq_Field;,getDesc,()Ljoeq/UTF/Utf8;)#9
joeq.Class.jq_Field.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#10
joeq.Class.jq_Field.toString()Ljava/lang/String;#Constant(Ljava/lang/String;,"@")#11
joeq.Class.jq_Field.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#12
joeq.Class.jq_Field.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#13
joeq.Class.jq_Field.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljoeq/Class/jq_Field;,getDeclaringClass,()Ljoeq/Class/jq_Class;)#14
joeq.Class.jq_Field.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#15
joeq.Class.jq_Field.toString()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#16
joeq.Class.jq_Field.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#17
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#New(Ljava/lang/StringBuilder;,0)#17
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Dup(1,0)#18
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Constant(Ljava/lang/String;,"00")#19
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#20
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#21
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#22
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#23
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#LocalStore(Ljava/lang/Object;,2)#24
chord.util.Timer.getTimeStr(J)Ljava/lang/String;#Goto(26)#25
chord.analyses.method.DomM.init()V#Invoke(STATIC,Lchord/program/Program;,g,()Lchord/program/Program;)#0
chord.analyses.method.DomM.init()V#LocalStore(Ljava/lang/Object;,1)#1
chord.analyses.method.DomM.init()V#LocalLoad(Ljava/lang/Object;,1)#2
chord.analyses.method.DomM.init()V#Invoke(VIRTUAL,Lchord/program/Program;,getMainMethod,()Ljoeq/Class/jq_Method;)#3
chord.program.Program.getMainMethod()Ljoeq/Class/jq_Method;#LocalLoad(Ljava/lang/Object;,0)#0
chord.program.Program.getMainMethod()Ljoeq/Class/jq_Method;#Get(Ljoeq/Class/jq_Method;,NONSTATIC,Lchord/program/Program;,mainMethod)#1
chord.program.Program.getMainMethod()Ljoeq/Class/jq_Method;#Constant(L;,null)#2
chord.program.Program.getMainMethod()Ljoeq/Class/jq_Method;#ConditionalBranch(Ljava/lang/Object;,ne,32)#3
chord.program.Program.getMainMethod()Ljoeq/Class/jq_Method;#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,mainClassName)#4
chord.program.Program.getMainMethod()Ljoeq/Class/jq_Method;#LocalStore(Ljava/lang/Object;,1)#5
chord.program.Program.getMainMethod()Ljoeq/Class/jq_Method;#LocalLoad(Ljava/lang/Object;,1)#6
chord.program.Program.getMainMethod()Ljoeq/Class/jq_Method;#Constant(L;,null)#7
chord.program.Program.getMainMethod()Ljoeq/Class/jq_Method;#ConditionalBranch(Ljava/lang/Object;,ne,13)#8
chord.program.Program.getMainMethod()Ljoeq/Class/jq_Method;#LocalLoad(Ljava/lang/Object;,0)#13
chord.program.Program.getMainMethod()Ljoeq/Class/jq_Method;#LocalLoad(Ljava/lang/Object;,0)#14
chord.program.Program.getMainMethod()Ljoeq/Class/jq_Method;#Constant(Ljava/lang/String;,"main")#15
chord.program.Program.getMainMethod()Ljoeq/Class/jq_Method;#Constant(Ljava/lang/String;,"([Ljava/lang/String;)V")#16
chord.program.Program.getMainMethod()Ljoeq/Class/jq_Method;#LocalLoad(Ljava/lang/Object;,1)#17
chord.program.Program.getMainMethod()Ljoeq/Class/jq_Method;#Invoke(VIRTUAL,Lchord/program/Program;,getMethod,(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_Method;)#18
chord.program.Program.getMethod(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_Method;#LocalLoad(Ljava/lang/Object;,0)#0
chord.program.Program.getMethod(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_Method;#New(Ljava/lang/StringBuilder;,0)#1
chord.program.Program.getMethod(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_Method;#Dup(1,0)#2
chord.program.Program.getMethod(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_Method;#LocalLoad(Ljava/lang/Object;,1)#3
chord.program.Program.getMethod(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_Method;#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#4
chord.program.Program.getMethod(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_Method;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#5
chord.program.Program.getMethod(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_Method;#Constant(Ljava/lang/String;,":")#6
chord.program.Program.getMethod(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_Method;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#7
chord.program.Program.getMethod(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_Method;#LocalLoad(Ljava/lang/Object;,2)#8
chord.program.Program.getMethod(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_Method;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#9
chord.program.Program.getMethod(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_Method;#Constant(Ljava/lang/String;,"@")#10
chord.program.Program.getMethod(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_Method;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#11
chord.program.Program.getMethod(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_Method;#LocalLoad(Ljava/lang/Object;,3)#12
chord.program.Program.getMethod(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_Method;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#13
chord.program.Program.getMethod(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_Method;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#14
chord.program.Program.getMethod(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_Method;#Invoke(VIRTUAL,Lchord/program/Program;,getMethod,(Ljava/lang/String;)Ljoeq/Class/jq_Method;)#15
chord.program.Program.getMethod(Ljava/lang/String;)Ljoeq/Class/jq_Method;#LocalLoad(Ljava/lang/Object;,0)#0
chord.program.Program.getMethod(Ljava/lang/String;)Ljoeq/Class/jq_Method;#Get(Ljava/util/Map;,NONSTATIC,Lchord/program/Program;,signToMethodMap)#1
chord.program.Program.getMethod(Ljava/lang/String;)Ljoeq/Class/jq_Method;#Constant(L;,null)#2
chord.program.Program.getMethod(Ljava/lang/String;)Ljoeq/Class/jq_Method;#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
chord.program.Program.getMethod(Ljava/lang/String;)Ljoeq/Class/jq_Method;#LocalLoad(Ljava/lang/Object;,0)#6
chord.program.Program.getMethod(Ljava/lang/String;)Ljoeq/Class/jq_Method;#Get(Ljava/util/Map;,NONSTATIC,Lchord/program/Program;,signToMethodMap)#7
chord.program.Program.getMethod(Ljava/lang/String;)Ljoeq/Class/jq_Method;#LocalLoad(Ljava/lang/Object;,1)#8
chord.program.Program.getMethod(Ljava/lang/String;)Ljoeq/Class/jq_Method;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#9
chord.program.Program.getMethod(Ljava/lang/String;)Ljoeq/Class/jq_Method;#CheckCast(Ljoeq/Class/jq_Method;)#10
chord.program.Program.getMethod(Ljava/lang/String;)Ljoeq/Class/jq_Method;#Return(Ljava/lang/Object;)#11
chord.program.Program.getMethod(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_Method;#Return(Ljava/lang/Object;)#16
chord.program.Program.getMainMethod()Ljoeq/Class/jq_Method;#Put(Ljoeq/Class/jq_Method;,NONSTATIC,Lchord/program/Program;,mainMethod)#19
chord.program.Program.getMainMethod()Ljoeq/Class/jq_Method;#LocalLoad(Ljava/lang/Object;,0)#20
chord.program.Program.getMainMethod()Ljoeq/Class/jq_Method;#Get(Ljoeq/Class/jq_Method;,NONSTATIC,Lchord/program/Program;,mainMethod)#21
chord.program.Program.getMainMethod()Ljoeq/Class/jq_Method;#Constant(L;,null)#22
chord.program.Program.getMainMethod()Ljoeq/Class/jq_Method;#ConditionalBranch(Ljava/lang/Object;,ne,32)#23
chord.program.Program.getMainMethod()Ljoeq/Class/jq_Method;#LocalLoad(Ljava/lang/Object;,0)#32
chord.program.Program.getMainMethod()Ljoeq/Class/jq_Method;#Get(Ljoeq/Class/jq_Method;,NONSTATIC,Lchord/program/Program;,mainMethod)#33
chord.program.Program.getMainMethod()Ljoeq/Class/jq_Method;#Return(Ljava/lang/Object;)#34
chord.analyses.method.DomM.init()V#LocalStore(Ljava/lang/Object;,2)#4
chord.analyses.method.DomM.init()V#Get(Z,STATIC,Lchord/analyses/method/DomM;,$assertionsDisabled)#5
chord.analyses.method.DomM.init()V#Constant(I,0)#6
chord.analyses.method.DomM.init()V#ConditionalBranch(I,ne,15)#7
chord.analyses.method.DomM.init()V#LocalLoad(Ljava/lang/Object;,2)#8
chord.analyses.method.DomM.init()V#Constant(L;,null)#9
chord.analyses.method.DomM.init()V#ConditionalBranch(Ljava/lang/Object;,ne,15)#10
chord.analyses.method.DomM.init()V#LocalLoad(Ljava/lang/Object;,0)#15
chord.analyses.method.DomM.init()V#LocalLoad(Ljava/lang/Object;,2)#16
chord.analyses.method.DomM.init()V#Invoke(VIRTUAL,Lchord/analyses/method/DomM;,getOrAdd,(Ljava/lang/Object;)I)#17
chord.analyses.method.DomM.init()V#Pop(1)#18
chord.analyses.method.DomM.init()V#LocalLoad(Ljava/lang/Object;,1)#19
chord.analyses.method.DomM.init()V#Invoke(VIRTUAL,Lchord/program/Program;,getThreadStartMethod,()Ljoeq/Class/jq_Method;)#20
chord.program.Program.getThreadStartMethod()Ljoeq/Class/jq_Method;#LocalLoad(Ljava/lang/Object;,0)#0
chord.program.Program.getThreadStartMethod()Ljoeq/Class/jq_Method;#Constant(Ljava/lang/String;,"start")#1
chord.program.Program.getThreadStartMethod()Ljoeq/Class/jq_Method;#Constant(Ljava/lang/String;,"()V")#2
chord.program.Program.getThreadStartMethod()Ljoeq/Class/jq_Method;#Constant(Ljava/lang/String;,"java.lang.Thread")#3
chord.program.Program.getThreadStartMethod()Ljoeq/Class/jq_Method;#Invoke(VIRTUAL,Lchord/program/Program;,getMethod,(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljoeq/Class/jq_Method;)#4
chord.program.Program.getThreadStartMethod()Ljoeq/Class/jq_Method;#Return(Ljava/lang/Object;)#5
chord.analyses.method.DomM.init()V#LocalStore(Ljava/lang/Object;,3)#21
chord.analyses.method.DomM.init()V#LocalLoad(Ljava/lang/Object;,3)#22
chord.analyses.method.DomM.init()V#Constant(L;,null)#23
chord.analyses.method.DomM.init()V#ConditionalBranch(Ljava/lang/Object;,eq,29)#24
chord.analyses.method.DomM.init()V#Return(V)#29
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#51
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,mvs)#52
chord.project.VisitorHandler.visitProgram()V#Constant(L;,null)#53
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(Ljava/lang/Object;,ne,60)#54
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#55
chord.project.VisitorHandler.visitProgram()V#New(Ljava/util/ArrayList;,0)#56
chord.project.VisitorHandler.visitProgram()V#Dup(1,0)#57
chord.project.VisitorHandler.visitProgram()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#58
chord.project.VisitorHandler.visitProgram()V#Put(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,mvs)#59
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#60
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,mvs)#61
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,1)#62
chord.project.VisitorHandler.visitProgram()V#CheckCast(Lchord/program/visitors/IMethodVisitor;)#63
chord.project.VisitorHandler.visitProgram()V#Invoke(INTERFACE,Ljava/util/Collection;,add,(Ljava/lang/Object;)Z)#64
chord.project.VisitorHandler.visitProgram()V#Pop(1)#65
chord.analyses.method.DomM.visit(Ljoeq/Class/jq_Class;)V#Return(V)#0
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#361
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,5)#362
chord.project.VisitorHandler.visitProgram()V#Invoke(SPECIAL,Lchord/project/VisitorHandler;,visitMethods,(Ljoeq/Class/jq_Class;)V)#363
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,1)#0
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getSortedMembers,()[Ljava/lang/Object;)#1
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#Dup(1,0)#2
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#LocalStore(Ljava/lang/Object;,5)#3
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#ArrayLength()#4
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#LocalStore(I,4)#5
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#Constant(I,0)#6
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#LocalStore(I,3)#7
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#Goto(63)#8
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#LocalLoad(I,3)#63
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#LocalLoad(I,4)#64
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#ConditionalBranch(I,lt,9)#65
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,5)#9
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#LocalLoad(I,3)#10
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#ArrayLoad(Ljava/lang/Object;)#11
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#LocalStore(Ljava/lang/Object;,2)#12
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,2)#13
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#Instanceof(Ljoeq/Class/jq_Method;)#14
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#Constant(I,0)#15
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#ConditionalBranch(I,eq,59)#16
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,2)#17
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#CheckCast(Ljoeq/Class/jq_Method;)#18
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#LocalStore(Ljava/lang/Object;,6)#19
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,0)#20
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#Get(Lchord/util/IndexSet;,NONSTATIC,Lchord/project/VisitorHandler;,reachableMethods)#21
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,6)#22
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#Invoke(VIRTUAL,Lchord/util/IndexSet;,contains,(Ljava/lang/Object;)Z)#23
chord.util.IndexSet.contains(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.IndexSet.contains(Ljava/lang/Object;)Z#Get(Ljava/util/HashSet;,NONSTATIC,Lchord/util/IndexSet;,hset)#1
chord.util.IndexSet.contains(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#2
chord.util.IndexSet.contains(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/util/HashSet;,contains,(Ljava/lang/Object;)Z)#3
chord.util.IndexSet.contains(Ljava/lang/Object;)Z#Return(I)#4
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#Constant(I,0)#24
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#ConditionalBranch(I,ne,27)#25
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,0)#27
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,mvs)#28
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#Invoke(INTERFACE,Ljava/util/Collection;,iterator,()Ljava/util/Iterator;)#29
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#LocalStore(Ljava/lang/Object;,8)#30
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#Goto(55)#31
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,8)#55
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#56
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#Constant(I,0)#57
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#ConditionalBranch(I,ne,32)#58
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,8)#32
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#33
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#CheckCast(Lchord/program/visitors/IMethodVisitor;)#34
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#LocalStore(Ljava/lang/Object;,7)#35
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,7)#36
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,6)#37
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#Invoke(INTERFACE,Lchord/program/visitors/IMethodVisitor;,visit,(Ljoeq/Class/jq_Method;)V)#38
chord.analyses.method.DomM.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.method.DomM.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#1
chord.analyses.method.DomM.visit(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Lchord/analyses/method/DomM;,getOrAdd,(Ljava/lang/Object;)I)#2
chord.analyses.method.DomM.visit(Ljoeq/Class/jq_Method;)V#Pop(1)#3
chord.analyses.method.DomM.visit(Ljoeq/Class/jq_Method;)V#Return(V)#4
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,0)#39
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#Get(Z,NONSTATIC,Lchord/project/VisitorHandler;,doCFGs)#40
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#Constant(I,0)#41
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#ConditionalBranch(I,ne,44)#42
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#Goto(55)#43
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#LocalLoad(I,3)#59
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#Constant(I,1)#60
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#BinaryOp(I,add)#61
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#LocalStore(I,3)#62
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#Goto(59)#26
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#Return(V)#66
chord.analyses.var.DomV.init()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.var.DomV.init()V#Get(Z,STATIC,Lchord/project/Config;,classic)#1
chord.analyses.var.DomV.init()V#Constant(I,0)#2
chord.analyses.var.DomV.init()V#ConditionalBranch(I,eq,8)#3
chord.analyses.var.DomV.init()V#Invoke(STATIC,Lchord/project/ClassicProject;,g,()Lchord/project/ClassicProject;)#4
chord.analyses.var.DomV.init()V#Constant(Ljava/lang/String;,"M")#5
chord.analyses.var.DomV.init()V#Invoke(VIRTUAL,Lchord/project/ClassicProject;,getTrgt,(Ljava/lang/String;)Ljava/lang/Object;)#6
chord.project.ClassicProject.getTrgt(Ljava/lang/String;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.ClassicProject.getTrgt(Ljava/lang/String;)Ljava/lang/Object;#Invoke(VIRTUAL,Lchord/project/ClassicProject;,build,()V)#1
chord.project.ClassicProject.build()V#Return(V)#4
chord.project.ClassicProject.getTrgt(Ljava/lang/String;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,0)#2
chord.project.ClassicProject.getTrgt(Ljava/lang/String;)Ljava/lang/Object;#Get(Ljava/util/Map;,NONSTATIC,Lchord/project/ClassicProject;,nameToTrgtMap)#3
chord.project.ClassicProject.getTrgt(Ljava/lang/String;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,1)#4
chord.project.ClassicProject.getTrgt(Ljava/lang/String;)Ljava/lang/Object;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#5
chord.project.ClassicProject.getTrgt(Ljava/lang/String;)Ljava/lang/Object;#LocalStore(Ljava/lang/Object;,2)#6
chord.project.ClassicProject.getTrgt(Ljava/lang/String;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,2)#7
chord.project.ClassicProject.getTrgt(Ljava/lang/String;)Ljava/lang/Object;#Constant(L;,null)#8
chord.project.ClassicProject.getTrgt(Ljava/lang/String;)Ljava/lang/Object;#ConditionalBranch(Ljava/lang/Object;,ne,18)#9
chord.project.ClassicProject.getTrgt(Ljava/lang/String;)Ljava/lang/Object;#LocalLoad(Ljava/lang/Object;,2)#18
chord.project.ClassicProject.getTrgt(Ljava/lang/String;)Ljava/lang/Object;#Return(Ljava/lang/Object;)#19
chord.analyses.var.DomV.init()V#Goto(12)#7
chord.analyses.var.DomV.init()V#CheckCast(Lchord/analyses/method/DomM;)#12
chord.analyses.var.DomV.init()V#Put(Lchord/analyses/method/DomM;,NONSTATIC,Lchord/analyses/var/DomV;,domM)#13
chord.analyses.var.DomV.init()V#LocalLoad(Ljava/lang/Object;,0)#14
chord.analyses.var.DomV.init()V#New(Ljava/util/HashMap;,0)#15
chord.analyses.var.DomV.init()V#Dup(1,0)#16
chord.analyses.var.DomV.init()V#Invoke(SPECIAL,Ljava/util/HashMap;,<init>,()V)#17
chord.analyses.var.DomV.init()V#Put(Ljava/util/Map;,NONSTATIC,Lchord/analyses/var/DomV;,varToMethodMap)#18
chord.analyses.var.DomV.init()V#Return(V)#19
chord.analyses.var.DomV.visit(Ljoeq/Class/jq_Class;)V#Return(V)#0
chord.analyses.var.DomV.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#0
chord.analyses.var.DomV.visit(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,isAbstract,()Z)#1
chord.analyses.var.DomV.visit(Ljoeq/Class/jq_Method;)V#Constant(I,0)#2
chord.analyses.var.DomV.visit(Ljoeq/Class/jq_Method;)V#ConditionalBranch(I,eq,5)#3
chord.analyses.var.DomV.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#5
chord.analyses.var.DomV.visit(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getLiveRefVars,()Ljava/util/List;)#6
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Ljoeq/Class/jq_Method;,liveRefVars)#1
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Constant(L;,null)#2
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#ConditionalBranch(Ljava/lang/Object;,ne,107)#3
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#4
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#New(Ljava/util/ArrayList;,0)#5
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Dup(1,0)#6
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#7
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Put(Ljava/util/List;,NONSTATIC,Ljoeq/Class/jq_Method;,liveRefVars)#8
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#9
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getCFG,()Ljoeq/Compiler/Quad/ControlFlowGraph;)#10
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#LocalLoad(Ljava/lang/Object;,0)#15
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Get(Ljoeq/Compiler/Quad/ControlFlowGraph;,NONSTATIC,Ljoeq/Class/jq_Method;,cfg)#16
joeq.Class.jq_Method.getCFG()Ljoeq/Compiler/Quad/ControlFlowGraph;#Return(Ljava/lang/Object;)#17
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalStore(Ljava/lang/Object;,1)#11
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#12
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,getRegisterFactory,()Ljoeq/Compiler/Quad/RegisterFactory;)#13
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalStore(Ljava/lang/Object;,2)#14
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#15
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getParamTypes,()[Ljoeq/Class/jq_Type;)#16
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalStore(Ljava/lang/Object;,3)#17
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#18
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#ArrayLength()#19
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalStore(I,4)#20
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Constant(I,0)#21
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalStore(I,5)#22
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(I,5)#23
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(I,4)#24
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#ConditionalBranch(I,ge,61)#25
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,1)#61
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,reversePostOrder,()Ljava/util/List;)#62
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#63
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalStore(Ljava/lang/Object;,5)#64
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,5)#65
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#66
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Constant(I,0)#67
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#ConditionalBranch(I,eq,107)#68
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,5)#69
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#70
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#CheckCast(Ljoeq/Compiler/Quad/BasicBlock;)#71
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalStore(Ljava/lang/Object;,6)#72
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,6)#73
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getQuads,()Ljava/util/List;)#74
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#75
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalStore(Ljava/lang/Object;,7)#76
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,7)#77
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#78
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Constant(I,0)#79
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#ConditionalBranch(I,eq,106)#80
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Goto(65)#106
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,7)#81
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#82
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#CheckCast(Ljoeq/Compiler/Quad/Quad;)#83
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalStore(Ljava/lang/Object;,8)#84
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#85
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,8)#86
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getOp1,()Ljoeq/Compiler/Quad/Operand;)#87
joeq.Compiler.Quad.Quad.getOp1()Ljoeq/Compiler/Quad/Operand;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Quad.getOp1()Ljoeq/Compiler/Quad/Operand;#Get(Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/Quad;,operand1)#1
joeq.Compiler.Quad.Quad.getOp1()Ljoeq/Compiler/Quad/Operand;#Return(Ljava/lang/Object;)#2
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,8)#88
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Invoke(SPECIAL,Ljoeq/Class/jq_Method;,process,(Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Quad;)V)#89
joeq.Class.jq_Method.process(Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,1)#0
joeq.Class.jq_Method.process(Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Quad;)V#Instanceof(Ljoeq/Compiler/Quad/Operand$RegisterOperand;)#1
joeq.Class.jq_Method.process(Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Quad;)V#Constant(I,0)#2
joeq.Class.jq_Method.process(Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Quad;)V#ConditionalBranch(I,eq,32)#3
joeq.Class.jq_Method.process(Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,1)#32
joeq.Class.jq_Method.process(Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Quad;)V#Instanceof(Ljoeq/Compiler/Quad/Operand$ParamListOperand;)#33
joeq.Class.jq_Method.process(Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Quad;)V#Constant(I,0)#34
joeq.Class.jq_Method.process(Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Quad;)V#ConditionalBranch(I,eq,84)#35
joeq.Class.jq_Method.process(Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Quad;)V#Return(V)#84
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#90
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,8)#91
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getOp2,()Ljoeq/Compiler/Quad/Operand;)#92
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,8)#93
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Invoke(SPECIAL,Ljoeq/Class/jq_Method;,process,(Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Quad;)V)#94
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#95
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,8)#96
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getOp3,()Ljoeq/Compiler/Quad/Operand;)#97
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,8)#98
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Invoke(SPECIAL,Ljoeq/Class/jq_Method;,process,(Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Quad;)V)#99
joeq.Class.jq_Method.process(Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,1)#36
joeq.Class.jq_Method.process(Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Quad;)V#CheckCast(Ljoeq/Compiler/Quad/Operand$ParamListOperand;)#37
joeq.Class.jq_Method.process(Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Quad;)V#LocalStore(Ljava/lang/Object;,3)#38
joeq.Class.jq_Method.process(Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,3)#39
joeq.Class.jq_Method.process(Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Quad;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Operand$ParamListOperand;,length,()I)#40
joeq.Class.jq_Method.process(Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Quad;)V#LocalStore(I,4)#41
joeq.Class.jq_Method.process(Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Quad;)V#Constant(I,0)#42
joeq.Class.jq_Method.process(Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Quad;)V#LocalStore(I,5)#43
joeq.Class.jq_Method.process(Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(I,5)#44
joeq.Class.jq_Method.process(Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(I,4)#45
joeq.Class.jq_Method.process(Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Quad;)V#ConditionalBranch(I,ge,84)#46
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#100
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,8)#101
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getOp4,()Ljoeq/Compiler/Quad/Operand;)#102
joeq.Compiler.Quad.Quad.getOp4()Ljoeq/Compiler/Quad/Operand;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Quad.getOp4()Ljoeq/Compiler/Quad/Operand;#Get(Ljoeq/Compiler/Quad/Operand;,NONSTATIC,Ljoeq/Compiler/Quad/Quad;,operand4)#1
joeq.Compiler.Quad.Quad.getOp4()Ljoeq/Compiler/Quad/Operand;#Return(Ljava/lang/Object;)#2
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,8)#103
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Invoke(SPECIAL,Ljoeq/Class/jq_Method;,process,(Ljoeq/Compiler/Quad/Operand;Ljoeq/Compiler/Quad/Quad;)V)#104
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Goto(77)#105
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#107
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Ljoeq/Class/jq_Method;,liveRefVars)#108
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Return(Ljava/lang/Object;)#109
chord.analyses.var.DomV.visit(Ljoeq/Class/jq_Method;)V#LocalStore(Ljava/lang/Object;,2)#7
chord.analyses.var.DomV.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,2)#8
chord.analyses.var.DomV.visit(Ljoeq/Class/jq_Method;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#9
chord.analyses.var.DomV.visit(Ljoeq/Class/jq_Method;)V#LocalStore(Ljava/lang/Object;,4)#10
chord.analyses.var.DomV.visit(Ljoeq/Class/jq_Method;)V#Goto(26)#11
chord.analyses.var.DomV.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,4)#26
chord.analyses.var.DomV.visit(Ljoeq/Class/jq_Method;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#27
chord.analyses.var.DomV.visit(Ljoeq/Class/jq_Method;)V#Constant(I,0)#28
chord.analyses.var.DomV.visit(Ljoeq/Class/jq_Method;)V#ConditionalBranch(I,ne,12)#29
chord.analyses.var.DomV.visit(Ljoeq/Class/jq_Method;)V#Return(V)#30
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,3)#26
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(I,5)#27
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#ArrayLoad(Ljava/lang/Object;)#28
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalStore(Ljava/lang/Object;,6)#29
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,6)#30
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,isReferenceType,()Z)#31
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Constant(I,0)#32
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#ConditionalBranch(I,eq,56)#33
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,2)#34
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(I,5)#35
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/RegisterFactory;,get,(I)Ljoeq/Compiler/Quad/RegisterFactory$Register;)#36
joeq.Compiler.Quad.RegisterFactory.get(I)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.RegisterFactory.get(I)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Get(Ljava/util/ArrayList;,NONSTATIC,Ljoeq/Compiler/Quad/RegisterFactory;,registers)#1
joeq.Compiler.Quad.RegisterFactory.get(I)Ljoeq/Compiler/Quad/RegisterFactory$Register;#LocalLoad(I,1)#2
joeq.Compiler.Quad.RegisterFactory.get(I)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Invoke(VIRTUAL,Ljava/util/ArrayList;,get,(I)Ljava/lang/Object;)#3
joeq.Compiler.Quad.RegisterFactory.get(I)Ljoeq/Compiler/Quad/RegisterFactory$Register;#CheckCast(Ljoeq/Compiler/Quad/RegisterFactory$Register;)#4
joeq.Compiler.Quad.RegisterFactory.get(I)Ljoeq/Compiler/Quad/RegisterFactory$Register;#Return(Ljava/lang/Object;)#5
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalStore(Ljava/lang/Object;,7)#37
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Get(Z,STATIC,Ljoeq/Class/jq_Method;,$assertionsDisabled)#38
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Constant(I,0)#39
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#ConditionalBranch(I,ne,51)#40
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#41
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Ljoeq/Class/jq_Method;,liveRefVars)#42
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,7)#43
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,contains,(Ljava/lang/Object;)Z)#44
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Constant(I,0)#45
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#ConditionalBranch(I,eq,51)#46
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,0)#51
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Get(Ljava/util/List;,NONSTATIC,Ljoeq/Class/jq_Method;,liveRefVars)#52
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(Ljava/lang/Object;,7)#53
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Invoke(INTERFACE,Ljava/util/List;,add,(Ljava/lang/Object;)Z)#54
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Pop(1)#55
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalLoad(I,5)#56
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Constant(I,1)#57
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#BinaryOp(I,add)#58
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#LocalStore(I,5)#59
joeq.Class.jq_Method.getLiveRefVars()Ljava/util/List;#Goto(23)#60
chord.analyses.var.DomV.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,4)#12
chord.analyses.var.DomV.visit(Ljoeq/Class/jq_Method;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#13
chord.analyses.var.DomV.visit(Ljoeq/Class/jq_Method;)V#CheckCast(Ljoeq/Compiler/Quad/RegisterFactory$Register;)#14
chord.analyses.var.DomV.visit(Ljoeq/Class/jq_Method;)V#LocalStore(Ljava/lang/Object;,3)#15
chord.analyses.var.DomV.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#16
chord.analyses.var.DomV.visit(Ljoeq/Class/jq_Method;)V#Get(Ljava/util/Map;,NONSTATIC,Lchord/analyses/var/DomV;,varToMethodMap)#17
chord.analyses.var.DomV.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,3)#18
chord.analyses.var.DomV.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#19
chord.analyses.var.DomV.visit(Ljoeq/Class/jq_Method;)V#Invoke(INTERFACE,Ljava/util/Map;,put,(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)#20
chord.analyses.var.DomV.visit(Ljoeq/Class/jq_Method;)V#Pop(1)#21
chord.analyses.var.DomV.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#22
chord.analyses.var.DomV.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,3)#23
chord.analyses.var.DomV.visit(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Lchord/analyses/var/DomV;,add,(Ljava/lang/Object;)Z)#24
chord.analyses.var.DomV.visit(Ljoeq/Class/jq_Method;)V#Pop(1)#25
chord.analyses.var.DomV.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.var.DomV.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#1
chord.analyses.var.DomV.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#CheckCast(Ljoeq/Compiler/Quad/RegisterFactory$Register;)#2
chord.analyses.var.DomV.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#Invoke(VIRTUAL,Lchord/analyses/var/DomV;,toUniqueString,(Ljoeq/Compiler/Quad/RegisterFactory$Register;)Ljava/lang/String;)#3
chord.analyses.var.DomV.toUniqueString(Ljoeq/Compiler/Quad/RegisterFactory$Register;)Ljava/lang/String;#New(Ljava/lang/StringBuilder;,0)#0
chord.analyses.var.DomV.toUniqueString(Ljoeq/Compiler/Quad/RegisterFactory$Register;)Ljava/lang/String;#Dup(1,0)#1
chord.analyses.var.DomV.toUniqueString(Ljoeq/Compiler/Quad/RegisterFactory$Register;)Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#2
chord.analyses.var.DomV.toUniqueString(Ljoeq/Compiler/Quad/RegisterFactory$Register;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#3
chord.analyses.var.DomV.toUniqueString(Ljoeq/Compiler/Quad/RegisterFactory$Register;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#4
joeq.Compiler.Quad.RegisterFactory$Register.isTemp()Z#Constant(I,0)#8
joeq.Compiler.Quad.RegisterFactory$Register.toString()Ljava/lang/String;#Constant(Ljava/lang/String;,"R")#9
chord.analyses.var.DomV.toUniqueString(Ljoeq/Compiler/Quad/RegisterFactory$Register;)Ljava/lang/String;#Constant(Ljava/lang/String;,"!")#5
chord.analyses.var.DomV.toUniqueString(Ljoeq/Compiler/Quad/RegisterFactory$Register;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#6
chord.analyses.var.DomV.toUniqueString(Ljoeq/Compiler/Quad/RegisterFactory$Register;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#7
chord.analyses.var.DomV.toUniqueString(Ljoeq/Compiler/Quad/RegisterFactory$Register;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#8
chord.analyses.var.DomV.toUniqueString(Ljoeq/Compiler/Quad/RegisterFactory$Register;)Ljava/lang/String;#Invoke(VIRTUAL,Lchord/analyses/var/DomV;,getMethod,(Ljoeq/Compiler/Quad/RegisterFactory$Register;)Ljoeq/Class/jq_Method;)#9
chord.analyses.var.DomV.getMethod(Ljoeq/Compiler/Quad/RegisterFactory$Register;)Ljoeq/Class/jq_Method;#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.var.DomV.getMethod(Ljoeq/Compiler/Quad/RegisterFactory$Register;)Ljoeq/Class/jq_Method;#Get(Ljava/util/Map;,NONSTATIC,Lchord/analyses/var/DomV;,varToMethodMap)#1
chord.analyses.var.DomV.getMethod(Ljoeq/Compiler/Quad/RegisterFactory$Register;)Ljoeq/Class/jq_Method;#LocalLoad(Ljava/lang/Object;,1)#2
chord.analyses.var.DomV.getMethod(Ljoeq/Compiler/Quad/RegisterFactory$Register;)Ljoeq/Class/jq_Method;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
chord.analyses.var.DomV.getMethod(Ljoeq/Compiler/Quad/RegisterFactory$Register;)Ljoeq/Class/jq_Method;#CheckCast(Ljoeq/Class/jq_Method;)#4
chord.analyses.var.DomV.getMethod(Ljoeq/Compiler/Quad/RegisterFactory$Register;)Ljoeq/Class/jq_Method;#Return(Ljava/lang/Object;)#5
chord.analyses.var.DomV.toUniqueString(Ljoeq/Compiler/Quad/RegisterFactory$Register;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#10
chord.analyses.var.DomV.toUniqueString(Ljoeq/Compiler/Quad/RegisterFactory$Register;)Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#11
chord.analyses.var.DomV.toUniqueString(Ljoeq/Compiler/Quad/RegisterFactory$Register;)Ljava/lang/String;#Return(Ljava/lang/Object;)#12
chord.analyses.var.DomV.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#Return(Ljava/lang/Object;)#4
chord.project.ClassicProject.runTask(Lchord/project/ITask;)V#Goto(133)#66
chord.analyses.alloc.DomH.init()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.alloc.DomH.init()V#Get(Z,STATIC,Lchord/project/Config;,classic)#1
chord.analyses.alloc.DomH.init()V#Constant(I,0)#2
chord.analyses.alloc.DomH.init()V#ConditionalBranch(I,eq,8)#3
chord.analyses.alloc.DomH.init()V#Invoke(STATIC,Lchord/project/ClassicProject;,g,()Lchord/project/ClassicProject;)#4
chord.analyses.alloc.DomH.init()V#Constant(Ljava/lang/String;,"M")#5
chord.analyses.alloc.DomH.init()V#Invoke(VIRTUAL,Lchord/project/ClassicProject;,getTrgt,(Ljava/lang/String;)Ljava/lang/Object;)#6
chord.analyses.alloc.DomH.init()V#Goto(12)#7
chord.analyses.alloc.DomH.init()V#CheckCast(Lchord/analyses/method/DomM;)#12
chord.analyses.alloc.DomH.init()V#Put(Lchord/analyses/method/DomM;,NONSTATIC,Lchord/analyses/alloc/DomH;,domM)#13
chord.analyses.alloc.DomH.init()V#Get(Z,STATIC,Lchord/analyses/alloc/DomH;,phanton_classes)#14
chord.analyses.alloc.DomH.init()V#Put(Z,STATIC,Lchord/analyses/alloc/DomH;,PHANTOM_CLASSES)#15
chord.analyses.alloc.DomH.init()V#Return(V)#16
chord.analyses.alloc.DomH.fill()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.alloc.DomH.fill()V#Get(Lchord/analyses/method/DomM;,NONSTATIC,Lchord/analyses/alloc/DomH;,domM)#1
chord.analyses.alloc.DomH.fill()V#Invoke(VIRTUAL,Lchord/analyses/method/DomM;,size,()I)#2
chord.analyses.alloc.DomH.fill()V#LocalStore(I,1)#3
chord.analyses.alloc.DomH.fill()V#LocalLoad(Ljava/lang/Object;,0)#4
chord.analyses.alloc.DomH.fill()V#Constant(L;,null)#5
chord.analyses.alloc.DomH.fill()V#Invoke(VIRTUAL,Lchord/analyses/alloc/DomH;,add,(Ljava/lang/Object;)Z)#6
chord.analyses.alloc.DomH.fill()V#Pop(1)#7
chord.analyses.alloc.DomH.fill()V#Constant(I,0)#8
chord.analyses.alloc.DomH.fill()V#LocalStore(I,2)#9
chord.analyses.alloc.DomH.fill()V#Goto(74)#10
chord.analyses.alloc.DomH.fill()V#LocalLoad(I,2)#74
chord.analyses.alloc.DomH.fill()V#LocalLoad(I,1)#75
chord.analyses.alloc.DomH.fill()V#ConditionalBranch(I,lt,11)#76
chord.analyses.alloc.DomH.fill()V#LocalLoad(Ljava/lang/Object;,0)#11
chord.analyses.alloc.DomH.fill()V#Get(Lchord/analyses/method/DomM;,NONSTATIC,Lchord/analyses/alloc/DomH;,domM)#12
chord.analyses.alloc.DomH.fill()V#LocalLoad(I,2)#13
chord.analyses.alloc.DomH.fill()V#Invoke(VIRTUAL,Lchord/analyses/method/DomM;,get,(I)Ljava/lang/Object;)#14
chord.analyses.alloc.DomH.fill()V#CheckCast(Ljoeq/Class/jq_Method;)#15
chord.analyses.alloc.DomH.fill()V#LocalStore(Ljava/lang/Object;,3)#16
chord.analyses.alloc.DomH.fill()V#LocalLoad(Ljava/lang/Object;,3)#17
chord.analyses.alloc.DomH.fill()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,isAbstract,()Z)#18
chord.analyses.alloc.DomH.fill()V#Constant(I,0)#19
chord.analyses.alloc.DomH.fill()V#ConditionalBranch(I,eq,22)#20
chord.analyses.alloc.DomH.fill()V#LocalLoad(Ljava/lang/Object;,3)#22
chord.analyses.alloc.DomH.fill()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getCFG,()Ljoeq/Compiler/Quad/ControlFlowGraph;)#23
chord.analyses.alloc.DomH.fill()V#LocalStore(Ljava/lang/Object;,4)#24
chord.analyses.alloc.DomH.fill()V#LocalLoad(Ljava/lang/Object;,4)#25
chord.analyses.alloc.DomH.fill()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,reversePostOrder,()Ljava/util/List;)#26
chord.analyses.alloc.DomH.fill()V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#27
chord.analyses.alloc.DomH.fill()V#LocalStore(Ljava/lang/Object;,6)#28
chord.analyses.alloc.DomH.fill()V#Goto(66)#29
chord.analyses.alloc.DomH.fill()V#LocalLoad(Ljava/lang/Object;,6)#66
chord.analyses.alloc.DomH.fill()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#67
chord.analyses.alloc.DomH.fill()V#Constant(I,0)#68
chord.analyses.alloc.DomH.fill()V#ConditionalBranch(I,ne,30)#69
chord.analyses.alloc.DomH.fill()V#LocalLoad(Ljava/lang/Object;,6)#30
chord.analyses.alloc.DomH.fill()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#31
chord.analyses.alloc.DomH.fill()V#CheckCast(Ljoeq/Compiler/Quad/BasicBlock;)#32
chord.analyses.alloc.DomH.fill()V#LocalStore(Ljava/lang/Object;,5)#33
chord.analyses.alloc.DomH.fill()V#LocalLoad(Ljava/lang/Object;,5)#34
chord.analyses.alloc.DomH.fill()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getQuads,()Ljava/util/List;)#35
chord.analyses.alloc.DomH.fill()V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#36
chord.analyses.alloc.DomH.fill()V#LocalStore(Ljava/lang/Object;,8)#37
chord.analyses.alloc.DomH.fill()V#Goto(62)#38
chord.analyses.alloc.DomH.fill()V#LocalLoad(Ljava/lang/Object;,8)#62
chord.analyses.alloc.DomH.fill()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#63
chord.analyses.alloc.DomH.fill()V#Constant(I,0)#64
chord.analyses.alloc.DomH.fill()V#ConditionalBranch(I,ne,39)#65
chord.analyses.alloc.DomH.fill()V#LocalLoad(Ljava/lang/Object;,8)#39
chord.analyses.alloc.DomH.fill()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#40
chord.analyses.alloc.DomH.fill()V#CheckCast(Ljoeq/Compiler/Quad/Quad;)#41
chord.analyses.alloc.DomH.fill()V#LocalStore(Ljava/lang/Object;,7)#42
chord.analyses.alloc.DomH.fill()V#LocalLoad(Ljava/lang/Object;,7)#43
chord.analyses.alloc.DomH.fill()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getOperator,()Ljoeq/Compiler/Quad/Operator;)#44
chord.analyses.alloc.DomH.fill()V#LocalStore(Ljava/lang/Object;,9)#45
chord.analyses.alloc.DomH.fill()V#LocalLoad(Ljava/lang/Object;,9)#46
chord.analyses.alloc.DomH.fill()V#Instanceof(Ljoeq/Compiler/Quad/Operator$New;)#47
chord.analyses.alloc.DomH.fill()V#Constant(I,0)#48
chord.analyses.alloc.DomH.fill()V#ConditionalBranch(I,ne,58)#49
chord.analyses.alloc.DomH.fill()V#LocalLoad(Ljava/lang/Object;,9)#50
chord.analyses.alloc.DomH.fill()V#Instanceof(Ljoeq/Compiler/Quad/Operator$NewArray;)#51
chord.analyses.alloc.DomH.fill()V#Constant(I,0)#52
chord.analyses.alloc.DomH.fill()V#ConditionalBranch(I,ne,58)#53
chord.analyses.alloc.DomH.fill()V#LocalLoad(Ljava/lang/Object;,9)#54
chord.analyses.alloc.DomH.fill()V#Instanceof(Ljoeq/Compiler/Quad/Operator$MultiNewArray;)#55
chord.analyses.alloc.DomH.fill()V#Constant(I,0)#56
chord.analyses.alloc.DomH.fill()V#ConditionalBranch(I,eq,62)#57
chord.analyses.alloc.DomH.fill()V#LocalLoad(I,2)#70
chord.analyses.alloc.DomH.fill()V#Constant(I,1)#71
chord.analyses.alloc.DomH.fill()V#BinaryOp(I,add)#72
chord.analyses.alloc.DomH.fill()V#LocalStore(I,2)#73
chord.analyses.alloc.DomH.fill()V#LocalLoad(Ljava/lang/Object;,0)#77
chord.analyses.alloc.DomH.fill()V#LocalLoad(Ljava/lang/Object;,0)#78
chord.analyses.alloc.DomH.fill()V#Invoke(VIRTUAL,Lchord/analyses/alloc/DomH;,size,()I)#79
chord.analyses.alloc.DomH.fill()V#Constant(I,1)#80
chord.analyses.alloc.DomH.fill()V#BinaryOp(I,sub)#81
chord.analyses.alloc.DomH.fill()V#Put(I,NONSTATIC,Lchord/analyses/alloc/DomH;,lastA)#82
chord.analyses.alloc.DomH.fill()V#Invoke(STATIC,Lchord/program/Program;,g,()Lchord/program/Program;)#83
chord.analyses.alloc.DomH.fill()V#Invoke(VIRTUAL,Lchord/program/Program;,getReflect,()Lchord/program/Reflect;)#84
chord.program.Program.getReflect()Lchord/program/Reflect;#LocalLoad(Ljava/lang/Object;,0)#0
chord.program.Program.getReflect()Lchord/program/Reflect;#Get(Lchord/program/Reflect;,NONSTATIC,Lchord/program/Program;,reflect)#1
chord.program.Program.getReflect()Lchord/program/Reflect;#Constant(L;,null)#2
chord.program.Program.getReflect()Lchord/program/Reflect;#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
chord.program.Program.getReflect()Lchord/program/Reflect;#LocalLoad(Ljava/lang/Object;,0)#6
chord.program.Program.getReflect()Lchord/program/Reflect;#Get(Lchord/program/Reflect;,NONSTATIC,Lchord/program/Program;,reflect)#7
chord.program.Program.getReflect()Lchord/program/Reflect;#Return(Ljava/lang/Object;)#8
chord.analyses.alloc.DomH.fill()V#LocalStore(Ljava/lang/Object;,2)#85
chord.analyses.alloc.DomH.fill()V#LocalLoad(Ljava/lang/Object;,0)#86
chord.analyses.alloc.DomH.fill()V#LocalLoad(Ljava/lang/Object;,2)#87
chord.analyses.alloc.DomH.fill()V#Invoke(VIRTUAL,Lchord/program/Reflect;,getResolvedObjNewInstSites,()Ljava/util/List;)#88
chord.analyses.alloc.DomH.fill()V#Invoke(SPECIAL,Lchord/analyses/alloc/DomH;,processResolvedNewInstSites,(Ljava/util/List;)V)#89
chord.analyses.alloc.DomH.processResolvedNewInstSites(Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#0
chord.analyses.alloc.DomH.processResolvedNewInstSites(Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#1
chord.analyses.alloc.DomH.processResolvedNewInstSites(Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,3)#2
chord.analyses.alloc.DomH.processResolvedNewInstSites(Ljava/util/List;)V#Goto(13)#3
chord.analyses.alloc.DomH.processResolvedNewInstSites(Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#13
chord.analyses.alloc.DomH.processResolvedNewInstSites(Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#14
chord.analyses.alloc.DomH.processResolvedNewInstSites(Ljava/util/List;)V#Constant(I,0)#15
chord.analyses.alloc.DomH.processResolvedNewInstSites(Ljava/util/List;)V#ConditionalBranch(I,ne,4)#16
chord.analyses.alloc.DomH.processResolvedNewInstSites(Ljava/util/List;)V#Return(V)#17
chord.analyses.alloc.DomH.fill()V#LocalLoad(Ljava/lang/Object;,0)#90
chord.analyses.alloc.DomH.fill()V#LocalLoad(Ljava/lang/Object;,2)#91
chord.analyses.alloc.DomH.fill()V#Invoke(VIRTUAL,Lchord/program/Reflect;,getResolvedConNewInstSites,()Ljava/util/List;)#92
chord.analyses.alloc.DomH.fill()V#Invoke(SPECIAL,Lchord/analyses/alloc/DomH;,processResolvedNewInstSites,(Ljava/util/List;)V)#93
chord.analyses.alloc.DomH.fill()V#LocalLoad(Ljava/lang/Object;,0)#94
chord.analyses.alloc.DomH.fill()V#LocalLoad(Ljava/lang/Object;,2)#95
chord.analyses.alloc.DomH.fill()V#Invoke(VIRTUAL,Lchord/program/Reflect;,getResolvedAryNewInstSites,()Ljava/util/List;)#96
chord.analyses.alloc.DomH.fill()V#Invoke(SPECIAL,Lchord/analyses/alloc/DomH;,processResolvedNewInstSites,(Ljava/util/List;)V)#97
chord.analyses.alloc.DomH.fill()V#LocalLoad(Ljava/lang/Object;,0)#98
chord.analyses.alloc.DomH.fill()V#LocalLoad(Ljava/lang/Object;,0)#99
chord.analyses.alloc.DomH.fill()V#Invoke(VIRTUAL,Lchord/analyses/alloc/DomH;,size,()I)#100
chord.analyses.alloc.DomH.fill()V#Constant(I,1)#101
chord.analyses.alloc.DomH.fill()V#BinaryOp(I,sub)#102
chord.analyses.alloc.DomH.fill()V#Put(I,NONSTATIC,Lchord/analyses/alloc/DomH;,lastI)#103
chord.analyses.alloc.DomH.fill()V#Get(Z,STATIC,Lchord/analyses/alloc/DomH;,PHANTOM_CLASSES)#104
chord.analyses.alloc.DomH.fill()V#Constant(I,0)#105
chord.analyses.alloc.DomH.fill()V#ConditionalBranch(I,eq,127)#106
chord.analyses.alloc.DomH.fill()V#Return(V)#127
chord.analyses.alloc.DomH.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#0
chord.analyses.alloc.DomH.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#Instanceof(Ljoeq/Compiler/Quad/Quad;)#1
chord.analyses.alloc.DomH.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#Constant(I,0)#2
chord.analyses.alloc.DomH.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#ConditionalBranch(I,eq,10)#3
chord.analyses.alloc.DomH.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#10
chord.analyses.alloc.DomH.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#Instanceof(Lchord/program/PhantomClsVal;)#11
chord.analyses.alloc.DomH.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#Constant(I,0)#12
chord.analyses.alloc.DomH.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#ConditionalBranch(I,eq,28)#13
chord.analyses.alloc.DomH.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#Get(Z,STATIC,Lchord/analyses/alloc/DomH;,$assertionsDisabled)#28
chord.analyses.alloc.DomH.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#Constant(I,0)#29
chord.analyses.alloc.DomH.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#ConditionalBranch(I,ne,38)#30
chord.analyses.alloc.DomH.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#31
chord.analyses.alloc.DomH.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#Constant(L;,null)#32
chord.analyses.alloc.DomH.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#ConditionalBranch(Ljava/lang/Object;,eq,38)#33
chord.analyses.alloc.DomH.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#Constant(Ljava/lang/String;,"null")#38
chord.analyses.alloc.DomH.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#Return(Ljava/lang/Object;)#39
chord.analyses.invk.DomI.init()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.invk.DomI.init()V#Get(Z,STATIC,Lchord/project/Config;,classic)#1
chord.analyses.invk.DomI.init()V#Constant(I,0)#2
chord.analyses.invk.DomI.init()V#ConditionalBranch(I,eq,8)#3
chord.analyses.invk.DomI.init()V#Invoke(STATIC,Lchord/project/ClassicProject;,g,()Lchord/project/ClassicProject;)#4
chord.analyses.invk.DomI.init()V#Constant(Ljava/lang/String;,"M")#5
chord.analyses.invk.DomI.init()V#Invoke(VIRTUAL,Lchord/project/ClassicProject;,getTrgt,(Ljava/lang/String;)Ljava/lang/Object;)#6
chord.analyses.invk.DomI.init()V#Goto(12)#7
chord.analyses.invk.DomI.init()V#CheckCast(Lchord/analyses/method/DomM;)#12
chord.analyses.invk.DomI.init()V#Put(Lchord/analyses/method/DomM;,NONSTATIC,Lchord/analyses/invk/DomI;,domM)#13
chord.analyses.invk.DomI.init()V#Return(V)#14
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#108
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,iivs)#109
chord.project.VisitorHandler.visitProgram()V#Constant(L;,null)#110
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(Ljava/lang/Object;,ne,117)#111
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#112
chord.project.VisitorHandler.visitProgram()V#New(Ljava/util/ArrayList;,0)#113
chord.project.VisitorHandler.visitProgram()V#Dup(1,0)#114
chord.project.VisitorHandler.visitProgram()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#115
chord.project.VisitorHandler.visitProgram()V#Put(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,iivs)#116
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#117
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,iivs)#118
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,1)#119
chord.project.VisitorHandler.visitProgram()V#CheckCast(Lchord/program/visitors/IInvokeInstVisitor;)#120
chord.project.VisitorHandler.visitProgram()V#Invoke(INTERFACE,Ljava/util/Collection;,add,(Ljava/lang/Object;)Z)#121
chord.project.VisitorHandler.visitProgram()V#Pop(1)#122
chord.project.VisitorHandler.visitProgram()V#Constant(I,1)#309
chord.analyses.invk.DomI.visit(Ljoeq/Class/jq_Class;)V#Return(V)#0
chord.analyses.invk.DomI.visit(Ljoeq/Class/jq_Method;)V#Return(V)#0
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,6)#44
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,isAbstract,()Z)#45
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#Constant(I,0)#46
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#ConditionalBranch(I,eq,49)#47
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,6)#49
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getCFG,()Ljoeq/Compiler/Quad/ControlFlowGraph;)#50
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#LocalStore(Ljava/lang/Object;,9)#51
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,0)#52
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,9)#53
chord.project.VisitorHandler.visitMethods(Ljoeq/Class/jq_Class;)V#Invoke(SPECIAL,Lchord/project/VisitorHandler;,visitInsts,(Ljoeq/Compiler/Quad/ControlFlowGraph;)V)#54
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,1)#0
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,reversePostOrder,()Ljava/util/List;)#1
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#2
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalStore(Ljava/lang/Object;,3)#3
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Goto(297)#4
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,3)#297
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#298
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#299
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,ne,5)#300
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,3)#5
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#6
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#CheckCast(Ljoeq/Compiler/Quad/BasicBlock;)#7
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalStore(Ljava/lang/Object;,2)#8
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,2)#9
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getQuads,()Ljava/util/List;)#10
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#11
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalStore(Ljava/lang/Object;,5)#12
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Goto(293)#13
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,5)#293
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#294
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#295
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,ne,14)#296
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,5)#14
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#15
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#CheckCast(Ljoeq/Compiler/Quad/Quad;)#16
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalStore(Ljava/lang/Object;,4)#17
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#18
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,ivs)#19
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(L;,null)#20
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(Ljava/lang/Object;,eq,38)#21
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,4)#38
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getOperator,()Ljoeq/Compiler/Quad/Operator;)#39
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalStore(Ljava/lang/Object;,6)#40
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,6)#41
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Instanceof(Ljoeq/Compiler/Quad/Operator$Invoke;)#42
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#43
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,eq,66)#44
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#45
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,iivs)#46
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(L;,null)#47
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(Ljava/lang/Object;,eq,293)#48
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#49
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,iivs)#50
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(INTERFACE,Ljava/util/Collection;,iterator,()Ljava/util/Iterator;)#51
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalStore(Ljava/lang/Object;,8)#52
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Goto(61)#53
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,8)#61
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#62
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#63
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,ne,54)#64
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,8)#54
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#55
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#CheckCast(Lchord/program/visitors/IInvokeInstVisitor;)#56
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalStore(Ljava/lang/Object;,7)#57
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,7)#58
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,4)#59
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(INTERFACE,Lchord/program/visitors/IInvokeInstVisitor;,visitInvokeInst,(Ljoeq/Compiler/Quad/Quad;)V)#60
chord.analyses.invk.DomI.visitInvokeInst(Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.invk.DomI.visitInvokeInst(Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,1)#1
chord.analyses.invk.DomI.visitInvokeInst(Ljoeq/Compiler/Quad/Quad;)V#Invoke(VIRTUAL,Lchord/analyses/invk/DomI;,add,(Ljava/lang/Object;)Z)#2
chord.analyses.invk.DomI.visitInvokeInst(Ljoeq/Compiler/Quad/Quad;)V#Pop(1)#3
chord.analyses.invk.DomI.visitInvokeInst(Ljoeq/Compiler/Quad/Quad;)V#Return(V)#4
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Goto(293)#65
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,6)#66
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Instanceof(Ljoeq/Compiler/Quad/Operator$ALoad;)#67
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#68
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,ne,90)#69
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,6)#70
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Instanceof(Ljoeq/Compiler/Quad/Operator$Getfield;)#71
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#72
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,ne,90)#73
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,6)#74
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Instanceof(Ljoeq/Compiler/Quad/Operator$Putfield;)#75
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#76
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,ne,90)#77
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,6)#78
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Instanceof(Ljoeq/Compiler/Quad/Operator$AStore;)#79
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#80
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,ne,90)#81
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,6)#82
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Instanceof(Ljoeq/Compiler/Quad/Operator$Getstatic;)#83
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#84
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,ne,90)#85
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,6)#86
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Instanceof(Ljoeq/Compiler/Quad/Operator$Putstatic;)#87
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#88
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,eq,111)#89
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,6)#111
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Instanceof(Ljoeq/Compiler/Quad/Operator$New;)#112
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#113
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,ne,119)#114
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,6)#115
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Instanceof(Ljoeq/Compiler/Quad/Operator$NewArray;)#116
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#117
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,eq,140)#118
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,6)#140
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Instanceof(Ljoeq/Compiler/Quad/Operator$Move;)#141
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#142
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,eq,165)#143
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,6)#165
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Instanceof(Ljoeq/Compiler/Quad/Operator$CheckCast;)#166
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#167
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,eq,190)#168
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,6)#190
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Instanceof(Ljoeq/Compiler/Quad/Operator$Phi;)#191
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#192
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,eq,215)#193
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,6)#215
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Instanceof(Ljoeq/Compiler/Quad/Operator$Return;)#216
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#217
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,eq,244)#218
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,6)#219
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Instanceof(Ljoeq/Compiler/Quad/Operator$Return$THROW_A;)#220
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#221
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,ne,244)#222
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#223
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,rivs)#224
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(L;,null)#225
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(Ljava/lang/Object;,eq,293)#226
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Return(V)#301
chord.analyses.invk.DomI.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.invk.DomI.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#1
chord.analyses.invk.DomI.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#CheckCast(Ljoeq/Compiler/Quad/Quad;)#2
chord.analyses.invk.DomI.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#Invoke(VIRTUAL,Lchord/analyses/invk/DomI;,toUniqueString,(Ljoeq/Compiler/Quad/Quad;)Ljava/lang/String;)#3
chord.analyses.invk.DomI.toUniqueString(Ljoeq/Compiler/Quad/Quad;)Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,1)#0
chord.analyses.invk.DomI.toUniqueString(Ljoeq/Compiler/Quad/Quad;)Ljava/lang/String;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,toByteLocStr,()Ljava/lang/String;)#1
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getBCI,()I)#1
joeq.Compiler.Quad.Quad.getBCI()I#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Quad.getBCI()I#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getBasicBlock,()Ljoeq/Compiler/Quad/BasicBlock;)#1
joeq.Compiler.Quad.Quad.getBasicBlock()Ljoeq/Compiler/Quad/BasicBlock;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Quad.getBasicBlock()Ljoeq/Compiler/Quad/BasicBlock;#Get(Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/Quad;,bb)#1
joeq.Compiler.Quad.Quad.getBasicBlock()Ljoeq/Compiler/Quad/BasicBlock;#Return(Ljava/lang/Object;)#2
joeq.Compiler.Quad.Quad.getBCI()I#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getMethod,()Ljoeq/Class/jq_Method;)#2
joeq.Compiler.Quad.BasicBlock.getMethod()Ljoeq/Class/jq_Method;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.BasicBlock.getMethod()Ljoeq/Class/jq_Method;#Get(Ljoeq/Class/jq_Method;,NONSTATIC,Ljoeq/Compiler/Quad/BasicBlock;,method)#1
joeq.Compiler.Quad.BasicBlock.getMethod()Ljoeq/Class/jq_Method;#Return(Ljava/lang/Object;)#2
joeq.Compiler.Quad.Quad.getBCI()I#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getBCMap,()Ljava/util/Map;)#3
joeq.Class.jq_Method.getBCMap()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Method.getBCMap()Ljava/util/Map;#Get(Z,NONSTATIC,Ljoeq/Class/jq_Method;,hasBCmap)#1
joeq.Class.jq_Method.getBCMap()Ljava/util/Map;#Constant(I,0)#2
joeq.Class.jq_Method.getBCMap()Ljava/util/Map;#ConditionalBranch(I,eq,7)#3
joeq.Class.jq_Method.getBCMap()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#7
joeq.Class.jq_Method.getBCMap()Ljava/util/Map;#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getBytecode,()[B)#8
joeq.Class.jq_Method.getBCMap()Ljava/util/Map;#Constant(L;,null)#9
joeq.Class.jq_Method.getBCMap()Ljava/util/Map;#ConditionalBranch(Ljava/lang/Object;,ne,14)#10
joeq.Class.jq_Method.getBCMap()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#14
joeq.Class.jq_Method.getBCMap()Ljava/util/Map;#Invoke(STATIC,Ljoeq/Compiler/Quad/CodeCache;,getBCMap,(Ljoeq/Class/jq_Method;)Ljava/util/Map;)#15
joeq.Compiler.Quad.CodeCache.getBCMap(Ljoeq/Class/jq_Method;)Ljava/util/Map;#Get(Ljoeq/Compiler/Quad/CodeCache;,STATIC,Ljoeq/Compiler/Quad/CodeCache;,cache)#0
joeq.Compiler.Quad.CodeCache.getBCMap(Ljoeq/Class/jq_Method;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#1
joeq.Compiler.Quad.CodeCache.getBCMap(Ljoeq/Class/jq_Method;)Ljava/util/Map;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/CodeCache;,_getmap,(Ljoeq/Class/jq_Method;)Ljava/util/Map;)#2
joeq.Compiler.Quad.CodeCache._getmap(Ljoeq/Class/jq_Method;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.CodeCache._getmap(Ljoeq/Class/jq_Method;)Ljava/util/Map;#Get(Ljava/util/Map;,NONSTATIC,Ljoeq/Compiler/Quad/CodeCache;,bcmap)#1
joeq.Compiler.Quad.CodeCache._getmap(Ljoeq/Class/jq_Method;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,1)#2
joeq.Compiler.Quad.CodeCache._getmap(Ljoeq/Class/jq_Method;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Map;,containsKey,(Ljava/lang/Object;)Z)#3
joeq.Compiler.Quad.CodeCache._getmap(Ljoeq/Class/jq_Method;)Ljava/util/Map;#Constant(I,0)#4
joeq.Compiler.Quad.CodeCache._getmap(Ljoeq/Class/jq_Method;)Ljava/util/Map;#ConditionalBranch(I,eq,12)#5
joeq.Compiler.Quad.CodeCache._getmap(Ljoeq/Class/jq_Method;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#6
joeq.Compiler.Quad.CodeCache._getmap(Ljoeq/Class/jq_Method;)Ljava/util/Map;#Get(Ljava/util/Map;,NONSTATIC,Ljoeq/Compiler/Quad/CodeCache;,bcmap)#7
joeq.Compiler.Quad.CodeCache._getmap(Ljoeq/Class/jq_Method;)Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,1)#8
joeq.Compiler.Quad.CodeCache._getmap(Ljoeq/Class/jq_Method;)Ljava/util/Map;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#9
joeq.Compiler.Quad.CodeCache._getmap(Ljoeq/Class/jq_Method;)Ljava/util/Map;#CheckCast(Ljava/util/Map;)#10
joeq.Compiler.Quad.CodeCache._getmap(Ljoeq/Class/jq_Method;)Ljava/util/Map;#Return(Ljava/lang/Object;)#11
joeq.Compiler.Quad.CodeCache.getBCMap(Ljoeq/Class/jq_Method;)Ljava/util/Map;#Return(Ljava/lang/Object;)#3
joeq.Class.jq_Method.getBCMap()Ljava/util/Map;#LocalStore(Ljava/lang/Object;,1)#16
joeq.Class.jq_Method.getBCMap()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#17
joeq.Class.jq_Method.getBCMap()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,1)#18
joeq.Class.jq_Method.getBCMap()Ljava/util/Map;#Put(Ljava/util/Map;,NONSTATIC,Ljoeq/Class/jq_Method;,bcMap)#19
joeq.Class.jq_Method.getBCMap()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,0)#20
joeq.Class.jq_Method.getBCMap()Ljava/util/Map;#Constant(I,1)#21
joeq.Class.jq_Method.getBCMap()Ljava/util/Map;#Put(Z,NONSTATIC,Ljoeq/Class/jq_Method;,hasBCmap)#22
joeq.Class.jq_Method.getBCMap()Ljava/util/Map;#LocalLoad(Ljava/lang/Object;,1)#23
joeq.Class.jq_Method.getBCMap()Ljava/util/Map;#Return(Ljava/lang/Object;)#24
joeq.Compiler.Quad.Quad.getBCI()I#LocalStore(Ljava/lang/Object;,1)#4
joeq.Compiler.Quad.Quad.getBCI()I#LocalLoad(Ljava/lang/Object;,1)#5
joeq.Compiler.Quad.Quad.getBCI()I#Constant(L;,null)#6
joeq.Compiler.Quad.Quad.getBCI()I#ConditionalBranch(Ljava/lang/Object;,eq,19)#7
joeq.Compiler.Quad.Quad.getBCI()I#LocalLoad(Ljava/lang/Object;,1)#8
joeq.Compiler.Quad.Quad.getBCI()I#LocalLoad(Ljava/lang/Object;,0)#9
joeq.Compiler.Quad.Quad.getBCI()I#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#10
joeq.Compiler.Quad.Quad.getBCI()I#CheckCast(Ljava/lang/Integer;)#11
joeq.Compiler.Quad.Quad.getBCI()I#LocalStore(Ljava/lang/Object;,2)#12
joeq.Compiler.Quad.Quad.getBCI()I#LocalLoad(Ljava/lang/Object;,2)#13
joeq.Compiler.Quad.Quad.getBCI()I#Constant(L;,null)#14
joeq.Compiler.Quad.Quad.getBCI()I#ConditionalBranch(Ljava/lang/Object;,eq,19)#15
joeq.Compiler.Quad.Quad.getBCI()I#LocalLoad(Ljava/lang/Object;,2)#16
joeq.Compiler.Quad.Quad.getBCI()I#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#17
joeq.Compiler.Quad.Quad.getBCI()I#Return(I)#18
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#LocalStore(I,1)#2
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getBasicBlock,()Ljoeq/Compiler/Quad/BasicBlock;)#4
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getMethod,()Ljoeq/Class/jq_Method;)#5
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#LocalStore(Ljava/lang/Object;,2)#6
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#7
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getName,()Ljoeq/UTF/Utf8;)#8
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,toString,()Ljava/lang/String;)#9
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#LocalStore(Ljava/lang/Object;,3)#10
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#11
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getDesc,()Ljoeq/UTF/Utf8;)#12
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#Invoke(VIRTUAL,Ljoeq/UTF/Utf8;,toString,()Ljava/lang/String;)#13
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#LocalStore(Ljava/lang/Object;,4)#14
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,2)#15
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getDeclaringClass,()Ljoeq/Class/jq_Class;)#16
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getName,()Ljava/lang/String;)#17
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#LocalStore(Ljava/lang/Object;,5)#18
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#New(Ljava/lang/StringBuilder;,0)#19
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#Dup(1,0)#20
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#21
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#LocalLoad(I,1)#22
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#Constant(I,-1)#23
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#ConditionalBranch(I,ne,35)#24
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#LocalLoad(I,1)#35
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#Invoke(STATIC,Ljava/lang/Integer;,valueOf,(I)Ljava/lang/Integer;)#36
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#37
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#Constant(Ljava/lang/String;,"!")#38
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#39
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,3)#40
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#41
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#Constant(Ljava/lang/String;,":")#42
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#43
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,4)#44
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#45
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#Constant(Ljava/lang/String;,"@")#46
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#47
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,5)#48
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#49
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#50
joeq.Compiler.Quad.Quad.toByteLocStr()Ljava/lang/String;#Return(Ljava/lang/Object;)#51
chord.analyses.invk.DomI.toUniqueString(Ljoeq/Compiler/Quad/Quad;)Ljava/lang/String;#Return(Ljava/lang/Object;)#2
chord.analyses.invk.DomI.toUniqueString(Ljava/lang/Object;)Ljava/lang/String;#Return(Ljava/lang/Object;)#4
chord.analyses.argret.DomZ.init()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.argret.DomZ.init()V#Constant(I,0)#1
chord.analyses.argret.DomZ.init()V#Put(I,NONSTATIC,Lchord/analyses/argret/DomZ;,maxArgs)#2
chord.analyses.argret.DomZ.init()V#Return(V)#3
chord.analyses.argret.DomZ.visit(Ljoeq/Class/jq_Class;)V#Return(V)#0
chord.analyses.argret.DomZ.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#0
chord.analyses.argret.DomZ.visit(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getParamTypes,()[Ljoeq/Class/jq_Type;)#1
chord.analyses.argret.DomZ.visit(Ljoeq/Class/jq_Method;)V#ArrayLength()#2
chord.analyses.argret.DomZ.visit(Ljoeq/Class/jq_Method;)V#LocalStore(I,2)#3
chord.analyses.argret.DomZ.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(I,2)#4
chord.analyses.argret.DomZ.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#5
chord.analyses.argret.DomZ.visit(Ljoeq/Class/jq_Method;)V#Get(I,NONSTATIC,Lchord/analyses/argret/DomZ;,maxArgs)#6
chord.analyses.argret.DomZ.visit(Ljoeq/Class/jq_Method;)V#ConditionalBranch(I,le,11)#7
chord.analyses.argret.DomZ.visit(Ljoeq/Class/jq_Method;)V#Return(V)#11
chord.analyses.argret.DomZ.visitInvokeInst(Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,1)#0
chord.analyses.argret.DomZ.visitInvokeInst(Ljoeq/Compiler/Quad/Quad;)V#Invoke(STATIC,Ljoeq/Compiler/Quad/Operator$Invoke;,getParamList,(Ljoeq/Compiler/Quad/Quad;)Ljoeq/Compiler/Quad/Operand$ParamListOperand;)#1
chord.analyses.argret.DomZ.visitInvokeInst(Ljoeq/Compiler/Quad/Quad;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Operand$ParamListOperand;,length,()I)#2
chord.analyses.argret.DomZ.visitInvokeInst(Ljoeq/Compiler/Quad/Quad;)V#LocalStore(I,2)#3
chord.analyses.argret.DomZ.visitInvokeInst(Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(I,2)#4
chord.analyses.argret.DomZ.visitInvokeInst(Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,0)#5
chord.analyses.argret.DomZ.visitInvokeInst(Ljoeq/Compiler/Quad/Quad;)V#Get(I,NONSTATIC,Lchord/analyses/argret/DomZ;,maxArgs)#6
chord.analyses.argret.DomZ.visitInvokeInst(Ljoeq/Compiler/Quad/Quad;)V#ConditionalBranch(I,le,11)#7
chord.analyses.argret.DomZ.visitInvokeInst(Ljoeq/Compiler/Quad/Quad;)V#Return(V)#11
chord.analyses.argret.DomZ.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#8
chord.analyses.argret.DomZ.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(I,2)#9
chord.analyses.argret.DomZ.visit(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Lchord/analyses/argret/DomZ;,grow,(I)V)#10
chord.analyses.argret.DomZ.grow(I)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.argret.DomZ.grow(I)V#Get(I,NONSTATIC,Lchord/analyses/argret/DomZ;,maxArgs)#1
chord.analyses.argret.DomZ.grow(I)V#LocalStore(I,2)#2
chord.analyses.argret.DomZ.grow(I)V#LocalLoad(I,2)#3
chord.analyses.argret.DomZ.grow(I)V#LocalStore(I,3)#4
chord.analyses.argret.DomZ.grow(I)V#Goto(17)#5
chord.analyses.argret.DomZ.grow(I)V#LocalLoad(I,3)#17
chord.analyses.argret.DomZ.grow(I)V#LocalLoad(I,1)#18
chord.analyses.argret.DomZ.grow(I)V#ConditionalBranch(I,lt,6)#19
chord.analyses.argret.DomZ.grow(I)V#LocalLoad(Ljava/lang/Object;,0)#6
chord.analyses.argret.DomZ.grow(I)V#New(Ljava/lang/Integer;,0)#7
chord.analyses.argret.DomZ.grow(I)V#Dup(1,0)#8
chord.analyses.argret.DomZ.grow(I)V#LocalLoad(I,3)#9
chord.analyses.argret.DomZ.grow(I)V#Invoke(SPECIAL,Ljava/lang/Integer;,<init>,(I)V)#10
chord.analyses.argret.DomZ.grow(I)V#Invoke(VIRTUAL,Lchord/analyses/argret/DomZ;,getOrAdd,(Ljava/lang/Object;)I)#11
chord.analyses.argret.DomZ.grow(I)V#Pop(1)#12
chord.analyses.argret.DomZ.grow(I)V#LocalLoad(I,3)#13
chord.analyses.argret.DomZ.grow(I)V#Constant(I,1)#14
chord.analyses.argret.DomZ.grow(I)V#BinaryOp(I,add)#15
chord.analyses.argret.DomZ.grow(I)V#LocalStore(I,3)#16
chord.analyses.argret.DomZ.grow(I)V#LocalLoad(Ljava/lang/Object;,0)#20
chord.analyses.argret.DomZ.grow(I)V#LocalLoad(I,1)#21
chord.analyses.argret.DomZ.grow(I)V#Put(I,NONSTATIC,Lchord/analyses/argret/DomZ;,maxArgs)#22
chord.analyses.argret.DomZ.grow(I)V#Return(V)#23
chord.project.analyses.ProgramRel.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.analyses.ProgramRel.toString()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/analyses/ProgramRel;,name)#1
chord.project.analyses.ProgramRel.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
chord.project.analyses.ProgramRel.run()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.analyses.ProgramRel.run()V#Invoke(VIRTUAL,Lchord/project/analyses/ProgramRel;,zero,()V)#1
chord.bddbddb.Rel.zero()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.bddbddb.Rel.zero()V#Invoke(VIRTUAL,Lchord/bddbddb/Rel;,initialize,()V)#1
chord.bddbddb.Rel.initialize()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.bddbddb.Rel.initialize()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/bddbddb/Rel;,doms)#1
chord.bddbddb.Rel.initialize()V#Constant(L;,null)#2
chord.bddbddb.Rel.initialize()V#ConditionalBranch(Ljava/lang/Object;,ne,9)#3
chord.bddbddb.Rel.initialize()V#Constant(Ljava/lang/String;,"bddnodes")#9
chord.bddbddb.Rel.initialize()V#Constant(Ljava/lang/String;,"500000")#10
chord.bddbddb.Rel.initialize()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#11
chord.bddbddb.Rel.initialize()V#Invoke(STATIC,Ljava/lang/Integer;,parseInt,(Ljava/lang/String;)I)#12
chord.bddbddb.Rel.initialize()V#LocalStore(I,1)#13
chord.bddbddb.Rel.initialize()V#Constant(Ljava/lang/String;,"bddcache")#14
chord.bddbddb.Rel.initialize()V#Constant(Ljava/lang/String;,"125000")#15
chord.bddbddb.Rel.initialize()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#16
chord.bddbddb.Rel.initialize()V#Invoke(STATIC,Ljava/lang/Integer;,parseInt,(Ljava/lang/String;)I)#17
chord.bddbddb.Rel.initialize()V#LocalStore(I,2)#18
chord.bddbddb.Rel.initialize()V#Constant(Ljava/lang/String;,"bddminfree")#19
chord.bddbddb.Rel.initialize()V#Constant(Ljava/lang/String;,".20")#20
chord.bddbddb.Rel.initialize()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#21
chord.bddbddb.Rel.initialize()V#Invoke(STATIC,Ljava/lang/Double;,parseDouble,(Ljava/lang/String;)D)#22
chord.bddbddb.Rel.initialize()V#LocalStore(D,3)#23
chord.bddbddb.Rel.initialize()V#LocalLoad(Ljava/lang/Object;,0)#24
chord.bddbddb.Rel.initialize()V#Constant(Ljava/lang/String;,"java")#25
chord.bddbddb.Rel.initialize()V#LocalLoad(I,1)#26
chord.bddbddb.Rel.initialize()V#LocalLoad(I,2)#27
chord.bddbddb.Rel.initialize()V#Invoke(STATIC,Lnet/sf/javabdd/BDDFactory;,init,(Ljava/lang/String;II)Lnet/sf/javabdd/BDDFactory;)#28
net.sf.javabdd.BDDFactory.<clinit>()V#New(Lnet/sf/javabdd/BDDFactory$BDDOp;,0)#0
net.sf.javabdd.BDDFactory.<clinit>()V#Dup(1,0)#1
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(I,0)#2
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(Ljava/lang/String;,"and")#3
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(L;,null)#4
net.sf.javabdd.BDDFactory.<clinit>()V#Invoke(SPECIAL,Lnet/sf/javabdd/BDDFactory$BDDOp;,<init>,(ILjava/lang/String;Lnet/sf/javabdd/BDDFactory$1;)V)#5
net.sf.javabdd.BDDFactory$BDDOp.<init>(ILjava/lang/String;Lnet/sf/javabdd/BDDFactory$1;)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.BDDFactory$BDDOp.<init>(ILjava/lang/String;Lnet/sf/javabdd/BDDFactory$1;)V#LocalLoad(I,1)#1
net.sf.javabdd.BDDFactory$BDDOp.<init>(ILjava/lang/String;Lnet/sf/javabdd/BDDFactory$1;)V#LocalLoad(Ljava/lang/Object;,2)#2
net.sf.javabdd.BDDFactory$BDDOp.<init>(ILjava/lang/String;Lnet/sf/javabdd/BDDFactory$1;)V#Invoke(SPECIAL,Lnet/sf/javabdd/BDDFactory$BDDOp;,<init>,(ILjava/lang/String;)V)#3
net.sf.javabdd.BDDFactory$BDDOp.<init>(ILjava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.BDDFactory$BDDOp.<init>(ILjava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
net.sf.javabdd.BDDFactory$BDDOp.<init>(ILjava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#2
net.sf.javabdd.BDDFactory$BDDOp.<init>(ILjava/lang/String;)V#LocalLoad(I,1)#3
net.sf.javabdd.BDDFactory$BDDOp.<init>(ILjava/lang/String;)V#Put(I,NONSTATIC,Lnet/sf/javabdd/BDDFactory$BDDOp;,id)#4
net.sf.javabdd.BDDFactory$BDDOp.<init>(ILjava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#5
net.sf.javabdd.BDDFactory$BDDOp.<init>(ILjava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#6
net.sf.javabdd.BDDFactory$BDDOp.<init>(ILjava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lnet/sf/javabdd/BDDFactory$BDDOp;,name)#7
net.sf.javabdd.BDDFactory$BDDOp.<init>(ILjava/lang/String;)V#Return(V)#8
net.sf.javabdd.BDDFactory$BDDOp.<init>(ILjava/lang/String;Lnet/sf/javabdd/BDDFactory$1;)V#Return(V)#4
net.sf.javabdd.BDDFactory.<clinit>()V#Put(Lnet/sf/javabdd/BDDFactory$BDDOp;,STATIC,Lnet/sf/javabdd/BDDFactory;,and)#6
net.sf.javabdd.BDDFactory.<clinit>()V#New(Lnet/sf/javabdd/BDDFactory$BDDOp;,0)#7
net.sf.javabdd.BDDFactory.<clinit>()V#Dup(1,0)#8
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(I,1)#9
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(Ljava/lang/String;,"xor")#10
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(L;,null)#11
net.sf.javabdd.BDDFactory.<clinit>()V#Invoke(SPECIAL,Lnet/sf/javabdd/BDDFactory$BDDOp;,<init>,(ILjava/lang/String;Lnet/sf/javabdd/BDDFactory$1;)V)#12
net.sf.javabdd.BDDFactory.<clinit>()V#Put(Lnet/sf/javabdd/BDDFactory$BDDOp;,STATIC,Lnet/sf/javabdd/BDDFactory;,xor)#13
net.sf.javabdd.BDDFactory.<clinit>()V#New(Lnet/sf/javabdd/BDDFactory$BDDOp;,0)#14
net.sf.javabdd.BDDFactory.<clinit>()V#Dup(1,0)#15
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(I,2)#16
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(Ljava/lang/String;,"or")#17
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(L;,null)#18
net.sf.javabdd.BDDFactory.<clinit>()V#Invoke(SPECIAL,Lnet/sf/javabdd/BDDFactory$BDDOp;,<init>,(ILjava/lang/String;Lnet/sf/javabdd/BDDFactory$1;)V)#19
net.sf.javabdd.BDDFactory.<clinit>()V#Put(Lnet/sf/javabdd/BDDFactory$BDDOp;,STATIC,Lnet/sf/javabdd/BDDFactory;,or)#20
net.sf.javabdd.BDDFactory.<clinit>()V#New(Lnet/sf/javabdd/BDDFactory$BDDOp;,0)#21
net.sf.javabdd.BDDFactory.<clinit>()V#Dup(1,0)#22
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(I,3)#23
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(Ljava/lang/String;,"nand")#24
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(L;,null)#25
net.sf.javabdd.BDDFactory.<clinit>()V#Invoke(SPECIAL,Lnet/sf/javabdd/BDDFactory$BDDOp;,<init>,(ILjava/lang/String;Lnet/sf/javabdd/BDDFactory$1;)V)#26
net.sf.javabdd.BDDFactory.<clinit>()V#Put(Lnet/sf/javabdd/BDDFactory$BDDOp;,STATIC,Lnet/sf/javabdd/BDDFactory;,nand)#27
net.sf.javabdd.BDDFactory.<clinit>()V#New(Lnet/sf/javabdd/BDDFactory$BDDOp;,0)#28
net.sf.javabdd.BDDFactory.<clinit>()V#Dup(1,0)#29
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(I,4)#30
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(Ljava/lang/String;,"nor")#31
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(L;,null)#32
net.sf.javabdd.BDDFactory.<clinit>()V#Invoke(SPECIAL,Lnet/sf/javabdd/BDDFactory$BDDOp;,<init>,(ILjava/lang/String;Lnet/sf/javabdd/BDDFactory$1;)V)#33
net.sf.javabdd.BDDFactory.<clinit>()V#Put(Lnet/sf/javabdd/BDDFactory$BDDOp;,STATIC,Lnet/sf/javabdd/BDDFactory;,nor)#34
net.sf.javabdd.BDDFactory.<clinit>()V#New(Lnet/sf/javabdd/BDDFactory$BDDOp;,0)#35
net.sf.javabdd.BDDFactory.<clinit>()V#Dup(1,0)#36
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(I,5)#37
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(Ljava/lang/String;,"imp")#38
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(L;,null)#39
net.sf.javabdd.BDDFactory.<clinit>()V#Invoke(SPECIAL,Lnet/sf/javabdd/BDDFactory$BDDOp;,<init>,(ILjava/lang/String;Lnet/sf/javabdd/BDDFactory$1;)V)#40
net.sf.javabdd.BDDFactory.<clinit>()V#Put(Lnet/sf/javabdd/BDDFactory$BDDOp;,STATIC,Lnet/sf/javabdd/BDDFactory;,imp)#41
net.sf.javabdd.BDDFactory.<clinit>()V#New(Lnet/sf/javabdd/BDDFactory$BDDOp;,0)#42
net.sf.javabdd.BDDFactory.<clinit>()V#Dup(1,0)#43
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(I,6)#44
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(Ljava/lang/String;,"biimp")#45
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(L;,null)#46
net.sf.javabdd.BDDFactory.<clinit>()V#Invoke(SPECIAL,Lnet/sf/javabdd/BDDFactory$BDDOp;,<init>,(ILjava/lang/String;Lnet/sf/javabdd/BDDFactory$1;)V)#47
net.sf.javabdd.BDDFactory.<clinit>()V#Put(Lnet/sf/javabdd/BDDFactory$BDDOp;,STATIC,Lnet/sf/javabdd/BDDFactory;,biimp)#48
net.sf.javabdd.BDDFactory.<clinit>()V#New(Lnet/sf/javabdd/BDDFactory$BDDOp;,0)#49
net.sf.javabdd.BDDFactory.<clinit>()V#Dup(1,0)#50
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(I,7)#51
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(Ljava/lang/String;,"diff")#52
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(L;,null)#53
net.sf.javabdd.BDDFactory.<clinit>()V#Invoke(SPECIAL,Lnet/sf/javabdd/BDDFactory$BDDOp;,<init>,(ILjava/lang/String;Lnet/sf/javabdd/BDDFactory$1;)V)#54
net.sf.javabdd.BDDFactory.<clinit>()V#Put(Lnet/sf/javabdd/BDDFactory$BDDOp;,STATIC,Lnet/sf/javabdd/BDDFactory;,diff)#55
net.sf.javabdd.BDDFactory.<clinit>()V#New(Lnet/sf/javabdd/BDDFactory$BDDOp;,0)#56
net.sf.javabdd.BDDFactory.<clinit>()V#Dup(1,0)#57
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(I,8)#58
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(Ljava/lang/String;,"less")#59
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(L;,null)#60
net.sf.javabdd.BDDFactory.<clinit>()V#Invoke(SPECIAL,Lnet/sf/javabdd/BDDFactory$BDDOp;,<init>,(ILjava/lang/String;Lnet/sf/javabdd/BDDFactory$1;)V)#61
net.sf.javabdd.BDDFactory.<clinit>()V#Put(Lnet/sf/javabdd/BDDFactory$BDDOp;,STATIC,Lnet/sf/javabdd/BDDFactory;,less)#62
net.sf.javabdd.BDDFactory.<clinit>()V#New(Lnet/sf/javabdd/BDDFactory$BDDOp;,0)#63
net.sf.javabdd.BDDFactory.<clinit>()V#Dup(1,0)#64
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(I,9)#65
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(Ljava/lang/String;,"invimp")#66
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(L;,null)#67
net.sf.javabdd.BDDFactory.<clinit>()V#Invoke(SPECIAL,Lnet/sf/javabdd/BDDFactory$BDDOp;,<init>,(ILjava/lang/String;Lnet/sf/javabdd/BDDFactory$1;)V)#68
net.sf.javabdd.BDDFactory.<clinit>()V#Put(Lnet/sf/javabdd/BDDFactory$BDDOp;,STATIC,Lnet/sf/javabdd/BDDFactory;,invimp)#69
net.sf.javabdd.BDDFactory.<clinit>()V#New(Lnet/sf/javabdd/BDDFactory$ReorderMethod;,0)#70
net.sf.javabdd.BDDFactory.<clinit>()V#Dup(1,0)#71
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(I,0)#72
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(Ljava/lang/String;,"NONE")#73
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(L;,null)#74
net.sf.javabdd.BDDFactory.<clinit>()V#Invoke(SPECIAL,Lnet/sf/javabdd/BDDFactory$ReorderMethod;,<init>,(ILjava/lang/String;Lnet/sf/javabdd/BDDFactory$1;)V)#75
net.sf.javabdd.BDDFactory$ReorderMethod.<init>(ILjava/lang/String;Lnet/sf/javabdd/BDDFactory$1;)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.BDDFactory$ReorderMethod.<init>(ILjava/lang/String;Lnet/sf/javabdd/BDDFactory$1;)V#LocalLoad(I,1)#1
net.sf.javabdd.BDDFactory$ReorderMethod.<init>(ILjava/lang/String;Lnet/sf/javabdd/BDDFactory$1;)V#LocalLoad(Ljava/lang/Object;,2)#2
net.sf.javabdd.BDDFactory$ReorderMethod.<init>(ILjava/lang/String;Lnet/sf/javabdd/BDDFactory$1;)V#Invoke(SPECIAL,Lnet/sf/javabdd/BDDFactory$ReorderMethod;,<init>,(ILjava/lang/String;)V)#3
net.sf.javabdd.BDDFactory$ReorderMethod.<init>(ILjava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.BDDFactory$ReorderMethod.<init>(ILjava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
net.sf.javabdd.BDDFactory$ReorderMethod.<init>(ILjava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#2
net.sf.javabdd.BDDFactory$ReorderMethod.<init>(ILjava/lang/String;)V#LocalLoad(I,1)#3
net.sf.javabdd.BDDFactory$ReorderMethod.<init>(ILjava/lang/String;)V#Put(I,NONSTATIC,Lnet/sf/javabdd/BDDFactory$ReorderMethod;,id)#4
net.sf.javabdd.BDDFactory$ReorderMethod.<init>(ILjava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#5
net.sf.javabdd.BDDFactory$ReorderMethod.<init>(ILjava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#6
net.sf.javabdd.BDDFactory$ReorderMethod.<init>(ILjava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lnet/sf/javabdd/BDDFactory$ReorderMethod;,name)#7
net.sf.javabdd.BDDFactory$ReorderMethod.<init>(ILjava/lang/String;)V#Return(V)#8
net.sf.javabdd.BDDFactory$ReorderMethod.<init>(ILjava/lang/String;Lnet/sf/javabdd/BDDFactory$1;)V#Return(V)#4
net.sf.javabdd.BDDFactory.<clinit>()V#Put(Lnet/sf/javabdd/BDDFactory$ReorderMethod;,STATIC,Lnet/sf/javabdd/BDDFactory;,REORDER_NONE)#76
net.sf.javabdd.BDDFactory.<clinit>()V#New(Lnet/sf/javabdd/BDDFactory$ReorderMethod;,0)#77
net.sf.javabdd.BDDFactory.<clinit>()V#Dup(1,0)#78
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(I,1)#79
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(Ljava/lang/String;,"WIN2")#80
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(L;,null)#81
net.sf.javabdd.BDDFactory.<clinit>()V#Invoke(SPECIAL,Lnet/sf/javabdd/BDDFactory$ReorderMethod;,<init>,(ILjava/lang/String;Lnet/sf/javabdd/BDDFactory$1;)V)#82
net.sf.javabdd.BDDFactory.<clinit>()V#Put(Lnet/sf/javabdd/BDDFactory$ReorderMethod;,STATIC,Lnet/sf/javabdd/BDDFactory;,REORDER_WIN2)#83
net.sf.javabdd.BDDFactory.<clinit>()V#New(Lnet/sf/javabdd/BDDFactory$ReorderMethod;,0)#84
net.sf.javabdd.BDDFactory.<clinit>()V#Dup(1,0)#85
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(I,2)#86
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(Ljava/lang/String;,"WIN2ITE")#87
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(L;,null)#88
net.sf.javabdd.BDDFactory.<clinit>()V#Invoke(SPECIAL,Lnet/sf/javabdd/BDDFactory$ReorderMethod;,<init>,(ILjava/lang/String;Lnet/sf/javabdd/BDDFactory$1;)V)#89
net.sf.javabdd.BDDFactory.<clinit>()V#Put(Lnet/sf/javabdd/BDDFactory$ReorderMethod;,STATIC,Lnet/sf/javabdd/BDDFactory;,REORDER_WIN2ITE)#90
net.sf.javabdd.BDDFactory.<clinit>()V#New(Lnet/sf/javabdd/BDDFactory$ReorderMethod;,0)#91
net.sf.javabdd.BDDFactory.<clinit>()V#Dup(1,0)#92
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(I,5)#93
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(Ljava/lang/String;,"WIN3")#94
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(L;,null)#95
net.sf.javabdd.BDDFactory.<clinit>()V#Invoke(SPECIAL,Lnet/sf/javabdd/BDDFactory$ReorderMethod;,<init>,(ILjava/lang/String;Lnet/sf/javabdd/BDDFactory$1;)V)#96
net.sf.javabdd.BDDFactory.<clinit>()V#Put(Lnet/sf/javabdd/BDDFactory$ReorderMethod;,STATIC,Lnet/sf/javabdd/BDDFactory;,REORDER_WIN3)#97
net.sf.javabdd.BDDFactory.<clinit>()V#New(Lnet/sf/javabdd/BDDFactory$ReorderMethod;,0)#98
net.sf.javabdd.BDDFactory.<clinit>()V#Dup(1,0)#99
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(I,6)#100
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(Ljava/lang/String;,"WIN3ITE")#101
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(L;,null)#102
net.sf.javabdd.BDDFactory.<clinit>()V#Invoke(SPECIAL,Lnet/sf/javabdd/BDDFactory$ReorderMethod;,<init>,(ILjava/lang/String;Lnet/sf/javabdd/BDDFactory$1;)V)#103
net.sf.javabdd.BDDFactory.<clinit>()V#Put(Lnet/sf/javabdd/BDDFactory$ReorderMethod;,STATIC,Lnet/sf/javabdd/BDDFactory;,REORDER_WIN3ITE)#104
net.sf.javabdd.BDDFactory.<clinit>()V#New(Lnet/sf/javabdd/BDDFactory$ReorderMethod;,0)#105
net.sf.javabdd.BDDFactory.<clinit>()V#Dup(1,0)#106
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(I,3)#107
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(Ljava/lang/String;,"SIFT")#108
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(L;,null)#109
net.sf.javabdd.BDDFactory.<clinit>()V#Invoke(SPECIAL,Lnet/sf/javabdd/BDDFactory$ReorderMethod;,<init>,(ILjava/lang/String;Lnet/sf/javabdd/BDDFactory$1;)V)#110
net.sf.javabdd.BDDFactory.<clinit>()V#Put(Lnet/sf/javabdd/BDDFactory$ReorderMethod;,STATIC,Lnet/sf/javabdd/BDDFactory;,REORDER_SIFT)#111
net.sf.javabdd.BDDFactory.<clinit>()V#New(Lnet/sf/javabdd/BDDFactory$ReorderMethod;,0)#112
net.sf.javabdd.BDDFactory.<clinit>()V#Dup(1,0)#113
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(I,4)#114
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(Ljava/lang/String;,"SIFTITE")#115
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(L;,null)#116
net.sf.javabdd.BDDFactory.<clinit>()V#Invoke(SPECIAL,Lnet/sf/javabdd/BDDFactory$ReorderMethod;,<init>,(ILjava/lang/String;Lnet/sf/javabdd/BDDFactory$1;)V)#117
net.sf.javabdd.BDDFactory.<clinit>()V#Put(Lnet/sf/javabdd/BDDFactory$ReorderMethod;,STATIC,Lnet/sf/javabdd/BDDFactory;,REORDER_SIFTITE)#118
net.sf.javabdd.BDDFactory.<clinit>()V#New(Lnet/sf/javabdd/BDDFactory$ReorderMethod;,0)#119
net.sf.javabdd.BDDFactory.<clinit>()V#Dup(1,0)#120
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(I,7)#121
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(Ljava/lang/String;,"RANDOM")#122
net.sf.javabdd.BDDFactory.<clinit>()V#Constant(L;,null)#123
net.sf.javabdd.BDDFactory.<clinit>()V#Invoke(SPECIAL,Lnet/sf/javabdd/BDDFactory$ReorderMethod;,<init>,(ILjava/lang/String;Lnet/sf/javabdd/BDDFactory$1;)V)#124
net.sf.javabdd.BDDFactory.<clinit>()V#Put(Lnet/sf/javabdd/BDDFactory$ReorderMethod;,STATIC,Lnet/sf/javabdd/BDDFactory;,REORDER_RANDOM)#125
net.sf.javabdd.BDDFactory.<clinit>()V#Return(V)#126
net.sf.javabdd.BDDFactory.init(Ljava/lang/String;II)Lnet/sf/javabdd/BDDFactory;#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.BDDFactory.init(Ljava/lang/String;II)Lnet/sf/javabdd/BDDFactory;#Constant(Ljava/lang/String;,"buddy")#1
net.sf.javabdd.BDDFactory.init(Ljava/lang/String;II)Lnet/sf/javabdd/BDDFactory;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#2
net.sf.javabdd.BDDFactory.init(Ljava/lang/String;II)Lnet/sf/javabdd/BDDFactory;#Constant(I,0)#3
net.sf.javabdd.BDDFactory.init(Ljava/lang/String;II)Lnet/sf/javabdd/BDDFactory;#ConditionalBranch(I,eq,9)#4
net.sf.javabdd.BDDFactory.init(Ljava/lang/String;II)Lnet/sf/javabdd/BDDFactory;#LocalLoad(Ljava/lang/Object;,0)#9
net.sf.javabdd.BDDFactory.init(Ljava/lang/String;II)Lnet/sf/javabdd/BDDFactory;#Constant(Ljava/lang/String;,"cudd")#10
net.sf.javabdd.BDDFactory.init(Ljava/lang/String;II)Lnet/sf/javabdd/BDDFactory;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#11
net.sf.javabdd.BDDFactory.init(Ljava/lang/String;II)Lnet/sf/javabdd/BDDFactory;#Constant(I,0)#12
net.sf.javabdd.BDDFactory.init(Ljava/lang/String;II)Lnet/sf/javabdd/BDDFactory;#ConditionalBranch(I,eq,18)#13
net.sf.javabdd.BDDFactory.init(Ljava/lang/String;II)Lnet/sf/javabdd/BDDFactory;#LocalLoad(Ljava/lang/Object;,0)#18
net.sf.javabdd.BDDFactory.init(Ljava/lang/String;II)Lnet/sf/javabdd/BDDFactory;#Constant(Ljava/lang/String;,"cal")#19
net.sf.javabdd.BDDFactory.init(Ljava/lang/String;II)Lnet/sf/javabdd/BDDFactory;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#20
net.sf.javabdd.BDDFactory.init(Ljava/lang/String;II)Lnet/sf/javabdd/BDDFactory;#Constant(I,0)#21
net.sf.javabdd.BDDFactory.init(Ljava/lang/String;II)Lnet/sf/javabdd/BDDFactory;#ConditionalBranch(I,eq,27)#22
net.sf.javabdd.BDDFactory.init(Ljava/lang/String;II)Lnet/sf/javabdd/BDDFactory;#LocalLoad(Ljava/lang/Object;,0)#27
net.sf.javabdd.BDDFactory.init(Ljava/lang/String;II)Lnet/sf/javabdd/BDDFactory;#Constant(Ljava/lang/String;,"j")#28
net.sf.javabdd.BDDFactory.init(Ljava/lang/String;II)Lnet/sf/javabdd/BDDFactory;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#29
net.sf.javabdd.BDDFactory.init(Ljava/lang/String;II)Lnet/sf/javabdd/BDDFactory;#Constant(I,0)#30
net.sf.javabdd.BDDFactory.init(Ljava/lang/String;II)Lnet/sf/javabdd/BDDFactory;#ConditionalBranch(I,ne,37)#31
net.sf.javabdd.BDDFactory.init(Ljava/lang/String;II)Lnet/sf/javabdd/BDDFactory;#LocalLoad(Ljava/lang/Object;,0)#32
net.sf.javabdd.BDDFactory.init(Ljava/lang/String;II)Lnet/sf/javabdd/BDDFactory;#Constant(Ljava/lang/String;,"java")#33
net.sf.javabdd.BDDFactory.init(Ljava/lang/String;II)Lnet/sf/javabdd/BDDFactory;#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#34
net.sf.javabdd.BDDFactory.init(Ljava/lang/String;II)Lnet/sf/javabdd/BDDFactory;#Constant(I,0)#35
net.sf.javabdd.BDDFactory.init(Ljava/lang/String;II)Lnet/sf/javabdd/BDDFactory;#ConditionalBranch(I,eq,41)#36
net.sf.javabdd.BDDFactory.init(Ljava/lang/String;II)Lnet/sf/javabdd/BDDFactory;#LocalLoad(I,1)#37
net.sf.javabdd.BDDFactory.init(Ljava/lang/String;II)Lnet/sf/javabdd/BDDFactory;#LocalLoad(I,2)#38
net.sf.javabdd.BDDFactory.init(Ljava/lang/String;II)Lnet/sf/javabdd/BDDFactory;#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,init,(II)Lnet/sf/javabdd/BDDFactory;)#39
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#0
net.sf.javabdd.JFactory.<clinit>()V#Put(Z,STATIC,Lnet/sf/javabdd/JFactory;,FLUSH_CACHE_ON_GC)#1
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,23)#2
net.sf.javabdd.JFactory.<clinit>()V#New([Ljava/lang/String;,1)#3
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#4
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#5
net.sf.javabdd.JFactory.<clinit>()V#Constant(Ljava/lang/String;,"")#6
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#7
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#8
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#9
net.sf.javabdd.JFactory.<clinit>()V#Constant(Ljava/lang/String;,"Out of memory")#10
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#11
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#12
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,2)#13
net.sf.javabdd.JFactory.<clinit>()V#Constant(Ljava/lang/String;,"Unknown variable")#14
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#15
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#16
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,3)#17
net.sf.javabdd.JFactory.<clinit>()V#Constant(Ljava/lang/String;,"Value out of range")#18
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#19
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#20
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,4)#21
net.sf.javabdd.JFactory.<clinit>()V#Constant(Ljava/lang/String;,"Unknown BDD root dereferenced")#22
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#23
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#24
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,5)#25
net.sf.javabdd.JFactory.<clinit>()V#Constant(Ljava/lang/String;,"bdd_init() called twice")#26
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#27
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#28
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,6)#29
net.sf.javabdd.JFactory.<clinit>()V#Constant(Ljava/lang/String;,"File operation failed")#30
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#31
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#32
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,7)#33
net.sf.javabdd.JFactory.<clinit>()V#Constant(Ljava/lang/String;,"Incorrect file format")#34
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#35
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#36
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,8)#37
net.sf.javabdd.JFactory.<clinit>()V#Constant(Ljava/lang/String;,"Variables not in ascending order")#38
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#39
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#40
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,9)#41
net.sf.javabdd.JFactory.<clinit>()V#Constant(Ljava/lang/String;,"User called break")#42
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#43
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#44
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,10)#45
net.sf.javabdd.JFactory.<clinit>()V#Constant(Ljava/lang/String;,"Mismatch in size of variable sets")#46
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#47
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#48
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,11)#49
net.sf.javabdd.JFactory.<clinit>()V#Constant(Ljava/lang/String;,"Cannot allocate fewer nodes than already in use")#50
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#51
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#52
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,12)#53
net.sf.javabdd.JFactory.<clinit>()V#Constant(Ljava/lang/String;,"Unknown operator")#54
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#55
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#56
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,13)#57
net.sf.javabdd.JFactory.<clinit>()V#Constant(Ljava/lang/String;,"Illegal variable set")#58
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#59
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#60
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,14)#61
net.sf.javabdd.JFactory.<clinit>()V#Constant(Ljava/lang/String;,"Bad variable block operation")#62
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#63
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#64
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,15)#65
net.sf.javabdd.JFactory.<clinit>()V#Constant(Ljava/lang/String;,"Trying to decrease the number of variables")#66
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#67
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#68
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,16)#69
net.sf.javabdd.JFactory.<clinit>()V#Constant(Ljava/lang/String;,"Trying to replace with variables already in the bdd")#70
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#71
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#72
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,17)#73
net.sf.javabdd.JFactory.<clinit>()V#Constant(Ljava/lang/String;,"Number of nodes reached user defined maximum")#74
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#75
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#76
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,18)#77
net.sf.javabdd.JFactory.<clinit>()V#Constant(Ljava/lang/String;,"Unknown BDD - was not in node table")#78
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#79
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#80
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,19)#81
net.sf.javabdd.JFactory.<clinit>()V#Constant(Ljava/lang/String;,"Bad size argument")#82
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#83
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#84
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,20)#85
net.sf.javabdd.JFactory.<clinit>()V#Constant(Ljava/lang/String;,"Mismatch in bitvector size")#86
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#87
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#88
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,21)#89
net.sf.javabdd.JFactory.<clinit>()V#Constant(Ljava/lang/String;,"Illegal shift-left/right parameter")#90
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#91
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#92
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,22)#93
net.sf.javabdd.JFactory.<clinit>()V#Constant(Ljava/lang/String;,"Division by zero")#94
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#95
net.sf.javabdd.JFactory.<clinit>()V#Put([Ljava/lang/String;,STATIC,Lnet/sf/javabdd/JFactory;,errorstrings)#96
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#97
net.sf.javabdd.JFactory.<clinit>()V#Put(I,STATIC,Lnet/sf/javabdd/JFactory;,supportSize)#98
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,11)#99
net.sf.javabdd.JFactory.<clinit>()V#New([[I,1)#100
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#101
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#102
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,4)#103
net.sf.javabdd.JFactory.<clinit>()V#New([I,1)#104
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#105
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#106
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#107
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#108
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#109
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#110
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#111
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#112
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#113
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,2)#114
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#115
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#116
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#117
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,3)#118
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#119
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#120
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#121
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#122
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#123
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,4)#124
net.sf.javabdd.JFactory.<clinit>()V#New([I,1)#125
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#126
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#127
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#128
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#129
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#130
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#131
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#132
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#133
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#134
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,2)#135
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#136
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#137
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#138
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,3)#139
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#140
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#141
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#142
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#143
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,2)#144
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,4)#145
net.sf.javabdd.JFactory.<clinit>()V#New([I,1)#146
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#147
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#148
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#149
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#150
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#151
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#152
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#153
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#154
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#155
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,2)#156
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#157
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#158
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#159
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,3)#160
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#161
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#162
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#163
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#164
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,3)#165
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,4)#166
net.sf.javabdd.JFactory.<clinit>()V#New([I,1)#167
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#168
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#169
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#170
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#171
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#172
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#173
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#174
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#175
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#176
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,2)#177
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#178
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#179
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#180
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,3)#181
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#182
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#183
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#184
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#185
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,4)#186
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,4)#187
net.sf.javabdd.JFactory.<clinit>()V#New([I,1)#188
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#189
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#190
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#191
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#192
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#193
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#194
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#195
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#196
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#197
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,2)#198
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#199
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#200
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#201
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,3)#202
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#203
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#204
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#205
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#206
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,5)#207
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,4)#208
net.sf.javabdd.JFactory.<clinit>()V#New([I,1)#209
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#210
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#211
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#212
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#213
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#214
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#215
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#216
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#217
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#218
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,2)#219
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#220
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#221
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#222
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,3)#223
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#224
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#225
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#226
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#227
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,6)#228
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,4)#229
net.sf.javabdd.JFactory.<clinit>()V#New([I,1)#230
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#231
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#232
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#233
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#234
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#235
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#236
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#237
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#238
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#239
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,2)#240
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#241
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#242
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#243
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,3)#244
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#245
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#246
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#247
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#248
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,7)#249
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,4)#250
net.sf.javabdd.JFactory.<clinit>()V#New([I,1)#251
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#252
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#253
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#254
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#255
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#256
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#257
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#258
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#259
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#260
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,2)#261
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#262
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#263
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#264
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,3)#265
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#266
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#267
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#268
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#269
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,8)#270
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,4)#271
net.sf.javabdd.JFactory.<clinit>()V#New([I,1)#272
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#273
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#274
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#275
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#276
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#277
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#278
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#279
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#280
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#281
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,2)#282
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#283
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#284
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#285
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,3)#286
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#287
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#288
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#289
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#290
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,9)#291
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,4)#292
net.sf.javabdd.JFactory.<clinit>()V#New([I,1)#293
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#294
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#295
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#296
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#297
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#298
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#299
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#300
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#301
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#302
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,2)#303
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#304
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#305
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#306
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,3)#307
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#308
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#309
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#310
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#311
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,10)#312
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,4)#313
net.sf.javabdd.JFactory.<clinit>()V#New([I,1)#314
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#315
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#316
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#317
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#318
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#319
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#320
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,1)#321
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#322
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#323
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,2)#324
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#325
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#326
net.sf.javabdd.JFactory.<clinit>()V#Dup(1,0)#327
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,3)#328
net.sf.javabdd.JFactory.<clinit>()V#Constant(I,0)#329
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(I)#330
net.sf.javabdd.JFactory.<clinit>()V#ArrayStore(Ljava/lang/Object;)#331
net.sf.javabdd.JFactory.<clinit>()V#Put([[I,STATIC,Lnet/sf/javabdd/JFactory;,oprres)#332
net.sf.javabdd.JFactory.<clinit>()V#Return(V)#333
net.sf.javabdd.JFactory.init(II)Lnet/sf/javabdd/BDDFactory;#New(Lnet/sf/javabdd/JFactory;,0)#0
net.sf.javabdd.JFactory.init(II)Lnet/sf/javabdd/BDDFactory;#Dup(1,0)#1
net.sf.javabdd.JFactory.init(II)Lnet/sf/javabdd/BDDFactory;#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,<init>,()V)#2
net.sf.javabdd.JFactory.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.<init>()V#Invoke(SPECIAL,Lnet/sf/javabdd/BDDFactory;,<init>,()V)#1
net.sf.javabdd.BDDFactory.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.BDDFactory.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
net.sf.javabdd.BDDFactory.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
net.sf.javabdd.BDDFactory.<init>()V#New(Lnet/sf/javabdd/BDDFactory$GCStats;,0)#3
net.sf.javabdd.BDDFactory.<init>()V#Dup(1,0)#4
net.sf.javabdd.BDDFactory.<init>()V#Invoke(SPECIAL,Lnet/sf/javabdd/BDDFactory$GCStats;,<init>,()V)#5
net.sf.javabdd.BDDFactory$GCStats.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.BDDFactory$GCStats.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
net.sf.javabdd.BDDFactory$GCStats.<init>()V#Return(V)#2
net.sf.javabdd.BDDFactory.<init>()V#Put(Lnet/sf/javabdd/BDDFactory$GCStats;,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,gcstats)#6
net.sf.javabdd.BDDFactory.<init>()V#LocalLoad(Ljava/lang/Object;,0)#7
net.sf.javabdd.BDDFactory.<init>()V#New(Lnet/sf/javabdd/BDDFactory$ReorderStats;,0)#8
net.sf.javabdd.BDDFactory.<init>()V#Dup(1,0)#9
net.sf.javabdd.BDDFactory.<init>()V#Invoke(SPECIAL,Lnet/sf/javabdd/BDDFactory$ReorderStats;,<init>,()V)#10
net.sf.javabdd.BDDFactory$ReorderStats.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.BDDFactory$ReorderStats.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
net.sf.javabdd.BDDFactory$ReorderStats.<init>()V#Return(V)#2
net.sf.javabdd.BDDFactory.<init>()V#Put(Lnet/sf/javabdd/BDDFactory$ReorderStats;,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,reorderstats)#11
net.sf.javabdd.BDDFactory.<init>()V#LocalLoad(Ljava/lang/Object;,0)#12
net.sf.javabdd.BDDFactory.<init>()V#New(Lnet/sf/javabdd/BDDFactory$CacheStats;,0)#13
net.sf.javabdd.BDDFactory.<init>()V#Dup(1,0)#14
net.sf.javabdd.BDDFactory.<init>()V#Invoke(SPECIAL,Lnet/sf/javabdd/BDDFactory$CacheStats;,<init>,()V)#15
net.sf.javabdd.BDDFactory$CacheStats.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.BDDFactory$CacheStats.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
net.sf.javabdd.BDDFactory$CacheStats.<init>()V#Return(V)#2
net.sf.javabdd.BDDFactory.<init>()V#Put(Lnet/sf/javabdd/BDDFactory$CacheStats;,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,cachestats)#16
net.sf.javabdd.BDDFactory.<init>()V#LocalLoad(Ljava/lang/Object;,0)#17
net.sf.javabdd.BDDFactory.<init>()V#Invoke(VIRTUAL,Ljava/lang/Object;,getClass,()Ljava/lang/Class;)#18
net.sf.javabdd.BDDFactory.<init>()V#Invoke(VIRTUAL,Ljava/lang/Class;,toString,()Ljava/lang/String;)#19
net.sf.javabdd.BDDFactory.<init>()V#LocalStore(Ljava/lang/Object;,1)#20
net.sf.javabdd.BDDFactory.<init>()V#Return(V)#21
net.sf.javabdd.JFactory.<init>()V#LocalLoad(Ljava/lang/Object;,0)#2
net.sf.javabdd.JFactory.<init>()V#Constant(I,20)#3
net.sf.javabdd.JFactory.<init>()V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,minfreenodes)#4
net.sf.javabdd.JFactory.<init>()V#LocalLoad(Ljava/lang/Object;,0)#5
net.sf.javabdd.JFactory.<init>()V#New(Ljava/util/Random;,0)#6
net.sf.javabdd.JFactory.<init>()V#Dup(1,0)#7
net.sf.javabdd.JFactory.<init>()V#Invoke(SPECIAL,Ljava/util/Random;,<init>,()V)#8
net.sf.javabdd.JFactory.<init>()V#Put(Ljava/util/Random;,NONSTATIC,Lnet/sf/javabdd/JFactory;,rng)#9
net.sf.javabdd.JFactory.<init>()V#Return(V)#10
net.sf.javabdd.JFactory.init(II)Lnet/sf/javabdd/BDDFactory;#LocalStore(Ljava/lang/Object;,2)#3
net.sf.javabdd.JFactory.init(II)Lnet/sf/javabdd/BDDFactory;#LocalLoad(Ljava/lang/Object;,2)#4
net.sf.javabdd.JFactory.init(II)Lnet/sf/javabdd/BDDFactory;#LocalLoad(I,0)#5
net.sf.javabdd.JFactory.init(II)Lnet/sf/javabdd/BDDFactory;#LocalLoad(I,1)#6
net.sf.javabdd.JFactory.init(II)Lnet/sf/javabdd/BDDFactory;#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDFactory;,initialize,(II)V)#7
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.initialize(II)V#Get(Z,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddrunning)#1
net.sf.javabdd.JFactory.initialize(II)V#Constant(I,0)#2
net.sf.javabdd.JFactory.initialize(II)V#ConditionalBranch(I,eq,7)#3
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(Ljava/lang/Object;,0)#7
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(Ljava/lang/Object;,0)#8
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(I,1)#9
net.sf.javabdd.JFactory.initialize(II)V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_prime_gte,(I)I)#10
net.sf.javabdd.JFactory.bdd_prime_gte(I)I#LocalLoad(I,1)#0
net.sf.javabdd.JFactory.bdd_prime_gte(I)I#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,isEven,(I)Z)#1
net.sf.javabdd.JFactory.isEven(I)Z#LocalLoad(I,0)#0
net.sf.javabdd.JFactory.isEven(I)Z#Constant(I,1)#1
net.sf.javabdd.JFactory.isEven(I)Z#BinaryOp(I,and)#2
net.sf.javabdd.JFactory.isEven(I)Z#Constant(I,0)#3
net.sf.javabdd.JFactory.isEven(I)Z#ConditionalBranch(I,ne,7)#4
net.sf.javabdd.JFactory.isEven(I)Z#Constant(I,1)#5
net.sf.javabdd.JFactory.isEven(I)Z#Goto(8)#6
net.sf.javabdd.JFactory.isEven(I)Z#Return(I)#8
net.sf.javabdd.JFactory.bdd_prime_gte(I)I#Constant(I,0)#2
net.sf.javabdd.JFactory.bdd_prime_gte(I)I#ConditionalBranch(I,eq,8)#3
net.sf.javabdd.JFactory.bdd_prime_gte(I)I#LocalLoad(I,1)#4
net.sf.javabdd.JFactory.bdd_prime_gte(I)I#Constant(I,1)#5
net.sf.javabdd.JFactory.bdd_prime_gte(I)I#BinaryOp(I,add)#6
net.sf.javabdd.JFactory.bdd_prime_gte(I)I#LocalStore(I,1)#7
net.sf.javabdd.JFactory.bdd_prime_gte(I)I#LocalLoad(Ljava/lang/Object;,0)#8
net.sf.javabdd.JFactory.bdd_prime_gte(I)I#LocalLoad(I,1)#9
net.sf.javabdd.JFactory.bdd_prime_gte(I)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,isPrime,(I)Z)#10
net.sf.javabdd.JFactory.isPrime(I)Z#LocalLoad(I,1)#0
net.sf.javabdd.JFactory.isPrime(I)Z#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,hasEasyFactors,(I)Z)#1
net.sf.javabdd.JFactory.hasEasyFactors(I)Z#LocalLoad(I,0)#0
net.sf.javabdd.JFactory.hasEasyFactors(I)Z#Constant(I,3)#1
net.sf.javabdd.JFactory.hasEasyFactors(I)Z#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,hasFactor,(II)Z)#2
net.sf.javabdd.JFactory.hasFactor(II)Z#LocalLoad(I,0)#0
net.sf.javabdd.JFactory.hasFactor(II)Z#LocalLoad(I,1)#1
net.sf.javabdd.JFactory.hasFactor(II)Z#ConditionalBranch(I,eq,10)#2
net.sf.javabdd.JFactory.hasFactor(II)Z#LocalLoad(I,0)#3
net.sf.javabdd.JFactory.hasFactor(II)Z#LocalLoad(I,1)#4
net.sf.javabdd.JFactory.hasFactor(II)Z#BinaryOp(I,rem)#5
net.sf.javabdd.JFactory.hasFactor(II)Z#Constant(I,0)#6
net.sf.javabdd.JFactory.hasFactor(II)Z#ConditionalBranch(I,ne,10)#7
net.sf.javabdd.JFactory.hasFactor(II)Z#Constant(I,1)#8
net.sf.javabdd.JFactory.hasFactor(II)Z#Goto(11)#9
net.sf.javabdd.JFactory.hasFactor(II)Z#Return(I)#11
net.sf.javabdd.JFactory.hasEasyFactors(I)Z#Constant(I,0)#3
net.sf.javabdd.JFactory.hasEasyFactors(I)Z#ConditionalBranch(I,ne,25)#4
net.sf.javabdd.JFactory.hasEasyFactors(I)Z#Constant(I,1)#25
net.sf.javabdd.JFactory.hasEasyFactors(I)Z#Goto(28)#26
net.sf.javabdd.JFactory.hasEasyFactors(I)Z#Return(I)#28
net.sf.javabdd.JFactory.isPrime(I)Z#Constant(I,0)#2
net.sf.javabdd.JFactory.isPrime(I)Z#ConditionalBranch(I,eq,6)#3
net.sf.javabdd.JFactory.isPrime(I)Z#Constant(I,0)#4
net.sf.javabdd.JFactory.isPrime(I)Z#Return(I)#5
net.sf.javabdd.JFactory.bdd_prime_gte(I)I#Constant(I,0)#11
net.sf.javabdd.JFactory.bdd_prime_gte(I)I#ConditionalBranch(I,ne,18)#12
net.sf.javabdd.JFactory.bdd_prime_gte(I)I#LocalLoad(I,1)#13
net.sf.javabdd.JFactory.bdd_prime_gte(I)I#Constant(I,2)#14
net.sf.javabdd.JFactory.bdd_prime_gte(I)I#BinaryOp(I,add)#15
net.sf.javabdd.JFactory.bdd_prime_gte(I)I#LocalStore(I,1)#16
net.sf.javabdd.JFactory.bdd_prime_gte(I)I#Goto(8)#17
net.sf.javabdd.JFactory.hasFactor(II)Z#Constant(I,0)#10
net.sf.javabdd.JFactory.hasEasyFactors(I)Z#LocalLoad(I,0)#5
net.sf.javabdd.JFactory.hasEasyFactors(I)Z#Constant(I,5)#6
net.sf.javabdd.JFactory.hasEasyFactors(I)Z#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,hasFactor,(II)Z)#7
net.sf.javabdd.JFactory.hasEasyFactors(I)Z#Constant(I,0)#8
net.sf.javabdd.JFactory.hasEasyFactors(I)Z#ConditionalBranch(I,ne,25)#9
net.sf.javabdd.JFactory.hasEasyFactors(I)Z#LocalLoad(I,0)#10
net.sf.javabdd.JFactory.hasEasyFactors(I)Z#Constant(I,7)#11
net.sf.javabdd.JFactory.hasEasyFactors(I)Z#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,hasFactor,(II)Z)#12
net.sf.javabdd.JFactory.hasEasyFactors(I)Z#Constant(I,0)#13
net.sf.javabdd.JFactory.hasEasyFactors(I)Z#ConditionalBranch(I,ne,25)#14
net.sf.javabdd.JFactory.hasEasyFactors(I)Z#LocalLoad(I,0)#15
net.sf.javabdd.JFactory.hasEasyFactors(I)Z#Constant(I,11)#16
net.sf.javabdd.JFactory.hasEasyFactors(I)Z#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,hasFactor,(II)Z)#17
net.sf.javabdd.JFactory.hasEasyFactors(I)Z#Constant(I,0)#18
net.sf.javabdd.JFactory.hasEasyFactors(I)Z#ConditionalBranch(I,ne,25)#19
net.sf.javabdd.JFactory.hasEasyFactors(I)Z#LocalLoad(I,0)#20
net.sf.javabdd.JFactory.hasEasyFactors(I)Z#Constant(I,13)#21
net.sf.javabdd.JFactory.hasEasyFactors(I)Z#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,hasFactor,(II)Z)#22
net.sf.javabdd.JFactory.hasEasyFactors(I)Z#Constant(I,0)#23
net.sf.javabdd.JFactory.hasEasyFactors(I)Z#ConditionalBranch(I,eq,27)#24
net.sf.javabdd.JFactory.hasEasyFactors(I)Z#Constant(I,0)#27
net.sf.javabdd.JFactory.isPrime(I)Z#LocalLoad(Ljava/lang/Object;,0)#6
net.sf.javabdd.JFactory.isPrime(I)Z#LocalLoad(I,1)#7
net.sf.javabdd.JFactory.isPrime(I)Z#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,isMillerRabinPrime,(I)Z)#8
net.sf.javabdd.JFactory.isMillerRabinPrime(I)Z#Constant(I,0)#0
net.sf.javabdd.JFactory.isMillerRabinPrime(I)Z#LocalStore(I,2)#1
net.sf.javabdd.JFactory.isMillerRabinPrime(I)Z#LocalLoad(I,2)#2
net.sf.javabdd.JFactory.isMillerRabinPrime(I)Z#Constant(I,20)#3
net.sf.javabdd.JFactory.isMillerRabinPrime(I)Z#ConditionalBranch(I,ge,23)#4
net.sf.javabdd.JFactory.isMillerRabinPrime(I)Z#LocalLoad(Ljava/lang/Object;,0)#5
net.sf.javabdd.JFactory.isMillerRabinPrime(I)Z#LocalLoad(I,1)#6
net.sf.javabdd.JFactory.isMillerRabinPrime(I)Z#Constant(I,1)#7
net.sf.javabdd.JFactory.isMillerRabinPrime(I)Z#BinaryOp(I,sub)#8
net.sf.javabdd.JFactory.isMillerRabinPrime(I)Z#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,Random,(I)I)#9
net.sf.javabdd.JFactory.Random(I)I#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.Random(I)I#Get(Ljava/util/Random;,NONSTATIC,Lnet/sf/javabdd/JFactory;,rng)#1
net.sf.javabdd.JFactory.Random(I)I#LocalLoad(I,1)#2
net.sf.javabdd.JFactory.Random(I)I#Invoke(VIRTUAL,Ljava/util/Random;,nextInt,(I)I)#3
net.sf.javabdd.JFactory.Random(I)I#Constant(I,1)#4
net.sf.javabdd.JFactory.Random(I)I#BinaryOp(I,add)#5
net.sf.javabdd.JFactory.Random(I)I#Return(I)#6
net.sf.javabdd.JFactory.isMillerRabinPrime(I)Z#LocalStore(I,3)#10
net.sf.javabdd.JFactory.isMillerRabinPrime(I)Z#LocalLoad(I,3)#11
net.sf.javabdd.JFactory.isMillerRabinPrime(I)Z#LocalLoad(I,1)#12
net.sf.javabdd.JFactory.isMillerRabinPrime(I)Z#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,isWitness,(II)Z)#13
net.sf.javabdd.JFactory.isWitness(II)Z#LocalLoad(I,1)#0
net.sf.javabdd.JFactory.isWitness(II)Z#Constant(I,1)#1
net.sf.javabdd.JFactory.isWitness(II)Z#BinaryOp(I,sub)#2
net.sf.javabdd.JFactory.isWitness(II)Z#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,numberOfBits,(I)I)#3
net.sf.javabdd.JFactory.numberOfBits(I)I#LocalLoad(I,0)#0
net.sf.javabdd.JFactory.numberOfBits(I)I#Constant(I,0)#1
net.sf.javabdd.JFactory.numberOfBits(I)I#ConditionalBranch(I,ne,5)#2
net.sf.javabdd.JFactory.numberOfBits(I)I#Constant(I,31)#5
net.sf.javabdd.JFactory.numberOfBits(I)I#LocalStore(I,1)#6
net.sf.javabdd.JFactory.numberOfBits(I)I#LocalLoad(I,1)#7
net.sf.javabdd.JFactory.numberOfBits(I)I#Constant(I,0)#8
net.sf.javabdd.JFactory.numberOfBits(I)I#ConditionalBranch(I,le,24)#9
net.sf.javabdd.JFactory.numberOfBits(I)I#LocalLoad(I,0)#10
net.sf.javabdd.JFactory.numberOfBits(I)I#LocalLoad(I,1)#11
net.sf.javabdd.JFactory.numberOfBits(I)I#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,BitIsSet,(II)Z)#12
net.sf.javabdd.JFactory.BitIsSet(II)Z#LocalLoad(I,0)#0
net.sf.javabdd.JFactory.BitIsSet(II)Z#Constant(I,1)#1
net.sf.javabdd.JFactory.BitIsSet(II)Z#LocalLoad(I,1)#2
net.sf.javabdd.JFactory.BitIsSet(II)Z#Shift(I,SHL)#3
net.sf.javabdd.JFactory.BitIsSet(II)Z#BinaryOp(I,and)#4
net.sf.javabdd.JFactory.BitIsSet(II)Z#Constant(I,0)#5
net.sf.javabdd.JFactory.BitIsSet(II)Z#ConditionalBranch(I,eq,9)#6
net.sf.javabdd.JFactory.BitIsSet(II)Z#Constant(I,0)#9
net.sf.javabdd.JFactory.BitIsSet(II)Z#Return(I)#10
net.sf.javabdd.JFactory.numberOfBits(I)I#Constant(I,0)#13
net.sf.javabdd.JFactory.numberOfBits(I)I#ConditionalBranch(I,eq,19)#14
net.sf.javabdd.JFactory.numberOfBits(I)I#LocalLoad(I,1)#19
net.sf.javabdd.JFactory.numberOfBits(I)I#Constant(I,-1)#20
net.sf.javabdd.JFactory.numberOfBits(I)I#BinaryOp(I,add)#21
net.sf.javabdd.JFactory.numberOfBits(I)I#LocalStore(I,1)#22
net.sf.javabdd.JFactory.numberOfBits(I)I#Goto(7)#23
net.sf.javabdd.JFactory.BitIsSet(II)Z#Constant(I,1)#7
net.sf.javabdd.JFactory.BitIsSet(II)Z#Goto(10)#8
net.sf.javabdd.JFactory.numberOfBits(I)I#LocalLoad(I,1)#15
net.sf.javabdd.JFactory.numberOfBits(I)I#Constant(I,1)#16
net.sf.javabdd.JFactory.numberOfBits(I)I#BinaryOp(I,add)#17
net.sf.javabdd.JFactory.numberOfBits(I)I#Return(I)#18
net.sf.javabdd.JFactory.isWitness(II)Z#Constant(I,1)#4
net.sf.javabdd.JFactory.isWitness(II)Z#BinaryOp(I,sub)#5
net.sf.javabdd.JFactory.isWitness(II)Z#LocalStore(I,2)#6
net.sf.javabdd.JFactory.isWitness(II)Z#Constant(I,1)#7
net.sf.javabdd.JFactory.isWitness(II)Z#LocalStore(I,3)#8
net.sf.javabdd.JFactory.isWitness(II)Z#LocalLoad(I,2)#9
net.sf.javabdd.JFactory.isWitness(II)Z#LocalStore(I,4)#10
net.sf.javabdd.JFactory.isWitness(II)Z#LocalLoad(I,4)#11
net.sf.javabdd.JFactory.isWitness(II)Z#Constant(I,0)#12
net.sf.javabdd.JFactory.isWitness(II)Z#ConditionalBranch(I,lt,51)#13
net.sf.javabdd.JFactory.isWitness(II)Z#LocalLoad(I,3)#14
net.sf.javabdd.JFactory.isWitness(II)Z#LocalStore(I,5)#15
net.sf.javabdd.JFactory.isWitness(II)Z#LocalLoad(I,3)#16
net.sf.javabdd.JFactory.isWitness(II)Z#LocalLoad(I,3)#17
net.sf.javabdd.JFactory.isWitness(II)Z#LocalLoad(I,1)#18
net.sf.javabdd.JFactory.isWitness(II)Z#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,u64_mulmod,(III)I)#19
net.sf.javabdd.JFactory.u64_mulmod(III)I#LocalLoad(I,0)#0
net.sf.javabdd.JFactory.u64_mulmod(III)I#Conversion(I,J)#1
net.sf.javabdd.JFactory.u64_mulmod(III)I#LocalLoad(I,1)#2
net.sf.javabdd.JFactory.u64_mulmod(III)I#Conversion(I,J)#3
net.sf.javabdd.JFactory.u64_mulmod(III)I#BinaryOp(J,mul)#4
net.sf.javabdd.JFactory.u64_mulmod(III)I#LocalLoad(I,2)#5
net.sf.javabdd.JFactory.u64_mulmod(III)I#Conversion(I,J)#6
net.sf.javabdd.JFactory.u64_mulmod(III)I#BinaryOp(J,rem)#7
net.sf.javabdd.JFactory.u64_mulmod(III)I#Conversion(J,I)#8
net.sf.javabdd.JFactory.u64_mulmod(III)I#Return(I)#9
net.sf.javabdd.JFactory.isWitness(II)Z#LocalStore(I,3)#20
net.sf.javabdd.JFactory.isWitness(II)Z#LocalLoad(I,3)#21
net.sf.javabdd.JFactory.isWitness(II)Z#Constant(I,1)#22
net.sf.javabdd.JFactory.isWitness(II)Z#ConditionalBranch(I,ne,34)#23
net.sf.javabdd.JFactory.isWitness(II)Z#LocalLoad(I,5)#24
net.sf.javabdd.JFactory.isWitness(II)Z#Constant(I,1)#25
net.sf.javabdd.JFactory.isWitness(II)Z#ConditionalBranch(I,eq,34)#26
net.sf.javabdd.JFactory.isWitness(II)Z#LocalLoad(I,1)#34
net.sf.javabdd.JFactory.isWitness(II)Z#Constant(I,1)#35
net.sf.javabdd.JFactory.isWitness(II)Z#BinaryOp(I,sub)#36
net.sf.javabdd.JFactory.isWitness(II)Z#LocalLoad(I,4)#37
net.sf.javabdd.JFactory.isWitness(II)Z#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,BitIsSet,(II)Z)#38
net.sf.javabdd.JFactory.isWitness(II)Z#Constant(I,0)#39
net.sf.javabdd.JFactory.isWitness(II)Z#ConditionalBranch(I,eq,46)#40
net.sf.javabdd.JFactory.isWitness(II)Z#LocalLoad(I,3)#41
net.sf.javabdd.JFactory.isWitness(II)Z#LocalLoad(I,0)#42
net.sf.javabdd.JFactory.isWitness(II)Z#LocalLoad(I,1)#43
net.sf.javabdd.JFactory.isWitness(II)Z#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,u64_mulmod,(III)I)#44
net.sf.javabdd.JFactory.isWitness(II)Z#LocalStore(I,3)#45
net.sf.javabdd.JFactory.isWitness(II)Z#LocalLoad(I,4)#46
net.sf.javabdd.JFactory.isWitness(II)Z#Constant(I,-1)#47
net.sf.javabdd.JFactory.isWitness(II)Z#BinaryOp(I,add)#48
net.sf.javabdd.JFactory.isWitness(II)Z#LocalStore(I,4)#49
net.sf.javabdd.JFactory.isWitness(II)Z#Goto(11)#50
net.sf.javabdd.JFactory.isWitness(II)Z#LocalLoad(I,5)#27
net.sf.javabdd.JFactory.isWitness(II)Z#LocalLoad(I,1)#28
net.sf.javabdd.JFactory.isWitness(II)Z#Constant(I,1)#29
net.sf.javabdd.JFactory.isWitness(II)Z#BinaryOp(I,sub)#30
net.sf.javabdd.JFactory.isWitness(II)Z#ConditionalBranch(I,eq,34)#31
net.sf.javabdd.JFactory.isWitness(II)Z#LocalLoad(I,3)#51
net.sf.javabdd.JFactory.isWitness(II)Z#Constant(I,1)#52
net.sf.javabdd.JFactory.isWitness(II)Z#ConditionalBranch(I,eq,56)#53
net.sf.javabdd.JFactory.isWitness(II)Z#Constant(I,0)#56
net.sf.javabdd.JFactory.isWitness(II)Z#Return(I)#57
net.sf.javabdd.JFactory.isMillerRabinPrime(I)Z#Constant(I,0)#14
net.sf.javabdd.JFactory.isMillerRabinPrime(I)Z#ConditionalBranch(I,eq,18)#15
net.sf.javabdd.JFactory.isMillerRabinPrime(I)Z#LocalLoad(I,2)#18
net.sf.javabdd.JFactory.isMillerRabinPrime(I)Z#Constant(I,1)#19
net.sf.javabdd.JFactory.isMillerRabinPrime(I)Z#BinaryOp(I,add)#20
net.sf.javabdd.JFactory.isMillerRabinPrime(I)Z#LocalStore(I,2)#21
net.sf.javabdd.JFactory.isMillerRabinPrime(I)Z#Goto(2)#22
net.sf.javabdd.JFactory.isMillerRabinPrime(I)Z#Constant(I,1)#23
net.sf.javabdd.JFactory.isMillerRabinPrime(I)Z#Return(I)#24
net.sf.javabdd.JFactory.isPrime(I)Z#Return(I)#9
net.sf.javabdd.JFactory.bdd_prime_gte(I)I#LocalLoad(I,1)#18
net.sf.javabdd.JFactory.bdd_prime_gte(I)I#Return(I)#19
net.sf.javabdd.JFactory.initialize(II)V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodesize)#11
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(Ljava/lang/Object;,0)#12
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(Ljava/lang/Object;,0)#13
net.sf.javabdd.JFactory.initialize(II)V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodesize)#14
net.sf.javabdd.JFactory.initialize(II)V#Constant(I,5)#15
net.sf.javabdd.JFactory.initialize(II)V#BinaryOp(I,mul)#16
net.sf.javabdd.JFactory.initialize(II)V#New([I,1)#17
net.sf.javabdd.JFactory.initialize(II)V#Put([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodes)#18
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(Ljava/lang/Object;,0)#19
net.sf.javabdd.JFactory.initialize(II)V#Constant(I,0)#20
net.sf.javabdd.JFactory.initialize(II)V#Put(Z,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddresized)#21
net.sf.javabdd.JFactory.initialize(II)V#Constant(I,0)#22
net.sf.javabdd.JFactory.initialize(II)V#LocalStore(I,3)#23
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(I,3)#24
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(Ljava/lang/Object;,0)#25
net.sf.javabdd.JFactory.initialize(II)V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodesize)#26
net.sf.javabdd.JFactory.initialize(II)V#ConditionalBranch(I,ge,43)#27
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(Ljava/lang/Object;,0)#28
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(I,3)#29
net.sf.javabdd.JFactory.initialize(II)V#Constant(I,-1)#30
net.sf.javabdd.JFactory.initialize(II)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETLOW,(II)V)#31
net.sf.javabdd.JFactory.SETLOW(II)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.SETLOW(II)V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodes)#1
net.sf.javabdd.JFactory.SETLOW(II)V#LocalLoad(I,1)#2
net.sf.javabdd.JFactory.SETLOW(II)V#Constant(I,5)#3
net.sf.javabdd.JFactory.SETLOW(II)V#BinaryOp(I,mul)#4
net.sf.javabdd.JFactory.SETLOW(II)V#Constant(I,1)#5
net.sf.javabdd.JFactory.SETLOW(II)V#BinaryOp(I,add)#6
net.sf.javabdd.JFactory.SETLOW(II)V#LocalLoad(I,2)#7
net.sf.javabdd.JFactory.SETLOW(II)V#ArrayStore(I)#8
net.sf.javabdd.JFactory.SETLOW(II)V#Return(V)#9
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(Ljava/lang/Object;,0)#32
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(I,3)#33
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(I,3)#34
net.sf.javabdd.JFactory.initialize(II)V#Constant(I,1)#35
net.sf.javabdd.JFactory.initialize(II)V#BinaryOp(I,add)#36
net.sf.javabdd.JFactory.initialize(II)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETNEXT,(II)V)#37
net.sf.javabdd.JFactory.SETNEXT(II)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.SETNEXT(II)V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodes)#1
net.sf.javabdd.JFactory.SETNEXT(II)V#LocalLoad(I,1)#2
net.sf.javabdd.JFactory.SETNEXT(II)V#Constant(I,5)#3
net.sf.javabdd.JFactory.SETNEXT(II)V#BinaryOp(I,mul)#4
net.sf.javabdd.JFactory.SETNEXT(II)V#Constant(I,4)#5
net.sf.javabdd.JFactory.SETNEXT(II)V#BinaryOp(I,add)#6
net.sf.javabdd.JFactory.SETNEXT(II)V#LocalLoad(I,2)#7
net.sf.javabdd.JFactory.SETNEXT(II)V#ArrayStore(I)#8
net.sf.javabdd.JFactory.SETNEXT(II)V#Return(V)#9
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(I,3)#38
net.sf.javabdd.JFactory.initialize(II)V#Constant(I,1)#39
net.sf.javabdd.JFactory.initialize(II)V#BinaryOp(I,add)#40
net.sf.javabdd.JFactory.initialize(II)V#LocalStore(I,3)#41
net.sf.javabdd.JFactory.initialize(II)V#Goto(24)#42
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(Ljava/lang/Object;,0)#43
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(Ljava/lang/Object;,0)#44
net.sf.javabdd.JFactory.initialize(II)V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodesize)#45
net.sf.javabdd.JFactory.initialize(II)V#Constant(I,1)#46
net.sf.javabdd.JFactory.initialize(II)V#BinaryOp(I,sub)#47
net.sf.javabdd.JFactory.initialize(II)V#Constant(I,0)#48
net.sf.javabdd.JFactory.initialize(II)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETNEXT,(II)V)#49
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(Ljava/lang/Object;,0)#50
net.sf.javabdd.JFactory.initialize(II)V#Constant(I,0)#51
net.sf.javabdd.JFactory.initialize(II)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETMAXREF,(I)V)#52
net.sf.javabdd.JFactory.SETMAXREF(I)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.SETMAXREF(I)V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodes)#1
net.sf.javabdd.JFactory.SETMAXREF(I)V#LocalLoad(I,1)#2
net.sf.javabdd.JFactory.SETMAXREF(I)V#Constant(I,5)#3
net.sf.javabdd.JFactory.SETMAXREF(I)V#BinaryOp(I,mul)#4
net.sf.javabdd.JFactory.SETMAXREF(I)V#Constant(I,0)#5
net.sf.javabdd.JFactory.SETMAXREF(I)V#BinaryOp(I,add)#6
net.sf.javabdd.JFactory.SETMAXREF(I)V#Dup(2,0)#7
net.sf.javabdd.JFactory.SETMAXREF(I)V#ArrayLoad(I)#8
net.sf.javabdd.JFactory.SETMAXREF(I)V#Constant(I,-4194304)#9
net.sf.javabdd.JFactory.SETMAXREF(I)V#BinaryOp(I,or)#10
net.sf.javabdd.JFactory.SETMAXREF(I)V#ArrayStore(I)#11
net.sf.javabdd.JFactory.SETMAXREF(I)V#Return(V)#12
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(Ljava/lang/Object;,0)#53
net.sf.javabdd.JFactory.initialize(II)V#Constant(I,1)#54
net.sf.javabdd.JFactory.initialize(II)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETMAXREF,(I)V)#55
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(Ljava/lang/Object;,0)#56
net.sf.javabdd.JFactory.initialize(II)V#Constant(I,0)#57
net.sf.javabdd.JFactory.initialize(II)V#Constant(I,0)#58
net.sf.javabdd.JFactory.initialize(II)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETLOW,(II)V)#59
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(Ljava/lang/Object;,0)#60
net.sf.javabdd.JFactory.initialize(II)V#Constant(I,0)#61
net.sf.javabdd.JFactory.initialize(II)V#Constant(I,0)#62
net.sf.javabdd.JFactory.initialize(II)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETHIGH,(II)V)#63
net.sf.javabdd.JFactory.SETHIGH(II)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.SETHIGH(II)V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodes)#1
net.sf.javabdd.JFactory.SETHIGH(II)V#LocalLoad(I,1)#2
net.sf.javabdd.JFactory.SETHIGH(II)V#Constant(I,5)#3
net.sf.javabdd.JFactory.SETHIGH(II)V#BinaryOp(I,mul)#4
net.sf.javabdd.JFactory.SETHIGH(II)V#Constant(I,2)#5
net.sf.javabdd.JFactory.SETHIGH(II)V#BinaryOp(I,add)#6
net.sf.javabdd.JFactory.SETHIGH(II)V#LocalLoad(I,2)#7
net.sf.javabdd.JFactory.SETHIGH(II)V#ArrayStore(I)#8
net.sf.javabdd.JFactory.SETHIGH(II)V#Return(V)#9
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(Ljava/lang/Object;,0)#64
net.sf.javabdd.JFactory.initialize(II)V#Constant(I,1)#65
net.sf.javabdd.JFactory.initialize(II)V#Constant(I,1)#66
net.sf.javabdd.JFactory.initialize(II)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETLOW,(II)V)#67
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(Ljava/lang/Object;,0)#68
net.sf.javabdd.JFactory.initialize(II)V#Constant(I,1)#69
net.sf.javabdd.JFactory.initialize(II)V#Constant(I,1)#70
net.sf.javabdd.JFactory.initialize(II)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETHIGH,(II)V)#71
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(Ljava/lang/Object;,0)#72
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(I,2)#73
net.sf.javabdd.JFactory.initialize(II)V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_operator_init,(I)V)#74
net.sf.javabdd.JFactory.bdd_operator_init(I)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.bdd_operator_init(I)V#Constant(I,0)#1
net.sf.javabdd.JFactory.bdd_operator_init(I)V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,quantvarsetID)#2
net.sf.javabdd.JFactory.bdd_operator_init(I)V#LocalLoad(Ljava/lang/Object;,0)#3
net.sf.javabdd.JFactory.bdd_operator_init(I)V#Constant(L;,null)#4
net.sf.javabdd.JFactory.bdd_operator_init(I)V#Put([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,quantvarset)#5
net.sf.javabdd.JFactory.bdd_operator_init(I)V#LocalLoad(Ljava/lang/Object;,0)#6
net.sf.javabdd.JFactory.bdd_operator_init(I)V#Constant(I,0)#7
net.sf.javabdd.JFactory.bdd_operator_init(I)V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,cacheratio)#8
net.sf.javabdd.JFactory.bdd_operator_init(I)V#LocalLoad(Ljava/lang/Object;,0)#9
net.sf.javabdd.JFactory.bdd_operator_init(I)V#Constant(L;,null)#10
net.sf.javabdd.JFactory.bdd_operator_init(I)V#Put([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,supportSet)#11
net.sf.javabdd.JFactory.bdd_operator_init(I)V#Constant(I,0)#12
net.sf.javabdd.JFactory.bdd_operator_init(I)V#Put(I,STATIC,Lnet/sf/javabdd/JFactory;,supportSize)#13
net.sf.javabdd.JFactory.bdd_operator_init(I)V#Return(V)#14
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(Ljava/lang/Object;,0)#75
net.sf.javabdd.JFactory.initialize(II)V#Constant(I,2)#76
net.sf.javabdd.JFactory.initialize(II)V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreepos)#77
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(Ljava/lang/Object;,0)#78
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(Ljava/lang/Object;,0)#79
net.sf.javabdd.JFactory.initialize(II)V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodesize)#80
net.sf.javabdd.JFactory.initialize(II)V#Constant(I,2)#81
net.sf.javabdd.JFactory.initialize(II)V#BinaryOp(I,sub)#82
net.sf.javabdd.JFactory.initialize(II)V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreenum)#83
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(Ljava/lang/Object;,0)#84
net.sf.javabdd.JFactory.initialize(II)V#Constant(I,1)#85
net.sf.javabdd.JFactory.initialize(II)V#Put(Z,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddrunning)#86
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(Ljava/lang/Object;,0)#87
net.sf.javabdd.JFactory.initialize(II)V#Constant(I,0)#88
net.sf.javabdd.JFactory.initialize(II)V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#89
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(Ljava/lang/Object;,0)#90
net.sf.javabdd.JFactory.initialize(II)V#Constant(I,0)#91
net.sf.javabdd.JFactory.initialize(II)V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,gbcollectnum)#92
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(Ljava/lang/Object;,0)#93
net.sf.javabdd.JFactory.initialize(II)V#Constant(J,0)#94
net.sf.javabdd.JFactory.initialize(II)V#Put(J,NONSTATIC,Lnet/sf/javabdd/JFactory;,gbcclock)#95
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(Ljava/lang/Object;,0)#96
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(I,2)#97
net.sf.javabdd.JFactory.initialize(II)V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,cachesize)#98
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(Ljava/lang/Object;,0)#99
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(Ljava/lang/Object;,0)#100
net.sf.javabdd.JFactory.initialize(II)V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodesize)#101
net.sf.javabdd.JFactory.initialize(II)V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,usednodes_nextreorder)#102
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(Ljava/lang/Object;,0)#103
net.sf.javabdd.JFactory.initialize(II)V#Constant(I,10000000)#104
net.sf.javabdd.JFactory.initialize(II)V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddmaxnodeincrease)#105
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(Ljava/lang/Object;,0)#106
net.sf.javabdd.JFactory.initialize(II)V#Constant(I,0)#107
net.sf.javabdd.JFactory.initialize(II)V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bdderrorcond)#108
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(Ljava/lang/Object;,0)#109
net.sf.javabdd.JFactory.initialize(II)V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_pairs_init,()V)#110
net.sf.javabdd.JFactory.bdd_pairs_init()V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.bdd_pairs_init()V#Constant(I,0)#1
net.sf.javabdd.JFactory.bdd_pairs_init()V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,pairsid)#2
net.sf.javabdd.JFactory.bdd_pairs_init()V#LocalLoad(Ljava/lang/Object;,0)#3
net.sf.javabdd.JFactory.bdd_pairs_init()V#Constant(L;,null)#4
net.sf.javabdd.JFactory.bdd_pairs_init()V#Put(Lnet/sf/javabdd/JFactory$bddPair;,NONSTATIC,Lnet/sf/javabdd/JFactory;,pairs)#5
net.sf.javabdd.JFactory.bdd_pairs_init()V#Return(V)#6
net.sf.javabdd.JFactory.initialize(II)V#LocalLoad(Ljava/lang/Object;,0)#111
net.sf.javabdd.JFactory.initialize(II)V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_reorder_init,()V)#112
net.sf.javabdd.JFactory.bdd_reorder_init()V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.bdd_reorder_init()V#Constant(I,0)#1
net.sf.javabdd.JFactory.bdd_reorder_init()V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,reorderdisabled)#2
net.sf.javabdd.JFactory.bdd_reorder_init()V#LocalLoad(Ljava/lang/Object;,0)#3
net.sf.javabdd.JFactory.bdd_reorder_init()V#Constant(L;,null)#4
net.sf.javabdd.JFactory.bdd_reorder_init()V#Put(Lnet/sf/javabdd/JFactory$BddTree;,NONSTATIC,Lnet/sf/javabdd/JFactory;,vartree)#5
net.sf.javabdd.JFactory.bdd_reorder_init()V#LocalLoad(Ljava/lang/Object;,0)#6
net.sf.javabdd.JFactory.bdd_reorder_init()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_clrvarblocks,()V)#7
net.sf.javabdd.JFactory.bdd_clrvarblocks()V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.bdd_clrvarblocks()V#LocalLoad(Ljava/lang/Object;,0)#1
net.sf.javabdd.JFactory.bdd_clrvarblocks()V#Get(Lnet/sf/javabdd/JFactory$BddTree;,NONSTATIC,Lnet/sf/javabdd/JFactory;,vartree)#2
net.sf.javabdd.JFactory.bdd_clrvarblocks()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bddtree_del,(Lnet/sf/javabdd/JFactory$BddTree;)V)#3
net.sf.javabdd.JFactory.bddtree_del(Lnet/sf/javabdd/JFactory$BddTree;)V#LocalLoad(Ljava/lang/Object;,1)#0
net.sf.javabdd.JFactory.bddtree_del(Lnet/sf/javabdd/JFactory$BddTree;)V#Constant(L;,null)#1
net.sf.javabdd.JFactory.bddtree_del(Lnet/sf/javabdd/JFactory$BddTree;)V#ConditionalBranch(Ljava/lang/Object;,ne,4)#2
net.sf.javabdd.JFactory.bddtree_del(Lnet/sf/javabdd/JFactory$BddTree;)V#Return(V)#3
net.sf.javabdd.JFactory.bdd_clrvarblocks()V#LocalLoad(Ljava/lang/Object;,0)#4
net.sf.javabdd.JFactory.bdd_clrvarblocks()V#Constant(L;,null)#5
net.sf.javabdd.JFactory.bdd_clrvarblocks()V#Put(Lnet/sf/javabdd/JFactory$BddTree;,NONSTATIC,Lnet/sf/javabdd/JFactory;,vartree)#6
net.sf.javabdd.JFactory.bdd_clrvarblocks()V#LocalLoad(Ljava/lang/Object;,0)#7
net.sf.javabdd.JFactory.bdd_clrvarblocks()V#Constant(I,0)#8
net.sf.javabdd.JFactory.bdd_clrvarblocks()V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,blockid)#9
net.sf.javabdd.JFactory.bdd_clrvarblocks()V#Return(V)#10
net.sf.javabdd.JFactory.bdd_reorder_init()V#LocalLoad(Ljava/lang/Object;,0)#8
net.sf.javabdd.JFactory.bdd_reorder_init()V#Constant(I,0)#9
net.sf.javabdd.JFactory.bdd_reorder_init()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_reorder_verbose,(I)I)#10
net.sf.javabdd.JFactory.bdd_reorder_verbose(I)I#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.bdd_reorder_verbose(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,verbose)#1
net.sf.javabdd.JFactory.bdd_reorder_verbose(I)I#LocalStore(I,2)#2
net.sf.javabdd.JFactory.bdd_reorder_verbose(I)I#LocalLoad(Ljava/lang/Object;,0)#3
net.sf.javabdd.JFactory.bdd_reorder_verbose(I)I#LocalLoad(I,1)#4
net.sf.javabdd.JFactory.bdd_reorder_verbose(I)I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,verbose)#5
net.sf.javabdd.JFactory.bdd_reorder_verbose(I)I#LocalLoad(I,2)#6
net.sf.javabdd.JFactory.bdd_reorder_verbose(I)I#Return(I)#7
net.sf.javabdd.JFactory.bdd_reorder_init()V#Pop(1)#11
net.sf.javabdd.JFactory.bdd_reorder_init()V#LocalLoad(Ljava/lang/Object;,0)#12
net.sf.javabdd.JFactory.bdd_reorder_init()V#Constant(I,0)#13
net.sf.javabdd.JFactory.bdd_reorder_init()V#Constant(I,0)#14
net.sf.javabdd.JFactory.bdd_reorder_init()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_autoreorder_times,(II)I)#15
net.sf.javabdd.JFactory.bdd_autoreorder_times(II)I#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.bdd_autoreorder_times(II)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddreordermethod)#1
net.sf.javabdd.JFactory.bdd_autoreorder_times(II)I#LocalStore(I,3)#2
net.sf.javabdd.JFactory.bdd_autoreorder_times(II)I#LocalLoad(Ljava/lang/Object;,0)#3
net.sf.javabdd.JFactory.bdd_autoreorder_times(II)I#LocalLoad(I,1)#4
net.sf.javabdd.JFactory.bdd_autoreorder_times(II)I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddreordermethod)#5
net.sf.javabdd.JFactory.bdd_autoreorder_times(II)I#LocalLoad(Ljava/lang/Object;,0)#6
net.sf.javabdd.JFactory.bdd_autoreorder_times(II)I#LocalLoad(I,2)#7
net.sf.javabdd.JFactory.bdd_autoreorder_times(II)I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddreordertimes)#8
net.sf.javabdd.JFactory.bdd_autoreorder_times(II)I#LocalLoad(I,3)#9
net.sf.javabdd.JFactory.bdd_autoreorder_times(II)I#Return(I)#10
net.sf.javabdd.JFactory.bdd_reorder_init()V#Pop(1)#16
net.sf.javabdd.JFactory.bdd_reorder_init()V#LocalLoad(Ljava/lang/Object;,0)#17
net.sf.javabdd.JFactory.bdd_reorder_init()V#LocalLoad(Ljava/lang/Object;,0)#18
net.sf.javabdd.JFactory.bdd_reorder_init()V#Constant(I,0)#19
net.sf.javabdd.JFactory.bdd_reorder_init()V#Dup(1,1)#20
net.sf.javabdd.JFactory.bdd_reorder_init()V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,usednum_after)#21
net.sf.javabdd.JFactory.bdd_reorder_init()V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,usednum_before)#22
net.sf.javabdd.JFactory.bdd_reorder_init()V#LocalLoad(Ljava/lang/Object;,0)#23
net.sf.javabdd.JFactory.bdd_reorder_init()V#Constant(I,0)#24
net.sf.javabdd.JFactory.bdd_reorder_init()V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,blockid)#25
net.sf.javabdd.JFactory.bdd_reorder_init()V#Return(V)#26
net.sf.javabdd.JFactory.initialize(II)V#Return(V)#113
net.sf.javabdd.JFactory.init(II)Lnet/sf/javabdd/BDDFactory;#LocalLoad(Ljava/lang/Object;,2)#8
net.sf.javabdd.JFactory.init(II)Lnet/sf/javabdd/BDDFactory;#Return(Ljava/lang/Object;)#9
net.sf.javabdd.BDDFactory.init(Ljava/lang/String;II)Lnet/sf/javabdd/BDDFactory;#Return(Ljava/lang/Object;)#40
chord.bddbddb.Rel.initialize()V#Put(Lnet/sf/javabdd/BDDFactory;,NONSTATIC,Lchord/bddbddb/Rel;,factory)#29
chord.bddbddb.Rel.initialize()V#LocalLoad(Ljava/lang/Object;,0)#30
chord.bddbddb.Rel.initialize()V#Get(Lnet/sf/javabdd/BDDFactory;,NONSTATIC,Lchord/bddbddb/Rel;,factory)#31
chord.bddbddb.Rel.initialize()V#Get(I,STATIC,Lchord/project/Config;,verbose)#32
chord.bddbddb.Rel.initialize()V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDFactory;,setVerbose,(I)V)#33
net.sf.javabdd.BDDFactory.setVerbose(I)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.BDDFactory.setVerbose(I)V#LocalLoad(I,1)#1
net.sf.javabdd.BDDFactory.setVerbose(I)V#Put(I,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,verbose)#2
net.sf.javabdd.BDDFactory.setVerbose(I)V#Return(V)#3
chord.bddbddb.Rel.initialize()V#LocalLoad(Ljava/lang/Object;,0)#34
chord.bddbddb.Rel.initialize()V#Get(Lnet/sf/javabdd/BDDFactory;,NONSTATIC,Lchord/bddbddb/Rel;,factory)#35
chord.bddbddb.Rel.initialize()V#Constant(D,2.0)#36
chord.bddbddb.Rel.initialize()V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDFactory;,setIncreaseFactor,(D)D)#37
net.sf.javabdd.JFactory.setIncreaseFactor(D)D#LocalLoad(D,1)#0
net.sf.javabdd.JFactory.setIncreaseFactor(D)D#Constant(D,0.0)#1
net.sf.javabdd.JFactory.setIncreaseFactor(D)D#Comparison(D,cmpg)#2
net.sf.javabdd.JFactory.setIncreaseFactor(D)D#Constant(I,0)#3
net.sf.javabdd.JFactory.setIncreaseFactor(D)D#ConditionalBranch(I,ge,9)#4
net.sf.javabdd.JFactory.setIncreaseFactor(D)D#LocalLoad(Ljava/lang/Object;,0)#9
net.sf.javabdd.JFactory.setIncreaseFactor(D)D#Get(D,NONSTATIC,Lnet/sf/javabdd/JFactory;,increasefactor)#10
net.sf.javabdd.JFactory.setIncreaseFactor(D)D#LocalStore(D,3)#11
net.sf.javabdd.JFactory.setIncreaseFactor(D)D#LocalLoad(Ljava/lang/Object;,0)#12
net.sf.javabdd.JFactory.setIncreaseFactor(D)D#LocalLoad(D,1)#13
net.sf.javabdd.JFactory.setIncreaseFactor(D)D#Put(D,NONSTATIC,Lnet/sf/javabdd/JFactory;,increasefactor)#14
net.sf.javabdd.JFactory.setIncreaseFactor(D)D#LocalLoad(D,3)#15
net.sf.javabdd.JFactory.setIncreaseFactor(D)D#Return(D)#16
chord.bddbddb.Rel.initialize()V#Pop(1)#38
chord.bddbddb.Rel.initialize()V#LocalLoad(Ljava/lang/Object;,0)#39
chord.bddbddb.Rel.initialize()V#Get(Lnet/sf/javabdd/BDDFactory;,NONSTATIC,Lchord/bddbddb/Rel;,factory)#40
chord.bddbddb.Rel.initialize()V#LocalLoad(D,3)#41
chord.bddbddb.Rel.initialize()V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDFactory;,setMinFreeNodes,(D)D)#42
net.sf.javabdd.JFactory.setMinFreeNodes(D)D#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.setMinFreeNodes(D)D#LocalLoad(D,1)#1
net.sf.javabdd.JFactory.setMinFreeNodes(D)D#Constant(D,100.0)#2
net.sf.javabdd.JFactory.setMinFreeNodes(D)D#BinaryOp(D,mul)#3
net.sf.javabdd.JFactory.setMinFreeNodes(D)D#Conversion(D,I)#4
net.sf.javabdd.JFactory.setMinFreeNodes(D)D#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_setminfreenodes,(I)I)#5
net.sf.javabdd.JFactory.bdd_setminfreenodes(I)I#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.bdd_setminfreenodes(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,minfreenodes)#1
net.sf.javabdd.JFactory.bdd_setminfreenodes(I)I#LocalStore(I,2)#2
net.sf.javabdd.JFactory.bdd_setminfreenodes(I)I#LocalLoad(I,1)#3
net.sf.javabdd.JFactory.bdd_setminfreenodes(I)I#Constant(I,0)#4
net.sf.javabdd.JFactory.bdd_setminfreenodes(I)I#ConditionalBranch(I,lt,9)#5
net.sf.javabdd.JFactory.bdd_setminfreenodes(I)I#LocalLoad(I,1)#6
net.sf.javabdd.JFactory.bdd_setminfreenodes(I)I#Constant(I,100)#7
net.sf.javabdd.JFactory.bdd_setminfreenodes(I)I#ConditionalBranch(I,le,12)#8
net.sf.javabdd.JFactory.bdd_setminfreenodes(I)I#LocalLoad(Ljava/lang/Object;,0)#12
net.sf.javabdd.JFactory.bdd_setminfreenodes(I)I#LocalLoad(I,1)#13
net.sf.javabdd.JFactory.bdd_setminfreenodes(I)I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,minfreenodes)#14
net.sf.javabdd.JFactory.bdd_setminfreenodes(I)I#LocalLoad(I,2)#15
net.sf.javabdd.JFactory.bdd_setminfreenodes(I)I#Return(I)#16
net.sf.javabdd.JFactory.setMinFreeNodes(D)D#Conversion(I,D)#6
net.sf.javabdd.JFactory.setMinFreeNodes(D)D#Constant(D,100.0)#7
net.sf.javabdd.JFactory.setMinFreeNodes(D)D#BinaryOp(D,div)#8
net.sf.javabdd.JFactory.setMinFreeNodes(D)D#Return(D)#9
chord.bddbddb.Rel.initialize()V#Pop(1)#43
chord.bddbddb.Rel.initialize()V#LocalLoad(Ljava/lang/Object;,0)#44
chord.bddbddb.Rel.initialize()V#LocalLoad(Ljava/lang/Object;,0)#45
chord.bddbddb.Rel.initialize()V#Get(I,NONSTATIC,Lchord/bddbddb/Rel;,numDoms)#46
chord.bddbddb.Rel.initialize()V#New([Lnet/sf/javabdd/BDDDomain;,1)#47
chord.bddbddb.Rel.initialize()V#Put([Lnet/sf/javabdd/BDDDomain;,NONSTATIC,Lchord/bddbddb/Rel;,domBdds)#48
chord.bddbddb.Rel.initialize()V#LocalLoad(Ljava/lang/Object;,0)#49
chord.bddbddb.Rel.initialize()V#Get(Lchord/bddbddb/RelSign;,NONSTATIC,Lchord/bddbddb/Rel;,sign)#50
chord.bddbddb.Rel.initialize()V#Get(Ljava/lang/Object;,NONSTATIC,Lchord/bddbddb/RelSign;,val0)#51
chord.bddbddb.Rel.initialize()V#CheckCast([Ljava/lang/String;)#52
chord.bddbddb.Rel.initialize()V#LocalStore(Ljava/lang/Object;,5)#53
chord.bddbddb.Rel.initialize()V#Constant(I,0)#54
chord.bddbddb.Rel.initialize()V#LocalStore(I,6)#55
chord.bddbddb.Rel.initialize()V#Goto(97)#56
chord.bddbddb.Rel.initialize()V#LocalLoad(I,6)#97
chord.bddbddb.Rel.initialize()V#LocalLoad(Ljava/lang/Object;,0)#98
chord.bddbddb.Rel.initialize()V#Get(I,NONSTATIC,Lchord/bddbddb/Rel;,numDoms)#99
chord.bddbddb.Rel.initialize()V#ConditionalBranch(I,lt,57)#100
chord.bddbddb.Rel.initialize()V#LocalLoad(Ljava/lang/Object;,5)#57
chord.bddbddb.Rel.initialize()V#LocalLoad(I,6)#58
chord.bddbddb.Rel.initialize()V#ArrayLoad(Ljava/lang/Object;)#59
chord.bddbddb.Rel.initialize()V#LocalStore(Ljava/lang/Object;,7)#60
chord.bddbddb.Rel.initialize()V#LocalLoad(Ljava/lang/Object;,0)#61
chord.bddbddb.Rel.initialize()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/bddbddb/Rel;,doms)#62
chord.bddbddb.Rel.initialize()V#LocalLoad(I,6)#63
chord.bddbddb.Rel.initialize()V#ArrayLoad(Ljava/lang/Object;)#64
chord.bddbddb.Rel.initialize()V#Invoke(VIRTUAL,Lchord/bddbddb/Dom;,size,()I)#65
chord.bddbddb.Rel.initialize()V#LocalStore(I,8)#66
chord.bddbddb.Rel.initialize()V#LocalLoad(I,8)#67
chord.bddbddb.Rel.initialize()V#Constant(I,0)#68
chord.bddbddb.Rel.initialize()V#ConditionalBranch(I,ne,72)#69
chord.bddbddb.Rel.initialize()V#LocalLoad(Ljava/lang/Object;,0)#72
chord.bddbddb.Rel.initialize()V#Get(Lnet/sf/javabdd/BDDFactory;,NONSTATIC,Lchord/bddbddb/Rel;,factory)#73
chord.bddbddb.Rel.initialize()V#Constant(I,1)#74
chord.bddbddb.Rel.initialize()V#New([J,1)#75
chord.bddbddb.Rel.initialize()V#Dup(1,0)#76
chord.bddbddb.Rel.initialize()V#Constant(I,0)#77
chord.bddbddb.Rel.initialize()V#LocalLoad(I,8)#78
chord.bddbddb.Rel.initialize()V#Conversion(I,J)#79
chord.bddbddb.Rel.initialize()V#ArrayStore(J)#80
chord.bddbddb.Rel.initialize()V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDFactory;,extDomain,([J)[Lnet/sf/javabdd/BDDDomain;)#81
net.sf.javabdd.BDDFactory.extDomain([J)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,1)#0
net.sf.javabdd.BDDFactory.extDomain([J)[Lnet/sf/javabdd/BDDDomain;#ArrayLength()#1
net.sf.javabdd.BDDFactory.extDomain([J)[Lnet/sf/javabdd/BDDDomain;#New([Ljava/math/BigInteger;,1)#2
net.sf.javabdd.BDDFactory.extDomain([J)[Lnet/sf/javabdd/BDDDomain;#LocalStore(Ljava/lang/Object;,2)#3
net.sf.javabdd.BDDFactory.extDomain([J)[Lnet/sf/javabdd/BDDDomain;#Constant(I,0)#4
net.sf.javabdd.BDDFactory.extDomain([J)[Lnet/sf/javabdd/BDDDomain;#LocalStore(I,3)#5
net.sf.javabdd.BDDFactory.extDomain([J)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,3)#6
net.sf.javabdd.BDDFactory.extDomain([J)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,2)#7
net.sf.javabdd.BDDFactory.extDomain([J)[Lnet/sf/javabdd/BDDDomain;#ArrayLength()#8
net.sf.javabdd.BDDFactory.extDomain([J)[Lnet/sf/javabdd/BDDDomain;#ConditionalBranch(I,ge,22)#9
net.sf.javabdd.BDDFactory.extDomain([J)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,2)#10
net.sf.javabdd.BDDFactory.extDomain([J)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,3)#11
net.sf.javabdd.BDDFactory.extDomain([J)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,1)#12
net.sf.javabdd.BDDFactory.extDomain([J)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,3)#13
net.sf.javabdd.BDDFactory.extDomain([J)[Lnet/sf/javabdd/BDDDomain;#ArrayLoad(J)#14
net.sf.javabdd.BDDFactory.extDomain([J)[Lnet/sf/javabdd/BDDDomain;#Invoke(STATIC,Ljava/math/BigInteger;,valueOf,(J)Ljava/math/BigInteger;)#15
net.sf.javabdd.BDDFactory.extDomain([J)[Lnet/sf/javabdd/BDDDomain;#ArrayStore(Ljava/lang/Object;)#16
net.sf.javabdd.BDDFactory.extDomain([J)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,3)#17
net.sf.javabdd.BDDFactory.extDomain([J)[Lnet/sf/javabdd/BDDDomain;#Constant(I,1)#18
net.sf.javabdd.BDDFactory.extDomain([J)[Lnet/sf/javabdd/BDDDomain;#BinaryOp(I,add)#19
net.sf.javabdd.BDDFactory.extDomain([J)[Lnet/sf/javabdd/BDDDomain;#LocalStore(I,3)#20
net.sf.javabdd.BDDFactory.extDomain([J)[Lnet/sf/javabdd/BDDDomain;#Goto(6)#21
net.sf.javabdd.BDDFactory.extDomain([J)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#22
net.sf.javabdd.BDDFactory.extDomain([J)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,2)#23
net.sf.javabdd.BDDFactory.extDomain([J)[Lnet/sf/javabdd/BDDDomain;#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDFactory;,extDomain,([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;)#24
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Get(I,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,fdvarnum)#1
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalStore(I,2)#2
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Constant(I,0)#3
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalStore(I,4)#4
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,1)#5
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#ArrayLength()#6
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalStore(I,8)#7
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#8
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Get([Lnet/sf/javabdd/BDDDomain;,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,domain)#9
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Constant(L;,null)#10
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#ConditionalBranch(Ljava/lang/Object;,ne,17)#11
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#12
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,8)#13
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#New([Lnet/sf/javabdd/BDDDomain;,1)#14
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Put([Lnet/sf/javabdd/BDDDomain;,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,domain)#15
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Goto(50)#16
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Constant(I,0)#50
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalStore(I,5)#51
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,5)#52
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,8)#53
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#ConditionalBranch(I,ge,87)#54
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#55
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Get([Lnet/sf/javabdd/BDDDomain;,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,domain)#56
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,5)#57
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#58
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Get(I,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,fdvarnum)#59
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#BinaryOp(I,add)#60
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#61
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,5)#62
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#63
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Get(I,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,fdvarnum)#64
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#BinaryOp(I,add)#65
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,1)#66
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,5)#67
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#ArrayLoad(Ljava/lang/Object;)#68
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDFactory;,createDomain,(ILjava/math/BigInteger;)Lnet/sf/javabdd/BDDDomain;)#69
net.sf.javabdd.JFactory.createDomain(ILjava/math/BigInteger;)Lnet/sf/javabdd/BDDDomain;#New(Lnet/sf/javabdd/JFactory$bddDomain;,0)#0
net.sf.javabdd.JFactory.createDomain(ILjava/math/BigInteger;)Lnet/sf/javabdd/BDDDomain;#Dup(1,0)#1
net.sf.javabdd.JFactory.createDomain(ILjava/math/BigInteger;)Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#2
net.sf.javabdd.JFactory.createDomain(ILjava/math/BigInteger;)Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,1)#3
net.sf.javabdd.JFactory.createDomain(ILjava/math/BigInteger;)Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,2)#4
net.sf.javabdd.JFactory.createDomain(ILjava/math/BigInteger;)Lnet/sf/javabdd/BDDDomain;#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory$bddDomain;,<init>,(Lnet/sf/javabdd/JFactory;ILjava/math/BigInteger;)V)#5
net.sf.javabdd.JFactory$bddDomain.<init>(Lnet/sf/javabdd/JFactory;ILjava/math/BigInteger;)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory$bddDomain.<init>(Lnet/sf/javabdd/JFactory;ILjava/math/BigInteger;)V#LocalLoad(Ljava/lang/Object;,1)#1
net.sf.javabdd.JFactory$bddDomain.<init>(Lnet/sf/javabdd/JFactory;ILjava/math/BigInteger;)V#Put(Lnet/sf/javabdd/JFactory;,NONSTATIC,Lnet/sf/javabdd/JFactory$bddDomain;,this$0)#2
net.sf.javabdd.JFactory$bddDomain.<init>(Lnet/sf/javabdd/JFactory;ILjava/math/BigInteger;)V#LocalLoad(Ljava/lang/Object;,0)#3
net.sf.javabdd.JFactory$bddDomain.<init>(Lnet/sf/javabdd/JFactory;ILjava/math/BigInteger;)V#LocalLoad(I,2)#4
net.sf.javabdd.JFactory$bddDomain.<init>(Lnet/sf/javabdd/JFactory;ILjava/math/BigInteger;)V#LocalLoad(Ljava/lang/Object;,3)#5
net.sf.javabdd.JFactory$bddDomain.<init>(Lnet/sf/javabdd/JFactory;ILjava/math/BigInteger;)V#Invoke(SPECIAL,Lnet/sf/javabdd/BDDDomain;,<init>,(ILjava/math/BigInteger;)V)#6
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#Constant(J,2)#2
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#Invoke(STATIC,Ljava/math/BigInteger;,valueOf,(J)Ljava/math/BigInteger;)#3
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#LocalStore(Ljava/lang/Object;,3)#4
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#LocalLoad(Ljava/lang/Object;,2)#5
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#Invoke(VIRTUAL,Ljava/math/BigInteger;,signum,()I)#6
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#Constant(I,0)#7
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#ConditionalBranch(I,gt,13)#8
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#LocalLoad(Ljava/lang/Object;,0)#13
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#LocalLoad(I,1)#14
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#Invoke(STATIC,Ljava/lang/Integer;,toString,(I)Ljava/lang/String;)#15
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#Put(Ljava/lang/String;,NONSTATIC,Lnet/sf/javabdd/BDDDomain;,name)#16
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#LocalLoad(Ljava/lang/Object;,0)#17
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#LocalLoad(I,1)#18
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#Put(I,NONSTATIC,Lnet/sf/javabdd/BDDDomain;,index)#19
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#LocalLoad(Ljava/lang/Object;,0)#20
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#LocalLoad(Ljava/lang/Object;,2)#21
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#Put(Ljava/math/BigInteger;,NONSTATIC,Lnet/sf/javabdd/BDDDomain;,realsize)#22
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#Constant(I,1)#23
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#LocalStore(I,4)#24
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#LocalLoad(Ljava/lang/Object;,3)#25
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#LocalLoad(Ljava/lang/Object;,2)#26
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#Invoke(VIRTUAL,Ljava/math/BigInteger;,compareTo,(Ljava/math/BigInteger;)I)#27
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#Constant(I,0)#28
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#ConditionalBranch(I,ge,39)#29
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#LocalLoad(I,4)#30
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#Constant(I,1)#31
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#BinaryOp(I,add)#32
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#LocalStore(I,4)#33
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#LocalLoad(Ljava/lang/Object;,3)#34
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#Constant(I,1)#35
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#Invoke(VIRTUAL,Ljava/math/BigInteger;,shiftLeft,(I)Ljava/math/BigInteger;)#36
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#LocalStore(Ljava/lang/Object;,3)#37
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#Goto(25)#38
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#LocalLoad(Ljava/lang/Object;,0)#39
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#LocalLoad(I,4)#40
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#New([I,1)#41
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#Put([I,NONSTATIC,Lnet/sf/javabdd/BDDDomain;,ivar)#42
net.sf.javabdd.BDDDomain.<init>(ILjava/math/BigInteger;)V#Return(V)#43
net.sf.javabdd.JFactory$bddDomain.<init>(Lnet/sf/javabdd/JFactory;ILjava/math/BigInteger;)V#Return(V)#7
net.sf.javabdd.JFactory.createDomain(ILjava/math/BigInteger;)Lnet/sf/javabdd/BDDDomain;#Return(Ljava/lang/Object;)#6
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#ArrayStore(Ljava/lang/Object;)#70
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,4)#71
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#72
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Get([Lnet/sf/javabdd/BDDDomain;,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,domain)#73
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,5)#74
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#75
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Get(I,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,fdvarnum)#76
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#BinaryOp(I,add)#77
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#ArrayLoad(Ljava/lang/Object;)#78
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDDomain;,varNum,()I)#79
net.sf.javabdd.BDDDomain.varNum()I#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.BDDDomain.varNum()I#Get([I,NONSTATIC,Lnet/sf/javabdd/BDDDomain;,ivar)#1
net.sf.javabdd.BDDDomain.varNum()I#ArrayLength()#2
net.sf.javabdd.BDDDomain.varNum()I#Return(I)#3
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#BinaryOp(I,add)#80
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalStore(I,4)#81
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,5)#82
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Constant(I,1)#83
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#BinaryOp(I,add)#84
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalStore(I,5)#85
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Goto(52)#86
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#87
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Get(I,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,firstbddvar)#88
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalStore(I,3)#89
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#90
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDFactory;,varNum,()I)#91
net.sf.javabdd.JFactory.varNum()I#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.varNum()I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_varnum,()I)#1
net.sf.javabdd.JFactory.bdd_varnum()I#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.bdd_varnum()I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#1
net.sf.javabdd.JFactory.bdd_varnum()I#Return(I)#2
net.sf.javabdd.JFactory.varNum()I#Return(I)#2
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalStore(I,9)#92
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#93
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Get(I,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,firstbddvar)#94
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,4)#95
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#BinaryOp(I,add)#96
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,9)#97
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#ConditionalBranch(I,le,106)#98
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#99
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#100
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Get(I,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,firstbddvar)#101
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,4)#102
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#BinaryOp(I,add)#103
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDFactory;,setVarNum,(I)I)#104
net.sf.javabdd.JFactory.setVarNum(I)I#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.setVarNum(I)I#LocalLoad(I,1)#1
net.sf.javabdd.JFactory.setVarNum(I)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_setvarnum,(I)I)#2
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#1
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalStore(I,3)#2
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(I,1)#3
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,1)#4
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#ConditionalBranch(I,lt,9)#5
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(I,1)#6
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,2097151)#7
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#ConditionalBranch(I,le,14)#8
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(I,1)#14
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#15
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#16
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#ConditionalBranch(I,ge,21)#17
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(I,1)#21
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#22
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#23
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#ConditionalBranch(I,ne,27)#24
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#27
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_disable_reorder,()V)#28
net.sf.javabdd.JFactory.bdd_disable_reorder()V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.bdd_disable_reorder()V#Constant(I,1)#1
net.sf.javabdd.JFactory.bdd_disable_reorder()V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,reorderdisabled)#2
net.sf.javabdd.JFactory.bdd_disable_reorder()V#Return(V)#3
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#29
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarset)#30
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(L;,null)#31
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#ConditionalBranch(Ljava/lang/Object;,ne,52)#32
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#33
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(I,1)#34
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,2)#35
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#BinaryOp(I,mul)#36
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#New([I,1)#37
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Put([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarset)#38
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#39
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(I,1)#40
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,1)#41
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#BinaryOp(I,add)#42
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#New([I,1)#43
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Put([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddlevel2var)#44
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#45
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(I,1)#46
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,1)#47
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#BinaryOp(I,add)#48
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#New([I,1)#49
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Put([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvar2level)#50
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Goto(103)#51
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#103
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddrefstack)#104
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(L;,null)#105
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#ConditionalBranch(Ljava/lang/Object;,eq,110)#106
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#110
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(I,1)#111
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,2)#112
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#BinaryOp(I,mul)#113
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,1)#114
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#BinaryOp(I,add)#115
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#New([I,1)#116
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Put([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddrefstack)#117
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#118
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,0)#119
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddrefstacktop)#120
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#121
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#122
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalStore(I,2)#123
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#124
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#125
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(I,1)#126
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#ConditionalBranch(I,ge,213)#127
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#128
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarset)#129
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#130
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#131
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,2)#132
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#BinaryOp(I,mul)#133
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#134
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#135
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#136
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#137
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,0)#138
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,1)#139
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_makenode,(III)I)#140
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(I,2)#0
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(I,3)#1
net.sf.javabdd.JFactory.bdd_makenode(III)I#ConditionalBranch(I,ne,5)#2
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#5
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(I,1)#6
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(I,2)#7
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(I,3)#8
net.sf.javabdd.JFactory.bdd_makenode(III)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,NODEHASH,(III)I)#9
net.sf.javabdd.JFactory.NODEHASH(III)I#LocalLoad(I,1)#0
net.sf.javabdd.JFactory.NODEHASH(III)I#LocalLoad(I,2)#1
net.sf.javabdd.JFactory.NODEHASH(III)I#LocalLoad(I,3)#2
net.sf.javabdd.JFactory.NODEHASH(III)I#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,TRIPLE,(III)I)#3
net.sf.javabdd.JFactory.TRIPLE(III)I#LocalLoad(I,2)#0
net.sf.javabdd.JFactory.TRIPLE(III)I#LocalLoad(I,0)#1
net.sf.javabdd.JFactory.TRIPLE(III)I#LocalLoad(I,1)#2
net.sf.javabdd.JFactory.TRIPLE(III)I#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,PAIR,(II)I)#3
net.sf.javabdd.JFactory.PAIR(II)I#LocalLoad(I,0)#0
net.sf.javabdd.JFactory.PAIR(II)I#LocalLoad(I,1)#1
net.sf.javabdd.JFactory.PAIR(II)I#BinaryOp(I,add)#2
net.sf.javabdd.JFactory.PAIR(II)I#LocalLoad(I,0)#3
net.sf.javabdd.JFactory.PAIR(II)I#LocalLoad(I,1)#4
net.sf.javabdd.JFactory.PAIR(II)I#BinaryOp(I,add)#5
net.sf.javabdd.JFactory.PAIR(II)I#Constant(I,1)#6
net.sf.javabdd.JFactory.PAIR(II)I#BinaryOp(I,add)#7
net.sf.javabdd.JFactory.PAIR(II)I#BinaryOp(I,mul)#8
net.sf.javabdd.JFactory.PAIR(II)I#Constant(I,2)#9
net.sf.javabdd.JFactory.PAIR(II)I#BinaryOp(I,div)#10
net.sf.javabdd.JFactory.PAIR(II)I#LocalLoad(I,0)#11
net.sf.javabdd.JFactory.PAIR(II)I#BinaryOp(I,add)#12
net.sf.javabdd.JFactory.PAIR(II)I#Return(I)#13
net.sf.javabdd.JFactory.TRIPLE(III)I#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,PAIR,(II)I)#4
net.sf.javabdd.JFactory.TRIPLE(III)I#Return(I)#5
net.sf.javabdd.JFactory.NODEHASH(III)I#LocalLoad(Ljava/lang/Object;,0)#4
net.sf.javabdd.JFactory.NODEHASH(III)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodesize)#5
net.sf.javabdd.JFactory.NODEHASH(III)I#BinaryOp(I,rem)#6
net.sf.javabdd.JFactory.NODEHASH(III)I#Invoke(STATIC,Ljava/lang/Math;,abs,(I)I)#7
net.sf.javabdd.JFactory.NODEHASH(III)I#Return(I)#8
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalStore(I,4)#10
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#11
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(I,4)#12
net.sf.javabdd.JFactory.bdd_makenode(III)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HASH,(I)I)#13
net.sf.javabdd.JFactory.HASH(I)I#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.HASH(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodes)#1
net.sf.javabdd.JFactory.HASH(I)I#LocalLoad(I,1)#2
net.sf.javabdd.JFactory.HASH(I)I#Constant(I,5)#3
net.sf.javabdd.JFactory.HASH(I)I#BinaryOp(I,mul)#4
net.sf.javabdd.JFactory.HASH(I)I#Constant(I,3)#5
net.sf.javabdd.JFactory.HASH(I)I#BinaryOp(I,add)#6
net.sf.javabdd.JFactory.HASH(I)I#ArrayLoad(I)#7
net.sf.javabdd.JFactory.HASH(I)I#Return(I)#8
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalStore(I,5)#14
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(I,5)#15
net.sf.javabdd.JFactory.bdd_makenode(III)I#Constant(I,0)#16
net.sf.javabdd.JFactory.bdd_makenode(III)I#ConditionalBranch(I,eq,40)#17
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#40
net.sf.javabdd.JFactory.bdd_makenode(III)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreepos)#41
net.sf.javabdd.JFactory.bdd_makenode(III)I#Constant(I,0)#42
net.sf.javabdd.JFactory.bdd_makenode(III)I#ConditionalBranch(I,ne,102)#43
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#102
net.sf.javabdd.JFactory.bdd_makenode(III)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreepos)#103
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalStore(I,5)#104
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#105
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#106
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#107
net.sf.javabdd.JFactory.bdd_makenode(III)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreepos)#108
net.sf.javabdd.JFactory.bdd_makenode(III)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,NEXT,(I)I)#109
net.sf.javabdd.JFactory.NEXT(I)I#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.NEXT(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodes)#1
net.sf.javabdd.JFactory.NEXT(I)I#LocalLoad(I,1)#2
net.sf.javabdd.JFactory.NEXT(I)I#Constant(I,5)#3
net.sf.javabdd.JFactory.NEXT(I)I#BinaryOp(I,mul)#4
net.sf.javabdd.JFactory.NEXT(I)I#Constant(I,4)#5
net.sf.javabdd.JFactory.NEXT(I)I#BinaryOp(I,add)#6
net.sf.javabdd.JFactory.NEXT(I)I#ArrayLoad(I)#7
net.sf.javabdd.JFactory.NEXT(I)I#Return(I)#8
net.sf.javabdd.JFactory.bdd_makenode(III)I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreepos)#110
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#111
net.sf.javabdd.JFactory.bdd_makenode(III)I#Dup(1,0)#112
net.sf.javabdd.JFactory.bdd_makenode(III)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreenum)#113
net.sf.javabdd.JFactory.bdd_makenode(III)I#Constant(I,1)#114
net.sf.javabdd.JFactory.bdd_makenode(III)I#BinaryOp(I,sub)#115
net.sf.javabdd.JFactory.bdd_makenode(III)I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreenum)#116
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#117
net.sf.javabdd.JFactory.bdd_makenode(III)I#Dup(1,0)#118
net.sf.javabdd.JFactory.bdd_makenode(III)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddproduced)#119
net.sf.javabdd.JFactory.bdd_makenode(III)I#Constant(I,1)#120
net.sf.javabdd.JFactory.bdd_makenode(III)I#BinaryOp(I,add)#121
net.sf.javabdd.JFactory.bdd_makenode(III)I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddproduced)#122
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#123
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(I,5)#124
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(I,1)#125
net.sf.javabdd.JFactory.bdd_makenode(III)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETLEVELANDMARK,(II)V)#126
net.sf.javabdd.JFactory.SETLEVELANDMARK(II)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.SETLEVELANDMARK(II)V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodes)#1
net.sf.javabdd.JFactory.SETLEVELANDMARK(II)V#LocalLoad(I,1)#2
net.sf.javabdd.JFactory.SETLEVELANDMARK(II)V#Constant(I,5)#3
net.sf.javabdd.JFactory.SETLEVELANDMARK(II)V#BinaryOp(I,mul)#4
net.sf.javabdd.JFactory.SETLEVELANDMARK(II)V#Constant(I,0)#5
net.sf.javabdd.JFactory.SETLEVELANDMARK(II)V#BinaryOp(I,add)#6
net.sf.javabdd.JFactory.SETLEVELANDMARK(II)V#Dup(2,0)#7
net.sf.javabdd.JFactory.SETLEVELANDMARK(II)V#ArrayLoad(I)#8
net.sf.javabdd.JFactory.SETLEVELANDMARK(II)V#Constant(I,-4194304)#9
net.sf.javabdd.JFactory.SETLEVELANDMARK(II)V#BinaryOp(I,and)#10
net.sf.javabdd.JFactory.SETLEVELANDMARK(II)V#ArrayStore(I)#11
net.sf.javabdd.JFactory.SETLEVELANDMARK(II)V#LocalLoad(Ljava/lang/Object;,0)#12
net.sf.javabdd.JFactory.SETLEVELANDMARK(II)V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodes)#13
net.sf.javabdd.JFactory.SETLEVELANDMARK(II)V#LocalLoad(I,1)#14
net.sf.javabdd.JFactory.SETLEVELANDMARK(II)V#Constant(I,5)#15
net.sf.javabdd.JFactory.SETLEVELANDMARK(II)V#BinaryOp(I,mul)#16
net.sf.javabdd.JFactory.SETLEVELANDMARK(II)V#Constant(I,0)#17
net.sf.javabdd.JFactory.SETLEVELANDMARK(II)V#BinaryOp(I,add)#18
net.sf.javabdd.JFactory.SETLEVELANDMARK(II)V#Dup(2,0)#19
net.sf.javabdd.JFactory.SETLEVELANDMARK(II)V#ArrayLoad(I)#20
net.sf.javabdd.JFactory.SETLEVELANDMARK(II)V#LocalLoad(I,2)#21
net.sf.javabdd.JFactory.SETLEVELANDMARK(II)V#BinaryOp(I,or)#22
net.sf.javabdd.JFactory.SETLEVELANDMARK(II)V#ArrayStore(I)#23
net.sf.javabdd.JFactory.SETLEVELANDMARK(II)V#Return(V)#24
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#127
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(I,5)#128
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(I,2)#129
net.sf.javabdd.JFactory.bdd_makenode(III)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETLOW,(II)V)#130
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#131
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(I,5)#132
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(I,3)#133
net.sf.javabdd.JFactory.bdd_makenode(III)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETHIGH,(II)V)#134
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#135
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(I,5)#136
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#137
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(I,4)#138
net.sf.javabdd.JFactory.bdd_makenode(III)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HASH,(I)I)#139
net.sf.javabdd.JFactory.bdd_makenode(III)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETNEXT,(II)V)#140
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#141
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(I,4)#142
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(I,5)#143
net.sf.javabdd.JFactory.bdd_makenode(III)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETHASH,(II)V)#144
net.sf.javabdd.JFactory.SETHASH(II)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.SETHASH(II)V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodes)#1
net.sf.javabdd.JFactory.SETHASH(II)V#LocalLoad(I,1)#2
net.sf.javabdd.JFactory.SETHASH(II)V#Constant(I,5)#3
net.sf.javabdd.JFactory.SETHASH(II)V#BinaryOp(I,mul)#4
net.sf.javabdd.JFactory.SETHASH(II)V#Constant(I,3)#5
net.sf.javabdd.JFactory.SETHASH(II)V#BinaryOp(I,add)#6
net.sf.javabdd.JFactory.SETHASH(II)V#LocalLoad(I,2)#7
net.sf.javabdd.JFactory.SETHASH(II)V#ArrayStore(I)#8
net.sf.javabdd.JFactory.SETHASH(II)V#Return(V)#9
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(I,5)#145
net.sf.javabdd.JFactory.bdd_makenode(III)I#Return(I)#146
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,PUSHREF,(I)I)#141
net.sf.javabdd.JFactory.PUSHREF(I)I#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.PUSHREF(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddrefstack)#1
net.sf.javabdd.JFactory.PUSHREF(I)I#LocalLoad(Ljava/lang/Object;,0)#2
net.sf.javabdd.JFactory.PUSHREF(I)I#Dup(1,0)#3
net.sf.javabdd.JFactory.PUSHREF(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddrefstacktop)#4
net.sf.javabdd.JFactory.PUSHREF(I)I#Dup(1,1)#5
net.sf.javabdd.JFactory.PUSHREF(I)I#Constant(I,1)#6
net.sf.javabdd.JFactory.PUSHREF(I)I#BinaryOp(I,add)#7
net.sf.javabdd.JFactory.PUSHREF(I)I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddrefstacktop)#8
net.sf.javabdd.JFactory.PUSHREF(I)I#LocalLoad(I,1)#9
net.sf.javabdd.JFactory.PUSHREF(I)I#ArrayStore(I)#10
net.sf.javabdd.JFactory.PUSHREF(I)I#LocalLoad(I,1)#11
net.sf.javabdd.JFactory.PUSHREF(I)I#Return(I)#12
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#ArrayStore(I)#142
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#143
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarset)#144
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#145
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#146
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,2)#147
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#BinaryOp(I,mul)#148
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,1)#149
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#BinaryOp(I,add)#150
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#151
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#152
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#153
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,1)#154
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,0)#155
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_makenode,(III)I)#156
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#ArrayStore(I)#157
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#158
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,1)#159
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,POPREF,(I)V)#160
net.sf.javabdd.JFactory.POPREF(I)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.POPREF(I)V#Dup(1,0)#1
net.sf.javabdd.JFactory.POPREF(I)V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddrefstacktop)#2
net.sf.javabdd.JFactory.POPREF(I)V#LocalLoad(I,1)#3
net.sf.javabdd.JFactory.POPREF(I)V#BinaryOp(I,sub)#4
net.sf.javabdd.JFactory.POPREF(I)V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddrefstacktop)#5
net.sf.javabdd.JFactory.POPREF(I)V#Return(V)#6
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#161
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bdderrorcond)#162
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,0)#163
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#ConditionalBranch(I,eq,172)#164
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#172
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#173
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarset)#174
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#175
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#176
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,2)#177
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#BinaryOp(I,mul)#178
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#ArrayLoad(I)#179
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETMAXREF,(I)V)#180
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#181
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#182
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarset)#183
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#184
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#185
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,2)#186
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#BinaryOp(I,mul)#187
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,1)#188
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#BinaryOp(I,add)#189
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#ArrayLoad(I)#190
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETMAXREF,(I)V)#191
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#192
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddlevel2var)#193
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#194
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#195
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#196
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#197
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#ArrayStore(I)#198
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#199
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvar2level)#200
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#201
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#202
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#203
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#204
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#ArrayStore(I)#205
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#206
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Dup(1,0)#207
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#208
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,1)#209
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#BinaryOp(I,add)#210
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#211
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Goto(124)#212
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#213
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,0)#214
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(I,1)#215
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETLEVELANDMARK,(II)V)#216
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#217
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,1)#218
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(I,1)#219
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETLEVELANDMARK,(II)V)#220
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#221
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvar2level)#222
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(I,1)#223
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(I,1)#224
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#ArrayStore(I)#225
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#226
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddlevel2var)#227
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(I,1)#228
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(I,1)#229
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#ArrayStore(I)#230
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#231
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(I,3)#232
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#233
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#234
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_pairs_resize,(II)I)#235
net.sf.javabdd.JFactory.bdd_pairs_resize(II)I#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.bdd_pairs_resize(II)I#Get(Lnet/sf/javabdd/JFactory$bddPair;,NONSTATIC,Lnet/sf/javabdd/JFactory;,pairs)#1
net.sf.javabdd.JFactory.bdd_pairs_resize(II)I#LocalStore(Ljava/lang/Object;,3)#2
net.sf.javabdd.JFactory.bdd_pairs_resize(II)I#LocalLoad(Ljava/lang/Object;,3)#3
net.sf.javabdd.JFactory.bdd_pairs_resize(II)I#Constant(L;,null)#4
net.sf.javabdd.JFactory.bdd_pairs_resize(II)I#ConditionalBranch(Ljava/lang/Object;,eq,43)#5
net.sf.javabdd.JFactory.bdd_pairs_resize(II)I#Constant(I,0)#43
net.sf.javabdd.JFactory.bdd_pairs_resize(II)I#Return(I)#44
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Pop(1)#236
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#237
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_operator_varresize,()V)#238
net.sf.javabdd.JFactory.bdd_operator_varresize()V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.bdd_operator_varresize()V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,quantvarset)#1
net.sf.javabdd.JFactory.bdd_operator_varresize()V#Constant(L;,null)#2
net.sf.javabdd.JFactory.bdd_operator_varresize()V#ConditionalBranch(Ljava/lang/Object;,eq,7)#3
net.sf.javabdd.JFactory.bdd_operator_varresize()V#LocalLoad(Ljava/lang/Object;,0)#7
net.sf.javabdd.JFactory.bdd_operator_varresize()V#LocalLoad(Ljava/lang/Object;,0)#8
net.sf.javabdd.JFactory.bdd_operator_varresize()V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#9
net.sf.javabdd.JFactory.bdd_operator_varresize()V#New([I,1)#10
net.sf.javabdd.JFactory.bdd_operator_varresize()V#Put([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,quantvarset)#11
net.sf.javabdd.JFactory.bdd_operator_varresize()V#LocalLoad(Ljava/lang/Object;,0)#12
net.sf.javabdd.JFactory.bdd_operator_varresize()V#Constant(I,0)#13
net.sf.javabdd.JFactory.bdd_operator_varresize()V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,quantvarsetID)#14
net.sf.javabdd.JFactory.bdd_operator_varresize()V#LocalLoad(Ljava/lang/Object;,0)#15
net.sf.javabdd.JFactory.bdd_operator_varresize()V#LocalLoad(Ljava/lang/Object;,0)#16
net.sf.javabdd.JFactory.bdd_operator_varresize()V#Get(Lnet/sf/javabdd/JFactory$BddCache;,NONSTATIC,Lnet/sf/javabdd/JFactory;,countcache)#17
net.sf.javabdd.JFactory.bdd_operator_varresize()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,BddCache_reset,(Lnet/sf/javabdd/JFactory$BddCache;)V)#18
net.sf.javabdd.JFactory.BddCache_reset(Lnet/sf/javabdd/JFactory$BddCache;)V#LocalLoad(Ljava/lang/Object;,1)#0
net.sf.javabdd.JFactory.BddCache_reset(Lnet/sf/javabdd/JFactory$BddCache;)V#Constant(L;,null)#1
net.sf.javabdd.JFactory.BddCache_reset(Lnet/sf/javabdd/JFactory$BddCache;)V#ConditionalBranch(Ljava/lang/Object;,ne,4)#2
net.sf.javabdd.JFactory.BddCache_reset(Lnet/sf/javabdd/JFactory$BddCache;)V#Return(V)#3
net.sf.javabdd.JFactory.bdd_operator_varresize()V#Return(V)#19
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#239
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_enable_reorder,()V)#240
net.sf.javabdd.JFactory.bdd_enable_reorder()V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.bdd_enable_reorder()V#Constant(I,0)#1
net.sf.javabdd.JFactory.bdd_enable_reorder()V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,reorderdisabled)#2
net.sf.javabdd.JFactory.bdd_enable_reorder()V#Return(V)#3
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,0)#241
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Return(I)#242
net.sf.javabdd.JFactory.setVarNum(I)I#Return(I)#3
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Pop(1)#105
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Constant(I,0)#106
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalStore(I,6)#107
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Constant(I,1)#108
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalStore(I,7)#109
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,7)#110
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Constant(I,0)#111
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#ConditionalBranch(I,eq,157)#112
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Constant(I,0)#113
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalStore(I,7)#114
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Constant(I,0)#115
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalStore(I,5)#116
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,5)#117
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,8)#118
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#ConditionalBranch(I,ge,152)#119
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,6)#120
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#121
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Get([Lnet/sf/javabdd/BDDDomain;,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,domain)#122
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,5)#123
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#124
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Get(I,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,fdvarnum)#125
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#BinaryOp(I,add)#126
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#ArrayLoad(Ljava/lang/Object;)#127
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDDomain;,varNum,()I)#128
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#ConditionalBranch(I,ge,147)#129
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Constant(I,1)#130
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalStore(I,7)#131
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#132
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Get([Lnet/sf/javabdd/BDDDomain;,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,domain)#133
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,5)#134
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#135
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Get(I,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,fdvarnum)#136
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#BinaryOp(I,add)#137
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#ArrayLoad(Ljava/lang/Object;)#138
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Get([I,NONSTATIC,Lnet/sf/javabdd/BDDDomain;,ivar)#139
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,6)#140
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,3)#141
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,3)#142
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Constant(I,1)#143
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#BinaryOp(I,add)#144
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalStore(I,3)#145
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#ArrayStore(I)#146
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,5)#147
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Constant(I,1)#148
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#BinaryOp(I,add)#149
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalStore(I,5)#150
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Goto(117)#151
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,6)#152
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Constant(I,1)#153
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#BinaryOp(I,add)#154
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalStore(I,6)#155
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Goto(110)#156
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Constant(I,0)#157
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalStore(I,5)#158
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,5)#159
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,8)#160
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#ConditionalBranch(I,ge,185)#161
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#162
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Get([Lnet/sf/javabdd/BDDDomain;,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,domain)#163
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,5)#164
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#165
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Get(I,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,fdvarnum)#166
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#BinaryOp(I,add)#167
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#ArrayLoad(Ljava/lang/Object;)#168
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#169
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#170
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Get([Lnet/sf/javabdd/BDDDomain;,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,domain)#171
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,5)#172
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#173
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Get(I,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,fdvarnum)#174
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#BinaryOp(I,add)#175
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#ArrayLoad(Ljava/lang/Object;)#176
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Get([I,NONSTATIC,Lnet/sf/javabdd/BDDDomain;,ivar)#177
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDFactory;,makeSet,([I)Lnet/sf/javabdd/BDD;)#178
net.sf.javabdd.BDDFactory.makeSet([I)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.BDDFactory.makeSet([I)Lnet/sf/javabdd/BDD;#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDFactory;,one,()Lnet/sf/javabdd/BDD;)#1
net.sf.javabdd.JFactory.one()Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.one()Lnet/sf/javabdd/BDD;#Constant(I,1)#1
net.sf.javabdd.JFactory.one()Lnet/sf/javabdd/BDD;#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,makeBDD,(I)Lnet/sf/javabdd/JFactory$bdd;)#2
net.sf.javabdd.JFactory.makeBDD(I)Lnet/sf/javabdd/JFactory$bdd;#New(Lnet/sf/javabdd/JFactory$bdd;,0)#0
net.sf.javabdd.JFactory.makeBDD(I)Lnet/sf/javabdd/JFactory$bdd;#Dup(1,0)#1
net.sf.javabdd.JFactory.makeBDD(I)Lnet/sf/javabdd/JFactory$bdd;#LocalLoad(Ljava/lang/Object;,0)#2
net.sf.javabdd.JFactory.makeBDD(I)Lnet/sf/javabdd/JFactory$bdd;#LocalLoad(I,1)#3
net.sf.javabdd.JFactory.makeBDD(I)Lnet/sf/javabdd/JFactory$bdd;#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory$bdd;,<init>,(Lnet/sf/javabdd/JFactory;I)V)#4
net.sf.javabdd.JFactory$bdd.<init>(Lnet/sf/javabdd/JFactory;I)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory$bdd.<init>(Lnet/sf/javabdd/JFactory;I)V#LocalLoad(Ljava/lang/Object;,1)#1
net.sf.javabdd.JFactory$bdd.<init>(Lnet/sf/javabdd/JFactory;I)V#Put(Lnet/sf/javabdd/JFactory;,NONSTATIC,Lnet/sf/javabdd/JFactory$bdd;,this$0)#2
net.sf.javabdd.JFactory$bdd.<init>(Lnet/sf/javabdd/JFactory;I)V#LocalLoad(Ljava/lang/Object;,0)#3
net.sf.javabdd.JFactory$bdd.<init>(Lnet/sf/javabdd/JFactory;I)V#Invoke(SPECIAL,Lnet/sf/javabdd/BDD;,<init>,()V)#4
net.sf.javabdd.BDD.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.BDD.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
net.sf.javabdd.BDD.<init>()V#Return(V)#2
net.sf.javabdd.JFactory$bdd.<init>(Lnet/sf/javabdd/JFactory;I)V#LocalLoad(Ljava/lang/Object;,0)#5
net.sf.javabdd.JFactory$bdd.<init>(Lnet/sf/javabdd/JFactory;I)V#LocalLoad(I,2)#6
net.sf.javabdd.JFactory$bdd.<init>(Lnet/sf/javabdd/JFactory;I)V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$bdd;,_index)#7
net.sf.javabdd.JFactory$bdd.<init>(Lnet/sf/javabdd/JFactory;I)V#LocalLoad(Ljava/lang/Object;,1)#8
net.sf.javabdd.JFactory$bdd.<init>(Lnet/sf/javabdd/JFactory;I)V#LocalLoad(Ljava/lang/Object;,0)#9
net.sf.javabdd.JFactory$bdd.<init>(Lnet/sf/javabdd/JFactory;I)V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$bdd;,_index)#10
net.sf.javabdd.JFactory$bdd.<init>(Lnet/sf/javabdd/JFactory;I)V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_addref,(I)I)#11
net.sf.javabdd.JFactory.bdd_addref(I)I#LocalLoad(I,1)#0
net.sf.javabdd.JFactory.bdd_addref(I)I#Constant(I,-1)#1
net.sf.javabdd.JFactory.bdd_addref(I)I#ConditionalBranch(I,ne,6)#2
net.sf.javabdd.JFactory.bdd_addref(I)I#LocalLoad(I,1)#6
net.sf.javabdd.JFactory.bdd_addref(I)I#Constant(I,2)#7
net.sf.javabdd.JFactory.bdd_addref(I)I#ConditionalBranch(I,lt,13)#8
net.sf.javabdd.JFactory.bdd_addref(I)I#LocalLoad(I,1)#13
net.sf.javabdd.JFactory.bdd_addref(I)I#Return(I)#14
net.sf.javabdd.JFactory$bdd.<init>(Lnet/sf/javabdd/JFactory;I)V#Pop(1)#12
net.sf.javabdd.JFactory$bdd.<init>(Lnet/sf/javabdd/JFactory;I)V#Return(V)#13
net.sf.javabdd.JFactory.makeBDD(I)Lnet/sf/javabdd/JFactory$bdd;#LocalStore(Ljava/lang/Object;,2)#5
net.sf.javabdd.JFactory.makeBDD(I)Lnet/sf/javabdd/JFactory$bdd;#LocalLoad(Ljava/lang/Object;,2)#6
net.sf.javabdd.JFactory.makeBDD(I)Lnet/sf/javabdd/JFactory$bdd;#Return(Ljava/lang/Object;)#7
net.sf.javabdd.JFactory.one()Lnet/sf/javabdd/BDD;#Return(Ljava/lang/Object;)#3
net.sf.javabdd.BDDFactory.makeSet([I)Lnet/sf/javabdd/BDD;#LocalStore(Ljava/lang/Object;,2)#2
net.sf.javabdd.BDDFactory.makeSet([I)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,1)#3
net.sf.javabdd.BDDFactory.makeSet([I)Lnet/sf/javabdd/BDD;#ArrayLength()#4
net.sf.javabdd.BDDFactory.makeSet([I)Lnet/sf/javabdd/BDD;#LocalStore(I,3)#5
net.sf.javabdd.BDDFactory.makeSet([I)Lnet/sf/javabdd/BDD;#LocalLoad(I,3)#6
net.sf.javabdd.BDDFactory.makeSet([I)Lnet/sf/javabdd/BDD;#Constant(I,1)#7
net.sf.javabdd.BDDFactory.makeSet([I)Lnet/sf/javabdd/BDD;#BinaryOp(I,sub)#8
net.sf.javabdd.BDDFactory.makeSet([I)Lnet/sf/javabdd/BDD;#LocalStore(I,4)#9
net.sf.javabdd.BDDFactory.makeSet([I)Lnet/sf/javabdd/BDD;#LocalLoad(I,4)#10
net.sf.javabdd.BDDFactory.makeSet([I)Lnet/sf/javabdd/BDD;#Constant(I,0)#11
net.sf.javabdd.BDDFactory.makeSet([I)Lnet/sf/javabdd/BDD;#ConditionalBranch(I,lt,26)#12
net.sf.javabdd.BDDFactory.makeSet([I)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,2)#13
net.sf.javabdd.BDDFactory.makeSet([I)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,0)#14
net.sf.javabdd.BDDFactory.makeSet([I)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,1)#15
net.sf.javabdd.BDDFactory.makeSet([I)Lnet/sf/javabdd/BDD;#LocalLoad(I,4)#16
net.sf.javabdd.BDDFactory.makeSet([I)Lnet/sf/javabdd/BDD;#ArrayLoad(I)#17
net.sf.javabdd.BDDFactory.makeSet([I)Lnet/sf/javabdd/BDD;#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDFactory;,ithVar,(I)Lnet/sf/javabdd/BDD;)#18
net.sf.javabdd.JFactory.ithVar(I)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.ithVar(I)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,0)#1
net.sf.javabdd.JFactory.ithVar(I)Lnet/sf/javabdd/BDD;#LocalLoad(I,1)#2
net.sf.javabdd.JFactory.ithVar(I)Lnet/sf/javabdd/BDD;#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_ithvar,(I)I)#3
net.sf.javabdd.JFactory.bdd_ithvar(I)I#LocalLoad(I,1)#0
net.sf.javabdd.JFactory.bdd_ithvar(I)I#Constant(I,0)#1
net.sf.javabdd.JFactory.bdd_ithvar(I)I#ConditionalBranch(I,lt,7)#2
net.sf.javabdd.JFactory.bdd_ithvar(I)I#LocalLoad(I,1)#3
net.sf.javabdd.JFactory.bdd_ithvar(I)I#LocalLoad(Ljava/lang/Object;,0)#4
net.sf.javabdd.JFactory.bdd_ithvar(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#5
net.sf.javabdd.JFactory.bdd_ithvar(I)I#ConditionalBranch(I,lt,12)#6
net.sf.javabdd.JFactory.bdd_ithvar(I)I#LocalLoad(Ljava/lang/Object;,0)#12
net.sf.javabdd.JFactory.bdd_ithvar(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarset)#13
net.sf.javabdd.JFactory.bdd_ithvar(I)I#LocalLoad(I,1)#14
net.sf.javabdd.JFactory.bdd_ithvar(I)I#Constant(I,2)#15
net.sf.javabdd.JFactory.bdd_ithvar(I)I#BinaryOp(I,mul)#16
net.sf.javabdd.JFactory.bdd_ithvar(I)I#ArrayLoad(I)#17
net.sf.javabdd.JFactory.bdd_ithvar(I)I#Return(I)#18
net.sf.javabdd.JFactory.ithVar(I)Lnet/sf/javabdd/BDD;#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,makeBDD,(I)Lnet/sf/javabdd/JFactory$bdd;)#4
net.sf.javabdd.JFactory.bdd_addref(I)I#LocalLoad(Ljava/lang/Object;,0)#9
net.sf.javabdd.JFactory.bdd_addref(I)I#Get(Z,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddrunning)#10
net.sf.javabdd.JFactory.bdd_addref(I)I#Constant(I,0)#11
net.sf.javabdd.JFactory.bdd_addref(I)I#ConditionalBranch(I,ne,15)#12
net.sf.javabdd.JFactory.bdd_addref(I)I#LocalLoad(I,1)#15
net.sf.javabdd.JFactory.bdd_addref(I)I#LocalLoad(Ljava/lang/Object;,0)#16
net.sf.javabdd.JFactory.bdd_addref(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodesize)#17
net.sf.javabdd.JFactory.bdd_addref(I)I#ConditionalBranch(I,lt,22)#18
net.sf.javabdd.JFactory.bdd_addref(I)I#LocalLoad(Ljava/lang/Object;,0)#22
net.sf.javabdd.JFactory.bdd_addref(I)I#LocalLoad(I,1)#23
net.sf.javabdd.JFactory.bdd_addref(I)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LOW,(I)I)#24
net.sf.javabdd.JFactory.LOW(I)I#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.LOW(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodes)#1
net.sf.javabdd.JFactory.LOW(I)I#LocalLoad(I,1)#2
net.sf.javabdd.JFactory.LOW(I)I#Constant(I,5)#3
net.sf.javabdd.JFactory.LOW(I)I#BinaryOp(I,mul)#4
net.sf.javabdd.JFactory.LOW(I)I#Constant(I,1)#5
net.sf.javabdd.JFactory.LOW(I)I#BinaryOp(I,add)#6
net.sf.javabdd.JFactory.LOW(I)I#ArrayLoad(I)#7
net.sf.javabdd.JFactory.LOW(I)I#Return(I)#8
net.sf.javabdd.JFactory.bdd_addref(I)I#Constant(I,-1)#25
net.sf.javabdd.JFactory.bdd_addref(I)I#ConditionalBranch(I,ne,30)#26
net.sf.javabdd.JFactory.bdd_addref(I)I#LocalLoad(Ljava/lang/Object;,0)#30
net.sf.javabdd.JFactory.bdd_addref(I)I#LocalLoad(I,1)#31
net.sf.javabdd.JFactory.bdd_addref(I)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,INCREF,(I)V)#32
net.sf.javabdd.JFactory.INCREF(I)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.INCREF(I)V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodes)#1
net.sf.javabdd.JFactory.INCREF(I)V#LocalLoad(I,1)#2
net.sf.javabdd.JFactory.INCREF(I)V#Constant(I,5)#3
net.sf.javabdd.JFactory.INCREF(I)V#BinaryOp(I,mul)#4
net.sf.javabdd.JFactory.INCREF(I)V#Constant(I,0)#5
net.sf.javabdd.JFactory.INCREF(I)V#BinaryOp(I,add)#6
net.sf.javabdd.JFactory.INCREF(I)V#ArrayLoad(I)#7
net.sf.javabdd.JFactory.INCREF(I)V#Constant(I,-4194304)#8
net.sf.javabdd.JFactory.INCREF(I)V#BinaryOp(I,and)#9
net.sf.javabdd.JFactory.INCREF(I)V#Constant(I,-4194304)#10
net.sf.javabdd.JFactory.INCREF(I)V#ConditionalBranch(I,eq,24)#11
net.sf.javabdd.JFactory.INCREF(I)V#Return(V)#24
net.sf.javabdd.JFactory.bdd_addref(I)I#LocalLoad(I,1)#33
net.sf.javabdd.JFactory.bdd_addref(I)I#Return(I)#34
net.sf.javabdd.JFactory.ithVar(I)Lnet/sf/javabdd/BDD;#Return(Ljava/lang/Object;)#5
net.sf.javabdd.BDDFactory.makeSet([I)Lnet/sf/javabdd/BDD;#Invoke(VIRTUAL,Lnet/sf/javabdd/BDD;,andWith,(Lnet/sf/javabdd/BDD;)Lnet/sf/javabdd/BDD;)#19
net.sf.javabdd.BDD.andWith(Lnet/sf/javabdd/BDD;)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.BDD.andWith(Lnet/sf/javabdd/BDD;)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,1)#1
net.sf.javabdd.BDD.andWith(Lnet/sf/javabdd/BDD;)Lnet/sf/javabdd/BDD;#Get(Lnet/sf/javabdd/BDDFactory$BDDOp;,STATIC,Lnet/sf/javabdd/BDDFactory;,and)#2
net.sf.javabdd.BDD.andWith(Lnet/sf/javabdd/BDD;)Lnet/sf/javabdd/BDD;#Invoke(VIRTUAL,Lnet/sf/javabdd/BDD;,applyWith,(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;)#3
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$bdd;,_index)#1
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#LocalStore(I,3)#2
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,1)#3
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#CheckCast(Lnet/sf/javabdd/JFactory$bdd;)#4
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$bdd;,_index)#5
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#LocalStore(I,4)#6
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,2)#7
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#Get(I,NONSTATIC,Lnet/sf/javabdd/BDDFactory$BDDOp;,id)#8
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#LocalStore(I,5)#9
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,0)#10
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#Get(Lnet/sf/javabdd/JFactory;,NONSTATIC,Lnet/sf/javabdd/JFactory$bdd;,this$0)#11
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#LocalLoad(I,3)#12
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#LocalLoad(I,4)#13
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#LocalLoad(I,5)#14
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_apply,(III)I)#15
net.sf.javabdd.JFactory.bdd_apply(III)I#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.bdd_apply(III)I#Constant(I,1)#1
net.sf.javabdd.JFactory.bdd_apply(III)I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,firstReorder)#2
net.sf.javabdd.JFactory.bdd_apply(III)I#LocalLoad(Ljava/lang/Object;,0)#3
net.sf.javabdd.JFactory.bdd_apply(III)I#LocalLoad(I,1)#4
net.sf.javabdd.JFactory.bdd_apply(III)I#Constant(I,0)#5
net.sf.javabdd.JFactory.bdd_apply(III)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,CHECKa,(II)V)#6
net.sf.javabdd.JFactory.CHECKa(II)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.CHECKa(II)V#LocalLoad(I,1)#1
net.sf.javabdd.JFactory.CHECKa(II)V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,CHECK,(I)V)#2
net.sf.javabdd.JFactory.CHECK(I)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.CHECK(I)V#Get(Z,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddrunning)#1
net.sf.javabdd.JFactory.CHECK(I)V#Constant(I,0)#2
net.sf.javabdd.JFactory.CHECK(I)V#ConditionalBranch(I,ne,8)#3
net.sf.javabdd.JFactory.CHECK(I)V#LocalLoad(I,1)#8
net.sf.javabdd.JFactory.CHECK(I)V#Constant(I,0)#9
net.sf.javabdd.JFactory.CHECK(I)V#ConditionalBranch(I,lt,15)#10
net.sf.javabdd.JFactory.CHECK(I)V#LocalLoad(I,1)#11
net.sf.javabdd.JFactory.CHECK(I)V#LocalLoad(Ljava/lang/Object;,0)#12
net.sf.javabdd.JFactory.CHECK(I)V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodesize)#13
net.sf.javabdd.JFactory.CHECK(I)V#ConditionalBranch(I,lt,19)#14
net.sf.javabdd.JFactory.CHECK(I)V#LocalLoad(I,1)#19
net.sf.javabdd.JFactory.CHECK(I)V#Constant(I,2)#20
net.sf.javabdd.JFactory.CHECK(I)V#ConditionalBranch(I,lt,30)#21
net.sf.javabdd.JFactory.CHECK(I)V#Return(V)#30
net.sf.javabdd.JFactory.CHECKa(II)V#Return(V)#3
net.sf.javabdd.JFactory.bdd_apply(III)I#LocalLoad(Ljava/lang/Object;,0)#7
net.sf.javabdd.JFactory.bdd_apply(III)I#LocalLoad(I,2)#8
net.sf.javabdd.JFactory.bdd_apply(III)I#Constant(I,0)#9
net.sf.javabdd.JFactory.bdd_apply(III)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,CHECKa,(II)V)#10
net.sf.javabdd.JFactory.CHECK(I)V#LocalLoad(Ljava/lang/Object;,0)#22
net.sf.javabdd.JFactory.CHECK(I)V#LocalLoad(I,1)#23
net.sf.javabdd.JFactory.CHECK(I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LOW,(I)I)#24
net.sf.javabdd.JFactory.CHECK(I)V#Constant(I,-1)#25
net.sf.javabdd.JFactory.CHECK(I)V#ConditionalBranch(I,ne,30)#26
net.sf.javabdd.JFactory.bdd_apply(III)I#LocalLoad(I,3)#11
net.sf.javabdd.JFactory.bdd_apply(III)I#Constant(I,0)#12
net.sf.javabdd.JFactory.bdd_apply(III)I#ConditionalBranch(I,lt,17)#13
net.sf.javabdd.JFactory.bdd_apply(III)I#LocalLoad(I,3)#14
net.sf.javabdd.JFactory.bdd_apply(III)I#Constant(I,9)#15
net.sf.javabdd.JFactory.bdd_apply(III)I#ConditionalBranch(I,le,22)#16
net.sf.javabdd.JFactory.bdd_apply(III)I#LocalLoad(Ljava/lang/Object;,0)#22
net.sf.javabdd.JFactory.bdd_apply(III)I#Get(Lnet/sf/javabdd/JFactory$BddCache;,NONSTATIC,Lnet/sf/javabdd/JFactory;,applycache)#23
net.sf.javabdd.JFactory.bdd_apply(III)I#Constant(L;,null)#24
net.sf.javabdd.JFactory.bdd_apply(III)I#ConditionalBranch(Ljava/lang/Object;,ne,32)#25
net.sf.javabdd.JFactory.bdd_apply(III)I#LocalLoad(Ljava/lang/Object;,0)#26
net.sf.javabdd.JFactory.bdd_apply(III)I#LocalLoad(Ljava/lang/Object;,0)#27
net.sf.javabdd.JFactory.bdd_apply(III)I#LocalLoad(Ljava/lang/Object;,0)#28
net.sf.javabdd.JFactory.bdd_apply(III)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,cachesize)#29
net.sf.javabdd.JFactory.bdd_apply(III)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,BddCacheI_init,(I)Lnet/sf/javabdd/JFactory$BddCache;)#30
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalLoad(I,1)#1
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_prime_gte,(I)I)#2
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalStore(I,1)#3
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#New(Lnet/sf/javabdd/JFactory$BddCache;,0)#4
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Dup(1,0)#5
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Constant(L;,null)#6
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory$BddCache;,<init>,(Lnet/sf/javabdd/JFactory$1;)V)#7
net.sf.javabdd.JFactory$BddCache.<init>(Lnet/sf/javabdd/JFactory$1;)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory$BddCache.<init>(Lnet/sf/javabdd/JFactory$1;)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory$BddCache;,<init>,()V)#1
net.sf.javabdd.JFactory$BddCache.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory$BddCache.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
net.sf.javabdd.JFactory$BddCache.<init>()V#Return(V)#2
net.sf.javabdd.JFactory$BddCache.<init>(Lnet/sf/javabdd/JFactory$1;)V#Return(V)#2
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalStore(Ljava/lang/Object;,3)#8
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalLoad(Ljava/lang/Object;,3)#9
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalLoad(I,1)#10
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#New([Lnet/sf/javabdd/JFactory$BddCacheDataI;,1)#11
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Put([Lnet/sf/javabdd/JFactory$BddCacheData;,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCache;,table)#12
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Constant(I,0)#13
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalStore(I,2)#14
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalLoad(I,2)#15
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalLoad(I,1)#16
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#ConditionalBranch(I,ge,37)#17
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalLoad(Ljava/lang/Object;,3)#18
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Get([Lnet/sf/javabdd/JFactory$BddCacheData;,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCache;,table)#19
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalLoad(I,2)#20
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#New(Lnet/sf/javabdd/JFactory$BddCacheDataI;,0)#21
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Dup(1,0)#22
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Constant(L;,null)#23
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory$BddCacheDataI;,<init>,(Lnet/sf/javabdd/JFactory$1;)V)#24
net.sf.javabdd.JFactory$BddCacheDataI.<init>(Lnet/sf/javabdd/JFactory$1;)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory$BddCacheDataI.<init>(Lnet/sf/javabdd/JFactory$1;)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory$BddCacheDataI;,<init>,()V)#1
net.sf.javabdd.JFactory$BddCacheDataI.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory$BddCacheDataI.<init>()V#Constant(L;,null)#1
net.sf.javabdd.JFactory$BddCacheDataI.<init>()V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory$BddCacheData;,<init>,(Lnet/sf/javabdd/JFactory$1;)V)#2
net.sf.javabdd.JFactory$BddCacheData.<init>(Lnet/sf/javabdd/JFactory$1;)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory$BddCacheData.<init>(Lnet/sf/javabdd/JFactory$1;)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory$BddCacheData;,<init>,()V)#1
net.sf.javabdd.JFactory$BddCacheData.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory$BddCacheData.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
net.sf.javabdd.JFactory$BddCacheData.<init>()V#Return(V)#2
net.sf.javabdd.JFactory$BddCacheData.<init>(Lnet/sf/javabdd/JFactory$1;)V#Return(V)#2
net.sf.javabdd.JFactory$BddCacheDataI.<init>()V#Return(V)#3
net.sf.javabdd.JFactory$BddCacheDataI.<init>(Lnet/sf/javabdd/JFactory$1;)V#Return(V)#2
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#ArrayStore(Ljava/lang/Object;)#25
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalLoad(Ljava/lang/Object;,3)#26
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Get([Lnet/sf/javabdd/JFactory$BddCacheData;,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCache;,table)#27
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalLoad(I,2)#28
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#ArrayLoad(Ljava/lang/Object;)#29
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Constant(I,-1)#30
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCacheData;,a)#31
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalLoad(I,2)#32
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Constant(I,1)#33
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#BinaryOp(I,add)#34
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalStore(I,2)#35
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Goto(15)#36
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalLoad(Ljava/lang/Object;,3)#37
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalLoad(I,1)#38
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCache;,tablesize)#39
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalLoad(Ljava/lang/Object;,3)#40
net.sf.javabdd.JFactory.BddCacheI_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Return(Ljava/lang/Object;)#41
net.sf.javabdd.JFactory.bdd_apply(III)I#Put(Lnet/sf/javabdd/JFactory$BddCache;,NONSTATIC,Lnet/sf/javabdd/JFactory;,applycache)#31
net.sf.javabdd.JFactory.bdd_apply(III)I#LocalLoad(Ljava/lang/Object;,0)#32
net.sf.javabdd.JFactory.bdd_apply(III)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,INITREF,()V)#33
net.sf.javabdd.JFactory.INITREF()V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.INITREF()V#Constant(I,0)#1
net.sf.javabdd.JFactory.INITREF()V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddrefstacktop)#2
net.sf.javabdd.JFactory.INITREF()V#Return(V)#3
net.sf.javabdd.JFactory.bdd_apply(III)I#LocalLoad(Ljava/lang/Object;,0)#34
net.sf.javabdd.JFactory.bdd_apply(III)I#LocalLoad(I,3)#35
net.sf.javabdd.JFactory.bdd_apply(III)I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,applyop)#36
net.sf.javabdd.JFactory.bdd_apply(III)I#LocalLoad(Ljava/lang/Object;,0)#37
net.sf.javabdd.JFactory.bdd_apply(III)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,firstReorder)#38
net.sf.javabdd.JFactory.bdd_apply(III)I#Constant(I,0)#39
net.sf.javabdd.JFactory.bdd_apply(III)I#ConditionalBranch(I,ne,43)#40
net.sf.javabdd.JFactory.bdd_apply(III)I#LocalLoad(I,3)#43
net.sf.javabdd.JFactory.bdd_apply(III)I#Switch(57,0,45,2,51)#44
net.sf.javabdd.JFactory.bdd_apply(III)I#LocalLoad(Ljava/lang/Object;,0)#45
net.sf.javabdd.JFactory.bdd_apply(III)I#LocalLoad(I,1)#46
net.sf.javabdd.JFactory.bdd_apply(III)I#LocalLoad(I,2)#47
net.sf.javabdd.JFactory.bdd_apply(III)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,and_rec,(II)I)#48
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(I,1)#0
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(I,2)#1
net.sf.javabdd.JFactory.and_rec(II)I#ConditionalBranch(I,ne,5)#2
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(I,1)#5
net.sf.javabdd.JFactory.and_rec(II)I#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,ISZERO,(I)Z)#6
net.sf.javabdd.JFactory.ISZERO(I)Z#LocalLoad(I,0)#0
net.sf.javabdd.JFactory.ISZERO(I)Z#Constant(I,0)#1
net.sf.javabdd.JFactory.ISZERO(I)Z#ConditionalBranch(I,ne,5)#2
net.sf.javabdd.JFactory.ISZERO(I)Z#Constant(I,0)#5
net.sf.javabdd.JFactory.ISZERO(I)Z#Return(I)#6
net.sf.javabdd.JFactory.and_rec(II)I#Constant(I,0)#7
net.sf.javabdd.JFactory.and_rec(II)I#ConditionalBranch(I,ne,13)#8
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(I,2)#9
net.sf.javabdd.JFactory.and_rec(II)I#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,ISZERO,(I)Z)#10
net.sf.javabdd.JFactory.and_rec(II)I#Constant(I,0)#11
net.sf.javabdd.JFactory.and_rec(II)I#ConditionalBranch(I,eq,15)#12
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(I,1)#15
net.sf.javabdd.JFactory.and_rec(II)I#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,ISONE,(I)Z)#16
net.sf.javabdd.JFactory.ISONE(I)Z#LocalLoad(I,0)#0
net.sf.javabdd.JFactory.ISONE(I)Z#Constant(I,1)#1
net.sf.javabdd.JFactory.ISONE(I)Z#ConditionalBranch(I,ne,5)#2
net.sf.javabdd.JFactory.ISONE(I)Z#Constant(I,1)#3
net.sf.javabdd.JFactory.ISONE(I)Z#Goto(6)#4
net.sf.javabdd.JFactory.ISONE(I)Z#Return(I)#6
net.sf.javabdd.JFactory.and_rec(II)I#Constant(I,0)#17
net.sf.javabdd.JFactory.and_rec(II)I#ConditionalBranch(I,eq,21)#18
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(I,2)#19
net.sf.javabdd.JFactory.and_rec(II)I#Return(I)#20
net.sf.javabdd.JFactory.bdd_apply(III)I#LocalStore(I,4)#49
net.sf.javabdd.JFactory.bdd_apply(III)I#Goto(62)#50
net.sf.javabdd.JFactory.bdd_apply(III)I#LocalLoad(Ljava/lang/Object;,0)#62
net.sf.javabdd.JFactory.bdd_apply(III)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,firstReorder)#63
net.sf.javabdd.JFactory.bdd_apply(III)I#Constant(I,0)#64
net.sf.javabdd.JFactory.bdd_apply(III)I#ConditionalBranch(I,ne,68)#65
net.sf.javabdd.JFactory.bdd_apply(III)I#Goto(85)#68
net.sf.javabdd.JFactory.bdd_apply(III)I#LocalLoad(Ljava/lang/Object;,0)#85
net.sf.javabdd.JFactory.bdd_apply(III)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,checkresize,()V)#86
net.sf.javabdd.JFactory.checkresize()V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.checkresize()V#Get(Z,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddresized)#1
net.sf.javabdd.JFactory.checkresize()V#Constant(I,0)#2
net.sf.javabdd.JFactory.checkresize()V#ConditionalBranch(I,eq,6)#3
net.sf.javabdd.JFactory.checkresize()V#LocalLoad(Ljava/lang/Object;,0)#6
net.sf.javabdd.JFactory.checkresize()V#Constant(I,0)#7
net.sf.javabdd.JFactory.checkresize()V#Put(Z,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddresized)#8
net.sf.javabdd.JFactory.checkresize()V#Return(V)#9
net.sf.javabdd.JFactory.bdd_apply(III)I#LocalLoad(I,4)#87
net.sf.javabdd.JFactory.bdd_apply(III)I#Return(I)#88
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#LocalStore(I,6)#16
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,0)#17
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#Get(Lnet/sf/javabdd/JFactory;,NONSTATIC,Lnet/sf/javabdd/JFactory$bdd;,this$0)#18
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#LocalLoad(I,3)#19
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_delref,(I)I)#20
net.sf.javabdd.JFactory.bdd_delref(I)I#LocalLoad(I,1)#0
net.sf.javabdd.JFactory.bdd_delref(I)I#Constant(I,-1)#1
net.sf.javabdd.JFactory.bdd_delref(I)I#ConditionalBranch(I,ne,6)#2
net.sf.javabdd.JFactory.bdd_delref(I)I#LocalLoad(I,1)#6
net.sf.javabdd.JFactory.bdd_delref(I)I#Constant(I,2)#7
net.sf.javabdd.JFactory.bdd_delref(I)I#ConditionalBranch(I,lt,13)#8
net.sf.javabdd.JFactory.bdd_delref(I)I#LocalLoad(I,1)#13
net.sf.javabdd.JFactory.bdd_delref(I)I#Return(I)#14
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#Pop(1)#21
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,0)#22
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,1)#23
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#ConditionalBranch(Ljava/lang/Object;,eq,27)#24
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,1)#25
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#Invoke(VIRTUAL,Lnet/sf/javabdd/BDD;,free,()V)#26
net.sf.javabdd.JFactory$bdd.free()V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory$bdd.free()V#Get(Lnet/sf/javabdd/JFactory;,NONSTATIC,Lnet/sf/javabdd/JFactory$bdd;,this$0)#1
net.sf.javabdd.JFactory$bdd.free()V#LocalLoad(Ljava/lang/Object;,0)#2
net.sf.javabdd.JFactory$bdd.free()V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$bdd;,_index)#3
net.sf.javabdd.JFactory$bdd.free()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_delref,(I)I)#4
net.sf.javabdd.JFactory.bdd_delref(I)I#LocalLoad(Ljava/lang/Object;,0)#9
net.sf.javabdd.JFactory.bdd_delref(I)I#Get(Z,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddrunning)#10
net.sf.javabdd.JFactory.bdd_delref(I)I#Constant(I,0)#11
net.sf.javabdd.JFactory.bdd_delref(I)I#ConditionalBranch(I,ne,15)#12
net.sf.javabdd.JFactory.bdd_delref(I)I#LocalLoad(I,1)#15
net.sf.javabdd.JFactory.bdd_delref(I)I#LocalLoad(Ljava/lang/Object;,0)#16
net.sf.javabdd.JFactory.bdd_delref(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodesize)#17
net.sf.javabdd.JFactory.bdd_delref(I)I#ConditionalBranch(I,lt,22)#18
net.sf.javabdd.JFactory.bdd_delref(I)I#LocalLoad(Ljava/lang/Object;,0)#22
net.sf.javabdd.JFactory.bdd_delref(I)I#LocalLoad(I,1)#23
net.sf.javabdd.JFactory.bdd_delref(I)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LOW,(I)I)#24
net.sf.javabdd.JFactory.bdd_delref(I)I#Constant(I,-1)#25
net.sf.javabdd.JFactory.bdd_delref(I)I#ConditionalBranch(I,ne,30)#26
net.sf.javabdd.JFactory.bdd_delref(I)I#LocalLoad(Ljava/lang/Object;,0)#30
net.sf.javabdd.JFactory.bdd_delref(I)I#LocalLoad(I,1)#31
net.sf.javabdd.JFactory.bdd_delref(I)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HASREF,(I)Z)#32
net.sf.javabdd.JFactory.HASREF(I)Z#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.HASREF(I)Z#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodes)#1
net.sf.javabdd.JFactory.HASREF(I)Z#LocalLoad(I,1)#2
net.sf.javabdd.JFactory.HASREF(I)Z#Constant(I,5)#3
net.sf.javabdd.JFactory.HASREF(I)Z#BinaryOp(I,mul)#4
net.sf.javabdd.JFactory.HASREF(I)Z#Constant(I,0)#5
net.sf.javabdd.JFactory.HASREF(I)Z#BinaryOp(I,add)#6
net.sf.javabdd.JFactory.HASREF(I)Z#ArrayLoad(I)#7
net.sf.javabdd.JFactory.HASREF(I)Z#Constant(I,-4194304)#8
net.sf.javabdd.JFactory.HASREF(I)Z#BinaryOp(I,and)#9
net.sf.javabdd.JFactory.HASREF(I)Z#Constant(I,0)#10
net.sf.javabdd.JFactory.HASREF(I)Z#ConditionalBranch(I,eq,14)#11
net.sf.javabdd.JFactory.HASREF(I)Z#Constant(I,1)#12
net.sf.javabdd.JFactory.HASREF(I)Z#Goto(15)#13
net.sf.javabdd.JFactory.HASREF(I)Z#LocalStore(I,2)#15
net.sf.javabdd.JFactory.HASREF(I)Z#LocalLoad(I,2)#16
net.sf.javabdd.JFactory.HASREF(I)Z#Return(I)#17
net.sf.javabdd.JFactory.bdd_delref(I)I#Constant(I,0)#33
net.sf.javabdd.JFactory.bdd_delref(I)I#ConditionalBranch(I,ne,38)#34
net.sf.javabdd.JFactory.bdd_delref(I)I#LocalLoad(Ljava/lang/Object;,0)#38
net.sf.javabdd.JFactory.bdd_delref(I)I#LocalLoad(I,1)#39
net.sf.javabdd.JFactory.bdd_delref(I)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,DECREF,(I)V)#40
net.sf.javabdd.JFactory.DECREF(I)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.DECREF(I)V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodes)#1
net.sf.javabdd.JFactory.DECREF(I)V#LocalLoad(I,1)#2
net.sf.javabdd.JFactory.DECREF(I)V#Constant(I,5)#3
net.sf.javabdd.JFactory.DECREF(I)V#BinaryOp(I,mul)#4
net.sf.javabdd.JFactory.DECREF(I)V#Constant(I,0)#5
net.sf.javabdd.JFactory.DECREF(I)V#BinaryOp(I,add)#6
net.sf.javabdd.JFactory.DECREF(I)V#ArrayLoad(I)#7
net.sf.javabdd.JFactory.DECREF(I)V#Constant(I,-4194304)#8
net.sf.javabdd.JFactory.DECREF(I)V#BinaryOp(I,and)#9
net.sf.javabdd.JFactory.DECREF(I)V#LocalStore(I,2)#10
net.sf.javabdd.JFactory.DECREF(I)V#LocalLoad(I,2)#11
net.sf.javabdd.JFactory.DECREF(I)V#Constant(I,-4194304)#12
net.sf.javabdd.JFactory.DECREF(I)V#ConditionalBranch(I,eq,29)#13
net.sf.javabdd.JFactory.DECREF(I)V#Return(V)#29
net.sf.javabdd.JFactory.bdd_delref(I)I#LocalLoad(I,1)#41
net.sf.javabdd.JFactory.bdd_delref(I)I#Return(I)#42
net.sf.javabdd.JFactory$bdd.free()V#Pop(1)#5
net.sf.javabdd.JFactory$bdd.free()V#LocalLoad(Ljava/lang/Object;,0)#6
net.sf.javabdd.JFactory$bdd.free()V#Constant(I,-1)#7
net.sf.javabdd.JFactory$bdd.free()V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$bdd;,_index)#8
net.sf.javabdd.JFactory$bdd.free()V#Return(V)#9
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,0)#27
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#Get(Lnet/sf/javabdd/JFactory;,NONSTATIC,Lnet/sf/javabdd/JFactory$bdd;,this$0)#28
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#LocalLoad(I,6)#29
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_addref,(I)I)#30
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#Pop(1)#31
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,0)#32
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#LocalLoad(I,6)#33
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$bdd;,_index)#34
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,0)#35
net.sf.javabdd.JFactory$bdd.applyWith(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;#Return(Ljava/lang/Object;)#36
net.sf.javabdd.BDD.andWith(Lnet/sf/javabdd/BDD;)Lnet/sf/javabdd/BDD;#Return(Ljava/lang/Object;)#4
net.sf.javabdd.BDDFactory.makeSet([I)Lnet/sf/javabdd/BDD;#Pop(1)#20
net.sf.javabdd.BDDFactory.makeSet([I)Lnet/sf/javabdd/BDD;#LocalLoad(I,4)#21
net.sf.javabdd.BDDFactory.makeSet([I)Lnet/sf/javabdd/BDD;#Constant(I,-1)#22
net.sf.javabdd.BDDFactory.makeSet([I)Lnet/sf/javabdd/BDD;#BinaryOp(I,add)#23
net.sf.javabdd.BDDFactory.makeSet([I)Lnet/sf/javabdd/BDD;#LocalStore(I,4)#24
net.sf.javabdd.BDDFactory.makeSet([I)Lnet/sf/javabdd/BDD;#Goto(10)#25
net.sf.javabdd.JFactory.ISONE(I)Z#Constant(I,0)#5
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(I,2)#21
net.sf.javabdd.JFactory.and_rec(II)I#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,ISONE,(I)Z)#22
net.sf.javabdd.JFactory.and_rec(II)I#Constant(I,0)#23
net.sf.javabdd.JFactory.and_rec(II)I#ConditionalBranch(I,eq,27)#24
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#27
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#28
net.sf.javabdd.JFactory.and_rec(II)I#Get(Lnet/sf/javabdd/JFactory$BddCache;,NONSTATIC,Lnet/sf/javabdd/JFactory;,applycache)#29
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(I,1)#30
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(I,2)#31
net.sf.javabdd.JFactory.and_rec(II)I#Constant(I,0)#32
net.sf.javabdd.JFactory.and_rec(II)I#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,APPLYHASH,(III)I)#33
net.sf.javabdd.JFactory.APPLYHASH(III)I#LocalLoad(I,0)#0
net.sf.javabdd.JFactory.APPLYHASH(III)I#LocalLoad(I,1)#1
net.sf.javabdd.JFactory.APPLYHASH(III)I#LocalLoad(I,2)#2
net.sf.javabdd.JFactory.APPLYHASH(III)I#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,TRIPLE,(III)I)#3
net.sf.javabdd.JFactory.APPLYHASH(III)I#Return(I)#4
net.sf.javabdd.JFactory.and_rec(II)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,BddCache_lookupI,(Lnet/sf/javabdd/JFactory$BddCache;I)Lnet/sf/javabdd/JFactory$BddCacheDataI;)#34
net.sf.javabdd.JFactory.BddCache_lookupI(Lnet/sf/javabdd/JFactory$BddCache;I)Lnet/sf/javabdd/JFactory$BddCacheDataI;#LocalLoad(Ljava/lang/Object;,1)#0
net.sf.javabdd.JFactory.BddCache_lookupI(Lnet/sf/javabdd/JFactory$BddCache;I)Lnet/sf/javabdd/JFactory$BddCacheDataI;#Get([Lnet/sf/javabdd/JFactory$BddCacheData;,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCache;,table)#1
net.sf.javabdd.JFactory.BddCache_lookupI(Lnet/sf/javabdd/JFactory$BddCache;I)Lnet/sf/javabdd/JFactory$BddCacheDataI;#LocalLoad(I,2)#2
net.sf.javabdd.JFactory.BddCache_lookupI(Lnet/sf/javabdd/JFactory$BddCache;I)Lnet/sf/javabdd/JFactory$BddCacheDataI;#LocalLoad(Ljava/lang/Object;,1)#3
net.sf.javabdd.JFactory.BddCache_lookupI(Lnet/sf/javabdd/JFactory$BddCache;I)Lnet/sf/javabdd/JFactory$BddCacheDataI;#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCache;,tablesize)#4
net.sf.javabdd.JFactory.BddCache_lookupI(Lnet/sf/javabdd/JFactory$BddCache;I)Lnet/sf/javabdd/JFactory$BddCacheDataI;#BinaryOp(I,rem)#5
net.sf.javabdd.JFactory.BddCache_lookupI(Lnet/sf/javabdd/JFactory$BddCache;I)Lnet/sf/javabdd/JFactory$BddCacheDataI;#Invoke(STATIC,Ljava/lang/Math;,abs,(I)I)#6
net.sf.javabdd.JFactory.BddCache_lookupI(Lnet/sf/javabdd/JFactory$BddCache;I)Lnet/sf/javabdd/JFactory$BddCacheDataI;#ArrayLoad(Ljava/lang/Object;)#7
net.sf.javabdd.JFactory.BddCache_lookupI(Lnet/sf/javabdd/JFactory$BddCache;I)Lnet/sf/javabdd/JFactory$BddCacheDataI;#CheckCast(Lnet/sf/javabdd/JFactory$BddCacheDataI;)#8
net.sf.javabdd.JFactory.BddCache_lookupI(Lnet/sf/javabdd/JFactory$BddCache;I)Lnet/sf/javabdd/JFactory$BddCacheDataI;#Return(Ljava/lang/Object;)#9
net.sf.javabdd.JFactory.and_rec(II)I#LocalStore(Ljava/lang/Object;,3)#35
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,3)#36
net.sf.javabdd.JFactory.and_rec(II)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCacheDataI;,a)#37
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(I,1)#38
net.sf.javabdd.JFactory.and_rec(II)I#ConditionalBranch(I,ne,51)#39
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#51
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(I,1)#52
net.sf.javabdd.JFactory.and_rec(II)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LEVEL,(I)I)#53
net.sf.javabdd.JFactory.LEVEL(I)I#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.LEVEL(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodes)#1
net.sf.javabdd.JFactory.LEVEL(I)I#LocalLoad(I,1)#2
net.sf.javabdd.JFactory.LEVEL(I)I#Constant(I,5)#3
net.sf.javabdd.JFactory.LEVEL(I)I#BinaryOp(I,mul)#4
net.sf.javabdd.JFactory.LEVEL(I)I#Constant(I,0)#5
net.sf.javabdd.JFactory.LEVEL(I)I#BinaryOp(I,add)#6
net.sf.javabdd.JFactory.LEVEL(I)I#ArrayLoad(I)#7
net.sf.javabdd.JFactory.LEVEL(I)I#Constant(I,2097151)#8
net.sf.javabdd.JFactory.LEVEL(I)I#BinaryOp(I,and)#9
net.sf.javabdd.JFactory.LEVEL(I)I#Return(I)#10
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#54
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(I,2)#55
net.sf.javabdd.JFactory.and_rec(II)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LEVEL,(I)I)#56
net.sf.javabdd.JFactory.and_rec(II)I#ConditionalBranch(I,ne,93)#57
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#93
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(I,1)#94
net.sf.javabdd.JFactory.and_rec(II)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LEVEL,(I)I)#95
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#96
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(I,2)#97
net.sf.javabdd.JFactory.and_rec(II)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LEVEL,(I)I)#98
net.sf.javabdd.JFactory.and_rec(II)I#ConditionalBranch(I,ge,131)#99
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#131
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#132
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(I,1)#133
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#134
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(I,2)#135
net.sf.javabdd.JFactory.and_rec(II)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LOW,(I)I)#136
net.sf.javabdd.JFactory.and_rec(II)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,and_rec,(II)I)#137
net.sf.javabdd.JFactory.ISZERO(I)Z#Constant(I,1)#3
net.sf.javabdd.JFactory.ISZERO(I)Z#Goto(6)#4
net.sf.javabdd.JFactory.and_rec(II)I#Constant(I,0)#13
net.sf.javabdd.JFactory.and_rec(II)I#Return(I)#14
net.sf.javabdd.JFactory.and_rec(II)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,PUSHREF,(I)I)#138
net.sf.javabdd.JFactory.and_rec(II)I#Pop(1)#139
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#140
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#141
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(I,1)#142
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#143
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(I,2)#144
net.sf.javabdd.JFactory.and_rec(II)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HIGH,(I)I)#145
net.sf.javabdd.JFactory.HIGH(I)I#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.HIGH(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodes)#1
net.sf.javabdd.JFactory.HIGH(I)I#LocalLoad(I,1)#2
net.sf.javabdd.JFactory.HIGH(I)I#Constant(I,5)#3
net.sf.javabdd.JFactory.HIGH(I)I#BinaryOp(I,mul)#4
net.sf.javabdd.JFactory.HIGH(I)I#Constant(I,2)#5
net.sf.javabdd.JFactory.HIGH(I)I#BinaryOp(I,add)#6
net.sf.javabdd.JFactory.HIGH(I)I#ArrayLoad(I)#7
net.sf.javabdd.JFactory.HIGH(I)I#Return(I)#8
net.sf.javabdd.JFactory.and_rec(II)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,and_rec,(II)I)#146
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(I,1)#25
net.sf.javabdd.JFactory.and_rec(II)I#Return(I)#26
net.sf.javabdd.JFactory.and_rec(II)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,PUSHREF,(I)I)#147
net.sf.javabdd.JFactory.and_rec(II)I#Pop(1)#148
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#149
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#150
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(I,2)#151
net.sf.javabdd.JFactory.and_rec(II)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LEVEL,(I)I)#152
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#153
net.sf.javabdd.JFactory.and_rec(II)I#Constant(I,2)#154
net.sf.javabdd.JFactory.and_rec(II)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,READREF,(I)I)#155
net.sf.javabdd.JFactory.READREF(I)I#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.READREF(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddrefstack)#1
net.sf.javabdd.JFactory.READREF(I)I#LocalLoad(Ljava/lang/Object;,0)#2
net.sf.javabdd.JFactory.READREF(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddrefstacktop)#3
net.sf.javabdd.JFactory.READREF(I)I#LocalLoad(I,1)#4
net.sf.javabdd.JFactory.READREF(I)I#BinaryOp(I,sub)#5
net.sf.javabdd.JFactory.READREF(I)I#ArrayLoad(I)#6
net.sf.javabdd.JFactory.READREF(I)I#Return(I)#7
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#156
net.sf.javabdd.JFactory.and_rec(II)I#Constant(I,1)#157
net.sf.javabdd.JFactory.and_rec(II)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,READREF,(I)I)#158
net.sf.javabdd.JFactory.and_rec(II)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_makenode,(III)I)#159
net.sf.javabdd.JFactory.and_rec(II)I#LocalStore(I,4)#160
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#161
net.sf.javabdd.JFactory.and_rec(II)I#Constant(I,2)#162
net.sf.javabdd.JFactory.and_rec(II)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,POPREF,(I)V)#163
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,3)#164
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(I,1)#165
net.sf.javabdd.JFactory.and_rec(II)I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCacheDataI;,a)#166
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,3)#167
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(I,2)#168
net.sf.javabdd.JFactory.and_rec(II)I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCacheDataI;,b)#169
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,3)#170
net.sf.javabdd.JFactory.and_rec(II)I#Constant(I,0)#171
net.sf.javabdd.JFactory.and_rec(II)I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCacheDataI;,c)#172
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,3)#173
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(I,4)#174
net.sf.javabdd.JFactory.and_rec(II)I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCacheDataI;,res)#175
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(I,4)#176
net.sf.javabdd.JFactory.and_rec(II)I#Return(I)#177
net.sf.javabdd.JFactory.INCREF(I)V#LocalLoad(Ljava/lang/Object;,0)#12
net.sf.javabdd.JFactory.INCREF(I)V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodes)#13
net.sf.javabdd.JFactory.INCREF(I)V#LocalLoad(I,1)#14
net.sf.javabdd.JFactory.INCREF(I)V#Constant(I,5)#15
net.sf.javabdd.JFactory.INCREF(I)V#BinaryOp(I,mul)#16
net.sf.javabdd.JFactory.INCREF(I)V#Constant(I,0)#17
net.sf.javabdd.JFactory.INCREF(I)V#BinaryOp(I,add)#18
net.sf.javabdd.JFactory.INCREF(I)V#Dup(2,0)#19
net.sf.javabdd.JFactory.INCREF(I)V#ArrayLoad(I)#20
net.sf.javabdd.JFactory.INCREF(I)V#Constant(I,4194304)#21
net.sf.javabdd.JFactory.INCREF(I)V#BinaryOp(I,add)#22
net.sf.javabdd.JFactory.INCREF(I)V#ArrayStore(I)#23
net.sf.javabdd.BDDFactory.makeSet([I)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,2)#26
net.sf.javabdd.BDDFactory.makeSet([I)Lnet/sf/javabdd/BDD;#Return(Ljava/lang/Object;)#27
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Put(Lnet/sf/javabdd/BDD;,NONSTATIC,Lnet/sf/javabdd/BDDDomain;,var)#179
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,5)#180
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Constant(I,1)#181
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#BinaryOp(I,add)#182
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalStore(I,5)#183
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Goto(159)#184
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#185
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Dup(1,0)#186
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Get(I,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,fdvarnum)#187
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,8)#188
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#BinaryOp(I,add)#189
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Put(I,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,fdvarnum)#190
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#191
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Dup(1,0)#192
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Get(I,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,firstbddvar)#193
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,4)#194
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#BinaryOp(I,add)#195
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Put(I,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,firstbddvar)#196
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,8)#197
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#New([Lnet/sf/javabdd/BDDDomain;,1)#198
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalStore(Ljava/lang/Object;,10)#199
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#200
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Get([Lnet/sf/javabdd/BDDDomain;,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,domain)#201
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,2)#202
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,10)#203
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Constant(I,0)#204
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,8)#205
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Invoke(STATIC,Ljava/lang/System;,arraycopy,(Ljava/lang/Object;ILjava/lang/Object;II)V)#206
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,10)#207
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Return(Ljava/lang/Object;)#208
net.sf.javabdd.BDDFactory.extDomain([J)[Lnet/sf/javabdd/BDDDomain;#Return(Ljava/lang/Object;)#25
chord.bddbddb.Rel.initialize()V#Constant(I,0)#82
chord.bddbddb.Rel.initialize()V#ArrayLoad(Ljava/lang/Object;)#83
chord.bddbddb.Rel.initialize()V#LocalStore(Ljava/lang/Object;,9)#84
chord.bddbddb.Rel.initialize()V#LocalLoad(Ljava/lang/Object;,9)#85
chord.bddbddb.Rel.initialize()V#LocalLoad(Ljava/lang/Object;,7)#86
chord.bddbddb.Rel.initialize()V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDDomain;,setName,(Ljava/lang/String;)V)#87
net.sf.javabdd.BDDDomain.setName(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.BDDDomain.setName(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#1
net.sf.javabdd.BDDDomain.setName(Ljava/lang/String;)V#Put(Ljava/lang/String;,NONSTATIC,Lnet/sf/javabdd/BDDDomain;,name)#2
net.sf.javabdd.BDDDomain.setName(Ljava/lang/String;)V#Return(V)#3
chord.bddbddb.Rel.initialize()V#LocalLoad(Ljava/lang/Object;,0)#88
chord.bddbddb.Rel.initialize()V#Get([Lnet/sf/javabdd/BDDDomain;,NONSTATIC,Lchord/bddbddb/Rel;,domBdds)#89
chord.bddbddb.Rel.initialize()V#LocalLoad(I,6)#90
chord.bddbddb.Rel.initialize()V#LocalLoad(Ljava/lang/Object;,9)#91
chord.bddbddb.Rel.initialize()V#ArrayStore(Ljava/lang/Object;)#92
chord.bddbddb.Rel.initialize()V#LocalLoad(I,6)#93
chord.bddbddb.Rel.initialize()V#Constant(I,1)#94
chord.bddbddb.Rel.initialize()V#BinaryOp(I,add)#95
chord.bddbddb.Rel.initialize()V#LocalStore(I,6)#96
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#17
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Get(I,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,fdvarnum)#18
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,8)#19
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#BinaryOp(I,add)#20
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#21
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Get([Lnet/sf/javabdd/BDDDomain;,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,domain)#22
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#ArrayLength()#23
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#ConditionalBranch(I,le,50)#24
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#25
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Get([Lnet/sf/javabdd/BDDDomain;,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,domain)#26
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#ArrayLength()#27
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,8)#28
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#29
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Get([Lnet/sf/javabdd/BDDDomain;,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,domain)#30
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#ArrayLength()#31
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Invoke(STATIC,Ljava/lang/Math;,max,(II)I)#32
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#BinaryOp(I,add)#33
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalStore(I,9)#34
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,9)#35
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#New([Lnet/sf/javabdd/BDDDomain;,1)#36
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalStore(Ljava/lang/Object;,10)#37
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#38
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Get([Lnet/sf/javabdd/BDDDomain;,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,domain)#39
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Constant(I,0)#40
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,10)#41
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Constant(I,0)#42
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#43
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Get([Lnet/sf/javabdd/BDDDomain;,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,domain)#44
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#ArrayLength()#45
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Invoke(STATIC,Ljava/lang/System;,arraycopy,(Ljava/lang/Object;ILjava/lang/Object;II)V)#46
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#47
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,10)#48
net.sf.javabdd.BDDFactory.extDomain([Ljava/math/BigInteger;)[Lnet/sf/javabdd/BDDDomain;#Put([Lnet/sf/javabdd/BDDDomain;,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,domain)#49
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(I,1)#52
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,2)#53
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#BinaryOp(I,mul)#54
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#New([I,1)#55
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalStore(Ljava/lang/Object;,4)#56
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#57
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarset)#58
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,0)#59
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,4)#60
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,0)#61
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#62
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarset)#63
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#ArrayLength()#64
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Invoke(STATIC,Ljava/lang/System;,arraycopy,(Ljava/lang/Object;ILjava/lang/Object;II)V)#65
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#66
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,4)#67
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Put([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarset)#68
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(I,1)#69
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,1)#70
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#BinaryOp(I,add)#71
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#New([I,1)#72
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalStore(Ljava/lang/Object;,5)#73
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#74
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddlevel2var)#75
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,0)#76
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,5)#77
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,0)#78
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#79
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddlevel2var)#80
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#ArrayLength()#81
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Invoke(STATIC,Ljava/lang/System;,arraycopy,(Ljava/lang/Object;ILjava/lang/Object;II)V)#82
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#83
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,5)#84
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Put([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddlevel2var)#85
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(I,1)#86
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,1)#87
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#BinaryOp(I,add)#88
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#New([I,1)#89
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalStore(Ljava/lang/Object;,6)#90
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#91
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvar2level)#92
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,0)#93
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,6)#94
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Constant(I,0)#95
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#96
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvar2level)#97
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#ArrayLength()#98
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Invoke(STATIC,Ljava/lang/System;,arraycopy,(Ljava/lang/Object;ILjava/lang/Object;II)V)#99
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#100
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,6)#101
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Put([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvar2level)#102
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#LocalLoad(Ljava/lang/Object;,0)#107
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddrefstack)#108
net.sf.javabdd.JFactory.bdd_setvarnum(I)I#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,free,(Ljava/lang/Object;)V)#109
net.sf.javabdd.JFactory.free(Ljava/lang/Object;)V#Return(V)#0
net.sf.javabdd.JFactory.bdd_operator_varresize()V#LocalLoad(Ljava/lang/Object;,0)#4
net.sf.javabdd.JFactory.bdd_operator_varresize()V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,quantvarset)#5
net.sf.javabdd.JFactory.bdd_operator_varresize()V#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,free,(Ljava/lang/Object;)V)#6
chord.bddbddb.Rel.initialize()V#Constant(Ljava/lang/String;,"bddreverse")#101
chord.bddbddb.Rel.initialize()V#Constant(Ljava/lang/String;,"true")#102
chord.bddbddb.Rel.initialize()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)#103
chord.bddbddb.Rel.initialize()V#Constant(Ljava/lang/String;,"true")#104
chord.bddbddb.Rel.initialize()V#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#105
chord.bddbddb.Rel.initialize()V#LocalStore(I,6)#106
chord.bddbddb.Rel.initialize()V#LocalLoad(Ljava/lang/Object;,0)#107
chord.bddbddb.Rel.initialize()V#Get(Lnet/sf/javabdd/BDDFactory;,NONSTATIC,Lchord/bddbddb/Rel;,factory)#108
chord.bddbddb.Rel.initialize()V#LocalLoad(I,6)#109
chord.bddbddb.Rel.initialize()V#LocalLoad(Ljava/lang/Object;,0)#110
chord.bddbddb.Rel.initialize()V#Get(Lchord/bddbddb/RelSign;,NONSTATIC,Lchord/bddbddb/Rel;,sign)#111
chord.bddbddb.Rel.initialize()V#Get(Ljava/lang/Object;,NONSTATIC,Lchord/bddbddb/RelSign;,val1)#112
chord.bddbddb.Rel.initialize()V#CheckCast(Ljava/lang/String;)#113
chord.bddbddb.Rel.initialize()V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDFactory;,makeVarOrdering,(ZLjava/lang/String;)[I)#114
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDFactory;,varNum,()I)#1
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalStore(I,3)#2
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,0)#3
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDFactory;,numberOfDomains,()I)#4
net.sf.javabdd.BDDFactory.numberOfDomains()I#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.BDDFactory.numberOfDomains()I#Get(I,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,fdvarnum)#1
net.sf.javabdd.BDDFactory.numberOfDomains()I#Return(I)#2
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalStore(I,4)#5
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,4)#6
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#New([[I,1)#7
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalStore(Ljava/lang/Object;,5)#8
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(I,0)#9
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalStore(I,6)#10
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,6)#11
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,5)#12
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#ArrayLength()#13
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#ConditionalBranch(I,ge,28)#14
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,5)#15
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,6)#16
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,0)#17
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,6)#18
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDFactory;,getDomain,(I)Lnet/sf/javabdd/BDDDomain;)#19
net.sf.javabdd.BDDFactory.getDomain(I)Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,1)#0
net.sf.javabdd.BDDFactory.getDomain(I)Lnet/sf/javabdd/BDDDomain;#Constant(I,0)#1
net.sf.javabdd.BDDFactory.getDomain(I)Lnet/sf/javabdd/BDDDomain;#ConditionalBranch(I,lt,7)#2
net.sf.javabdd.BDDFactory.getDomain(I)Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,1)#3
net.sf.javabdd.BDDFactory.getDomain(I)Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#4
net.sf.javabdd.BDDFactory.getDomain(I)Lnet/sf/javabdd/BDDDomain;#Get(I,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,fdvarnum)#5
net.sf.javabdd.BDDFactory.getDomain(I)Lnet/sf/javabdd/BDDDomain;#ConditionalBranch(I,lt,11)#6
net.sf.javabdd.BDDFactory.getDomain(I)Lnet/sf/javabdd/BDDDomain;#LocalLoad(Ljava/lang/Object;,0)#11
net.sf.javabdd.BDDFactory.getDomain(I)Lnet/sf/javabdd/BDDDomain;#Get([Lnet/sf/javabdd/BDDDomain;,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,domain)#12
net.sf.javabdd.BDDFactory.getDomain(I)Lnet/sf/javabdd/BDDDomain;#LocalLoad(I,1)#13
net.sf.javabdd.BDDFactory.getDomain(I)Lnet/sf/javabdd/BDDDomain;#ArrayLoad(Ljava/lang/Object;)#14
net.sf.javabdd.BDDFactory.getDomain(I)Lnet/sf/javabdd/BDDDomain;#Return(Ljava/lang/Object;)#15
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDDomain;,varNum,()I)#20
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#New([I,1)#21
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#ArrayStore(Ljava/lang/Object;)#22
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,6)#23
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(I,1)#24
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#BinaryOp(I,add)#25
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalStore(I,6)#26
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Goto(11)#27
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(I,0)#28
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalStore(I,6)#29
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,6)#30
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,4)#31
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#ConditionalBranch(I,ge,75)#32
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,0)#33
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,6)#34
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDFactory;,getDomain,(I)Lnet/sf/javabdd/BDDDomain;)#35
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalStore(Ljava/lang/Object;,7)#36
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,7)#37
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDDomain;,varNum,()I)#38
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalStore(I,8)#39
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(I,0)#40
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalStore(I,9)#41
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,9)#42
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,8)#43
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#ConditionalBranch(I,ge,70)#44
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,1)#45
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(I,0)#46
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#ConditionalBranch(I,eq,59)#47
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,5)#48
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,6)#49
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#ArrayLoad(Ljava/lang/Object;)#50
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,9)#51
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,8)#52
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,9)#53
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#BinaryOp(I,sub)#54
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(I,1)#55
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#BinaryOp(I,sub)#56
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#ArrayStore(I)#57
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Goto(65)#58
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,9)#65
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(I,1)#66
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#BinaryOp(I,add)#67
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalStore(I,9)#68
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Goto(42)#69
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,6)#70
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(I,1)#71
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#BinaryOp(I,add)#72
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalStore(I,6)#73
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Goto(30)#74
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,4)#75
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#New([Lnet/sf/javabdd/BDDDomain;,1)#76
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalStore(Ljava/lang/Object;,6)#77
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,3)#78
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#New([I,1)#79
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalStore(Ljava/lang/Object;,7)#80
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#New(Ljava/util/StringTokenizer;,0)#81
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Dup(1,0)#82
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,2)#83
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(Ljava/lang/String;,"x_")#84
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(I,1)#85
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Invoke(SPECIAL,Ljava/util/StringTokenizer;,<init>,(Ljava/lang/String;Ljava/lang/String;Z)V)#86
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalStore(Ljava/lang/Object;,8)#87
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(I,0)#88
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalStore(I,9)#89
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(I,0)#90
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalStore(I,10)#91
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,4)#92
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#New([Z,1)#93
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalStore(Ljava/lang/Object;,11)#94
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(I,0)#95
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalStore(I,12)#96
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,8)#97
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Invoke(VIRTUAL,Ljava/util/StringTokenizer;,nextToken,()Ljava/lang/String;)#98
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalStore(Ljava/lang/Object;,13)#99
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(I,0)#100
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalStore(I,15)#101
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,15)#102
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,0)#103
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDFactory;,numberOfDomains,()I)#104
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#ConditionalBranch(I,ne,118)#105
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,0)#118
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,15)#119
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDFactory;,getDomain,(I)Lnet/sf/javabdd/BDDDomain;)#120
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalStore(Ljava/lang/Object;,14)#121
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,13)#122
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,14)#123
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDDomain;,getName,()Ljava/lang/String;)#124
net.sf.javabdd.BDDDomain.getName()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.BDDDomain.getName()Ljava/lang/String;#Get(Ljava/lang/String;,NONSTATIC,Lnet/sf/javabdd/BDDDomain;,name)#1
net.sf.javabdd.BDDDomain.getName()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#125
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(I,0)#126
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#ConditionalBranch(I,eq,129)#127
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Goto(134)#128
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,11)#134
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,14)#135
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDDomain;,getIndex,()I)#136
net.sf.javabdd.BDDDomain.getIndex()I#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.BDDDomain.getIndex()I#Get(I,NONSTATIC,Lnet/sf/javabdd/BDDDomain;,index)#1
net.sf.javabdd.BDDDomain.getIndex()I#Return(I)#2
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#ArrayLoad(B)#137
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(I,0)#138
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#ConditionalBranch(I,eq,152)#139
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,11)#152
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,14)#153
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDDomain;,getIndex,()I)#154
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(I,1)#155
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#ArrayStore(B)#156
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,6)#157
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,12)#158
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,14)#159
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#ArrayStore(Ljava/lang/Object;)#160
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,8)#161
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Invoke(VIRTUAL,Ljava/util/StringTokenizer;,hasMoreTokens,()Z)#162
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(I,0)#163
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#ConditionalBranch(I,eq,178)#164
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,8)#165
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Invoke(VIRTUAL,Ljava/util/StringTokenizer;,nextToken,()Ljava/lang/String;)#166
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalStore(Ljava/lang/Object;,13)#167
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,13)#168
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(Ljava/lang/String;,"x")#169
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#170
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(I,0)#171
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#ConditionalBranch(I,eq,178)#172
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,6)#178
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,12)#179
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,9)#180
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#BinaryOp(I,sub)#181
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,9)#182
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(I,1)#183
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#BinaryOp(I,add)#184
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,5)#185
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,10)#186
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,7)#187
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Invoke(STATIC,Lnet/sf/javabdd/BDDFactory;,fillInVarIndices,([Lnet/sf/javabdd/BDDDomain;II[[II[I)I)#188
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#Constant(I,0)#0
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalStore(I,6)#1
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#Constant(I,0)#2
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalStore(I,7)#3
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(I,7)#4
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(I,2)#5
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#ConditionalBranch(I,ge,23)#6
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(Ljava/lang/Object;,0)#7
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(I,1)#8
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(I,7)#9
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#BinaryOp(I,add)#10
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#ArrayLoad(Ljava/lang/Object;)#11
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalStore(Ljava/lang/Object;,8)#12
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(I,6)#13
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(Ljava/lang/Object;,8)#14
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDDomain;,varNum,()I)#15
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#Invoke(STATIC,Ljava/lang/Math;,max,(II)I)#16
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalStore(I,6)#17
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(I,7)#18
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#Constant(I,1)#19
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#BinaryOp(I,add)#20
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalStore(I,7)#21
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#Goto(4)#22
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#Constant(I,0)#23
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalStore(I,7)#24
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(I,7)#25
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(I,6)#26
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#ConditionalBranch(I,ge,88)#27
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#Constant(I,0)#28
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalStore(I,8)#29
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(I,8)#30
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(I,2)#31
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#ConditionalBranch(I,ge,83)#32
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(Ljava/lang/Object;,0)#33
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(I,1)#34
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(I,8)#35
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#BinaryOp(I,add)#36
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#ArrayLoad(Ljava/lang/Object;)#37
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalStore(Ljava/lang/Object;,9)#38
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(I,7)#39
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(Ljava/lang/Object;,9)#40
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDDomain;,varNum,()I)#41
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#ConditionalBranch(I,ge,78)#42
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(Ljava/lang/Object;,9)#43
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDDomain;,getIndex,()I)#44
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalStore(I,10)#45
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(Ljava/lang/Object;,3)#46
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(I,10)#47
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#ArrayLoad(Ljava/lang/Object;)#48
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(I,7)#49
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#ArrayLoad(I)#50
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalStore(I,11)#51
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(I,11)#52
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(Ljava/lang/Object;,9)#53
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDDomain;,vars,()[I)#54
net.sf.javabdd.BDDDomain.vars()[I#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.BDDDomain.vars()[I#Get([I,NONSTATIC,Lnet/sf/javabdd/BDDDomain;,ivar)#1
net.sf.javabdd.BDDDomain.vars()[I#Return(Ljava/lang/Object;)#2
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#ArrayLength()#55
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#ConditionalBranch(I,lt,60)#56
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(I,4)#60
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(Ljava/lang/Object;,5)#61
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#ArrayLength()#62
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#ConditionalBranch(I,lt,67)#63
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(Ljava/lang/Object;,5)#67
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(I,4)#68
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(I,4)#69
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#Constant(I,1)#70
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#BinaryOp(I,add)#71
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalStore(I,4)#72
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(Ljava/lang/Object;,9)#73
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDDomain;,vars,()[I)#74
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(I,11)#75
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#ArrayLoad(I)#76
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#ArrayStore(I)#77
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(I,8)#78
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#Constant(I,1)#79
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#BinaryOp(I,add)#80
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalStore(I,8)#81
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#Goto(30)#82
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(I,7)#83
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#Constant(I,1)#84
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#BinaryOp(I,add)#85
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalStore(I,7)#86
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#Goto(25)#87
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#LocalLoad(I,4)#88
net.sf.javabdd.BDDFactory.fillInVarIndices([Lnet/sf/javabdd/BDDDomain;II[[II[I)I#Return(I)#89
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalStore(I,10)#189
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,8)#190
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Invoke(VIRTUAL,Ljava/util/StringTokenizer;,hasMoreTokens,()Z)#191
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(I,0)#192
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#ConditionalBranch(I,ne,195)#193
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,13)#195
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(Ljava/lang/String;,"_")#196
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Invoke(VIRTUAL,Ljava/lang/String;,equals,(Ljava/lang/Object;)Z)#197
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(I,0)#198
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#ConditionalBranch(I,eq,203)#199
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(I,0)#200
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalStore(I,9)#201
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Goto(215)#202
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,12)#215
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(I,1)#216
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#BinaryOp(I,add)#217
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalStore(I,12)#218
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Goto(97)#219
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,15)#129
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(I,1)#130
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#BinaryOp(I,add)#131
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalStore(I,15)#132
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Goto(102)#133
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Goto(220)#194
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(I,0)#220
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalStore(I,12)#221
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,12)#222
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,6)#223
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#ArrayLength()#224
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#ConditionalBranch(I,ge,254)#225
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,11)#226
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,12)#227
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#ArrayLoad(B)#228
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(I,0)#229
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#ConditionalBranch(I,ne,249)#230
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,12)#249
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(I,1)#250
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#BinaryOp(I,add)#251
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalStore(I,12)#252
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Goto(222)#253
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,10)#254
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,7)#255
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#ArrayLength()#256
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#ConditionalBranch(I,ge,267)#257
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,7)#267
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#ArrayLength()#268
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#New([I,1)#269
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalStore(Ljava/lang/Object;,12)#270
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,7)#271
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(I,0)#272
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,12)#273
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(I,0)#274
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,7)#275
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#ArrayLength()#276
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Invoke(STATIC,Ljava/lang/System;,arraycopy,(Ljava/lang/Object;ILjava/lang/Object;II)V)#277
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,12)#278
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Invoke(STATIC,Ljava/util/Arrays;,sort,([I)V)#279
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(I,0)#280
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalStore(I,13)#281
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,13)#282
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,12)#283
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#ArrayLength()#284
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#ConditionalBranch(I,ge,312)#285
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,12)#286
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,13)#287
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#ArrayLoad(I)#288
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,13)#289
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#ConditionalBranch(I,eq,307)#290
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,13)#307
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(I,1)#308
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#BinaryOp(I,add)#309
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalStore(I,13)#310
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Goto(282)#311
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(Ljava/lang/Object;,7)#312
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Return(Ljava/lang/Object;)#313
chord.bddbddb.Rel.initialize()V#LocalStore(Ljava/lang/Object;,7)#115
chord.bddbddb.Rel.initialize()V#LocalLoad(Ljava/lang/Object;,0)#116
chord.bddbddb.Rel.initialize()V#Get(Lnet/sf/javabdd/BDDFactory;,NONSTATIC,Lchord/bddbddb/Rel;,factory)#117
chord.bddbddb.Rel.initialize()V#LocalLoad(Ljava/lang/Object;,7)#118
chord.bddbddb.Rel.initialize()V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDFactory;,setVarOrder,([I)V)#119
net.sf.javabdd.JFactory.setVarOrder([I)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.setVarOrder([I)V#LocalLoad(Ljava/lang/Object;,1)#1
net.sf.javabdd.JFactory.setVarOrder([I)V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_setvarorder,([I)V)#2
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#Get(Lnet/sf/javabdd/JFactory$BddTree;,NONSTATIC,Lnet/sf/javabdd/JFactory;,vartree)#1
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#Constant(L;,null)#2
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#ConditionalBranch(Ljava/lang/Object;,eq,8)#3
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#LocalLoad(Ljava/lang/Object;,0)#8
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,reorder_init,()I)#9
net.sf.javabdd.JFactory.reorder_init()I#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.reorder_init()I#Constant(I,1)#1
net.sf.javabdd.JFactory.reorder_init()I#LocalLoad(Ljava/lang/Object;,0)#2
net.sf.javabdd.JFactory.reorder_init()I#Get(Lnet/sf/javabdd/BDDFactory$ReorderStats;,NONSTATIC,Lnet/sf/javabdd/JFactory;,reorderstats)#3
net.sf.javabdd.JFactory.reorder_init()I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,reorder_handler,(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V)#4
net.sf.javabdd.BDDFactory.reorder_handler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#LocalLoad(I,1)#0
net.sf.javabdd.BDDFactory.reorder_handler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#Constant(I,0)#1
net.sf.javabdd.BDDFactory.reorder_handler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#ConditionalBranch(I,eq,11)#2
net.sf.javabdd.BDDFactory.reorder_handler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#LocalLoad(Ljava/lang/Object;,2)#3
net.sf.javabdd.BDDFactory.reorder_handler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#LocalLoad(Ljava/lang/Object;,0)#4
net.sf.javabdd.BDDFactory.reorder_handler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDFactory;,getNodeNum,()I)#5
net.sf.javabdd.JFactory.getNodeNum()I#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.getNodeNum()I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_getnodenum,()I)#1
net.sf.javabdd.JFactory.bdd_getnodenum()I#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.bdd_getnodenum()I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodesize)#1
net.sf.javabdd.JFactory.bdd_getnodenum()I#LocalLoad(Ljava/lang/Object;,0)#2
net.sf.javabdd.JFactory.bdd_getnodenum()I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreenum)#3
net.sf.javabdd.JFactory.bdd_getnodenum()I#BinaryOp(I,sub)#4
net.sf.javabdd.JFactory.bdd_getnodenum()I#Return(I)#5
net.sf.javabdd.JFactory.getNodeNum()I#Return(I)#2
net.sf.javabdd.BDDFactory.reorder_handler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#Put(I,NONSTATIC,Lnet/sf/javabdd/BDDFactory$ReorderStats;,usednum_before)#6
net.sf.javabdd.BDDFactory.reorder_handler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#LocalLoad(Ljava/lang/Object;,2)#7
net.sf.javabdd.BDDFactory.reorder_handler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#Invoke(STATIC,Ljava/lang/System;,currentTimeMillis,()J)#8
net.sf.javabdd.BDDFactory.reorder_handler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#Put(J,NONSTATIC,Lnet/sf/javabdd/BDDFactory$ReorderStats;,time)#9
net.sf.javabdd.BDDFactory.reorder_handler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#Goto(21)#10
net.sf.javabdd.BDDFactory.reorder_handler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#LocalLoad(Ljava/lang/Object;,0)#21
net.sf.javabdd.BDDFactory.reorder_handler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#Get(Ljava/util/List;,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,reorder_callbacks)#22
net.sf.javabdd.BDDFactory.reorder_handler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#Constant(L;,null)#23
net.sf.javabdd.BDDFactory.reorder_handler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#ConditionalBranch(Ljava/lang/Object;,ne,30)#24
net.sf.javabdd.BDDFactory.reorder_handler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#LocalLoad(Ljava/lang/Object;,0)#25
net.sf.javabdd.BDDFactory.reorder_handler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#LocalLoad(I,1)#26
net.sf.javabdd.BDDFactory.reorder_handler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#LocalLoad(Ljava/lang/Object;,2)#27
net.sf.javabdd.BDDFactory.reorder_handler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDFactory;,bdd_default_reohandler,(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V)#28
net.sf.javabdd.BDDFactory.bdd_default_reohandler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.BDDFactory.bdd_default_reohandler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#Get(I,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,verbose)#1
net.sf.javabdd.BDDFactory.bdd_default_reohandler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#Constant(I,2)#2
net.sf.javabdd.BDDFactory.bdd_default_reohandler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#ConditionalBranch(I,le,21)#3
net.sf.javabdd.BDDFactory.bdd_default_reohandler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#Return(V)#21
net.sf.javabdd.BDDFactory.reorder_handler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#Goto(39)#29
net.sf.javabdd.BDDFactory.reorder_handler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#Return(V)#39
net.sf.javabdd.JFactory.reorder_init()I#LocalLoad(Ljava/lang/Object;,0)#5
net.sf.javabdd.JFactory.reorder_init()I#LocalLoad(Ljava/lang/Object;,0)#6
net.sf.javabdd.JFactory.reorder_init()I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#7
net.sf.javabdd.JFactory.reorder_init()I#New([Lnet/sf/javabdd/JFactory$levelData;,1)#8
net.sf.javabdd.JFactory.reorder_init()I#Put([Lnet/sf/javabdd/JFactory$levelData;,NONSTATIC,Lnet/sf/javabdd/JFactory;,levels)#9
net.sf.javabdd.JFactory.reorder_init()I#Constant(I,0)#10
net.sf.javabdd.JFactory.reorder_init()I#LocalStore(I,1)#11
net.sf.javabdd.JFactory.reorder_init()I#LocalLoad(I,1)#12
net.sf.javabdd.JFactory.reorder_init()I#LocalLoad(Ljava/lang/Object;,0)#13
net.sf.javabdd.JFactory.reorder_init()I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#14
net.sf.javabdd.JFactory.reorder_init()I#ConditionalBranch(I,ge,46)#15
net.sf.javabdd.JFactory.reorder_init()I#LocalLoad(Ljava/lang/Object;,0)#16
net.sf.javabdd.JFactory.reorder_init()I#Get([Lnet/sf/javabdd/JFactory$levelData;,NONSTATIC,Lnet/sf/javabdd/JFactory;,levels)#17
net.sf.javabdd.JFactory.reorder_init()I#LocalLoad(I,1)#18
net.sf.javabdd.JFactory.reorder_init()I#New(Lnet/sf/javabdd/JFactory$levelData;,0)#19
net.sf.javabdd.JFactory.reorder_init()I#Dup(1,0)#20
net.sf.javabdd.JFactory.reorder_init()I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory$levelData;,<init>,()V)#21
net.sf.javabdd.JFactory$levelData.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory$levelData.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
net.sf.javabdd.JFactory$levelData.<init>()V#Return(V)#2
net.sf.javabdd.JFactory.reorder_init()I#ArrayStore(Ljava/lang/Object;)#22
net.sf.javabdd.JFactory.reorder_init()I#LocalLoad(Ljava/lang/Object;,0)#23
net.sf.javabdd.JFactory.reorder_init()I#Get([Lnet/sf/javabdd/JFactory$levelData;,NONSTATIC,Lnet/sf/javabdd/JFactory;,levels)#24
net.sf.javabdd.JFactory.reorder_init()I#LocalLoad(I,1)#25
net.sf.javabdd.JFactory.reorder_init()I#ArrayLoad(Ljava/lang/Object;)#26
net.sf.javabdd.JFactory.reorder_init()I#Constant(I,-1)#27
net.sf.javabdd.JFactory.reorder_init()I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,start)#28
net.sf.javabdd.JFactory.reorder_init()I#LocalLoad(Ljava/lang/Object;,0)#29
net.sf.javabdd.JFactory.reorder_init()I#Get([Lnet/sf/javabdd/JFactory$levelData;,NONSTATIC,Lnet/sf/javabdd/JFactory;,levels)#30
net.sf.javabdd.JFactory.reorder_init()I#LocalLoad(I,1)#31
net.sf.javabdd.JFactory.reorder_init()I#ArrayLoad(Ljava/lang/Object;)#32
net.sf.javabdd.JFactory.reorder_init()I#Constant(I,0)#33
net.sf.javabdd.JFactory.reorder_init()I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,size)#34
net.sf.javabdd.JFactory.reorder_init()I#LocalLoad(Ljava/lang/Object;,0)#35
net.sf.javabdd.JFactory.reorder_init()I#Get([Lnet/sf/javabdd/JFactory$levelData;,NONSTATIC,Lnet/sf/javabdd/JFactory;,levels)#36
net.sf.javabdd.JFactory.reorder_init()I#LocalLoad(I,1)#37
net.sf.javabdd.JFactory.reorder_init()I#ArrayLoad(Ljava/lang/Object;)#38
net.sf.javabdd.JFactory.reorder_init()I#Constant(I,0)#39
net.sf.javabdd.JFactory.reorder_init()I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,nodenum)#40
net.sf.javabdd.JFactory.reorder_init()I#LocalLoad(I,1)#41
net.sf.javabdd.JFactory.reorder_init()I#Constant(I,1)#42
net.sf.javabdd.JFactory.reorder_init()I#BinaryOp(I,add)#43
net.sf.javabdd.JFactory.reorder_init()I#LocalStore(I,1)#44
net.sf.javabdd.JFactory.reorder_init()I#Goto(12)#45
net.sf.javabdd.JFactory.reorder_init()I#LocalLoad(Ljava/lang/Object;,0)#46
net.sf.javabdd.JFactory.reorder_init()I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,mark_roots,()I)#47
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.mark_roots()I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#1
net.sf.javabdd.JFactory.mark_roots()I#New([Z,1)#2
net.sf.javabdd.JFactory.mark_roots()I#LocalStore(Ljava/lang/Object;,1)#3
net.sf.javabdd.JFactory.mark_roots()I#Constant(I,2)#4
net.sf.javabdd.JFactory.mark_roots()I#LocalStore(I,2)#5
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,0)#6
net.sf.javabdd.JFactory.mark_roots()I#Constant(I,0)#7
net.sf.javabdd.JFactory.mark_roots()I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,extrootsize)#8
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(I,2)#9
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,0)#10
net.sf.javabdd.JFactory.mark_roots()I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodesize)#11
net.sf.javabdd.JFactory.mark_roots()I#ConditionalBranch(I,ge,41)#12
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,0)#13
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(I,2)#14
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,0)#15
net.sf.javabdd.JFactory.mark_roots()I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddlevel2var)#16
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,0)#17
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(I,2)#18
net.sf.javabdd.JFactory.mark_roots()I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LEVELANDMARK,(I)I)#19
net.sf.javabdd.JFactory.LEVELANDMARK(I)I#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.LEVELANDMARK(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodes)#1
net.sf.javabdd.JFactory.LEVELANDMARK(I)I#LocalLoad(I,1)#2
net.sf.javabdd.JFactory.LEVELANDMARK(I)I#Constant(I,5)#3
net.sf.javabdd.JFactory.LEVELANDMARK(I)I#BinaryOp(I,mul)#4
net.sf.javabdd.JFactory.LEVELANDMARK(I)I#Constant(I,0)#5
net.sf.javabdd.JFactory.LEVELANDMARK(I)I#BinaryOp(I,add)#6
net.sf.javabdd.JFactory.LEVELANDMARK(I)I#ArrayLoad(I)#7
net.sf.javabdd.JFactory.LEVELANDMARK(I)I#Constant(I,4194303)#8
net.sf.javabdd.JFactory.LEVELANDMARK(I)I#BinaryOp(I,and)#9
net.sf.javabdd.JFactory.LEVELANDMARK(I)I#Return(I)#10
net.sf.javabdd.JFactory.mark_roots()I#ArrayLoad(I)#20
net.sf.javabdd.JFactory.mark_roots()I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETLEVELANDMARK,(II)V)#21
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,0)#22
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(I,2)#23
net.sf.javabdd.JFactory.mark_roots()I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HASREF,(I)Z)#24
net.sf.javabdd.JFactory.mark_roots()I#Constant(I,0)#25
net.sf.javabdd.JFactory.mark_roots()I#ConditionalBranch(I,eq,36)#26
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,0)#27
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(I,2)#28
net.sf.javabdd.JFactory.mark_roots()I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETMARK,(I)V)#29
net.sf.javabdd.JFactory.SETMARK(I)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.SETMARK(I)V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodes)#1
net.sf.javabdd.JFactory.SETMARK(I)V#LocalLoad(I,1)#2
net.sf.javabdd.JFactory.SETMARK(I)V#Constant(I,5)#3
net.sf.javabdd.JFactory.SETMARK(I)V#BinaryOp(I,mul)#4
net.sf.javabdd.JFactory.SETMARK(I)V#Constant(I,0)#5
net.sf.javabdd.JFactory.SETMARK(I)V#BinaryOp(I,add)#6
net.sf.javabdd.JFactory.SETMARK(I)V#Dup(2,0)#7
net.sf.javabdd.JFactory.SETMARK(I)V#ArrayLoad(I)#8
net.sf.javabdd.JFactory.SETMARK(I)V#Constant(I,2097152)#9
net.sf.javabdd.JFactory.SETMARK(I)V#BinaryOp(I,or)#10
net.sf.javabdd.JFactory.SETMARK(I)V#ArrayStore(I)#11
net.sf.javabdd.JFactory.SETMARK(I)V#Return(V)#12
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,0)#30
net.sf.javabdd.JFactory.mark_roots()I#Dup(1,0)#31
net.sf.javabdd.JFactory.mark_roots()I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,extrootsize)#32
net.sf.javabdd.JFactory.mark_roots()I#Constant(I,1)#33
net.sf.javabdd.JFactory.mark_roots()I#BinaryOp(I,add)#34
net.sf.javabdd.JFactory.mark_roots()I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,extrootsize)#35
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(I,2)#36
net.sf.javabdd.JFactory.mark_roots()I#Constant(I,1)#37
net.sf.javabdd.JFactory.mark_roots()I#BinaryOp(I,add)#38
net.sf.javabdd.JFactory.mark_roots()I#LocalStore(I,2)#39
net.sf.javabdd.JFactory.mark_roots()I#Goto(9)#40
net.sf.javabdd.JFactory.HASREF(I)Z#Constant(I,0)#14
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,0)#41
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,0)#42
net.sf.javabdd.JFactory.mark_roots()I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,extrootsize)#43
net.sf.javabdd.JFactory.mark_roots()I#New([I,1)#44
net.sf.javabdd.JFactory.mark_roots()I#Put([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,extroots)#45
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,0)#46
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,0)#47
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,0)#48
net.sf.javabdd.JFactory.mark_roots()I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#49
net.sf.javabdd.JFactory.mark_roots()I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,imatrixNew,(I)Lnet/sf/javabdd/JFactory$imatrix;)#50
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#New(Lnet/sf/javabdd/JFactory$imatrix;,0)#0
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#Dup(1,0)#1
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory$imatrix;,<init>,()V)#2
net.sf.javabdd.JFactory$imatrix.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory$imatrix.<init>()V#Invoke(SPECIAL,Ljava/lang/Object;,<init>,()V)#1
net.sf.javabdd.JFactory$imatrix.<init>()V#Return(V)#2
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#LocalStore(Ljava/lang/Object;,2)#3
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#LocalLoad(Ljava/lang/Object;,2)#4
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#LocalLoad(I,1)#5
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#New([[B,1)#6
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#Put([[B,NONSTATIC,Lnet/sf/javabdd/JFactory$imatrix;,rows)#7
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#Constant(I,0)#8
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#LocalStore(I,3)#9
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#LocalLoad(I,3)#10
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#LocalLoad(I,1)#11
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#ConditionalBranch(I,ge,28)#12
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#LocalLoad(Ljava/lang/Object;,2)#13
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#Get([[B,NONSTATIC,Lnet/sf/javabdd/JFactory$imatrix;,rows)#14
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#LocalLoad(I,3)#15
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#LocalLoad(I,1)#16
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#Constant(I,8)#17
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#BinaryOp(I,div)#18
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#Constant(I,1)#19
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#BinaryOp(I,add)#20
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#New([B,1)#21
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#ArrayStore(Ljava/lang/Object;)#22
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#LocalLoad(I,3)#23
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#Constant(I,1)#24
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#BinaryOp(I,add)#25
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#LocalStore(I,3)#26
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#Goto(10)#27
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#LocalLoad(Ljava/lang/Object;,2)#28
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#LocalLoad(I,1)#29
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$imatrix;,size)#30
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#LocalLoad(Ljava/lang/Object;,2)#31
net.sf.javabdd.JFactory.imatrixNew(I)Lnet/sf/javabdd/JFactory$imatrix;#Return(Ljava/lang/Object;)#32
net.sf.javabdd.JFactory.mark_roots()I#Put(Lnet/sf/javabdd/JFactory$imatrix;,NONSTATIC,Lnet/sf/javabdd/JFactory;,iactmtx)#51
net.sf.javabdd.JFactory.mark_roots()I#Constant(I,2)#52
net.sf.javabdd.JFactory.mark_roots()I#LocalStore(I,2)#53
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,0)#54
net.sf.javabdd.JFactory.mark_roots()I#Constant(I,0)#55
net.sf.javabdd.JFactory.mark_roots()I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,extrootsize)#56
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(I,2)#57
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,0)#58
net.sf.javabdd.JFactory.mark_roots()I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodesize)#59
net.sf.javabdd.JFactory.mark_roots()I#ConditionalBranch(I,ge,136)#60
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,0)#61
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(I,2)#62
net.sf.javabdd.JFactory.mark_roots()I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,MARKED,(I)Z)#63
net.sf.javabdd.JFactory.MARKED(I)Z#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.MARKED(I)Z#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodes)#1
net.sf.javabdd.JFactory.MARKED(I)Z#LocalLoad(I,1)#2
net.sf.javabdd.JFactory.MARKED(I)Z#Constant(I,5)#3
net.sf.javabdd.JFactory.MARKED(I)Z#BinaryOp(I,mul)#4
net.sf.javabdd.JFactory.MARKED(I)Z#Constant(I,0)#5
net.sf.javabdd.JFactory.MARKED(I)Z#BinaryOp(I,add)#6
net.sf.javabdd.JFactory.MARKED(I)Z#ArrayLoad(I)#7
net.sf.javabdd.JFactory.MARKED(I)Z#Constant(I,2097152)#8
net.sf.javabdd.JFactory.MARKED(I)Z#BinaryOp(I,and)#9
net.sf.javabdd.JFactory.MARKED(I)Z#Constant(I,0)#10
net.sf.javabdd.JFactory.MARKED(I)Z#ConditionalBranch(I,eq,14)#11
net.sf.javabdd.JFactory.MARKED(I)Z#Constant(I,1)#12
net.sf.javabdd.JFactory.MARKED(I)Z#Goto(15)#13
net.sf.javabdd.JFactory.MARKED(I)Z#Return(I)#15
net.sf.javabdd.JFactory.mark_roots()I#Constant(I,0)#64
net.sf.javabdd.JFactory.mark_roots()I#ConditionalBranch(I,eq,127)#65
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,0)#66
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(I,2)#67
net.sf.javabdd.JFactory.mark_roots()I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,UNMARK,(I)V)#68
net.sf.javabdd.JFactory.UNMARK(I)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.UNMARK(I)V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodes)#1
net.sf.javabdd.JFactory.UNMARK(I)V#LocalLoad(I,1)#2
net.sf.javabdd.JFactory.UNMARK(I)V#Constant(I,5)#3
net.sf.javabdd.JFactory.UNMARK(I)V#BinaryOp(I,mul)#4
net.sf.javabdd.JFactory.UNMARK(I)V#Constant(I,0)#5
net.sf.javabdd.JFactory.UNMARK(I)V#BinaryOp(I,add)#6
net.sf.javabdd.JFactory.UNMARK(I)V#Dup(2,0)#7
net.sf.javabdd.JFactory.UNMARK(I)V#ArrayLoad(I)#8
net.sf.javabdd.JFactory.UNMARK(I)V#Constant(I,-2097153)#9
net.sf.javabdd.JFactory.UNMARK(I)V#BinaryOp(I,and)#10
net.sf.javabdd.JFactory.UNMARK(I)V#ArrayStore(I)#11
net.sf.javabdd.JFactory.UNMARK(I)V#Return(V)#12
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,0)#69
net.sf.javabdd.JFactory.mark_roots()I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,extroots)#70
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,0)#71
net.sf.javabdd.JFactory.mark_roots()I#Dup(1,0)#72
net.sf.javabdd.JFactory.mark_roots()I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,extrootsize)#73
net.sf.javabdd.JFactory.mark_roots()I#Dup(1,1)#74
net.sf.javabdd.JFactory.mark_roots()I#Constant(I,1)#75
net.sf.javabdd.JFactory.mark_roots()I#BinaryOp(I,add)#76
net.sf.javabdd.JFactory.mark_roots()I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,extrootsize)#77
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(I,2)#78
net.sf.javabdd.JFactory.mark_roots()I#ArrayStore(I)#79
net.sf.javabdd.JFactory.mark_roots()I#Constant(I,0)#80
net.sf.javabdd.JFactory.mark_roots()I#LocalStore(I,3)#81
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(I,3)#82
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,0)#83
net.sf.javabdd.JFactory.mark_roots()I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#84
net.sf.javabdd.JFactory.mark_roots()I#ConditionalBranch(I,ge,95)#85
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,1)#86
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(I,3)#87
net.sf.javabdd.JFactory.mark_roots()I#Constant(I,0)#88
net.sf.javabdd.JFactory.mark_roots()I#ArrayStore(B)#89
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(I,3)#90
net.sf.javabdd.JFactory.mark_roots()I#Constant(I,1)#91
net.sf.javabdd.JFactory.mark_roots()I#BinaryOp(I,add)#92
net.sf.javabdd.JFactory.mark_roots()I#LocalStore(I,3)#93
net.sf.javabdd.JFactory.mark_roots()I#Goto(82)#94
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,1)#95
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,0)#96
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(I,2)#97
net.sf.javabdd.JFactory.mark_roots()I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,VARr,(I)I)#98
net.sf.javabdd.JFactory.VARr(I)I#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.VARr(I)I#LocalLoad(I,1)#1
net.sf.javabdd.JFactory.VARr(I)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LEVELANDMARK,(I)I)#2
net.sf.javabdd.JFactory.VARr(I)I#Return(I)#3
net.sf.javabdd.JFactory.mark_roots()I#Constant(I,1)#99
net.sf.javabdd.JFactory.mark_roots()I#ArrayStore(B)#100
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,0)#101
net.sf.javabdd.JFactory.mark_roots()I#Get([Lnet/sf/javabdd/JFactory$levelData;,NONSTATIC,Lnet/sf/javabdd/JFactory;,levels)#102
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,0)#103
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(I,2)#104
net.sf.javabdd.JFactory.mark_roots()I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,VARr,(I)I)#105
net.sf.javabdd.JFactory.mark_roots()I#ArrayLoad(Ljava/lang/Object;)#106
net.sf.javabdd.JFactory.mark_roots()I#Dup(1,0)#107
net.sf.javabdd.JFactory.mark_roots()I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,nodenum)#108
net.sf.javabdd.JFactory.mark_roots()I#Constant(I,1)#109
net.sf.javabdd.JFactory.mark_roots()I#BinaryOp(I,add)#110
net.sf.javabdd.JFactory.mark_roots()I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,nodenum)#111
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,0)#112
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,0)#113
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(I,2)#114
net.sf.javabdd.JFactory.mark_roots()I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LOW,(I)I)#115
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,1)#116
net.sf.javabdd.JFactory.mark_roots()I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,addref_rec,(I[Z)V)#117
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalLoad(I,1)#0
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Constant(I,2)#1
net.sf.javabdd.JFactory.addref_rec(I[Z)V#ConditionalBranch(I,ge,4)#2
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Return(V)#3
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,0)#118
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,0)#119
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(I,2)#120
net.sf.javabdd.JFactory.mark_roots()I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HIGH,(I)I)#121
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,1)#122
net.sf.javabdd.JFactory.mark_roots()I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,addref_rec,(I[Z)V)#123
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,0)#124
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,1)#125
net.sf.javabdd.JFactory.mark_roots()I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,addDependencies,([Z)V)#126
net.sf.javabdd.JFactory.addDependencies([Z)V#Constant(I,0)#0
net.sf.javabdd.JFactory.addDependencies([Z)V#LocalStore(I,2)#1
net.sf.javabdd.JFactory.addDependencies([Z)V#LocalLoad(I,2)#2
net.sf.javabdd.JFactory.addDependencies([Z)V#LocalLoad(Ljava/lang/Object;,0)#3
net.sf.javabdd.JFactory.addDependencies([Z)V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#4
net.sf.javabdd.JFactory.addDependencies([Z)V#ConditionalBranch(I,ge,44)#5
net.sf.javabdd.JFactory.addDependencies([Z)V#LocalLoad(I,2)#6
net.sf.javabdd.JFactory.addDependencies([Z)V#LocalStore(I,3)#7
net.sf.javabdd.JFactory.addDependencies([Z)V#LocalLoad(I,3)#8
net.sf.javabdd.JFactory.addDependencies([Z)V#LocalLoad(Ljava/lang/Object;,0)#9
net.sf.javabdd.JFactory.addDependencies([Z)V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#10
net.sf.javabdd.JFactory.addDependencies([Z)V#ConditionalBranch(I,ge,39)#11
net.sf.javabdd.JFactory.addDependencies([Z)V#LocalLoad(Ljava/lang/Object;,1)#12
net.sf.javabdd.JFactory.addDependencies([Z)V#LocalLoad(I,2)#13
net.sf.javabdd.JFactory.addDependencies([Z)V#ArrayLoad(B)#14
net.sf.javabdd.JFactory.addDependencies([Z)V#Constant(I,0)#15
net.sf.javabdd.JFactory.addDependencies([Z)V#ConditionalBranch(I,eq,34)#16
net.sf.javabdd.JFactory.addDependencies([Z)V#LocalLoad(Ljava/lang/Object;,1)#17
net.sf.javabdd.JFactory.addDependencies([Z)V#LocalLoad(I,3)#18
net.sf.javabdd.JFactory.addDependencies([Z)V#ArrayLoad(B)#19
net.sf.javabdd.JFactory.addDependencies([Z)V#Constant(I,0)#20
net.sf.javabdd.JFactory.addDependencies([Z)V#ConditionalBranch(I,eq,34)#21
net.sf.javabdd.JFactory.addDependencies([Z)V#LocalLoad(Ljava/lang/Object;,0)#22
net.sf.javabdd.JFactory.addDependencies([Z)V#LocalLoad(Ljava/lang/Object;,0)#23
net.sf.javabdd.JFactory.addDependencies([Z)V#Get(Lnet/sf/javabdd/JFactory$imatrix;,NONSTATIC,Lnet/sf/javabdd/JFactory;,iactmtx)#24
net.sf.javabdd.JFactory.addDependencies([Z)V#LocalLoad(I,2)#25
net.sf.javabdd.JFactory.addDependencies([Z)V#LocalLoad(I,3)#26
net.sf.javabdd.JFactory.addDependencies([Z)V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,imatrixSet,(Lnet/sf/javabdd/JFactory$imatrix;II)V)#27
net.sf.javabdd.JFactory.imatrixSet(Lnet/sf/javabdd/JFactory$imatrix;II)V#LocalLoad(Ljava/lang/Object;,1)#0
net.sf.javabdd.JFactory.imatrixSet(Lnet/sf/javabdd/JFactory$imatrix;II)V#Get([[B,NONSTATIC,Lnet/sf/javabdd/JFactory$imatrix;,rows)#1
net.sf.javabdd.JFactory.imatrixSet(Lnet/sf/javabdd/JFactory$imatrix;II)V#LocalLoad(I,2)#2
net.sf.javabdd.JFactory.imatrixSet(Lnet/sf/javabdd/JFactory$imatrix;II)V#ArrayLoad(Ljava/lang/Object;)#3
net.sf.javabdd.JFactory.imatrixSet(Lnet/sf/javabdd/JFactory$imatrix;II)V#LocalLoad(I,3)#4
net.sf.javabdd.JFactory.imatrixSet(Lnet/sf/javabdd/JFactory$imatrix;II)V#Constant(I,8)#5
net.sf.javabdd.JFactory.imatrixSet(Lnet/sf/javabdd/JFactory$imatrix;II)V#BinaryOp(I,div)#6
net.sf.javabdd.JFactory.imatrixSet(Lnet/sf/javabdd/JFactory$imatrix;II)V#Dup(2,0)#7
net.sf.javabdd.JFactory.imatrixSet(Lnet/sf/javabdd/JFactory$imatrix;II)V#ArrayLoad(B)#8
net.sf.javabdd.JFactory.imatrixSet(Lnet/sf/javabdd/JFactory$imatrix;II)V#Constant(I,1)#9
net.sf.javabdd.JFactory.imatrixSet(Lnet/sf/javabdd/JFactory$imatrix;II)V#LocalLoad(I,3)#10
net.sf.javabdd.JFactory.imatrixSet(Lnet/sf/javabdd/JFactory$imatrix;II)V#Constant(I,8)#11
net.sf.javabdd.JFactory.imatrixSet(Lnet/sf/javabdd/JFactory$imatrix;II)V#BinaryOp(I,rem)#12
net.sf.javabdd.JFactory.imatrixSet(Lnet/sf/javabdd/JFactory$imatrix;II)V#Shift(I,SHL)#13
net.sf.javabdd.JFactory.imatrixSet(Lnet/sf/javabdd/JFactory$imatrix;II)V#BinaryOp(I,or)#14
net.sf.javabdd.JFactory.imatrixSet(Lnet/sf/javabdd/JFactory$imatrix;II)V#Conversion(I,B)#15
net.sf.javabdd.JFactory.imatrixSet(Lnet/sf/javabdd/JFactory$imatrix;II)V#ArrayStore(B)#16
net.sf.javabdd.JFactory.imatrixSet(Lnet/sf/javabdd/JFactory$imatrix;II)V#Return(V)#17
net.sf.javabdd.JFactory.addDependencies([Z)V#LocalLoad(Ljava/lang/Object;,0)#28
net.sf.javabdd.JFactory.addDependencies([Z)V#LocalLoad(Ljava/lang/Object;,0)#29
net.sf.javabdd.JFactory.addDependencies([Z)V#Get(Lnet/sf/javabdd/JFactory$imatrix;,NONSTATIC,Lnet/sf/javabdd/JFactory;,iactmtx)#30
net.sf.javabdd.JFactory.addDependencies([Z)V#LocalLoad(I,3)#31
net.sf.javabdd.JFactory.addDependencies([Z)V#LocalLoad(I,2)#32
net.sf.javabdd.JFactory.addDependencies([Z)V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,imatrixSet,(Lnet/sf/javabdd/JFactory$imatrix;II)V)#33
net.sf.javabdd.JFactory.addDependencies([Z)V#LocalLoad(I,3)#34
net.sf.javabdd.JFactory.addDependencies([Z)V#Constant(I,1)#35
net.sf.javabdd.JFactory.addDependencies([Z)V#BinaryOp(I,add)#36
net.sf.javabdd.JFactory.addDependencies([Z)V#LocalStore(I,3)#37
net.sf.javabdd.JFactory.addDependencies([Z)V#Goto(8)#38
net.sf.javabdd.JFactory.addDependencies([Z)V#LocalLoad(I,2)#39
net.sf.javabdd.JFactory.addDependencies([Z)V#Constant(I,1)#40
net.sf.javabdd.JFactory.addDependencies([Z)V#BinaryOp(I,add)#41
net.sf.javabdd.JFactory.addDependencies([Z)V#LocalStore(I,2)#42
net.sf.javabdd.JFactory.addDependencies([Z)V#Goto(2)#43
net.sf.javabdd.JFactory.addDependencies([Z)V#Return(V)#44
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,0)#127
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(I,2)#128
net.sf.javabdd.JFactory.mark_roots()I#Constant(I,0)#129
net.sf.javabdd.JFactory.mark_roots()I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETHASH,(II)V)#130
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(I,2)#131
net.sf.javabdd.JFactory.mark_roots()I#Constant(I,1)#132
net.sf.javabdd.JFactory.mark_roots()I#BinaryOp(I,add)#133
net.sf.javabdd.JFactory.mark_roots()I#LocalStore(I,2)#134
net.sf.javabdd.JFactory.mark_roots()I#Goto(57)#135
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalLoad(Ljava/lang/Object;,0)#4
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalLoad(I,1)#5
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HASREF,(I)Z)#6
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Constant(I,0)#7
net.sf.javabdd.JFactory.addref_rec(I[Z)V#ConditionalBranch(I,eq,14)#8
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalLoad(Ljava/lang/Object;,0)#9
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalLoad(I,1)#10
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,MARKED,(I)Z)#11
net.sf.javabdd.JFactory.MARKED(I)Z#Constant(I,0)#14
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Constant(I,0)#12
net.sf.javabdd.JFactory.addref_rec(I[Z)V#ConditionalBranch(I,eq,54)#13
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Constant(I,0)#54
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalStore(I,3)#55
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalLoad(I,3)#56
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalLoad(Ljava/lang/Object;,0)#57
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#58
net.sf.javabdd.JFactory.addref_rec(I[Z)V#ConditionalBranch(I,ge,81)#59
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalLoad(Ljava/lang/Object;,2)#60
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalLoad(I,3)#61
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Dup(2,0)#62
net.sf.javabdd.JFactory.addref_rec(I[Z)V#ArrayLoad(B)#63
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalLoad(Ljava/lang/Object;,0)#64
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalLoad(Ljava/lang/Object;,0)#65
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Get(Lnet/sf/javabdd/JFactory$imatrix;,NONSTATIC,Lnet/sf/javabdd/JFactory;,iactmtx)#66
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalLoad(Ljava/lang/Object;,0)#67
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalLoad(I,1)#68
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,VARr,(I)I)#69
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Constant(I,-2097153)#70
net.sf.javabdd.JFactory.addref_rec(I[Z)V#BinaryOp(I,and)#71
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalLoad(I,3)#72
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,imatrixDepends,(Lnet/sf/javabdd/JFactory$imatrix;II)Z)#73
net.sf.javabdd.JFactory.imatrixDepends(Lnet/sf/javabdd/JFactory$imatrix;II)Z#LocalLoad(Ljava/lang/Object;,1)#0
net.sf.javabdd.JFactory.imatrixDepends(Lnet/sf/javabdd/JFactory$imatrix;II)Z#Get([[B,NONSTATIC,Lnet/sf/javabdd/JFactory$imatrix;,rows)#1
net.sf.javabdd.JFactory.imatrixDepends(Lnet/sf/javabdd/JFactory$imatrix;II)Z#LocalLoad(I,2)#2
net.sf.javabdd.JFactory.imatrixDepends(Lnet/sf/javabdd/JFactory$imatrix;II)Z#ArrayLoad(Ljava/lang/Object;)#3
net.sf.javabdd.JFactory.imatrixDepends(Lnet/sf/javabdd/JFactory$imatrix;II)Z#LocalLoad(I,3)#4
net.sf.javabdd.JFactory.imatrixDepends(Lnet/sf/javabdd/JFactory$imatrix;II)Z#Constant(I,8)#5
net.sf.javabdd.JFactory.imatrixDepends(Lnet/sf/javabdd/JFactory$imatrix;II)Z#BinaryOp(I,div)#6
net.sf.javabdd.JFactory.imatrixDepends(Lnet/sf/javabdd/JFactory$imatrix;II)Z#ArrayLoad(B)#7
net.sf.javabdd.JFactory.imatrixDepends(Lnet/sf/javabdd/JFactory$imatrix;II)Z#Constant(I,1)#8
net.sf.javabdd.JFactory.imatrixDepends(Lnet/sf/javabdd/JFactory$imatrix;II)Z#LocalLoad(I,3)#9
net.sf.javabdd.JFactory.imatrixDepends(Lnet/sf/javabdd/JFactory$imatrix;II)Z#Constant(I,8)#10
net.sf.javabdd.JFactory.imatrixDepends(Lnet/sf/javabdd/JFactory$imatrix;II)Z#BinaryOp(I,rem)#11
net.sf.javabdd.JFactory.imatrixDepends(Lnet/sf/javabdd/JFactory$imatrix;II)Z#Shift(I,SHL)#12
net.sf.javabdd.JFactory.imatrixDepends(Lnet/sf/javabdd/JFactory$imatrix;II)Z#BinaryOp(I,and)#13
net.sf.javabdd.JFactory.imatrixDepends(Lnet/sf/javabdd/JFactory$imatrix;II)Z#Constant(I,0)#14
net.sf.javabdd.JFactory.imatrixDepends(Lnet/sf/javabdd/JFactory$imatrix;II)Z#ConditionalBranch(I,eq,18)#15
net.sf.javabdd.JFactory.imatrixDepends(Lnet/sf/javabdd/JFactory$imatrix;II)Z#Constant(I,0)#18
net.sf.javabdd.JFactory.imatrixDepends(Lnet/sf/javabdd/JFactory$imatrix;II)Z#Return(I)#19
net.sf.javabdd.JFactory.addref_rec(I[Z)V#BinaryOp(I,or)#74
net.sf.javabdd.JFactory.addref_rec(I[Z)V#ArrayStore(B)#75
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalLoad(I,3)#76
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Constant(I,1)#77
net.sf.javabdd.JFactory.addref_rec(I[Z)V#BinaryOp(I,add)#78
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalStore(I,3)#79
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Goto(56)#80
net.sf.javabdd.JFactory.imatrixDepends(Lnet/sf/javabdd/JFactory$imatrix;II)Z#Constant(I,1)#16
net.sf.javabdd.JFactory.imatrixDepends(Lnet/sf/javabdd/JFactory$imatrix;II)Z#Goto(19)#17
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalLoad(Ljava/lang/Object;,0)#81
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalLoad(I,1)#82
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,INCREF,(I)V)#83
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Return(V)#84
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,0)#136
net.sf.javabdd.JFactory.mark_roots()I#Constant(I,0)#137
net.sf.javabdd.JFactory.mark_roots()I#Constant(I,0)#138
net.sf.javabdd.JFactory.mark_roots()I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETHASH,(II)V)#139
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,0)#140
net.sf.javabdd.JFactory.mark_roots()I#Constant(I,1)#141
net.sf.javabdd.JFactory.mark_roots()I#Constant(I,0)#142
net.sf.javabdd.JFactory.mark_roots()I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETHASH,(II)V)#143
net.sf.javabdd.JFactory.mark_roots()I#LocalLoad(Ljava/lang/Object;,1)#144
net.sf.javabdd.JFactory.mark_roots()I#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,free,(Ljava/lang/Object;)V)#145
net.sf.javabdd.JFactory.mark_roots()I#Constant(I,0)#146
net.sf.javabdd.JFactory.mark_roots()I#Return(I)#147
net.sf.javabdd.JFactory.reorder_init()I#Constant(I,0)#48
net.sf.javabdd.JFactory.reorder_init()I#ConditionalBranch(I,ge,52)#49
net.sf.javabdd.JFactory.reorder_init()I#LocalLoad(Ljava/lang/Object;,0)#52
net.sf.javabdd.JFactory.reorder_init()I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,reorder_setLevellookup,()V)#53
net.sf.javabdd.JFactory.reorder_setLevellookup()V#Constant(I,0)#0
net.sf.javabdd.JFactory.reorder_setLevellookup()V#LocalStore(I,1)#1
net.sf.javabdd.JFactory.reorder_setLevellookup()V#LocalLoad(I,1)#2
net.sf.javabdd.JFactory.reorder_setLevellookup()V#LocalLoad(Ljava/lang/Object;,0)#3
net.sf.javabdd.JFactory.reorder_setLevellookup()V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#4
net.sf.javabdd.JFactory.reorder_setLevellookup()V#ConditionalBranch(I,ge,72)#5
net.sf.javabdd.JFactory.reorder_setLevellookup()V#LocalLoad(Ljava/lang/Object;,0)#6
net.sf.javabdd.JFactory.reorder_setLevellookup()V#Get([Lnet/sf/javabdd/JFactory$levelData;,NONSTATIC,Lnet/sf/javabdd/JFactory;,levels)#7
net.sf.javabdd.JFactory.reorder_setLevellookup()V#LocalLoad(I,1)#8
net.sf.javabdd.JFactory.reorder_setLevellookup()V#ArrayLoad(Ljava/lang/Object;)#9
net.sf.javabdd.JFactory.reorder_setLevellookup()V#LocalLoad(Ljava/lang/Object;,0)#10
net.sf.javabdd.JFactory.reorder_setLevellookup()V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodesize)#11
net.sf.javabdd.JFactory.reorder_setLevellookup()V#LocalLoad(Ljava/lang/Object;,0)#12
net.sf.javabdd.JFactory.reorder_setLevellookup()V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#13
net.sf.javabdd.JFactory.reorder_setLevellookup()V#BinaryOp(I,div)#14
net.sf.javabdd.JFactory.reorder_setLevellookup()V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,maxsize)#15
net.sf.javabdd.JFactory.reorder_setLevellookup()V#LocalLoad(Ljava/lang/Object;,0)#16
net.sf.javabdd.JFactory.reorder_setLevellookup()V#Get([Lnet/sf/javabdd/JFactory$levelData;,NONSTATIC,Lnet/sf/javabdd/JFactory;,levels)#17
net.sf.javabdd.JFactory.reorder_setLevellookup()V#LocalLoad(I,1)#18
net.sf.javabdd.JFactory.reorder_setLevellookup()V#ArrayLoad(Ljava/lang/Object;)#19
net.sf.javabdd.JFactory.reorder_setLevellookup()V#LocalLoad(I,1)#20
net.sf.javabdd.JFactory.reorder_setLevellookup()V#LocalLoad(Ljava/lang/Object;,0)#21
net.sf.javabdd.JFactory.reorder_setLevellookup()V#Get([Lnet/sf/javabdd/JFactory$levelData;,NONSTATIC,Lnet/sf/javabdd/JFactory;,levels)#22
net.sf.javabdd.JFactory.reorder_setLevellookup()V#LocalLoad(I,1)#23
net.sf.javabdd.JFactory.reorder_setLevellookup()V#ArrayLoad(Ljava/lang/Object;)#24
net.sf.javabdd.JFactory.reorder_setLevellookup()V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,maxsize)#25
net.sf.javabdd.JFactory.reorder_setLevellookup()V#BinaryOp(I,mul)#26
net.sf.javabdd.JFactory.reorder_setLevellookup()V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,start)#27
net.sf.javabdd.JFactory.reorder_setLevellookup()V#LocalLoad(Ljava/lang/Object;,0)#28
net.sf.javabdd.JFactory.reorder_setLevellookup()V#Get([Lnet/sf/javabdd/JFactory$levelData;,NONSTATIC,Lnet/sf/javabdd/JFactory;,levels)#29
net.sf.javabdd.JFactory.reorder_setLevellookup()V#LocalLoad(I,1)#30
net.sf.javabdd.JFactory.reorder_setLevellookup()V#ArrayLoad(Ljava/lang/Object;)#31
net.sf.javabdd.JFactory.reorder_setLevellookup()V#LocalLoad(Ljava/lang/Object;,0)#32
net.sf.javabdd.JFactory.reorder_setLevellookup()V#Get([Lnet/sf/javabdd/JFactory$levelData;,NONSTATIC,Lnet/sf/javabdd/JFactory;,levels)#33
net.sf.javabdd.JFactory.reorder_setLevellookup()V#LocalLoad(I,1)#34
net.sf.javabdd.JFactory.reorder_setLevellookup()V#ArrayLoad(Ljava/lang/Object;)#35
net.sf.javabdd.JFactory.reorder_setLevellookup()V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,maxsize)#36
net.sf.javabdd.JFactory.reorder_setLevellookup()V#LocalLoad(Ljava/lang/Object;,0)#37
net.sf.javabdd.JFactory.reorder_setLevellookup()V#Get([Lnet/sf/javabdd/JFactory$levelData;,NONSTATIC,Lnet/sf/javabdd/JFactory;,levels)#38
net.sf.javabdd.JFactory.reorder_setLevellookup()V#LocalLoad(I,1)#39
net.sf.javabdd.JFactory.reorder_setLevellookup()V#ArrayLoad(Ljava/lang/Object;)#40
net.sf.javabdd.JFactory.reorder_setLevellookup()V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,nodenum)#41
net.sf.javabdd.JFactory.reorder_setLevellookup()V#Constant(I,5)#42
net.sf.javabdd.JFactory.reorder_setLevellookup()V#BinaryOp(I,mul)#43
net.sf.javabdd.JFactory.reorder_setLevellookup()V#Constant(I,4)#44
net.sf.javabdd.JFactory.reorder_setLevellookup()V#BinaryOp(I,div)#45
net.sf.javabdd.JFactory.reorder_setLevellookup()V#Invoke(STATIC,Ljava/lang/Math;,min,(II)I)#46
net.sf.javabdd.JFactory.reorder_setLevellookup()V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,size)#47
net.sf.javabdd.JFactory.reorder_setLevellookup()V#LocalLoad(Ljava/lang/Object;,0)#48
net.sf.javabdd.JFactory.reorder_setLevellookup()V#Get([Lnet/sf/javabdd/JFactory$levelData;,NONSTATIC,Lnet/sf/javabdd/JFactory;,levels)#49
net.sf.javabdd.JFactory.reorder_setLevellookup()V#LocalLoad(I,1)#50
net.sf.javabdd.JFactory.reorder_setLevellookup()V#ArrayLoad(Ljava/lang/Object;)#51
net.sf.javabdd.JFactory.reorder_setLevellookup()V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,size)#52
net.sf.javabdd.JFactory.reorder_setLevellookup()V#Constant(I,4)#53
net.sf.javabdd.JFactory.reorder_setLevellookup()V#ConditionalBranch(I,lt,67)#54
net.sf.javabdd.JFactory.reorder_setLevellookup()V#LocalLoad(I,1)#67
net.sf.javabdd.JFactory.reorder_setLevellookup()V#Constant(I,1)#68
net.sf.javabdd.JFactory.reorder_setLevellookup()V#BinaryOp(I,add)#69
net.sf.javabdd.JFactory.reorder_setLevellookup()V#LocalStore(I,1)#70
net.sf.javabdd.JFactory.reorder_setLevellookup()V#Goto(2)#71
net.sf.javabdd.JFactory.reorder_setLevellookup()V#Return(V)#72
net.sf.javabdd.JFactory.reorder_init()I#LocalLoad(Ljava/lang/Object;,0)#54
net.sf.javabdd.JFactory.reorder_init()I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,reorder_gbc,()V)#55
net.sf.javabdd.JFactory.reorder_gbc()V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.reorder_gbc()V#Constant(I,0)#1
net.sf.javabdd.JFactory.reorder_gbc()V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreepos)#2
net.sf.javabdd.JFactory.reorder_gbc()V#LocalLoad(Ljava/lang/Object;,0)#3
net.sf.javabdd.JFactory.reorder_gbc()V#Constant(I,0)#4
net.sf.javabdd.JFactory.reorder_gbc()V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreenum)#5
net.sf.javabdd.JFactory.reorder_gbc()V#LocalLoad(Ljava/lang/Object;,0)#6
net.sf.javabdd.JFactory.reorder_gbc()V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodesize)#7
net.sf.javabdd.JFactory.reorder_gbc()V#Constant(I,1)#8
net.sf.javabdd.JFactory.reorder_gbc()V#BinaryOp(I,sub)#9
net.sf.javabdd.JFactory.reorder_gbc()V#LocalStore(I,1)#10
net.sf.javabdd.JFactory.reorder_gbc()V#LocalLoad(I,1)#11
net.sf.javabdd.JFactory.reorder_gbc()V#Constant(I,2)#12
net.sf.javabdd.JFactory.reorder_gbc()V#ConditionalBranch(I,lt,65)#13
net.sf.javabdd.JFactory.reorder_gbc()V#LocalLoad(Ljava/lang/Object;,0)#14
net.sf.javabdd.JFactory.reorder_gbc()V#LocalLoad(I,1)#15
net.sf.javabdd.JFactory.reorder_gbc()V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HASREF,(I)Z)#16
net.sf.javabdd.JFactory.reorder_gbc()V#Constant(I,0)#17
net.sf.javabdd.JFactory.reorder_gbc()V#ConditionalBranch(I,eq,42)#18
net.sf.javabdd.JFactory.reorder_gbc()V#LocalLoad(Ljava/lang/Object;,0)#42
net.sf.javabdd.JFactory.reorder_gbc()V#LocalLoad(I,1)#43
net.sf.javabdd.JFactory.reorder_gbc()V#Constant(I,-1)#44
net.sf.javabdd.JFactory.reorder_gbc()V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETLOW,(II)V)#45
net.sf.javabdd.JFactory.reorder_gbc()V#LocalLoad(Ljava/lang/Object;,0)#46
net.sf.javabdd.JFactory.reorder_gbc()V#LocalLoad(I,1)#47
net.sf.javabdd.JFactory.reorder_gbc()V#LocalLoad(Ljava/lang/Object;,0)#48
net.sf.javabdd.JFactory.reorder_gbc()V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreepos)#49
net.sf.javabdd.JFactory.reorder_gbc()V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETNEXT,(II)V)#50
net.sf.javabdd.JFactory.reorder_gbc()V#LocalLoad(Ljava/lang/Object;,0)#51
net.sf.javabdd.JFactory.reorder_gbc()V#LocalLoad(I,1)#52
net.sf.javabdd.JFactory.reorder_gbc()V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreepos)#53
net.sf.javabdd.JFactory.reorder_gbc()V#LocalLoad(Ljava/lang/Object;,0)#54
net.sf.javabdd.JFactory.reorder_gbc()V#Dup(1,0)#55
net.sf.javabdd.JFactory.reorder_gbc()V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreenum)#56
net.sf.javabdd.JFactory.reorder_gbc()V#Constant(I,1)#57
net.sf.javabdd.JFactory.reorder_gbc()V#BinaryOp(I,add)#58
net.sf.javabdd.JFactory.reorder_gbc()V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreenum)#59
net.sf.javabdd.JFactory.reorder_gbc()V#LocalLoad(I,1)#60
net.sf.javabdd.JFactory.reorder_gbc()V#Constant(I,-1)#61
net.sf.javabdd.JFactory.reorder_gbc()V#BinaryOp(I,add)#62
net.sf.javabdd.JFactory.reorder_gbc()V#LocalStore(I,1)#63
net.sf.javabdd.JFactory.reorder_gbc()V#Goto(11)#64
net.sf.javabdd.JFactory.reorder_gbc()V#LocalLoad(Ljava/lang/Object;,0)#19
net.sf.javabdd.JFactory.reorder_gbc()V#LocalLoad(Ljava/lang/Object;,0)#20
net.sf.javabdd.JFactory.reorder_gbc()V#LocalLoad(I,1)#21
net.sf.javabdd.JFactory.reorder_gbc()V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,VARr,(I)I)#22
net.sf.javabdd.JFactory.reorder_gbc()V#LocalLoad(Ljava/lang/Object;,0)#23
net.sf.javabdd.JFactory.reorder_gbc()V#LocalLoad(I,1)#24
net.sf.javabdd.JFactory.reorder_gbc()V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LOW,(I)I)#25
net.sf.javabdd.JFactory.reorder_gbc()V#LocalLoad(Ljava/lang/Object;,0)#26
net.sf.javabdd.JFactory.reorder_gbc()V#LocalLoad(I,1)#27
net.sf.javabdd.JFactory.reorder_gbc()V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HIGH,(I)I)#28
net.sf.javabdd.JFactory.reorder_gbc()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,NODEHASH2,(III)I)#29
net.sf.javabdd.JFactory.NODEHASH2(III)I#LocalLoad(I,2)#0
net.sf.javabdd.JFactory.NODEHASH2(III)I#LocalLoad(I,3)#1
net.sf.javabdd.JFactory.NODEHASH2(III)I#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,PAIR,(II)I)#2
net.sf.javabdd.JFactory.NODEHASH2(III)I#LocalLoad(Ljava/lang/Object;,0)#3
net.sf.javabdd.JFactory.NODEHASH2(III)I#Get([Lnet/sf/javabdd/JFactory$levelData;,NONSTATIC,Lnet/sf/javabdd/JFactory;,levels)#4
net.sf.javabdd.JFactory.NODEHASH2(III)I#LocalLoad(I,1)#5
net.sf.javabdd.JFactory.NODEHASH2(III)I#ArrayLoad(Ljava/lang/Object;)#6
net.sf.javabdd.JFactory.NODEHASH2(III)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,size)#7
net.sf.javabdd.JFactory.NODEHASH2(III)I#BinaryOp(I,rem)#8
net.sf.javabdd.JFactory.NODEHASH2(III)I#Invoke(STATIC,Ljava/lang/Math;,abs,(I)I)#9
net.sf.javabdd.JFactory.NODEHASH2(III)I#LocalLoad(Ljava/lang/Object;,0)#10
net.sf.javabdd.JFactory.NODEHASH2(III)I#Get([Lnet/sf/javabdd/JFactory$levelData;,NONSTATIC,Lnet/sf/javabdd/JFactory;,levels)#11
net.sf.javabdd.JFactory.NODEHASH2(III)I#LocalLoad(I,1)#12
net.sf.javabdd.JFactory.NODEHASH2(III)I#ArrayLoad(Ljava/lang/Object;)#13
net.sf.javabdd.JFactory.NODEHASH2(III)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,start)#14
net.sf.javabdd.JFactory.NODEHASH2(III)I#BinaryOp(I,add)#15
net.sf.javabdd.JFactory.NODEHASH2(III)I#Return(I)#16
net.sf.javabdd.JFactory.reorder_gbc()V#LocalStore(I,2)#30
net.sf.javabdd.JFactory.reorder_gbc()V#LocalLoad(Ljava/lang/Object;,0)#31
net.sf.javabdd.JFactory.reorder_gbc()V#LocalLoad(I,1)#32
net.sf.javabdd.JFactory.reorder_gbc()V#LocalLoad(Ljava/lang/Object;,0)#33
net.sf.javabdd.JFactory.reorder_gbc()V#LocalLoad(I,2)#34
net.sf.javabdd.JFactory.reorder_gbc()V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HASH,(I)I)#35
net.sf.javabdd.JFactory.reorder_gbc()V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETNEXT,(II)V)#36
net.sf.javabdd.JFactory.reorder_gbc()V#LocalLoad(Ljava/lang/Object;,0)#37
net.sf.javabdd.JFactory.reorder_gbc()V#LocalLoad(I,2)#38
net.sf.javabdd.JFactory.reorder_gbc()V#LocalLoad(I,1)#39
net.sf.javabdd.JFactory.reorder_gbc()V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETHASH,(II)V)#40
net.sf.javabdd.JFactory.reorder_gbc()V#Goto(60)#41
net.sf.javabdd.JFactory.reorder_gbc()V#Return(V)#65
net.sf.javabdd.JFactory.reorder_init()I#Constant(I,0)#56
net.sf.javabdd.JFactory.reorder_init()I#Return(I)#57
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#Pop(1)#10
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#Constant(I,0)#11
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#LocalStore(I,2)#12
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#LocalLoad(I,2)#13
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#LocalLoad(Ljava/lang/Object;,0)#14
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#15
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#ConditionalBranch(I,ge,37)#16
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#LocalLoad(Ljava/lang/Object;,1)#17
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#LocalLoad(I,2)#18
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#ArrayLoad(I)#19
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#LocalStore(I,3)#20
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#LocalLoad(Ljava/lang/Object;,0)#21
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvar2level)#22
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#LocalLoad(I,3)#23
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#ArrayLoad(I)#24
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#LocalLoad(I,2)#25
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#ConditionalBranch(I,le,32)#26
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#LocalLoad(Ljava/lang/Object;,0)#27
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#LocalLoad(I,3)#28
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,reorder_varup,(I)I)#29
net.sf.javabdd.JFactory.reorder_varup(I)I#LocalLoad(I,1)#0
net.sf.javabdd.JFactory.reorder_varup(I)I#Constant(I,0)#1
net.sf.javabdd.JFactory.reorder_varup(I)I#ConditionalBranch(I,lt,7)#2
net.sf.javabdd.JFactory.reorder_varup(I)I#LocalLoad(I,1)#3
net.sf.javabdd.JFactory.reorder_varup(I)I#LocalLoad(Ljava/lang/Object;,0)#4
net.sf.javabdd.JFactory.reorder_varup(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#5
net.sf.javabdd.JFactory.reorder_varup(I)I#ConditionalBranch(I,lt,10)#6
net.sf.javabdd.JFactory.reorder_varup(I)I#LocalLoad(Ljava/lang/Object;,0)#10
net.sf.javabdd.JFactory.reorder_varup(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvar2level)#11
net.sf.javabdd.JFactory.reorder_varup(I)I#LocalLoad(I,1)#12
net.sf.javabdd.JFactory.reorder_varup(I)I#ArrayLoad(I)#13
net.sf.javabdd.JFactory.reorder_varup(I)I#Constant(I,0)#14
net.sf.javabdd.JFactory.reorder_varup(I)I#ConditionalBranch(I,ne,18)#15
net.sf.javabdd.JFactory.reorder_varup(I)I#LocalLoad(Ljava/lang/Object;,0)#18
net.sf.javabdd.JFactory.reorder_varup(I)I#LocalLoad(Ljava/lang/Object;,0)#19
net.sf.javabdd.JFactory.reorder_varup(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddlevel2var)#20
net.sf.javabdd.JFactory.reorder_varup(I)I#LocalLoad(Ljava/lang/Object;,0)#21
net.sf.javabdd.JFactory.reorder_varup(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvar2level)#22
net.sf.javabdd.JFactory.reorder_varup(I)I#LocalLoad(I,1)#23
net.sf.javabdd.JFactory.reorder_varup(I)I#ArrayLoad(I)#24
net.sf.javabdd.JFactory.reorder_varup(I)I#Constant(I,1)#25
net.sf.javabdd.JFactory.reorder_varup(I)I#BinaryOp(I,sub)#26
net.sf.javabdd.JFactory.reorder_varup(I)I#ArrayLoad(I)#27
net.sf.javabdd.JFactory.reorder_varup(I)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,reorder_vardown,(I)I)#28
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(I,1)#0
net.sf.javabdd.JFactory.reorder_vardown(I)I#Constant(I,0)#1
net.sf.javabdd.JFactory.reorder_vardown(I)I#ConditionalBranch(I,lt,7)#2
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(I,1)#3
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(Ljava/lang/Object;,0)#4
net.sf.javabdd.JFactory.reorder_vardown(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#5
net.sf.javabdd.JFactory.reorder_vardown(I)I#ConditionalBranch(I,lt,10)#6
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(Ljava/lang/Object;,0)#10
net.sf.javabdd.JFactory.reorder_vardown(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvar2level)#11
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(I,1)#12
net.sf.javabdd.JFactory.reorder_vardown(I)I#ArrayLoad(I)#13
net.sf.javabdd.JFactory.reorder_vardown(I)I#Dup(1,0)#14
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalStore(I,3)#15
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(Ljava/lang/Object;,0)#16
net.sf.javabdd.JFactory.reorder_vardown(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#17
net.sf.javabdd.JFactory.reorder_vardown(I)I#Constant(I,1)#18
net.sf.javabdd.JFactory.reorder_vardown(I)I#BinaryOp(I,sub)#19
net.sf.javabdd.JFactory.reorder_vardown(I)I#ConditionalBranch(I,lt,23)#20
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(Ljava/lang/Object;,0)#23
net.sf.javabdd.JFactory.reorder_vardown(I)I#Constant(I,0)#24
net.sf.javabdd.JFactory.reorder_vardown(I)I#Put(Z,NONSTATIC,Lnet/sf/javabdd/JFactory;,resizedInMakenode)#25
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(Ljava/lang/Object;,0)#26
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(Ljava/lang/Object;,0)#27
net.sf.javabdd.JFactory.reorder_vardown(I)I#Get(Lnet/sf/javabdd/JFactory$imatrix;,NONSTATIC,Lnet/sf/javabdd/JFactory;,iactmtx)#28
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(I,1)#29
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(Ljava/lang/Object;,0)#30
net.sf.javabdd.JFactory.reorder_vardown(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddlevel2var)#31
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(I,3)#32
net.sf.javabdd.JFactory.reorder_vardown(I)I#Constant(I,1)#33
net.sf.javabdd.JFactory.reorder_vardown(I)I#BinaryOp(I,add)#34
net.sf.javabdd.JFactory.reorder_vardown(I)I#ArrayLoad(I)#35
net.sf.javabdd.JFactory.reorder_vardown(I)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,imatrixDepends,(Lnet/sf/javabdd/JFactory$imatrix;II)Z)#36
net.sf.javabdd.JFactory.reorder_vardown(I)I#Constant(I,0)#37
net.sf.javabdd.JFactory.reorder_vardown(I)I#ConditionalBranch(I,eq,85)#38
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(Ljava/lang/Object;,0)#39
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(I,1)#40
net.sf.javabdd.JFactory.reorder_vardown(I)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,reorder_downSimple,(I)I)#41
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Constant(I,0)#0
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalStore(I,2)#1
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(Ljava/lang/Object;,0)#2
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddlevel2var)#3
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(Ljava/lang/Object;,0)#4
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvar2level)#5
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(I,1)#6
net.sf.javabdd.JFactory.reorder_downSimple(I)I#ArrayLoad(I)#7
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Constant(I,1)#8
net.sf.javabdd.JFactory.reorder_downSimple(I)I#BinaryOp(I,add)#9
net.sf.javabdd.JFactory.reorder_downSimple(I)I#ArrayLoad(I)#10
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalStore(I,3)#11
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(Ljava/lang/Object;,0)#12
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Get([Lnet/sf/javabdd/JFactory$levelData;,NONSTATIC,Lnet/sf/javabdd/JFactory;,levels)#13
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(I,1)#14
net.sf.javabdd.JFactory.reorder_downSimple(I)I#ArrayLoad(Ljava/lang/Object;)#15
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,start)#16
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalStore(I,4)#17
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(Ljava/lang/Object;,0)#18
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Get([Lnet/sf/javabdd/JFactory$levelData;,NONSTATIC,Lnet/sf/javabdd/JFactory;,levels)#19
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(I,1)#20
net.sf.javabdd.JFactory.reorder_downSimple(I)I#ArrayLoad(Ljava/lang/Object;)#21
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,size)#22
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalStore(I,5)#23
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(Ljava/lang/Object;,0)#24
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Get([Lnet/sf/javabdd/JFactory$levelData;,NONSTATIC,Lnet/sf/javabdd/JFactory;,levels)#25
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(I,1)#26
net.sf.javabdd.JFactory.reorder_downSimple(I)I#ArrayLoad(Ljava/lang/Object;)#27
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Constant(I,0)#28
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,nodenum)#29
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Constant(I,0)#30
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalStore(I,6)#31
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(I,6)#32
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(I,5)#33
net.sf.javabdd.JFactory.reorder_downSimple(I)I#ConditionalBranch(I,ge,106)#34
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(Ljava/lang/Object;,0)#35
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(I,6)#36
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(I,4)#37
net.sf.javabdd.JFactory.reorder_downSimple(I)I#BinaryOp(I,add)#38
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HASH,(I)I)#39
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalStore(I,7)#40
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(Ljava/lang/Object;,0)#41
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(I,6)#42
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(I,4)#43
net.sf.javabdd.JFactory.reorder_downSimple(I)I#BinaryOp(I,add)#44
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Constant(I,0)#45
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETHASH,(II)V)#46
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(I,7)#47
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Constant(I,0)#48
net.sf.javabdd.JFactory.reorder_downSimple(I)I#ConditionalBranch(I,eq,101)#49
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(I,6)#101
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Constant(I,1)#102
net.sf.javabdd.JFactory.reorder_downSimple(I)I#BinaryOp(I,add)#103
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalStore(I,6)#104
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Goto(32)#105
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(Ljava/lang/Object;,0)#50
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(I,7)#51
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,NEXT,(I)I)#52
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalStore(I,8)#53
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(Ljava/lang/Object;,0)#54
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(Ljava/lang/Object;,0)#55
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(I,7)#56
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LOW,(I)I)#57
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,VARr,(I)I)#58
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(I,3)#59
net.sf.javabdd.JFactory.reorder_downSimple(I)I#ConditionalBranch(I,eq,92)#60
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(Ljava/lang/Object;,0)#61
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(Ljava/lang/Object;,0)#62
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(I,7)#63
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HIGH,(I)I)#64
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,VARr,(I)I)#65
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(I,3)#66
net.sf.javabdd.JFactory.reorder_downSimple(I)I#ConditionalBranch(I,eq,92)#67
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(Ljava/lang/Object;,0)#68
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(I,7)#69
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(Ljava/lang/Object;,0)#70
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(I,6)#71
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(I,4)#72
net.sf.javabdd.JFactory.reorder_downSimple(I)I#BinaryOp(I,add)#73
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HASH,(I)I)#74
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETNEXT,(II)V)#75
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(Ljava/lang/Object;,0)#76
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(I,6)#77
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(I,4)#78
net.sf.javabdd.JFactory.reorder_downSimple(I)I#BinaryOp(I,add)#79
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(I,7)#80
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETHASH,(II)V)#81
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(Ljava/lang/Object;,0)#82
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Get([Lnet/sf/javabdd/JFactory$levelData;,NONSTATIC,Lnet/sf/javabdd/JFactory;,levels)#83
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(I,1)#84
net.sf.javabdd.JFactory.reorder_downSimple(I)I#ArrayLoad(Ljava/lang/Object;)#85
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Dup(1,0)#86
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,nodenum)#87
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Constant(I,1)#88
net.sf.javabdd.JFactory.reorder_downSimple(I)I#BinaryOp(I,add)#89
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,nodenum)#90
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Goto(98)#91
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(I,8)#98
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalStore(I,7)#99
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Goto(47)#100
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(Ljava/lang/Object;,0)#92
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(I,7)#93
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(I,2)#94
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETNEXT,(II)V)#95
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(I,7)#96
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalStore(I,2)#97
net.sf.javabdd.JFactory.reorder_downSimple(I)I#LocalLoad(I,2)#106
net.sf.javabdd.JFactory.reorder_downSimple(I)I#Return(I)#107
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalStore(I,4)#42
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(Ljava/lang/Object;,0)#43
net.sf.javabdd.JFactory.reorder_vardown(I)I#Get([Lnet/sf/javabdd/JFactory$levelData;,NONSTATIC,Lnet/sf/javabdd/JFactory;,levels)#44
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(I,1)#45
net.sf.javabdd.JFactory.reorder_vardown(I)I#ArrayLoad(Ljava/lang/Object;)#46
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalStore(Ljava/lang/Object;,5)#47
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(Ljava/lang/Object;,5)#48
net.sf.javabdd.JFactory.reorder_vardown(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,nodenum)#49
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(Ljava/lang/Object;,5)#50
net.sf.javabdd.JFactory.reorder_vardown(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,size)#51
net.sf.javabdd.JFactory.reorder_vardown(I)I#Constant(I,3)#52
net.sf.javabdd.JFactory.reorder_vardown(I)I#BinaryOp(I,div)#53
net.sf.javabdd.JFactory.reorder_vardown(I)I#ConditionalBranch(I,lt,69)#54
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(Ljava/lang/Object;,5)#55
net.sf.javabdd.JFactory.reorder_vardown(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,nodenum)#56
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(Ljava/lang/Object;,5)#57
net.sf.javabdd.JFactory.reorder_vardown(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,size)#58
net.sf.javabdd.JFactory.reorder_vardown(I)I#Constant(I,3)#59
net.sf.javabdd.JFactory.reorder_vardown(I)I#BinaryOp(I,mul)#60
net.sf.javabdd.JFactory.reorder_vardown(I)I#Constant(I,2)#61
net.sf.javabdd.JFactory.reorder_vardown(I)I#BinaryOp(I,div)#62
net.sf.javabdd.JFactory.reorder_vardown(I)I#ConditionalBranch(I,lt,78)#63
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(Ljava/lang/Object;,0)#78
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(I,4)#79
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(I,1)#80
net.sf.javabdd.JFactory.reorder_vardown(I)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,reorder_swap,(II)V)#81
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.reorder_swap(II)V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddlevel2var)#1
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(Ljava/lang/Object;,0)#2
net.sf.javabdd.JFactory.reorder_swap(II)V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvar2level)#3
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,2)#4
net.sf.javabdd.JFactory.reorder_swap(II)V#ArrayLoad(I)#5
net.sf.javabdd.JFactory.reorder_swap(II)V#Constant(I,1)#6
net.sf.javabdd.JFactory.reorder_swap(II)V#BinaryOp(I,add)#7
net.sf.javabdd.JFactory.reorder_swap(II)V#ArrayLoad(I)#8
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalStore(I,3)#9
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,1)#10
net.sf.javabdd.JFactory.reorder_swap(II)V#Constant(I,0)#11
net.sf.javabdd.JFactory.reorder_swap(II)V#ConditionalBranch(I,eq,129)#12
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(Ljava/lang/Object;,0)#13
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,1)#14
net.sf.javabdd.JFactory.reorder_swap(II)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,NEXT,(I)I)#15
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalStore(I,4)#16
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(Ljava/lang/Object;,0)#17
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,1)#18
net.sf.javabdd.JFactory.reorder_swap(II)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LOW,(I)I)#19
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalStore(I,5)#20
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(Ljava/lang/Object;,0)#21
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,1)#22
net.sf.javabdd.JFactory.reorder_swap(II)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HIGH,(I)I)#23
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalStore(I,6)#24
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(Ljava/lang/Object;,0)#25
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,5)#26
net.sf.javabdd.JFactory.reorder_swap(II)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,VARr,(I)I)#27
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,3)#28
net.sf.javabdd.JFactory.reorder_swap(II)V#ConditionalBranch(I,ne,39)#29
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,5)#39
net.sf.javabdd.JFactory.reorder_swap(II)V#Dup(1,0)#40
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalStore(I,8)#41
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalStore(I,7)#42
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(Ljava/lang/Object;,0)#43
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,6)#44
net.sf.javabdd.JFactory.reorder_swap(II)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,VARr,(I)I)#45
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,3)#46
net.sf.javabdd.JFactory.reorder_swap(II)V#ConditionalBranch(I,ne,57)#47
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(Ljava/lang/Object;,0)#48
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,6)#49
net.sf.javabdd.JFactory.reorder_swap(II)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LOW,(I)I)#50
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalStore(I,9)#51
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(Ljava/lang/Object;,0)#52
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,6)#53
net.sf.javabdd.JFactory.reorder_swap(II)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HIGH,(I)I)#54
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalStore(I,10)#55
net.sf.javabdd.JFactory.reorder_swap(II)V#Goto(61)#56
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(Ljava/lang/Object;,0)#61
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,2)#62
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,7)#63
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,9)#64
net.sf.javabdd.JFactory.reorder_swap(II)V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,reorder_makenode,(III)I)#65
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(I,2)#0
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(I,3)#1
net.sf.javabdd.JFactory.reorder_makenode(III)I#ConditionalBranch(I,ne,8)#2
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#3
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(I,2)#4
net.sf.javabdd.JFactory.reorder_makenode(III)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,INCREF,(I)V)#5
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(I,2)#6
net.sf.javabdd.JFactory.reorder_makenode(III)I#Return(I)#7
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalStore(I,5)#66
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(Ljava/lang/Object;,0)#67
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,2)#68
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,8)#69
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,10)#70
net.sf.javabdd.JFactory.reorder_swap(II)V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,reorder_makenode,(III)I)#71
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#8
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(I,1)#9
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(I,2)#10
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(I,3)#11
net.sf.javabdd.JFactory.reorder_makenode(III)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,NODEHASH2,(III)I)#12
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalStore(I,4)#13
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#14
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(I,4)#15
net.sf.javabdd.JFactory.reorder_makenode(III)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HASH,(I)I)#16
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalStore(I,5)#17
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(I,5)#18
net.sf.javabdd.JFactory.reorder_makenode(III)I#Constant(I,0)#19
net.sf.javabdd.JFactory.reorder_makenode(III)I#ConditionalBranch(I,eq,41)#20
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#21
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(I,5)#22
net.sf.javabdd.JFactory.reorder_makenode(III)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LOW,(I)I)#23
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(I,2)#24
net.sf.javabdd.JFactory.reorder_makenode(III)I#ConditionalBranch(I,ne,36)#25
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#26
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(I,5)#27
net.sf.javabdd.JFactory.reorder_makenode(III)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HIGH,(I)I)#28
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(I,3)#29
net.sf.javabdd.JFactory.reorder_makenode(III)I#ConditionalBranch(I,ne,36)#30
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#31
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(I,5)#32
net.sf.javabdd.JFactory.reorder_makenode(III)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,INCREF,(I)V)#33
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(I,5)#34
net.sf.javabdd.JFactory.reorder_makenode(III)I#Return(I)#35
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalStore(I,6)#72
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(Ljava/lang/Object;,0)#73
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(Ljava/lang/Object;,0)#74
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,1)#75
net.sf.javabdd.JFactory.reorder_swap(II)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LOW,(I)I)#76
net.sf.javabdd.JFactory.reorder_swap(II)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,DECREF,(I)V)#77
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(Ljava/lang/Object;,0)#78
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(Ljava/lang/Object;,0)#79
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,1)#80
net.sf.javabdd.JFactory.reorder_swap(II)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HIGH,(I)I)#81
net.sf.javabdd.JFactory.reorder_swap(II)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,DECREF,(I)V)#82
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(Ljava/lang/Object;,0)#83
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,1)#84
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,3)#85
net.sf.javabdd.JFactory.reorder_swap(II)V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,SETVARr,(II)V)#86
net.sf.javabdd.JFactory.SETVARr(II)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.SETVARr(II)V#LocalLoad(I,1)#1
net.sf.javabdd.JFactory.SETVARr(II)V#LocalLoad(I,2)#2
net.sf.javabdd.JFactory.SETVARr(II)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETLEVELANDMARK,(II)V)#3
net.sf.javabdd.JFactory.SETVARr(II)V#Return(V)#4
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(Ljava/lang/Object;,0)#87
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,1)#88
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,5)#89
net.sf.javabdd.JFactory.reorder_swap(II)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETLOW,(II)V)#90
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(Ljava/lang/Object;,0)#91
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,1)#92
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,6)#93
net.sf.javabdd.JFactory.reorder_swap(II)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETHIGH,(II)V)#94
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(Ljava/lang/Object;,0)#95
net.sf.javabdd.JFactory.reorder_swap(II)V#Get([Lnet/sf/javabdd/JFactory$levelData;,NONSTATIC,Lnet/sf/javabdd/JFactory;,levels)#96
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,3)#97
net.sf.javabdd.JFactory.reorder_swap(II)V#ArrayLoad(Ljava/lang/Object;)#98
net.sf.javabdd.JFactory.reorder_swap(II)V#Dup(1,0)#99
net.sf.javabdd.JFactory.reorder_swap(II)V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,nodenum)#100
net.sf.javabdd.JFactory.reorder_swap(II)V#Constant(I,1)#101
net.sf.javabdd.JFactory.reorder_swap(II)V#BinaryOp(I,add)#102
net.sf.javabdd.JFactory.reorder_swap(II)V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,nodenum)#103
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(Ljava/lang/Object;,0)#104
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(Ljava/lang/Object;,0)#105
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,1)#106
net.sf.javabdd.JFactory.reorder_swap(II)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,VARr,(I)I)#107
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(Ljava/lang/Object;,0)#108
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,1)#109
net.sf.javabdd.JFactory.reorder_swap(II)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LOW,(I)I)#110
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(Ljava/lang/Object;,0)#111
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,1)#112
net.sf.javabdd.JFactory.reorder_swap(II)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HIGH,(I)I)#113
net.sf.javabdd.JFactory.reorder_swap(II)V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,NODEHASH2,(III)I)#114
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalStore(I,11)#115
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(Ljava/lang/Object;,0)#116
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,1)#117
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(Ljava/lang/Object;,0)#118
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,11)#119
net.sf.javabdd.JFactory.reorder_swap(II)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HASH,(I)I)#120
net.sf.javabdd.JFactory.reorder_swap(II)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETNEXT,(II)V)#121
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(Ljava/lang/Object;,0)#122
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,11)#123
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,1)#124
net.sf.javabdd.JFactory.reorder_swap(II)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETHASH,(II)V)#125
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalLoad(I,4)#126
net.sf.javabdd.JFactory.reorder_swap(II)V#LocalStore(I,1)#127
net.sf.javabdd.JFactory.reorder_swap(II)V#Goto(10)#128
net.sf.javabdd.JFactory.reorder_swap(II)V#Return(V)#129
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(Ljava/lang/Object;,0)#82
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(I,1)#83
net.sf.javabdd.JFactory.reorder_vardown(I)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,reorder_localGbc,(I)V)#84
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddlevel2var)#1
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(Ljava/lang/Object;,0)#2
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvar2level)#3
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(I,1)#4
net.sf.javabdd.JFactory.reorder_localGbc(I)V#ArrayLoad(I)#5
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Constant(I,1)#6
net.sf.javabdd.JFactory.reorder_localGbc(I)V#BinaryOp(I,add)#7
net.sf.javabdd.JFactory.reorder_localGbc(I)V#ArrayLoad(I)#8
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalStore(I,2)#9
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(Ljava/lang/Object;,0)#10
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Get([Lnet/sf/javabdd/JFactory$levelData;,NONSTATIC,Lnet/sf/javabdd/JFactory;,levels)#11
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(I,2)#12
net.sf.javabdd.JFactory.reorder_localGbc(I)V#ArrayLoad(Ljava/lang/Object;)#13
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,start)#14
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalStore(I,3)#15
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(Ljava/lang/Object;,0)#16
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Get([Lnet/sf/javabdd/JFactory$levelData;,NONSTATIC,Lnet/sf/javabdd/JFactory;,levels)#17
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(I,2)#18
net.sf.javabdd.JFactory.reorder_localGbc(I)V#ArrayLoad(Ljava/lang/Object;)#19
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,size)#20
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalStore(I,4)#21
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Constant(I,0)#22
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalStore(I,5)#23
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(I,5)#24
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(I,4)#25
net.sf.javabdd.JFactory.reorder_localGbc(I)V#ConditionalBranch(I,ge,107)#26
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(I,5)#27
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(I,3)#28
net.sf.javabdd.JFactory.reorder_localGbc(I)V#BinaryOp(I,add)#29
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalStore(I,6)#30
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(Ljava/lang/Object;,0)#31
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(I,6)#32
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HASH,(I)I)#33
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalStore(I,7)#34
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(Ljava/lang/Object;,0)#35
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(I,6)#36
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Constant(I,0)#37
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETHASH,(II)V)#38
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(I,7)#39
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Constant(I,0)#40
net.sf.javabdd.JFactory.reorder_localGbc(I)V#ConditionalBranch(I,eq,102)#41
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(Ljava/lang/Object;,0)#42
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(I,7)#43
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,NEXT,(I)I)#44
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalStore(I,8)#45
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(Ljava/lang/Object;,0)#46
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(I,7)#47
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HASREF,(I)Z)#48
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Constant(I,0)#49
net.sf.javabdd.JFactory.reorder_localGbc(I)V#ConditionalBranch(I,eq,62)#50
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(Ljava/lang/Object;,0)#51
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(I,7)#52
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(Ljava/lang/Object;,0)#53
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(I,6)#54
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HASH,(I)I)#55
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETNEXT,(II)V)#56
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(Ljava/lang/Object;,0)#57
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(I,6)#58
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(I,7)#59
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETHASH,(II)V)#60
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Goto(99)#61
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(I,8)#99
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalStore(I,7)#100
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Goto(39)#101
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(I,5)#102
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Constant(I,1)#103
net.sf.javabdd.JFactory.reorder_localGbc(I)V#BinaryOp(I,add)#104
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalStore(I,5)#105
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Goto(24)#106
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Return(V)#107
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(Ljava/lang/Object;,0)#85
net.sf.javabdd.JFactory.reorder_vardown(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddlevel2var)#86
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(I,3)#87
net.sf.javabdd.JFactory.reorder_vardown(I)I#ArrayLoad(I)#88
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalStore(I,2)#89
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(Ljava/lang/Object;,0)#90
net.sf.javabdd.JFactory.reorder_vardown(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddlevel2var)#91
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(I,3)#92
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(Ljava/lang/Object;,0)#93
net.sf.javabdd.JFactory.reorder_vardown(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddlevel2var)#94
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(I,3)#95
net.sf.javabdd.JFactory.reorder_vardown(I)I#Constant(I,1)#96
net.sf.javabdd.JFactory.reorder_vardown(I)I#BinaryOp(I,add)#97
net.sf.javabdd.JFactory.reorder_vardown(I)I#ArrayLoad(I)#98
net.sf.javabdd.JFactory.reorder_vardown(I)I#ArrayStore(I)#99
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(Ljava/lang/Object;,0)#100
net.sf.javabdd.JFactory.reorder_vardown(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddlevel2var)#101
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(I,3)#102
net.sf.javabdd.JFactory.reorder_vardown(I)I#Constant(I,1)#103
net.sf.javabdd.JFactory.reorder_vardown(I)I#BinaryOp(I,add)#104
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(I,2)#105
net.sf.javabdd.JFactory.reorder_vardown(I)I#ArrayStore(I)#106
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(Ljava/lang/Object;,0)#107
net.sf.javabdd.JFactory.reorder_vardown(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvar2level)#108
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(I,1)#109
net.sf.javabdd.JFactory.reorder_vardown(I)I#ArrayLoad(I)#110
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalStore(I,2)#111
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(Ljava/lang/Object;,0)#112
net.sf.javabdd.JFactory.reorder_vardown(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvar2level)#113
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(I,1)#114
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(Ljava/lang/Object;,0)#115
net.sf.javabdd.JFactory.reorder_vardown(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvar2level)#116
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(Ljava/lang/Object;,0)#117
net.sf.javabdd.JFactory.reorder_vardown(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddlevel2var)#118
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(I,3)#119
net.sf.javabdd.JFactory.reorder_vardown(I)I#ArrayLoad(I)#120
net.sf.javabdd.JFactory.reorder_vardown(I)I#ArrayLoad(I)#121
net.sf.javabdd.JFactory.reorder_vardown(I)I#ArrayStore(I)#122
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(Ljava/lang/Object;,0)#123
net.sf.javabdd.JFactory.reorder_vardown(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvar2level)#124
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(Ljava/lang/Object;,0)#125
net.sf.javabdd.JFactory.reorder_vardown(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddlevel2var)#126
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(I,3)#127
net.sf.javabdd.JFactory.reorder_vardown(I)I#ArrayLoad(I)#128
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(I,2)#129
net.sf.javabdd.JFactory.reorder_vardown(I)I#ArrayStore(I)#130
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(Ljava/lang/Object;,0)#131
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(I,3)#132
net.sf.javabdd.JFactory.reorder_vardown(I)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_pairs_vardown,(I)V)#133
net.sf.javabdd.JFactory.bdd_pairs_vardown(I)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.bdd_pairs_vardown(I)V#Get(Lnet/sf/javabdd/JFactory$bddPair;,NONSTATIC,Lnet/sf/javabdd/JFactory;,pairs)#1
net.sf.javabdd.JFactory.bdd_pairs_vardown(I)V#LocalStore(Ljava/lang/Object;,2)#2
net.sf.javabdd.JFactory.bdd_pairs_vardown(I)V#LocalLoad(Ljava/lang/Object;,2)#3
net.sf.javabdd.JFactory.bdd_pairs_vardown(I)V#Constant(L;,null)#4
net.sf.javabdd.JFactory.bdd_pairs_vardown(I)V#ConditionalBranch(Ljava/lang/Object;,eq,42)#5
net.sf.javabdd.JFactory.bdd_pairs_vardown(I)V#Return(V)#42
net.sf.javabdd.JFactory.reorder_vardown(I)I#LocalLoad(Ljava/lang/Object;,0)#134
net.sf.javabdd.JFactory.reorder_vardown(I)I#Get(Z,NONSTATIC,Lnet/sf/javabdd/JFactory;,resizedInMakenode)#135
net.sf.javabdd.JFactory.reorder_vardown(I)I#Constant(I,0)#136
net.sf.javabdd.JFactory.reorder_vardown(I)I#ConditionalBranch(I,eq,140)#137
net.sf.javabdd.JFactory.reorder_vardown(I)I#Constant(I,0)#140
net.sf.javabdd.JFactory.reorder_vardown(I)I#Return(I)#141
net.sf.javabdd.JFactory.reorder_varup(I)I#Return(I)#29
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#Pop(1)#30
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#Goto(21)#31
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#LocalLoad(I,2)#32
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#Constant(I,1)#33
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#BinaryOp(I,add)#34
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#LocalStore(I,2)#35
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#Goto(13)#36
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#LocalLoad(Ljava/lang/Object;,0)#37
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,reorder_done,()V)#38
net.sf.javabdd.JFactory.reorder_done()V#Constant(I,0)#0
net.sf.javabdd.JFactory.reorder_done()V#LocalStore(I,1)#1
net.sf.javabdd.JFactory.reorder_done()V#LocalLoad(I,1)#2
net.sf.javabdd.JFactory.reorder_done()V#LocalLoad(Ljava/lang/Object;,0)#3
net.sf.javabdd.JFactory.reorder_done()V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,extrootsize)#4
net.sf.javabdd.JFactory.reorder_done()V#ConditionalBranch(I,ge,17)#5
net.sf.javabdd.JFactory.reorder_done()V#LocalLoad(Ljava/lang/Object;,0)#6
net.sf.javabdd.JFactory.reorder_done()V#LocalLoad(Ljava/lang/Object;,0)#7
net.sf.javabdd.JFactory.reorder_done()V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,extroots)#8
net.sf.javabdd.JFactory.reorder_done()V#LocalLoad(I,1)#9
net.sf.javabdd.JFactory.reorder_done()V#ArrayLoad(I)#10
net.sf.javabdd.JFactory.reorder_done()V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETMARK,(I)V)#11
net.sf.javabdd.JFactory.reorder_done()V#LocalLoad(I,1)#12
net.sf.javabdd.JFactory.reorder_done()V#Constant(I,1)#13
net.sf.javabdd.JFactory.reorder_done()V#BinaryOp(I,add)#14
net.sf.javabdd.JFactory.reorder_done()V#LocalStore(I,1)#15
net.sf.javabdd.JFactory.reorder_done()V#Goto(2)#16
net.sf.javabdd.JFactory.reorder_done()V#Constant(I,2)#17
net.sf.javabdd.JFactory.reorder_done()V#LocalStore(I,1)#18
net.sf.javabdd.JFactory.reorder_done()V#LocalLoad(I,1)#19
net.sf.javabdd.JFactory.reorder_done()V#LocalLoad(Ljava/lang/Object;,0)#20
net.sf.javabdd.JFactory.reorder_done()V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodesize)#21
net.sf.javabdd.JFactory.reorder_done()V#ConditionalBranch(I,ge,49)#22
net.sf.javabdd.JFactory.reorder_done()V#LocalLoad(Ljava/lang/Object;,0)#23
net.sf.javabdd.JFactory.reorder_done()V#LocalLoad(I,1)#24
net.sf.javabdd.JFactory.reorder_done()V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,MARKED,(I)Z)#25
net.sf.javabdd.JFactory.reorder_done()V#Constant(I,0)#26
net.sf.javabdd.JFactory.reorder_done()V#ConditionalBranch(I,eq,32)#27
net.sf.javabdd.JFactory.reorder_done()V#LocalLoad(Ljava/lang/Object;,0)#28
net.sf.javabdd.JFactory.reorder_done()V#LocalLoad(I,1)#29
net.sf.javabdd.JFactory.reorder_done()V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,UNMARK,(I)V)#30
net.sf.javabdd.JFactory.reorder_done()V#Goto(35)#31
net.sf.javabdd.JFactory.reorder_done()V#LocalLoad(Ljava/lang/Object;,0)#35
net.sf.javabdd.JFactory.reorder_done()V#LocalLoad(I,1)#36
net.sf.javabdd.JFactory.reorder_done()V#LocalLoad(Ljava/lang/Object;,0)#37
net.sf.javabdd.JFactory.reorder_done()V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvar2level)#38
net.sf.javabdd.JFactory.reorder_done()V#LocalLoad(Ljava/lang/Object;,0)#39
net.sf.javabdd.JFactory.reorder_done()V#LocalLoad(I,1)#40
net.sf.javabdd.JFactory.reorder_done()V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LEVELANDMARK,(I)I)#41
net.sf.javabdd.JFactory.reorder_done()V#ArrayLoad(I)#42
net.sf.javabdd.JFactory.reorder_done()V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETLEVELANDMARK,(II)V)#43
net.sf.javabdd.JFactory.reorder_done()V#LocalLoad(I,1)#44
net.sf.javabdd.JFactory.reorder_done()V#Constant(I,1)#45
net.sf.javabdd.JFactory.reorder_done()V#BinaryOp(I,add)#46
net.sf.javabdd.JFactory.reorder_done()V#LocalStore(I,1)#47
net.sf.javabdd.JFactory.reorder_done()V#Goto(19)#48
net.sf.javabdd.JFactory.reorder_done()V#LocalLoad(Ljava/lang/Object;,0)#32
net.sf.javabdd.JFactory.reorder_done()V#LocalLoad(I,1)#33
net.sf.javabdd.JFactory.reorder_done()V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,CLEARREF,(I)V)#34
net.sf.javabdd.JFactory.CLEARREF(I)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.CLEARREF(I)V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodes)#1
net.sf.javabdd.JFactory.CLEARREF(I)V#LocalLoad(I,1)#2
net.sf.javabdd.JFactory.CLEARREF(I)V#Constant(I,5)#3
net.sf.javabdd.JFactory.CLEARREF(I)V#BinaryOp(I,mul)#4
net.sf.javabdd.JFactory.CLEARREF(I)V#Constant(I,0)#5
net.sf.javabdd.JFactory.CLEARREF(I)V#BinaryOp(I,add)#6
net.sf.javabdd.JFactory.CLEARREF(I)V#Dup(2,0)#7
net.sf.javabdd.JFactory.CLEARREF(I)V#ArrayLoad(I)#8
net.sf.javabdd.JFactory.CLEARREF(I)V#Constant(I,4194303)#9
net.sf.javabdd.JFactory.CLEARREF(I)V#BinaryOp(I,and)#10
net.sf.javabdd.JFactory.CLEARREF(I)V#ArrayStore(I)#11
net.sf.javabdd.JFactory.CLEARREF(I)V#Return(V)#12
net.sf.javabdd.JFactory.reorder_done()V#LocalLoad(Ljava/lang/Object;,0)#49
net.sf.javabdd.JFactory.reorder_done()V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,extroots)#50
net.sf.javabdd.JFactory.reorder_done()V#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,free,(Ljava/lang/Object;)V)#51
net.sf.javabdd.JFactory.reorder_done()V#LocalLoad(Ljava/lang/Object;,0)#52
net.sf.javabdd.JFactory.reorder_done()V#Get([Lnet/sf/javabdd/JFactory$levelData;,NONSTATIC,Lnet/sf/javabdd/JFactory;,levels)#53
net.sf.javabdd.JFactory.reorder_done()V#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,free,(Ljava/lang/Object;)V)#54
net.sf.javabdd.JFactory.reorder_done()V#LocalLoad(Ljava/lang/Object;,0)#55
net.sf.javabdd.JFactory.reorder_done()V#LocalLoad(Ljava/lang/Object;,0)#56
net.sf.javabdd.JFactory.reorder_done()V#Get(Lnet/sf/javabdd/JFactory$imatrix;,NONSTATIC,Lnet/sf/javabdd/JFactory;,iactmtx)#57
net.sf.javabdd.JFactory.reorder_done()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,imatrixDelete,(Lnet/sf/javabdd/JFactory$imatrix;)V)#58
net.sf.javabdd.JFactory.imatrixDelete(Lnet/sf/javabdd/JFactory$imatrix;)V#Constant(I,0)#0
net.sf.javabdd.JFactory.imatrixDelete(Lnet/sf/javabdd/JFactory$imatrix;)V#LocalStore(I,2)#1
net.sf.javabdd.JFactory.imatrixDelete(Lnet/sf/javabdd/JFactory$imatrix;)V#LocalLoad(I,2)#2
net.sf.javabdd.JFactory.imatrixDelete(Lnet/sf/javabdd/JFactory$imatrix;)V#LocalLoad(Ljava/lang/Object;,1)#3
net.sf.javabdd.JFactory.imatrixDelete(Lnet/sf/javabdd/JFactory$imatrix;)V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$imatrix;,size)#4
net.sf.javabdd.JFactory.imatrixDelete(Lnet/sf/javabdd/JFactory$imatrix;)V#ConditionalBranch(I,ge,21)#5
net.sf.javabdd.JFactory.imatrixDelete(Lnet/sf/javabdd/JFactory$imatrix;)V#LocalLoad(Ljava/lang/Object;,1)#6
net.sf.javabdd.JFactory.imatrixDelete(Lnet/sf/javabdd/JFactory$imatrix;)V#Get([[B,NONSTATIC,Lnet/sf/javabdd/JFactory$imatrix;,rows)#7
net.sf.javabdd.JFactory.imatrixDelete(Lnet/sf/javabdd/JFactory$imatrix;)V#LocalLoad(I,2)#8
net.sf.javabdd.JFactory.imatrixDelete(Lnet/sf/javabdd/JFactory$imatrix;)V#ArrayLoad(Ljava/lang/Object;)#9
net.sf.javabdd.JFactory.imatrixDelete(Lnet/sf/javabdd/JFactory$imatrix;)V#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,free,(Ljava/lang/Object;)V)#10
net.sf.javabdd.JFactory.imatrixDelete(Lnet/sf/javabdd/JFactory$imatrix;)V#LocalLoad(Ljava/lang/Object;,1)#11
net.sf.javabdd.JFactory.imatrixDelete(Lnet/sf/javabdd/JFactory$imatrix;)V#Get([[B,NONSTATIC,Lnet/sf/javabdd/JFactory$imatrix;,rows)#12
net.sf.javabdd.JFactory.imatrixDelete(Lnet/sf/javabdd/JFactory$imatrix;)V#LocalLoad(I,2)#13
net.sf.javabdd.JFactory.imatrixDelete(Lnet/sf/javabdd/JFactory$imatrix;)V#Constant(L;,null)#14
net.sf.javabdd.JFactory.imatrixDelete(Lnet/sf/javabdd/JFactory$imatrix;)V#ArrayStore(Ljava/lang/Object;)#15
net.sf.javabdd.JFactory.imatrixDelete(Lnet/sf/javabdd/JFactory$imatrix;)V#LocalLoad(I,2)#16
net.sf.javabdd.JFactory.imatrixDelete(Lnet/sf/javabdd/JFactory$imatrix;)V#Constant(I,1)#17
net.sf.javabdd.JFactory.imatrixDelete(Lnet/sf/javabdd/JFactory$imatrix;)V#BinaryOp(I,add)#18
net.sf.javabdd.JFactory.imatrixDelete(Lnet/sf/javabdd/JFactory$imatrix;)V#LocalStore(I,2)#19
net.sf.javabdd.JFactory.imatrixDelete(Lnet/sf/javabdd/JFactory$imatrix;)V#Goto(2)#20
net.sf.javabdd.JFactory.imatrixDelete(Lnet/sf/javabdd/JFactory$imatrix;)V#LocalLoad(Ljava/lang/Object;,1)#21
net.sf.javabdd.JFactory.imatrixDelete(Lnet/sf/javabdd/JFactory$imatrix;)V#Get([[B,NONSTATIC,Lnet/sf/javabdd/JFactory$imatrix;,rows)#22
net.sf.javabdd.JFactory.imatrixDelete(Lnet/sf/javabdd/JFactory$imatrix;)V#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,free,(Ljava/lang/Object;)V)#23
net.sf.javabdd.JFactory.imatrixDelete(Lnet/sf/javabdd/JFactory$imatrix;)V#LocalLoad(Ljava/lang/Object;,1)#24
net.sf.javabdd.JFactory.imatrixDelete(Lnet/sf/javabdd/JFactory$imatrix;)V#Constant(L;,null)#25
net.sf.javabdd.JFactory.imatrixDelete(Lnet/sf/javabdd/JFactory$imatrix;)V#CheckCast([[B)#26
net.sf.javabdd.JFactory.imatrixDelete(Lnet/sf/javabdd/JFactory$imatrix;)V#Put([[B,NONSTATIC,Lnet/sf/javabdd/JFactory$imatrix;,rows)#27
net.sf.javabdd.JFactory.imatrixDelete(Lnet/sf/javabdd/JFactory$imatrix;)V#LocalLoad(Ljava/lang/Object;,1)#28
net.sf.javabdd.JFactory.imatrixDelete(Lnet/sf/javabdd/JFactory$imatrix;)V#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,free,(Ljava/lang/Object;)V)#29
net.sf.javabdd.JFactory.imatrixDelete(Lnet/sf/javabdd/JFactory$imatrix;)V#Return(V)#30
net.sf.javabdd.JFactory.reorder_done()V#LocalLoad(Ljava/lang/Object;,0)#59
net.sf.javabdd.JFactory.reorder_done()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_gbc,()V)#60
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.bdd_gbc()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,clock,()J)#1
net.sf.javabdd.JFactory.clock()J#Invoke(STATIC,Ljava/lang/System;,currentTimeMillis,()J)#0
net.sf.javabdd.JFactory.clock()J#Return(J)#1
net.sf.javabdd.JFactory.bdd_gbc()V#LocalStore(J,5)#2
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#3
net.sf.javabdd.JFactory.bdd_gbc()V#Get(Lnet/sf/javabdd/BDDFactory$GCStats;,NONSTATIC,Lnet/sf/javabdd/JFactory;,gcstats)#4
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#5
net.sf.javabdd.JFactory.bdd_gbc()V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodesize)#6
net.sf.javabdd.JFactory.bdd_gbc()V#Put(I,NONSTATIC,Lnet/sf/javabdd/BDDFactory$GCStats;,nodes)#7
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#8
net.sf.javabdd.JFactory.bdd_gbc()V#Get(Lnet/sf/javabdd/BDDFactory$GCStats;,NONSTATIC,Lnet/sf/javabdd/JFactory;,gcstats)#9
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#10
net.sf.javabdd.JFactory.bdd_gbc()V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreenum)#11
net.sf.javabdd.JFactory.bdd_gbc()V#Put(I,NONSTATIC,Lnet/sf/javabdd/BDDFactory$GCStats;,freenodes)#12
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#13
net.sf.javabdd.JFactory.bdd_gbc()V#Get(Lnet/sf/javabdd/BDDFactory$GCStats;,NONSTATIC,Lnet/sf/javabdd/JFactory;,gcstats)#14
net.sf.javabdd.JFactory.bdd_gbc()V#Constant(J,0)#15
net.sf.javabdd.JFactory.bdd_gbc()V#Put(J,NONSTATIC,Lnet/sf/javabdd/BDDFactory$GCStats;,time)#16
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#17
net.sf.javabdd.JFactory.bdd_gbc()V#Get(Lnet/sf/javabdd/BDDFactory$GCStats;,NONSTATIC,Lnet/sf/javabdd/JFactory;,gcstats)#18
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#19
net.sf.javabdd.JFactory.bdd_gbc()V#Get(J,NONSTATIC,Lnet/sf/javabdd/JFactory;,gbcclock)#20
net.sf.javabdd.JFactory.bdd_gbc()V#Put(J,NONSTATIC,Lnet/sf/javabdd/BDDFactory$GCStats;,sumtime)#21
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#22
net.sf.javabdd.JFactory.bdd_gbc()V#Get(Lnet/sf/javabdd/BDDFactory$GCStats;,NONSTATIC,Lnet/sf/javabdd/JFactory;,gcstats)#23
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#24
net.sf.javabdd.JFactory.bdd_gbc()V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,gbcollectnum)#25
net.sf.javabdd.JFactory.bdd_gbc()V#Put(I,NONSTATIC,Lnet/sf/javabdd/BDDFactory$GCStats;,num)#26
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#27
net.sf.javabdd.JFactory.bdd_gbc()V#Constant(I,1)#28
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#29
net.sf.javabdd.JFactory.bdd_gbc()V#Get(Lnet/sf/javabdd/BDDFactory$GCStats;,NONSTATIC,Lnet/sf/javabdd/JFactory;,gcstats)#30
net.sf.javabdd.JFactory.bdd_gbc()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,gbc_handler,(ZLnet/sf/javabdd/BDDFactory$GCStats;)V)#31
net.sf.javabdd.BDDFactory.gbc_handler(ZLnet/sf/javabdd/BDDFactory$GCStats;)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.BDDFactory.gbc_handler(ZLnet/sf/javabdd/BDDFactory$GCStats;)V#Get(Ljava/util/List;,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,gc_callbacks)#1
net.sf.javabdd.BDDFactory.gbc_handler(ZLnet/sf/javabdd/BDDFactory$GCStats;)V#Constant(L;,null)#2
net.sf.javabdd.BDDFactory.gbc_handler(ZLnet/sf/javabdd/BDDFactory$GCStats;)V#ConditionalBranch(Ljava/lang/Object;,ne,14)#3
net.sf.javabdd.BDDFactory.gbc_handler(ZLnet/sf/javabdd/BDDFactory$GCStats;)V#LocalLoad(Ljava/lang/Object;,0)#4
net.sf.javabdd.BDDFactory.gbc_handler(ZLnet/sf/javabdd/BDDFactory$GCStats;)V#Get(I,NONSTATIC,Lnet/sf/javabdd/BDDFactory;,verbose)#5
net.sf.javabdd.BDDFactory.gbc_handler(ZLnet/sf/javabdd/BDDFactory$GCStats;)V#Constant(I,2)#6
net.sf.javabdd.BDDFactory.gbc_handler(ZLnet/sf/javabdd/BDDFactory$GCStats;)V#ConditionalBranch(I,gt,10)#7
net.sf.javabdd.BDDFactory.gbc_handler(ZLnet/sf/javabdd/BDDFactory$GCStats;)V#Constant(I,1)#8
net.sf.javabdd.BDDFactory.gbc_handler(ZLnet/sf/javabdd/BDDFactory$GCStats;)V#Goto(11)#9
net.sf.javabdd.BDDFactory.gbc_handler(ZLnet/sf/javabdd/BDDFactory$GCStats;)V#LocalLoad(Ljava/lang/Object;,2)#11
net.sf.javabdd.BDDFactory.gbc_handler(ZLnet/sf/javabdd/BDDFactory$GCStats;)V#Invoke(STATIC,Lnet/sf/javabdd/BDDFactory;,bdd_default_gbchandler,(ZLnet/sf/javabdd/BDDFactory$GCStats;)V)#12
net.sf.javabdd.BDDFactory.bdd_default_gbchandler(ZLnet/sf/javabdd/BDDFactory$GCStats;)V#LocalLoad(I,0)#0
net.sf.javabdd.BDDFactory.bdd_default_gbchandler(ZLnet/sf/javabdd/BDDFactory$GCStats;)V#Constant(I,0)#1
net.sf.javabdd.BDDFactory.bdd_default_gbchandler(ZLnet/sf/javabdd/BDDFactory$GCStats;)V#ConditionalBranch(I,ne,7)#2
net.sf.javabdd.BDDFactory.bdd_default_gbchandler(ZLnet/sf/javabdd/BDDFactory$GCStats;)V#Return(V)#7
net.sf.javabdd.BDDFactory.gbc_handler(ZLnet/sf/javabdd/BDDFactory$GCStats;)V#Goto(28)#13
net.sf.javabdd.BDDFactory.gbc_handler(ZLnet/sf/javabdd/BDDFactory$GCStats;)V#Return(V)#28
net.sf.javabdd.JFactory.bdd_gbc()V#Constant(I,0)#32
net.sf.javabdd.JFactory.bdd_gbc()V#LocalStore(I,1)#33
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(I,1)#34
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#35
net.sf.javabdd.JFactory.bdd_gbc()V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddrefstacktop)#36
net.sf.javabdd.JFactory.bdd_gbc()V#ConditionalBranch(I,ge,49)#37
net.sf.javabdd.JFactory.bdd_gbc()V#Constant(I,0)#49
net.sf.javabdd.JFactory.bdd_gbc()V#LocalStore(I,2)#50
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(I,2)#51
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#52
net.sf.javabdd.JFactory.bdd_gbc()V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodesize)#53
net.sf.javabdd.JFactory.bdd_gbc()V#ConditionalBranch(I,ge,72)#54
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#55
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(I,2)#56
net.sf.javabdd.JFactory.bdd_gbc()V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HASREF,(I)Z)#57
net.sf.javabdd.JFactory.bdd_gbc()V#Constant(I,0)#58
net.sf.javabdd.JFactory.bdd_gbc()V#ConditionalBranch(I,eq,63)#59
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#60
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(I,2)#61
net.sf.javabdd.JFactory.bdd_gbc()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_mark,(I)V)#62
net.sf.javabdd.JFactory.bdd_mark(I)V#LocalLoad(I,1)#0
net.sf.javabdd.JFactory.bdd_mark(I)V#Constant(I,2)#1
net.sf.javabdd.JFactory.bdd_mark(I)V#ConditionalBranch(I,ge,4)#2
net.sf.javabdd.JFactory.bdd_mark(I)V#Return(V)#3
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#63
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(I,2)#64
net.sf.javabdd.JFactory.bdd_gbc()V#Constant(I,0)#65
net.sf.javabdd.JFactory.bdd_gbc()V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETHASH,(II)V)#66
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(I,2)#67
net.sf.javabdd.JFactory.bdd_gbc()V#Constant(I,1)#68
net.sf.javabdd.JFactory.bdd_gbc()V#BinaryOp(I,add)#69
net.sf.javabdd.JFactory.bdd_gbc()V#LocalStore(I,2)#70
net.sf.javabdd.JFactory.bdd_gbc()V#Goto(51)#71
net.sf.javabdd.JFactory.bdd_mark(I)V#LocalLoad(Ljava/lang/Object;,0)#4
net.sf.javabdd.JFactory.bdd_mark(I)V#LocalLoad(I,1)#5
net.sf.javabdd.JFactory.bdd_mark(I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,MARKED,(I)Z)#6
net.sf.javabdd.JFactory.bdd_mark(I)V#Constant(I,0)#7
net.sf.javabdd.JFactory.bdd_mark(I)V#ConditionalBranch(I,ne,14)#8
net.sf.javabdd.JFactory.bdd_mark(I)V#LocalLoad(Ljava/lang/Object;,0)#9
net.sf.javabdd.JFactory.bdd_mark(I)V#LocalLoad(I,1)#10
net.sf.javabdd.JFactory.bdd_mark(I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LOW,(I)I)#11
net.sf.javabdd.JFactory.bdd_mark(I)V#Constant(I,-1)#12
net.sf.javabdd.JFactory.bdd_mark(I)V#ConditionalBranch(I,ne,15)#13
net.sf.javabdd.JFactory.bdd_mark(I)V#LocalLoad(Ljava/lang/Object;,0)#15
net.sf.javabdd.JFactory.bdd_mark(I)V#LocalLoad(I,1)#16
net.sf.javabdd.JFactory.bdd_mark(I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETMARK,(I)V)#17
net.sf.javabdd.JFactory.bdd_mark(I)V#LocalLoad(Ljava/lang/Object;,0)#18
net.sf.javabdd.JFactory.bdd_mark(I)V#LocalLoad(Ljava/lang/Object;,0)#19
net.sf.javabdd.JFactory.bdd_mark(I)V#LocalLoad(I,1)#20
net.sf.javabdd.JFactory.bdd_mark(I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LOW,(I)I)#21
net.sf.javabdd.JFactory.bdd_mark(I)V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_mark,(I)V)#22
net.sf.javabdd.JFactory.bdd_mark(I)V#LocalLoad(Ljava/lang/Object;,0)#23
net.sf.javabdd.JFactory.bdd_mark(I)V#LocalLoad(Ljava/lang/Object;,0)#24
net.sf.javabdd.JFactory.bdd_mark(I)V#LocalLoad(I,1)#25
net.sf.javabdd.JFactory.bdd_mark(I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HIGH,(I)I)#26
net.sf.javabdd.JFactory.bdd_mark(I)V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_mark,(I)V)#27
net.sf.javabdd.JFactory.bdd_mark(I)V#Return(V)#28
net.sf.javabdd.JFactory.bdd_mark(I)V#Return(V)#14
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#72
net.sf.javabdd.JFactory.bdd_gbc()V#Constant(I,0)#73
net.sf.javabdd.JFactory.bdd_gbc()V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreepos)#74
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#75
net.sf.javabdd.JFactory.bdd_gbc()V#Constant(I,0)#76
net.sf.javabdd.JFactory.bdd_gbc()V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreenum)#77
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#78
net.sf.javabdd.JFactory.bdd_gbc()V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodesize)#79
net.sf.javabdd.JFactory.bdd_gbc()V#Constant(I,1)#80
net.sf.javabdd.JFactory.bdd_gbc()V#BinaryOp(I,sub)#81
net.sf.javabdd.JFactory.bdd_gbc()V#LocalStore(I,2)#82
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(I,2)#83
net.sf.javabdd.JFactory.bdd_gbc()V#Constant(I,2)#84
net.sf.javabdd.JFactory.bdd_gbc()V#ConditionalBranch(I,lt,145)#85
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#86
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(I,2)#87
net.sf.javabdd.JFactory.bdd_gbc()V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,MARKED,(I)Z)#88
net.sf.javabdd.JFactory.bdd_gbc()V#Constant(I,0)#89
net.sf.javabdd.JFactory.bdd_gbc()V#ConditionalBranch(I,eq,122)#90
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#122
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(I,2)#123
net.sf.javabdd.JFactory.bdd_gbc()V#Constant(I,-1)#124
net.sf.javabdd.JFactory.bdd_gbc()V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETLOW,(II)V)#125
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#126
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(I,2)#127
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#128
net.sf.javabdd.JFactory.bdd_gbc()V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreepos)#129
net.sf.javabdd.JFactory.bdd_gbc()V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETNEXT,(II)V)#130
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#131
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(I,2)#132
net.sf.javabdd.JFactory.bdd_gbc()V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreepos)#133
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#134
net.sf.javabdd.JFactory.bdd_gbc()V#Dup(1,0)#135
net.sf.javabdd.JFactory.bdd_gbc()V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreenum)#136
net.sf.javabdd.JFactory.bdd_gbc()V#Constant(I,1)#137
net.sf.javabdd.JFactory.bdd_gbc()V#BinaryOp(I,add)#138
net.sf.javabdd.JFactory.bdd_gbc()V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreenum)#139
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(I,2)#140
net.sf.javabdd.JFactory.bdd_gbc()V#Constant(I,-1)#141
net.sf.javabdd.JFactory.bdd_gbc()V#BinaryOp(I,add)#142
net.sf.javabdd.JFactory.bdd_gbc()V#LocalStore(I,2)#143
net.sf.javabdd.JFactory.bdd_gbc()V#Goto(83)#144
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#91
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(I,2)#92
net.sf.javabdd.JFactory.bdd_gbc()V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LOW,(I)I)#93
net.sf.javabdd.JFactory.bdd_gbc()V#Constant(I,-1)#94
net.sf.javabdd.JFactory.bdd_gbc()V#ConditionalBranch(I,eq,122)#95
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#96
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(I,2)#97
net.sf.javabdd.JFactory.bdd_gbc()V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,UNMARK,(I)V)#98
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#99
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#100
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(I,2)#101
net.sf.javabdd.JFactory.bdd_gbc()V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LEVEL,(I)I)#102
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#103
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(I,2)#104
net.sf.javabdd.JFactory.bdd_gbc()V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LOW,(I)I)#105
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#106
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(I,2)#107
net.sf.javabdd.JFactory.bdd_gbc()V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HIGH,(I)I)#108
net.sf.javabdd.JFactory.bdd_gbc()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,NODEHASH,(III)I)#109
net.sf.javabdd.JFactory.bdd_gbc()V#LocalStore(I,7)#110
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#111
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(I,2)#112
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#113
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(I,7)#114
net.sf.javabdd.JFactory.bdd_gbc()V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HASH,(I)I)#115
net.sf.javabdd.JFactory.bdd_gbc()V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETNEXT,(II)V)#116
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#117
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(I,7)#118
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(I,2)#119
net.sf.javabdd.JFactory.bdd_gbc()V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETHASH,(II)V)#120
net.sf.javabdd.JFactory.bdd_gbc()V#Goto(140)#121
net.sf.javabdd.JFactory.bdd_gbc()V#Get(Z,STATIC,Lnet/sf/javabdd/JFactory;,FLUSH_CACHE_ON_GC)#145
net.sf.javabdd.JFactory.bdd_gbc()V#Constant(I,0)#146
net.sf.javabdd.JFactory.bdd_gbc()V#ConditionalBranch(I,eq,151)#147
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#148
net.sf.javabdd.JFactory.bdd_gbc()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_operator_reset,()V)#149
net.sf.javabdd.JFactory.bdd_operator_reset()V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.bdd_operator_reset()V#LocalLoad(Ljava/lang/Object;,0)#1
net.sf.javabdd.JFactory.bdd_operator_reset()V#Get(Lnet/sf/javabdd/JFactory$BddCache;,NONSTATIC,Lnet/sf/javabdd/JFactory;,applycache)#2
net.sf.javabdd.JFactory.bdd_operator_reset()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,BddCache_reset,(Lnet/sf/javabdd/JFactory$BddCache;)V)#3
net.sf.javabdd.JFactory.BddCache_reset(Lnet/sf/javabdd/JFactory$BddCache;)V#Constant(I,0)#4
net.sf.javabdd.JFactory.BddCache_reset(Lnet/sf/javabdd/JFactory$BddCache;)V#LocalStore(I,2)#5
net.sf.javabdd.JFactory.BddCache_reset(Lnet/sf/javabdd/JFactory$BddCache;)V#LocalLoad(I,2)#6
net.sf.javabdd.JFactory.BddCache_reset(Lnet/sf/javabdd/JFactory$BddCache;)V#LocalLoad(Ljava/lang/Object;,1)#7
net.sf.javabdd.JFactory.BddCache_reset(Lnet/sf/javabdd/JFactory$BddCache;)V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCache;,tablesize)#8
net.sf.javabdd.JFactory.BddCache_reset(Lnet/sf/javabdd/JFactory$BddCache;)V#ConditionalBranch(I,ge,21)#9
net.sf.javabdd.JFactory.BddCache_reset(Lnet/sf/javabdd/JFactory$BddCache;)V#LocalLoad(Ljava/lang/Object;,1)#10
net.sf.javabdd.JFactory.BddCache_reset(Lnet/sf/javabdd/JFactory$BddCache;)V#Get([Lnet/sf/javabdd/JFactory$BddCacheData;,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCache;,table)#11
net.sf.javabdd.JFactory.BddCache_reset(Lnet/sf/javabdd/JFactory$BddCache;)V#LocalLoad(I,2)#12
net.sf.javabdd.JFactory.BddCache_reset(Lnet/sf/javabdd/JFactory$BddCache;)V#ArrayLoad(Ljava/lang/Object;)#13
net.sf.javabdd.JFactory.BddCache_reset(Lnet/sf/javabdd/JFactory$BddCache;)V#Constant(I,-1)#14
net.sf.javabdd.JFactory.BddCache_reset(Lnet/sf/javabdd/JFactory$BddCache;)V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCacheData;,a)#15
net.sf.javabdd.JFactory.BddCache_reset(Lnet/sf/javabdd/JFactory$BddCache;)V#LocalLoad(I,2)#16
net.sf.javabdd.JFactory.BddCache_reset(Lnet/sf/javabdd/JFactory$BddCache;)V#Constant(I,1)#17
net.sf.javabdd.JFactory.BddCache_reset(Lnet/sf/javabdd/JFactory$BddCache;)V#BinaryOp(I,add)#18
net.sf.javabdd.JFactory.BddCache_reset(Lnet/sf/javabdd/JFactory$BddCache;)V#LocalStore(I,2)#19
net.sf.javabdd.JFactory.BddCache_reset(Lnet/sf/javabdd/JFactory$BddCache;)V#Goto(6)#20
net.sf.javabdd.JFactory.BddCache_reset(Lnet/sf/javabdd/JFactory$BddCache;)V#Return(V)#21
net.sf.javabdd.JFactory.bdd_operator_reset()V#LocalLoad(Ljava/lang/Object;,0)#4
net.sf.javabdd.JFactory.bdd_operator_reset()V#LocalLoad(Ljava/lang/Object;,0)#5
net.sf.javabdd.JFactory.bdd_operator_reset()V#Get(Lnet/sf/javabdd/JFactory$BddCache;,NONSTATIC,Lnet/sf/javabdd/JFactory;,itecache)#6
net.sf.javabdd.JFactory.bdd_operator_reset()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,BddCache_reset,(Lnet/sf/javabdd/JFactory$BddCache;)V)#7
net.sf.javabdd.JFactory.bdd_operator_reset()V#LocalLoad(Ljava/lang/Object;,0)#8
net.sf.javabdd.JFactory.bdd_operator_reset()V#LocalLoad(Ljava/lang/Object;,0)#9
net.sf.javabdd.JFactory.bdd_operator_reset()V#Get(Lnet/sf/javabdd/JFactory$BddCache;,NONSTATIC,Lnet/sf/javabdd/JFactory;,quantcache)#10
net.sf.javabdd.JFactory.bdd_operator_reset()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,BddCache_reset,(Lnet/sf/javabdd/JFactory$BddCache;)V)#11
net.sf.javabdd.JFactory.bdd_operator_reset()V#LocalLoad(Ljava/lang/Object;,0)#12
net.sf.javabdd.JFactory.bdd_operator_reset()V#LocalLoad(Ljava/lang/Object;,0)#13
net.sf.javabdd.JFactory.bdd_operator_reset()V#Get(Lnet/sf/javabdd/JFactory$BddCache;,NONSTATIC,Lnet/sf/javabdd/JFactory;,appexcache)#14
net.sf.javabdd.JFactory.bdd_operator_reset()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,BddCache_reset,(Lnet/sf/javabdd/JFactory$BddCache;)V)#15
net.sf.javabdd.JFactory.bdd_operator_reset()V#LocalLoad(Ljava/lang/Object;,0)#16
net.sf.javabdd.JFactory.bdd_operator_reset()V#LocalLoad(Ljava/lang/Object;,0)#17
net.sf.javabdd.JFactory.bdd_operator_reset()V#Get(Lnet/sf/javabdd/JFactory$BddCache;,NONSTATIC,Lnet/sf/javabdd/JFactory;,replacecache)#18
net.sf.javabdd.JFactory.bdd_operator_reset()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,BddCache_reset,(Lnet/sf/javabdd/JFactory$BddCache;)V)#19
net.sf.javabdd.JFactory.bdd_operator_reset()V#LocalLoad(Ljava/lang/Object;,0)#20
net.sf.javabdd.JFactory.bdd_operator_reset()V#LocalLoad(Ljava/lang/Object;,0)#21
net.sf.javabdd.JFactory.bdd_operator_reset()V#Get(Lnet/sf/javabdd/JFactory$BddCache;,NONSTATIC,Lnet/sf/javabdd/JFactory;,misccache)#22
net.sf.javabdd.JFactory.bdd_operator_reset()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,BddCache_reset,(Lnet/sf/javabdd/JFactory$BddCache;)V)#23
net.sf.javabdd.JFactory.bdd_operator_reset()V#LocalLoad(Ljava/lang/Object;,0)#24
net.sf.javabdd.JFactory.bdd_operator_reset()V#LocalLoad(Ljava/lang/Object;,0)#25
net.sf.javabdd.JFactory.bdd_operator_reset()V#Get(Lnet/sf/javabdd/JFactory$BddCache;,NONSTATIC,Lnet/sf/javabdd/JFactory;,countcache)#26
net.sf.javabdd.JFactory.bdd_operator_reset()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,BddCache_reset,(Lnet/sf/javabdd/JFactory$BddCache;)V)#27
net.sf.javabdd.JFactory.bdd_operator_reset()V#Return(V)#28
net.sf.javabdd.JFactory.bdd_gbc()V#Goto(153)#150
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#153
net.sf.javabdd.JFactory.bdd_gbc()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,clock,()J)#154
net.sf.javabdd.JFactory.bdd_gbc()V#LocalStore(J,3)#155
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#156
net.sf.javabdd.JFactory.bdd_gbc()V#Dup(1,0)#157
net.sf.javabdd.JFactory.bdd_gbc()V#Get(J,NONSTATIC,Lnet/sf/javabdd/JFactory;,gbcclock)#158
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(J,3)#159
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(J,5)#160
net.sf.javabdd.JFactory.bdd_gbc()V#BinaryOp(J,sub)#161
net.sf.javabdd.JFactory.bdd_gbc()V#BinaryOp(J,add)#162
net.sf.javabdd.JFactory.bdd_gbc()V#Put(J,NONSTATIC,Lnet/sf/javabdd/JFactory;,gbcclock)#163
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#164
net.sf.javabdd.JFactory.bdd_gbc()V#Dup(1,0)#165
net.sf.javabdd.JFactory.bdd_gbc()V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,gbcollectnum)#166
net.sf.javabdd.JFactory.bdd_gbc()V#Constant(I,1)#167
net.sf.javabdd.JFactory.bdd_gbc()V#BinaryOp(I,add)#168
net.sf.javabdd.JFactory.bdd_gbc()V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,gbcollectnum)#169
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#170
net.sf.javabdd.JFactory.bdd_gbc()V#Get(Lnet/sf/javabdd/BDDFactory$GCStats;,NONSTATIC,Lnet/sf/javabdd/JFactory;,gcstats)#171
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#172
net.sf.javabdd.JFactory.bdd_gbc()V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodesize)#173
net.sf.javabdd.JFactory.bdd_gbc()V#Put(I,NONSTATIC,Lnet/sf/javabdd/BDDFactory$GCStats;,nodes)#174
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#175
net.sf.javabdd.JFactory.bdd_gbc()V#Get(Lnet/sf/javabdd/BDDFactory$GCStats;,NONSTATIC,Lnet/sf/javabdd/JFactory;,gcstats)#176
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#177
net.sf.javabdd.JFactory.bdd_gbc()V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreenum)#178
net.sf.javabdd.JFactory.bdd_gbc()V#Put(I,NONSTATIC,Lnet/sf/javabdd/BDDFactory$GCStats;,freenodes)#179
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#180
net.sf.javabdd.JFactory.bdd_gbc()V#Get(Lnet/sf/javabdd/BDDFactory$GCStats;,NONSTATIC,Lnet/sf/javabdd/JFactory;,gcstats)#181
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(J,3)#182
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(J,5)#183
net.sf.javabdd.JFactory.bdd_gbc()V#BinaryOp(J,sub)#184
net.sf.javabdd.JFactory.bdd_gbc()V#Put(J,NONSTATIC,Lnet/sf/javabdd/BDDFactory$GCStats;,time)#185
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#186
net.sf.javabdd.JFactory.bdd_gbc()V#Get(Lnet/sf/javabdd/BDDFactory$GCStats;,NONSTATIC,Lnet/sf/javabdd/JFactory;,gcstats)#187
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#188
net.sf.javabdd.JFactory.bdd_gbc()V#Get(J,NONSTATIC,Lnet/sf/javabdd/JFactory;,gbcclock)#189
net.sf.javabdd.JFactory.bdd_gbc()V#Put(J,NONSTATIC,Lnet/sf/javabdd/BDDFactory$GCStats;,sumtime)#190
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#191
net.sf.javabdd.JFactory.bdd_gbc()V#Get(Lnet/sf/javabdd/BDDFactory$GCStats;,NONSTATIC,Lnet/sf/javabdd/JFactory;,gcstats)#192
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#193
net.sf.javabdd.JFactory.bdd_gbc()V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,gbcollectnum)#194
net.sf.javabdd.JFactory.bdd_gbc()V#Put(I,NONSTATIC,Lnet/sf/javabdd/BDDFactory$GCStats;,num)#195
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#196
net.sf.javabdd.JFactory.bdd_gbc()V#Constant(I,0)#197
net.sf.javabdd.JFactory.bdd_gbc()V#LocalLoad(Ljava/lang/Object;,0)#198
net.sf.javabdd.JFactory.bdd_gbc()V#Get(Lnet/sf/javabdd/BDDFactory$GCStats;,NONSTATIC,Lnet/sf/javabdd/JFactory;,gcstats)#199
net.sf.javabdd.JFactory.bdd_gbc()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,gbc_handler,(ZLnet/sf/javabdd/BDDFactory$GCStats;)V)#200
net.sf.javabdd.JFactory.bdd_gbc()V#Return(V)#201
net.sf.javabdd.JFactory.reorder_done()V#LocalLoad(Ljava/lang/Object;,0)#61
net.sf.javabdd.JFactory.reorder_done()V#Constant(I,0)#62
net.sf.javabdd.JFactory.reorder_done()V#LocalLoad(Ljava/lang/Object;,0)#63
net.sf.javabdd.JFactory.reorder_done()V#Get(Lnet/sf/javabdd/BDDFactory$ReorderStats;,NONSTATIC,Lnet/sf/javabdd/JFactory;,reorderstats)#64
net.sf.javabdd.JFactory.reorder_done()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,reorder_handler,(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V)#65
net.sf.javabdd.BDDFactory.reorder_handler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#LocalLoad(Ljava/lang/Object;,2)#11
net.sf.javabdd.BDDFactory.reorder_handler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#Invoke(STATIC,Ljava/lang/System;,currentTimeMillis,()J)#12
net.sf.javabdd.BDDFactory.reorder_handler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#LocalLoad(Ljava/lang/Object;,2)#13
net.sf.javabdd.BDDFactory.reorder_handler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#Get(J,NONSTATIC,Lnet/sf/javabdd/BDDFactory$ReorderStats;,time)#14
net.sf.javabdd.BDDFactory.reorder_handler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#BinaryOp(J,sub)#15
net.sf.javabdd.BDDFactory.reorder_handler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#Put(J,NONSTATIC,Lnet/sf/javabdd/BDDFactory$ReorderStats;,time)#16
net.sf.javabdd.BDDFactory.reorder_handler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#LocalLoad(Ljava/lang/Object;,2)#17
net.sf.javabdd.BDDFactory.reorder_handler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#LocalLoad(Ljava/lang/Object;,0)#18
net.sf.javabdd.BDDFactory.reorder_handler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDFactory;,getNodeNum,()I)#19
net.sf.javabdd.BDDFactory.reorder_handler(ZLnet/sf/javabdd/BDDFactory$ReorderStats;)V#Put(I,NONSTATIC,Lnet/sf/javabdd/BDDFactory$ReorderStats;,usednum_after)#20
net.sf.javabdd.JFactory.reorder_done()V#Return(V)#66
net.sf.javabdd.JFactory.bdd_setvarorder([I)V#Return(V)#39
net.sf.javabdd.JFactory.setVarOrder([I)V#Return(V)#3
chord.bddbddb.Rel.initialize()V#LocalLoad(Ljava/lang/Object;,0)#120
chord.bddbddb.Rel.initialize()V#LocalLoad(Ljava/lang/Object;,0)#121
chord.bddbddb.Rel.initialize()V#Get(I,NONSTATIC,Lchord/bddbddb/Rel;,numDoms)#122
chord.bddbddb.Rel.initialize()V#New([I,1)#123
chord.bddbddb.Rel.initialize()V#Put([I,NONSTATIC,Lchord/bddbddb/Rel;,domIdxs)#124
chord.bddbddb.Rel.initialize()V#LocalLoad(Ljava/lang/Object;,0)#125
chord.bddbddb.Rel.initialize()V#LocalLoad(Ljava/lang/Object;,0)#126
chord.bddbddb.Rel.initialize()V#Get(Lnet/sf/javabdd/BDDFactory;,NONSTATIC,Lchord/bddbddb/Rel;,factory)#127
chord.bddbddb.Rel.initialize()V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDFactory;,one,()Lnet/sf/javabdd/BDD;)#128
chord.bddbddb.Rel.initialize()V#Put(Lnet/sf/javabdd/BDD;,NONSTATIC,Lchord/bddbddb/Rel;,iterBdd)#129
chord.bddbddb.Rel.initialize()V#Constant(I,0)#130
chord.bddbddb.Rel.initialize()V#LocalStore(I,8)#131
chord.bddbddb.Rel.initialize()V#Goto(155)#132
chord.bddbddb.Rel.initialize()V#LocalLoad(I,8)#155
chord.bddbddb.Rel.initialize()V#LocalLoad(Ljava/lang/Object;,0)#156
chord.bddbddb.Rel.initialize()V#Get(I,NONSTATIC,Lchord/bddbddb/Rel;,numDoms)#157
chord.bddbddb.Rel.initialize()V#ConditionalBranch(I,lt,133)#158
chord.bddbddb.Rel.initialize()V#LocalLoad(Ljava/lang/Object;,0)#133
chord.bddbddb.Rel.initialize()V#Get([Lnet/sf/javabdd/BDDDomain;,NONSTATIC,Lchord/bddbddb/Rel;,domBdds)#134
chord.bddbddb.Rel.initialize()V#LocalLoad(I,8)#135
chord.bddbddb.Rel.initialize()V#ArrayLoad(Ljava/lang/Object;)#136
chord.bddbddb.Rel.initialize()V#LocalStore(Ljava/lang/Object;,9)#137
chord.bddbddb.Rel.initialize()V#LocalLoad(Ljava/lang/Object;,0)#138
chord.bddbddb.Rel.initialize()V#Get([I,NONSTATIC,Lchord/bddbddb/Rel;,domIdxs)#139
chord.bddbddb.Rel.initialize()V#LocalLoad(I,8)#140
chord.bddbddb.Rel.initialize()V#LocalLoad(Ljava/lang/Object;,9)#141
chord.bddbddb.Rel.initialize()V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDDomain;,getIndex,()I)#142
chord.bddbddb.Rel.initialize()V#ArrayStore(I)#143
chord.bddbddb.Rel.initialize()V#LocalLoad(Ljava/lang/Object;,0)#144
chord.bddbddb.Rel.initialize()V#LocalLoad(Ljava/lang/Object;,0)#145
chord.bddbddb.Rel.initialize()V#Get(Lnet/sf/javabdd/BDD;,NONSTATIC,Lchord/bddbddb/Rel;,iterBdd)#146
chord.bddbddb.Rel.initialize()V#LocalLoad(Ljava/lang/Object;,9)#147
chord.bddbddb.Rel.initialize()V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDDomain;,set,()Lnet/sf/javabdd/BDD;)#148
net.sf.javabdd.BDDDomain.set()Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.BDDDomain.set()Lnet/sf/javabdd/BDD;#Get(Lnet/sf/javabdd/BDD;,NONSTATIC,Lnet/sf/javabdd/BDDDomain;,var)#1
net.sf.javabdd.BDDDomain.set()Lnet/sf/javabdd/BDD;#Invoke(VIRTUAL,Lnet/sf/javabdd/BDD;,id,()Lnet/sf/javabdd/BDD;)#2
net.sf.javabdd.JFactory$bdd.id()Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory$bdd.id()Lnet/sf/javabdd/BDD;#Get(Lnet/sf/javabdd/JFactory;,NONSTATIC,Lnet/sf/javabdd/JFactory$bdd;,this$0)#1
net.sf.javabdd.JFactory$bdd.id()Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,0)#2
net.sf.javabdd.JFactory$bdd.id()Lnet/sf/javabdd/BDD;#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$bdd;,_index)#3
net.sf.javabdd.JFactory$bdd.id()Lnet/sf/javabdd/BDD;#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,access$100,(Lnet/sf/javabdd/JFactory;I)Lnet/sf/javabdd/JFactory$bdd;)#4
net.sf.javabdd.JFactory.access$100(Lnet/sf/javabdd/JFactory;I)Lnet/sf/javabdd/JFactory$bdd;#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.access$100(Lnet/sf/javabdd/JFactory;I)Lnet/sf/javabdd/JFactory$bdd;#LocalLoad(I,1)#1
net.sf.javabdd.JFactory.access$100(Lnet/sf/javabdd/JFactory;I)Lnet/sf/javabdd/JFactory$bdd;#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,makeBDD,(I)Lnet/sf/javabdd/JFactory$bdd;)#2
net.sf.javabdd.JFactory.access$100(Lnet/sf/javabdd/JFactory;I)Lnet/sf/javabdd/JFactory$bdd;#Return(Ljava/lang/Object;)#3
net.sf.javabdd.JFactory$bdd.id()Lnet/sf/javabdd/BDD;#Return(Ljava/lang/Object;)#5
net.sf.javabdd.BDDDomain.set()Lnet/sf/javabdd/BDD;#Return(Ljava/lang/Object;)#3
chord.bddbddb.Rel.initialize()V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDD;,andWith,(Lnet/sf/javabdd/BDD;)Lnet/sf/javabdd/BDD;)#149
net.sf.javabdd.JFactory.DECREF(I)V#LocalLoad(I,2)#14
net.sf.javabdd.JFactory.DECREF(I)V#Constant(I,0)#15
net.sf.javabdd.JFactory.DECREF(I)V#ConditionalBranch(I,eq,29)#16
net.sf.javabdd.JFactory.DECREF(I)V#LocalLoad(Ljava/lang/Object;,0)#17
net.sf.javabdd.JFactory.DECREF(I)V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodes)#18
net.sf.javabdd.JFactory.DECREF(I)V#LocalLoad(I,1)#19
net.sf.javabdd.JFactory.DECREF(I)V#Constant(I,5)#20
net.sf.javabdd.JFactory.DECREF(I)V#BinaryOp(I,mul)#21
net.sf.javabdd.JFactory.DECREF(I)V#Constant(I,0)#22
net.sf.javabdd.JFactory.DECREF(I)V#BinaryOp(I,add)#23
net.sf.javabdd.JFactory.DECREF(I)V#Dup(2,0)#24
net.sf.javabdd.JFactory.DECREF(I)V#ArrayLoad(I)#25
net.sf.javabdd.JFactory.DECREF(I)V#Constant(I,4194304)#26
net.sf.javabdd.JFactory.DECREF(I)V#BinaryOp(I,sub)#27
net.sf.javabdd.JFactory.DECREF(I)V#ArrayStore(I)#28
chord.bddbddb.Rel.initialize()V#Put(Lnet/sf/javabdd/BDD;,NONSTATIC,Lchord/bddbddb/Rel;,iterBdd)#150
chord.bddbddb.Rel.initialize()V#LocalLoad(I,8)#151
chord.bddbddb.Rel.initialize()V#Constant(I,1)#152
chord.bddbddb.Rel.initialize()V#BinaryOp(I,add)#153
chord.bddbddb.Rel.initialize()V#LocalStore(I,8)#154
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#100
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#101
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#102
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(I,1)#103
net.sf.javabdd.JFactory.and_rec(II)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LOW,(I)I)#104
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(I,2)#105
net.sf.javabdd.JFactory.and_rec(II)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,and_rec,(II)I)#106
net.sf.javabdd.JFactory.and_rec(II)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,PUSHREF,(I)I)#107
net.sf.javabdd.JFactory.and_rec(II)I#Pop(1)#108
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#109
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#110
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#111
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(I,1)#112
net.sf.javabdd.JFactory.and_rec(II)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HIGH,(I)I)#113
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(I,2)#114
net.sf.javabdd.JFactory.and_rec(II)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,and_rec,(II)I)#115
net.sf.javabdd.JFactory.and_rec(II)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,PUSHREF,(I)I)#116
net.sf.javabdd.JFactory.and_rec(II)I#Pop(1)#117
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#118
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#119
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(I,1)#120
net.sf.javabdd.JFactory.and_rec(II)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LEVEL,(I)I)#121
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#122
net.sf.javabdd.JFactory.and_rec(II)I#Constant(I,2)#123
net.sf.javabdd.JFactory.and_rec(II)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,READREF,(I)I)#124
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#125
net.sf.javabdd.JFactory.and_rec(II)I#Constant(I,1)#126
net.sf.javabdd.JFactory.and_rec(II)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,READREF,(I)I)#127
net.sf.javabdd.JFactory.and_rec(II)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_makenode,(III)I)#128
net.sf.javabdd.JFactory.and_rec(II)I#LocalStore(I,4)#129
net.sf.javabdd.JFactory.and_rec(II)I#Goto(161)#130
chord.bddbddb.Rel.initialize()V#Return(V)#159
chord.bddbddb.Rel.zero()V#LocalLoad(Ljava/lang/Object;,0)#2
chord.bddbddb.Rel.zero()V#LocalLoad(Ljava/lang/Object;,0)#3
chord.bddbddb.Rel.zero()V#Get(Lnet/sf/javabdd/BDDFactory;,NONSTATIC,Lchord/bddbddb/Rel;,factory)#4
chord.bddbddb.Rel.zero()V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDFactory;,zero,()Lnet/sf/javabdd/BDD;)#5
net.sf.javabdd.JFactory.zero()Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.zero()Lnet/sf/javabdd/BDD;#Constant(I,0)#1
net.sf.javabdd.JFactory.zero()Lnet/sf/javabdd/BDD;#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,makeBDD,(I)Lnet/sf/javabdd/JFactory$bdd;)#2
net.sf.javabdd.JFactory.zero()Lnet/sf/javabdd/BDD;#Return(Ljava/lang/Object;)#3
chord.bddbddb.Rel.zero()V#Put(Lnet/sf/javabdd/BDD;,NONSTATIC,Lchord/bddbddb/Rel;,bdd)#6
chord.bddbddb.Rel.zero()V#Return(V)#7
chord.project.analyses.ProgramRel.run()V#LocalLoad(Ljava/lang/Object;,0)#2
chord.project.analyses.ProgramRel.run()V#Invoke(VIRTUAL,Lchord/project/analyses/ProgramRel;,init,()V)#3
chord.project.analyses.ProgramRel.init()V#Return(V)#0
chord.project.analyses.ProgramRel.run()V#LocalLoad(Ljava/lang/Object;,0)#4
chord.project.analyses.ProgramRel.run()V#Invoke(VIRTUAL,Lchord/project/analyses/ProgramRel;,fill,()V)#5
chord.analyses.argret.RelMmethArg.fill()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.argret.RelMmethArg.fill()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/argret/RelMmethArg;,doms)#1
chord.analyses.argret.RelMmethArg.fill()V#Constant(I,0)#2
chord.analyses.argret.RelMmethArg.fill()V#ArrayLoad(Ljava/lang/Object;)#3
chord.analyses.argret.RelMmethArg.fill()V#CheckCast(Lchord/analyses/method/DomM;)#4
chord.analyses.argret.RelMmethArg.fill()V#LocalStore(Ljava/lang/Object;,1)#5
chord.analyses.argret.RelMmethArg.fill()V#LocalLoad(Ljava/lang/Object;,0)#6
chord.analyses.argret.RelMmethArg.fill()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/argret/RelMmethArg;,doms)#7
chord.analyses.argret.RelMmethArg.fill()V#Constant(I,2)#8
chord.analyses.argret.RelMmethArg.fill()V#ArrayLoad(Ljava/lang/Object;)#9
chord.analyses.argret.RelMmethArg.fill()V#CheckCast(Lchord/analyses/var/DomV;)#10
chord.analyses.argret.RelMmethArg.fill()V#LocalStore(Ljava/lang/Object;,2)#11
chord.analyses.argret.RelMmethArg.fill()V#LocalLoad(Ljava/lang/Object;,1)#12
chord.analyses.argret.RelMmethArg.fill()V#Invoke(VIRTUAL,Lchord/analyses/method/DomM;,size,()I)#13
chord.analyses.argret.RelMmethArg.fill()V#LocalStore(I,3)#14
chord.analyses.argret.RelMmethArg.fill()V#Constant(I,0)#15
chord.analyses.argret.RelMmethArg.fill()V#LocalStore(I,4)#16
chord.analyses.argret.RelMmethArg.fill()V#Goto(80)#17
chord.analyses.argret.RelMmethArg.fill()V#LocalLoad(I,4)#80
chord.analyses.argret.RelMmethArg.fill()V#LocalLoad(I,3)#81
chord.analyses.argret.RelMmethArg.fill()V#ConditionalBranch(I,lt,18)#82
chord.analyses.argret.RelMmethArg.fill()V#LocalLoad(Ljava/lang/Object;,1)#18
chord.analyses.argret.RelMmethArg.fill()V#LocalLoad(I,4)#19
chord.analyses.argret.RelMmethArg.fill()V#Invoke(VIRTUAL,Lchord/analyses/method/DomM;,get,(I)Ljava/lang/Object;)#20
chord.analyses.argret.RelMmethArg.fill()V#CheckCast(Ljoeq/Class/jq_Method;)#21
chord.analyses.argret.RelMmethArg.fill()V#LocalStore(Ljava/lang/Object;,5)#22
chord.analyses.argret.RelMmethArg.fill()V#LocalLoad(Ljava/lang/Object;,5)#23
chord.analyses.argret.RelMmethArg.fill()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,isAbstract,()Z)#24
chord.analyses.argret.RelMmethArg.fill()V#Constant(I,0)#25
chord.analyses.argret.RelMmethArg.fill()V#ConditionalBranch(I,eq,28)#26
chord.analyses.argret.RelMmethArg.fill()V#LocalLoad(Ljava/lang/Object;,5)#28
chord.analyses.argret.RelMmethArg.fill()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getCFG,()Ljoeq/Compiler/Quad/ControlFlowGraph;)#29
chord.analyses.argret.RelMmethArg.fill()V#LocalStore(Ljava/lang/Object;,6)#30
chord.analyses.argret.RelMmethArg.fill()V#LocalLoad(Ljava/lang/Object;,6)#31
chord.analyses.argret.RelMmethArg.fill()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,getRegisterFactory,()Ljoeq/Compiler/Quad/RegisterFactory;)#32
chord.analyses.argret.RelMmethArg.fill()V#LocalStore(Ljava/lang/Object;,7)#33
chord.analyses.argret.RelMmethArg.fill()V#LocalLoad(Ljava/lang/Object;,5)#34
chord.analyses.argret.RelMmethArg.fill()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getParamTypes,()[Ljoeq/Class/jq_Type;)#35
chord.analyses.argret.RelMmethArg.fill()V#ArrayLength()#36
chord.analyses.argret.RelMmethArg.fill()V#LocalStore(I,8)#37
chord.analyses.argret.RelMmethArg.fill()V#Constant(I,0)#38
chord.analyses.argret.RelMmethArg.fill()V#LocalStore(I,9)#39
chord.analyses.argret.RelMmethArg.fill()V#Goto(73)#40
chord.analyses.argret.RelMmethArg.fill()V#LocalLoad(I,9)#73
chord.analyses.argret.RelMmethArg.fill()V#LocalLoad(I,8)#74
chord.analyses.argret.RelMmethArg.fill()V#ConditionalBranch(I,lt,41)#75
chord.analyses.argret.RelMmethArg.fill()V#LocalLoad(Ljava/lang/Object;,7)#41
chord.analyses.argret.RelMmethArg.fill()V#LocalLoad(I,9)#42
chord.analyses.argret.RelMmethArg.fill()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/RegisterFactory;,get,(I)Ljoeq/Compiler/Quad/RegisterFactory$Register;)#43
chord.analyses.argret.RelMmethArg.fill()V#LocalStore(Ljava/lang/Object;,10)#44
chord.analyses.argret.RelMmethArg.fill()V#LocalLoad(Ljava/lang/Object;,10)#45
chord.analyses.argret.RelMmethArg.fill()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/RegisterFactory$Register;,getType,()Ljoeq/Class/jq_Type;)#46
joeq.Compiler.Quad.RegisterFactory$Register.getType()Ljoeq/Class/jq_Type;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.RegisterFactory$Register.getType()Ljoeq/Class/jq_Type;#Get(B,NONSTATIC,Ljoeq/Compiler/Quad/RegisterFactory$Register;,flags)#1
joeq.Compiler.Quad.RegisterFactory$Register.getType()Ljoeq/Class/jq_Type;#Constant(I,7)#2
joeq.Compiler.Quad.RegisterFactory$Register.getType()Ljoeq/Class/jq_Type;#BinaryOp(I,and)#3
joeq.Compiler.Quad.RegisterFactory$Register.getType()Ljoeq/Class/jq_Type;#LocalStore(I,1)#4
joeq.Compiler.Quad.RegisterFactory$Register.getType()Ljoeq/Class/jq_Type;#LocalLoad(I,1)#5
joeq.Compiler.Quad.RegisterFactory$Register.getType()Ljoeq/Class/jq_Type;#Switch(17,1,7,2,9,3,11,4,13,5,15)#6
joeq.Compiler.Quad.RegisterFactory$Register.getType()Ljoeq/Class/jq_Type;#Invoke(STATIC,Ljoeq/Class/PrimordialClassLoader;,getJavaLangObject,()Ljoeq/Class/jq_Class;)#15
joeq.Compiler.Quad.RegisterFactory$Register.getType()Ljoeq/Class/jq_Type;#Return(Ljava/lang/Object;)#16
chord.analyses.argret.RelMmethArg.fill()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,isReferenceType,()Z)#47
chord.analyses.argret.RelMmethArg.fill()V#Constant(I,0)#48
chord.analyses.argret.RelMmethArg.fill()V#ConditionalBranch(I,eq,69)#49
chord.analyses.argret.RelMmethArg.fill()V#LocalLoad(Ljava/lang/Object;,2)#50
chord.analyses.argret.RelMmethArg.fill()V#LocalLoad(Ljava/lang/Object;,10)#51
chord.analyses.argret.RelMmethArg.fill()V#Invoke(VIRTUAL,Lchord/analyses/var/DomV;,indexOf,(Ljava/lang/Object;)I)#52
chord.util.IndexMap.indexOf(Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.IndexMap.indexOf(Ljava/lang/Object;)I#Get(Ljava/util/HashMap;,NONSTATIC,Lchord/util/IndexMap;,hmap)#1
chord.util.IndexMap.indexOf(Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,1)#2
chord.util.IndexMap.indexOf(Ljava/lang/Object;)I#Invoke(VIRTUAL,Ljava/util/HashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#3
chord.util.IndexMap.indexOf(Ljava/lang/Object;)I#CheckCast(Ljava/lang/Integer;)#4
chord.util.IndexMap.indexOf(Ljava/lang/Object;)I#LocalStore(Ljava/lang/Object;,2)#5
chord.util.IndexMap.indexOf(Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,2)#6
chord.util.IndexMap.indexOf(Ljava/lang/Object;)I#Constant(L;,null)#7
chord.util.IndexMap.indexOf(Ljava/lang/Object;)I#ConditionalBranch(Ljava/lang/Object;,ne,11)#8
chord.util.IndexMap.indexOf(Ljava/lang/Object;)I#LocalLoad(Ljava/lang/Object;,2)#11
chord.util.IndexMap.indexOf(Ljava/lang/Object;)I#Invoke(VIRTUAL,Ljava/lang/Integer;,intValue,()I)#12
chord.util.IndexMap.indexOf(Ljava/lang/Object;)I#Return(I)#13
chord.analyses.argret.RelMmethArg.fill()V#LocalStore(I,11)#53
chord.analyses.argret.RelMmethArg.fill()V#Get(Z,STATIC,Lchord/analyses/argret/RelMmethArg;,$assertionsDisabled)#54
chord.analyses.argret.RelMmethArg.fill()V#Constant(I,0)#55
chord.analyses.argret.RelMmethArg.fill()V#ConditionalBranch(I,ne,64)#56
chord.analyses.argret.RelMmethArg.fill()V#LocalLoad(I,11)#57
chord.analyses.argret.RelMmethArg.fill()V#Constant(I,0)#58
chord.analyses.argret.RelMmethArg.fill()V#ConditionalBranch(I,ge,64)#59
chord.analyses.argret.RelMmethArg.fill()V#LocalLoad(Ljava/lang/Object;,0)#64
chord.analyses.argret.RelMmethArg.fill()V#LocalLoad(I,4)#65
chord.analyses.argret.RelMmethArg.fill()V#LocalLoad(I,9)#66
chord.analyses.argret.RelMmethArg.fill()V#LocalLoad(I,11)#67
chord.analyses.argret.RelMmethArg.fill()V#Invoke(VIRTUAL,Lchord/analyses/argret/RelMmethArg;,add,(III)V)#68
chord.bddbddb.Rel.add(III)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.bddbddb.Rel.add(III)V#Get(Lnet/sf/javabdd/BDD;,NONSTATIC,Lchord/bddbddb/Rel;,bdd)#1
chord.bddbddb.Rel.add(III)V#Constant(L;,null)#2
chord.bddbddb.Rel.add(III)V#ConditionalBranch(Ljava/lang/Object;,ne,9)#3
chord.bddbddb.Rel.add(III)V#LocalLoad(Ljava/lang/Object;,0)#9
chord.bddbddb.Rel.add(III)V#Get(Lnet/sf/javabdd/BDD;,NONSTATIC,Lchord/bddbddb/Rel;,bdd)#10
chord.bddbddb.Rel.add(III)V#LocalLoad(Ljava/lang/Object;,0)#11
chord.bddbddb.Rel.add(III)V#Get([Lnet/sf/javabdd/BDDDomain;,NONSTATIC,Lchord/bddbddb/Rel;,domBdds)#12
chord.bddbddb.Rel.add(III)V#Constant(I,0)#13
chord.bddbddb.Rel.add(III)V#ArrayLoad(Ljava/lang/Object;)#14
chord.bddbddb.Rel.add(III)V#LocalLoad(I,1)#15
chord.bddbddb.Rel.add(III)V#Conversion(I,J)#16
chord.bddbddb.Rel.add(III)V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDDomain;,ithVar,(J)Lnet/sf/javabdd/BDD;)#17
net.sf.javabdd.BDDDomain.ithVar(J)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.BDDDomain.ithVar(J)Lnet/sf/javabdd/BDD;#LocalLoad(J,1)#1
net.sf.javabdd.BDDDomain.ithVar(J)Lnet/sf/javabdd/BDD;#Invoke(STATIC,Ljava/math/BigInteger;,valueOf,(J)Ljava/math/BigInteger;)#2
net.sf.javabdd.BDDDomain.ithVar(J)Lnet/sf/javabdd/BDD;#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDDomain;,ithVar,(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;)#3
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,1)#0
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#Invoke(VIRTUAL,Ljava/math/BigInteger;,signum,()I)#1
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#Constant(I,0)#2
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#ConditionalBranch(I,lt,10)#3
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,1)#4
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,0)#5
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDDomain;,size,()Ljava/math/BigInteger;)#6
net.sf.javabdd.BDDDomain.size()Ljava/math/BigInteger;#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.BDDDomain.size()Ljava/math/BigInteger;#Get(Ljava/math/BigInteger;,NONSTATIC,Lnet/sf/javabdd/BDDDomain;,realsize)#1
net.sf.javabdd.BDDDomain.size()Ljava/math/BigInteger;#Return(Ljava/lang/Object;)#2
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#Invoke(VIRTUAL,Ljava/math/BigInteger;,compareTo,(Ljava/math/BigInteger;)I)#7
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#Constant(I,0)#8
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#ConditionalBranch(I,lt,22)#9
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,0)#22
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDDomain;,getFactory,()Lnet/sf/javabdd/BDDFactory;)#23
net.sf.javabdd.JFactory$bddDomain.getFactory()Lnet/sf/javabdd/BDDFactory;#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory$bddDomain.getFactory()Lnet/sf/javabdd/BDDFactory;#Get(Lnet/sf/javabdd/JFactory;,NONSTATIC,Lnet/sf/javabdd/JFactory$bddDomain;,this$0)#1
net.sf.javabdd.JFactory$bddDomain.getFactory()Lnet/sf/javabdd/BDDFactory;#Return(Ljava/lang/Object;)#2
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#LocalStore(Ljava/lang/Object;,2)#24
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,2)#25
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDFactory;,one,()Lnet/sf/javabdd/BDD;)#26
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#LocalStore(Ljava/lang/Object;,3)#27
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,0)#28
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDDomain;,vars,()[I)#29
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#LocalStore(Ljava/lang/Object;,4)#30
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#Constant(I,0)#31
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#LocalStore(I,5)#32
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#LocalLoad(I,5)#33
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,4)#34
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#ArrayLength()#35
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#ConditionalBranch(I,ge,68)#36
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,1)#37
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#Constant(I,0)#38
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#Invoke(VIRTUAL,Ljava/math/BigInteger;,testBit,(I)Z)#39
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#Constant(I,0)#40
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#ConditionalBranch(I,eq,51)#41
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,3)#51
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,2)#52
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,4)#53
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#LocalLoad(I,5)#54
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#ArrayLoad(I)#55
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDFactory;,nithVar,(I)Lnet/sf/javabdd/BDD;)#56
net.sf.javabdd.JFactory.nithVar(I)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.nithVar(I)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,0)#1
net.sf.javabdd.JFactory.nithVar(I)Lnet/sf/javabdd/BDD;#LocalLoad(I,1)#2
net.sf.javabdd.JFactory.nithVar(I)Lnet/sf/javabdd/BDD;#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_nithvar,(I)I)#3
net.sf.javabdd.JFactory.bdd_nithvar(I)I#LocalLoad(I,1)#0
net.sf.javabdd.JFactory.bdd_nithvar(I)I#Constant(I,0)#1
net.sf.javabdd.JFactory.bdd_nithvar(I)I#ConditionalBranch(I,lt,7)#2
net.sf.javabdd.JFactory.bdd_nithvar(I)I#LocalLoad(I,1)#3
net.sf.javabdd.JFactory.bdd_nithvar(I)I#LocalLoad(Ljava/lang/Object;,0)#4
net.sf.javabdd.JFactory.bdd_nithvar(I)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#5
net.sf.javabdd.JFactory.bdd_nithvar(I)I#ConditionalBranch(I,lt,12)#6
net.sf.javabdd.JFactory.bdd_nithvar(I)I#LocalLoad(Ljava/lang/Object;,0)#12
net.sf.javabdd.JFactory.bdd_nithvar(I)I#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarset)#13
net.sf.javabdd.JFactory.bdd_nithvar(I)I#LocalLoad(I,1)#14
net.sf.javabdd.JFactory.bdd_nithvar(I)I#Constant(I,2)#15
net.sf.javabdd.JFactory.bdd_nithvar(I)I#BinaryOp(I,mul)#16
net.sf.javabdd.JFactory.bdd_nithvar(I)I#Constant(I,1)#17
net.sf.javabdd.JFactory.bdd_nithvar(I)I#BinaryOp(I,add)#18
net.sf.javabdd.JFactory.bdd_nithvar(I)I#ArrayLoad(I)#19
net.sf.javabdd.JFactory.bdd_nithvar(I)I#Return(I)#20
net.sf.javabdd.JFactory.nithVar(I)Lnet/sf/javabdd/BDD;#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,makeBDD,(I)Lnet/sf/javabdd/JFactory$bdd;)#4
net.sf.javabdd.JFactory.nithVar(I)Lnet/sf/javabdd/BDD;#Return(Ljava/lang/Object;)#5
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#Invoke(VIRTUAL,Lnet/sf/javabdd/BDD;,andWith,(Lnet/sf/javabdd/BDD;)Lnet/sf/javabdd/BDD;)#57
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#Pop(1)#58
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,1)#59
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#Constant(I,1)#60
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#Invoke(VIRTUAL,Ljava/math/BigInteger;,shiftRight,(I)Ljava/math/BigInteger;)#61
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#LocalStore(Ljava/lang/Object;,1)#62
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#LocalLoad(I,5)#63
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#Constant(I,1)#64
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#BinaryOp(I,add)#65
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#LocalStore(I,5)#66
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#Goto(33)#67
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,3)#68
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#Return(Ljava/lang/Object;)#69
net.sf.javabdd.BDDDomain.ithVar(J)Lnet/sf/javabdd/BDD;#Return(Ljava/lang/Object;)#4
chord.bddbddb.Rel.add(III)V#LocalLoad(Ljava/lang/Object;,0)#18
chord.bddbddb.Rel.add(III)V#Get([Lnet/sf/javabdd/BDDDomain;,NONSTATIC,Lchord/bddbddb/Rel;,domBdds)#19
chord.bddbddb.Rel.add(III)V#Constant(I,1)#20
chord.bddbddb.Rel.add(III)V#ArrayLoad(Ljava/lang/Object;)#21
chord.bddbddb.Rel.add(III)V#LocalLoad(I,2)#22
chord.bddbddb.Rel.add(III)V#Conversion(I,J)#23
chord.bddbddb.Rel.add(III)V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDDomain;,ithVar,(J)Lnet/sf/javabdd/BDD;)#24
chord.bddbddb.Rel.add(III)V#LocalLoad(Ljava/lang/Object;,0)#25
chord.bddbddb.Rel.add(III)V#Get([Lnet/sf/javabdd/BDDDomain;,NONSTATIC,Lchord/bddbddb/Rel;,domBdds)#26
chord.bddbddb.Rel.add(III)V#Constant(I,2)#27
chord.bddbddb.Rel.add(III)V#ArrayLoad(Ljava/lang/Object;)#28
chord.bddbddb.Rel.add(III)V#LocalLoad(I,3)#29
chord.bddbddb.Rel.add(III)V#Conversion(I,J)#30
chord.bddbddb.Rel.add(III)V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDDomain;,ithVar,(J)Lnet/sf/javabdd/BDD;)#31
chord.bddbddb.Rel.add(III)V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDD;,andWith,(Lnet/sf/javabdd/BDD;)Lnet/sf/javabdd/BDD;)#32
chord.bddbddb.Rel.add(III)V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDD;,andWith,(Lnet/sf/javabdd/BDD;)Lnet/sf/javabdd/BDD;)#33
chord.bddbddb.Rel.add(III)V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDD;,orWith,(Lnet/sf/javabdd/BDD;)Lnet/sf/javabdd/BDD;)#34
net.sf.javabdd.BDD.orWith(Lnet/sf/javabdd/BDD;)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.BDD.orWith(Lnet/sf/javabdd/BDD;)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,1)#1
net.sf.javabdd.BDD.orWith(Lnet/sf/javabdd/BDD;)Lnet/sf/javabdd/BDD;#Get(Lnet/sf/javabdd/BDDFactory$BDDOp;,STATIC,Lnet/sf/javabdd/BDDFactory;,or)#2
net.sf.javabdd.BDD.orWith(Lnet/sf/javabdd/BDD;)Lnet/sf/javabdd/BDD;#Invoke(VIRTUAL,Lnet/sf/javabdd/BDD;,applyWith,(Lnet/sf/javabdd/BDD;Lnet/sf/javabdd/BDDFactory$BDDOp;)Lnet/sf/javabdd/BDD;)#3
net.sf.javabdd.JFactory.bdd_apply(III)I#LocalLoad(Ljava/lang/Object;,0)#51
net.sf.javabdd.JFactory.bdd_apply(III)I#LocalLoad(I,1)#52
net.sf.javabdd.JFactory.bdd_apply(III)I#LocalLoad(I,2)#53
net.sf.javabdd.JFactory.bdd_apply(III)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,or_rec,(II)I)#54
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(I,1)#0
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(I,2)#1
net.sf.javabdd.JFactory.or_rec(II)I#ConditionalBranch(I,ne,5)#2
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(I,1)#5
net.sf.javabdd.JFactory.or_rec(II)I#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,ISONE,(I)Z)#6
net.sf.javabdd.JFactory.or_rec(II)I#Constant(I,0)#7
net.sf.javabdd.JFactory.or_rec(II)I#ConditionalBranch(I,ne,13)#8
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(I,2)#9
net.sf.javabdd.JFactory.or_rec(II)I#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,ISONE,(I)Z)#10
net.sf.javabdd.JFactory.or_rec(II)I#Constant(I,0)#11
net.sf.javabdd.JFactory.or_rec(II)I#ConditionalBranch(I,eq,15)#12
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(I,1)#15
net.sf.javabdd.JFactory.or_rec(II)I#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,ISZERO,(I)Z)#16
net.sf.javabdd.JFactory.or_rec(II)I#Constant(I,0)#17
net.sf.javabdd.JFactory.or_rec(II)I#ConditionalBranch(I,eq,21)#18
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(I,2)#19
net.sf.javabdd.JFactory.or_rec(II)I#Return(I)#20
net.sf.javabdd.JFactory.bdd_apply(III)I#LocalStore(I,4)#55
net.sf.javabdd.JFactory.bdd_apply(III)I#Goto(62)#56
net.sf.javabdd.BDD.orWith(Lnet/sf/javabdd/BDD;)Lnet/sf/javabdd/BDD;#Return(Ljava/lang/Object;)#4
chord.bddbddb.Rel.add(III)V#Pop(1)#35
chord.bddbddb.Rel.add(III)V#Goto(55)#36
chord.bddbddb.Rel.add(III)V#Return(V)#55
chord.analyses.argret.RelMmethArg.fill()V#LocalLoad(I,9)#69
chord.analyses.argret.RelMmethArg.fill()V#Constant(I,1)#70
chord.analyses.argret.RelMmethArg.fill()V#BinaryOp(I,add)#71
chord.analyses.argret.RelMmethArg.fill()V#LocalStore(I,9)#72
chord.analyses.argret.RelMmethArg.fill()V#LocalLoad(I,4)#76
chord.analyses.argret.RelMmethArg.fill()V#Constant(I,1)#77
chord.analyses.argret.RelMmethArg.fill()V#BinaryOp(I,add)#78
chord.analyses.argret.RelMmethArg.fill()V#LocalStore(I,4)#79
chord.analyses.argret.RelMmethArg.fill()V#Return(V)#83
chord.project.analyses.ProgramRel.run()V#LocalLoad(Ljava/lang/Object;,0)#6
chord.project.analyses.ProgramRel.run()V#Invoke(VIRTUAL,Lchord/project/analyses/ProgramRel;,save,()V)#7
chord.project.analyses.ProgramRel.save()V#Get(I,STATIC,Lchord/project/Config;,verbose)#0
chord.project.analyses.ProgramRel.save()V#Constant(I,1)#1
chord.project.analyses.ProgramRel.save()V#ConditionalBranch(I,lt,18)#2
chord.project.analyses.ProgramRel.save()V#Get(Ljava/io/PrintStream;,STATIC,Ljava/lang/System;,out)#3
chord.project.analyses.ProgramRel.save()V#New(Ljava/lang/StringBuilder;,0)#4
chord.project.analyses.ProgramRel.save()V#Dup(1,0)#5
chord.project.analyses.ProgramRel.save()V#Constant(Ljava/lang/String;,"SAVING rel ")#6
chord.project.analyses.ProgramRel.save()V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#7
chord.project.analyses.ProgramRel.save()V#LocalLoad(Ljava/lang/Object;,0)#8
chord.project.analyses.ProgramRel.save()V#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/analyses/ProgramRel;,name)#9
chord.project.analyses.ProgramRel.save()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#10
chord.project.analyses.ProgramRel.save()V#Constant(Ljava/lang/String;," size: ")#11
chord.project.analyses.ProgramRel.save()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#12
chord.project.analyses.ProgramRel.save()V#LocalLoad(Ljava/lang/Object;,0)#13
chord.project.analyses.ProgramRel.save()V#Invoke(VIRTUAL,Lchord/project/analyses/ProgramRel;,size,()I)#14
chord.bddbddb.Rel.size()I#LocalLoad(Ljava/lang/Object;,0)#0
chord.bddbddb.Rel.size()I#Get(Lnet/sf/javabdd/BDD;,NONSTATIC,Lchord/bddbddb/Rel;,bdd)#1
chord.bddbddb.Rel.size()I#Constant(L;,null)#2
chord.bddbddb.Rel.size()I#ConditionalBranch(Ljava/lang/Object;,ne,9)#3
chord.bddbddb.Rel.size()I#LocalLoad(Ljava/lang/Object;,0)#9
chord.bddbddb.Rel.size()I#Get(Lnet/sf/javabdd/BDD;,NONSTATIC,Lchord/bddbddb/Rel;,bdd)#10
chord.bddbddb.Rel.size()I#LocalLoad(Ljava/lang/Object;,0)#11
chord.bddbddb.Rel.size()I#Get(Lnet/sf/javabdd/BDD;,NONSTATIC,Lchord/bddbddb/Rel;,iterBdd)#12
chord.bddbddb.Rel.size()I#Invoke(VIRTUAL,Lnet/sf/javabdd/BDD;,satCount,(Lnet/sf/javabdd/BDD;)D)#13
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#Invoke(VIRTUAL,Lnet/sf/javabdd/BDD;,getFactory,()Lnet/sf/javabdd/BDDFactory;)#1
net.sf.javabdd.JFactory$bdd.getFactory()Lnet/sf/javabdd/BDDFactory;#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory$bdd.getFactory()Lnet/sf/javabdd/BDDFactory;#Get(Lnet/sf/javabdd/JFactory;,NONSTATIC,Lnet/sf/javabdd/JFactory$bdd;,this$0)#1
net.sf.javabdd.JFactory$bdd.getFactory()Lnet/sf/javabdd/BDDFactory;#Return(Ljava/lang/Object;)#2
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#LocalStore(Ljava/lang/Object;,2)#2
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#LocalLoad(Ljava/lang/Object;,2)#3
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDFactory;,varNum,()I)#4
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#Conversion(I,D)#5
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#LocalStore(D,3)#6
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#LocalLoad(Ljava/lang/Object;,1)#7
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#Invoke(VIRTUAL,Lnet/sf/javabdd/BDD;,isZero,()Z)#8
net.sf.javabdd.JFactory$bdd.isZero()Z#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory$bdd.isZero()Z#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$bdd;,_index)#1
net.sf.javabdd.JFactory$bdd.isZero()Z#Constant(I,0)#2
net.sf.javabdd.JFactory$bdd.isZero()Z#ConditionalBranch(I,ne,6)#3
net.sf.javabdd.JFactory$bdd.isZero()Z#Constant(I,0)#6
net.sf.javabdd.JFactory$bdd.isZero()Z#Return(I)#7
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#Constant(I,0)#9
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#ConditionalBranch(I,ne,19)#10
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#LocalLoad(Ljava/lang/Object;,1)#11
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#Invoke(VIRTUAL,Lnet/sf/javabdd/BDD;,isOne,()Z)#12
net.sf.javabdd.JFactory$bdd.isOne()Z#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory$bdd.isOne()Z#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$bdd;,_index)#1
net.sf.javabdd.JFactory$bdd.isOne()Z#Constant(I,1)#2
net.sf.javabdd.JFactory$bdd.isOne()Z#ConditionalBranch(I,ne,6)#3
net.sf.javabdd.JFactory$bdd.isOne()Z#Constant(I,0)#6
net.sf.javabdd.JFactory$bdd.isOne()Z#Return(I)#7
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#Constant(I,0)#13
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#ConditionalBranch(I,ne,19)#14
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#LocalLoad(Ljava/lang/Object;,0)#15
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#Invoke(VIRTUAL,Lnet/sf/javabdd/BDD;,isZero,()Z)#16
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#Constant(I,0)#17
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#ConditionalBranch(I,eq,21)#18
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#LocalLoad(Ljava/lang/Object;,1)#21
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#Invoke(VIRTUAL,Lnet/sf/javabdd/BDD;,id,()Lnet/sf/javabdd/BDD;)#22
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#LocalStore(Ljava/lang/Object;,5)#23
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#LocalLoad(Ljava/lang/Object;,5)#24
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#Invoke(VIRTUAL,Lnet/sf/javabdd/BDD;,high,()Lnet/sf/javabdd/BDD;)#25
net.sf.javabdd.JFactory$bdd.high()Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory$bdd.high()Lnet/sf/javabdd/BDD;#Get(Lnet/sf/javabdd/JFactory;,NONSTATIC,Lnet/sf/javabdd/JFactory$bdd;,this$0)#1
net.sf.javabdd.JFactory$bdd.high()Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,0)#2
net.sf.javabdd.JFactory$bdd.high()Lnet/sf/javabdd/BDD;#Get(Lnet/sf/javabdd/JFactory;,NONSTATIC,Lnet/sf/javabdd/JFactory$bdd;,this$0)#3
net.sf.javabdd.JFactory$bdd.high()Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,0)#4
net.sf.javabdd.JFactory$bdd.high()Lnet/sf/javabdd/BDD;#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$bdd;,_index)#5
net.sf.javabdd.JFactory$bdd.high()Lnet/sf/javabdd/BDD;#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,access$000,(Lnet/sf/javabdd/JFactory;I)I)#6
net.sf.javabdd.JFactory.access$000(Lnet/sf/javabdd/JFactory;I)I#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.access$000(Lnet/sf/javabdd/JFactory;I)I#LocalLoad(I,1)#1
net.sf.javabdd.JFactory.access$000(Lnet/sf/javabdd/JFactory;I)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HIGH,(I)I)#2
net.sf.javabdd.JFactory.access$000(Lnet/sf/javabdd/JFactory;I)I#Return(I)#3
net.sf.javabdd.JFactory$bdd.high()Lnet/sf/javabdd/BDD;#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,access$100,(Lnet/sf/javabdd/JFactory;I)Lnet/sf/javabdd/JFactory$bdd;)#7
net.sf.javabdd.JFactory$bdd.high()Lnet/sf/javabdd/BDD;#Return(Ljava/lang/Object;)#8
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#LocalStore(Ljava/lang/Object;,6)#26
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#LocalLoad(Ljava/lang/Object;,5)#27
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#Invoke(VIRTUAL,Lnet/sf/javabdd/BDD;,free,()V)#28
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#LocalLoad(Ljava/lang/Object;,6)#29
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#LocalStore(Ljava/lang/Object;,5)#30
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#LocalLoad(D,3)#31
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#Constant(D,1.0)#32
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#BinaryOp(D,sub)#33
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#LocalStore(D,3)#34
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#LocalLoad(Ljava/lang/Object;,5)#35
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#Invoke(VIRTUAL,Lnet/sf/javabdd/BDD;,isOne,()Z)#36
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#Constant(I,0)#37
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#ConditionalBranch(I,ne,43)#38
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#LocalLoad(Ljava/lang/Object;,5)#39
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#Invoke(VIRTUAL,Lnet/sf/javabdd/BDD;,isZero,()Z)#40
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#Constant(I,0)#41
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#ConditionalBranch(I,eq,24)#42
net.sf.javabdd.JFactory$bdd.isOne()Z#Constant(I,1)#4
net.sf.javabdd.JFactory$bdd.isOne()Z#Goto(7)#5
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#LocalLoad(Ljava/lang/Object;,5)#43
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#Invoke(VIRTUAL,Lnet/sf/javabdd/BDD;,free,()V)#44
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#LocalLoad(Ljava/lang/Object;,0)#45
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#Invoke(VIRTUAL,Lnet/sf/javabdd/BDD;,satCount,()D)#46
net.sf.javabdd.JFactory$bdd.satCount()D#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory$bdd.satCount()D#Get(Lnet/sf/javabdd/JFactory;,NONSTATIC,Lnet/sf/javabdd/JFactory$bdd;,this$0)#1
net.sf.javabdd.JFactory$bdd.satCount()D#LocalLoad(Ljava/lang/Object;,0)#2
net.sf.javabdd.JFactory$bdd.satCount()D#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$bdd;,_index)#3
net.sf.javabdd.JFactory$bdd.satCount()D#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_satcount,(I)D)#4
net.sf.javabdd.JFactory.bdd_satcount(I)D#Constant(D,1.0)#0
net.sf.javabdd.JFactory.bdd_satcount(I)D#LocalStore(D,2)#1
net.sf.javabdd.JFactory.bdd_satcount(I)D#LocalLoad(Ljava/lang/Object;,0)#2
net.sf.javabdd.JFactory.bdd_satcount(I)D#LocalLoad(I,1)#3
net.sf.javabdd.JFactory.bdd_satcount(I)D#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,CHECK,(I)V)#4
net.sf.javabdd.JFactory.bdd_satcount(I)D#LocalLoad(Ljava/lang/Object;,0)#5
net.sf.javabdd.JFactory.bdd_satcount(I)D#Get(Lnet/sf/javabdd/JFactory$BddCache;,NONSTATIC,Lnet/sf/javabdd/JFactory;,countcache)#6
net.sf.javabdd.JFactory.bdd_satcount(I)D#Constant(L;,null)#7
net.sf.javabdd.JFactory.bdd_satcount(I)D#ConditionalBranch(Ljava/lang/Object;,ne,15)#8
net.sf.javabdd.JFactory.bdd_satcount(I)D#LocalLoad(Ljava/lang/Object;,0)#9
net.sf.javabdd.JFactory.bdd_satcount(I)D#LocalLoad(Ljava/lang/Object;,0)#10
net.sf.javabdd.JFactory.bdd_satcount(I)D#LocalLoad(Ljava/lang/Object;,0)#11
net.sf.javabdd.JFactory.bdd_satcount(I)D#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,cachesize)#12
net.sf.javabdd.JFactory.bdd_satcount(I)D#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,BddCacheD_init,(I)Lnet/sf/javabdd/JFactory$BddCache;)#13
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalLoad(I,1)#1
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_prime_gte,(I)I)#2
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalStore(I,1)#3
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#New(Lnet/sf/javabdd/JFactory$BddCache;,0)#4
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Dup(1,0)#5
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Constant(L;,null)#6
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory$BddCache;,<init>,(Lnet/sf/javabdd/JFactory$1;)V)#7
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalStore(Ljava/lang/Object;,3)#8
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalLoad(Ljava/lang/Object;,3)#9
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalLoad(I,1)#10
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#New([Lnet/sf/javabdd/JFactory$BddCacheDataD;,1)#11
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Put([Lnet/sf/javabdd/JFactory$BddCacheData;,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCache;,table)#12
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Constant(I,0)#13
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalStore(I,2)#14
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalLoad(I,2)#15
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalLoad(I,1)#16
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#ConditionalBranch(I,ge,37)#17
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalLoad(Ljava/lang/Object;,3)#18
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Get([Lnet/sf/javabdd/JFactory$BddCacheData;,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCache;,table)#19
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalLoad(I,2)#20
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#New(Lnet/sf/javabdd/JFactory$BddCacheDataD;,0)#21
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Dup(1,0)#22
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Constant(L;,null)#23
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory$BddCacheDataD;,<init>,(Lnet/sf/javabdd/JFactory$1;)V)#24
net.sf.javabdd.JFactory$BddCacheDataD.<init>(Lnet/sf/javabdd/JFactory$1;)V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory$BddCacheDataD.<init>(Lnet/sf/javabdd/JFactory$1;)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory$BddCacheDataD;,<init>,()V)#1
net.sf.javabdd.JFactory$BddCacheDataD.<init>()V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory$BddCacheDataD.<init>()V#Constant(L;,null)#1
net.sf.javabdd.JFactory$BddCacheDataD.<init>()V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory$BddCacheData;,<init>,(Lnet/sf/javabdd/JFactory$1;)V)#2
net.sf.javabdd.JFactory$BddCacheDataD.<init>()V#Return(V)#3
net.sf.javabdd.JFactory$BddCacheDataD.<init>(Lnet/sf/javabdd/JFactory$1;)V#Return(V)#2
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#ArrayStore(Ljava/lang/Object;)#25
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalLoad(Ljava/lang/Object;,3)#26
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Get([Lnet/sf/javabdd/JFactory$BddCacheData;,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCache;,table)#27
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalLoad(I,2)#28
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#ArrayLoad(Ljava/lang/Object;)#29
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Constant(I,-1)#30
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCacheData;,a)#31
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalLoad(I,2)#32
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Constant(I,1)#33
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#BinaryOp(I,add)#34
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalStore(I,2)#35
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Goto(15)#36
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalLoad(Ljava/lang/Object;,3)#37
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalLoad(I,1)#38
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCache;,tablesize)#39
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#LocalLoad(Ljava/lang/Object;,3)#40
net.sf.javabdd.JFactory.BddCacheD_init(I)Lnet/sf/javabdd/JFactory$BddCache;#Return(Ljava/lang/Object;)#41
net.sf.javabdd.JFactory.bdd_satcount(I)D#Put(Lnet/sf/javabdd/JFactory$BddCache;,NONSTATIC,Lnet/sf/javabdd/JFactory;,countcache)#14
net.sf.javabdd.JFactory.bdd_satcount(I)D#LocalLoad(Ljava/lang/Object;,0)#15
net.sf.javabdd.JFactory.bdd_satcount(I)D#Constant(I,2)#16
net.sf.javabdd.JFactory.bdd_satcount(I)D#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,miscid)#17
net.sf.javabdd.JFactory.bdd_satcount(I)D#Constant(D,2.0)#18
net.sf.javabdd.JFactory.bdd_satcount(I)D#LocalLoad(Ljava/lang/Object;,0)#19
net.sf.javabdd.JFactory.bdd_satcount(I)D#LocalLoad(I,1)#20
net.sf.javabdd.JFactory.bdd_satcount(I)D#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LEVEL,(I)I)#21
net.sf.javabdd.JFactory.bdd_satcount(I)D#Conversion(I,D)#22
net.sf.javabdd.JFactory.bdd_satcount(I)D#Invoke(STATIC,Ljava/lang/Math;,pow,(DD)D)#23
net.sf.javabdd.JFactory.bdd_satcount(I)D#LocalStore(D,2)#24
net.sf.javabdd.JFactory.bdd_satcount(I)D#LocalLoad(D,2)#25
net.sf.javabdd.JFactory.bdd_satcount(I)D#LocalLoad(Ljava/lang/Object;,0)#26
net.sf.javabdd.JFactory.bdd_satcount(I)D#LocalLoad(I,1)#27
net.sf.javabdd.JFactory.bdd_satcount(I)D#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,satcount_rec,(I)D)#28
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(I,1)#0
net.sf.javabdd.JFactory.satcount_rec(I)D#Constant(I,2)#1
net.sf.javabdd.JFactory.satcount_rec(I)D#ConditionalBranch(I,ge,6)#2
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(Ljava/lang/Object;,0)#6
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(Ljava/lang/Object;,0)#7
net.sf.javabdd.JFactory.satcount_rec(I)D#Get(Lnet/sf/javabdd/JFactory$BddCache;,NONSTATIC,Lnet/sf/javabdd/JFactory;,countcache)#8
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(I,1)#9
net.sf.javabdd.JFactory.satcount_rec(I)D#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,SATCOUHASH,(I)I)#10
net.sf.javabdd.JFactory.SATCOUHASH(I)I#LocalLoad(I,0)#0
net.sf.javabdd.JFactory.SATCOUHASH(I)I#Return(I)#1
net.sf.javabdd.JFactory.satcount_rec(I)D#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,BddCache_lookupD,(Lnet/sf/javabdd/JFactory$BddCache;I)Lnet/sf/javabdd/JFactory$BddCacheDataD;)#11
net.sf.javabdd.JFactory.BddCache_lookupD(Lnet/sf/javabdd/JFactory$BddCache;I)Lnet/sf/javabdd/JFactory$BddCacheDataD;#LocalLoad(Ljava/lang/Object;,1)#0
net.sf.javabdd.JFactory.BddCache_lookupD(Lnet/sf/javabdd/JFactory$BddCache;I)Lnet/sf/javabdd/JFactory$BddCacheDataD;#Get([Lnet/sf/javabdd/JFactory$BddCacheData;,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCache;,table)#1
net.sf.javabdd.JFactory.BddCache_lookupD(Lnet/sf/javabdd/JFactory$BddCache;I)Lnet/sf/javabdd/JFactory$BddCacheDataD;#LocalLoad(I,2)#2
net.sf.javabdd.JFactory.BddCache_lookupD(Lnet/sf/javabdd/JFactory$BddCache;I)Lnet/sf/javabdd/JFactory$BddCacheDataD;#LocalLoad(Ljava/lang/Object;,1)#3
net.sf.javabdd.JFactory.BddCache_lookupD(Lnet/sf/javabdd/JFactory$BddCache;I)Lnet/sf/javabdd/JFactory$BddCacheDataD;#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCache;,tablesize)#4
net.sf.javabdd.JFactory.BddCache_lookupD(Lnet/sf/javabdd/JFactory$BddCache;I)Lnet/sf/javabdd/JFactory$BddCacheDataD;#BinaryOp(I,rem)#5
net.sf.javabdd.JFactory.BddCache_lookupD(Lnet/sf/javabdd/JFactory$BddCache;I)Lnet/sf/javabdd/JFactory$BddCacheDataD;#Invoke(STATIC,Ljava/lang/Math;,abs,(I)I)#6
net.sf.javabdd.JFactory.BddCache_lookupD(Lnet/sf/javabdd/JFactory$BddCache;I)Lnet/sf/javabdd/JFactory$BddCacheDataD;#ArrayLoad(Ljava/lang/Object;)#7
net.sf.javabdd.JFactory.BddCache_lookupD(Lnet/sf/javabdd/JFactory$BddCache;I)Lnet/sf/javabdd/JFactory$BddCacheDataD;#CheckCast(Lnet/sf/javabdd/JFactory$BddCacheDataD;)#8
net.sf.javabdd.JFactory.BddCache_lookupD(Lnet/sf/javabdd/JFactory$BddCache;I)Lnet/sf/javabdd/JFactory$BddCacheDataD;#Return(Ljava/lang/Object;)#9
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalStore(Ljava/lang/Object;,2)#12
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(Ljava/lang/Object;,2)#13
net.sf.javabdd.JFactory.satcount_rec(I)D#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCacheDataD;,a)#14
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(I,1)#15
net.sf.javabdd.JFactory.satcount_rec(I)D#ConditionalBranch(I,ne,25)#16
net.sf.javabdd.JFactory.satcount_rec(I)D#Constant(D,0.0)#25
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalStore(D,3)#26
net.sf.javabdd.JFactory.satcount_rec(I)D#Constant(D,1.0)#27
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalStore(D,5)#28
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(D,5)#29
net.sf.javabdd.JFactory.satcount_rec(I)D#Constant(D,2.0)#30
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(Ljava/lang/Object;,0)#31
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(Ljava/lang/Object;,0)#32
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(I,1)#33
net.sf.javabdd.JFactory.satcount_rec(I)D#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LOW,(I)I)#34
net.sf.javabdd.JFactory.satcount_rec(I)D#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LEVEL,(I)I)#35
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(Ljava/lang/Object;,0)#36
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(I,1)#37
net.sf.javabdd.JFactory.satcount_rec(I)D#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LEVEL,(I)I)#38
net.sf.javabdd.JFactory.satcount_rec(I)D#BinaryOp(I,sub)#39
net.sf.javabdd.JFactory.satcount_rec(I)D#Constant(I,1)#40
net.sf.javabdd.JFactory.satcount_rec(I)D#BinaryOp(I,sub)#41
net.sf.javabdd.JFactory.satcount_rec(I)D#Conversion(I,F)#42
net.sf.javabdd.JFactory.satcount_rec(I)D#Conversion(F,D)#43
net.sf.javabdd.JFactory.satcount_rec(I)D#Invoke(STATIC,Ljava/lang/Math;,pow,(DD)D)#44
net.sf.javabdd.JFactory.satcount_rec(I)D#BinaryOp(D,mul)#45
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalStore(D,5)#46
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(D,3)#47
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(D,5)#48
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(Ljava/lang/Object;,0)#49
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(Ljava/lang/Object;,0)#50
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(I,1)#51
net.sf.javabdd.JFactory.satcount_rec(I)D#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LOW,(I)I)#52
net.sf.javabdd.JFactory.satcount_rec(I)D#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,satcount_rec,(I)D)#53
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(I,1)#3
net.sf.javabdd.JFactory.satcount_rec(I)D#Conversion(I,D)#4
net.sf.javabdd.JFactory.satcount_rec(I)D#Return(D)#5
net.sf.javabdd.JFactory.satcount_rec(I)D#BinaryOp(D,mul)#54
net.sf.javabdd.JFactory.satcount_rec(I)D#BinaryOp(D,add)#55
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalStore(D,3)#56
net.sf.javabdd.JFactory.satcount_rec(I)D#Constant(D,1.0)#57
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalStore(D,5)#58
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(D,5)#59
net.sf.javabdd.JFactory.satcount_rec(I)D#Constant(D,2.0)#60
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(Ljava/lang/Object;,0)#61
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(Ljava/lang/Object;,0)#62
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(I,1)#63
net.sf.javabdd.JFactory.satcount_rec(I)D#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HIGH,(I)I)#64
net.sf.javabdd.JFactory.satcount_rec(I)D#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LEVEL,(I)I)#65
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(Ljava/lang/Object;,0)#66
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(I,1)#67
net.sf.javabdd.JFactory.satcount_rec(I)D#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LEVEL,(I)I)#68
net.sf.javabdd.JFactory.satcount_rec(I)D#BinaryOp(I,sub)#69
net.sf.javabdd.JFactory.satcount_rec(I)D#Constant(I,1)#70
net.sf.javabdd.JFactory.satcount_rec(I)D#BinaryOp(I,sub)#71
net.sf.javabdd.JFactory.satcount_rec(I)D#Conversion(I,F)#72
net.sf.javabdd.JFactory.satcount_rec(I)D#Conversion(F,D)#73
net.sf.javabdd.JFactory.satcount_rec(I)D#Invoke(STATIC,Ljava/lang/Math;,pow,(DD)D)#74
net.sf.javabdd.JFactory.satcount_rec(I)D#BinaryOp(D,mul)#75
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalStore(D,5)#76
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(D,3)#77
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(D,5)#78
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(Ljava/lang/Object;,0)#79
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(Ljava/lang/Object;,0)#80
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(I,1)#81
net.sf.javabdd.JFactory.satcount_rec(I)D#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HIGH,(I)I)#82
net.sf.javabdd.JFactory.satcount_rec(I)D#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,satcount_rec,(I)D)#83
net.sf.javabdd.JFactory.satcount_rec(I)D#BinaryOp(D,mul)#84
net.sf.javabdd.JFactory.satcount_rec(I)D#BinaryOp(D,add)#85
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalStore(D,3)#86
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(Ljava/lang/Object;,2)#87
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(I,1)#88
net.sf.javabdd.JFactory.satcount_rec(I)D#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCacheDataD;,a)#89
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(Ljava/lang/Object;,2)#90
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(Ljava/lang/Object;,0)#91
net.sf.javabdd.JFactory.satcount_rec(I)D#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,miscid)#92
net.sf.javabdd.JFactory.satcount_rec(I)D#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCacheDataD;,c)#93
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(Ljava/lang/Object;,2)#94
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(D,3)#95
net.sf.javabdd.JFactory.satcount_rec(I)D#Put(D,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCacheDataD;,dres)#96
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(D,3)#97
net.sf.javabdd.JFactory.satcount_rec(I)D#Return(D)#98
net.sf.javabdd.JFactory.bdd_satcount(I)D#BinaryOp(D,mul)#29
net.sf.javabdd.JFactory.bdd_satcount(I)D#Return(D)#30
net.sf.javabdd.JFactory$bdd.satCount()D#Return(D)#5
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#Constant(D,2.0)#47
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#LocalLoad(D,3)#48
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#Invoke(STATIC,Ljava/lang/Math;,pow,(DD)D)#49
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#BinaryOp(D,div)#50
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#LocalStore(D,3)#51
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#LocalLoad(D,3)#52
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#Constant(D,1.0)#53
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#Comparison(D,cmpl)#54
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#Constant(I,0)#55
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#ConditionalBranch(I,lt,59)#56
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#LocalLoad(D,3)#57
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#Goto(60)#58
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#Return(D)#60
chord.bddbddb.Rel.size()I#Conversion(D,I)#14
chord.bddbddb.Rel.size()I#Return(I)#15
chord.project.analyses.ProgramRel.save()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#15
chord.project.analyses.ProgramRel.save()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#16
chord.project.analyses.ProgramRel.save()V#Invoke(VIRTUAL,Ljava/io/PrintStream;,println,(Ljava/lang/String;)V)#17
chord.project.analyses.ProgramRel.save()V#LocalLoad(Ljava/lang/Object;,0)#18
chord.project.analyses.ProgramRel.save()V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,bddbddbWorkDirName)#19
chord.project.analyses.ProgramRel.save()V#Invoke(SPECIAL,Lchord/bddbddb/Rel;,save,(Ljava/lang/String;)V)#20
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Get(Lnet/sf/javabdd/BDD;,NONSTATIC,Lchord/bddbddb/Rel;,bdd)#1
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Constant(L;,null)#2
chord.bddbddb.Rel.save(Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,ne,9)#3
chord.bddbddb.Rel.save(Ljava/lang/String;)V#New(Ljava/io/File;,0)#9
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Dup(1,0)#10
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#11
chord.bddbddb.Rel.save(Ljava/lang/String;)V#New(Ljava/lang/StringBuilder;,0)#12
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Dup(1,0)#13
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#14
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Get(Ljava/lang/String;,NONSTATIC,Lchord/bddbddb/Rel;,name)#15
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#16
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#17
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Constant(Ljava/lang/String;,".bdd")#18
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#19
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#20
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/io/File;,<init>,(Ljava/lang/String;Ljava/lang/String;)V)#21
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,2)#22
chord.bddbddb.Rel.save(Ljava/lang/String;)V#New(Ljava/io/BufferedWriter;,0)#23
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Dup(1,0)#24
chord.bddbddb.Rel.save(Ljava/lang/String;)V#New(Ljava/io/FileWriter;,0)#25
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Dup(1,0)#26
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#27
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/io/FileWriter;,<init>,(Ljava/io/File;)V)#28
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/io/BufferedWriter;,<init>,(Ljava/io/Writer;)V)#29
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,3)#30
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#31
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Constant(I,35)#32
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/io/BufferedWriter;,write,(I)V)#33
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#34
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Get([Lnet/sf/javabdd/BDDDomain;,NONSTATIC,Lchord/bddbddb/Rel;,domBdds)#35
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Dup(1,0)#36
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,7)#37
chord.bddbddb.Rel.save(Ljava/lang/String;)V#ArrayLength()#38
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalStore(I,6)#39
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Constant(I,0)#40
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalStore(I,5)#41
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Goto(65)#42
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(I,5)#65
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(I,6)#66
chord.bddbddb.Rel.save(Ljava/lang/String;)V#ConditionalBranch(I,lt,43)#67
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,7)#43
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(I,5)#44
chord.bddbddb.Rel.save(Ljava/lang/String;)V#ArrayLoad(Ljava/lang/Object;)#45
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,4)#46
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#47
chord.bddbddb.Rel.save(Ljava/lang/String;)V#New(Ljava/lang/StringBuilder;,0)#48
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Dup(1,0)#49
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Constant(Ljava/lang/String;," ")#50
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#51
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,4)#52
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/Object;)Ljava/lang/StringBuilder;)#53
net.sf.javabdd.BDDDomain.toString()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.BDDDomain.toString()Ljava/lang/String;#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDDomain;,getName,()Ljava/lang/String;)#1
net.sf.javabdd.BDDDomain.toString()Ljava/lang/String;#Return(Ljava/lang/Object;)#2
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Constant(Ljava/lang/String;,":")#54
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#55
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,4)#56
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDDomain;,varNum,()I)#57
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#58
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#59
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/io/BufferedWriter;,write,(Ljava/lang/String;)V)#60
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(I,5)#61
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Constant(I,1)#62
chord.bddbddb.Rel.save(Ljava/lang/String;)V#BinaryOp(I,add)#63
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalStore(I,5)#64
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#68
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Constant(I,10)#69
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/io/BufferedWriter;,write,(I)V)#70
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#71
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Get([Lnet/sf/javabdd/BDDDomain;,NONSTATIC,Lchord/bddbddb/Rel;,domBdds)#72
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Dup(1,0)#73
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,7)#74
chord.bddbddb.Rel.save(Ljava/lang/String;)V#ArrayLength()#75
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalStore(I,6)#76
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Constant(I,0)#77
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalStore(I,5)#78
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Goto(123)#79
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(I,5)#123
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(I,6)#124
chord.bddbddb.Rel.save(Ljava/lang/String;)V#ConditionalBranch(I,lt,80)#125
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,7)#80
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(I,5)#81
chord.bddbddb.Rel.save(Ljava/lang/String;)V#ArrayLoad(Ljava/lang/Object;)#82
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,4)#83
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#84
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Constant(I,35)#85
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/io/BufferedWriter;,write,(I)V)#86
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,4)#87
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDDomain;,vars,()[I)#88
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Dup(1,0)#89
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,11)#90
chord.bddbddb.Rel.save(Ljava/lang/String;)V#ArrayLength()#91
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalStore(I,10)#92
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Constant(I,0)#93
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalStore(I,9)#94
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Goto(113)#95
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(I,9)#113
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(I,10)#114
chord.bddbddb.Rel.save(Ljava/lang/String;)V#ConditionalBranch(I,lt,96)#115
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,11)#96
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(I,9)#97
chord.bddbddb.Rel.save(Ljava/lang/String;)V#ArrayLoad(I)#98
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalStore(I,8)#99
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#100
chord.bddbddb.Rel.save(Ljava/lang/String;)V#New(Ljava/lang/StringBuilder;,0)#101
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Dup(1,0)#102
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Constant(Ljava/lang/String;," ")#103
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#104
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(I,8)#105
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#106
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#107
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/io/BufferedWriter;,write,(Ljava/lang/String;)V)#108
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(I,9)#109
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Constant(I,1)#110
chord.bddbddb.Rel.save(Ljava/lang/String;)V#BinaryOp(I,add)#111
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalStore(I,9)#112
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#116
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Constant(I,10)#117
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/io/BufferedWriter;,write,(I)V)#118
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(I,5)#119
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Constant(I,1)#120
chord.bddbddb.Rel.save(Ljava/lang/String;)V#BinaryOp(I,add)#121
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalStore(I,5)#122
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#126
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Get(Lnet/sf/javabdd/BDDFactory;,NONSTATIC,Lchord/bddbddb/Rel;,factory)#127
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#128
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#129
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Get(Lnet/sf/javabdd/BDD;,NONSTATIC,Lchord/bddbddb/Rel;,bdd)#130
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDFactory;,save,(Ljava/io/BufferedWriter;Lnet/sf/javabdd/BDD;)V)#131
net.sf.javabdd.JFactory.save(Ljava/io/BufferedWriter;Lnet/sf/javabdd/BDD;)V#LocalLoad(Ljava/lang/Object;,2)#0
net.sf.javabdd.JFactory.save(Ljava/io/BufferedWriter;Lnet/sf/javabdd/BDD;)V#CheckCast(Lnet/sf/javabdd/JFactory$bdd;)#1
net.sf.javabdd.JFactory.save(Ljava/io/BufferedWriter;Lnet/sf/javabdd/BDD;)V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$bdd;,_index)#2
net.sf.javabdd.JFactory.save(Ljava/io/BufferedWriter;Lnet/sf/javabdd/BDD;)V#LocalStore(I,3)#3
net.sf.javabdd.JFactory.save(Ljava/io/BufferedWriter;Lnet/sf/javabdd/BDD;)V#LocalLoad(Ljava/lang/Object;,0)#4
net.sf.javabdd.JFactory.save(Ljava/io/BufferedWriter;Lnet/sf/javabdd/BDD;)V#LocalLoad(Ljava/lang/Object;,1)#5
net.sf.javabdd.JFactory.save(Ljava/io/BufferedWriter;Lnet/sf/javabdd/BDD;)V#LocalLoad(I,3)#6
net.sf.javabdd.JFactory.save(Ljava/io/BufferedWriter;Lnet/sf/javabdd/BDD;)V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_save,(Ljava/io/BufferedWriter;I)V)#7
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Constant(I,1)#0
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#New([I,1)#1
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#LocalStore(Ljava/lang/Object;,3)#2
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#LocalLoad(I,2)#3
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Constant(I,2)#4
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#ConditionalBranch(I,ge,19)#5
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#LocalLoad(Ljava/lang/Object;,0)#19
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#LocalLoad(I,2)#20
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#LocalLoad(Ljava/lang/Object;,3)#21
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_markcount,(I[I)V)#22
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#LocalLoad(I,1)#0
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#Constant(I,2)#1
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#ConditionalBranch(I,ge,4)#2
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#LocalLoad(Ljava/lang/Object;,0)#4
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#LocalLoad(I,1)#5
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,MARKED,(I)Z)#6
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#Constant(I,0)#7
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#ConditionalBranch(I,ne,14)#8
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#LocalLoad(Ljava/lang/Object;,0)#9
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#LocalLoad(I,1)#10
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LOW,(I)I)#11
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#Constant(I,-1)#12
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#ConditionalBranch(I,ne,15)#13
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#LocalLoad(Ljava/lang/Object;,0)#15
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#LocalLoad(I,1)#16
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETMARK,(I)V)#17
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#LocalLoad(Ljava/lang/Object;,2)#18
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#Constant(I,0)#19
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#Dup(2,0)#20
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#ArrayLoad(I)#21
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#Constant(I,1)#22
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#BinaryOp(I,add)#23
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#ArrayStore(I)#24
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#LocalLoad(Ljava/lang/Object;,0)#25
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#LocalLoad(Ljava/lang/Object;,0)#26
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#LocalLoad(I,1)#27
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LOW,(I)I)#28
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#LocalLoad(Ljava/lang/Object;,2)#29
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_markcount,(I[I)V)#30
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#Return(V)#3
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#LocalLoad(Ljava/lang/Object;,0)#31
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#LocalLoad(Ljava/lang/Object;,0)#32
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#LocalLoad(I,1)#33
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HIGH,(I)I)#34
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#LocalLoad(Ljava/lang/Object;,2)#35
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_markcount,(I[I)V)#36
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#Return(V)#37
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#LocalLoad(Ljava/lang/Object;,0)#23
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#LocalLoad(I,2)#24
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_unmark,(I)V)#25
net.sf.javabdd.JFactory.bdd_unmark(I)V#LocalLoad(I,1)#0
net.sf.javabdd.JFactory.bdd_unmark(I)V#Constant(I,2)#1
net.sf.javabdd.JFactory.bdd_unmark(I)V#ConditionalBranch(I,ge,4)#2
net.sf.javabdd.JFactory.bdd_unmark(I)V#LocalLoad(Ljava/lang/Object;,0)#4
net.sf.javabdd.JFactory.bdd_unmark(I)V#LocalLoad(I,1)#5
net.sf.javabdd.JFactory.bdd_unmark(I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,MARKED,(I)Z)#6
net.sf.javabdd.JFactory.bdd_unmark(I)V#Constant(I,0)#7
net.sf.javabdd.JFactory.bdd_unmark(I)V#ConditionalBranch(I,eq,14)#8
net.sf.javabdd.JFactory.bdd_unmark(I)V#LocalLoad(Ljava/lang/Object;,0)#9
net.sf.javabdd.JFactory.bdd_unmark(I)V#LocalLoad(I,1)#10
net.sf.javabdd.JFactory.bdd_unmark(I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LOW,(I)I)#11
net.sf.javabdd.JFactory.bdd_unmark(I)V#Constant(I,-1)#12
net.sf.javabdd.JFactory.bdd_unmark(I)V#ConditionalBranch(I,ne,15)#13
net.sf.javabdd.JFactory.bdd_unmark(I)V#LocalLoad(Ljava/lang/Object;,0)#15
net.sf.javabdd.JFactory.bdd_unmark(I)V#LocalLoad(I,1)#16
net.sf.javabdd.JFactory.bdd_unmark(I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,UNMARK,(I)V)#17
net.sf.javabdd.JFactory.bdd_unmark(I)V#LocalLoad(Ljava/lang/Object;,0)#18
net.sf.javabdd.JFactory.bdd_unmark(I)V#LocalLoad(Ljava/lang/Object;,0)#19
net.sf.javabdd.JFactory.bdd_unmark(I)V#LocalLoad(I,1)#20
net.sf.javabdd.JFactory.bdd_unmark(I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LOW,(I)I)#21
net.sf.javabdd.JFactory.bdd_unmark(I)V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_unmark,(I)V)#22
net.sf.javabdd.JFactory.bdd_unmark(I)V#Return(V)#3
net.sf.javabdd.JFactory.bdd_unmark(I)V#LocalLoad(Ljava/lang/Object;,0)#23
net.sf.javabdd.JFactory.bdd_unmark(I)V#LocalLoad(Ljava/lang/Object;,0)#24
net.sf.javabdd.JFactory.bdd_unmark(I)V#LocalLoad(I,1)#25
net.sf.javabdd.JFactory.bdd_unmark(I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HIGH,(I)I)#26
net.sf.javabdd.JFactory.bdd_unmark(I)V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_unmark,(I)V)#27
net.sf.javabdd.JFactory.bdd_unmark(I)V#Return(V)#28
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#LocalLoad(Ljava/lang/Object;,1)#26
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#New(Ljava/lang/StringBuilder;,0)#27
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Dup(1,0)#28
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#29
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#LocalLoad(Ljava/lang/Object;,3)#30
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Constant(I,0)#31
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#ArrayLoad(I)#32
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#33
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Constant(Ljava/lang/String;," ")#34
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#35
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#LocalLoad(Ljava/lang/Object;,0)#36
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#37
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#38
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Constant(Ljava/lang/String;,"\
")#39
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#40
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#41
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/io/BufferedWriter;,write,(Ljava/lang/String;)V)#42
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Constant(I,0)#43
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#LocalStore(I,4)#44
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#LocalLoad(I,4)#45
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#LocalLoad(Ljava/lang/Object;,0)#46
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#47
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#ConditionalBranch(I,ge,67)#48
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#LocalLoad(Ljava/lang/Object;,1)#49
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#New(Ljava/lang/StringBuilder;,0)#50
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Dup(1,0)#51
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#52
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#LocalLoad(Ljava/lang/Object;,0)#53
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvar2level)#54
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#LocalLoad(I,4)#55
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#ArrayLoad(I)#56
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#57
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Constant(Ljava/lang/String;," ")#58
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#59
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#60
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/io/BufferedWriter;,write,(Ljava/lang/String;)V)#61
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#LocalLoad(I,4)#62
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Constant(I,1)#63
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#BinaryOp(I,add)#64
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#LocalStore(I,4)#65
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Goto(45)#66
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#LocalLoad(Ljava/lang/Object;,1)#67
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Constant(Ljava/lang/String;,"\
")#68
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/io/BufferedWriter;,write,(Ljava/lang/String;)V)#69
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#LocalLoad(Ljava/lang/Object;,0)#70
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#LocalLoad(Ljava/lang/Object;,1)#71
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#LocalLoad(I,2)#72
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_save_rec,(Ljava/io/BufferedWriter;I)V)#73
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#LocalLoad(I,2)#0
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Constant(I,2)#1
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#ConditionalBranch(I,ge,4)#2
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#LocalLoad(Ljava/lang/Object;,0)#4
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#LocalLoad(I,2)#5
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,MARKED,(I)Z)#6
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Constant(I,0)#7
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#ConditionalBranch(I,eq,10)#8
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#LocalLoad(Ljava/lang/Object;,0)#10
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#LocalLoad(I,2)#11
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETMARK,(I)V)#12
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#LocalLoad(Ljava/lang/Object;,0)#13
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#LocalLoad(Ljava/lang/Object;,1)#14
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#LocalLoad(Ljava/lang/Object;,0)#15
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#LocalLoad(I,2)#16
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LOW,(I)I)#17
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_save_rec,(Ljava/io/BufferedWriter;I)V)#18
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Return(V)#3
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#LocalLoad(Ljava/lang/Object;,0)#19
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#LocalLoad(Ljava/lang/Object;,1)#20
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#LocalLoad(Ljava/lang/Object;,0)#21
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#LocalLoad(I,2)#22
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HIGH,(I)I)#23
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_save_rec,(Ljava/io/BufferedWriter;I)V)#24
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#LocalLoad(Ljava/lang/Object;,1)#25
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#New(Ljava/lang/StringBuilder;,0)#26
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Dup(1,0)#27
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#28
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#LocalLoad(I,2)#29
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#30
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Constant(Ljava/lang/String;," ")#31
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#32
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#33
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/io/BufferedWriter;,write,(Ljava/lang/String;)V)#34
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#LocalLoad(Ljava/lang/Object;,1)#35
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#New(Ljava/lang/StringBuilder;,0)#36
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Dup(1,0)#37
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#38
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#LocalLoad(Ljava/lang/Object;,0)#39
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddlevel2var)#40
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#LocalLoad(Ljava/lang/Object;,0)#41
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#LocalLoad(I,2)#42
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LEVEL,(I)I)#43
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#ArrayLoad(I)#44
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#45
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Constant(Ljava/lang/String;," ")#46
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#47
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#48
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/io/BufferedWriter;,write,(Ljava/lang/String;)V)#49
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#LocalLoad(Ljava/lang/Object;,1)#50
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#New(Ljava/lang/StringBuilder;,0)#51
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Dup(1,0)#52
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#53
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#LocalLoad(Ljava/lang/Object;,0)#54
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#LocalLoad(I,2)#55
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LOW,(I)I)#56
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#57
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Constant(Ljava/lang/String;," ")#58
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#59
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#60
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/io/BufferedWriter;,write,(Ljava/lang/String;)V)#61
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#LocalLoad(Ljava/lang/Object;,1)#62
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#New(Ljava/lang/StringBuilder;,0)#63
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Dup(1,0)#64
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#65
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#LocalLoad(Ljava/lang/Object;,0)#66
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#LocalLoad(I,2)#67
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HIGH,(I)I)#68
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#69
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Constant(Ljava/lang/String;,"\
")#70
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#71
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#72
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/io/BufferedWriter;,write,(Ljava/lang/String;)V)#73
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Return(V)#74
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#LocalLoad(Ljava/lang/Object;,0)#74
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#LocalLoad(I,2)#75
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_unmark,(I)V)#76
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#LocalLoad(Ljava/lang/Object;,1)#77
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/io/BufferedWriter;,flush,()V)#78
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Return(V)#79
net.sf.javabdd.JFactory.save(Ljava/io/BufferedWriter;Lnet/sf/javabdd/BDD;)V#Return(V)#8
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#132
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/io/BufferedWriter;,close,()V)#133
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Goto(141)#134
chord.bddbddb.Rel.save(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#141
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Invoke(VIRTUAL,Lchord/bddbddb/Rel;,close,()V)#142
chord.bddbddb.Rel.close()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.bddbddb.Rel.close()V#Get(Lnet/sf/javabdd/BDD;,NONSTATIC,Lchord/bddbddb/Rel;,bdd)#1
chord.bddbddb.Rel.close()V#Constant(L;,null)#2
chord.bddbddb.Rel.close()V#ConditionalBranch(Ljava/lang/Object;,ne,9)#3
chord.bddbddb.Rel.close()V#LocalLoad(Ljava/lang/Object;,0)#9
chord.bddbddb.Rel.close()V#Get(Lnet/sf/javabdd/BDDFactory;,NONSTATIC,Lchord/bddbddb/Rel;,factory)#10
chord.bddbddb.Rel.close()V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDFactory;,done,()V)#11
net.sf.javabdd.JFactory.done()V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.done()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_done,()V)#1
net.sf.javabdd.JFactory.bdd_done()V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.bdd_done()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_pairs_done,()V)#1
net.sf.javabdd.JFactory.bdd_pairs_done()V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.bdd_pairs_done()V#Get(Lnet/sf/javabdd/JFactory$bddPair;,NONSTATIC,Lnet/sf/javabdd/JFactory;,pairs)#1
net.sf.javabdd.JFactory.bdd_pairs_done()V#LocalStore(Ljava/lang/Object;,1)#2
net.sf.javabdd.JFactory.bdd_pairs_done()V#LocalLoad(Ljava/lang/Object;,1)#3
net.sf.javabdd.JFactory.bdd_pairs_done()V#Constant(L;,null)#4
net.sf.javabdd.JFactory.bdd_pairs_done()V#ConditionalBranch(Ljava/lang/Object;,eq,38)#5
net.sf.javabdd.JFactory.bdd_pairs_done()V#Return(V)#38
net.sf.javabdd.JFactory.bdd_done()V#LocalLoad(Ljava/lang/Object;,0)#2
net.sf.javabdd.JFactory.bdd_done()V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodes)#3
net.sf.javabdd.JFactory.bdd_done()V#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,free,(Ljava/lang/Object;)V)#4
net.sf.javabdd.JFactory.bdd_done()V#LocalLoad(Ljava/lang/Object;,0)#5
net.sf.javabdd.JFactory.bdd_done()V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddrefstack)#6
net.sf.javabdd.JFactory.bdd_done()V#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,free,(Ljava/lang/Object;)V)#7
net.sf.javabdd.JFactory.bdd_done()V#LocalLoad(Ljava/lang/Object;,0)#8
net.sf.javabdd.JFactory.bdd_done()V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarset)#9
net.sf.javabdd.JFactory.bdd_done()V#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,free,(Ljava/lang/Object;)V)#10
net.sf.javabdd.JFactory.bdd_done()V#LocalLoad(Ljava/lang/Object;,0)#11
net.sf.javabdd.JFactory.bdd_done()V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvar2level)#12
net.sf.javabdd.JFactory.bdd_done()V#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,free,(Ljava/lang/Object;)V)#13
net.sf.javabdd.JFactory.bdd_done()V#LocalLoad(Ljava/lang/Object;,0)#14
net.sf.javabdd.JFactory.bdd_done()V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddlevel2var)#15
net.sf.javabdd.JFactory.bdd_done()V#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,free,(Ljava/lang/Object;)V)#16
net.sf.javabdd.JFactory.bdd_done()V#LocalLoad(Ljava/lang/Object;,0)#17
net.sf.javabdd.JFactory.bdd_done()V#Constant(L;,null)#18
net.sf.javabdd.JFactory.bdd_done()V#Put([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodes)#19
net.sf.javabdd.JFactory.bdd_done()V#LocalLoad(Ljava/lang/Object;,0)#20
net.sf.javabdd.JFactory.bdd_done()V#Constant(L;,null)#21
net.sf.javabdd.JFactory.bdd_done()V#Put([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddrefstack)#22
net.sf.javabdd.JFactory.bdd_done()V#LocalLoad(Ljava/lang/Object;,0)#23
net.sf.javabdd.JFactory.bdd_done()V#Constant(L;,null)#24
net.sf.javabdd.JFactory.bdd_done()V#Put([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarset)#25
net.sf.javabdd.JFactory.bdd_done()V#LocalLoad(Ljava/lang/Object;,0)#26
net.sf.javabdd.JFactory.bdd_done()V#Constant(L;,null)#27
net.sf.javabdd.JFactory.bdd_done()V#Put([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvar2level)#28
net.sf.javabdd.JFactory.bdd_done()V#LocalLoad(Ljava/lang/Object;,0)#29
net.sf.javabdd.JFactory.bdd_done()V#Constant(L;,null)#30
net.sf.javabdd.JFactory.bdd_done()V#Put([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddlevel2var)#31
net.sf.javabdd.JFactory.bdd_done()V#LocalLoad(Ljava/lang/Object;,0)#32
net.sf.javabdd.JFactory.bdd_done()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_operator_done,()V)#33
net.sf.javabdd.JFactory.bdd_operator_done()V#LocalLoad(Ljava/lang/Object;,0)#0
net.sf.javabdd.JFactory.bdd_operator_done()V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,quantvarset)#1
net.sf.javabdd.JFactory.bdd_operator_done()V#Constant(L;,null)#2
net.sf.javabdd.JFactory.bdd_operator_done()V#ConditionalBranch(Ljava/lang/Object;,eq,10)#3
net.sf.javabdd.JFactory.bdd_operator_done()V#LocalLoad(Ljava/lang/Object;,0)#4
net.sf.javabdd.JFactory.bdd_operator_done()V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,quantvarset)#5
net.sf.javabdd.JFactory.bdd_operator_done()V#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,free,(Ljava/lang/Object;)V)#6
net.sf.javabdd.JFactory.bdd_operator_done()V#LocalLoad(Ljava/lang/Object;,0)#7
net.sf.javabdd.JFactory.bdd_operator_done()V#Constant(L;,null)#8
net.sf.javabdd.JFactory.bdd_operator_done()V#Put([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,quantvarset)#9
net.sf.javabdd.JFactory.bdd_operator_done()V#LocalLoad(Ljava/lang/Object;,0)#10
net.sf.javabdd.JFactory.bdd_operator_done()V#LocalLoad(Ljava/lang/Object;,0)#11
net.sf.javabdd.JFactory.bdd_operator_done()V#Get(Lnet/sf/javabdd/JFactory$BddCache;,NONSTATIC,Lnet/sf/javabdd/JFactory;,applycache)#12
net.sf.javabdd.JFactory.bdd_operator_done()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,BddCache_done,(Lnet/sf/javabdd/JFactory$BddCache;)V)#13
net.sf.javabdd.JFactory.BddCache_done(Lnet/sf/javabdd/JFactory$BddCache;)V#LocalLoad(Ljava/lang/Object;,1)#0
net.sf.javabdd.JFactory.BddCache_done(Lnet/sf/javabdd/JFactory$BddCache;)V#Constant(L;,null)#1
net.sf.javabdd.JFactory.BddCache_done(Lnet/sf/javabdd/JFactory$BddCache;)V#ConditionalBranch(Ljava/lang/Object;,ne,4)#2
net.sf.javabdd.JFactory.BddCache_done(Lnet/sf/javabdd/JFactory$BddCache;)V#LocalLoad(Ljava/lang/Object;,1)#4
net.sf.javabdd.JFactory.BddCache_done(Lnet/sf/javabdd/JFactory$BddCache;)V#Get([Lnet/sf/javabdd/JFactory$BddCacheData;,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCache;,table)#5
net.sf.javabdd.JFactory.BddCache_done(Lnet/sf/javabdd/JFactory$BddCache;)V#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,free,(Ljava/lang/Object;)V)#6
net.sf.javabdd.JFactory.BddCache_done(Lnet/sf/javabdd/JFactory$BddCache;)V#LocalLoad(Ljava/lang/Object;,1)#7
net.sf.javabdd.JFactory.BddCache_done(Lnet/sf/javabdd/JFactory$BddCache;)V#Constant(L;,null)#8
net.sf.javabdd.JFactory.BddCache_done(Lnet/sf/javabdd/JFactory$BddCache;)V#Put([Lnet/sf/javabdd/JFactory$BddCacheData;,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCache;,table)#9
net.sf.javabdd.JFactory.BddCache_done(Lnet/sf/javabdd/JFactory$BddCache;)V#LocalLoad(Ljava/lang/Object;,1)#10
net.sf.javabdd.JFactory.BddCache_done(Lnet/sf/javabdd/JFactory$BddCache;)V#Constant(I,0)#11
net.sf.javabdd.JFactory.BddCache_done(Lnet/sf/javabdd/JFactory$BddCache;)V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCache;,tablesize)#12
net.sf.javabdd.JFactory.BddCache_done(Lnet/sf/javabdd/JFactory$BddCache;)V#Return(V)#13
net.sf.javabdd.JFactory.bdd_operator_done()V#LocalLoad(Ljava/lang/Object;,0)#14
net.sf.javabdd.JFactory.bdd_operator_done()V#Constant(L;,null)#15
net.sf.javabdd.JFactory.bdd_operator_done()V#Put(Lnet/sf/javabdd/JFactory$BddCache;,NONSTATIC,Lnet/sf/javabdd/JFactory;,applycache)#16
net.sf.javabdd.JFactory.bdd_operator_done()V#LocalLoad(Ljava/lang/Object;,0)#17
net.sf.javabdd.JFactory.bdd_operator_done()V#LocalLoad(Ljava/lang/Object;,0)#18
net.sf.javabdd.JFactory.bdd_operator_done()V#Get(Lnet/sf/javabdd/JFactory$BddCache;,NONSTATIC,Lnet/sf/javabdd/JFactory;,itecache)#19
net.sf.javabdd.JFactory.bdd_operator_done()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,BddCache_done,(Lnet/sf/javabdd/JFactory$BddCache;)V)#20
net.sf.javabdd.JFactory.BddCache_done(Lnet/sf/javabdd/JFactory$BddCache;)V#Return(V)#3
net.sf.javabdd.JFactory.bdd_operator_done()V#LocalLoad(Ljava/lang/Object;,0)#21
net.sf.javabdd.JFactory.bdd_operator_done()V#Constant(L;,null)#22
net.sf.javabdd.JFactory.bdd_operator_done()V#Put(Lnet/sf/javabdd/JFactory$BddCache;,NONSTATIC,Lnet/sf/javabdd/JFactory;,itecache)#23
net.sf.javabdd.JFactory.bdd_operator_done()V#LocalLoad(Ljava/lang/Object;,0)#24
net.sf.javabdd.JFactory.bdd_operator_done()V#LocalLoad(Ljava/lang/Object;,0)#25
net.sf.javabdd.JFactory.bdd_operator_done()V#Get(Lnet/sf/javabdd/JFactory$BddCache;,NONSTATIC,Lnet/sf/javabdd/JFactory;,quantcache)#26
net.sf.javabdd.JFactory.bdd_operator_done()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,BddCache_done,(Lnet/sf/javabdd/JFactory$BddCache;)V)#27
net.sf.javabdd.JFactory.bdd_operator_done()V#LocalLoad(Ljava/lang/Object;,0)#28
net.sf.javabdd.JFactory.bdd_operator_done()V#Constant(L;,null)#29
net.sf.javabdd.JFactory.bdd_operator_done()V#Put(Lnet/sf/javabdd/JFactory$BddCache;,NONSTATIC,Lnet/sf/javabdd/JFactory;,quantcache)#30
net.sf.javabdd.JFactory.bdd_operator_done()V#LocalLoad(Ljava/lang/Object;,0)#31
net.sf.javabdd.JFactory.bdd_operator_done()V#LocalLoad(Ljava/lang/Object;,0)#32
net.sf.javabdd.JFactory.bdd_operator_done()V#Get(Lnet/sf/javabdd/JFactory$BddCache;,NONSTATIC,Lnet/sf/javabdd/JFactory;,appexcache)#33
net.sf.javabdd.JFactory.bdd_operator_done()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,BddCache_done,(Lnet/sf/javabdd/JFactory$BddCache;)V)#34
net.sf.javabdd.JFactory.bdd_operator_done()V#LocalLoad(Ljava/lang/Object;,0)#35
net.sf.javabdd.JFactory.bdd_operator_done()V#Constant(L;,null)#36
net.sf.javabdd.JFactory.bdd_operator_done()V#Put(Lnet/sf/javabdd/JFactory$BddCache;,NONSTATIC,Lnet/sf/javabdd/JFactory;,appexcache)#37
net.sf.javabdd.JFactory.bdd_operator_done()V#LocalLoad(Ljava/lang/Object;,0)#38
net.sf.javabdd.JFactory.bdd_operator_done()V#LocalLoad(Ljava/lang/Object;,0)#39
net.sf.javabdd.JFactory.bdd_operator_done()V#Get(Lnet/sf/javabdd/JFactory$BddCache;,NONSTATIC,Lnet/sf/javabdd/JFactory;,replacecache)#40
net.sf.javabdd.JFactory.bdd_operator_done()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,BddCache_done,(Lnet/sf/javabdd/JFactory$BddCache;)V)#41
net.sf.javabdd.JFactory.bdd_operator_done()V#LocalLoad(Ljava/lang/Object;,0)#42
net.sf.javabdd.JFactory.bdd_operator_done()V#Constant(L;,null)#43
net.sf.javabdd.JFactory.bdd_operator_done()V#Put(Lnet/sf/javabdd/JFactory$BddCache;,NONSTATIC,Lnet/sf/javabdd/JFactory;,replacecache)#44
net.sf.javabdd.JFactory.bdd_operator_done()V#LocalLoad(Ljava/lang/Object;,0)#45
net.sf.javabdd.JFactory.bdd_operator_done()V#LocalLoad(Ljava/lang/Object;,0)#46
net.sf.javabdd.JFactory.bdd_operator_done()V#Get(Lnet/sf/javabdd/JFactory$BddCache;,NONSTATIC,Lnet/sf/javabdd/JFactory;,misccache)#47
net.sf.javabdd.JFactory.bdd_operator_done()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,BddCache_done,(Lnet/sf/javabdd/JFactory$BddCache;)V)#48
net.sf.javabdd.JFactory.bdd_operator_done()V#LocalLoad(Ljava/lang/Object;,0)#49
net.sf.javabdd.JFactory.bdd_operator_done()V#Constant(L;,null)#50
net.sf.javabdd.JFactory.bdd_operator_done()V#Put(Lnet/sf/javabdd/JFactory$BddCache;,NONSTATIC,Lnet/sf/javabdd/JFactory;,misccache)#51
net.sf.javabdd.JFactory.bdd_operator_done()V#LocalLoad(Ljava/lang/Object;,0)#52
net.sf.javabdd.JFactory.bdd_operator_done()V#LocalLoad(Ljava/lang/Object;,0)#53
net.sf.javabdd.JFactory.bdd_operator_done()V#Get(Lnet/sf/javabdd/JFactory$BddCache;,NONSTATIC,Lnet/sf/javabdd/JFactory;,countcache)#54
net.sf.javabdd.JFactory.bdd_operator_done()V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,BddCache_done,(Lnet/sf/javabdd/JFactory$BddCache;)V)#55
net.sf.javabdd.JFactory.bdd_operator_done()V#LocalLoad(Ljava/lang/Object;,0)#56
net.sf.javabdd.JFactory.bdd_operator_done()V#Constant(L;,null)#57
net.sf.javabdd.JFactory.bdd_operator_done()V#Put(Lnet/sf/javabdd/JFactory$BddCache;,NONSTATIC,Lnet/sf/javabdd/JFactory;,countcache)#58
net.sf.javabdd.JFactory.bdd_operator_done()V#LocalLoad(Ljava/lang/Object;,0)#59
net.sf.javabdd.JFactory.bdd_operator_done()V#Get([I,NONSTATIC,Lnet/sf/javabdd/JFactory;,supportSet)#60
net.sf.javabdd.JFactory.bdd_operator_done()V#Constant(L;,null)#61
net.sf.javabdd.JFactory.bdd_operator_done()V#ConditionalBranch(Ljava/lang/Object;,eq,71)#62
net.sf.javabdd.JFactory.bdd_operator_done()V#Return(V)#71
net.sf.javabdd.JFactory.bdd_done()V#LocalLoad(Ljava/lang/Object;,0)#34
net.sf.javabdd.JFactory.bdd_done()V#Constant(I,0)#35
net.sf.javabdd.JFactory.bdd_done()V#Put(Z,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddrunning)#36
net.sf.javabdd.JFactory.bdd_done()V#LocalLoad(Ljava/lang/Object;,0)#37
net.sf.javabdd.JFactory.bdd_done()V#Constant(I,0)#38
net.sf.javabdd.JFactory.bdd_done()V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddnodesize)#39
net.sf.javabdd.JFactory.bdd_done()V#LocalLoad(Ljava/lang/Object;,0)#40
net.sf.javabdd.JFactory.bdd_done()V#Constant(I,0)#41
net.sf.javabdd.JFactory.bdd_done()V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddmaxnodesize)#42
net.sf.javabdd.JFactory.bdd_done()V#LocalLoad(Ljava/lang/Object;,0)#43
net.sf.javabdd.JFactory.bdd_done()V#Constant(I,0)#44
net.sf.javabdd.JFactory.bdd_done()V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddvarnum)#45
net.sf.javabdd.JFactory.bdd_done()V#LocalLoad(Ljava/lang/Object;,0)#46
net.sf.javabdd.JFactory.bdd_done()V#Constant(I,0)#47
net.sf.javabdd.JFactory.bdd_done()V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddproduced)#48
net.sf.javabdd.JFactory.bdd_done()V#Return(V)#49
net.sf.javabdd.JFactory.done()V#Return(V)#2
chord.bddbddb.Rel.close()V#LocalLoad(Ljava/lang/Object;,0)#12
chord.bddbddb.Rel.close()V#Constant(L;,null)#13
chord.bddbddb.Rel.close()V#Put(Lnet/sf/javabdd/BDD;,NONSTATIC,Lchord/bddbddb/Rel;,bdd)#14
chord.bddbddb.Rel.close()V#Return(V)#15
chord.bddbddb.Rel.save(Ljava/lang/String;)V#Return(V)#143
chord.project.analyses.ProgramRel.save()V#Get(Z,STATIC,Lchord/project/Config;,classic)#21
chord.project.analyses.ProgramRel.save()V#Constant(I,0)#22
chord.project.analyses.ProgramRel.save()V#ConditionalBranch(I,eq,27)#23
chord.project.analyses.ProgramRel.save()V#Invoke(STATIC,Lchord/project/ClassicProject;,g,()Lchord/project/ClassicProject;)#24
chord.project.analyses.ProgramRel.save()V#LocalLoad(Ljava/lang/Object;,0)#25
chord.project.analyses.ProgramRel.save()V#Invoke(VIRTUAL,Lchord/project/ClassicProject;,setTrgtDone,(Ljava/lang/Object;)V)#26
chord.project.analyses.ProgramRel.save()V#Return(V)#27
chord.project.analyses.ProgramRel.run()V#Return(V)#8
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalLoad(Ljava/lang/Object;,0)#14
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Dup(1,0)#15
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreenum)#16
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Constant(I,1)#17
net.sf.javabdd.JFactory.addref_rec(I[Z)V#BinaryOp(I,sub)#18
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreenum)#19
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalLoad(Ljava/lang/Object;,2)#20
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalLoad(Ljava/lang/Object;,0)#21
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalLoad(I,1)#22
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,VARr,(I)I)#23
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Constant(I,-2097153)#24
net.sf.javabdd.JFactory.addref_rec(I[Z)V#BinaryOp(I,and)#25
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Constant(I,1)#26
net.sf.javabdd.JFactory.addref_rec(I[Z)V#ArrayStore(B)#27
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalLoad(Ljava/lang/Object;,0)#28
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Get([Lnet/sf/javabdd/JFactory$levelData;,NONSTATIC,Lnet/sf/javabdd/JFactory;,levels)#29
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalLoad(Ljava/lang/Object;,0)#30
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalLoad(I,1)#31
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,VARr,(I)I)#32
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Constant(I,-2097153)#33
net.sf.javabdd.JFactory.addref_rec(I[Z)V#BinaryOp(I,and)#34
net.sf.javabdd.JFactory.addref_rec(I[Z)V#ArrayLoad(Ljava/lang/Object;)#35
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Dup(1,0)#36
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,nodenum)#37
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Constant(I,1)#38
net.sf.javabdd.JFactory.addref_rec(I[Z)V#BinaryOp(I,add)#39
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,nodenum)#40
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalLoad(Ljava/lang/Object;,0)#41
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalLoad(Ljava/lang/Object;,0)#42
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalLoad(I,1)#43
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LOW,(I)I)#44
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalLoad(Ljava/lang/Object;,2)#45
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,addref_rec,(I[Z)V)#46
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalLoad(Ljava/lang/Object;,0)#47
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalLoad(Ljava/lang/Object;,0)#48
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalLoad(I,1)#49
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HIGH,(I)I)#50
net.sf.javabdd.JFactory.addref_rec(I[Z)V#LocalLoad(Ljava/lang/Object;,2)#51
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,addref_rec,(I[Z)V)#52
net.sf.javabdd.JFactory.addref_rec(I[Z)V#Goto(81)#53
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#41
net.sf.javabdd.JFactory.reorder_makenode(III)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreepos)#42
net.sf.javabdd.JFactory.reorder_makenode(III)I#Constant(I,0)#43
net.sf.javabdd.JFactory.reorder_makenode(III)I#ConditionalBranch(I,ne,71)#44
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#71
net.sf.javabdd.JFactory.reorder_makenode(III)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreepos)#72
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalStore(I,5)#73
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#74
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#75
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#76
net.sf.javabdd.JFactory.reorder_makenode(III)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreepos)#77
net.sf.javabdd.JFactory.reorder_makenode(III)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,NEXT,(I)I)#78
net.sf.javabdd.JFactory.reorder_makenode(III)I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreepos)#79
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#80
net.sf.javabdd.JFactory.reorder_makenode(III)I#Get([Lnet/sf/javabdd/JFactory$levelData;,NONSTATIC,Lnet/sf/javabdd/JFactory;,levels)#81
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(I,1)#82
net.sf.javabdd.JFactory.reorder_makenode(III)I#ArrayLoad(Ljava/lang/Object;)#83
net.sf.javabdd.JFactory.reorder_makenode(III)I#Dup(1,0)#84
net.sf.javabdd.JFactory.reorder_makenode(III)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,nodenum)#85
net.sf.javabdd.JFactory.reorder_makenode(III)I#Constant(I,1)#86
net.sf.javabdd.JFactory.reorder_makenode(III)I#BinaryOp(I,add)#87
net.sf.javabdd.JFactory.reorder_makenode(III)I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,nodenum)#88
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#89
net.sf.javabdd.JFactory.reorder_makenode(III)I#Dup(1,0)#90
net.sf.javabdd.JFactory.reorder_makenode(III)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddproduced)#91
net.sf.javabdd.JFactory.reorder_makenode(III)I#Constant(I,1)#92
net.sf.javabdd.JFactory.reorder_makenode(III)I#BinaryOp(I,add)#93
net.sf.javabdd.JFactory.reorder_makenode(III)I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddproduced)#94
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#95
net.sf.javabdd.JFactory.reorder_makenode(III)I#Dup(1,0)#96
net.sf.javabdd.JFactory.reorder_makenode(III)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreenum)#97
net.sf.javabdd.JFactory.reorder_makenode(III)I#Constant(I,1)#98
net.sf.javabdd.JFactory.reorder_makenode(III)I#BinaryOp(I,sub)#99
net.sf.javabdd.JFactory.reorder_makenode(III)I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreenum)#100
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#101
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(I,5)#102
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(I,1)#103
net.sf.javabdd.JFactory.reorder_makenode(III)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,SETVARr,(II)V)#104
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#105
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(I,5)#106
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(I,2)#107
net.sf.javabdd.JFactory.reorder_makenode(III)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETLOW,(II)V)#108
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#109
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(I,5)#110
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(I,3)#111
net.sf.javabdd.JFactory.reorder_makenode(III)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETHIGH,(II)V)#112
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#113
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(I,5)#114
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#115
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(I,4)#116
net.sf.javabdd.JFactory.reorder_makenode(III)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HASH,(I)I)#117
net.sf.javabdd.JFactory.reorder_makenode(III)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETNEXT,(II)V)#118
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#119
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(I,4)#120
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(I,5)#121
net.sf.javabdd.JFactory.reorder_makenode(III)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETHASH,(II)V)#122
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#123
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(I,5)#124
net.sf.javabdd.JFactory.reorder_makenode(III)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,CLEARREF,(I)V)#125
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#126
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(I,5)#127
net.sf.javabdd.JFactory.reorder_makenode(III)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,INCREF,(I)V)#128
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#129
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#130
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(I,5)#131
net.sf.javabdd.JFactory.reorder_makenode(III)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LOW,(I)I)#132
net.sf.javabdd.JFactory.reorder_makenode(III)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,INCREF,(I)V)#133
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#134
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#135
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(I,5)#136
net.sf.javabdd.JFactory.reorder_makenode(III)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HIGH,(I)I)#137
net.sf.javabdd.JFactory.reorder_makenode(III)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,INCREF,(I)V)#138
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(I,5)#139
net.sf.javabdd.JFactory.reorder_makenode(III)I#Return(I)#140
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(Ljava/lang/Object;,0)#62
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(Ljava/lang/Object;,0)#63
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(I,7)#64
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LOW,(I)I)#65
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,DECREF,(I)V)#66
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(Ljava/lang/Object;,0)#67
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(Ljava/lang/Object;,0)#68
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(I,7)#69
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HIGH,(I)I)#70
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,DECREF,(I)V)#71
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(Ljava/lang/Object;,0)#72
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(I,7)#73
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Constant(I,-1)#74
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETLOW,(II)V)#75
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(Ljava/lang/Object;,0)#76
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(I,7)#77
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(Ljava/lang/Object;,0)#78
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreepos)#79
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,SETNEXT,(II)V)#80
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(Ljava/lang/Object;,0)#81
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(I,7)#82
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreepos)#83
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(Ljava/lang/Object;,0)#84
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Get([Lnet/sf/javabdd/JFactory$levelData;,NONSTATIC,Lnet/sf/javabdd/JFactory;,levels)#85
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(I,2)#86
net.sf.javabdd.JFactory.reorder_localGbc(I)V#ArrayLoad(Ljava/lang/Object;)#87
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Dup(1,0)#88
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,nodenum)#89
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Constant(I,1)#90
net.sf.javabdd.JFactory.reorder_localGbc(I)V#BinaryOp(I,sub)#91
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$levelData;,nodenum)#92
net.sf.javabdd.JFactory.reorder_localGbc(I)V#LocalLoad(Ljava/lang/Object;,0)#93
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Dup(1,0)#94
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreenum)#95
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Constant(I,1)#96
net.sf.javabdd.JFactory.reorder_localGbc(I)V#BinaryOp(I,add)#97
net.sf.javabdd.JFactory.reorder_localGbc(I)V#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,bddfreenum)#98
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#36
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalLoad(I,5)#37
net.sf.javabdd.JFactory.reorder_makenode(III)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,NEXT,(I)I)#38
net.sf.javabdd.JFactory.reorder_makenode(III)I#LocalStore(I,5)#39
net.sf.javabdd.JFactory.reorder_makenode(III)I#Goto(18)#40
chord.analyses.var.RelVT.init()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.var.RelVT.init()V#Invoke(STATIC,Lchord/program/Program;,g,()Lchord/program/Program;)#1
chord.analyses.var.RelVT.init()V#Constant(Ljava/lang/String;,"java.lang.Object")#2
chord.analyses.var.RelVT.init()V#Invoke(VIRTUAL,Lchord/program/Program;,getClass,(Ljava/lang/String;)Ljoeq/Class/jq_Reference;)#3
chord.program.Program.getClass(Ljava/lang/String;)Ljoeq/Class/jq_Reference;#LocalLoad(Ljava/lang/Object;,0)#0
chord.program.Program.getClass(Ljava/lang/String;)Ljoeq/Class/jq_Reference;#Get(Ljava/util/Map;,NONSTATIC,Lchord/program/Program;,nameToClassMap)#1
chord.program.Program.getClass(Ljava/lang/String;)Ljoeq/Class/jq_Reference;#Constant(L;,null)#2
chord.program.Program.getClass(Ljava/lang/String;)Ljoeq/Class/jq_Reference;#ConditionalBranch(Ljava/lang/Object;,ne,6)#3
chord.program.Program.getClass(Ljava/lang/String;)Ljoeq/Class/jq_Reference;#LocalLoad(Ljava/lang/Object;,0)#6
chord.program.Program.getClass(Ljava/lang/String;)Ljoeq/Class/jq_Reference;#Get(Ljava/util/Map;,NONSTATIC,Lchord/program/Program;,nameToClassMap)#7
chord.program.Program.getClass(Ljava/lang/String;)Ljoeq/Class/jq_Reference;#LocalLoad(Ljava/lang/Object;,1)#8
chord.program.Program.getClass(Ljava/lang/String;)Ljoeq/Class/jq_Reference;#Invoke(INTERFACE,Ljava/util/Map;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#9
chord.program.Program.getClass(Ljava/lang/String;)Ljoeq/Class/jq_Reference;#CheckCast(Ljoeq/Class/jq_Reference;)#10
chord.program.Program.getClass(Ljava/lang/String;)Ljoeq/Class/jq_Reference;#Return(Ljava/lang/Object;)#11
chord.analyses.var.RelVT.init()V#Put(Ljoeq/Class/jq_Reference;,NONSTATIC,Lchord/analyses/var/RelVT;,javaLangObject)#4
chord.analyses.var.RelVT.init()V#Get(Z,STATIC,Lchord/analyses/var/RelVT;,$assertionsDisabled)#5
chord.analyses.var.RelVT.init()V#Constant(I,0)#6
chord.analyses.var.RelVT.init()V#ConditionalBranch(I,ne,16)#7
chord.analyses.var.RelVT.init()V#LocalLoad(Ljava/lang/Object;,0)#8
chord.analyses.var.RelVT.init()V#Get(Ljoeq/Class/jq_Reference;,NONSTATIC,Lchord/analyses/var/RelVT;,javaLangObject)#9
chord.analyses.var.RelVT.init()V#Constant(L;,null)#10
chord.analyses.var.RelVT.init()V#ConditionalBranch(Ljava/lang/Object;,ne,16)#11
chord.analyses.var.RelVT.init()V#Return(V)#16
chord.project.analyses.ProgramRel.fill()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.analyses.ProgramRel.fill()V#Instanceof(Lchord/program/visitors/IClassVisitor;)#1
chord.project.analyses.ProgramRel.fill()V#Constant(I,0)#2
chord.project.analyses.ProgramRel.fill()V#ConditionalBranch(I,eq,12)#3
chord.project.analyses.ProgramRel.fill()V#New(Lchord/project/VisitorHandler;,0)#4
chord.project.analyses.ProgramRel.fill()V#Dup(1,0)#5
chord.project.analyses.ProgramRel.fill()V#LocalLoad(Ljava/lang/Object;,0)#6
chord.project.analyses.ProgramRel.fill()V#Invoke(SPECIAL,Lchord/project/VisitorHandler;,<init>,(Lchord/project/ITask;)V)#7
chord.project.analyses.ProgramRel.fill()V#LocalStore(Ljava/lang/Object;,1)#8
chord.project.analyses.ProgramRel.fill()V#LocalLoad(Ljava/lang/Object;,1)#9
chord.project.analyses.ProgramRel.fill()V#Invoke(VIRTUAL,Lchord/project/VisitorHandler;,visitProgram,()V)#10
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Class;)V#Return(V)#0
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#0
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,isAbstract,()Z)#1
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Constant(I,0)#2
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#ConditionalBranch(I,eq,5)#3
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#5
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getCFG,()Ljoeq/Compiler/Quad/ControlFlowGraph;)#6
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalStore(Ljava/lang/Object;,2)#7
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,2)#8
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,getRegisterFactory,()Ljoeq/Compiler/Quad/RegisterFactory;)#9
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalStore(Ljava/lang/Object;,3)#10
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#11
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getParamTypes,()[Ljoeq/Class/jq_Type;)#12
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalStore(Ljava/lang/Object;,4)#13
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,4)#14
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#ArrayLength()#15
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalStore(I,5)#16
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Constant(I,0)#17
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalStore(I,6)#18
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Goto(40)#19
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(I,6)#40
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(I,5)#41
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#ConditionalBranch(I,lt,20)#42
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,2)#43
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/ControlFlowGraph;,reversePostOrder,()Ljava/util/List;)#44
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#45
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalStore(Ljava/lang/Object;,7)#46
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Goto(81)#47
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,7)#81
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#82
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Constant(I,0)#83
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#ConditionalBranch(I,ne,48)#84
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,7)#48
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#49
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#CheckCast(Ljoeq/Compiler/Quad/BasicBlock;)#50
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalStore(Ljava/lang/Object;,6)#51
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,6)#52
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getQuads,()Ljava/util/List;)#53
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#54
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalStore(Ljava/lang/Object;,9)#55
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Goto(77)#56
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,9)#77
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#78
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Constant(I,0)#79
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#ConditionalBranch(I,ne,57)#80
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,9)#57
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#58
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#CheckCast(Ljoeq/Compiler/Quad/Quad;)#59
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalStore(Ljava/lang/Object;,8)#60
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#61
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,8)#62
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getOp1,()Ljoeq/Compiler/Quad/Operand;)#63
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Invoke(SPECIAL,Lchord/analyses/var/RelVT;,process,(Ljoeq/Compiler/Quad/Operand;)V)#64
chord.analyses.var.RelVT.process(Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,1)#0
chord.analyses.var.RelVT.process(Ljoeq/Compiler/Quad/Operand;)V#Instanceof(Ljoeq/Compiler/Quad/Operand$RegisterOperand;)#1
chord.analyses.var.RelVT.process(Ljoeq/Compiler/Quad/Operand;)V#Constant(I,0)#2
chord.analyses.var.RelVT.process(Ljoeq/Compiler/Quad/Operand;)V#ConditionalBranch(I,eq,28)#3
chord.analyses.var.RelVT.process(Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,1)#28
chord.analyses.var.RelVT.process(Ljoeq/Compiler/Quad/Operand;)V#Instanceof(Ljoeq/Compiler/Quad/Operand$ParamListOperand;)#29
chord.analyses.var.RelVT.process(Ljoeq/Compiler/Quad/Operand;)V#Constant(I,0)#30
chord.analyses.var.RelVT.process(Ljoeq/Compiler/Quad/Operand;)V#ConditionalBranch(I,eq,76)#31
chord.analyses.var.RelVT.process(Ljoeq/Compiler/Quad/Operand;)V#Return(V)#76
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#65
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,8)#66
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getOp2,()Ljoeq/Compiler/Quad/Operand;)#67
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Invoke(SPECIAL,Lchord/analyses/var/RelVT;,process,(Ljoeq/Compiler/Quad/Operand;)V)#68
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#69
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,8)#70
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getOp3,()Ljoeq/Compiler/Quad/Operand;)#71
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Invoke(SPECIAL,Lchord/analyses/var/RelVT;,process,(Ljoeq/Compiler/Quad/Operand;)V)#72
chord.analyses.var.RelVT.process(Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,1)#32
chord.analyses.var.RelVT.process(Ljoeq/Compiler/Quad/Operand;)V#CheckCast(Ljoeq/Compiler/Quad/Operand$ParamListOperand;)#33
chord.analyses.var.RelVT.process(Ljoeq/Compiler/Quad/Operand;)V#LocalStore(Ljava/lang/Object;,2)#34
chord.analyses.var.RelVT.process(Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(Ljava/lang/Object;,2)#35
chord.analyses.var.RelVT.process(Ljoeq/Compiler/Quad/Operand;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Operand$ParamListOperand;,length,()I)#36
chord.analyses.var.RelVT.process(Ljoeq/Compiler/Quad/Operand;)V#LocalStore(I,3)#37
chord.analyses.var.RelVT.process(Ljoeq/Compiler/Quad/Operand;)V#Constant(I,0)#38
chord.analyses.var.RelVT.process(Ljoeq/Compiler/Quad/Operand;)V#LocalStore(I,4)#39
chord.analyses.var.RelVT.process(Ljoeq/Compiler/Quad/Operand;)V#Goto(73)#40
chord.analyses.var.RelVT.process(Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(I,4)#73
chord.analyses.var.RelVT.process(Ljoeq/Compiler/Quad/Operand;)V#LocalLoad(I,3)#74
chord.analyses.var.RelVT.process(Ljoeq/Compiler/Quad/Operand;)V#ConditionalBranch(I,lt,41)#75
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#73
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,8)#74
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getOp4,()Ljoeq/Compiler/Quad/Operand;)#75
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Invoke(SPECIAL,Lchord/analyses/var/RelVT;,process,(Ljoeq/Compiler/Quad/Operand;)V)#76
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Return(V)#85
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,4)#20
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(I,6)#21
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#ArrayLoad(Ljava/lang/Object;)#22
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalStore(Ljava/lang/Object;,7)#23
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,7)#24
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Type;,isReferenceType,()Z)#25
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Constant(I,0)#26
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#ConditionalBranch(I,eq,36)#27
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,3)#28
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(I,6)#29
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/RegisterFactory;,get,(I)Ljoeq/Compiler/Quad/RegisterFactory$Register;)#30
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalStore(Ljava/lang/Object;,8)#31
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#32
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,8)#33
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,7)#34
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Lchord/analyses/var/RelVT;,add,(Ljava/lang/Object;Ljava/lang/Object;)V)#35
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#Get(Lnet/sf/javabdd/BDD;,NONSTATIC,Lchord/bddbddb/Rel;,bdd)#1
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#Constant(L;,null)#2
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#ConditionalBranch(Ljava/lang/Object;,ne,9)#3
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#9
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/bddbddb/Rel;,doms)#10
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#Constant(I,0)#11
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#ArrayLoad(Ljava/lang/Object;)#12
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#13
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(VIRTUAL,Lchord/bddbddb/Dom;,indexOf,(Ljava/lang/Object;)I)#14
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#LocalStore(I,3)#15
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#16
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/bddbddb/Rel;,doms)#17
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#Constant(I,1)#18
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#ArrayLoad(Ljava/lang/Object;)#19
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,2)#20
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(VIRTUAL,Lchord/bddbddb/Dom;,indexOf,(Ljava/lang/Object;)I)#21
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#LocalStore(I,4)#22
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#23
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#Get(Lnet/sf/javabdd/BDD;,NONSTATIC,Lchord/bddbddb/Rel;,bdd)#24
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#25
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#Get([Lnet/sf/javabdd/BDDDomain;,NONSTATIC,Lchord/bddbddb/Rel;,domBdds)#26
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#Constant(I,0)#27
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#ArrayLoad(Ljava/lang/Object;)#28
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(I,3)#29
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#Conversion(I,J)#30
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDDomain;,ithVar,(J)Lnet/sf/javabdd/BDD;)#31
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#32
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#Get([Lnet/sf/javabdd/BDDDomain;,NONSTATIC,Lchord/bddbddb/Rel;,domBdds)#33
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#Constant(I,1)#34
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#ArrayLoad(Ljava/lang/Object;)#35
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#LocalLoad(I,4)#36
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#Conversion(I,J)#37
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDDomain;,ithVar,(J)Lnet/sf/javabdd/BDD;)#38
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,3)#42
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,2)#43
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#LocalLoad(Ljava/lang/Object;,4)#44
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#LocalLoad(I,5)#45
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#ArrayLoad(I)#46
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDFactory;,ithVar,(I)Lnet/sf/javabdd/BDD;)#47
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#Invoke(VIRTUAL,Lnet/sf/javabdd/BDD;,andWith,(Lnet/sf/javabdd/BDD;)Lnet/sf/javabdd/BDD;)#48
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#Pop(1)#49
net.sf.javabdd.BDDDomain.ithVar(Ljava/math/BigInteger;)Lnet/sf/javabdd/BDD;#Goto(59)#50
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDD;,andWith,(Lnet/sf/javabdd/BDD;)Lnet/sf/javabdd/BDD;)#39
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDD;,orWith,(Lnet/sf/javabdd/BDD;)Lnet/sf/javabdd/BDD;)#40
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#Pop(1)#41
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#Goto(57)#42
chord.bddbddb.Rel.add(Ljava/lang/Object;Ljava/lang/Object;)V#Return(V)#57
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(I,6)#36
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#Constant(I,1)#37
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#BinaryOp(I,add)#38
chord.analyses.var.RelVT.visit(Ljoeq/Class/jq_Method;)V#LocalStore(I,6)#39
chord.project.analyses.ProgramRel.fill()V#Goto(26)#11
chord.project.analyses.ProgramRel.fill()V#Return(V)#26
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalLoad(I,9)#173
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Constant(I,1)#174
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#BinaryOp(I,add)#175
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#LocalStore(I,9)#176
net.sf.javabdd.BDDFactory.makeVarOrdering(ZLjava/lang/String;)[I#Goto(215)#177
chord.analyses.invk.RelVirtIM.fill()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.invk.RelVirtIM.fill()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/invk/RelVirtIM;,doms)#1
chord.analyses.invk.RelVirtIM.fill()V#Constant(I,0)#2
chord.analyses.invk.RelVirtIM.fill()V#ArrayLoad(Ljava/lang/Object;)#3
chord.analyses.invk.RelVirtIM.fill()V#CheckCast(Lchord/analyses/invk/DomI;)#4
chord.analyses.invk.RelVirtIM.fill()V#LocalStore(Ljava/lang/Object;,1)#5
chord.analyses.invk.RelVirtIM.fill()V#LocalLoad(Ljava/lang/Object;,0)#6
chord.analyses.invk.RelVirtIM.fill()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/invk/RelVirtIM;,doms)#7
chord.analyses.invk.RelVirtIM.fill()V#Constant(I,1)#8
chord.analyses.invk.RelVirtIM.fill()V#ArrayLoad(Ljava/lang/Object;)#9
chord.analyses.invk.RelVirtIM.fill()V#CheckCast(Lchord/analyses/method/DomM;)#10
chord.analyses.invk.RelVirtIM.fill()V#LocalStore(Ljava/lang/Object;,2)#11
chord.analyses.invk.RelVirtIM.fill()V#LocalLoad(Ljava/lang/Object;,1)#12
chord.analyses.invk.RelVirtIM.fill()V#Invoke(VIRTUAL,Lchord/analyses/invk/DomI;,size,()I)#13
chord.analyses.invk.RelVirtIM.fill()V#LocalStore(I,3)#14
chord.analyses.invk.RelVirtIM.fill()V#Constant(I,0)#15
chord.analyses.invk.RelVirtIM.fill()V#LocalStore(I,4)#16
chord.analyses.invk.RelVirtIM.fill()V#Goto(70)#17
chord.analyses.invk.RelVirtIM.fill()V#LocalLoad(I,4)#70
chord.analyses.invk.RelVirtIM.fill()V#LocalLoad(I,3)#71
chord.analyses.invk.RelVirtIM.fill()V#ConditionalBranch(I,lt,18)#72
chord.analyses.invk.RelVirtIM.fill()V#LocalLoad(Ljava/lang/Object;,1)#18
chord.analyses.invk.RelVirtIM.fill()V#LocalLoad(I,4)#19
chord.analyses.invk.RelVirtIM.fill()V#Invoke(VIRTUAL,Lchord/analyses/invk/DomI;,get,(I)Ljava/lang/Object;)#20
chord.analyses.invk.RelVirtIM.fill()V#CheckCast(Ljoeq/Compiler/Quad/Quad;)#21
chord.analyses.invk.RelVirtIM.fill()V#LocalStore(Ljava/lang/Object;,5)#22
chord.analyses.invk.RelVirtIM.fill()V#LocalLoad(Ljava/lang/Object;,5)#23
chord.analyses.invk.RelVirtIM.fill()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getOperator,()Ljoeq/Compiler/Quad/Operator;)#24
chord.analyses.invk.RelVirtIM.fill()V#LocalStore(Ljava/lang/Object;,6)#25
chord.analyses.invk.RelVirtIM.fill()V#LocalLoad(Ljava/lang/Object;,6)#26
chord.analyses.invk.RelVirtIM.fill()V#Instanceof(Ljoeq/Compiler/Quad/Operator$Invoke$InvokeVirtual;)#27
chord.analyses.invk.RelVirtIM.fill()V#Constant(I,0)#28
chord.analyses.invk.RelVirtIM.fill()V#ConditionalBranch(I,ne,34)#29
chord.analyses.invk.RelVirtIM.fill()V#LocalLoad(Ljava/lang/Object;,6)#30
chord.analyses.invk.RelVirtIM.fill()V#Instanceof(Ljoeq/Compiler/Quad/Operator$Invoke$InvokeInterface;)#31
chord.analyses.invk.RelVirtIM.fill()V#Constant(I,0)#32
chord.analyses.invk.RelVirtIM.fill()V#ConditionalBranch(I,eq,66)#33
chord.analyses.invk.RelVirtIM.fill()V#LocalLoad(I,4)#66
chord.analyses.invk.RelVirtIM.fill()V#Constant(I,1)#67
chord.analyses.invk.RelVirtIM.fill()V#BinaryOp(I,add)#68
chord.analyses.invk.RelVirtIM.fill()V#LocalStore(I,4)#69
chord.analyses.invk.RelVirtIM.fill()V#Return(V)#73
net.sf.javabdd.JFactory$bdd.isZero()Z#Constant(I,1)#4
net.sf.javabdd.JFactory$bdd.isZero()Z#Goto(7)#5
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#Constant(D,0.0)#19
net.sf.javabdd.BDD.satCount(Lnet/sf/javabdd/BDD;)D#Return(D)#20
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#LocalLoad(Ljava/lang/Object;,1)#6
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#New(Ljava/lang/StringBuilder;,0)#7
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Dup(1,0)#8
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,()V)#9
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Constant(Ljava/lang/String;,"0 0 ")#10
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#11
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#LocalLoad(I,2)#12
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#13
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Constant(Ljava/lang/String;,"\
")#14
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#15
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#16
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Invoke(VIRTUAL,Ljava/io/BufferedWriter;,write,(Ljava/lang/String;)V)#17
net.sf.javabdd.JFactory.bdd_save(Ljava/io/BufferedWriter;I)V#Return(V)#18
chord.analyses.type.RelSub.fill()V#Invoke(STATIC,Lchord/program/Program;,g,()Lchord/program/Program;)#0
chord.analyses.type.RelSub.fill()V#LocalStore(Ljava/lang/Object;,1)#1
chord.analyses.type.RelSub.fill()V#LocalLoad(Ljava/lang/Object;,1)#2
chord.analyses.type.RelSub.fill()V#Invoke(VIRTUAL,Lchord/program/Program;,getClasses,()Lchord/util/IndexSet;)#3
chord.analyses.type.RelSub.fill()V#LocalStore(Ljava/lang/Object;,2)#4
chord.analyses.type.RelSub.fill()V#LocalLoad(Ljava/lang/Object;,2)#5
chord.analyses.type.RelSub.fill()V#Invoke(VIRTUAL,Lchord/util/IndexSet;,iterator,()Ljava/util/Iterator;)#6
chord.analyses.type.RelSub.fill()V#LocalStore(Ljava/lang/Object;,4)#7
chord.analyses.type.RelSub.fill()V#Goto(54)#8
chord.analyses.type.RelSub.fill()V#LocalLoad(Ljava/lang/Object;,4)#54
chord.analyses.type.RelSub.fill()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#55
chord.analyses.type.RelSub.fill()V#Constant(I,0)#56
chord.analyses.type.RelSub.fill()V#ConditionalBranch(I,ne,9)#57
chord.analyses.type.RelSub.fill()V#LocalLoad(Ljava/lang/Object;,4)#9
chord.analyses.type.RelSub.fill()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#10
chord.analyses.type.RelSub.fill()V#CheckCast(Ljoeq/Class/jq_Reference;)#11
chord.analyses.type.RelSub.fill()V#LocalStore(Ljava/lang/Object;,3)#12
chord.analyses.type.RelSub.fill()V#LocalLoad(Ljava/lang/Object;,0)#13
chord.analyses.type.RelSub.fill()V#Get(Ljoeq/Class/jq_Reference$jq_NullType;,STATIC,Ljoeq/Class/jq_Reference$jq_NullType;,NULL_TYPE)#14
chord.analyses.type.RelSub.fill()V#LocalLoad(Ljava/lang/Object;,3)#15
chord.analyses.type.RelSub.fill()V#Invoke(VIRTUAL,Lchord/analyses/type/RelSub;,add,(Ljava/lang/Object;Ljava/lang/Object;)V)#16
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#18
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(I,5)#19
net.sf.javabdd.JFactory.bdd_makenode(III)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LEVEL,(I)I)#20
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(I,1)#21
net.sf.javabdd.JFactory.bdd_makenode(III)I#ConditionalBranch(I,ne,35)#22
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#23
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(I,5)#24
net.sf.javabdd.JFactory.bdd_makenode(III)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LOW,(I)I)#25
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(I,2)#26
net.sf.javabdd.JFactory.bdd_makenode(III)I#ConditionalBranch(I,ne,35)#27
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(Ljava/lang/Object;,0)#28
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(I,5)#29
net.sf.javabdd.JFactory.bdd_makenode(III)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HIGH,(I)I)#30
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(I,3)#31
net.sf.javabdd.JFactory.bdd_makenode(III)I#ConditionalBranch(I,ne,35)#32
net.sf.javabdd.JFactory.bdd_makenode(III)I#LocalLoad(I,5)#33
net.sf.javabdd.JFactory.bdd_makenode(III)I#Return(I)#34
chord.analyses.type.RelSub.fill()V#LocalLoad(Ljava/lang/Object;,3)#17
chord.analyses.type.RelSub.fill()V#Invoke(STATIC,Lchord/analyses/invk/StubRewrite;,fakeSubtype,(Ljoeq/Class/jq_Reference;)Ljoeq/Class/jq_Reference;)#18
chord.analyses.invk.StubRewrite.<clinit>()V#Constant(Ljava/lang/Class;,com.ibm.wala.shrikeBT.ConstantInstruction$ClassToken@25aee481)#0
chord.analyses.invk.StubRewrite.<clinit>()V#Invoke(VIRTUAL,Ljava/lang/Class;,desiredAssertionStatus,()Z)#1
chord.analyses.invk.StubRewrite.<clinit>()V#Constant(I,0)#2
chord.analyses.invk.StubRewrite.<clinit>()V#ConditionalBranch(I,ne,6)#3
chord.analyses.invk.StubRewrite.<clinit>()V#Constant(I,0)#6
chord.analyses.invk.StubRewrite.<clinit>()V#Put(Z,STATIC,Lchord/analyses/invk/StubRewrite;,$assertionsDisabled)#7
chord.analyses.invk.StubRewrite.<clinit>()V#New(Ljava/util/HashSet;,0)#8
chord.analyses.invk.StubRewrite.<clinit>()V#Dup(1,0)#9
chord.analyses.invk.StubRewrite.<clinit>()V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#10
chord.analyses.invk.StubRewrite.<clinit>()V#Put(Ljava/util/HashSet;,STATIC,Lchord/analyses/invk/StubRewrite;,stubDests)#11
chord.analyses.invk.StubRewrite.<clinit>()V#Constant(Ljava/lang/String;,"([^:]*):([^@]*)@([^ ]*) ([^:]*):([^@]*)@([^ ]*)")#12
chord.analyses.invk.StubRewrite.<clinit>()V#Invoke(STATIC,Ljava/util/regex/Pattern;,compile,(Ljava/lang/String;)Ljava/util/regex/Pattern;)#13
chord.analyses.invk.StubRewrite.<clinit>()V#Put(Ljava/util/regex/Pattern;,STATIC,Lchord/analyses/invk/StubRewrite;,linePat)#14
chord.analyses.invk.StubRewrite.<clinit>()V#Invoke(STATIC,Lchord/analyses/invk/StubRewrite;,init,()V)#15
chord.analyses.invk.StubRewrite.init()V#Get(Ljava/util/HashMap;,STATIC,Lchord/analyses/invk/StubRewrite;,methLookupTable)#0
chord.analyses.invk.StubRewrite.init()V#Constant(L;,null)#1
chord.analyses.invk.StubRewrite.init()V#ConditionalBranch(Ljava/lang/Object;,eq,4)#2
chord.analyses.invk.StubRewrite.init()V#New(Ljava/util/LinkedHashMap;,0)#4
chord.analyses.invk.StubRewrite.init()V#Dup(1,0)#5
chord.analyses.invk.StubRewrite.init()V#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#6
chord.analyses.invk.StubRewrite.init()V#Put(Ljava/util/HashMap;,STATIC,Lchord/analyses/invk/StubRewrite;,methLookupTable)#7
chord.analyses.invk.StubRewrite.init()V#New(Ljava/util/LinkedHashMap;,0)#8
chord.analyses.invk.StubRewrite.init()V#Dup(1,0)#9
chord.analyses.invk.StubRewrite.init()V#Invoke(SPECIAL,Ljava/util/LinkedHashMap;,<init>,()V)#10
chord.analyses.invk.StubRewrite.init()V#Put(Ljava/util/HashMap;,STATIC,Lchord/analyses/invk/StubRewrite;,classLookupTable)#11
chord.analyses.invk.StubRewrite.init()V#Constant(Ljava/lang/String;,"chord.methodRemapFile")#12
chord.analyses.invk.StubRewrite.init()V#Invoke(STATIC,Ljava/lang/System;,getProperty,(Ljava/lang/String;)Ljava/lang/String;)#13
chord.analyses.invk.StubRewrite.init()V#LocalStore(Ljava/lang/Object;,0)#14
chord.analyses.invk.StubRewrite.init()V#LocalLoad(Ljava/lang/Object;,0)#15
chord.analyses.invk.StubRewrite.init()V#Constant(L;,null)#16
chord.analyses.invk.StubRewrite.init()V#ConditionalBranch(Ljava/lang/Object;,ne,19)#17
chord.analyses.invk.StubRewrite.init()V#Return(V)#18
chord.analyses.invk.StubRewrite.<clinit>()V#Return(V)#16
chord.analyses.invk.StubRewrite.fakeSubtype(Ljoeq/Class/jq_Reference;)Ljoeq/Class/jq_Reference;#Get(Ljava/util/HashMap;,STATIC,Lchord/analyses/invk/StubRewrite;,classLookupTable)#0
chord.analyses.invk.StubRewrite.fakeSubtype(Ljoeq/Class/jq_Reference;)Ljoeq/Class/jq_Reference;#LocalLoad(Ljava/lang/Object;,0)#1
chord.analyses.invk.StubRewrite.fakeSubtype(Ljoeq/Class/jq_Reference;)Ljoeq/Class/jq_Reference;#Invoke(VIRTUAL,Ljava/util/HashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#2
chord.analyses.invk.StubRewrite.fakeSubtype(Ljoeq/Class/jq_Reference;)Ljoeq/Class/jq_Reference;#CheckCast(Ljoeq/Class/jq_Reference;)#3
chord.analyses.invk.StubRewrite.fakeSubtype(Ljoeq/Class/jq_Reference;)Ljoeq/Class/jq_Reference;#Return(Ljava/lang/Object;)#4
chord.analyses.type.RelSub.fill()V#LocalStore(Ljava/lang/Object;,5)#19
chord.analyses.type.RelSub.fill()V#LocalLoad(Ljava/lang/Object;,5)#20
chord.analyses.type.RelSub.fill()V#Constant(L;,null)#21
chord.analyses.type.RelSub.fill()V#ConditionalBranch(Ljava/lang/Object;,ne,25)#22
chord.analyses.type.RelSub.fill()V#LocalLoad(Ljava/lang/Object;,3)#23
chord.analyses.type.RelSub.fill()V#LocalStore(Ljava/lang/Object;,5)#24
chord.analyses.type.RelSub.fill()V#LocalLoad(Ljava/lang/Object;,0)#25
chord.analyses.type.RelSub.fill()V#LocalLoad(Ljava/lang/Object;,3)#26
chord.analyses.type.RelSub.fill()V#LocalLoad(Ljava/lang/Object;,5)#27
chord.analyses.type.RelSub.fill()V#Invoke(VIRTUAL,Lchord/analyses/type/RelSub;,add,(Ljava/lang/Object;Ljava/lang/Object;)V)#28
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,3)#40
net.sf.javabdd.JFactory.and_rec(II)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCacheDataI;,b)#41
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(I,2)#42
net.sf.javabdd.JFactory.and_rec(II)I#ConditionalBranch(I,ne,51)#43
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,3)#44
net.sf.javabdd.JFactory.and_rec(II)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCacheDataI;,c)#45
net.sf.javabdd.JFactory.and_rec(II)I#Constant(I,0)#46
net.sf.javabdd.JFactory.and_rec(II)I#ConditionalBranch(I,ne,51)#47
net.sf.javabdd.JFactory.and_rec(II)I#LocalLoad(Ljava/lang/Object;,3)#48
net.sf.javabdd.JFactory.and_rec(II)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCacheDataI;,res)#49
net.sf.javabdd.JFactory.and_rec(II)I#Return(I)#50
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(I,2)#21
net.sf.javabdd.JFactory.or_rec(II)I#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,ISZERO,(I)Z)#22
net.sf.javabdd.JFactory.or_rec(II)I#Constant(I,0)#23
net.sf.javabdd.JFactory.or_rec(II)I#ConditionalBranch(I,eq,27)#24
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#27
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#28
net.sf.javabdd.JFactory.or_rec(II)I#Get(Lnet/sf/javabdd/JFactory$BddCache;,NONSTATIC,Lnet/sf/javabdd/JFactory;,applycache)#29
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(I,1)#30
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(I,2)#31
net.sf.javabdd.JFactory.or_rec(II)I#Constant(I,2)#32
net.sf.javabdd.JFactory.or_rec(II)I#Invoke(STATIC,Lnet/sf/javabdd/JFactory;,APPLYHASH,(III)I)#33
net.sf.javabdd.JFactory.or_rec(II)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,BddCache_lookupI,(Lnet/sf/javabdd/JFactory$BddCache;I)Lnet/sf/javabdd/JFactory$BddCacheDataI;)#34
net.sf.javabdd.JFactory.or_rec(II)I#LocalStore(Ljava/lang/Object;,3)#35
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(Ljava/lang/Object;,3)#36
net.sf.javabdd.JFactory.or_rec(II)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCacheDataI;,a)#37
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(I,1)#38
net.sf.javabdd.JFactory.or_rec(II)I#ConditionalBranch(I,ne,51)#39
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#51
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(I,1)#52
net.sf.javabdd.JFactory.or_rec(II)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LEVEL,(I)I)#53
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#54
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(I,2)#55
net.sf.javabdd.JFactory.or_rec(II)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LEVEL,(I)I)#56
net.sf.javabdd.JFactory.or_rec(II)I#ConditionalBranch(I,ne,93)#57
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#58
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#59
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#60
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(I,1)#61
net.sf.javabdd.JFactory.or_rec(II)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LOW,(I)I)#62
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#63
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(I,2)#64
net.sf.javabdd.JFactory.or_rec(II)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LOW,(I)I)#65
net.sf.javabdd.JFactory.or_rec(II)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,or_rec,(II)I)#66
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(I,1)#3
net.sf.javabdd.JFactory.or_rec(II)I#Return(I)#4
net.sf.javabdd.JFactory.or_rec(II)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,PUSHREF,(I)I)#67
net.sf.javabdd.JFactory.or_rec(II)I#Pop(1)#68
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#69
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#70
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#71
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(I,1)#72
net.sf.javabdd.JFactory.or_rec(II)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HIGH,(I)I)#73
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#74
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(I,2)#75
net.sf.javabdd.JFactory.or_rec(II)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,HIGH,(I)I)#76
net.sf.javabdd.JFactory.or_rec(II)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,or_rec,(II)I)#77
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(I,1)#25
net.sf.javabdd.JFactory.or_rec(II)I#Return(I)#26
net.sf.javabdd.JFactory.or_rec(II)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,PUSHREF,(I)I)#78
net.sf.javabdd.JFactory.or_rec(II)I#Pop(1)#79
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#80
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#81
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(I,1)#82
net.sf.javabdd.JFactory.or_rec(II)I#Invoke(SPECIAL,Lnet/sf/javabdd/JFactory;,LEVEL,(I)I)#83
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#84
net.sf.javabdd.JFactory.or_rec(II)I#Constant(I,2)#85
net.sf.javabdd.JFactory.or_rec(II)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,READREF,(I)I)#86
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#87
net.sf.javabdd.JFactory.or_rec(II)I#Constant(I,1)#88
net.sf.javabdd.JFactory.or_rec(II)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,READREF,(I)I)#89
net.sf.javabdd.JFactory.or_rec(II)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,bdd_makenode,(III)I)#90
net.sf.javabdd.JFactory.or_rec(II)I#LocalStore(I,4)#91
net.sf.javabdd.JFactory.or_rec(II)I#Goto(161)#92
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(Ljava/lang/Object;,0)#161
net.sf.javabdd.JFactory.or_rec(II)I#Constant(I,2)#162
net.sf.javabdd.JFactory.or_rec(II)I#Invoke(VIRTUAL,Lnet/sf/javabdd/JFactory;,POPREF,(I)V)#163
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(Ljava/lang/Object;,3)#164
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(I,1)#165
net.sf.javabdd.JFactory.or_rec(II)I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCacheDataI;,a)#166
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(Ljava/lang/Object;,3)#167
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(I,2)#168
net.sf.javabdd.JFactory.or_rec(II)I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCacheDataI;,b)#169
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(Ljava/lang/Object;,3)#170
net.sf.javabdd.JFactory.or_rec(II)I#Constant(I,2)#171
net.sf.javabdd.JFactory.or_rec(II)I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCacheDataI;,c)#172
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(Ljava/lang/Object;,3)#173
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(I,4)#174
net.sf.javabdd.JFactory.or_rec(II)I#Put(I,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCacheDataI;,res)#175
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(I,4)#176
net.sf.javabdd.JFactory.or_rec(II)I#Return(I)#177
chord.analyses.type.RelSub.fill()V#LocalLoad(Ljava/lang/Object;,2)#29
chord.analyses.type.RelSub.fill()V#Invoke(VIRTUAL,Lchord/util/IndexSet;,iterator,()Ljava/util/Iterator;)#30
chord.analyses.type.RelSub.fill()V#LocalStore(Ljava/lang/Object;,7)#31
chord.analyses.type.RelSub.fill()V#Goto(50)#32
chord.analyses.type.RelSub.fill()V#LocalLoad(Ljava/lang/Object;,7)#50
chord.analyses.type.RelSub.fill()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#51
chord.analyses.type.RelSub.fill()V#Constant(I,0)#52
chord.analyses.type.RelSub.fill()V#ConditionalBranch(I,ne,33)#53
chord.analyses.type.RelSub.fill()V#LocalLoad(Ljava/lang/Object;,7)#33
chord.analyses.type.RelSub.fill()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#34
chord.analyses.type.RelSub.fill()V#CheckCast(Ljoeq/Class/jq_Reference;)#35
chord.analyses.type.RelSub.fill()V#LocalStore(Ljava/lang/Object;,6)#36
chord.analyses.type.RelSub.fill()V#LocalLoad(Ljava/lang/Object;,3)#37
chord.analyses.type.RelSub.fill()V#LocalLoad(Ljava/lang/Object;,6)#38
chord.analyses.type.RelSub.fill()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Reference;,isSubtypeOf,(Ljoeq/Class/jq_Type;)Z)#39
chord.analyses.type.RelSub.fill()V#Constant(I,0)#40
chord.analyses.type.RelSub.fill()V#ConditionalBranch(I,eq,50)#41
chord.analyses.type.RelSub.fill()V#LocalLoad(Ljava/lang/Object;,0)#42
chord.analyses.type.RelSub.fill()V#LocalLoad(Ljava/lang/Object;,3)#43
chord.analyses.type.RelSub.fill()V#LocalLoad(Ljava/lang/Object;,6)#44
chord.analyses.type.RelSub.fill()V#Invoke(VIRTUAL,Lchord/analyses/type/RelSub;,add,(Ljava/lang/Object;Ljava/lang/Object;)V)#45
chord.analyses.type.RelSub.fill()V#LocalLoad(Ljava/lang/Object;,0)#46
chord.analyses.type.RelSub.fill()V#LocalLoad(Ljava/lang/Object;,5)#47
chord.analyses.type.RelSub.fill()V#LocalLoad(Ljava/lang/Object;,6)#48
chord.analyses.type.RelSub.fill()V#Invoke(VIRTUAL,Lchord/analyses/type/RelSub;,add,(Ljava/lang/Object;Ljava/lang/Object;)V)#49
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(Ljava/lang/Object;,3)#40
net.sf.javabdd.JFactory.or_rec(II)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCacheDataI;,b)#41
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(I,2)#42
net.sf.javabdd.JFactory.or_rec(II)I#ConditionalBranch(I,ne,51)#43
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(Ljava/lang/Object;,3)#44
net.sf.javabdd.JFactory.or_rec(II)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCacheDataI;,c)#45
net.sf.javabdd.JFactory.or_rec(II)I#Constant(I,2)#46
net.sf.javabdd.JFactory.or_rec(II)I#ConditionalBranch(I,ne,51)#47
net.sf.javabdd.JFactory.or_rec(II)I#LocalLoad(Ljava/lang/Object;,3)#48
net.sf.javabdd.JFactory.or_rec(II)I#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCacheDataI;,res)#49
net.sf.javabdd.JFactory.or_rec(II)I#Return(I)#50
joeq.Class.jq_Type.isSubtypeOf(Ljoeq/Class/jq_Type;)Z#LocalLoad(Ljava/lang/Object;,0)#22
joeq.Class.jq_Type.isSubtypeOf(Ljoeq/Class/jq_Type;)Z#Get(Ljoeq/Class/jq_Reference$jq_NullType;,STATIC,Ljoeq/Class/jq_Reference$jq_NullType;,NULL_TYPE)#23
joeq.Class.jq_Type.isSubtypeOf(Ljoeq/Class/jq_Type;)Z#ConditionalBranch(Ljava/lang/Object;,ne,28)#24
joeq.Class.jq_Type.isSubtypeOf(Ljoeq/Class/jq_Type;)Z#LocalLoad(I,2)#28
joeq.Class.jq_Type.isSubtypeOf(Ljoeq/Class/jq_Type;)Z#Constant(I,1)#29
joeq.Class.jq_Type.isSubtypeOf(Ljoeq/Class/jq_Type;)Z#ConditionalBranch(I,le,33)#30
joeq.Class.jq_Type.isSubtypeOf(Ljoeq/Class/jq_Type;)Z#Constant(I,0)#31
joeq.Class.jq_Type.isSubtypeOf(Ljoeq/Class/jq_Type;)Z#Return(I)#32
chord.analyses.type.RelSub.fill()V#Return(V)#58
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(Ljava/lang/Object;,2)#17
net.sf.javabdd.JFactory.satcount_rec(I)D#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCacheDataD;,c)#18
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(Ljava/lang/Object;,0)#19
net.sf.javabdd.JFactory.satcount_rec(I)D#Get(I,NONSTATIC,Lnet/sf/javabdd/JFactory;,miscid)#20
net.sf.javabdd.JFactory.satcount_rec(I)D#ConditionalBranch(I,ne,25)#21
net.sf.javabdd.JFactory.satcount_rec(I)D#LocalLoad(Ljava/lang/Object;,2)#22
net.sf.javabdd.JFactory.satcount_rec(I)D#Get(D,NONSTATIC,Lnet/sf/javabdd/JFactory$BddCacheDataD;,dres)#23
net.sf.javabdd.JFactory.satcount_rec(I)D#Return(D)#24
net.sf.javabdd.JFactory.bdd_markcount(I[I)V#Return(V)#14
net.sf.javabdd.JFactory.bdd_unmark(I)V#Return(V)#14
net.sf.javabdd.JFactory.bdd_save_rec(Ljava/io/BufferedWriter;I)V#Return(V)#9
chord.analyses.argret.RelIinvkRet.fill()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.argret.RelIinvkRet.fill()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/argret/RelIinvkRet;,doms)#1
chord.analyses.argret.RelIinvkRet.fill()V#Constant(I,0)#2
chord.analyses.argret.RelIinvkRet.fill()V#ArrayLoad(Ljava/lang/Object;)#3
chord.analyses.argret.RelIinvkRet.fill()V#CheckCast(Lchord/analyses/invk/DomI;)#4
chord.analyses.argret.RelIinvkRet.fill()V#LocalStore(Ljava/lang/Object;,1)#5
chord.analyses.argret.RelIinvkRet.fill()V#LocalLoad(Ljava/lang/Object;,0)#6
chord.analyses.argret.RelIinvkRet.fill()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/argret/RelIinvkRet;,doms)#7
chord.analyses.argret.RelIinvkRet.fill()V#Constant(I,2)#8
chord.analyses.argret.RelIinvkRet.fill()V#ArrayLoad(Ljava/lang/Object;)#9
chord.analyses.argret.RelIinvkRet.fill()V#CheckCast(Lchord/analyses/var/DomV;)#10
chord.analyses.argret.RelIinvkRet.fill()V#LocalStore(Ljava/lang/Object;,2)#11
chord.analyses.argret.RelIinvkRet.fill()V#LocalLoad(Ljava/lang/Object;,1)#12
chord.analyses.argret.RelIinvkRet.fill()V#Invoke(VIRTUAL,Lchord/analyses/invk/DomI;,size,()I)#13
chord.analyses.argret.RelIinvkRet.fill()V#LocalStore(I,3)#14
chord.analyses.argret.RelIinvkRet.fill()V#Constant(I,0)#15
chord.analyses.argret.RelIinvkRet.fill()V#LocalStore(I,4)#16
chord.analyses.argret.RelIinvkRet.fill()V#Goto(60)#17
chord.analyses.argret.RelIinvkRet.fill()V#LocalLoad(I,4)#60
chord.analyses.argret.RelIinvkRet.fill()V#LocalLoad(I,3)#61
chord.analyses.argret.RelIinvkRet.fill()V#ConditionalBranch(I,lt,18)#62
chord.analyses.argret.RelIinvkRet.fill()V#LocalLoad(Ljava/lang/Object;,1)#18
chord.analyses.argret.RelIinvkRet.fill()V#LocalLoad(I,4)#19
chord.analyses.argret.RelIinvkRet.fill()V#Invoke(VIRTUAL,Lchord/analyses/invk/DomI;,get,(I)Ljava/lang/Object;)#20
chord.analyses.argret.RelIinvkRet.fill()V#CheckCast(Ljoeq/Compiler/Quad/Quad;)#21
chord.analyses.argret.RelIinvkRet.fill()V#LocalStore(Ljava/lang/Object;,5)#22
chord.analyses.argret.RelIinvkRet.fill()V#LocalLoad(Ljava/lang/Object;,5)#23
chord.analyses.argret.RelIinvkRet.fill()V#Invoke(STATIC,Ljoeq/Compiler/Quad/Operator$Invoke;,getDest,(Ljoeq/Compiler/Quad/Quad;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;)#24
joeq.Compiler.Quad.Operator$Invoke.getDest(Ljoeq/Compiler/Quad/Quad;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operator$Invoke.getDest(Ljoeq/Compiler/Quad/Quad;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getOp1,()Ljoeq/Compiler/Quad/Operand;)#1
joeq.Compiler.Quad.Operator$Invoke.getDest(Ljoeq/Compiler/Quad/Quad;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#CheckCast(Ljoeq/Compiler/Quad/Operand$RegisterOperand;)#2
joeq.Compiler.Quad.Operator$Invoke.getDest(Ljoeq/Compiler/Quad/Quad;)Ljoeq/Compiler/Quad/Operand$RegisterOperand;#Return(Ljava/lang/Object;)#3
chord.analyses.argret.RelIinvkRet.fill()V#LocalStore(Ljava/lang/Object;,6)#25
chord.analyses.argret.RelIinvkRet.fill()V#LocalLoad(Ljava/lang/Object;,6)#26
chord.analyses.argret.RelIinvkRet.fill()V#Constant(L;,null)#27
chord.analyses.argret.RelIinvkRet.fill()V#ConditionalBranch(Ljava/lang/Object;,eq,56)#28
chord.analyses.argret.RelIinvkRet.fill()V#LocalLoad(I,4)#56
chord.analyses.argret.RelIinvkRet.fill()V#Constant(I,1)#57
chord.analyses.argret.RelIinvkRet.fill()V#BinaryOp(I,add)#58
chord.analyses.argret.RelIinvkRet.fill()V#LocalStore(I,4)#59
chord.analyses.argret.RelIinvkRet.fill()V#Return(V)#63
chord.analyses.reflect.ObjNewInstAnalysis.run()V#Invoke(STATIC,Lchord/project/ClassicProject;,g,()Lchord/project/ClassicProject;)#0
chord.analyses.reflect.ObjNewInstAnalysis.run()V#Constant(Ljava/lang/String;,"objNewInstIH")#1
chord.analyses.reflect.ObjNewInstAnalysis.run()V#Invoke(VIRTUAL,Lchord/project/ClassicProject;,getTrgt,(Ljava/lang/String;)Ljava/lang/Object;)#2
chord.analyses.reflect.ObjNewInstAnalysis.run()V#CheckCast(Lchord/project/analyses/ProgramRel;)#3
chord.analyses.reflect.ObjNewInstAnalysis.run()V#LocalStore(Ljava/lang/Object;,1)#4
chord.analyses.reflect.ObjNewInstAnalysis.run()V#Invoke(STATIC,Lchord/project/ClassicProject;,g,()Lchord/project/ClassicProject;)#5
chord.analyses.reflect.ObjNewInstAnalysis.run()V#Constant(Ljava/lang/String;,"objNewInstIM")#6
chord.analyses.reflect.ObjNewInstAnalysis.run()V#Invoke(VIRTUAL,Lchord/project/ClassicProject;,getTrgt,(Ljava/lang/String;)Ljava/lang/Object;)#7
chord.analyses.reflect.ObjNewInstAnalysis.run()V#CheckCast(Lchord/project/analyses/ProgramRel;)#8
chord.analyses.reflect.ObjNewInstAnalysis.run()V#LocalStore(Ljava/lang/Object;,2)#9
chord.analyses.reflect.ObjNewInstAnalysis.run()V#LocalLoad(Ljava/lang/Object;,1)#10
chord.analyses.reflect.ObjNewInstAnalysis.run()V#Invoke(VIRTUAL,Lchord/project/analyses/ProgramRel;,zero,()V)#11
chord.analyses.reflect.ObjNewInstAnalysis.run()V#LocalLoad(Ljava/lang/Object;,2)#12
chord.analyses.reflect.ObjNewInstAnalysis.run()V#Invoke(VIRTUAL,Lchord/project/analyses/ProgramRel;,zero,()V)#13
chord.analyses.reflect.ObjNewInstAnalysis.run()V#Invoke(STATIC,Lchord/project/ClassicProject;,g,()Lchord/project/ClassicProject;)#14
chord.analyses.reflect.ObjNewInstAnalysis.run()V#Constant(Ljava/lang/String;,"I")#15
chord.analyses.reflect.ObjNewInstAnalysis.run()V#Invoke(VIRTUAL,Lchord/project/ClassicProject;,getTrgt,(Ljava/lang/String;)Ljava/lang/Object;)#16
chord.analyses.reflect.ObjNewInstAnalysis.run()V#CheckCast(Lchord/analyses/invk/DomI;)#17
chord.analyses.reflect.ObjNewInstAnalysis.run()V#LocalStore(Ljava/lang/Object;,3)#18
chord.analyses.reflect.ObjNewInstAnalysis.run()V#Invoke(STATIC,Lchord/project/ClassicProject;,g,()Lchord/project/ClassicProject;)#19
chord.analyses.reflect.ObjNewInstAnalysis.run()V#Constant(Ljava/lang/String;,"H")#20
chord.analyses.reflect.ObjNewInstAnalysis.run()V#Invoke(VIRTUAL,Lchord/project/ClassicProject;,getTrgt,(Ljava/lang/String;)Ljava/lang/Object;)#21
chord.analyses.reflect.ObjNewInstAnalysis.run()V#CheckCast(Lchord/analyses/alloc/DomH;)#22
chord.analyses.reflect.ObjNewInstAnalysis.run()V#LocalStore(Ljava/lang/Object;,4)#23
chord.analyses.reflect.ObjNewInstAnalysis.run()V#Invoke(STATIC,Lchord/project/ClassicProject;,g,()Lchord/project/ClassicProject;)#24
chord.analyses.reflect.ObjNewInstAnalysis.run()V#Constant(Ljava/lang/String;,"M")#25
chord.analyses.reflect.ObjNewInstAnalysis.run()V#Invoke(VIRTUAL,Lchord/project/ClassicProject;,getTrgt,(Ljava/lang/String;)Ljava/lang/Object;)#26
chord.analyses.reflect.ObjNewInstAnalysis.run()V#CheckCast(Lchord/analyses/method/DomM;)#27
chord.analyses.reflect.ObjNewInstAnalysis.run()V#LocalStore(Ljava/lang/Object;,5)#28
chord.analyses.reflect.ObjNewInstAnalysis.run()V#Invoke(STATIC,Lchord/program/Program;,g,()Lchord/program/Program;)#29
chord.analyses.reflect.ObjNewInstAnalysis.run()V#Invoke(VIRTUAL,Lchord/program/Program;,getReflect,()Lchord/program/Reflect;)#30
chord.analyses.reflect.ObjNewInstAnalysis.run()V#Invoke(VIRTUAL,Lchord/program/Reflect;,getResolvedObjNewInstSites,()Ljava/util/List;)#31
chord.analyses.reflect.ObjNewInstAnalysis.run()V#LocalStore(Ljava/lang/Object;,6)#32
chord.analyses.reflect.ObjNewInstAnalysis.run()V#LocalLoad(Ljava/lang/Object;,6)#33
chord.analyses.reflect.ObjNewInstAnalysis.run()V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#34
chord.analyses.reflect.ObjNewInstAnalysis.run()V#LocalStore(Ljava/lang/Object;,8)#35
chord.analyses.reflect.ObjNewInstAnalysis.run()V#Goto(143)#36
chord.analyses.reflect.ObjNewInstAnalysis.run()V#LocalLoad(Ljava/lang/Object;,8)#143
chord.analyses.reflect.ObjNewInstAnalysis.run()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#144
chord.analyses.reflect.ObjNewInstAnalysis.run()V#Constant(I,0)#145
chord.analyses.reflect.ObjNewInstAnalysis.run()V#ConditionalBranch(I,ne,37)#146
chord.analyses.reflect.ObjNewInstAnalysis.run()V#LocalLoad(Ljava/lang/Object;,1)#147
chord.analyses.reflect.ObjNewInstAnalysis.run()V#Invoke(VIRTUAL,Lchord/project/analyses/ProgramRel;,save,()V)#148
chord.analyses.reflect.ObjNewInstAnalysis.run()V#LocalLoad(Ljava/lang/Object;,2)#149
chord.analyses.reflect.ObjNewInstAnalysis.run()V#Invoke(VIRTUAL,Lchord/project/analyses/ProgramRel;,save,()V)#150
chord.analyses.reflect.ObjNewInstAnalysis.run()V#Return(V)#151
chord.analyses.reflect.RelAryNewInstIH.fill()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.reflect.RelAryNewInstIH.fill()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/reflect/RelAryNewInstIH;,doms)#1
chord.analyses.reflect.RelAryNewInstIH.fill()V#Constant(I,0)#2
chord.analyses.reflect.RelAryNewInstIH.fill()V#ArrayLoad(Ljava/lang/Object;)#3
chord.analyses.reflect.RelAryNewInstIH.fill()V#CheckCast(Lchord/analyses/invk/DomI;)#4
chord.analyses.reflect.RelAryNewInstIH.fill()V#LocalStore(Ljava/lang/Object;,1)#5
chord.analyses.reflect.RelAryNewInstIH.fill()V#LocalLoad(Ljava/lang/Object;,0)#6
chord.analyses.reflect.RelAryNewInstIH.fill()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/reflect/RelAryNewInstIH;,doms)#7
chord.analyses.reflect.RelAryNewInstIH.fill()V#Constant(I,1)#8
chord.analyses.reflect.RelAryNewInstIH.fill()V#ArrayLoad(Ljava/lang/Object;)#9
chord.analyses.reflect.RelAryNewInstIH.fill()V#CheckCast(Lchord/analyses/alloc/DomH;)#10
chord.analyses.reflect.RelAryNewInstIH.fill()V#LocalStore(Ljava/lang/Object;,2)#11
chord.analyses.reflect.RelAryNewInstIH.fill()V#Invoke(STATIC,Lchord/program/Program;,g,()Lchord/program/Program;)#12
chord.analyses.reflect.RelAryNewInstIH.fill()V#Invoke(VIRTUAL,Lchord/program/Program;,getReflect,()Lchord/program/Reflect;)#13
chord.analyses.reflect.RelAryNewInstIH.fill()V#Invoke(VIRTUAL,Lchord/program/Reflect;,getResolvedAryNewInstSites,()Ljava/util/List;)#14
chord.analyses.reflect.RelAryNewInstIH.fill()V#LocalStore(Ljava/lang/Object;,3)#15
chord.analyses.reflect.RelAryNewInstIH.fill()V#LocalLoad(Ljava/lang/Object;,3)#16
chord.analyses.reflect.RelAryNewInstIH.fill()V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#17
chord.analyses.reflect.RelAryNewInstIH.fill()V#LocalStore(Ljava/lang/Object;,5)#18
chord.analyses.reflect.RelAryNewInstIH.fill()V#Goto(60)#19
chord.analyses.reflect.RelAryNewInstIH.fill()V#LocalLoad(Ljava/lang/Object;,5)#60
chord.analyses.reflect.RelAryNewInstIH.fill()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#61
chord.analyses.reflect.RelAryNewInstIH.fill()V#Constant(I,0)#62
chord.analyses.reflect.RelAryNewInstIH.fill()V#ConditionalBranch(I,ne,20)#63
chord.analyses.reflect.RelAryNewInstIH.fill()V#Return(V)#64
chord.analyses.method.RelStatTM.visit(Ljoeq/Class/jq_Class;)V#Return(V)#0
chord.analyses.method.RelStatTM.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#0
chord.analyses.method.RelStatTM.visit(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,isStatic,()Z)#1
joeq.Class.jq_StaticMethod.isStatic()Z#Constant(I,1)#0
joeq.Class.jq_StaticMethod.isStatic()Z#Return(I)#1
chord.analyses.method.RelStatTM.visit(Ljoeq/Class/jq_Method;)V#Constant(I,0)#2
chord.analyses.method.RelStatTM.visit(Ljoeq/Class/jq_Method;)V#ConditionalBranch(I,eq,11)#3
chord.analyses.method.RelStatTM.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#4
chord.analyses.method.RelStatTM.visit(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,getDeclaringClass,()Ljoeq/Class/jq_Class;)#5
chord.analyses.method.RelStatTM.visit(Ljoeq/Class/jq_Method;)V#LocalStore(Ljava/lang/Object;,2)#6
chord.analyses.method.RelStatTM.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#7
chord.analyses.method.RelStatTM.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,2)#8
chord.analyses.method.RelStatTM.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#9
chord.analyses.method.RelStatTM.visit(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Lchord/analyses/method/RelStatTM;,add,(Ljava/lang/Object;Ljava/lang/Object;)V)#10
chord.analyses.method.RelStatTM.visit(Ljoeq/Class/jq_Method;)V#Return(V)#11
chord.analyses.field.RelStatTF.visit(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.field.RelStatTF.visit(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,1)#1
chord.analyses.field.RelStatTF.visit(Ljoeq/Class/jq_Class;)V#Put(Ljoeq/Class/jq_Class;,NONSTATIC,Lchord/analyses/field/RelStatTF;,ctnrClass)#2
chord.analyses.field.RelStatTF.visit(Ljoeq/Class/jq_Class;)V#Return(V)#3
chord.analyses.field.RelStatTF.visit(Ljoeq/Class/jq_Field;)V#LocalLoad(Ljava/lang/Object;,1)#0
chord.analyses.field.RelStatTF.visit(Ljoeq/Class/jq_Field;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Field;,isStatic,()Z)#1
joeq.Class.jq_InstanceField.isStatic()Z#Constant(I,0)#0
joeq.Class.jq_InstanceField.isStatic()Z#Return(I)#1
chord.analyses.field.RelStatTF.visit(Ljoeq/Class/jq_Field;)V#Constant(I,0)#2
chord.analyses.field.RelStatTF.visit(Ljoeq/Class/jq_Field;)V#ConditionalBranch(I,eq,9)#3
chord.analyses.field.RelStatTF.visit(Ljoeq/Class/jq_Field;)V#Return(V)#9
chord.analyses.inst.RelMgetStatFldInst.init()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.inst.RelMgetStatFldInst.init()V#LocalLoad(Ljava/lang/Object;,0)#1
chord.analyses.inst.RelMgetStatFldInst.init()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/inst/RelMgetStatFldInst;,doms)#2
chord.analyses.inst.RelMgetStatFldInst.init()V#Constant(I,0)#3
chord.analyses.inst.RelMgetStatFldInst.init()V#ArrayLoad(Ljava/lang/Object;)#4
chord.analyses.inst.RelMgetStatFldInst.init()V#CheckCast(Lchord/analyses/method/DomM;)#5
chord.analyses.inst.RelMgetStatFldInst.init()V#Put(Lchord/analyses/method/DomM;,NONSTATIC,Lchord/analyses/inst/RelMgetStatFldInst;,domM)#6
chord.analyses.inst.RelMgetStatFldInst.init()V#LocalLoad(Ljava/lang/Object;,0)#7
chord.analyses.inst.RelMgetStatFldInst.init()V#LocalLoad(Ljava/lang/Object;,0)#8
chord.analyses.inst.RelMgetStatFldInst.init()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/inst/RelMgetStatFldInst;,doms)#9
chord.analyses.inst.RelMgetStatFldInst.init()V#Constant(I,1)#10
chord.analyses.inst.RelMgetStatFldInst.init()V#ArrayLoad(Ljava/lang/Object;)#11
chord.analyses.inst.RelMgetStatFldInst.init()V#CheckCast(Lchord/analyses/var/DomV;)#12
chord.analyses.inst.RelMgetStatFldInst.init()V#Put(Lchord/analyses/var/DomV;,NONSTATIC,Lchord/analyses/inst/RelMgetStatFldInst;,domV)#13
chord.analyses.inst.RelMgetStatFldInst.init()V#LocalLoad(Ljava/lang/Object;,0)#14
chord.analyses.inst.RelMgetStatFldInst.init()V#LocalLoad(Ljava/lang/Object;,0)#15
chord.analyses.inst.RelMgetStatFldInst.init()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/inst/RelMgetStatFldInst;,doms)#16
chord.analyses.inst.RelMgetStatFldInst.init()V#Constant(I,2)#17
chord.analyses.inst.RelMgetStatFldInst.init()V#ArrayLoad(Ljava/lang/Object;)#18
chord.analyses.inst.RelMgetStatFldInst.init()V#CheckCast(Lchord/analyses/field/DomF;)#19
chord.analyses.inst.RelMgetStatFldInst.init()V#Put(Lchord/analyses/field/DomF;,NONSTATIC,Lchord/analyses/inst/RelMgetStatFldInst;,domF)#20
chord.analyses.inst.RelMgetStatFldInst.init()V#Return(V)#21
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#89
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,hivs)#90
chord.project.VisitorHandler.visitProgram()V#Constant(L;,null)#91
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(Ljava/lang/Object;,ne,98)#92
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#93
chord.project.VisitorHandler.visitProgram()V#New(Ljava/util/ArrayList;,0)#94
chord.project.VisitorHandler.visitProgram()V#Dup(1,0)#95
chord.project.VisitorHandler.visitProgram()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#96
chord.project.VisitorHandler.visitProgram()V#Put(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,hivs)#97
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#98
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,hivs)#99
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,1)#100
chord.project.VisitorHandler.visitProgram()V#CheckCast(Lchord/program/visitors/IHeapInstVisitor;)#101
chord.project.VisitorHandler.visitProgram()V#Invoke(INTERFACE,Ljava/util/Collection;,add,(Ljava/lang/Object;)Z)#102
chord.project.VisitorHandler.visitProgram()V#Pop(1)#103
chord.analyses.inst.RelMgetStatFldInst.visit(Ljoeq/Class/jq_Class;)V#Return(V)#0
chord.analyses.inst.RelMgetStatFldInst.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.inst.RelMgetStatFldInst.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#1
chord.analyses.inst.RelMgetStatFldInst.visit(Ljoeq/Class/jq_Method;)V#Put(Ljoeq/Class/jq_Method;,NONSTATIC,Lchord/analyses/inst/RelMgetStatFldInst;,ctnrMethod)#2
chord.analyses.inst.RelMgetStatFldInst.visit(Ljoeq/Class/jq_Method;)V#Return(V)#3
chord.analyses.type.RelCHA.fill()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.type.RelCHA.fill()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/type/RelCHA;,doms)#1
chord.analyses.type.RelCHA.fill()V#Constant(I,0)#2
chord.analyses.type.RelCHA.fill()V#ArrayLoad(Ljava/lang/Object;)#3
chord.analyses.type.RelCHA.fill()V#CheckCast(Lchord/analyses/method/DomM;)#4
chord.analyses.type.RelCHA.fill()V#LocalStore(Ljava/lang/Object;,1)#5
chord.analyses.type.RelCHA.fill()V#Invoke(STATIC,Lchord/program/Program;,g,()Lchord/program/Program;)#6
chord.analyses.type.RelCHA.fill()V#LocalStore(Ljava/lang/Object;,2)#7
chord.analyses.type.RelCHA.fill()V#New(Ljava/util/HashSet;,0)#8
chord.analyses.type.RelCHA.fill()V#Dup(1,0)#9
chord.analyses.type.RelCHA.fill()V#Invoke(SPECIAL,Ljava/util/HashSet;,<init>,()V)#10
chord.analyses.type.RelCHA.fill()V#LocalStore(Ljava/lang/Object;,3)#11
chord.analyses.type.RelCHA.fill()V#LocalLoad(Ljava/lang/Object;,2)#12
chord.analyses.type.RelCHA.fill()V#Invoke(VIRTUAL,Lchord/program/Program;,getClasses,()Lchord/util/IndexSet;)#13
chord.analyses.type.RelCHA.fill()V#LocalStore(Ljava/lang/Object;,4)#14
chord.analyses.type.RelCHA.fill()V#LocalLoad(Ljava/lang/Object;,2)#15
chord.analyses.type.RelCHA.fill()V#Constant(Ljava/lang/String;,"java.lang.Object")#16
chord.analyses.type.RelCHA.fill()V#Invoke(VIRTUAL,Lchord/program/Program;,getClass,(Ljava/lang/String;)Ljoeq/Class/jq_Reference;)#17
chord.analyses.type.RelCHA.fill()V#CheckCast(Ljoeq/Class/jq_Class;)#18
chord.analyses.type.RelCHA.fill()V#LocalStore(Ljava/lang/Object;,5)#19
chord.analyses.type.RelCHA.fill()V#LocalLoad(Ljava/lang/Object;,5)#20
chord.analyses.type.RelCHA.fill()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getDeclaredInstanceMethods,()[Ljoeq/Class/jq_InstanceMethod;)#21
joeq.Class.jq_Class.getDeclaredInstanceMethods()[Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Class.jq_Class.getDeclaredInstanceMethods()[Ljoeq/Class/jq_InstanceMethod;#Constant(I,3)#1
joeq.Class.jq_Class.getDeclaredInstanceMethods()[Ljoeq/Class/jq_InstanceMethod;#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,chkState,(B)V)#2
joeq.Class.jq_Class.getDeclaredInstanceMethods()[Ljoeq/Class/jq_InstanceMethod;#LocalLoad(Ljava/lang/Object;,0)#3
joeq.Class.jq_Class.getDeclaredInstanceMethods()[Ljoeq/Class/jq_InstanceMethod;#Get([Ljoeq/Class/jq_InstanceMethod;,NONSTATIC,Ljoeq/Class/jq_Class;,declared_instance_methods)#4
joeq.Class.jq_Class.getDeclaredInstanceMethods()[Ljoeq/Class/jq_InstanceMethod;#Return(Ljava/lang/Object;)#5
chord.analyses.type.RelCHA.fill()V#Dup(1,0)#22
chord.analyses.type.RelCHA.fill()V#LocalStore(Ljava/lang/Object;,9)#23
chord.analyses.type.RelCHA.fill()V#ArrayLength()#24
chord.analyses.type.RelCHA.fill()V#LocalStore(I,8)#25
chord.analyses.type.RelCHA.fill()V#Constant(I,0)#26
chord.analyses.type.RelCHA.fill()V#LocalStore(I,7)#27
chord.analyses.type.RelCHA.fill()V#Goto(46)#28
chord.analyses.type.RelCHA.fill()V#LocalLoad(I,7)#46
chord.analyses.type.RelCHA.fill()V#LocalLoad(I,8)#47
chord.analyses.type.RelCHA.fill()V#ConditionalBranch(I,lt,29)#48
chord.analyses.type.RelCHA.fill()V#LocalLoad(Ljava/lang/Object;,9)#29
chord.analyses.type.RelCHA.fill()V#LocalLoad(I,7)#30
chord.analyses.type.RelCHA.fill()V#ArrayLoad(Ljava/lang/Object;)#31
chord.analyses.type.RelCHA.fill()V#LocalStore(Ljava/lang/Object;,6)#32
chord.analyses.type.RelCHA.fill()V#LocalLoad(Ljava/lang/Object;,1)#33
chord.analyses.type.RelCHA.fill()V#LocalLoad(Ljava/lang/Object;,6)#34
chord.analyses.type.RelCHA.fill()V#Invoke(VIRTUAL,Lchord/analyses/method/DomM;,contains,(Ljava/lang/Object;)Z)#35
chord.util.IndexMap.contains(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.IndexMap.contains(Ljava/lang/Object;)Z#Get(Ljava/util/HashMap;,NONSTATIC,Lchord/util/IndexMap;,hmap)#1
chord.util.IndexMap.contains(Ljava/lang/Object;)Z#LocalLoad(Ljava/lang/Object;,1)#2
chord.util.IndexMap.contains(Ljava/lang/Object;)Z#Invoke(VIRTUAL,Ljava/util/HashMap;,containsKey,(Ljava/lang/Object;)Z)#3
chord.util.IndexMap.contains(Ljava/lang/Object;)Z#Return(I)#4
chord.analyses.type.RelCHA.fill()V#Constant(I,0)#36
chord.analyses.type.RelCHA.fill()V#ConditionalBranch(I,eq,42)#37
chord.analyses.type.RelCHA.fill()V#LocalLoad(I,7)#42
chord.analyses.type.RelCHA.fill()V#Constant(I,1)#43
chord.analyses.type.RelCHA.fill()V#BinaryOp(I,add)#44
chord.analyses.type.RelCHA.fill()V#LocalStore(I,7)#45
chord.analyses.type.RelCHA.fill()V#LocalLoad(Ljava/lang/Object;,4)#49
chord.analyses.type.RelCHA.fill()V#Invoke(VIRTUAL,Lchord/util/IndexSet;,iterator,()Ljava/util/Iterator;)#50
chord.analyses.type.RelCHA.fill()V#LocalStore(Ljava/lang/Object;,7)#51
chord.analyses.type.RelCHA.fill()V#Goto(256)#52
chord.analyses.type.RelCHA.fill()V#LocalLoad(Ljava/lang/Object;,7)#256
chord.analyses.type.RelCHA.fill()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#257
chord.analyses.type.RelCHA.fill()V#Constant(I,0)#258
chord.analyses.type.RelCHA.fill()V#ConditionalBranch(I,ne,53)#259
chord.analyses.type.RelCHA.fill()V#LocalLoad(Ljava/lang/Object;,7)#53
chord.analyses.type.RelCHA.fill()V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#54
chord.analyses.type.RelCHA.fill()V#CheckCast(Ljoeq/Class/jq_Reference;)#55
chord.analyses.type.RelCHA.fill()V#LocalStore(Ljava/lang/Object;,6)#56
chord.analyses.type.RelCHA.fill()V#LocalLoad(Ljava/lang/Object;,6)#57
chord.analyses.type.RelCHA.fill()V#Instanceof(Ljoeq/Class/jq_Array;)#58
chord.analyses.type.RelCHA.fill()V#Constant(I,0)#59
chord.analyses.type.RelCHA.fill()V#ConditionalBranch(I,eq,82)#60
chord.analyses.type.RelCHA.fill()V#LocalLoad(Ljava/lang/Object;,6)#82
chord.analyses.type.RelCHA.fill()V#CheckCast(Ljoeq/Class/jq_Class;)#83
chord.analyses.type.RelCHA.fill()V#LocalStore(Ljava/lang/Object;,8)#84
chord.analyses.type.RelCHA.fill()V#LocalLoad(Ljava/lang/Object;,8)#85
chord.analyses.type.RelCHA.fill()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,getDeclaredInstanceMethods,()[Ljoeq/Class/jq_InstanceMethod;)#86
chord.analyses.type.RelCHA.fill()V#Dup(1,0)#87
chord.analyses.type.RelCHA.fill()V#LocalStore(Ljava/lang/Object;,12)#88
chord.analyses.type.RelCHA.fill()V#ArrayLength()#89
chord.analyses.type.RelCHA.fill()V#LocalStore(I,11)#90
chord.analyses.type.RelCHA.fill()V#Constant(I,0)#91
chord.analyses.type.RelCHA.fill()V#LocalStore(I,10)#92
chord.analyses.type.RelCHA.fill()V#Goto(253)#93
chord.analyses.type.RelCHA.fill()V#LocalLoad(I,10)#253
chord.analyses.type.RelCHA.fill()V#LocalLoad(I,11)#254
chord.analyses.type.RelCHA.fill()V#ConditionalBranch(I,lt,94)#255
chord.analyses.type.RelCHA.fill()V#LocalLoad(Ljava/lang/Object;,12)#94
chord.analyses.type.RelCHA.fill()V#LocalLoad(I,10)#95
chord.analyses.type.RelCHA.fill()V#ArrayLoad(Ljava/lang/Object;)#96
chord.analyses.type.RelCHA.fill()V#LocalStore(Ljava/lang/Object;,9)#97
chord.analyses.type.RelCHA.fill()V#LocalLoad(Ljava/lang/Object;,9)#98
chord.analyses.type.RelCHA.fill()V#Invoke(VIRTUAL,Ljoeq/Class/jq_InstanceMethod;,isPrivate,()Z)#99
chord.analyses.type.RelCHA.fill()V#Constant(I,0)#100
chord.analyses.type.RelCHA.fill()V#ConditionalBranch(I,eq,103)#101
chord.analyses.type.RelCHA.fill()V#LocalLoad(Ljava/lang/Object;,9)#103
chord.analyses.type.RelCHA.fill()V#Instanceof(Ljoeq/Class/jq_Initializer;)#104
chord.analyses.type.RelCHA.fill()V#Constant(I,0)#105
chord.analyses.type.RelCHA.fill()V#ConditionalBranch(I,eq,108)#106
chord.analyses.type.RelCHA.fill()V#Goto(249)#107
chord.analyses.type.RelCHA.fill()V#LocalLoad(I,10)#249
chord.analyses.type.RelCHA.fill()V#Constant(I,1)#250
chord.analyses.type.RelCHA.fill()V#BinaryOp(I,add)#251
chord.analyses.type.RelCHA.fill()V#LocalStore(I,10)#252
chord.analyses.type.RelCHA.fill()V#LocalLoad(Ljava/lang/Object;,1)#108
chord.analyses.type.RelCHA.fill()V#LocalLoad(Ljava/lang/Object;,9)#109
chord.analyses.type.RelCHA.fill()V#Invoke(VIRTUAL,Lchord/analyses/method/DomM;,contains,(Ljava/lang/Object;)Z)#110
chord.analyses.type.RelCHA.fill()V#Constant(I,0)#111
chord.analyses.type.RelCHA.fill()V#ConditionalBranch(I,ne,114)#112
chord.analyses.type.RelCHA.fill()V#Goto(249)#113
chord.analyses.type.RelCHA.fill()V#Return(V)#260
chord.analyses.alloc.RelHT.fill()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.alloc.RelHT.fill()V#LocalLoad(Ljava/lang/Object;,0)#1
chord.analyses.alloc.RelHT.fill()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/alloc/RelHT;,doms)#2
chord.analyses.alloc.RelHT.fill()V#Constant(I,0)#3
chord.analyses.alloc.RelHT.fill()V#ArrayLoad(Ljava/lang/Object;)#4
chord.analyses.alloc.RelHT.fill()V#CheckCast(Lchord/analyses/alloc/DomH;)#5
chord.analyses.alloc.RelHT.fill()V#Put(Lchord/analyses/alloc/DomH;,NONSTATIC,Lchord/analyses/alloc/RelHT;,domH)#6
chord.analyses.alloc.RelHT.fill()V#LocalLoad(Ljava/lang/Object;,0)#7
chord.analyses.alloc.RelHT.fill()V#LocalLoad(Ljava/lang/Object;,0)#8
chord.analyses.alloc.RelHT.fill()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/alloc/RelHT;,doms)#9
chord.analyses.alloc.RelHT.fill()V#Constant(I,1)#10
chord.analyses.alloc.RelHT.fill()V#ArrayLoad(Ljava/lang/Object;)#11
chord.analyses.alloc.RelHT.fill()V#CheckCast(Lchord/analyses/type/DomT;)#12
chord.analyses.alloc.RelHT.fill()V#Put(Lchord/analyses/type/DomT;,NONSTATIC,Lchord/analyses/alloc/RelHT;,domT)#13
chord.analyses.alloc.RelHT.fill()V#LocalLoad(Ljava/lang/Object;,0)#14
chord.analyses.alloc.RelHT.fill()V#Get(Lchord/analyses/alloc/DomH;,NONSTATIC,Lchord/analyses/alloc/RelHT;,domH)#15
chord.analyses.alloc.RelHT.fill()V#Invoke(VIRTUAL,Lchord/analyses/alloc/DomH;,size,()I)#16
chord.analyses.alloc.RelHT.fill()V#LocalStore(I,1)#17
chord.analyses.alloc.RelHT.fill()V#LocalLoad(Ljava/lang/Object;,0)#18
chord.analyses.alloc.RelHT.fill()V#Get(Lchord/analyses/alloc/DomH;,NONSTATIC,Lchord/analyses/alloc/RelHT;,domH)#19
chord.analyses.alloc.RelHT.fill()V#Invoke(VIRTUAL,Lchord/analyses/alloc/DomH;,getLastA,()I)#20
chord.analyses.alloc.DomH.getLastA()I#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.alloc.DomH.getLastA()I#Get(I,NONSTATIC,Lchord/analyses/alloc/DomH;,lastA)#1
chord.analyses.alloc.DomH.getLastA()I#Return(I)#2
chord.analyses.alloc.RelHT.fill()V#Constant(I,1)#21
chord.analyses.alloc.RelHT.fill()V#BinaryOp(I,add)#22
chord.analyses.alloc.RelHT.fill()V#LocalStore(I,2)#23
chord.analyses.alloc.RelHT.fill()V#Constant(I,1)#24
chord.analyses.alloc.RelHT.fill()V#LocalStore(I,3)#25
chord.analyses.alloc.RelHT.fill()V#Goto(116)#26
chord.analyses.alloc.RelHT.fill()V#LocalLoad(I,3)#116
chord.analyses.alloc.RelHT.fill()V#LocalLoad(I,2)#117
chord.analyses.alloc.RelHT.fill()V#ConditionalBranch(I,lt,27)#118
chord.analyses.alloc.RelHT.fill()V#Invoke(STATIC,Lchord/program/Program;,g,()Lchord/program/Program;)#119
chord.analyses.alloc.RelHT.fill()V#Invoke(VIRTUAL,Lchord/program/Program;,getReflect,()Lchord/program/Reflect;)#120
chord.analyses.alloc.RelHT.fill()V#LocalStore(Ljava/lang/Object;,3)#121
chord.analyses.alloc.RelHT.fill()V#LocalLoad(Ljava/lang/Object;,0)#122
chord.analyses.alloc.RelHT.fill()V#LocalLoad(Ljava/lang/Object;,3)#123
chord.analyses.alloc.RelHT.fill()V#Invoke(VIRTUAL,Lchord/program/Reflect;,getResolvedObjNewInstSites,()Ljava/util/List;)#124
chord.analyses.alloc.RelHT.fill()V#Invoke(SPECIAL,Lchord/analyses/alloc/RelHT;,processResolvedNewInstSites,(Ljava/util/List;)V)#125
chord.analyses.alloc.RelHT.processResolvedNewInstSites(Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,1)#0
chord.analyses.alloc.RelHT.processResolvedNewInstSites(Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#1
chord.analyses.alloc.RelHT.processResolvedNewInstSites(Ljava/util/List;)V#LocalStore(Ljava/lang/Object;,3)#2
chord.analyses.alloc.RelHT.processResolvedNewInstSites(Ljava/util/List;)V#Goto(60)#3
chord.analyses.alloc.RelHT.processResolvedNewInstSites(Ljava/util/List;)V#LocalLoad(Ljava/lang/Object;,3)#60
chord.analyses.alloc.RelHT.processResolvedNewInstSites(Ljava/util/List;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#61
chord.analyses.alloc.RelHT.processResolvedNewInstSites(Ljava/util/List;)V#Constant(I,0)#62
chord.analyses.alloc.RelHT.processResolvedNewInstSites(Ljava/util/List;)V#ConditionalBranch(I,ne,4)#63
chord.analyses.alloc.RelHT.processResolvedNewInstSites(Ljava/util/List;)V#Return(V)#64
chord.analyses.alloc.RelHT.fill()V#LocalLoad(Ljava/lang/Object;,0)#126
chord.analyses.alloc.RelHT.fill()V#LocalLoad(Ljava/lang/Object;,3)#127
chord.analyses.alloc.RelHT.fill()V#Invoke(VIRTUAL,Lchord/program/Reflect;,getResolvedConNewInstSites,()Ljava/util/List;)#128
chord.analyses.alloc.RelHT.fill()V#Invoke(SPECIAL,Lchord/analyses/alloc/RelHT;,processResolvedNewInstSites,(Ljava/util/List;)V)#129
chord.analyses.alloc.RelHT.fill()V#LocalLoad(Ljava/lang/Object;,0)#130
chord.analyses.alloc.RelHT.fill()V#LocalLoad(Ljava/lang/Object;,3)#131
chord.analyses.alloc.RelHT.fill()V#Invoke(VIRTUAL,Lchord/program/Reflect;,getResolvedAryNewInstSites,()Ljava/util/List;)#132
chord.analyses.alloc.RelHT.fill()V#Invoke(SPECIAL,Lchord/analyses/alloc/RelHT;,processResolvedNewInstSites,(Ljava/util/List;)V)#133
chord.analyses.alloc.RelHT.fill()V#Return(V)#134
chord.analyses.inst.RelMgetInstFldInst.init()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.inst.RelMgetInstFldInst.init()V#LocalLoad(Ljava/lang/Object;,0)#1
chord.analyses.inst.RelMgetInstFldInst.init()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/inst/RelMgetInstFldInst;,doms)#2
chord.analyses.inst.RelMgetInstFldInst.init()V#Constant(I,0)#3
chord.analyses.inst.RelMgetInstFldInst.init()V#ArrayLoad(Ljava/lang/Object;)#4
chord.analyses.inst.RelMgetInstFldInst.init()V#CheckCast(Lchord/analyses/method/DomM;)#5
chord.analyses.inst.RelMgetInstFldInst.init()V#Put(Lchord/analyses/method/DomM;,NONSTATIC,Lchord/analyses/inst/RelMgetInstFldInst;,domM)#6
chord.analyses.inst.RelMgetInstFldInst.init()V#LocalLoad(Ljava/lang/Object;,0)#7
chord.analyses.inst.RelMgetInstFldInst.init()V#LocalLoad(Ljava/lang/Object;,0)#8
chord.analyses.inst.RelMgetInstFldInst.init()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/inst/RelMgetInstFldInst;,doms)#9
chord.analyses.inst.RelMgetInstFldInst.init()V#Constant(I,1)#10
chord.analyses.inst.RelMgetInstFldInst.init()V#ArrayLoad(Ljava/lang/Object;)#11
chord.analyses.inst.RelMgetInstFldInst.init()V#CheckCast(Lchord/analyses/var/DomV;)#12
chord.analyses.inst.RelMgetInstFldInst.init()V#Put(Lchord/analyses/var/DomV;,NONSTATIC,Lchord/analyses/inst/RelMgetInstFldInst;,domV)#13
chord.analyses.inst.RelMgetInstFldInst.init()V#LocalLoad(Ljava/lang/Object;,0)#14
chord.analyses.inst.RelMgetInstFldInst.init()V#LocalLoad(Ljava/lang/Object;,0)#15
chord.analyses.inst.RelMgetInstFldInst.init()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/inst/RelMgetInstFldInst;,doms)#16
chord.analyses.inst.RelMgetInstFldInst.init()V#Constant(I,3)#17
chord.analyses.inst.RelMgetInstFldInst.init()V#ArrayLoad(Ljava/lang/Object;)#18
chord.analyses.inst.RelMgetInstFldInst.init()V#CheckCast(Lchord/analyses/field/DomF;)#19
chord.analyses.inst.RelMgetInstFldInst.init()V#Put(Lchord/analyses/field/DomF;,NONSTATIC,Lchord/analyses/inst/RelMgetInstFldInst;,domF)#20
chord.analyses.inst.RelMgetInstFldInst.init()V#Return(V)#21
chord.analyses.inst.RelMgetInstFldInst.visit(Ljoeq/Class/jq_Class;)V#Return(V)#0
chord.analyses.inst.RelMgetInstFldInst.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.inst.RelMgetInstFldInst.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#1
chord.analyses.inst.RelMgetInstFldInst.visit(Ljoeq/Class/jq_Method;)V#Put(Ljoeq/Class/jq_Method;,NONSTATIC,Lchord/analyses/inst/RelMgetInstFldInst;,ctnrMethod)#2
chord.analyses.inst.RelMgetInstFldInst.visit(Ljoeq/Class/jq_Method;)V#Return(V)#3
chord.analyses.invk.RelSpecIM.fill()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.invk.RelSpecIM.fill()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/invk/RelSpecIM;,doms)#1
chord.analyses.invk.RelSpecIM.fill()V#Constant(I,0)#2
chord.analyses.invk.RelSpecIM.fill()V#ArrayLoad(Ljava/lang/Object;)#3
chord.analyses.invk.RelSpecIM.fill()V#CheckCast(Lchord/analyses/invk/DomI;)#4
chord.analyses.invk.RelSpecIM.fill()V#LocalStore(Ljava/lang/Object;,1)#5
chord.analyses.invk.RelSpecIM.fill()V#LocalLoad(Ljava/lang/Object;,0)#6
chord.analyses.invk.RelSpecIM.fill()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/invk/RelSpecIM;,doms)#7
chord.analyses.invk.RelSpecIM.fill()V#Constant(I,1)#8
chord.analyses.invk.RelSpecIM.fill()V#ArrayLoad(Ljava/lang/Object;)#9
chord.analyses.invk.RelSpecIM.fill()V#CheckCast(Lchord/analyses/method/DomM;)#10
chord.analyses.invk.RelSpecIM.fill()V#LocalStore(Ljava/lang/Object;,2)#11
chord.analyses.invk.RelSpecIM.fill()V#LocalLoad(Ljava/lang/Object;,1)#12
chord.analyses.invk.RelSpecIM.fill()V#Invoke(VIRTUAL,Lchord/analyses/invk/DomI;,size,()I)#13
chord.analyses.invk.RelSpecIM.fill()V#LocalStore(I,3)#14
chord.analyses.invk.RelSpecIM.fill()V#Constant(I,0)#15
chord.analyses.invk.RelSpecIM.fill()V#LocalStore(I,4)#16
chord.analyses.invk.RelSpecIM.fill()V#Goto(75)#17
chord.analyses.invk.RelSpecIM.fill()V#LocalLoad(I,4)#75
chord.analyses.invk.RelSpecIM.fill()V#LocalLoad(I,3)#76
chord.analyses.invk.RelSpecIM.fill()V#ConditionalBranch(I,lt,18)#77
chord.analyses.invk.RelSpecIM.fill()V#LocalLoad(Ljava/lang/Object;,1)#18
chord.analyses.invk.RelSpecIM.fill()V#LocalLoad(I,4)#19
chord.analyses.invk.RelSpecIM.fill()V#Invoke(VIRTUAL,Lchord/analyses/invk/DomI;,get,(I)Ljava/lang/Object;)#20
chord.analyses.invk.RelSpecIM.fill()V#CheckCast(Ljoeq/Compiler/Quad/Quad;)#21
chord.analyses.invk.RelSpecIM.fill()V#LocalStore(Ljava/lang/Object;,5)#22
chord.analyses.invk.RelSpecIM.fill()V#LocalLoad(Ljava/lang/Object;,5)#23
chord.analyses.invk.RelSpecIM.fill()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getOperator,()Ljoeq/Compiler/Quad/Operator;)#24
chord.analyses.invk.RelSpecIM.fill()V#LocalStore(Ljava/lang/Object;,6)#25
chord.analyses.invk.RelSpecIM.fill()V#LocalLoad(Ljava/lang/Object;,6)#26
chord.analyses.invk.RelSpecIM.fill()V#Instanceof(Ljoeq/Compiler/Quad/Operator$Invoke$InvokeStatic;)#27
chord.analyses.invk.RelSpecIM.fill()V#Constant(I,0)#28
chord.analyses.invk.RelSpecIM.fill()V#ConditionalBranch(I,eq,71)#29
chord.analyses.invk.RelSpecIM.fill()V#LocalLoad(Ljava/lang/Object;,5)#30
chord.analyses.invk.RelSpecIM.fill()V#Invoke(STATIC,Ljoeq/Compiler/Quad/Operator$Invoke$InvokeStatic;,getMethod,(Ljoeq/Compiler/Quad/Quad;)Ljoeq/Compiler/Quad/Operand$MethodOperand;)#31
chord.analyses.invk.RelSpecIM.fill()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Operand$MethodOperand;,getMethod,()Ljoeq/Class/jq_Method;)#32
chord.analyses.invk.RelSpecIM.fill()V#LocalStore(Ljava/lang/Object;,7)#33
chord.analyses.invk.RelSpecIM.fill()V#LocalLoad(Ljava/lang/Object;,7)#34
chord.analyses.invk.RelSpecIM.fill()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,isStatic,()Z)#35
chord.analyses.invk.RelSpecIM.fill()V#Constant(I,0)#36
chord.analyses.invk.RelSpecIM.fill()V#ConditionalBranch(I,ne,71)#37
chord.analyses.invk.RelSpecIM.fill()V#LocalLoad(I,4)#71
chord.analyses.invk.RelSpecIM.fill()V#Constant(I,1)#72
chord.analyses.invk.RelSpecIM.fill()V#BinaryOp(I,add)#73
chord.analyses.invk.RelSpecIM.fill()V#LocalStore(I,4)#74
chord.analyses.invk.RelSpecIM.fill()V#Return(V)#78
chord.analyses.type.RelClassT.visit(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,1)#0
chord.analyses.type.RelClassT.visit(Ljoeq/Class/jq_Class;)V#Invoke(VIRTUAL,Ljoeq/Class/jq_Class;,isInterface,()Z)#1
chord.analyses.type.RelClassT.visit(Ljoeq/Class/jq_Class;)V#Constant(I,0)#2
chord.analyses.type.RelClassT.visit(Ljoeq/Class/jq_Class;)V#ConditionalBranch(I,ne,7)#3
chord.analyses.type.RelClassT.visit(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,0)#4
chord.analyses.type.RelClassT.visit(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,1)#5
chord.analyses.type.RelClassT.visit(Ljoeq/Class/jq_Class;)V#Invoke(VIRTUAL,Lchord/analyses/type/RelClassT;,add,(Ljava/lang/Object;)V)#6
chord.bddbddb.Rel.add(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.bddbddb.Rel.add(Ljava/lang/Object;)V#Get(Lnet/sf/javabdd/BDD;,NONSTATIC,Lchord/bddbddb/Rel;,bdd)#1
chord.bddbddb.Rel.add(Ljava/lang/Object;)V#Constant(L;,null)#2
chord.bddbddb.Rel.add(Ljava/lang/Object;)V#ConditionalBranch(Ljava/lang/Object;,ne,9)#3
chord.bddbddb.Rel.add(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#9
chord.bddbddb.Rel.add(Ljava/lang/Object;)V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/bddbddb/Rel;,doms)#10
chord.bddbddb.Rel.add(Ljava/lang/Object;)V#Constant(I,0)#11
chord.bddbddb.Rel.add(Ljava/lang/Object;)V#ArrayLoad(Ljava/lang/Object;)#12
chord.bddbddb.Rel.add(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#13
chord.bddbddb.Rel.add(Ljava/lang/Object;)V#Invoke(VIRTUAL,Lchord/bddbddb/Dom;,indexOf,(Ljava/lang/Object;)I)#14
chord.bddbddb.Rel.add(Ljava/lang/Object;)V#LocalStore(I,2)#15
chord.bddbddb.Rel.add(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#16
chord.bddbddb.Rel.add(Ljava/lang/Object;)V#Get(Lnet/sf/javabdd/BDD;,NONSTATIC,Lchord/bddbddb/Rel;,bdd)#17
chord.bddbddb.Rel.add(Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#18
chord.bddbddb.Rel.add(Ljava/lang/Object;)V#Get([Lnet/sf/javabdd/BDDDomain;,NONSTATIC,Lchord/bddbddb/Rel;,domBdds)#19
chord.bddbddb.Rel.add(Ljava/lang/Object;)V#Constant(I,0)#20
chord.bddbddb.Rel.add(Ljava/lang/Object;)V#ArrayLoad(Ljava/lang/Object;)#21
chord.bddbddb.Rel.add(Ljava/lang/Object;)V#LocalLoad(I,2)#22
chord.bddbddb.Rel.add(Ljava/lang/Object;)V#Conversion(I,J)#23
chord.bddbddb.Rel.add(Ljava/lang/Object;)V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDDomain;,ithVar,(J)Lnet/sf/javabdd/BDD;)#24
chord.bddbddb.Rel.add(Ljava/lang/Object;)V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDD;,orWith,(Lnet/sf/javabdd/BDD;)Lnet/sf/javabdd/BDD;)#25
chord.bddbddb.Rel.add(Ljava/lang/Object;)V#Pop(1)#26
chord.bddbddb.Rel.add(Ljava/lang/Object;)V#Goto(38)#27
chord.bddbddb.Rel.add(Ljava/lang/Object;)V#Return(V)#38
chord.analyses.type.RelClassT.visit(Ljoeq/Class/jq_Class;)V#Return(V)#7
chord.analyses.invk.RelMI.fill()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.invk.RelMI.fill()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/invk/RelMI;,doms)#1
chord.analyses.invk.RelMI.fill()V#Constant(I,0)#2
chord.analyses.invk.RelMI.fill()V#ArrayLoad(Ljava/lang/Object;)#3
chord.analyses.invk.RelMI.fill()V#CheckCast(Lchord/analyses/method/DomM;)#4
chord.analyses.invk.RelMI.fill()V#LocalStore(Ljava/lang/Object;,1)#5
chord.analyses.invk.RelMI.fill()V#LocalLoad(Ljava/lang/Object;,0)#6
chord.analyses.invk.RelMI.fill()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/invk/RelMI;,doms)#7
chord.analyses.invk.RelMI.fill()V#Constant(I,1)#8
chord.analyses.invk.RelMI.fill()V#ArrayLoad(Ljava/lang/Object;)#9
chord.analyses.invk.RelMI.fill()V#CheckCast(Lchord/analyses/invk/DomI;)#10
chord.analyses.invk.RelMI.fill()V#LocalStore(Ljava/lang/Object;,2)#11
chord.analyses.invk.RelMI.fill()V#LocalLoad(Ljava/lang/Object;,2)#12
chord.analyses.invk.RelMI.fill()V#Invoke(VIRTUAL,Lchord/analyses/invk/DomI;,size,()I)#13
chord.analyses.invk.RelMI.fill()V#LocalStore(I,3)#14
chord.analyses.invk.RelMI.fill()V#Constant(I,0)#15
chord.analyses.invk.RelMI.fill()V#LocalStore(I,4)#16
chord.analyses.invk.RelMI.fill()V#Goto(48)#17
chord.analyses.invk.RelMI.fill()V#LocalLoad(I,4)#48
chord.analyses.invk.RelMI.fill()V#LocalLoad(I,3)#49
chord.analyses.invk.RelMI.fill()V#ConditionalBranch(I,lt,18)#50
chord.analyses.invk.RelMI.fill()V#LocalLoad(Ljava/lang/Object;,2)#18
chord.analyses.invk.RelMI.fill()V#LocalLoad(I,4)#19
chord.analyses.invk.RelMI.fill()V#Invoke(VIRTUAL,Lchord/analyses/invk/DomI;,get,(I)Ljava/lang/Object;)#20
chord.analyses.invk.RelMI.fill()V#CheckCast(Ljoeq/Compiler/Quad/Quad;)#21
chord.analyses.invk.RelMI.fill()V#LocalStore(Ljava/lang/Object;,5)#22
chord.analyses.invk.RelMI.fill()V#LocalLoad(Ljava/lang/Object;,5)#23
chord.analyses.invk.RelMI.fill()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getMethod,()Ljoeq/Class/jq_Method;)#24
joeq.Compiler.Quad.Quad.getMethod()Ljoeq/Class/jq_Method;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Quad.getMethod()Ljoeq/Class/jq_Method;#Get(Ljoeq/Compiler/Quad/BasicBlock;,NONSTATIC,Ljoeq/Compiler/Quad/Quad;,bb)#1
joeq.Compiler.Quad.Quad.getMethod()Ljoeq/Class/jq_Method;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/BasicBlock;,getMethod,()Ljoeq/Class/jq_Method;)#2
joeq.Compiler.Quad.Quad.getMethod()Ljoeq/Class/jq_Method;#Return(Ljava/lang/Object;)#3
chord.analyses.invk.RelMI.fill()V#LocalStore(Ljava/lang/Object;,6)#25
chord.analyses.invk.RelMI.fill()V#LocalLoad(Ljava/lang/Object;,1)#26
chord.analyses.invk.RelMI.fill()V#LocalLoad(Ljava/lang/Object;,6)#27
chord.analyses.invk.RelMI.fill()V#Invoke(VIRTUAL,Lchord/analyses/method/DomM;,indexOf,(Ljava/lang/Object;)I)#28
chord.analyses.invk.RelMI.fill()V#LocalStore(I,7)#29
chord.analyses.invk.RelMI.fill()V#Get(Z,STATIC,Lchord/analyses/invk/RelMI;,$assertionsDisabled)#30
chord.analyses.invk.RelMI.fill()V#Constant(I,0)#31
chord.analyses.invk.RelMI.fill()V#ConditionalBranch(I,ne,40)#32
chord.analyses.invk.RelMI.fill()V#LocalLoad(I,7)#33
chord.analyses.invk.RelMI.fill()V#Constant(I,0)#34
chord.analyses.invk.RelMI.fill()V#ConditionalBranch(I,ge,40)#35
chord.analyses.invk.RelMI.fill()V#LocalLoad(Ljava/lang/Object;,0)#40
chord.analyses.invk.RelMI.fill()V#LocalLoad(I,7)#41
chord.analyses.invk.RelMI.fill()V#LocalLoad(I,4)#42
chord.analyses.invk.RelMI.fill()V#Invoke(VIRTUAL,Lchord/analyses/invk/RelMI;,add,(II)V)#43
chord.bddbddb.Rel.add(II)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.bddbddb.Rel.add(II)V#Get(Lnet/sf/javabdd/BDD;,NONSTATIC,Lchord/bddbddb/Rel;,bdd)#1
chord.bddbddb.Rel.add(II)V#Constant(L;,null)#2
chord.bddbddb.Rel.add(II)V#ConditionalBranch(Ljava/lang/Object;,ne,9)#3
chord.bddbddb.Rel.add(II)V#LocalLoad(Ljava/lang/Object;,0)#9
chord.bddbddb.Rel.add(II)V#Get(Lnet/sf/javabdd/BDD;,NONSTATIC,Lchord/bddbddb/Rel;,bdd)#10
chord.bddbddb.Rel.add(II)V#LocalLoad(Ljava/lang/Object;,0)#11
chord.bddbddb.Rel.add(II)V#Get([Lnet/sf/javabdd/BDDDomain;,NONSTATIC,Lchord/bddbddb/Rel;,domBdds)#12
chord.bddbddb.Rel.add(II)V#Constant(I,0)#13
chord.bddbddb.Rel.add(II)V#ArrayLoad(Ljava/lang/Object;)#14
chord.bddbddb.Rel.add(II)V#LocalLoad(I,1)#15
chord.bddbddb.Rel.add(II)V#Conversion(I,J)#16
chord.bddbddb.Rel.add(II)V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDDomain;,ithVar,(J)Lnet/sf/javabdd/BDD;)#17
chord.bddbddb.Rel.add(II)V#LocalLoad(Ljava/lang/Object;,0)#18
chord.bddbddb.Rel.add(II)V#Get([Lnet/sf/javabdd/BDDDomain;,NONSTATIC,Lchord/bddbddb/Rel;,domBdds)#19
chord.bddbddb.Rel.add(II)V#Constant(I,1)#20
chord.bddbddb.Rel.add(II)V#ArrayLoad(Ljava/lang/Object;)#21
chord.bddbddb.Rel.add(II)V#LocalLoad(I,2)#22
chord.bddbddb.Rel.add(II)V#Conversion(I,J)#23
chord.bddbddb.Rel.add(II)V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDDDomain;,ithVar,(J)Lnet/sf/javabdd/BDD;)#24
chord.bddbddb.Rel.add(II)V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDD;,andWith,(Lnet/sf/javabdd/BDD;)Lnet/sf/javabdd/BDD;)#25
chord.bddbddb.Rel.add(II)V#Invoke(VIRTUAL,Lnet/sf/javabdd/BDD;,orWith,(Lnet/sf/javabdd/BDD;)Lnet/sf/javabdd/BDD;)#26
chord.bddbddb.Rel.add(II)V#Pop(1)#27
chord.bddbddb.Rel.add(II)V#Goto(43)#28
chord.bddbddb.Rel.add(II)V#Return(V)#43
chord.analyses.invk.RelMI.fill()V#LocalLoad(I,4)#44
chord.analyses.invk.RelMI.fill()V#Constant(I,1)#45
chord.analyses.invk.RelMI.fill()V#BinaryOp(I,add)#46
chord.analyses.invk.RelMI.fill()V#LocalStore(I,4)#47
chord.analyses.invk.RelMI.fill()V#Return(V)#51
chord.analyses.inst.RelMobjValAsgnInst.fill()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.inst.RelMobjValAsgnInst.fill()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/inst/RelMobjValAsgnInst;,doms)#1
chord.analyses.inst.RelMobjValAsgnInst.fill()V#Constant(I,0)#2
chord.analyses.inst.RelMobjValAsgnInst.fill()V#ArrayLoad(Ljava/lang/Object;)#3
chord.analyses.inst.RelMobjValAsgnInst.fill()V#CheckCast(Lchord/analyses/method/DomM;)#4
chord.analyses.inst.RelMobjValAsgnInst.fill()V#LocalStore(Ljava/lang/Object;,1)#5
chord.analyses.inst.RelMobjValAsgnInst.fill()V#LocalLoad(Ljava/lang/Object;,0)#6
chord.analyses.inst.RelMobjValAsgnInst.fill()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/inst/RelMobjValAsgnInst;,doms)#7
chord.analyses.inst.RelMobjValAsgnInst.fill()V#Constant(I,1)#8
chord.analyses.inst.RelMobjValAsgnInst.fill()V#ArrayLoad(Ljava/lang/Object;)#9
chord.analyses.inst.RelMobjValAsgnInst.fill()V#CheckCast(Lchord/analyses/var/DomV;)#10
chord.analyses.inst.RelMobjValAsgnInst.fill()V#LocalStore(Ljava/lang/Object;,2)#11
chord.analyses.inst.RelMobjValAsgnInst.fill()V#LocalLoad(Ljava/lang/Object;,0)#12
chord.analyses.inst.RelMobjValAsgnInst.fill()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/inst/RelMobjValAsgnInst;,doms)#13
chord.analyses.inst.RelMobjValAsgnInst.fill()V#Constant(I,2)#14
chord.analyses.inst.RelMobjValAsgnInst.fill()V#ArrayLoad(Ljava/lang/Object;)#15
chord.analyses.inst.RelMobjValAsgnInst.fill()V#CheckCast(Lchord/analyses/alloc/DomH;)#16
chord.analyses.inst.RelMobjValAsgnInst.fill()V#LocalStore(Ljava/lang/Object;,3)#17
chord.analyses.inst.RelMobjValAsgnInst.fill()V#LocalLoad(Ljava/lang/Object;,3)#18
chord.analyses.inst.RelMobjValAsgnInst.fill()V#Invoke(VIRTUAL,Lchord/analyses/alloc/DomH;,getLastA,()I)#19
chord.analyses.inst.RelMobjValAsgnInst.fill()V#Constant(I,1)#20
chord.analyses.inst.RelMobjValAsgnInst.fill()V#BinaryOp(I,add)#21
chord.analyses.inst.RelMobjValAsgnInst.fill()V#LocalStore(I,4)#22
chord.analyses.inst.RelMobjValAsgnInst.fill()V#Constant(I,1)#23
chord.analyses.inst.RelMobjValAsgnInst.fill()V#LocalStore(I,5)#24
chord.analyses.inst.RelMobjValAsgnInst.fill()V#Goto(114)#25
chord.analyses.inst.RelMobjValAsgnInst.fill()V#LocalLoad(I,5)#114
chord.analyses.inst.RelMobjValAsgnInst.fill()V#LocalLoad(I,4)#115
chord.analyses.inst.RelMobjValAsgnInst.fill()V#ConditionalBranch(I,lt,26)#116
chord.analyses.inst.RelMobjValAsgnInst.fill()V#Return(V)#117
chord.analyses.method.RelClinitTM.visit(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.method.RelClinitTM.visit(Ljoeq/Class/jq_Class;)V#LocalLoad(Ljava/lang/Object;,1)#1
chord.analyses.method.RelClinitTM.visit(Ljoeq/Class/jq_Class;)V#Put(Ljoeq/Class/jq_Class;,NONSTATIC,Lchord/analyses/method/RelClinitTM;,ctnrClass)#2
chord.analyses.method.RelClinitTM.visit(Ljoeq/Class/jq_Class;)V#Return(V)#3
chord.analyses.method.RelClinitTM.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#0
chord.analyses.method.RelClinitTM.visit(Ljoeq/Class/jq_Method;)V#Instanceof(Ljoeq/Class/jq_ClassInitializer;)#1
chord.analyses.method.RelClinitTM.visit(Ljoeq/Class/jq_Method;)V#Constant(I,0)#2
chord.analyses.method.RelClinitTM.visit(Ljoeq/Class/jq_Method;)V#ConditionalBranch(I,eq,9)#3
chord.analyses.method.RelClinitTM.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#4
chord.analyses.method.RelClinitTM.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#5
chord.analyses.method.RelClinitTM.visit(Ljoeq/Class/jq_Method;)V#Get(Ljoeq/Class/jq_Class;,NONSTATIC,Lchord/analyses/method/RelClinitTM;,ctnrClass)#6
chord.analyses.method.RelClinitTM.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#7
chord.analyses.method.RelClinitTM.visit(Ljoeq/Class/jq_Method;)V#Invoke(VIRTUAL,Lchord/analyses/method/RelClinitTM;,add,(Ljava/lang/Object;Ljava/lang/Object;)V)#8
chord.analyses.method.RelClinitTM.visit(Ljoeq/Class/jq_Method;)V#Return(V)#9
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#146
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,mivs)#147
chord.project.VisitorHandler.visitProgram()V#Constant(L;,null)#148
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(Ljava/lang/Object;,ne,155)#149
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#150
chord.project.VisitorHandler.visitProgram()V#New(Ljava/util/ArrayList;,0)#151
chord.project.VisitorHandler.visitProgram()V#Dup(1,0)#152
chord.project.VisitorHandler.visitProgram()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#153
chord.project.VisitorHandler.visitProgram()V#Put(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,mivs)#154
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#155
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,mivs)#156
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,1)#157
chord.project.VisitorHandler.visitProgram()V#CheckCast(Lchord/program/visitors/IMoveInstVisitor;)#158
chord.project.VisitorHandler.visitProgram()V#Invoke(INTERFACE,Ljava/util/Collection;,add,(Ljava/lang/Object;)Z)#159
chord.project.VisitorHandler.visitProgram()V#Pop(1)#160
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#165
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,civs)#166
chord.project.VisitorHandler.visitProgram()V#Constant(L;,null)#167
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(Ljava/lang/Object;,ne,174)#168
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#169
chord.project.VisitorHandler.visitProgram()V#New(Ljava/util/ArrayList;,0)#170
chord.project.VisitorHandler.visitProgram()V#Dup(1,0)#171
chord.project.VisitorHandler.visitProgram()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#172
chord.project.VisitorHandler.visitProgram()V#Put(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,civs)#173
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#174
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,civs)#175
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,1)#176
chord.project.VisitorHandler.visitProgram()V#CheckCast(Lchord/program/visitors/ICastInstVisitor;)#177
chord.project.VisitorHandler.visitProgram()V#Invoke(INTERFACE,Ljava/util/Collection;,add,(Ljava/lang/Object;)Z)#178
chord.project.VisitorHandler.visitProgram()V#Pop(1)#179
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#184
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,pivs)#185
chord.project.VisitorHandler.visitProgram()V#Constant(L;,null)#186
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(Ljava/lang/Object;,ne,193)#187
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#188
chord.project.VisitorHandler.visitProgram()V#New(Ljava/util/ArrayList;,0)#189
chord.project.VisitorHandler.visitProgram()V#Dup(1,0)#190
chord.project.VisitorHandler.visitProgram()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#191
chord.project.VisitorHandler.visitProgram()V#Put(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,pivs)#192
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#193
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,pivs)#194
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,1)#195
chord.project.VisitorHandler.visitProgram()V#CheckCast(Lchord/program/visitors/IPhiInstVisitor;)#196
chord.project.VisitorHandler.visitProgram()V#Invoke(INTERFACE,Ljava/util/Collection;,add,(Ljava/lang/Object;)Z)#197
chord.project.VisitorHandler.visitProgram()V#Pop(1)#198
chord.analyses.inst.RelMobjVarAsgnInst.visit(Ljoeq/Class/jq_Class;)V#Return(V)#0
chord.analyses.inst.RelMobjVarAsgnInst.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.inst.RelMobjVarAsgnInst.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#1
chord.analyses.inst.RelMobjVarAsgnInst.visit(Ljoeq/Class/jq_Method;)V#Put(Ljoeq/Class/jq_Method;,NONSTATIC,Lchord/analyses/inst/RelMobjVarAsgnInst;,ctnrMethod)#2
chord.analyses.inst.RelMobjVarAsgnInst.visit(Ljoeq/Class/jq_Method;)V#Return(V)#3
chord.analyses.reflect.ConNewInstAnalysis.run()V#Invoke(STATIC,Lchord/project/ClassicProject;,g,()Lchord/project/ClassicProject;)#0
chord.analyses.reflect.ConNewInstAnalysis.run()V#Constant(Ljava/lang/String;,"conNewInstIH")#1
chord.analyses.reflect.ConNewInstAnalysis.run()V#Invoke(VIRTUAL,Lchord/project/ClassicProject;,getTrgt,(Ljava/lang/String;)Ljava/lang/Object;)#2
chord.analyses.reflect.ConNewInstAnalysis.run()V#CheckCast(Lchord/project/analyses/ProgramRel;)#3
chord.analyses.reflect.ConNewInstAnalysis.run()V#LocalStore(Ljava/lang/Object;,1)#4
chord.analyses.reflect.ConNewInstAnalysis.run()V#Invoke(STATIC,Lchord/project/ClassicProject;,g,()Lchord/project/ClassicProject;)#5
chord.analyses.reflect.ConNewInstAnalysis.run()V#Constant(Ljava/lang/String;,"conNewInstIM")#6
chord.analyses.reflect.ConNewInstAnalysis.run()V#Invoke(VIRTUAL,Lchord/project/ClassicProject;,getTrgt,(Ljava/lang/String;)Ljava/lang/Object;)#7
chord.analyses.reflect.ConNewInstAnalysis.run()V#CheckCast(Lchord/project/analyses/ProgramRel;)#8
chord.analyses.reflect.ConNewInstAnalysis.run()V#LocalStore(Ljava/lang/Object;,2)#9
chord.analyses.reflect.ConNewInstAnalysis.run()V#LocalLoad(Ljava/lang/Object;,1)#10
chord.analyses.reflect.ConNewInstAnalysis.run()V#Invoke(VIRTUAL,Lchord/project/analyses/ProgramRel;,zero,()V)#11
chord.analyses.reflect.ConNewInstAnalysis.run()V#LocalLoad(Ljava/lang/Object;,2)#12
chord.analyses.reflect.ConNewInstAnalysis.run()V#Invoke(VIRTUAL,Lchord/project/analyses/ProgramRel;,zero,()V)#13
chord.analyses.reflect.ConNewInstAnalysis.run()V#Invoke(STATIC,Lchord/project/ClassicProject;,g,()Lchord/project/ClassicProject;)#14
chord.analyses.reflect.ConNewInstAnalysis.run()V#Constant(Ljava/lang/String;,"I")#15
chord.analyses.reflect.ConNewInstAnalysis.run()V#Invoke(VIRTUAL,Lchord/project/ClassicProject;,getTrgt,(Ljava/lang/String;)Ljava/lang/Object;)#16
chord.analyses.reflect.ConNewInstAnalysis.run()V#CheckCast(Lchord/analyses/invk/DomI;)#17
chord.analyses.reflect.ConNewInstAnalysis.run()V#LocalStore(Ljava/lang/Object;,3)#18
chord.analyses.reflect.ConNewInstAnalysis.run()V#Invoke(STATIC,Lchord/project/ClassicProject;,g,()Lchord/project/ClassicProject;)#19
chord.analyses.reflect.ConNewInstAnalysis.run()V#Constant(Ljava/lang/String;,"H")#20
chord.analyses.reflect.ConNewInstAnalysis.run()V#Invoke(VIRTUAL,Lchord/project/ClassicProject;,getTrgt,(Ljava/lang/String;)Ljava/lang/Object;)#21
chord.analyses.reflect.ConNewInstAnalysis.run()V#CheckCast(Lchord/analyses/alloc/DomH;)#22
chord.analyses.reflect.ConNewInstAnalysis.run()V#LocalStore(Ljava/lang/Object;,4)#23
chord.analyses.reflect.ConNewInstAnalysis.run()V#Invoke(STATIC,Lchord/project/ClassicProject;,g,()Lchord/project/ClassicProject;)#24
chord.analyses.reflect.ConNewInstAnalysis.run()V#Constant(Ljava/lang/String;,"M")#25
chord.analyses.reflect.ConNewInstAnalysis.run()V#Invoke(VIRTUAL,Lchord/project/ClassicProject;,getTrgt,(Ljava/lang/String;)Ljava/lang/Object;)#26
chord.analyses.reflect.ConNewInstAnalysis.run()V#CheckCast(Lchord/analyses/method/DomM;)#27
chord.analyses.reflect.ConNewInstAnalysis.run()V#LocalStore(Ljava/lang/Object;,5)#28
chord.analyses.reflect.ConNewInstAnalysis.run()V#Invoke(STATIC,Lchord/program/Program;,g,()Lchord/program/Program;)#29
chord.analyses.reflect.ConNewInstAnalysis.run()V#Invoke(VIRTUAL,Lchord/program/Program;,getReflect,()Lchord/program/Reflect;)#30
chord.analyses.reflect.ConNewInstAnalysis.run()V#Invoke(VIRTUAL,Lchord/program/Reflect;,getResolvedConNewInstSites,()Ljava/util/List;)#31
chord.analyses.reflect.ConNewInstAnalysis.run()V#LocalStore(Ljava/lang/Object;,6)#32
chord.analyses.reflect.ConNewInstAnalysis.run()V#LocalLoad(Ljava/lang/Object;,6)#33
chord.analyses.reflect.ConNewInstAnalysis.run()V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#34
chord.analyses.reflect.ConNewInstAnalysis.run()V#LocalStore(Ljava/lang/Object;,8)#35
chord.analyses.reflect.ConNewInstAnalysis.run()V#Goto(154)#36
chord.analyses.reflect.ConNewInstAnalysis.run()V#LocalLoad(Ljava/lang/Object;,8)#154
chord.analyses.reflect.ConNewInstAnalysis.run()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#155
chord.analyses.reflect.ConNewInstAnalysis.run()V#Constant(I,0)#156
chord.analyses.reflect.ConNewInstAnalysis.run()V#ConditionalBranch(I,ne,37)#157
chord.analyses.reflect.ConNewInstAnalysis.run()V#LocalLoad(Ljava/lang/Object;,1)#158
chord.analyses.reflect.ConNewInstAnalysis.run()V#Invoke(VIRTUAL,Lchord/project/analyses/ProgramRel;,save,()V)#159
chord.analyses.reflect.ConNewInstAnalysis.run()V#LocalLoad(Ljava/lang/Object;,2)#160
chord.analyses.reflect.ConNewInstAnalysis.run()V#Invoke(VIRTUAL,Lchord/project/analyses/ProgramRel;,save,()V)#161
chord.analyses.reflect.ConNewInstAnalysis.run()V#Return(V)#162
chord.analyses.argret.RelIinvkArg0.fill()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.argret.RelIinvkArg0.fill()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/argret/RelIinvkArg0;,doms)#1
chord.analyses.argret.RelIinvkArg0.fill()V#Constant(I,0)#2
chord.analyses.argret.RelIinvkArg0.fill()V#ArrayLoad(Ljava/lang/Object;)#3
chord.analyses.argret.RelIinvkArg0.fill()V#CheckCast(Lchord/analyses/invk/DomI;)#4
chord.analyses.argret.RelIinvkArg0.fill()V#LocalStore(Ljava/lang/Object;,1)#5
chord.analyses.argret.RelIinvkArg0.fill()V#LocalLoad(Ljava/lang/Object;,0)#6
chord.analyses.argret.RelIinvkArg0.fill()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/argret/RelIinvkArg0;,doms)#7
chord.analyses.argret.RelIinvkArg0.fill()V#Constant(I,1)#8
chord.analyses.argret.RelIinvkArg0.fill()V#ArrayLoad(Ljava/lang/Object;)#9
chord.analyses.argret.RelIinvkArg0.fill()V#CheckCast(Lchord/analyses/var/DomV;)#10
chord.analyses.argret.RelIinvkArg0.fill()V#LocalStore(Ljava/lang/Object;,2)#11
chord.analyses.argret.RelIinvkArg0.fill()V#LocalLoad(Ljava/lang/Object;,1)#12
chord.analyses.argret.RelIinvkArg0.fill()V#Invoke(VIRTUAL,Lchord/analyses/invk/DomI;,size,()I)#13
chord.analyses.argret.RelIinvkArg0.fill()V#LocalStore(I,3)#14
chord.analyses.argret.RelIinvkArg0.fill()V#Constant(I,0)#15
chord.analyses.argret.RelIinvkArg0.fill()V#LocalStore(I,4)#16
chord.analyses.argret.RelIinvkArg0.fill()V#Goto(64)#17
chord.analyses.argret.RelIinvkArg0.fill()V#LocalLoad(I,4)#64
chord.analyses.argret.RelIinvkArg0.fill()V#LocalLoad(I,3)#65
chord.analyses.argret.RelIinvkArg0.fill()V#ConditionalBranch(I,lt,18)#66
chord.analyses.argret.RelIinvkArg0.fill()V#LocalLoad(Ljava/lang/Object;,1)#18
chord.analyses.argret.RelIinvkArg0.fill()V#LocalLoad(I,4)#19
chord.analyses.argret.RelIinvkArg0.fill()V#Invoke(VIRTUAL,Lchord/analyses/invk/DomI;,get,(I)Ljava/lang/Object;)#20
chord.analyses.argret.RelIinvkArg0.fill()V#CheckCast(Ljoeq/Compiler/Quad/Quad;)#21
chord.analyses.argret.RelIinvkArg0.fill()V#LocalStore(Ljava/lang/Object;,5)#22
chord.analyses.argret.RelIinvkArg0.fill()V#LocalLoad(Ljava/lang/Object;,5)#23
chord.analyses.argret.RelIinvkArg0.fill()V#Invoke(STATIC,Ljoeq/Compiler/Quad/Operator$Invoke;,getParamList,(Ljoeq/Compiler/Quad/Quad;)Ljoeq/Compiler/Quad/Operand$ParamListOperand;)#24
chord.analyses.argret.RelIinvkArg0.fill()V#LocalStore(Ljava/lang/Object;,6)#25
chord.analyses.argret.RelIinvkArg0.fill()V#LocalLoad(Ljava/lang/Object;,6)#26
chord.analyses.argret.RelIinvkArg0.fill()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Operand$ParamListOperand;,length,()I)#27
chord.analyses.argret.RelIinvkArg0.fill()V#Constant(I,0)#28
chord.analyses.argret.RelIinvkArg0.fill()V#ConditionalBranch(I,le,60)#29
chord.analyses.argret.RelIinvkArg0.fill()V#LocalLoad(I,4)#60
chord.analyses.argret.RelIinvkArg0.fill()V#Constant(I,1)#61
chord.analyses.argret.RelIinvkArg0.fill()V#BinaryOp(I,add)#62
chord.analyses.argret.RelIinvkArg0.fill()V#LocalStore(I,4)#63
chord.analyses.argret.RelIinvkArg0.fill()V#Return(V)#67
chord.analyses.argret.RelIinvkArg.fill()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.argret.RelIinvkArg.fill()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/argret/RelIinvkArg;,doms)#1
chord.analyses.argret.RelIinvkArg.fill()V#Constant(I,0)#2
chord.analyses.argret.RelIinvkArg.fill()V#ArrayLoad(Ljava/lang/Object;)#3
chord.analyses.argret.RelIinvkArg.fill()V#CheckCast(Lchord/analyses/invk/DomI;)#4
chord.analyses.argret.RelIinvkArg.fill()V#LocalStore(Ljava/lang/Object;,1)#5
chord.analyses.argret.RelIinvkArg.fill()V#LocalLoad(Ljava/lang/Object;,0)#6
chord.analyses.argret.RelIinvkArg.fill()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/argret/RelIinvkArg;,doms)#7
chord.analyses.argret.RelIinvkArg.fill()V#Constant(I,2)#8
chord.analyses.argret.RelIinvkArg.fill()V#ArrayLoad(Ljava/lang/Object;)#9
chord.analyses.argret.RelIinvkArg.fill()V#CheckCast(Lchord/analyses/var/DomV;)#10
chord.analyses.argret.RelIinvkArg.fill()V#LocalStore(Ljava/lang/Object;,2)#11
chord.analyses.argret.RelIinvkArg.fill()V#LocalLoad(Ljava/lang/Object;,1)#12
chord.analyses.argret.RelIinvkArg.fill()V#Invoke(VIRTUAL,Lchord/analyses/invk/DomI;,size,()I)#13
chord.analyses.argret.RelIinvkArg.fill()V#LocalStore(I,3)#14
chord.analyses.argret.RelIinvkArg.fill()V#Constant(I,0)#15
chord.analyses.argret.RelIinvkArg.fill()V#LocalStore(I,4)#16
chord.analyses.argret.RelIinvkArg.fill()V#Goto(74)#17
chord.analyses.argret.RelIinvkArg.fill()V#LocalLoad(I,4)#74
chord.analyses.argret.RelIinvkArg.fill()V#LocalLoad(I,3)#75
chord.analyses.argret.RelIinvkArg.fill()V#ConditionalBranch(I,lt,18)#76
chord.analyses.argret.RelIinvkArg.fill()V#LocalLoad(Ljava/lang/Object;,1)#18
chord.analyses.argret.RelIinvkArg.fill()V#LocalLoad(I,4)#19
chord.analyses.argret.RelIinvkArg.fill()V#Invoke(VIRTUAL,Lchord/analyses/invk/DomI;,get,(I)Ljava/lang/Object;)#20
chord.analyses.argret.RelIinvkArg.fill()V#CheckCast(Ljoeq/Compiler/Quad/Quad;)#21
chord.analyses.argret.RelIinvkArg.fill()V#LocalStore(Ljava/lang/Object;,5)#22
chord.analyses.argret.RelIinvkArg.fill()V#LocalLoad(Ljava/lang/Object;,5)#23
chord.analyses.argret.RelIinvkArg.fill()V#Invoke(STATIC,Ljoeq/Compiler/Quad/Operator$Invoke;,getParamList,(Ljoeq/Compiler/Quad/Quad;)Ljoeq/Compiler/Quad/Operand$ParamListOperand;)#24
chord.analyses.argret.RelIinvkArg.fill()V#LocalStore(Ljava/lang/Object;,6)#25
chord.analyses.argret.RelIinvkArg.fill()V#LocalLoad(Ljava/lang/Object;,6)#26
chord.analyses.argret.RelIinvkArg.fill()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Operand$ParamListOperand;,length,()I)#27
chord.analyses.argret.RelIinvkArg.fill()V#LocalStore(I,7)#28
chord.analyses.argret.RelIinvkArg.fill()V#Constant(I,0)#29
chord.analyses.argret.RelIinvkArg.fill()V#LocalStore(I,8)#30
chord.analyses.argret.RelIinvkArg.fill()V#Goto(67)#31
chord.analyses.argret.RelIinvkArg.fill()V#LocalLoad(I,8)#67
chord.analyses.argret.RelIinvkArg.fill()V#LocalLoad(I,7)#68
chord.analyses.argret.RelIinvkArg.fill()V#ConditionalBranch(I,lt,32)#69
chord.analyses.argret.RelIinvkArg.fill()V#LocalLoad(I,4)#70
chord.analyses.argret.RelIinvkArg.fill()V#Constant(I,1)#71
chord.analyses.argret.RelIinvkArg.fill()V#BinaryOp(I,add)#72
chord.analyses.argret.RelIinvkArg.fill()V#LocalStore(I,4)#73
chord.analyses.argret.RelIinvkArg.fill()V#Return(V)#77
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#203
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,rivs)#204
chord.project.VisitorHandler.visitProgram()V#Constant(L;,null)#205
chord.project.VisitorHandler.visitProgram()V#ConditionalBranch(Ljava/lang/Object;,ne,212)#206
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#207
chord.project.VisitorHandler.visitProgram()V#New(Ljava/util/ArrayList;,0)#208
chord.project.VisitorHandler.visitProgram()V#Dup(1,0)#209
chord.project.VisitorHandler.visitProgram()V#Invoke(SPECIAL,Ljava/util/ArrayList;,<init>,()V)#210
chord.project.VisitorHandler.visitProgram()V#Put(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,rivs)#211
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,0)#212
chord.project.VisitorHandler.visitProgram()V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,rivs)#213
chord.project.VisitorHandler.visitProgram()V#LocalLoad(Ljava/lang/Object;,1)#214
chord.project.VisitorHandler.visitProgram()V#CheckCast(Lchord/program/visitors/IReturnInstVisitor;)#215
chord.project.VisitorHandler.visitProgram()V#Invoke(INTERFACE,Ljava/util/Collection;,add,(Ljava/lang/Object;)Z)#216
chord.project.VisitorHandler.visitProgram()V#Pop(1)#217
chord.analyses.argret.RelMmethRet.visit(Ljoeq/Class/jq_Class;)V#Return(V)#0
chord.analyses.argret.RelMmethRet.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.argret.RelMmethRet.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#1
chord.analyses.argret.RelMmethRet.visit(Ljoeq/Class/jq_Method;)V#Put(Ljoeq/Class/jq_Method;,NONSTATIC,Lchord/analyses/argret/RelMmethRet;,ctnrMethod)#2
chord.analyses.argret.RelMmethRet.visit(Ljoeq/Class/jq_Method;)V#Return(V)#3
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,0)#227
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Get(Ljava/util/Collection;,NONSTATIC,Lchord/project/VisitorHandler;,rivs)#228
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(INTERFACE,Ljava/util/Collection;,iterator,()Ljava/util/Iterator;)#229
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalStore(Ljava/lang/Object;,8)#230
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Goto(239)#231
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,8)#239
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#240
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Constant(I,0)#241
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#ConditionalBranch(I,ne,232)#242
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,8)#232
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(INTERFACE,Ljava/util/Iterator;,next,()Ljava/lang/Object;)#233
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#CheckCast(Lchord/program/visitors/IReturnInstVisitor;)#234
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalStore(Ljava/lang/Object;,7)#235
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,7)#236
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#LocalLoad(Ljava/lang/Object;,4)#237
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Invoke(INTERFACE,Lchord/program/visitors/IReturnInstVisitor;,visitReturnInst,(Ljoeq/Compiler/Quad/Quad;)V)#238
chord.analyses.argret.RelMmethRet.visitReturnInst(Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,1)#0
chord.analyses.argret.RelMmethRet.visitReturnInst(Ljoeq/Compiler/Quad/Quad;)V#Invoke(STATIC,Ljoeq/Compiler/Quad/Operator$Return;,getSrc,(Ljoeq/Compiler/Quad/Quad;)Ljoeq/Compiler/Quad/Operand;)#1
joeq.Compiler.Quad.Operator$Return.getSrc(Ljoeq/Compiler/Quad/Quad;)Ljoeq/Compiler/Quad/Operand;#LocalLoad(Ljava/lang/Object;,0)#0
joeq.Compiler.Quad.Operator$Return.getSrc(Ljoeq/Compiler/Quad/Quad;)Ljoeq/Compiler/Quad/Operand;#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getOp1,()Ljoeq/Compiler/Quad/Operand;)#1
joeq.Compiler.Quad.Operator$Return.getSrc(Ljoeq/Compiler/Quad/Quad;)Ljoeq/Compiler/Quad/Operand;#Return(Ljava/lang/Object;)#2
chord.analyses.argret.RelMmethRet.visitReturnInst(Ljoeq/Compiler/Quad/Quad;)V#LocalStore(Ljava/lang/Object;,2)#2
chord.analyses.argret.RelMmethRet.visitReturnInst(Ljoeq/Compiler/Quad/Quad;)V#LocalLoad(Ljava/lang/Object;,2)#3
chord.analyses.argret.RelMmethRet.visitReturnInst(Ljoeq/Compiler/Quad/Quad;)V#Instanceof(Ljoeq/Compiler/Quad/Operand$RegisterOperand;)#4
chord.analyses.argret.RelMmethRet.visitReturnInst(Ljoeq/Compiler/Quad/Quad;)V#Constant(I,0)#5
chord.analyses.argret.RelMmethRet.visitReturnInst(Ljoeq/Compiler/Quad/Quad;)V#ConditionalBranch(I,eq,24)#6
chord.analyses.argret.RelMmethRet.visitReturnInst(Ljoeq/Compiler/Quad/Quad;)V#Return(V)#24
chord.project.VisitorHandler.visitInsts(Ljoeq/Compiler/Quad/ControlFlowGraph;)V#Goto(293)#243
chord.analyses.reflect.RelClsForNameIT.fill()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.reflect.RelClsForNameIT.fill()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/reflect/RelClsForNameIT;,doms)#1
chord.analyses.reflect.RelClsForNameIT.fill()V#Constant(I,0)#2
chord.analyses.reflect.RelClsForNameIT.fill()V#ArrayLoad(Ljava/lang/Object;)#3
chord.analyses.reflect.RelClsForNameIT.fill()V#CheckCast(Lchord/analyses/invk/DomI;)#4
chord.analyses.reflect.RelClsForNameIT.fill()V#LocalStore(Ljava/lang/Object;,1)#5
chord.analyses.reflect.RelClsForNameIT.fill()V#LocalLoad(Ljava/lang/Object;,0)#6
chord.analyses.reflect.RelClsForNameIT.fill()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/reflect/RelClsForNameIT;,doms)#7
chord.analyses.reflect.RelClsForNameIT.fill()V#Constant(I,1)#8
chord.analyses.reflect.RelClsForNameIT.fill()V#ArrayLoad(Ljava/lang/Object;)#9
chord.analyses.reflect.RelClsForNameIT.fill()V#CheckCast(Lchord/analyses/type/DomT;)#10
chord.analyses.reflect.RelClsForNameIT.fill()V#LocalStore(Ljava/lang/Object;,2)#11
chord.analyses.reflect.RelClsForNameIT.fill()V#Invoke(STATIC,Lchord/program/Program;,g,()Lchord/program/Program;)#12
chord.analyses.reflect.RelClsForNameIT.fill()V#Invoke(VIRTUAL,Lchord/program/Program;,getReflect,()Lchord/program/Reflect;)#13
chord.analyses.reflect.RelClsForNameIT.fill()V#Invoke(VIRTUAL,Lchord/program/Reflect;,getResolvedClsForNameSites,()Ljava/util/List;)#14
chord.analyses.reflect.RelClsForNameIT.fill()V#LocalStore(Ljava/lang/Object;,3)#15
chord.analyses.reflect.RelClsForNameIT.fill()V#LocalLoad(Ljava/lang/Object;,3)#16
chord.analyses.reflect.RelClsForNameIT.fill()V#Invoke(INTERFACE,Ljava/util/List;,iterator,()Ljava/util/Iterator;)#17
chord.analyses.reflect.RelClsForNameIT.fill()V#LocalStore(Ljava/lang/Object;,5)#18
chord.analyses.reflect.RelClsForNameIT.fill()V#Goto(74)#19
chord.analyses.reflect.RelClsForNameIT.fill()V#LocalLoad(Ljava/lang/Object;,5)#74
chord.analyses.reflect.RelClsForNameIT.fill()V#Invoke(INTERFACE,Ljava/util/Iterator;,hasNext,()Z)#75
chord.analyses.reflect.RelClsForNameIT.fill()V#Constant(I,0)#76
chord.analyses.reflect.RelClsForNameIT.fill()V#ConditionalBranch(I,ne,20)#77
chord.analyses.reflect.RelClsForNameIT.fill()V#Return(V)#78
chord.analyses.inst.RelMputInstFldInst.init()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.inst.RelMputInstFldInst.init()V#LocalLoad(Ljava/lang/Object;,0)#1
chord.analyses.inst.RelMputInstFldInst.init()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/inst/RelMputInstFldInst;,doms)#2
chord.analyses.inst.RelMputInstFldInst.init()V#Constant(I,0)#3
chord.analyses.inst.RelMputInstFldInst.init()V#ArrayLoad(Ljava/lang/Object;)#4
chord.analyses.inst.RelMputInstFldInst.init()V#CheckCast(Lchord/analyses/method/DomM;)#5
chord.analyses.inst.RelMputInstFldInst.init()V#Put(Lchord/analyses/method/DomM;,NONSTATIC,Lchord/analyses/inst/RelMputInstFldInst;,domM)#6
chord.analyses.inst.RelMputInstFldInst.init()V#LocalLoad(Ljava/lang/Object;,0)#7
chord.analyses.inst.RelMputInstFldInst.init()V#LocalLoad(Ljava/lang/Object;,0)#8
chord.analyses.inst.RelMputInstFldInst.init()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/inst/RelMputInstFldInst;,doms)#9
chord.analyses.inst.RelMputInstFldInst.init()V#Constant(I,1)#10
chord.analyses.inst.RelMputInstFldInst.init()V#ArrayLoad(Ljava/lang/Object;)#11
chord.analyses.inst.RelMputInstFldInst.init()V#CheckCast(Lchord/analyses/var/DomV;)#12
chord.analyses.inst.RelMputInstFldInst.init()V#Put(Lchord/analyses/var/DomV;,NONSTATIC,Lchord/analyses/inst/RelMputInstFldInst;,domV)#13
chord.analyses.inst.RelMputInstFldInst.init()V#LocalLoad(Ljava/lang/Object;,0)#14
chord.analyses.inst.RelMputInstFldInst.init()V#LocalLoad(Ljava/lang/Object;,0)#15
chord.analyses.inst.RelMputInstFldInst.init()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/inst/RelMputInstFldInst;,doms)#16
chord.analyses.inst.RelMputInstFldInst.init()V#Constant(I,2)#17
chord.analyses.inst.RelMputInstFldInst.init()V#ArrayLoad(Ljava/lang/Object;)#18
chord.analyses.inst.RelMputInstFldInst.init()V#CheckCast(Lchord/analyses/field/DomF;)#19
chord.analyses.inst.RelMputInstFldInst.init()V#Put(Lchord/analyses/field/DomF;,NONSTATIC,Lchord/analyses/inst/RelMputInstFldInst;,domF)#20
chord.analyses.inst.RelMputInstFldInst.init()V#Return(V)#21
chord.analyses.inst.RelMputInstFldInst.visit(Ljoeq/Class/jq_Class;)V#Return(V)#0
chord.analyses.inst.RelMputInstFldInst.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.inst.RelMputInstFldInst.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#1
chord.analyses.inst.RelMputInstFldInst.visit(Ljoeq/Class/jq_Method;)V#Put(Ljoeq/Class/jq_Method;,NONSTATIC,Lchord/analyses/inst/RelMputInstFldInst;,ctnrMethod)#2
chord.analyses.inst.RelMputInstFldInst.visit(Ljoeq/Class/jq_Method;)V#Return(V)#3
chord.analyses.inst.RelMputStatFldInst.init()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.inst.RelMputStatFldInst.init()V#LocalLoad(Ljava/lang/Object;,0)#1
chord.analyses.inst.RelMputStatFldInst.init()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/inst/RelMputStatFldInst;,doms)#2
chord.analyses.inst.RelMputStatFldInst.init()V#Constant(I,0)#3
chord.analyses.inst.RelMputStatFldInst.init()V#ArrayLoad(Ljava/lang/Object;)#4
chord.analyses.inst.RelMputStatFldInst.init()V#CheckCast(Lchord/analyses/method/DomM;)#5
chord.analyses.inst.RelMputStatFldInst.init()V#Put(Lchord/analyses/method/DomM;,NONSTATIC,Lchord/analyses/inst/RelMputStatFldInst;,domM)#6
chord.analyses.inst.RelMputStatFldInst.init()V#LocalLoad(Ljava/lang/Object;,0)#7
chord.analyses.inst.RelMputStatFldInst.init()V#LocalLoad(Ljava/lang/Object;,0)#8
chord.analyses.inst.RelMputStatFldInst.init()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/inst/RelMputStatFldInst;,doms)#9
chord.analyses.inst.RelMputStatFldInst.init()V#Constant(I,1)#10
chord.analyses.inst.RelMputStatFldInst.init()V#ArrayLoad(Ljava/lang/Object;)#11
chord.analyses.inst.RelMputStatFldInst.init()V#CheckCast(Lchord/analyses/field/DomF;)#12
chord.analyses.inst.RelMputStatFldInst.init()V#Put(Lchord/analyses/field/DomF;,NONSTATIC,Lchord/analyses/inst/RelMputStatFldInst;,domF)#13
chord.analyses.inst.RelMputStatFldInst.init()V#LocalLoad(Ljava/lang/Object;,0)#14
chord.analyses.inst.RelMputStatFldInst.init()V#LocalLoad(Ljava/lang/Object;,0)#15
chord.analyses.inst.RelMputStatFldInst.init()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/inst/RelMputStatFldInst;,doms)#16
chord.analyses.inst.RelMputStatFldInst.init()V#Constant(I,2)#17
chord.analyses.inst.RelMputStatFldInst.init()V#ArrayLoad(Ljava/lang/Object;)#18
chord.analyses.inst.RelMputStatFldInst.init()V#CheckCast(Lchord/analyses/var/DomV;)#19
chord.analyses.inst.RelMputStatFldInst.init()V#Put(Lchord/analyses/var/DomV;,NONSTATIC,Lchord/analyses/inst/RelMputStatFldInst;,domV)#20
chord.analyses.inst.RelMputStatFldInst.init()V#Return(V)#21
chord.analyses.inst.RelMputStatFldInst.visit(Ljoeq/Class/jq_Class;)V#Return(V)#0
chord.analyses.inst.RelMputStatFldInst.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.inst.RelMputStatFldInst.visit(Ljoeq/Class/jq_Method;)V#LocalLoad(Ljava/lang/Object;,1)#1
chord.analyses.inst.RelMputStatFldInst.visit(Ljoeq/Class/jq_Method;)V#Put(Ljoeq/Class/jq_Method;,NONSTATIC,Lchord/analyses/inst/RelMputStatFldInst;,ctnrMethod)#2
chord.analyses.inst.RelMputStatFldInst.visit(Ljoeq/Class/jq_Method;)V#Return(V)#3
chord.analyses.invk.RelStatIM.fill()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.analyses.invk.RelStatIM.fill()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/invk/RelStatIM;,doms)#1
chord.analyses.invk.RelStatIM.fill()V#Constant(I,0)#2
chord.analyses.invk.RelStatIM.fill()V#ArrayLoad(Ljava/lang/Object;)#3
chord.analyses.invk.RelStatIM.fill()V#CheckCast(Lchord/analyses/invk/DomI;)#4
chord.analyses.invk.RelStatIM.fill()V#LocalStore(Ljava/lang/Object;,1)#5
chord.analyses.invk.RelStatIM.fill()V#LocalLoad(Ljava/lang/Object;,0)#6
chord.analyses.invk.RelStatIM.fill()V#Get([Lchord/bddbddb/Dom;,NONSTATIC,Lchord/analyses/invk/RelStatIM;,doms)#7
chord.analyses.invk.RelStatIM.fill()V#Constant(I,1)#8
chord.analyses.invk.RelStatIM.fill()V#ArrayLoad(Ljava/lang/Object;)#9
chord.analyses.invk.RelStatIM.fill()V#CheckCast(Lchord/analyses/method/DomM;)#10
chord.analyses.invk.RelStatIM.fill()V#LocalStore(Ljava/lang/Object;,2)#11
chord.analyses.invk.RelStatIM.fill()V#LocalLoad(Ljava/lang/Object;,1)#12
chord.analyses.invk.RelStatIM.fill()V#Invoke(VIRTUAL,Lchord/analyses/invk/DomI;,size,()I)#13
chord.analyses.invk.RelStatIM.fill()V#LocalStore(I,3)#14
chord.analyses.invk.RelStatIM.fill()V#Constant(I,0)#15
chord.analyses.invk.RelStatIM.fill()V#LocalStore(I,4)#16
chord.analyses.invk.RelStatIM.fill()V#Goto(75)#17
chord.analyses.invk.RelStatIM.fill()V#LocalLoad(I,4)#75
chord.analyses.invk.RelStatIM.fill()V#LocalLoad(I,3)#76
chord.analyses.invk.RelStatIM.fill()V#ConditionalBranch(I,lt,18)#77
chord.analyses.invk.RelStatIM.fill()V#LocalLoad(Ljava/lang/Object;,1)#18
chord.analyses.invk.RelStatIM.fill()V#LocalLoad(I,4)#19
chord.analyses.invk.RelStatIM.fill()V#Invoke(VIRTUAL,Lchord/analyses/invk/DomI;,get,(I)Ljava/lang/Object;)#20
chord.analyses.invk.RelStatIM.fill()V#CheckCast(Ljoeq/Compiler/Quad/Quad;)#21
chord.analyses.invk.RelStatIM.fill()V#LocalStore(Ljava/lang/Object;,5)#22
chord.analyses.invk.RelStatIM.fill()V#LocalLoad(Ljava/lang/Object;,5)#23
chord.analyses.invk.RelStatIM.fill()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getOperator,()Ljoeq/Compiler/Quad/Operator;)#24
chord.analyses.invk.RelStatIM.fill()V#LocalStore(Ljava/lang/Object;,6)#25
chord.analyses.invk.RelStatIM.fill()V#LocalLoad(Ljava/lang/Object;,6)#26
chord.analyses.invk.RelStatIM.fill()V#Instanceof(Ljoeq/Compiler/Quad/Operator$Invoke$InvokeStatic;)#27
chord.analyses.invk.RelStatIM.fill()V#Constant(I,0)#28
chord.analyses.invk.RelStatIM.fill()V#ConditionalBranch(I,eq,71)#29
chord.analyses.invk.RelStatIM.fill()V#LocalLoad(Ljava/lang/Object;,5)#30
chord.analyses.invk.RelStatIM.fill()V#Invoke(STATIC,Ljoeq/Compiler/Quad/Operator$Invoke$InvokeStatic;,getMethod,(Ljoeq/Compiler/Quad/Quad;)Ljoeq/Compiler/Quad/Operand$MethodOperand;)#31
chord.analyses.invk.RelStatIM.fill()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Operand$MethodOperand;,getMethod,()Ljoeq/Class/jq_Method;)#32
chord.analyses.invk.RelStatIM.fill()V#LocalStore(Ljava/lang/Object;,7)#33
chord.analyses.invk.RelStatIM.fill()V#LocalLoad(Ljava/lang/Object;,7)#34
chord.analyses.invk.RelStatIM.fill()V#Invoke(VIRTUAL,Ljoeq/Class/jq_Method;,isStatic,()Z)#35
chord.analyses.invk.RelStatIM.fill()V#Constant(I,0)#36
chord.analyses.invk.RelStatIM.fill()V#ConditionalBranch(I,eq,71)#37
chord.analyses.invk.RelStatIM.fill()V#LocalLoad(Ljava/lang/Object;,5)#38
chord.analyses.invk.RelStatIM.fill()V#Invoke(VIRTUAL,Ljoeq/Compiler/Quad/Quad;,getMethod,()Ljoeq/Class/jq_Method;)#39
chord.analyses.invk.RelStatIM.fill()V#LocalLoad(Ljava/lang/Object;,7)#40
chord.analyses.invk.RelStatIM.fill()V#Invoke(STATIC,Lchord/analyses/invk/StubRewrite;,maybeReplaceCallDest,(Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Method;)Ljoeq/Class/jq_Method;)#41
chord.analyses.invk.StubRewrite.maybeReplaceCallDest(Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Method;)Ljoeq/Class/jq_Method;#Get(Ljava/util/HashMap;,STATIC,Lchord/analyses/invk/StubRewrite;,methLookupTable)#0
chord.analyses.invk.StubRewrite.maybeReplaceCallDest(Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Method;)Ljoeq/Class/jq_Method;#LocalLoad(Ljava/lang/Object;,1)#1
chord.analyses.invk.StubRewrite.maybeReplaceCallDest(Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Method;)Ljoeq/Class/jq_Method;#Invoke(VIRTUAL,Ljava/util/HashMap;,get,(Ljava/lang/Object;)Ljava/lang/Object;)#2
chord.analyses.invk.StubRewrite.maybeReplaceCallDest(Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Method;)Ljoeq/Class/jq_Method;#CheckCast(Ljoeq/Class/jq_Method;)#3
chord.analyses.invk.StubRewrite.maybeReplaceCallDest(Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Method;)Ljoeq/Class/jq_Method;#LocalStore(Ljava/lang/Object;,2)#4
chord.analyses.invk.StubRewrite.maybeReplaceCallDest(Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Method;)Ljoeq/Class/jq_Method;#LocalLoad(Ljava/lang/Object;,2)#5
chord.analyses.invk.StubRewrite.maybeReplaceCallDest(Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Method;)Ljoeq/Class/jq_Method;#Constant(L;,null)#6
chord.analyses.invk.StubRewrite.maybeReplaceCallDest(Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Method;)Ljoeq/Class/jq_Method;#ConditionalBranch(Ljava/lang/Object;,eq,13)#7
chord.analyses.invk.StubRewrite.maybeReplaceCallDest(Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Method;)Ljoeq/Class/jq_Method;#LocalLoad(Ljava/lang/Object;,1)#13
chord.analyses.invk.StubRewrite.maybeReplaceCallDest(Ljoeq/Class/jq_Method;Ljoeq/Class/jq_Method;)Ljoeq/Class/jq_Method;#Return(Ljava/lang/Object;)#14
chord.analyses.invk.RelStatIM.fill()V#LocalStore(Ljava/lang/Object;,7)#42
chord.analyses.invk.RelStatIM.fill()V#LocalLoad(Ljava/lang/Object;,2)#43
chord.analyses.invk.RelStatIM.fill()V#LocalLoad(Ljava/lang/Object;,7)#44
chord.analyses.invk.RelStatIM.fill()V#Invoke(VIRTUAL,Lchord/analyses/method/DomM;,indexOf,(Ljava/lang/Object;)I)#45
chord.analyses.invk.RelStatIM.fill()V#LocalStore(I,8)#46
chord.analyses.invk.RelStatIM.fill()V#LocalLoad(I,8)#47
chord.analyses.invk.RelStatIM.fill()V#Constant(I,0)#48
chord.analyses.invk.RelStatIM.fill()V#ConditionalBranch(I,lt,55)#49
chord.analyses.invk.RelStatIM.fill()V#LocalLoad(Ljava/lang/Object;,0)#50
chord.analyses.invk.RelStatIM.fill()V#LocalLoad(I,4)#51
chord.analyses.invk.RelStatIM.fill()V#LocalLoad(I,8)#52
chord.analyses.invk.RelStatIM.fill()V#Invoke(VIRTUAL,Lchord/analyses/invk/RelStatIM;,add,(II)V)#53
chord.analyses.invk.RelStatIM.fill()V#Goto(71)#54
chord.analyses.invk.RelStatIM.fill()V#LocalLoad(I,4)#71
chord.analyses.invk.RelStatIM.fill()V#Constant(I,1)#72
chord.analyses.invk.RelStatIM.fill()V#BinaryOp(I,add)#73
chord.analyses.invk.RelStatIM.fill()V#LocalStore(I,4)#74
chord.analyses.invk.RelStatIM.fill()V#Return(V)#78
chord.project.analyses.DlogAnalysis.run()V#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.analyses.DlogAnalysis.run()V#Get(Ljava/lang/String;,NONSTATIC,Lchord/project/analyses/DlogAnalysis;,fileName)#1
chord.project.analyses.DlogAnalysis.run()V#Invoke(VIRTUAL,Ljava/lang/String;,toString,()Ljava/lang/String;)#2
chord.project.analyses.DlogAnalysis.run()V#Invoke(STATIC,Lchord/bddbddb/Solver;,run,(Ljava/lang/String;)V)#3
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Constant(I,10)#0
chord.bddbddb.Solver.run(Ljava/lang/String;)V#New([Ljava/lang/String;,1)#1
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Dup(1,0)#2
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Constant(I,0)#3
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"java")#4
chord.bddbddb.Solver.run(Ljava/lang/String;)V#ArrayStore(Ljava/lang/Object;)#5
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Dup(1,0)#6
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Constant(I,1)#7
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"-ea")#8
chord.bddbddb.Solver.run(Ljava/lang/String;)V#ArrayStore(Ljava/lang/Object;)#9
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Dup(1,0)#10
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Constant(I,2)#11
chord.bddbddb.Solver.run(Ljava/lang/String;)V#New(Ljava/lang/StringBuilder;,0)#12
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Dup(1,0)#13
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"-Xmx")#14
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#15
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,bddbddbMaxHeap)#16
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#17
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#18
chord.bddbddb.Solver.run(Ljava/lang/String;)V#ArrayStore(Ljava/lang/Object;)#19
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Dup(1,0)#20
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Constant(I,3)#21
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"-cp")#22
chord.bddbddb.Solver.run(Ljava/lang/String;)V#ArrayStore(Ljava/lang/Object;)#23
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Dup(1,0)#24
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Constant(I,4)#25
chord.bddbddb.Solver.run(Ljava/lang/String;)V#New(Ljava/lang/StringBuilder;,0)#26
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Dup(1,0)#27
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,mainDirName)#28
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#29
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#30
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Get(Ljava/lang/String;,STATIC,Ljava/io/File;,separator)#31
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#32
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"chord.jar")#33
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#34
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#35
chord.bddbddb.Solver.run(Ljava/lang/String;)V#ArrayStore(Ljava/lang/Object;)#36
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Dup(1,0)#37
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Constant(I,5)#38
chord.bddbddb.Solver.run(Ljava/lang/String;)V#New(Ljava/lang/StringBuilder;,0)#39
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Dup(1,0)#40
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"-Dverbose=")#41
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#42
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Get(I,STATIC,Lchord/project/Config;,verbose)#43
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(I)Ljava/lang/StringBuilder;)#44
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#45
chord.bddbddb.Solver.run(Ljava/lang/String;)V#ArrayStore(Ljava/lang/Object;)#46
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Dup(1,0)#47
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Constant(I,6)#48
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Get(Z,STATIC,Lchord/project/Config;,useBuddy)#49
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Constant(I,0)#50
chord.bddbddb.Solver.run(Ljava/lang/String;)V#ConditionalBranch(I,eq,60)#51
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"-Dbdd=j")#60
chord.bddbddb.Solver.run(Ljava/lang/String;)V#ArrayStore(Ljava/lang/Object;)#61
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Dup(1,0)#62
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Constant(I,7)#63
chord.bddbddb.Solver.run(Ljava/lang/String;)V#New(Ljava/lang/StringBuilder;,0)#64
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Dup(1,0)#65
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"-Dbasedir=")#66
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#67
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,bddbddbWorkDirName)#68
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#69
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#70
chord.bddbddb.Solver.run(Ljava/lang/String;)V#ArrayStore(Ljava/lang/Object;)#71
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Dup(1,0)#72
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Constant(I,8)#73
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Constant(Ljava/lang/String;,"net.sf.bddbddb.Solver")#74
chord.bddbddb.Solver.run(Ljava/lang/String;)V#ArrayStore(Ljava/lang/Object;)#75
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Dup(1,0)#76
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Constant(I,9)#77
chord.bddbddb.Solver.run(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#78
chord.bddbddb.Solver.run(Ljava/lang/String;)V#ArrayStore(Ljava/lang/Object;)#79
chord.bddbddb.Solver.run(Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,1)#80
chord.bddbddb.Solver.run(Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#81
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Invoke(STATIC,Lchord/project/OutDirUtils;,executeWithFailOnError,([Ljava/lang/String;)V)#82
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#Constant(Ljava/lang/String;,"")#0
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,1)#1
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#2
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#Dup(1,0)#3
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,5)#4
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#ArrayLength()#5
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#LocalStore(I,4)#6
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#Constant(I,0)#7
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#LocalStore(I,3)#8
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#Goto(29)#9
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#LocalLoad(I,3)#29
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#LocalLoad(I,4)#30
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#ConditionalBranch(I,lt,10)#31
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,5)#10
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#LocalLoad(I,3)#11
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#ArrayLoad(Ljava/lang/Object;)#12
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,2)#13
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#New(Ljava/lang/StringBuilder;,0)#14
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#Dup(1,0)#15
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#16
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#Invoke(STATIC,Ljava/lang/String;,valueOf,(Ljava/lang/Object;)Ljava/lang/String;)#17
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#18
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,2)#19
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#20
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#Constant(Ljava/lang/String;," ")#21
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#22
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#23
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#LocalStore(Ljava/lang/Object;,1)#24
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#LocalLoad(I,3)#25
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#Constant(I,1)#26
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#BinaryOp(I,add)#27
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#LocalStore(I,3)#28
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#Get(I,STATIC,Lchord/project/Config;,verbose)#32
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#Constant(I,1)#33
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#ConditionalBranch(I,lt,43)#34
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#Constant(Ljava/lang/String;,"Starting command: '%s'")#35
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#Constant(I,1)#36
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#New([Ljava/lang/Object;,1)#37
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#Dup(1,0)#38
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#Constant(I,0)#39
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#40
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#ArrayStore(Ljava/lang/Object;)#41
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#Invoke(STATIC,Lchord/project/Messages;,log,(Ljava/lang/String;[Ljava/lang/Object;)V)#42
chord.project.Messages.log(Ljava/lang/String;[Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.project.Messages.log(Ljava/lang/String;[Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,1)#1
chord.project.Messages.log(Ljava/lang/String;[Ljava/lang/Object;)V#Invoke(STATIC,Ljava/lang/String;,format,(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;)#2
chord.project.Messages.log(Ljava/lang/String;[Ljava/lang/Object;)V#LocalStore(Ljava/lang/Object;,2)#3
chord.project.Messages.log(Ljava/lang/String;[Ljava/lang/Object;)V#Get(Ljava/io/PrintStream;,STATIC,Ljava/lang/System;,out)#4
chord.project.Messages.log(Ljava/lang/String;[Ljava/lang/Object;)V#LocalLoad(Ljava/lang/Object;,2)#5
chord.project.Messages.log(Ljava/lang/String;[Ljava/lang/Object;)V#Invoke(VIRTUAL,Ljava/io/PrintStream;,println,(Ljava/lang/String;)V)#6
chord.project.Messages.log(Ljava/lang/String;[Ljava/lang/Object;)V#Return(V)#7
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,0)#43
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#Invoke(STATIC,Lchord/util/ProcessExecutor;,execute,([Ljava/lang/String;)I)#44
chord.util.ProcessExecutor.execute([Ljava/lang/String;)I#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.ProcessExecutor.execute([Ljava/lang/String;)I#Constant(L;,null)#1
chord.util.ProcessExecutor.execute([Ljava/lang/String;)I#Constant(L;,null)#2
chord.util.ProcessExecutor.execute([Ljava/lang/String;)I#Constant(I,-1)#3
chord.util.ProcessExecutor.execute([Ljava/lang/String;)I#Invoke(STATIC,Lchord/util/ProcessExecutor;,execute,([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;I)I)#4
chord.util.ProcessExecutor.execute([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;I)I#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.ProcessExecutor.execute([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;I)I#LocalLoad(Ljava/lang/Object;,1)#1
chord.util.ProcessExecutor.execute([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;I)I#LocalLoad(Ljava/lang/Object;,2)#2
chord.util.ProcessExecutor.execute([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;I)I#Invoke(STATIC,Lchord/util/ProcessExecutor;,executeAsynch,([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;)#3
chord.util.ProcessExecutor.executeAsynch([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;#Invoke(STATIC,Ljava/lang/Runtime;,getRuntime,()Ljava/lang/Runtime;)#0
chord.util.ProcessExecutor.executeAsynch([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;#LocalLoad(Ljava/lang/Object;,0)#1
chord.util.ProcessExecutor.executeAsynch([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;#LocalLoad(Ljava/lang/Object;,1)#2
chord.util.ProcessExecutor.executeAsynch([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;#LocalLoad(Ljava/lang/Object;,2)#3
chord.util.ProcessExecutor.executeAsynch([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;#Invoke(VIRTUAL,Ljava/lang/Runtime;,exec,([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;)#4
chord.util.ProcessExecutor.executeAsynch([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;#LocalStore(Ljava/lang/Object;,3)#5
chord.util.ProcessExecutor.executeAsynch([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;#New(Lchord/util/ProcessExecutor$StreamGobbler;,0)#6
chord.util.ProcessExecutor.executeAsynch([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;#Dup(1,0)#7
chord.util.ProcessExecutor.executeAsynch([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;#LocalLoad(Ljava/lang/Object;,3)#8
chord.util.ProcessExecutor.executeAsynch([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;#Invoke(VIRTUAL,Ljava/lang/Process;,getErrorStream,()Ljava/io/InputStream;)#9
chord.util.ProcessExecutor.executeAsynch([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;#Get(Ljava/io/PrintStream;,STATIC,Ljava/lang/System;,err)#10
chord.util.ProcessExecutor.executeAsynch([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;#Constant(L;,null)#11
chord.util.ProcessExecutor.executeAsynch([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;#Invoke(SPECIAL,Lchord/util/ProcessExecutor$StreamGobbler;,<init>,(Ljava/io/InputStream;Ljava/io/PrintStream;Lchord/util/ProcessExecutor$StreamGobbler;)V)#12
chord.util.ProcessExecutor$StreamGobbler.<init>(Ljava/io/InputStream;Ljava/io/PrintStream;Lchord/util/ProcessExecutor$StreamGobbler;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.ProcessExecutor$StreamGobbler.<init>(Ljava/io/InputStream;Ljava/io/PrintStream;Lchord/util/ProcessExecutor$StreamGobbler;)V#LocalLoad(Ljava/lang/Object;,1)#1
chord.util.ProcessExecutor$StreamGobbler.<init>(Ljava/io/InputStream;Ljava/io/PrintStream;Lchord/util/ProcessExecutor$StreamGobbler;)V#LocalLoad(Ljava/lang/Object;,2)#2
chord.util.ProcessExecutor$StreamGobbler.<init>(Ljava/io/InputStream;Ljava/io/PrintStream;Lchord/util/ProcessExecutor$StreamGobbler;)V#Invoke(SPECIAL,Lchord/util/ProcessExecutor$StreamGobbler;,<init>,(Ljava/io/InputStream;Ljava/io/PrintStream;)V)#3
chord.util.ProcessExecutor$StreamGobbler.<init>(Ljava/io/InputStream;Ljava/io/PrintStream;)V#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.ProcessExecutor$StreamGobbler.<init>(Ljava/io/InputStream;Ljava/io/PrintStream;)V#Invoke(SPECIAL,Ljava/lang/Thread;,<init>,()V)#1
chord.util.ProcessExecutor$StreamGobbler.<init>(Ljava/io/InputStream;Ljava/io/PrintStream;)V#LocalLoad(Ljava/lang/Object;,0)#2
chord.util.ProcessExecutor$StreamGobbler.<init>(Ljava/io/InputStream;Ljava/io/PrintStream;)V#LocalLoad(Ljava/lang/Object;,1)#3
chord.util.ProcessExecutor$StreamGobbler.<init>(Ljava/io/InputStream;Ljava/io/PrintStream;)V#Put(Ljava/io/InputStream;,NONSTATIC,Lchord/util/ProcessExecutor$StreamGobbler;,is)#4
chord.util.ProcessExecutor$StreamGobbler.<init>(Ljava/io/InputStream;Ljava/io/PrintStream;)V#LocalLoad(Ljava/lang/Object;,0)#5
chord.util.ProcessExecutor$StreamGobbler.<init>(Ljava/io/InputStream;Ljava/io/PrintStream;)V#LocalLoad(Ljava/lang/Object;,2)#6
chord.util.ProcessExecutor$StreamGobbler.<init>(Ljava/io/InputStream;Ljava/io/PrintStream;)V#Put(Ljava/io/PrintStream;,NONSTATIC,Lchord/util/ProcessExecutor$StreamGobbler;,os)#7
chord.util.ProcessExecutor$StreamGobbler.<init>(Ljava/io/InputStream;Ljava/io/PrintStream;)V#LocalLoad(Ljava/lang/Object;,0)#8
chord.util.ProcessExecutor$StreamGobbler.<init>(Ljava/io/InputStream;Ljava/io/PrintStream;)V#Constant(I,1)#9
chord.util.ProcessExecutor$StreamGobbler.<init>(Ljava/io/InputStream;Ljava/io/PrintStream;)V#Invoke(VIRTUAL,Lchord/util/ProcessExecutor$StreamGobbler;,setDaemon,(Z)V)#10
chord.util.ProcessExecutor$StreamGobbler.<init>(Ljava/io/InputStream;Ljava/io/PrintStream;)V#Return(V)#11
chord.util.ProcessExecutor$StreamGobbler.<init>(Ljava/io/InputStream;Ljava/io/PrintStream;Lchord/util/ProcessExecutor$StreamGobbler;)V#Return(V)#4
chord.util.ProcessExecutor.executeAsynch([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;#LocalStore(Ljava/lang/Object;,4)#13
chord.util.ProcessExecutor.executeAsynch([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;#New(Lchord/util/ProcessExecutor$StreamGobbler;,0)#14
chord.util.ProcessExecutor.executeAsynch([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;#Dup(1,0)#15
chord.util.ProcessExecutor.executeAsynch([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;#LocalLoad(Ljava/lang/Object;,3)#16
chord.util.ProcessExecutor.executeAsynch([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;#Invoke(VIRTUAL,Ljava/lang/Process;,getInputStream,()Ljava/io/InputStream;)#17
chord.util.ProcessExecutor.executeAsynch([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;#Get(Ljava/io/PrintStream;,STATIC,Ljava/lang/System;,out)#18
chord.util.ProcessExecutor.executeAsynch([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;#Constant(L;,null)#19
chord.util.ProcessExecutor.executeAsynch([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;#Invoke(SPECIAL,Lchord/util/ProcessExecutor$StreamGobbler;,<init>,(Ljava/io/InputStream;Ljava/io/PrintStream;Lchord/util/ProcessExecutor$StreamGobbler;)V)#20
chord.util.ProcessExecutor.executeAsynch([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;#LocalStore(Ljava/lang/Object;,5)#21
chord.util.ProcessExecutor.executeAsynch([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;#LocalLoad(Ljava/lang/Object;,4)#22
chord.util.ProcessExecutor.executeAsynch([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;#Invoke(VIRTUAL,Lchord/util/ProcessExecutor$StreamGobbler;,start,()V)#23
chord.util.ProcessExecutor.executeAsynch([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;#LocalLoad(Ljava/lang/Object;,5)#24
chord.util.ProcessExecutor.executeAsynch([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;#Invoke(VIRTUAL,Lchord/util/ProcessExecutor$StreamGobbler;,start,()V)#25
chord.util.ProcessExecutor.executeAsynch([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;#LocalLoad(Ljava/lang/Object;,3)#26
chord.util.ProcessExecutor.executeAsynch([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;#Return(Ljava/lang/Object;)#27
chord.util.ProcessExecutor.execute([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;I)I#LocalStore(Ljava/lang/Object;,4)#4
chord.util.ProcessExecutor.execute([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;I)I#Constant(L;,null)#5
chord.util.ProcessExecutor.execute([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;I)I#LocalStore(Ljava/lang/Object;,5)#6
chord.util.ProcessExecutor.execute([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;I)I#LocalLoad(I,3)#7
chord.util.ProcessExecutor.execute([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;I)I#Constant(I,0)#8
chord.util.ProcessExecutor.execute([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;I)I#ConditionalBranch(I,le,24)#9
chord.util.ProcessExecutor.execute([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;I)I#LocalLoad(Ljava/lang/Object;,4)#24
chord.util.ProcessExecutor.execute([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;I)I#Invoke(VIRTUAL,Ljava/lang/Process;,waitFor,()I)#25
chord.util.ProcessExecutor$StreamGobbler.run()V#New(Ljava/io/BufferedReader;,0)#0
chord.util.ProcessExecutor$StreamGobbler.run()V#Dup(1,0)#1
chord.util.ProcessExecutor$StreamGobbler.run()V#New(Ljava/io/InputStreamReader;,0)#2
chord.util.ProcessExecutor$StreamGobbler.run()V#Dup(1,0)#3
chord.util.ProcessExecutor$StreamGobbler.run()V#LocalLoad(Ljava/lang/Object;,0)#4
chord.util.ProcessExecutor$StreamGobbler.run()V#Get(Ljava/io/InputStream;,NONSTATIC,Lchord/util/ProcessExecutor$StreamGobbler;,is)#5
chord.util.ProcessExecutor$StreamGobbler.run()V#Invoke(SPECIAL,Ljava/io/InputStreamReader;,<init>,(Ljava/io/InputStream;)V)#6
chord.util.ProcessExecutor$StreamGobbler.run()V#Invoke(SPECIAL,Ljava/io/BufferedReader;,<init>,(Ljava/io/Reader;)V)#7
chord.util.ProcessExecutor$StreamGobbler.run()V#LocalStore(Ljava/lang/Object;,1)#8
chord.util.ProcessExecutor$StreamGobbler.run()V#Goto(14)#9
chord.util.ProcessExecutor$StreamGobbler.run()V#LocalLoad(Ljava/lang/Object;,1)#14
chord.util.ProcessExecutor$StreamGobbler.run()V#Invoke(VIRTUAL,Ljava/io/BufferedReader;,readLine,()Ljava/lang/String;)#15
chord.util.ProcessExecutor$StreamGobbler.run()V#Dup(1,0)#16
chord.util.ProcessExecutor$StreamGobbler.run()V#LocalStore(Ljava/lang/Object;,2)#17
chord.util.ProcessExecutor$StreamGobbler.run()V#Constant(L;,null)#18
chord.util.ProcessExecutor$StreamGobbler.run()V#ConditionalBranch(Ljava/lang/Object;,ne,10)#19
chord.util.ProcessExecutor$StreamGobbler.run()V#LocalLoad(Ljava/lang/Object;,0)#10
chord.util.ProcessExecutor$StreamGobbler.run()V#Get(Ljava/io/PrintStream;,NONSTATIC,Lchord/util/ProcessExecutor$StreamGobbler;,os)#11
chord.util.ProcessExecutor$StreamGobbler.run()V#LocalLoad(Ljava/lang/Object;,2)#12
chord.util.ProcessExecutor$StreamGobbler.run()V#Invoke(VIRTUAL,Ljava/io/PrintStream;,println,(Ljava/lang/String;)V)#13
chord.util.ProcessExecutor$StreamGobbler.run()V#Goto(27)#20
chord.util.ProcessExecutor$StreamGobbler.run()V#Return(V)#27
chord.util.ProcessExecutor.execute([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;I)I#LocalStore(I,6)#26
chord.util.ProcessExecutor.execute([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;I)I#LocalLoad(I,3)#27
chord.util.ProcessExecutor.execute([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;I)I#Constant(I,0)#28
chord.util.ProcessExecutor.execute([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;I)I#ConditionalBranch(I,le,33)#29
chord.util.ProcessExecutor.execute([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;I)I#LocalLoad(I,6)#33
chord.util.ProcessExecutor.execute([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;I)I#Return(I)#34
chord.util.ProcessExecutor.execute([Ljava/lang/String;)I#Return(I)#5
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#LocalStore(I,2)#45
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#LocalLoad(I,2)#46
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#Constant(I,0)#47
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#ConditionalBranch(I,eq,74)#48
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#Get(I,STATIC,Lchord/project/Config;,verbose)#74
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#Constant(I,1)#75
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#ConditionalBranch(I,lt,85)#76
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#Constant(Ljava/lang/String;,"Finished command: '%s'")#77
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#Constant(I,1)#78
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#New([Ljava/lang/Object;,1)#79
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#Dup(1,0)#80
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#Constant(I,0)#81
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,1)#82
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#ArrayStore(Ljava/lang/Object;)#83
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#Invoke(STATIC,Lchord/project/Messages;,log,(Ljava/lang/String;[Ljava/lang/Object;)V)#84
chord.project.OutDirUtils.executeWithFailOnError([Ljava/lang/String;)V#Return(V)#85
chord.bddbddb.Solver.run(Ljava/lang/String;)V#Return(V)#83
chord.project.analyses.DlogAnalysis.run()V#Return(V)#4
chord.project.ClassicProject.runTask(Ljava/lang/String;)Lchord/project/ITask;#LocalLoad(Ljava/lang/Object;,2)#7
chord.project.ClassicProject.runTask(Ljava/lang/String;)Lchord/project/ITask;#Return(Ljava/lang/Object;)#8
chord.project.ClassicProject.run([Ljava/lang/String;)V#Pop(1)#15
chord.project.ClassicProject.run([Ljava/lang/String;)V#LocalLoad(I,3)#16
chord.project.ClassicProject.run([Ljava/lang/String;)V#Constant(I,1)#17
chord.project.ClassicProject.run([Ljava/lang/String;)V#BinaryOp(I,add)#18
chord.project.ClassicProject.run([Ljava/lang/String;)V#LocalStore(I,3)#19
chord.project.ClassicProject.run([Ljava/lang/String;)V#Return(V)#23
chord.project.Main.run()V#Get(Ljava/lang/String;,STATIC,Lchord/project/Config;,printRels)#79
chord.project.Main.run()V#Invoke(STATIC,Lchord/util/Utils;,toArray,(Ljava/lang/String;)[Ljava/lang/String;)#80
chord.project.Main.run()V#LocalStore(Ljava/lang/Object;,6)#81
chord.project.Main.run()V#LocalLoad(Ljava/lang/Object;,6)#82
chord.project.Main.run()V#ArrayLength()#83
chord.project.Main.run()V#Constant(I,0)#84
chord.project.Main.run()V#ConditionalBranch(I,le,89)#85
chord.project.Main.run()V#Get(Z,STATIC,Lchord/project/Config;,printProject)#89
chord.project.Main.run()V#Constant(I,0)#90
chord.project.Main.run()V#ConditionalBranch(I,eq,94)#91
chord.project.Main.run()V#LocalLoad(Ljava/lang/Object;,0)#94
chord.project.Main.run()V#Invoke(VIRTUAL,Lchord/util/Timer;,done,()V)#95
chord.project.Main.run()V#LocalLoad(Ljava/lang/Object;,0)#96
chord.project.Main.run()V#Invoke(VIRTUAL,Lchord/util/Timer;,getDoneTimeStr,()Ljava/lang/String;)#97
chord.util.Timer.getDoneTimeStr()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#0
chord.util.Timer.getDoneTimeStr()Ljava/lang/String;#Invoke(SPECIAL,Lchord/util/Timer;,checkDoneDate,()V)#1
chord.util.Timer.getDoneTimeStr()Ljava/lang/String;#Invoke(STATIC,Ljava/text/DateFormat;,getDateTimeInstance,()Ljava/text/DateFormat;)#2
chord.util.Timer.getDoneTimeStr()Ljava/lang/String;#LocalLoad(Ljava/lang/Object;,0)#3
chord.util.Timer.getDoneTimeStr()Ljava/lang/String;#Get(Ljava/util/Date;,NONSTATIC,Lchord/util/Timer;,doneDate)#4
chord.util.Timer.getDoneTimeStr()Ljava/lang/String;#Invoke(VIRTUAL,Ljava/text/DateFormat;,format,(Ljava/util/Date;)Ljava/lang/String;)#5
chord.util.Timer.getDoneTimeStr()Ljava/lang/String;#Return(Ljava/lang/Object;)#6
chord.project.Main.run()V#LocalStore(Ljava/lang/Object;,7)#98
chord.project.Main.run()V#Get(I,STATIC,Lchord/project/Config;,verbose)#99
chord.project.Main.run()V#Constant(I,0)#100
chord.project.Main.run()V#ConditionalBranch(I,lt,121)#101
chord.project.Main.run()V#Get(Ljava/io/PrintStream;,STATIC,Ljava/lang/System;,out)#102
chord.project.Main.run()V#New(Ljava/lang/StringBuilder;,0)#103
chord.project.Main.run()V#Dup(1,0)#104
chord.project.Main.run()V#Constant(Ljava/lang/String;,"Chord run completed at: ")#105
chord.project.Main.run()V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#106
chord.project.Main.run()V#LocalLoad(Ljava/lang/Object;,7)#107
chord.project.Main.run()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#108
chord.project.Main.run()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#109
chord.project.Main.run()V#Invoke(VIRTUAL,Ljava/io/PrintStream;,println,(Ljava/lang/String;)V)#110
chord.project.Main.run()V#Get(Ljava/io/PrintStream;,STATIC,Ljava/lang/System;,out)#111
chord.project.Main.run()V#New(Ljava/lang/StringBuilder;,0)#112
chord.project.Main.run()V#Dup(1,0)#113
chord.project.Main.run()V#Constant(Ljava/lang/String;,"Total time: ")#114
chord.project.Main.run()V#Invoke(SPECIAL,Ljava/lang/StringBuilder;,<init>,(Ljava/lang/String;)V)#115
chord.project.Main.run()V#LocalLoad(Ljava/lang/Object;,0)#116
chord.project.Main.run()V#Invoke(VIRTUAL,Lchord/util/Timer;,getInclusiveTimeStr,()Ljava/lang/String;)#117
chord.project.Main.run()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,append,(Ljava/lang/String;)Ljava/lang/StringBuilder;)#118
chord.project.Main.run()V#Invoke(VIRTUAL,Ljava/lang/StringBuilder;,toString,()Ljava/lang/String;)#119
chord.project.Main.run()V#Invoke(VIRTUAL,Ljava/io/PrintStream;,println,(Ljava/lang/String;)V)#120
chord.project.Main.run()V#Return(V)#121
chord.project.Main.main([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#80
chord.project.Main.main([Ljava/lang/String;)V#Constant(L;,null)#81
chord.project.Main.main([Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,eq,85)#82
chord.project.Main.main([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#83
chord.project.Main.main([Ljava/lang/String;)V#Invoke(VIRTUAL,Ljava/io/PrintStream;,close,()V)#84
chord.project.Main.main([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,4)#85
chord.project.Main.main([Ljava/lang/String;)V#Constant(L;,null)#86
chord.project.Main.main([Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,eq,93)#87
chord.project.Main.main([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,4)#88
chord.project.Main.main([Ljava/lang/String;)V#LocalLoad(Ljava/lang/Object;,3)#89
chord.project.Main.main([Ljava/lang/String;)V#ConditionalBranch(Ljava/lang/Object;,eq,93)#90
chord.project.Main.main([Ljava/lang/String;)V#Return(V)#93
